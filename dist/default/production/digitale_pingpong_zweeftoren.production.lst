

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 19 09:11:34 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    28                           	psect	inittext,global,class=CODE,space=0,delta=2
    29                           	psect	clrtext,global,class=CODE,space=0,delta=2
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=2
    38                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    41                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    47                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    49                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    50                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    53                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    54                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    55                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    57                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=3
    58                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    59                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=3
    63                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    64                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    65                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    85                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2,group=2
    86                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	intentry,global,class=CODE,space=0,delta=2
   104                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2,group=2
   114                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   126                           	dabs	1,0x7E,2
   127     0000                     
   128                           ; Generated 11/01/2024 GMT
   129                           ; 
   130                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution. Publication is not required when
   144                           ;        this file is used in an embedded application.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC16F18345 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162     0008                     bsr             equ	8
   163     0005                     fsr0h           equ	5
   164     0004                     fsr0l           equ	4
   165     0007                     fsr1h           equ	7
   166     0006                     fsr1l           equ	6
   167     0000                     indf            equ	0
   168     0000                     indf0           equ	0
   169     0001                     indf1           equ	1
   170     000B                     intcon          equ	11
   171     0002                     pc              equ	2
   172     0002                     pcl             equ	2
   173     000A                     pclath          equ	10
   174     0003                     status          equ	3
   175     0009                     wreg            equ	9
   176     0000                     INDF0           equ	0	;# 
   177     0001                     INDF1           equ	1	;# 
   178     0002                     PCL             equ	2	;# 
   179     0003                     STATUS          equ	3	;# 
   180     0004                     FSR0L           equ	4	;# 
   181     0005                     FSR0H           equ	5	;# 
   182     0006                     FSR1L           equ	6	;# 
   183     0007                     FSR1H           equ	7	;# 
   184     0008                     BSR             equ	8	;# 
   185     0009                     WREG            equ	9	;# 
   186     000A                     PCLATH          equ	10	;# 
   187     000B                     INTCON          equ	11	;# 
   188     000C                     PORTA           equ	12	;# 
   189     000D                     PORTB           equ	13	;# 
   190     000E                     PORTC           equ	14	;# 
   191     0010                     PIR0            equ	16	;# 
   192     0011                     PIR1            equ	17	;# 
   193     0012                     PIR2            equ	18	;# 
   194     0013                     PIR3            equ	19	;# 
   195     0014                     PIR4            equ	20	;# 
   196     0015                     TMR0L           equ	21	;# 
   197     0015                     TMR0            equ	21	;# 
   198     0016                     TMR0H           equ	22	;# 
   199     0016                     PR0             equ	22	;# 
   200     0017                     T0CON0          equ	23	;# 
   201     0018                     T0CON1          equ	24	;# 
   202     0019                     TMR1            equ	25	;# 
   203     0019                     TMR1L           equ	25	;# 
   204     001A                     TMR1H           equ	26	;# 
   205     001B                     T1CON           equ	27	;# 
   206     001C                     T1GCON          equ	28	;# 
   207     001D                     TMR2            equ	29	;# 
   208     001E                     PR2             equ	30	;# 
   209     001F                     T2CON           equ	31	;# 
   210     008C                     TRISA           equ	140	;# 
   211     008D                     TRISB           equ	141	;# 
   212     008E                     TRISC           equ	142	;# 
   213     0090                     PIE0            equ	144	;# 
   214     0091                     PIE1            equ	145	;# 
   215     0092                     PIE2            equ	146	;# 
   216     0093                     PIE3            equ	147	;# 
   217     0094                     PIE4            equ	148	;# 
   218     0097                     WDTCON          equ	151	;# 
   219     009B                     ADRES           equ	155	;# 
   220     009B                     ADRESL          equ	155	;# 
   221     009C                     ADRESH          equ	156	;# 
   222     009D                     ADCON0          equ	157	;# 
   223     009E                     ADCON1          equ	158	;# 
   224     009F                     ADACT           equ	159	;# 
   225     010C                     LATA            equ	268	;# 
   226     010D                     LATB            equ	269	;# 
   227     010E                     LATC            equ	270	;# 
   228     0111                     CM1CON0         equ	273	;# 
   229     0112                     CM1CON1         equ	274	;# 
   230     0113                     CM2CON0         equ	275	;# 
   231     0114                     CM2CON1         equ	276	;# 
   232     0115                     CMOUT           equ	277	;# 
   233     0116                     BORCON          equ	278	;# 
   234     0117                     FVRCON          equ	279	;# 
   235     0118                     DACCON0         equ	280	;# 
   236     0119                     DACCON1         equ	281	;# 
   237     018C                     ANSELA          equ	396	;# 
   238     018D                     ANSELB          equ	397	;# 
   239     018E                     ANSELC          equ	398	;# 
   240     0197                     VREGCON         equ	407	;# 
   241     0199                     RC1REG          equ	409	;# 
   242     0199                     RCREG           equ	409	;# 
   243     0199                     RCREG1          equ	409	;# 
   244     019A                     TX1REG          equ	410	;# 
   245     019A                     TXREG1          equ	410	;# 
   246     019A                     TXREG           equ	410	;# 
   247     019B                     SP1BRG          equ	411	;# 
   248     019B                     SPBRG           equ	411	;# 
   249     019B                     SP1BRGL         equ	411	;# 
   250     019B                     SPBRG1          equ	411	;# 
   251     019B                     SPBRGL          equ	411	;# 
   252     019C                     SP1BRGH         equ	412	;# 
   253     019C                     SPBRGH          equ	412	;# 
   254     019C                     SPBRGH1         equ	412	;# 
   255     019D                     RC1STA          equ	413	;# 
   256     019D                     RCSTA1          equ	413	;# 
   257     019D                     RCSTA           equ	413	;# 
   258     019E                     TX1STA          equ	414	;# 
   259     019E                     TXSTA1          equ	414	;# 
   260     019E                     TXSTA           equ	414	;# 
   261     019F                     BAUD1CON        equ	415	;# 
   262     019F                     BAUDCON1        equ	415	;# 
   263     019F                     BAUDCTL1        equ	415	;# 
   264     019F                     BAUDCON         equ	415	;# 
   265     019F                     BAUDCTL         equ	415	;# 
   266     020C                     WPUA            equ	524	;# 
   267     020D                     WPUB            equ	525	;# 
   268     020E                     WPUC            equ	526	;# 
   269     0211                     SSP1BUF         equ	529	;# 
   270     0211                     SSPBUF          equ	529	;# 
   271     0212                     SSP1ADD         equ	530	;# 
   272     0212                     SSPADD          equ	530	;# 
   273     0213                     SSP1MSK         equ	531	;# 
   274     0213                     SSPMSK          equ	531	;# 
   275     0214                     SSP1STAT        equ	532	;# 
   276     0214                     SSPSTAT         equ	532	;# 
   277     0215                     SSP1CON1        equ	533	;# 
   278     0215                     SSPCON          equ	533	;# 
   279     0215                     SSPCON1         equ	533	;# 
   280     0215                     SSP1CON         equ	533	;# 
   281     0216                     SSP1CON2        equ	534	;# 
   282     0216                     SSPCON2         equ	534	;# 
   283     0217                     SSP1CON3        equ	535	;# 
   284     0217                     SSPCON3         equ	535	;# 
   285     0219                     SSP2BUF         equ	537	;# 
   286     021A                     SSP2ADD         equ	538	;# 
   287     021B                     SSP2MSK         equ	539	;# 
   288     021C                     SSP2STAT        equ	540	;# 
   289     021D                     SSP2CON1        equ	541	;# 
   290     021D                     SSP2CON         equ	541	;# 
   291     021E                     SSP2CON2        equ	542	;# 
   292     021F                     SSP2CON3        equ	543	;# 
   293     028C                     ODCONA          equ	652	;# 
   294     028D                     ODCONB          equ	653	;# 
   295     028E                     ODCONC          equ	654	;# 
   296     0291                     CCPR1           equ	657	;# 
   297     0291                     CCPR1L          equ	657	;# 
   298     0292                     CCPR1H          equ	658	;# 
   299     0293                     CCP1CON         equ	659	;# 
   300     0294                     CCP1CAP         equ	660	;# 
   301     0295                     CCPR2           equ	661	;# 
   302     0295                     CCPR2L          equ	661	;# 
   303     0296                     CCPR2H          equ	662	;# 
   304     0297                     CCP2CON         equ	663	;# 
   305     0298                     CCP2CAP         equ	664	;# 
   306     029F                     CCPTMRS         equ	671	;# 
   307     030C                     SLRCONA         equ	780	;# 
   308     030D                     SLRCONB         equ	781	;# 
   309     030E                     SLRCONC         equ	782	;# 
   310     0311                     CCPR3           equ	785	;# 
   311     0311                     CCPR3L          equ	785	;# 
   312     0312                     CCPR3H          equ	786	;# 
   313     0313                     CCP3CON         equ	787	;# 
   314     0314                     CCP3CAP         equ	788	;# 
   315     0315                     CCPR4           equ	789	;# 
   316     0315                     CCPR4L          equ	789	;# 
   317     0316                     CCPR4H          equ	790	;# 
   318     0317                     CCP4CON         equ	791	;# 
   319     0318                     CCP4CAP         equ	792	;# 
   320     038C                     INLVLA          equ	908	;# 
   321     038D                     INLVLB          equ	909	;# 
   322     038E                     INLVLC          equ	910	;# 
   323     0391                     IOCAP           equ	913	;# 
   324     0392                     IOCAN           equ	914	;# 
   325     0393                     IOCAF           equ	915	;# 
   326     0394                     IOCBP           equ	916	;# 
   327     0395                     IOCBN           equ	917	;# 
   328     0396                     IOCBF           equ	918	;# 
   329     0397                     IOCCP           equ	919	;# 
   330     0398                     IOCCN           equ	920	;# 
   331     0399                     IOCCF           equ	921	;# 
   332     039A                     CLKRCON         equ	922	;# 
   333     039C                     MDCON           equ	924	;# 
   334     039D                     MDSRC           equ	925	;# 
   335     039E                     MDCARH          equ	926	;# 
   336     039F                     MDCARL          equ	927	;# 
   337     0411                     TMR3            equ	1041	;# 
   338     0411                     TMR3L           equ	1041	;# 
   339     0412                     TMR3H           equ	1042	;# 
   340     0413                     T3CON           equ	1043	;# 
   341     0414                     T3GCON          equ	1044	;# 
   342     0415                     TMR4            equ	1045	;# 
   343     0416                     PR4             equ	1046	;# 
   344     0417                     T4CON           equ	1047	;# 
   345     0418                     TMR5            equ	1048	;# 
   346     0418                     TMR5L           equ	1048	;# 
   347     0419                     TMR5H           equ	1049	;# 
   348     041A                     T5CON           equ	1050	;# 
   349     041B                     T5GCON          equ	1051	;# 
   350     041C                     TMR6            equ	1052	;# 
   351     041D                     PR6             equ	1053	;# 
   352     041E                     T6CON           equ	1054	;# 
   353     041F                     CCDCON          equ	1055	;# 
   354     0498                     NCO1ACC         equ	1176	;# 
   355     0498                     NCO1ACCL        equ	1176	;# 
   356     0499                     NCO1ACCH        equ	1177	;# 
   357     049A                     NCO1ACCU        equ	1178	;# 
   358     049B                     NCO1INC         equ	1179	;# 
   359     049B                     NCO1INCL        equ	1179	;# 
   360     049C                     NCO1INCH        equ	1180	;# 
   361     049D                     NCO1INCU        equ	1181	;# 
   362     049E                     NCO1CON         equ	1182	;# 
   363     049F                     NCO1CLK         equ	1183	;# 
   364     0617                     PWM5DCL         equ	1559	;# 
   365     0618                     PWM5DCH         equ	1560	;# 
   366     0619                     PWM5CON         equ	1561	;# 
   367     0619                     PWM5CON0        equ	1561	;# 
   368     061A                     PWM6DCL         equ	1562	;# 
   369     061B                     PWM6DCH         equ	1563	;# 
   370     061C                     PWM6CON         equ	1564	;# 
   371     061C                     PWM6CON0        equ	1564	;# 
   372     061F                     PWMTMRS         equ	1567	;# 
   373     0691                     CWG1CLKCON      equ	1681	;# 
   374     0692                     CWG1DAT         equ	1682	;# 
   375     0693                     CWG1DBR         equ	1683	;# 
   376     0694                     CWG1DBF         equ	1684	;# 
   377     0695                     CWG1CON0        equ	1685	;# 
   378     0696                     CWG1CON1        equ	1686	;# 
   379     0697                     CWG1AS0         equ	1687	;# 
   380     0698                     CWG1AS1         equ	1688	;# 
   381     0699                     CWG1STR         equ	1689	;# 
   382     0711                     CWG2CLKCON      equ	1809	;# 
   383     0712                     CWG2DAT         equ	1810	;# 
   384     0713                     CWG2DBR         equ	1811	;# 
   385     0714                     CWG2DBF         equ	1812	;# 
   386     0715                     CWG2CON0        equ	1813	;# 
   387     0716                     CWG2CON1        equ	1814	;# 
   388     0717                     CWG2AS0         equ	1815	;# 
   389     0718                     CWG2AS1         equ	1816	;# 
   390     0719                     CWG2STR         equ	1817	;# 
   391     0891                     NVMADR          equ	2193	;# 
   392     0891                     EEADR           equ	2193	;# 
   393     0891                     PMADR           equ	2193	;# 
   394     0891                     NVMADRL         equ	2193	;# 
   395     0891                     EEADRL          equ	2193	;# 
   396     0891                     PMADRL          equ	2193	;# 
   397     0892                     NVMADRH         equ	2194	;# 
   398     0892                     EEADRH          equ	2194	;# 
   399     0892                     PMADRH          equ	2194	;# 
   400     0893                     NVMDAT          equ	2195	;# 
   401     0893                     EEDAT           equ	2195	;# 
   402     0893                     PMDAT           equ	2195	;# 
   403     0893                     NVMDATL         equ	2195	;# 
   404     0893                     EEDATL          equ	2195	;# 
   405     0893                     PMDATL          equ	2195	;# 
   406     0894                     NVMDATH         equ	2196	;# 
   407     0894                     EEDATH          equ	2196	;# 
   408     0894                     PMDATH          equ	2196	;# 
   409     0895                     NVMCON1         equ	2197	;# 
   410     0895                     EECON1          equ	2197	;# 
   411     0895                     PMCON1          equ	2197	;# 
   412     0896                     NVMCON2         equ	2198	;# 
   413     0896                     EECON2          equ	2198	;# 
   414     0896                     PMCON2          equ	2198	;# 
   415     089B                     PCON0           equ	2203	;# 
   416     0911                     PMD0            equ	2321	;# 
   417     0912                     PMD1            equ	2322	;# 
   418     0913                     PMD2            equ	2323	;# 
   419     0914                     PMD3            equ	2324	;# 
   420     0915                     PMD4            equ	2325	;# 
   421     0916                     PMD5            equ	2326	;# 
   422     0918                     CPUDOZE         equ	2328	;# 
   423     0919                     OSCCON1         equ	2329	;# 
   424     091A                     OSCCON2         equ	2330	;# 
   425     091B                     OSCCON3         equ	2331	;# 
   426     091C                     OSCSTAT1        equ	2332	;# 
   427     091D                     OSCEN           equ	2333	;# 
   428     091E                     OSCTUNE         equ	2334	;# 
   429     091F                     OSCFRQ          equ	2335	;# 
   430     0E0F                     PPSLOCK         equ	3599	;# 
   431     0E10                     INTPPS          equ	3600	;# 
   432     0E11                     T0CKIPPS        equ	3601	;# 
   433     0E12                     T1CKIPPS        equ	3602	;# 
   434     0E13                     T1GPPS          equ	3603	;# 
   435     0E14                     CCP1PPS         equ	3604	;# 
   436     0E15                     CCP2PPS         equ	3605	;# 
   437     0E16                     CCP3PPS         equ	3606	;# 
   438     0E17                     CCP4PPS         equ	3607	;# 
   439     0E18                     CWG1PPS         equ	3608	;# 
   440     0E19                     CWG2PPS         equ	3609	;# 
   441     0E1A                     MDCIN1PPS       equ	3610	;# 
   442     0E1B                     MDCIN2PPS       equ	3611	;# 
   443     0E1C                     MDMINPPS        equ	3612	;# 
   444     0E1D                     SSP2CLKPPS      equ	3613	;# 
   445     0E1E                     SSP2DATPPS      equ	3614	;# 
   446     0E1F                     SSP2SSPPS       equ	3615	;# 
   447     0E20                     SSP1CLKPPS      equ	3616	;# 
   448     0E21                     SSP1DATPPS      equ	3617	;# 
   449     0E22                     SSP1SSPPS       equ	3618	;# 
   450     0E24                     RXPPS           equ	3620	;# 
   451     0E25                     TXPPS           equ	3621	;# 
   452     0E28                     CLCIN0PPS       equ	3624	;# 
   453     0E29                     CLCIN1PPS       equ	3625	;# 
   454     0E2A                     CLCIN2PPS       equ	3626	;# 
   455     0E2B                     CLCIN3PPS       equ	3627	;# 
   456     0E2C                     T3CKIPPS        equ	3628	;# 
   457     0E2D                     T3GPPS          equ	3629	;# 
   458     0E2E                     T5CKIPPS        equ	3630	;# 
   459     0E2F                     T5GPPS          equ	3631	;# 
   460     0E90                     RA0PPS          equ	3728	;# 
   461     0E91                     RA1PPS          equ	3729	;# 
   462     0E92                     RA2PPS          equ	3730	;# 
   463     0E94                     RA4PPS          equ	3732	;# 
   464     0E95                     RA5PPS          equ	3733	;# 
   465     0E9C                     RB4PPS          equ	3740	;# 
   466     0E9D                     RB5PPS          equ	3741	;# 
   467     0E9E                     RB6PPS          equ	3742	;# 
   468     0E9F                     RB7PPS          equ	3743	;# 
   469     0EA0                     RC0PPS          equ	3744	;# 
   470     0EA1                     RC1PPS          equ	3745	;# 
   471     0EA2                     RC2PPS          equ	3746	;# 
   472     0EA3                     RC3PPS          equ	3747	;# 
   473     0EA4                     RC4PPS          equ	3748	;# 
   474     0EA5                     RC5PPS          equ	3749	;# 
   475     0EA6                     RC6PPS          equ	3750	;# 
   476     0EA7                     RC7PPS          equ	3751	;# 
   477     0F0F                     CLCDATA         equ	3855	;# 
   478     0F10                     CLC1CON         equ	3856	;# 
   479     0F11                     CLC1POL         equ	3857	;# 
   480     0F12                     CLC1SEL0        equ	3858	;# 
   481     0F13                     CLC1SEL1        equ	3859	;# 
   482     0F14                     CLC1SEL2        equ	3860	;# 
   483     0F15                     CLC1SEL3        equ	3861	;# 
   484     0F16                     CLC1GLS0        equ	3862	;# 
   485     0F17                     CLC1GLS1        equ	3863	;# 
   486     0F18                     CLC1GLS2        equ	3864	;# 
   487     0F19                     CLC1GLS3        equ	3865	;# 
   488     0F1A                     CLC2CON         equ	3866	;# 
   489     0F1B                     CLC2POL         equ	3867	;# 
   490     0F1C                     CLC2SEL0        equ	3868	;# 
   491     0F1D                     CLC2SEL1        equ	3869	;# 
   492     0F1E                     CLC2SEL2        equ	3870	;# 
   493     0F1F                     CLC2SEL3        equ	3871	;# 
   494     0F20                     CLC2GLS0        equ	3872	;# 
   495     0F21                     CLC2GLS1        equ	3873	;# 
   496     0F22                     CLC2GLS2        equ	3874	;# 
   497     0F23                     CLC2GLS3        equ	3875	;# 
   498     0F24                     CLC3CON         equ	3876	;# 
   499     0F25                     CLC3POL         equ	3877	;# 
   500     0F26                     CLC3SEL0        equ	3878	;# 
   501     0F27                     CLC3SEL1        equ	3879	;# 
   502     0F28                     CLC3SEL2        equ	3880	;# 
   503     0F29                     CLC3SEL3        equ	3881	;# 
   504     0F2A                     CLC3GLS0        equ	3882	;# 
   505     0F2B                     CLC3GLS1        equ	3883	;# 
   506     0F2C                     CLC3GLS2        equ	3884	;# 
   507     0F2D                     CLC3GLS3        equ	3885	;# 
   508     0F2E                     CLC4CON         equ	3886	;# 
   509     0F2F                     CLC4POL         equ	3887	;# 
   510     0F30                     CLC4SEL0        equ	3888	;# 
   511     0F31                     CLC4SEL1        equ	3889	;# 
   512     0F32                     CLC4SEL2        equ	3890	;# 
   513     0F33                     CLC4SEL3        equ	3891	;# 
   514     0F34                     CLC4GLS0        equ	3892	;# 
   515     0F35                     CLC4GLS1        equ	3893	;# 
   516     0F36                     CLC4GLS2        equ	3894	;# 
   517     0F37                     CLC4GLS3        equ	3895	;# 
   518     0FE4                     STATUS_SHAD     equ	4068	;# 
   519     0FE5                     WREG_SHAD       equ	4069	;# 
   520     0FE6                     BSR_SHAD        equ	4070	;# 
   521     0FE7                     PCLATH_SHAD     equ	4071	;# 
   522     0FE8                     FSR0L_SHAD      equ	4072	;# 
   523     0FE9                     FSR0H_SHAD      equ	4073	;# 
   524     0FEA                     FSR1L_SHAD      equ	4074	;# 
   525     0FEB                     FSR1H_SHAD      equ	4075	;# 
   526     0FED                     STKPTR          equ	4077	;# 
   527     0FEE                     TOSL            equ	4078	;# 
   528     0FEF                     TOSH            equ	4079	;# 
   529     0000                     INDF0           equ	0	;# 
   530     0001                     INDF1           equ	1	;# 
   531     0002                     PCL             equ	2	;# 
   532     0003                     STATUS          equ	3	;# 
   533     0004                     FSR0L           equ	4	;# 
   534     0005                     FSR0H           equ	5	;# 
   535     0006                     FSR1L           equ	6	;# 
   536     0007                     FSR1H           equ	7	;# 
   537     0008                     BSR             equ	8	;# 
   538     0009                     WREG            equ	9	;# 
   539     000A                     PCLATH          equ	10	;# 
   540     000B                     INTCON          equ	11	;# 
   541     000C                     PORTA           equ	12	;# 
   542     000D                     PORTB           equ	13	;# 
   543     000E                     PORTC           equ	14	;# 
   544     0010                     PIR0            equ	16	;# 
   545     0011                     PIR1            equ	17	;# 
   546     0012                     PIR2            equ	18	;# 
   547     0013                     PIR3            equ	19	;# 
   548     0014                     PIR4            equ	20	;# 
   549     0015                     TMR0L           equ	21	;# 
   550     0015                     TMR0            equ	21	;# 
   551     0016                     TMR0H           equ	22	;# 
   552     0016                     PR0             equ	22	;# 
   553     0017                     T0CON0          equ	23	;# 
   554     0018                     T0CON1          equ	24	;# 
   555     0019                     TMR1            equ	25	;# 
   556     0019                     TMR1L           equ	25	;# 
   557     001A                     TMR1H           equ	26	;# 
   558     001B                     T1CON           equ	27	;# 
   559     001C                     T1GCON          equ	28	;# 
   560     001D                     TMR2            equ	29	;# 
   561     001E                     PR2             equ	30	;# 
   562     001F                     T2CON           equ	31	;# 
   563     008C                     TRISA           equ	140	;# 
   564     008D                     TRISB           equ	141	;# 
   565     008E                     TRISC           equ	142	;# 
   566     0090                     PIE0            equ	144	;# 
   567     0091                     PIE1            equ	145	;# 
   568     0092                     PIE2            equ	146	;# 
   569     0093                     PIE3            equ	147	;# 
   570     0094                     PIE4            equ	148	;# 
   571     0097                     WDTCON          equ	151	;# 
   572     009B                     ADRES           equ	155	;# 
   573     009B                     ADRESL          equ	155	;# 
   574     009C                     ADRESH          equ	156	;# 
   575     009D                     ADCON0          equ	157	;# 
   576     009E                     ADCON1          equ	158	;# 
   577     009F                     ADACT           equ	159	;# 
   578     010C                     LATA            equ	268	;# 
   579     010D                     LATB            equ	269	;# 
   580     010E                     LATC            equ	270	;# 
   581     0111                     CM1CON0         equ	273	;# 
   582     0112                     CM1CON1         equ	274	;# 
   583     0113                     CM2CON0         equ	275	;# 
   584     0114                     CM2CON1         equ	276	;# 
   585     0115                     CMOUT           equ	277	;# 
   586     0116                     BORCON          equ	278	;# 
   587     0117                     FVRCON          equ	279	;# 
   588     0118                     DACCON0         equ	280	;# 
   589     0119                     DACCON1         equ	281	;# 
   590     018C                     ANSELA          equ	396	;# 
   591     018D                     ANSELB          equ	397	;# 
   592     018E                     ANSELC          equ	398	;# 
   593     0197                     VREGCON         equ	407	;# 
   594     0199                     RC1REG          equ	409	;# 
   595     0199                     RCREG           equ	409	;# 
   596     0199                     RCREG1          equ	409	;# 
   597     019A                     TX1REG          equ	410	;# 
   598     019A                     TXREG1          equ	410	;# 
   599     019A                     TXREG           equ	410	;# 
   600     019B                     SP1BRG          equ	411	;# 
   601     019B                     SPBRG           equ	411	;# 
   602     019B                     SP1BRGL         equ	411	;# 
   603     019B                     SPBRG1          equ	411	;# 
   604     019B                     SPBRGL          equ	411	;# 
   605     019C                     SP1BRGH         equ	412	;# 
   606     019C                     SPBRGH          equ	412	;# 
   607     019C                     SPBRGH1         equ	412	;# 
   608     019D                     RC1STA          equ	413	;# 
   609     019D                     RCSTA1          equ	413	;# 
   610     019D                     RCSTA           equ	413	;# 
   611     019E                     TX1STA          equ	414	;# 
   612     019E                     TXSTA1          equ	414	;# 
   613     019E                     TXSTA           equ	414	;# 
   614     019F                     BAUD1CON        equ	415	;# 
   615     019F                     BAUDCON1        equ	415	;# 
   616     019F                     BAUDCTL1        equ	415	;# 
   617     019F                     BAUDCON         equ	415	;# 
   618     019F                     BAUDCTL         equ	415	;# 
   619     020C                     WPUA            equ	524	;# 
   620     020D                     WPUB            equ	525	;# 
   621     020E                     WPUC            equ	526	;# 
   622     0211                     SSP1BUF         equ	529	;# 
   623     0211                     SSPBUF          equ	529	;# 
   624     0212                     SSP1ADD         equ	530	;# 
   625     0212                     SSPADD          equ	530	;# 
   626     0213                     SSP1MSK         equ	531	;# 
   627     0213                     SSPMSK          equ	531	;# 
   628     0214                     SSP1STAT        equ	532	;# 
   629     0214                     SSPSTAT         equ	532	;# 
   630     0215                     SSP1CON1        equ	533	;# 
   631     0215                     SSPCON          equ	533	;# 
   632     0215                     SSPCON1         equ	533	;# 
   633     0215                     SSP1CON         equ	533	;# 
   634     0216                     SSP1CON2        equ	534	;# 
   635     0216                     SSPCON2         equ	534	;# 
   636     0217                     SSP1CON3        equ	535	;# 
   637     0217                     SSPCON3         equ	535	;# 
   638     0219                     SSP2BUF         equ	537	;# 
   639     021A                     SSP2ADD         equ	538	;# 
   640     021B                     SSP2MSK         equ	539	;# 
   641     021C                     SSP2STAT        equ	540	;# 
   642     021D                     SSP2CON1        equ	541	;# 
   643     021D                     SSP2CON         equ	541	;# 
   644     021E                     SSP2CON2        equ	542	;# 
   645     021F                     SSP2CON3        equ	543	;# 
   646     028C                     ODCONA          equ	652	;# 
   647     028D                     ODCONB          equ	653	;# 
   648     028E                     ODCONC          equ	654	;# 
   649     0291                     CCPR1           equ	657	;# 
   650     0291                     CCPR1L          equ	657	;# 
   651     0292                     CCPR1H          equ	658	;# 
   652     0293                     CCP1CON         equ	659	;# 
   653     0294                     CCP1CAP         equ	660	;# 
   654     0295                     CCPR2           equ	661	;# 
   655     0295                     CCPR2L          equ	661	;# 
   656     0296                     CCPR2H          equ	662	;# 
   657     0297                     CCP2CON         equ	663	;# 
   658     0298                     CCP2CAP         equ	664	;# 
   659     029F                     CCPTMRS         equ	671	;# 
   660     030C                     SLRCONA         equ	780	;# 
   661     030D                     SLRCONB         equ	781	;# 
   662     030E                     SLRCONC         equ	782	;# 
   663     0311                     CCPR3           equ	785	;# 
   664     0311                     CCPR3L          equ	785	;# 
   665     0312                     CCPR3H          equ	786	;# 
   666     0313                     CCP3CON         equ	787	;# 
   667     0314                     CCP3CAP         equ	788	;# 
   668     0315                     CCPR4           equ	789	;# 
   669     0315                     CCPR4L          equ	789	;# 
   670     0316                     CCPR4H          equ	790	;# 
   671     0317                     CCP4CON         equ	791	;# 
   672     0318                     CCP4CAP         equ	792	;# 
   673     038C                     INLVLA          equ	908	;# 
   674     038D                     INLVLB          equ	909	;# 
   675     038E                     INLVLC          equ	910	;# 
   676     0391                     IOCAP           equ	913	;# 
   677     0392                     IOCAN           equ	914	;# 
   678     0393                     IOCAF           equ	915	;# 
   679     0394                     IOCBP           equ	916	;# 
   680     0395                     IOCBN           equ	917	;# 
   681     0396                     IOCBF           equ	918	;# 
   682     0397                     IOCCP           equ	919	;# 
   683     0398                     IOCCN           equ	920	;# 
   684     0399                     IOCCF           equ	921	;# 
   685     039A                     CLKRCON         equ	922	;# 
   686     039C                     MDCON           equ	924	;# 
   687     039D                     MDSRC           equ	925	;# 
   688     039E                     MDCARH          equ	926	;# 
   689     039F                     MDCARL          equ	927	;# 
   690     0411                     TMR3            equ	1041	;# 
   691     0411                     TMR3L           equ	1041	;# 
   692     0412                     TMR3H           equ	1042	;# 
   693     0413                     T3CON           equ	1043	;# 
   694     0414                     T3GCON          equ	1044	;# 
   695     0415                     TMR4            equ	1045	;# 
   696     0416                     PR4             equ	1046	;# 
   697     0417                     T4CON           equ	1047	;# 
   698     0418                     TMR5            equ	1048	;# 
   699     0418                     TMR5L           equ	1048	;# 
   700     0419                     TMR5H           equ	1049	;# 
   701     041A                     T5CON           equ	1050	;# 
   702     041B                     T5GCON          equ	1051	;# 
   703     041C                     TMR6            equ	1052	;# 
   704     041D                     PR6             equ	1053	;# 
   705     041E                     T6CON           equ	1054	;# 
   706     041F                     CCDCON          equ	1055	;# 
   707     0498                     NCO1ACC         equ	1176	;# 
   708     0498                     NCO1ACCL        equ	1176	;# 
   709     0499                     NCO1ACCH        equ	1177	;# 
   710     049A                     NCO1ACCU        equ	1178	;# 
   711     049B                     NCO1INC         equ	1179	;# 
   712     049B                     NCO1INCL        equ	1179	;# 
   713     049C                     NCO1INCH        equ	1180	;# 
   714     049D                     NCO1INCU        equ	1181	;# 
   715     049E                     NCO1CON         equ	1182	;# 
   716     049F                     NCO1CLK         equ	1183	;# 
   717     0617                     PWM5DCL         equ	1559	;# 
   718     0618                     PWM5DCH         equ	1560	;# 
   719     0619                     PWM5CON         equ	1561	;# 
   720     0619                     PWM5CON0        equ	1561	;# 
   721     061A                     PWM6DCL         equ	1562	;# 
   722     061B                     PWM6DCH         equ	1563	;# 
   723     061C                     PWM6CON         equ	1564	;# 
   724     061C                     PWM6CON0        equ	1564	;# 
   725     061F                     PWMTMRS         equ	1567	;# 
   726     0691                     CWG1CLKCON      equ	1681	;# 
   727     0692                     CWG1DAT         equ	1682	;# 
   728     0693                     CWG1DBR         equ	1683	;# 
   729     0694                     CWG1DBF         equ	1684	;# 
   730     0695                     CWG1CON0        equ	1685	;# 
   731     0696                     CWG1CON1        equ	1686	;# 
   732     0697                     CWG1AS0         equ	1687	;# 
   733     0698                     CWG1AS1         equ	1688	;# 
   734     0699                     CWG1STR         equ	1689	;# 
   735     0711                     CWG2CLKCON      equ	1809	;# 
   736     0712                     CWG2DAT         equ	1810	;# 
   737     0713                     CWG2DBR         equ	1811	;# 
   738     0714                     CWG2DBF         equ	1812	;# 
   739     0715                     CWG2CON0        equ	1813	;# 
   740     0716                     CWG2CON1        equ	1814	;# 
   741     0717                     CWG2AS0         equ	1815	;# 
   742     0718                     CWG2AS1         equ	1816	;# 
   743     0719                     CWG2STR         equ	1817	;# 
   744     0891                     NVMADR          equ	2193	;# 
   745     0891                     EEADR           equ	2193	;# 
   746     0891                     PMADR           equ	2193	;# 
   747     0891                     NVMADRL         equ	2193	;# 
   748     0891                     EEADRL          equ	2193	;# 
   749     0891                     PMADRL          equ	2193	;# 
   750     0892                     NVMADRH         equ	2194	;# 
   751     0892                     EEADRH          equ	2194	;# 
   752     0892                     PMADRH          equ	2194	;# 
   753     0893                     NVMDAT          equ	2195	;# 
   754     0893                     EEDAT           equ	2195	;# 
   755     0893                     PMDAT           equ	2195	;# 
   756     0893                     NVMDATL         equ	2195	;# 
   757     0893                     EEDATL          equ	2195	;# 
   758     0893                     PMDATL          equ	2195	;# 
   759     0894                     NVMDATH         equ	2196	;# 
   760     0894                     EEDATH          equ	2196	;# 
   761     0894                     PMDATH          equ	2196	;# 
   762     0895                     NVMCON1         equ	2197	;# 
   763     0895                     EECON1          equ	2197	;# 
   764     0895                     PMCON1          equ	2197	;# 
   765     0896                     NVMCON2         equ	2198	;# 
   766     0896                     EECON2          equ	2198	;# 
   767     0896                     PMCON2          equ	2198	;# 
   768     089B                     PCON0           equ	2203	;# 
   769     0911                     PMD0            equ	2321	;# 
   770     0912                     PMD1            equ	2322	;# 
   771     0913                     PMD2            equ	2323	;# 
   772     0914                     PMD3            equ	2324	;# 
   773     0915                     PMD4            equ	2325	;# 
   774     0916                     PMD5            equ	2326	;# 
   775     0918                     CPUDOZE         equ	2328	;# 
   776     0919                     OSCCON1         equ	2329	;# 
   777     091A                     OSCCON2         equ	2330	;# 
   778     091B                     OSCCON3         equ	2331	;# 
   779     091C                     OSCSTAT1        equ	2332	;# 
   780     091D                     OSCEN           equ	2333	;# 
   781     091E                     OSCTUNE         equ	2334	;# 
   782     091F                     OSCFRQ          equ	2335	;# 
   783     0E0F                     PPSLOCK         equ	3599	;# 
   784     0E10                     INTPPS          equ	3600	;# 
   785     0E11                     T0CKIPPS        equ	3601	;# 
   786     0E12                     T1CKIPPS        equ	3602	;# 
   787     0E13                     T1GPPS          equ	3603	;# 
   788     0E14                     CCP1PPS         equ	3604	;# 
   789     0E15                     CCP2PPS         equ	3605	;# 
   790     0E16                     CCP3PPS         equ	3606	;# 
   791     0E17                     CCP4PPS         equ	3607	;# 
   792     0E18                     CWG1PPS         equ	3608	;# 
   793     0E19                     CWG2PPS         equ	3609	;# 
   794     0E1A                     MDCIN1PPS       equ	3610	;# 
   795     0E1B                     MDCIN2PPS       equ	3611	;# 
   796     0E1C                     MDMINPPS        equ	3612	;# 
   797     0E1D                     SSP2CLKPPS      equ	3613	;# 
   798     0E1E                     SSP2DATPPS      equ	3614	;# 
   799     0E1F                     SSP2SSPPS       equ	3615	;# 
   800     0E20                     SSP1CLKPPS      equ	3616	;# 
   801     0E21                     SSP1DATPPS      equ	3617	;# 
   802     0E22                     SSP1SSPPS       equ	3618	;# 
   803     0E24                     RXPPS           equ	3620	;# 
   804     0E25                     TXPPS           equ	3621	;# 
   805     0E28                     CLCIN0PPS       equ	3624	;# 
   806     0E29                     CLCIN1PPS       equ	3625	;# 
   807     0E2A                     CLCIN2PPS       equ	3626	;# 
   808     0E2B                     CLCIN3PPS       equ	3627	;# 
   809     0E2C                     T3CKIPPS        equ	3628	;# 
   810     0E2D                     T3GPPS          equ	3629	;# 
   811     0E2E                     T5CKIPPS        equ	3630	;# 
   812     0E2F                     T5GPPS          equ	3631	;# 
   813     0E90                     RA0PPS          equ	3728	;# 
   814     0E91                     RA1PPS          equ	3729	;# 
   815     0E92                     RA2PPS          equ	3730	;# 
   816     0E94                     RA4PPS          equ	3732	;# 
   817     0E95                     RA5PPS          equ	3733	;# 
   818     0E9C                     RB4PPS          equ	3740	;# 
   819     0E9D                     RB5PPS          equ	3741	;# 
   820     0E9E                     RB6PPS          equ	3742	;# 
   821     0E9F                     RB7PPS          equ	3743	;# 
   822     0EA0                     RC0PPS          equ	3744	;# 
   823     0EA1                     RC1PPS          equ	3745	;# 
   824     0EA2                     RC2PPS          equ	3746	;# 
   825     0EA3                     RC3PPS          equ	3747	;# 
   826     0EA4                     RC4PPS          equ	3748	;# 
   827     0EA5                     RC5PPS          equ	3749	;# 
   828     0EA6                     RC6PPS          equ	3750	;# 
   829     0EA7                     RC7PPS          equ	3751	;# 
   830     0F0F                     CLCDATA         equ	3855	;# 
   831     0F10                     CLC1CON         equ	3856	;# 
   832     0F11                     CLC1POL         equ	3857	;# 
   833     0F12                     CLC1SEL0        equ	3858	;# 
   834     0F13                     CLC1SEL1        equ	3859	;# 
   835     0F14                     CLC1SEL2        equ	3860	;# 
   836     0F15                     CLC1SEL3        equ	3861	;# 
   837     0F16                     CLC1GLS0        equ	3862	;# 
   838     0F17                     CLC1GLS1        equ	3863	;# 
   839     0F18                     CLC1GLS2        equ	3864	;# 
   840     0F19                     CLC1GLS3        equ	3865	;# 
   841     0F1A                     CLC2CON         equ	3866	;# 
   842     0F1B                     CLC2POL         equ	3867	;# 
   843     0F1C                     CLC2SEL0        equ	3868	;# 
   844     0F1D                     CLC2SEL1        equ	3869	;# 
   845     0F1E                     CLC2SEL2        equ	3870	;# 
   846     0F1F                     CLC2SEL3        equ	3871	;# 
   847     0F20                     CLC2GLS0        equ	3872	;# 
   848     0F21                     CLC2GLS1        equ	3873	;# 
   849     0F22                     CLC2GLS2        equ	3874	;# 
   850     0F23                     CLC2GLS3        equ	3875	;# 
   851     0F24                     CLC3CON         equ	3876	;# 
   852     0F25                     CLC3POL         equ	3877	;# 
   853     0F26                     CLC3SEL0        equ	3878	;# 
   854     0F27                     CLC3SEL1        equ	3879	;# 
   855     0F28                     CLC3SEL2        equ	3880	;# 
   856     0F29                     CLC3SEL3        equ	3881	;# 
   857     0F2A                     CLC3GLS0        equ	3882	;# 
   858     0F2B                     CLC3GLS1        equ	3883	;# 
   859     0F2C                     CLC3GLS2        equ	3884	;# 
   860     0F2D                     CLC3GLS3        equ	3885	;# 
   861     0F2E                     CLC4CON         equ	3886	;# 
   862     0F2F                     CLC4POL         equ	3887	;# 
   863     0F30                     CLC4SEL0        equ	3888	;# 
   864     0F31                     CLC4SEL1        equ	3889	;# 
   865     0F32                     CLC4SEL2        equ	3890	;# 
   866     0F33                     CLC4SEL3        equ	3891	;# 
   867     0F34                     CLC4GLS0        equ	3892	;# 
   868     0F35                     CLC4GLS1        equ	3893	;# 
   869     0F36                     CLC4GLS2        equ	3894	;# 
   870     0F37                     CLC4GLS3        equ	3895	;# 
   871     0FE4                     STATUS_SHAD     equ	4068	;# 
   872     0FE5                     WREG_SHAD       equ	4069	;# 
   873     0FE6                     BSR_SHAD        equ	4070	;# 
   874     0FE7                     PCLATH_SHAD     equ	4071	;# 
   875     0FE8                     FSR0L_SHAD      equ	4072	;# 
   876     0FE9                     FSR0H_SHAD      equ	4073	;# 
   877     0FEA                     FSR1L_SHAD      equ	4074	;# 
   878     0FEB                     FSR1H_SHAD      equ	4075	;# 
   879     0FED                     STKPTR          equ	4077	;# 
   880     0FEE                     TOSL            equ	4078	;# 
   881     0FEF                     TOSH            equ	4079	;# 
   882     0000                     INDF0           equ	0	;# 
   883     0001                     INDF1           equ	1	;# 
   884     0002                     PCL             equ	2	;# 
   885     0003                     STATUS          equ	3	;# 
   886     0004                     FSR0L           equ	4	;# 
   887     0005                     FSR0H           equ	5	;# 
   888     0006                     FSR1L           equ	6	;# 
   889     0007                     FSR1H           equ	7	;# 
   890     0008                     BSR             equ	8	;# 
   891     0009                     WREG            equ	9	;# 
   892     000A                     PCLATH          equ	10	;# 
   893     000B                     INTCON          equ	11	;# 
   894     000C                     PORTA           equ	12	;# 
   895     000D                     PORTB           equ	13	;# 
   896     000E                     PORTC           equ	14	;# 
   897     0010                     PIR0            equ	16	;# 
   898     0011                     PIR1            equ	17	;# 
   899     0012                     PIR2            equ	18	;# 
   900     0013                     PIR3            equ	19	;# 
   901     0014                     PIR4            equ	20	;# 
   902     0015                     TMR0L           equ	21	;# 
   903     0015                     TMR0            equ	21	;# 
   904     0016                     TMR0H           equ	22	;# 
   905     0016                     PR0             equ	22	;# 
   906     0017                     T0CON0          equ	23	;# 
   907     0018                     T0CON1          equ	24	;# 
   908     0019                     TMR1            equ	25	;# 
   909     0019                     TMR1L           equ	25	;# 
   910     001A                     TMR1H           equ	26	;# 
   911     001B                     T1CON           equ	27	;# 
   912     001C                     T1GCON          equ	28	;# 
   913     001D                     TMR2            equ	29	;# 
   914     001E                     PR2             equ	30	;# 
   915     001F                     T2CON           equ	31	;# 
   916     008C                     TRISA           equ	140	;# 
   917     008D                     TRISB           equ	141	;# 
   918     008E                     TRISC           equ	142	;# 
   919     0090                     PIE0            equ	144	;# 
   920     0091                     PIE1            equ	145	;# 
   921     0092                     PIE2            equ	146	;# 
   922     0093                     PIE3            equ	147	;# 
   923     0094                     PIE4            equ	148	;# 
   924     0097                     WDTCON          equ	151	;# 
   925     009B                     ADRES           equ	155	;# 
   926     009B                     ADRESL          equ	155	;# 
   927     009C                     ADRESH          equ	156	;# 
   928     009D                     ADCON0          equ	157	;# 
   929     009E                     ADCON1          equ	158	;# 
   930     009F                     ADACT           equ	159	;# 
   931     010C                     LATA            equ	268	;# 
   932     010D                     LATB            equ	269	;# 
   933     010E                     LATC            equ	270	;# 
   934     0111                     CM1CON0         equ	273	;# 
   935     0112                     CM1CON1         equ	274	;# 
   936     0113                     CM2CON0         equ	275	;# 
   937     0114                     CM2CON1         equ	276	;# 
   938     0115                     CMOUT           equ	277	;# 
   939     0116                     BORCON          equ	278	;# 
   940     0117                     FVRCON          equ	279	;# 
   941     0118                     DACCON0         equ	280	;# 
   942     0119                     DACCON1         equ	281	;# 
   943     018C                     ANSELA          equ	396	;# 
   944     018D                     ANSELB          equ	397	;# 
   945     018E                     ANSELC          equ	398	;# 
   946     0197                     VREGCON         equ	407	;# 
   947     0199                     RC1REG          equ	409	;# 
   948     0199                     RCREG           equ	409	;# 
   949     0199                     RCREG1          equ	409	;# 
   950     019A                     TX1REG          equ	410	;# 
   951     019A                     TXREG1          equ	410	;# 
   952     019A                     TXREG           equ	410	;# 
   953     019B                     SP1BRG          equ	411	;# 
   954     019B                     SPBRG           equ	411	;# 
   955     019B                     SP1BRGL         equ	411	;# 
   956     019B                     SPBRG1          equ	411	;# 
   957     019B                     SPBRGL          equ	411	;# 
   958     019C                     SP1BRGH         equ	412	;# 
   959     019C                     SPBRGH          equ	412	;# 
   960     019C                     SPBRGH1         equ	412	;# 
   961     019D                     RC1STA          equ	413	;# 
   962     019D                     RCSTA1          equ	413	;# 
   963     019D                     RCSTA           equ	413	;# 
   964     019E                     TX1STA          equ	414	;# 
   965     019E                     TXSTA1          equ	414	;# 
   966     019E                     TXSTA           equ	414	;# 
   967     019F                     BAUD1CON        equ	415	;# 
   968     019F                     BAUDCON1        equ	415	;# 
   969     019F                     BAUDCTL1        equ	415	;# 
   970     019F                     BAUDCON         equ	415	;# 
   971     019F                     BAUDCTL         equ	415	;# 
   972     020C                     WPUA            equ	524	;# 
   973     020D                     WPUB            equ	525	;# 
   974     020E                     WPUC            equ	526	;# 
   975     0211                     SSP1BUF         equ	529	;# 
   976     0211                     SSPBUF          equ	529	;# 
   977     0212                     SSP1ADD         equ	530	;# 
   978     0212                     SSPADD          equ	530	;# 
   979     0213                     SSP1MSK         equ	531	;# 
   980     0213                     SSPMSK          equ	531	;# 
   981     0214                     SSP1STAT        equ	532	;# 
   982     0214                     SSPSTAT         equ	532	;# 
   983     0215                     SSP1CON1        equ	533	;# 
   984     0215                     SSPCON          equ	533	;# 
   985     0215                     SSPCON1         equ	533	;# 
   986     0215                     SSP1CON         equ	533	;# 
   987     0216                     SSP1CON2        equ	534	;# 
   988     0216                     SSPCON2         equ	534	;# 
   989     0217                     SSP1CON3        equ	535	;# 
   990     0217                     SSPCON3         equ	535	;# 
   991     0219                     SSP2BUF         equ	537	;# 
   992     021A                     SSP2ADD         equ	538	;# 
   993     021B                     SSP2MSK         equ	539	;# 
   994     021C                     SSP2STAT        equ	540	;# 
   995     021D                     SSP2CON1        equ	541	;# 
   996     021D                     SSP2CON         equ	541	;# 
   997     021E                     SSP2CON2        equ	542	;# 
   998     021F                     SSP2CON3        equ	543	;# 
   999     028C                     ODCONA          equ	652	;# 
  1000     028D                     ODCONB          equ	653	;# 
  1001     028E                     ODCONC          equ	654	;# 
  1002     0291                     CCPR1           equ	657	;# 
  1003     0291                     CCPR1L          equ	657	;# 
  1004     0292                     CCPR1H          equ	658	;# 
  1005     0293                     CCP1CON         equ	659	;# 
  1006     0294                     CCP1CAP         equ	660	;# 
  1007     0295                     CCPR2           equ	661	;# 
  1008     0295                     CCPR2L          equ	661	;# 
  1009     0296                     CCPR2H          equ	662	;# 
  1010     0297                     CCP2CON         equ	663	;# 
  1011     0298                     CCP2CAP         equ	664	;# 
  1012     029F                     CCPTMRS         equ	671	;# 
  1013     030C                     SLRCONA         equ	780	;# 
  1014     030D                     SLRCONB         equ	781	;# 
  1015     030E                     SLRCONC         equ	782	;# 
  1016     0311                     CCPR3           equ	785	;# 
  1017     0311                     CCPR3L          equ	785	;# 
  1018     0312                     CCPR3H          equ	786	;# 
  1019     0313                     CCP3CON         equ	787	;# 
  1020     0314                     CCP3CAP         equ	788	;# 
  1021     0315                     CCPR4           equ	789	;# 
  1022     0315                     CCPR4L          equ	789	;# 
  1023     0316                     CCPR4H          equ	790	;# 
  1024     0317                     CCP4CON         equ	791	;# 
  1025     0318                     CCP4CAP         equ	792	;# 
  1026     038C                     INLVLA          equ	908	;# 
  1027     038D                     INLVLB          equ	909	;# 
  1028     038E                     INLVLC          equ	910	;# 
  1029     0391                     IOCAP           equ	913	;# 
  1030     0392                     IOCAN           equ	914	;# 
  1031     0393                     IOCAF           equ	915	;# 
  1032     0394                     IOCBP           equ	916	;# 
  1033     0395                     IOCBN           equ	917	;# 
  1034     0396                     IOCBF           equ	918	;# 
  1035     0397                     IOCCP           equ	919	;# 
  1036     0398                     IOCCN           equ	920	;# 
  1037     0399                     IOCCF           equ	921	;# 
  1038     039A                     CLKRCON         equ	922	;# 
  1039     039C                     MDCON           equ	924	;# 
  1040     039D                     MDSRC           equ	925	;# 
  1041     039E                     MDCARH          equ	926	;# 
  1042     039F                     MDCARL          equ	927	;# 
  1043     0411                     TMR3            equ	1041	;# 
  1044     0411                     TMR3L           equ	1041	;# 
  1045     0412                     TMR3H           equ	1042	;# 
  1046     0413                     T3CON           equ	1043	;# 
  1047     0414                     T3GCON          equ	1044	;# 
  1048     0415                     TMR4            equ	1045	;# 
  1049     0416                     PR4             equ	1046	;# 
  1050     0417                     T4CON           equ	1047	;# 
  1051     0418                     TMR5            equ	1048	;# 
  1052     0418                     TMR5L           equ	1048	;# 
  1053     0419                     TMR5H           equ	1049	;# 
  1054     041A                     T5CON           equ	1050	;# 
  1055     041B                     T5GCON          equ	1051	;# 
  1056     041C                     TMR6            equ	1052	;# 
  1057     041D                     PR6             equ	1053	;# 
  1058     041E                     T6CON           equ	1054	;# 
  1059     041F                     CCDCON          equ	1055	;# 
  1060     0498                     NCO1ACC         equ	1176	;# 
  1061     0498                     NCO1ACCL        equ	1176	;# 
  1062     0499                     NCO1ACCH        equ	1177	;# 
  1063     049A                     NCO1ACCU        equ	1178	;# 
  1064     049B                     NCO1INC         equ	1179	;# 
  1065     049B                     NCO1INCL        equ	1179	;# 
  1066     049C                     NCO1INCH        equ	1180	;# 
  1067     049D                     NCO1INCU        equ	1181	;# 
  1068     049E                     NCO1CON         equ	1182	;# 
  1069     049F                     NCO1CLK         equ	1183	;# 
  1070     0617                     PWM5DCL         equ	1559	;# 
  1071     0618                     PWM5DCH         equ	1560	;# 
  1072     0619                     PWM5CON         equ	1561	;# 
  1073     0619                     PWM5CON0        equ	1561	;# 
  1074     061A                     PWM6DCL         equ	1562	;# 
  1075     061B                     PWM6DCH         equ	1563	;# 
  1076     061C                     PWM6CON         equ	1564	;# 
  1077     061C                     PWM6CON0        equ	1564	;# 
  1078     061F                     PWMTMRS         equ	1567	;# 
  1079     0691                     CWG1CLKCON      equ	1681	;# 
  1080     0692                     CWG1DAT         equ	1682	;# 
  1081     0693                     CWG1DBR         equ	1683	;# 
  1082     0694                     CWG1DBF         equ	1684	;# 
  1083     0695                     CWG1CON0        equ	1685	;# 
  1084     0696                     CWG1CON1        equ	1686	;# 
  1085     0697                     CWG1AS0         equ	1687	;# 
  1086     0698                     CWG1AS1         equ	1688	;# 
  1087     0699                     CWG1STR         equ	1689	;# 
  1088     0711                     CWG2CLKCON      equ	1809	;# 
  1089     0712                     CWG2DAT         equ	1810	;# 
  1090     0713                     CWG2DBR         equ	1811	;# 
  1091     0714                     CWG2DBF         equ	1812	;# 
  1092     0715                     CWG2CON0        equ	1813	;# 
  1093     0716                     CWG2CON1        equ	1814	;# 
  1094     0717                     CWG2AS0         equ	1815	;# 
  1095     0718                     CWG2AS1         equ	1816	;# 
  1096     0719                     CWG2STR         equ	1817	;# 
  1097     0891                     NVMADR          equ	2193	;# 
  1098     0891                     EEADR           equ	2193	;# 
  1099     0891                     PMADR           equ	2193	;# 
  1100     0891                     NVMADRL         equ	2193	;# 
  1101     0891                     EEADRL          equ	2193	;# 
  1102     0891                     PMADRL          equ	2193	;# 
  1103     0892                     NVMADRH         equ	2194	;# 
  1104     0892                     EEADRH          equ	2194	;# 
  1105     0892                     PMADRH          equ	2194	;# 
  1106     0893                     NVMDAT          equ	2195	;# 
  1107     0893                     EEDAT           equ	2195	;# 
  1108     0893                     PMDAT           equ	2195	;# 
  1109     0893                     NVMDATL         equ	2195	;# 
  1110     0893                     EEDATL          equ	2195	;# 
  1111     0893                     PMDATL          equ	2195	;# 
  1112     0894                     NVMDATH         equ	2196	;# 
  1113     0894                     EEDATH          equ	2196	;# 
  1114     0894                     PMDATH          equ	2196	;# 
  1115     0895                     NVMCON1         equ	2197	;# 
  1116     0895                     EECON1          equ	2197	;# 
  1117     0895                     PMCON1          equ	2197	;# 
  1118     0896                     NVMCON2         equ	2198	;# 
  1119     0896                     EECON2          equ	2198	;# 
  1120     0896                     PMCON2          equ	2198	;# 
  1121     089B                     PCON0           equ	2203	;# 
  1122     0911                     PMD0            equ	2321	;# 
  1123     0912                     PMD1            equ	2322	;# 
  1124     0913                     PMD2            equ	2323	;# 
  1125     0914                     PMD3            equ	2324	;# 
  1126     0915                     PMD4            equ	2325	;# 
  1127     0916                     PMD5            equ	2326	;# 
  1128     0918                     CPUDOZE         equ	2328	;# 
  1129     0919                     OSCCON1         equ	2329	;# 
  1130     091A                     OSCCON2         equ	2330	;# 
  1131     091B                     OSCCON3         equ	2331	;# 
  1132     091C                     OSCSTAT1        equ	2332	;# 
  1133     091D                     OSCEN           equ	2333	;# 
  1134     091E                     OSCTUNE         equ	2334	;# 
  1135     091F                     OSCFRQ          equ	2335	;# 
  1136     0E0F                     PPSLOCK         equ	3599	;# 
  1137     0E10                     INTPPS          equ	3600	;# 
  1138     0E11                     T0CKIPPS        equ	3601	;# 
  1139     0E12                     T1CKIPPS        equ	3602	;# 
  1140     0E13                     T1GPPS          equ	3603	;# 
  1141     0E14                     CCP1PPS         equ	3604	;# 
  1142     0E15                     CCP2PPS         equ	3605	;# 
  1143     0E16                     CCP3PPS         equ	3606	;# 
  1144     0E17                     CCP4PPS         equ	3607	;# 
  1145     0E18                     CWG1PPS         equ	3608	;# 
  1146     0E19                     CWG2PPS         equ	3609	;# 
  1147     0E1A                     MDCIN1PPS       equ	3610	;# 
  1148     0E1B                     MDCIN2PPS       equ	3611	;# 
  1149     0E1C                     MDMINPPS        equ	3612	;# 
  1150     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1151     0E1E                     SSP2DATPPS      equ	3614	;# 
  1152     0E1F                     SSP2SSPPS       equ	3615	;# 
  1153     0E20                     SSP1CLKPPS      equ	3616	;# 
  1154     0E21                     SSP1DATPPS      equ	3617	;# 
  1155     0E22                     SSP1SSPPS       equ	3618	;# 
  1156     0E24                     RXPPS           equ	3620	;# 
  1157     0E25                     TXPPS           equ	3621	;# 
  1158     0E28                     CLCIN0PPS       equ	3624	;# 
  1159     0E29                     CLCIN1PPS       equ	3625	;# 
  1160     0E2A                     CLCIN2PPS       equ	3626	;# 
  1161     0E2B                     CLCIN3PPS       equ	3627	;# 
  1162     0E2C                     T3CKIPPS        equ	3628	;# 
  1163     0E2D                     T3GPPS          equ	3629	;# 
  1164     0E2E                     T5CKIPPS        equ	3630	;# 
  1165     0E2F                     T5GPPS          equ	3631	;# 
  1166     0E90                     RA0PPS          equ	3728	;# 
  1167     0E91                     RA1PPS          equ	3729	;# 
  1168     0E92                     RA2PPS          equ	3730	;# 
  1169     0E94                     RA4PPS          equ	3732	;# 
  1170     0E95                     RA5PPS          equ	3733	;# 
  1171     0E9C                     RB4PPS          equ	3740	;# 
  1172     0E9D                     RB5PPS          equ	3741	;# 
  1173     0E9E                     RB6PPS          equ	3742	;# 
  1174     0E9F                     RB7PPS          equ	3743	;# 
  1175     0EA0                     RC0PPS          equ	3744	;# 
  1176     0EA1                     RC1PPS          equ	3745	;# 
  1177     0EA2                     RC2PPS          equ	3746	;# 
  1178     0EA3                     RC3PPS          equ	3747	;# 
  1179     0EA4                     RC4PPS          equ	3748	;# 
  1180     0EA5                     RC5PPS          equ	3749	;# 
  1181     0EA6                     RC6PPS          equ	3750	;# 
  1182     0EA7                     RC7PPS          equ	3751	;# 
  1183     0F0F                     CLCDATA         equ	3855	;# 
  1184     0F10                     CLC1CON         equ	3856	;# 
  1185     0F11                     CLC1POL         equ	3857	;# 
  1186     0F12                     CLC1SEL0        equ	3858	;# 
  1187     0F13                     CLC1SEL1        equ	3859	;# 
  1188     0F14                     CLC1SEL2        equ	3860	;# 
  1189     0F15                     CLC1SEL3        equ	3861	;# 
  1190     0F16                     CLC1GLS0        equ	3862	;# 
  1191     0F17                     CLC1GLS1        equ	3863	;# 
  1192     0F18                     CLC1GLS2        equ	3864	;# 
  1193     0F19                     CLC1GLS3        equ	3865	;# 
  1194     0F1A                     CLC2CON         equ	3866	;# 
  1195     0F1B                     CLC2POL         equ	3867	;# 
  1196     0F1C                     CLC2SEL0        equ	3868	;# 
  1197     0F1D                     CLC2SEL1        equ	3869	;# 
  1198     0F1E                     CLC2SEL2        equ	3870	;# 
  1199     0F1F                     CLC2SEL3        equ	3871	;# 
  1200     0F20                     CLC2GLS0        equ	3872	;# 
  1201     0F21                     CLC2GLS1        equ	3873	;# 
  1202     0F22                     CLC2GLS2        equ	3874	;# 
  1203     0F23                     CLC2GLS3        equ	3875	;# 
  1204     0F24                     CLC3CON         equ	3876	;# 
  1205     0F25                     CLC3POL         equ	3877	;# 
  1206     0F26                     CLC3SEL0        equ	3878	;# 
  1207     0F27                     CLC3SEL1        equ	3879	;# 
  1208     0F28                     CLC3SEL2        equ	3880	;# 
  1209     0F29                     CLC3SEL3        equ	3881	;# 
  1210     0F2A                     CLC3GLS0        equ	3882	;# 
  1211     0F2B                     CLC3GLS1        equ	3883	;# 
  1212     0F2C                     CLC3GLS2        equ	3884	;# 
  1213     0F2D                     CLC3GLS3        equ	3885	;# 
  1214     0F2E                     CLC4CON         equ	3886	;# 
  1215     0F2F                     CLC4POL         equ	3887	;# 
  1216     0F30                     CLC4SEL0        equ	3888	;# 
  1217     0F31                     CLC4SEL1        equ	3889	;# 
  1218     0F32                     CLC4SEL2        equ	3890	;# 
  1219     0F33                     CLC4SEL3        equ	3891	;# 
  1220     0F34                     CLC4GLS0        equ	3892	;# 
  1221     0F35                     CLC4GLS1        equ	3893	;# 
  1222     0F36                     CLC4GLS2        equ	3894	;# 
  1223     0F37                     CLC4GLS3        equ	3895	;# 
  1224     0FE4                     STATUS_SHAD     equ	4068	;# 
  1225     0FE5                     WREG_SHAD       equ	4069	;# 
  1226     0FE6                     BSR_SHAD        equ	4070	;# 
  1227     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1228     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1229     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1230     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1231     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1232     0FED                     STKPTR          equ	4077	;# 
  1233     0FEE                     TOSL            equ	4078	;# 
  1234     0FEF                     TOSH            equ	4079	;# 
  1235     0000                     INDF0           equ	0	;# 
  1236     0001                     INDF1           equ	1	;# 
  1237     0002                     PCL             equ	2	;# 
  1238     0003                     STATUS          equ	3	;# 
  1239     0004                     FSR0L           equ	4	;# 
  1240     0005                     FSR0H           equ	5	;# 
  1241     0006                     FSR1L           equ	6	;# 
  1242     0007                     FSR1H           equ	7	;# 
  1243     0008                     BSR             equ	8	;# 
  1244     0009                     WREG            equ	9	;# 
  1245     000A                     PCLATH          equ	10	;# 
  1246     000B                     INTCON          equ	11	;# 
  1247     000C                     PORTA           equ	12	;# 
  1248     000D                     PORTB           equ	13	;# 
  1249     000E                     PORTC           equ	14	;# 
  1250     0010                     PIR0            equ	16	;# 
  1251     0011                     PIR1            equ	17	;# 
  1252     0012                     PIR2            equ	18	;# 
  1253     0013                     PIR3            equ	19	;# 
  1254     0014                     PIR4            equ	20	;# 
  1255     0015                     TMR0L           equ	21	;# 
  1256     0015                     TMR0            equ	21	;# 
  1257     0016                     TMR0H           equ	22	;# 
  1258     0016                     PR0             equ	22	;# 
  1259     0017                     T0CON0          equ	23	;# 
  1260     0018                     T0CON1          equ	24	;# 
  1261     0019                     TMR1            equ	25	;# 
  1262     0019                     TMR1L           equ	25	;# 
  1263     001A                     TMR1H           equ	26	;# 
  1264     001B                     T1CON           equ	27	;# 
  1265     001C                     T1GCON          equ	28	;# 
  1266     001D                     TMR2            equ	29	;# 
  1267     001E                     PR2             equ	30	;# 
  1268     001F                     T2CON           equ	31	;# 
  1269     008C                     TRISA           equ	140	;# 
  1270     008D                     TRISB           equ	141	;# 
  1271     008E                     TRISC           equ	142	;# 
  1272     0090                     PIE0            equ	144	;# 
  1273     0091                     PIE1            equ	145	;# 
  1274     0092                     PIE2            equ	146	;# 
  1275     0093                     PIE3            equ	147	;# 
  1276     0094                     PIE4            equ	148	;# 
  1277     0097                     WDTCON          equ	151	;# 
  1278     009B                     ADRES           equ	155	;# 
  1279     009B                     ADRESL          equ	155	;# 
  1280     009C                     ADRESH          equ	156	;# 
  1281     009D                     ADCON0          equ	157	;# 
  1282     009E                     ADCON1          equ	158	;# 
  1283     009F                     ADACT           equ	159	;# 
  1284     010C                     LATA            equ	268	;# 
  1285     010D                     LATB            equ	269	;# 
  1286     010E                     LATC            equ	270	;# 
  1287     0111                     CM1CON0         equ	273	;# 
  1288     0112                     CM1CON1         equ	274	;# 
  1289     0113                     CM2CON0         equ	275	;# 
  1290     0114                     CM2CON1         equ	276	;# 
  1291     0115                     CMOUT           equ	277	;# 
  1292     0116                     BORCON          equ	278	;# 
  1293     0117                     FVRCON          equ	279	;# 
  1294     0118                     DACCON0         equ	280	;# 
  1295     0119                     DACCON1         equ	281	;# 
  1296     018C                     ANSELA          equ	396	;# 
  1297     018D                     ANSELB          equ	397	;# 
  1298     018E                     ANSELC          equ	398	;# 
  1299     0197                     VREGCON         equ	407	;# 
  1300     0199                     RC1REG          equ	409	;# 
  1301     0199                     RCREG           equ	409	;# 
  1302     0199                     RCREG1          equ	409	;# 
  1303     019A                     TX1REG          equ	410	;# 
  1304     019A                     TXREG1          equ	410	;# 
  1305     019A                     TXREG           equ	410	;# 
  1306     019B                     SP1BRG          equ	411	;# 
  1307     019B                     SPBRG           equ	411	;# 
  1308     019B                     SP1BRGL         equ	411	;# 
  1309     019B                     SPBRG1          equ	411	;# 
  1310     019B                     SPBRGL          equ	411	;# 
  1311     019C                     SP1BRGH         equ	412	;# 
  1312     019C                     SPBRGH          equ	412	;# 
  1313     019C                     SPBRGH1         equ	412	;# 
  1314     019D                     RC1STA          equ	413	;# 
  1315     019D                     RCSTA1          equ	413	;# 
  1316     019D                     RCSTA           equ	413	;# 
  1317     019E                     TX1STA          equ	414	;# 
  1318     019E                     TXSTA1          equ	414	;# 
  1319     019E                     TXSTA           equ	414	;# 
  1320     019F                     BAUD1CON        equ	415	;# 
  1321     019F                     BAUDCON1        equ	415	;# 
  1322     019F                     BAUDCTL1        equ	415	;# 
  1323     019F                     BAUDCON         equ	415	;# 
  1324     019F                     BAUDCTL         equ	415	;# 
  1325     020C                     WPUA            equ	524	;# 
  1326     020D                     WPUB            equ	525	;# 
  1327     020E                     WPUC            equ	526	;# 
  1328     0211                     SSP1BUF         equ	529	;# 
  1329     0211                     SSPBUF          equ	529	;# 
  1330     0212                     SSP1ADD         equ	530	;# 
  1331     0212                     SSPADD          equ	530	;# 
  1332     0213                     SSP1MSK         equ	531	;# 
  1333     0213                     SSPMSK          equ	531	;# 
  1334     0214                     SSP1STAT        equ	532	;# 
  1335     0214                     SSPSTAT         equ	532	;# 
  1336     0215                     SSP1CON1        equ	533	;# 
  1337     0215                     SSPCON          equ	533	;# 
  1338     0215                     SSPCON1         equ	533	;# 
  1339     0215                     SSP1CON         equ	533	;# 
  1340     0216                     SSP1CON2        equ	534	;# 
  1341     0216                     SSPCON2         equ	534	;# 
  1342     0217                     SSP1CON3        equ	535	;# 
  1343     0217                     SSPCON3         equ	535	;# 
  1344     0219                     SSP2BUF         equ	537	;# 
  1345     021A                     SSP2ADD         equ	538	;# 
  1346     021B                     SSP2MSK         equ	539	;# 
  1347     021C                     SSP2STAT        equ	540	;# 
  1348     021D                     SSP2CON1        equ	541	;# 
  1349     021D                     SSP2CON         equ	541	;# 
  1350     021E                     SSP2CON2        equ	542	;# 
  1351     021F                     SSP2CON3        equ	543	;# 
  1352     028C                     ODCONA          equ	652	;# 
  1353     028D                     ODCONB          equ	653	;# 
  1354     028E                     ODCONC          equ	654	;# 
  1355     0291                     CCPR1           equ	657	;# 
  1356     0291                     CCPR1L          equ	657	;# 
  1357     0292                     CCPR1H          equ	658	;# 
  1358     0293                     CCP1CON         equ	659	;# 
  1359     0294                     CCP1CAP         equ	660	;# 
  1360     0295                     CCPR2           equ	661	;# 
  1361     0295                     CCPR2L          equ	661	;# 
  1362     0296                     CCPR2H          equ	662	;# 
  1363     0297                     CCP2CON         equ	663	;# 
  1364     0298                     CCP2CAP         equ	664	;# 
  1365     029F                     CCPTMRS         equ	671	;# 
  1366     030C                     SLRCONA         equ	780	;# 
  1367     030D                     SLRCONB         equ	781	;# 
  1368     030E                     SLRCONC         equ	782	;# 
  1369     0311                     CCPR3           equ	785	;# 
  1370     0311                     CCPR3L          equ	785	;# 
  1371     0312                     CCPR3H          equ	786	;# 
  1372     0313                     CCP3CON         equ	787	;# 
  1373     0314                     CCP3CAP         equ	788	;# 
  1374     0315                     CCPR4           equ	789	;# 
  1375     0315                     CCPR4L          equ	789	;# 
  1376     0316                     CCPR4H          equ	790	;# 
  1377     0317                     CCP4CON         equ	791	;# 
  1378     0318                     CCP4CAP         equ	792	;# 
  1379     038C                     INLVLA          equ	908	;# 
  1380     038D                     INLVLB          equ	909	;# 
  1381     038E                     INLVLC          equ	910	;# 
  1382     0391                     IOCAP           equ	913	;# 
  1383     0392                     IOCAN           equ	914	;# 
  1384     0393                     IOCAF           equ	915	;# 
  1385     0394                     IOCBP           equ	916	;# 
  1386     0395                     IOCBN           equ	917	;# 
  1387     0396                     IOCBF           equ	918	;# 
  1388     0397                     IOCCP           equ	919	;# 
  1389     0398                     IOCCN           equ	920	;# 
  1390     0399                     IOCCF           equ	921	;# 
  1391     039A                     CLKRCON         equ	922	;# 
  1392     039C                     MDCON           equ	924	;# 
  1393     039D                     MDSRC           equ	925	;# 
  1394     039E                     MDCARH          equ	926	;# 
  1395     039F                     MDCARL          equ	927	;# 
  1396     0411                     TMR3            equ	1041	;# 
  1397     0411                     TMR3L           equ	1041	;# 
  1398     0412                     TMR3H           equ	1042	;# 
  1399     0413                     T3CON           equ	1043	;# 
  1400     0414                     T3GCON          equ	1044	;# 
  1401     0415                     TMR4            equ	1045	;# 
  1402     0416                     PR4             equ	1046	;# 
  1403     0417                     T4CON           equ	1047	;# 
  1404     0418                     TMR5            equ	1048	;# 
  1405     0418                     TMR5L           equ	1048	;# 
  1406     0419                     TMR5H           equ	1049	;# 
  1407     041A                     T5CON           equ	1050	;# 
  1408     041B                     T5GCON          equ	1051	;# 
  1409     041C                     TMR6            equ	1052	;# 
  1410     041D                     PR6             equ	1053	;# 
  1411     041E                     T6CON           equ	1054	;# 
  1412     041F                     CCDCON          equ	1055	;# 
  1413     0498                     NCO1ACC         equ	1176	;# 
  1414     0498                     NCO1ACCL        equ	1176	;# 
  1415     0499                     NCO1ACCH        equ	1177	;# 
  1416     049A                     NCO1ACCU        equ	1178	;# 
  1417     049B                     NCO1INC         equ	1179	;# 
  1418     049B                     NCO1INCL        equ	1179	;# 
  1419     049C                     NCO1INCH        equ	1180	;# 
  1420     049D                     NCO1INCU        equ	1181	;# 
  1421     049E                     NCO1CON         equ	1182	;# 
  1422     049F                     NCO1CLK         equ	1183	;# 
  1423     0617                     PWM5DCL         equ	1559	;# 
  1424     0618                     PWM5DCH         equ	1560	;# 
  1425     0619                     PWM5CON         equ	1561	;# 
  1426     0619                     PWM5CON0        equ	1561	;# 
  1427     061A                     PWM6DCL         equ	1562	;# 
  1428     061B                     PWM6DCH         equ	1563	;# 
  1429     061C                     PWM6CON         equ	1564	;# 
  1430     061C                     PWM6CON0        equ	1564	;# 
  1431     061F                     PWMTMRS         equ	1567	;# 
  1432     0691                     CWG1CLKCON      equ	1681	;# 
  1433     0692                     CWG1DAT         equ	1682	;# 
  1434     0693                     CWG1DBR         equ	1683	;# 
  1435     0694                     CWG1DBF         equ	1684	;# 
  1436     0695                     CWG1CON0        equ	1685	;# 
  1437     0696                     CWG1CON1        equ	1686	;# 
  1438     0697                     CWG1AS0         equ	1687	;# 
  1439     0698                     CWG1AS1         equ	1688	;# 
  1440     0699                     CWG1STR         equ	1689	;# 
  1441     0711                     CWG2CLKCON      equ	1809	;# 
  1442     0712                     CWG2DAT         equ	1810	;# 
  1443     0713                     CWG2DBR         equ	1811	;# 
  1444     0714                     CWG2DBF         equ	1812	;# 
  1445     0715                     CWG2CON0        equ	1813	;# 
  1446     0716                     CWG2CON1        equ	1814	;# 
  1447     0717                     CWG2AS0         equ	1815	;# 
  1448     0718                     CWG2AS1         equ	1816	;# 
  1449     0719                     CWG2STR         equ	1817	;# 
  1450     0891                     NVMADR          equ	2193	;# 
  1451     0891                     EEADR           equ	2193	;# 
  1452     0891                     PMADR           equ	2193	;# 
  1453     0891                     NVMADRL         equ	2193	;# 
  1454     0891                     EEADRL          equ	2193	;# 
  1455     0891                     PMADRL          equ	2193	;# 
  1456     0892                     NVMADRH         equ	2194	;# 
  1457     0892                     EEADRH          equ	2194	;# 
  1458     0892                     PMADRH          equ	2194	;# 
  1459     0893                     NVMDAT          equ	2195	;# 
  1460     0893                     EEDAT           equ	2195	;# 
  1461     0893                     PMDAT           equ	2195	;# 
  1462     0893                     NVMDATL         equ	2195	;# 
  1463     0893                     EEDATL          equ	2195	;# 
  1464     0893                     PMDATL          equ	2195	;# 
  1465     0894                     NVMDATH         equ	2196	;# 
  1466     0894                     EEDATH          equ	2196	;# 
  1467     0894                     PMDATH          equ	2196	;# 
  1468     0895                     NVMCON1         equ	2197	;# 
  1469     0895                     EECON1          equ	2197	;# 
  1470     0895                     PMCON1          equ	2197	;# 
  1471     0896                     NVMCON2         equ	2198	;# 
  1472     0896                     EECON2          equ	2198	;# 
  1473     0896                     PMCON2          equ	2198	;# 
  1474     089B                     PCON0           equ	2203	;# 
  1475     0911                     PMD0            equ	2321	;# 
  1476     0912                     PMD1            equ	2322	;# 
  1477     0913                     PMD2            equ	2323	;# 
  1478     0914                     PMD3            equ	2324	;# 
  1479     0915                     PMD4            equ	2325	;# 
  1480     0916                     PMD5            equ	2326	;# 
  1481     0918                     CPUDOZE         equ	2328	;# 
  1482     0919                     OSCCON1         equ	2329	;# 
  1483     091A                     OSCCON2         equ	2330	;# 
  1484     091B                     OSCCON3         equ	2331	;# 
  1485     091C                     OSCSTAT1        equ	2332	;# 
  1486     091D                     OSCEN           equ	2333	;# 
  1487     091E                     OSCTUNE         equ	2334	;# 
  1488     091F                     OSCFRQ          equ	2335	;# 
  1489     0E0F                     PPSLOCK         equ	3599	;# 
  1490     0E10                     INTPPS          equ	3600	;# 
  1491     0E11                     T0CKIPPS        equ	3601	;# 
  1492     0E12                     T1CKIPPS        equ	3602	;# 
  1493     0E13                     T1GPPS          equ	3603	;# 
  1494     0E14                     CCP1PPS         equ	3604	;# 
  1495     0E15                     CCP2PPS         equ	3605	;# 
  1496     0E16                     CCP3PPS         equ	3606	;# 
  1497     0E17                     CCP4PPS         equ	3607	;# 
  1498     0E18                     CWG1PPS         equ	3608	;# 
  1499     0E19                     CWG2PPS         equ	3609	;# 
  1500     0E1A                     MDCIN1PPS       equ	3610	;# 
  1501     0E1B                     MDCIN2PPS       equ	3611	;# 
  1502     0E1C                     MDMINPPS        equ	3612	;# 
  1503     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1504     0E1E                     SSP2DATPPS      equ	3614	;# 
  1505     0E1F                     SSP2SSPPS       equ	3615	;# 
  1506     0E20                     SSP1CLKPPS      equ	3616	;# 
  1507     0E21                     SSP1DATPPS      equ	3617	;# 
  1508     0E22                     SSP1SSPPS       equ	3618	;# 
  1509     0E24                     RXPPS           equ	3620	;# 
  1510     0E25                     TXPPS           equ	3621	;# 
  1511     0E28                     CLCIN0PPS       equ	3624	;# 
  1512     0E29                     CLCIN1PPS       equ	3625	;# 
  1513     0E2A                     CLCIN2PPS       equ	3626	;# 
  1514     0E2B                     CLCIN3PPS       equ	3627	;# 
  1515     0E2C                     T3CKIPPS        equ	3628	;# 
  1516     0E2D                     T3GPPS          equ	3629	;# 
  1517     0E2E                     T5CKIPPS        equ	3630	;# 
  1518     0E2F                     T5GPPS          equ	3631	;# 
  1519     0E90                     RA0PPS          equ	3728	;# 
  1520     0E91                     RA1PPS          equ	3729	;# 
  1521     0E92                     RA2PPS          equ	3730	;# 
  1522     0E94                     RA4PPS          equ	3732	;# 
  1523     0E95                     RA5PPS          equ	3733	;# 
  1524     0E9C                     RB4PPS          equ	3740	;# 
  1525     0E9D                     RB5PPS          equ	3741	;# 
  1526     0E9E                     RB6PPS          equ	3742	;# 
  1527     0E9F                     RB7PPS          equ	3743	;# 
  1528     0EA0                     RC0PPS          equ	3744	;# 
  1529     0EA1                     RC1PPS          equ	3745	;# 
  1530     0EA2                     RC2PPS          equ	3746	;# 
  1531     0EA3                     RC3PPS          equ	3747	;# 
  1532     0EA4                     RC4PPS          equ	3748	;# 
  1533     0EA5                     RC5PPS          equ	3749	;# 
  1534     0EA6                     RC6PPS          equ	3750	;# 
  1535     0EA7                     RC7PPS          equ	3751	;# 
  1536     0F0F                     CLCDATA         equ	3855	;# 
  1537     0F10                     CLC1CON         equ	3856	;# 
  1538     0F11                     CLC1POL         equ	3857	;# 
  1539     0F12                     CLC1SEL0        equ	3858	;# 
  1540     0F13                     CLC1SEL1        equ	3859	;# 
  1541     0F14                     CLC1SEL2        equ	3860	;# 
  1542     0F15                     CLC1SEL3        equ	3861	;# 
  1543     0F16                     CLC1GLS0        equ	3862	;# 
  1544     0F17                     CLC1GLS1        equ	3863	;# 
  1545     0F18                     CLC1GLS2        equ	3864	;# 
  1546     0F19                     CLC1GLS3        equ	3865	;# 
  1547     0F1A                     CLC2CON         equ	3866	;# 
  1548     0F1B                     CLC2POL         equ	3867	;# 
  1549     0F1C                     CLC2SEL0        equ	3868	;# 
  1550     0F1D                     CLC2SEL1        equ	3869	;# 
  1551     0F1E                     CLC2SEL2        equ	3870	;# 
  1552     0F1F                     CLC2SEL3        equ	3871	;# 
  1553     0F20                     CLC2GLS0        equ	3872	;# 
  1554     0F21                     CLC2GLS1        equ	3873	;# 
  1555     0F22                     CLC2GLS2        equ	3874	;# 
  1556     0F23                     CLC2GLS3        equ	3875	;# 
  1557     0F24                     CLC3CON         equ	3876	;# 
  1558     0F25                     CLC3POL         equ	3877	;# 
  1559     0F26                     CLC3SEL0        equ	3878	;# 
  1560     0F27                     CLC3SEL1        equ	3879	;# 
  1561     0F28                     CLC3SEL2        equ	3880	;# 
  1562     0F29                     CLC3SEL3        equ	3881	;# 
  1563     0F2A                     CLC3GLS0        equ	3882	;# 
  1564     0F2B                     CLC3GLS1        equ	3883	;# 
  1565     0F2C                     CLC3GLS2        equ	3884	;# 
  1566     0F2D                     CLC3GLS3        equ	3885	;# 
  1567     0F2E                     CLC4CON         equ	3886	;# 
  1568     0F2F                     CLC4POL         equ	3887	;# 
  1569     0F30                     CLC4SEL0        equ	3888	;# 
  1570     0F31                     CLC4SEL1        equ	3889	;# 
  1571     0F32                     CLC4SEL2        equ	3890	;# 
  1572     0F33                     CLC4SEL3        equ	3891	;# 
  1573     0F34                     CLC4GLS0        equ	3892	;# 
  1574     0F35                     CLC4GLS1        equ	3893	;# 
  1575     0F36                     CLC4GLS2        equ	3894	;# 
  1576     0F37                     CLC4GLS3        equ	3895	;# 
  1577     0FE4                     STATUS_SHAD     equ	4068	;# 
  1578     0FE5                     WREG_SHAD       equ	4069	;# 
  1579     0FE6                     BSR_SHAD        equ	4070	;# 
  1580     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1581     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1582     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1583     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1584     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1585     0FED                     STKPTR          equ	4077	;# 
  1586     0FEE                     TOSL            equ	4078	;# 
  1587     0FEF                     TOSH            equ	4079	;# 
  1588     0000                     INDF0           equ	0	;# 
  1589     0001                     INDF1           equ	1	;# 
  1590     0002                     PCL             equ	2	;# 
  1591     0003                     STATUS          equ	3	;# 
  1592     0004                     FSR0L           equ	4	;# 
  1593     0005                     FSR0H           equ	5	;# 
  1594     0006                     FSR1L           equ	6	;# 
  1595     0007                     FSR1H           equ	7	;# 
  1596     0008                     BSR             equ	8	;# 
  1597     0009                     WREG            equ	9	;# 
  1598     000A                     PCLATH          equ	10	;# 
  1599     000B                     INTCON          equ	11	;# 
  1600     000C                     PORTA           equ	12	;# 
  1601     000D                     PORTB           equ	13	;# 
  1602     000E                     PORTC           equ	14	;# 
  1603     0010                     PIR0            equ	16	;# 
  1604     0011                     PIR1            equ	17	;# 
  1605     0012                     PIR2            equ	18	;# 
  1606     0013                     PIR3            equ	19	;# 
  1607     0014                     PIR4            equ	20	;# 
  1608     0015                     TMR0L           equ	21	;# 
  1609     0015                     TMR0            equ	21	;# 
  1610     0016                     TMR0H           equ	22	;# 
  1611     0016                     PR0             equ	22	;# 
  1612     0017                     T0CON0          equ	23	;# 
  1613     0018                     T0CON1          equ	24	;# 
  1614     0019                     TMR1            equ	25	;# 
  1615     0019                     TMR1L           equ	25	;# 
  1616     001A                     TMR1H           equ	26	;# 
  1617     001B                     T1CON           equ	27	;# 
  1618     001C                     T1GCON          equ	28	;# 
  1619     001D                     TMR2            equ	29	;# 
  1620     001E                     PR2             equ	30	;# 
  1621     001F                     T2CON           equ	31	;# 
  1622     008C                     TRISA           equ	140	;# 
  1623     008D                     TRISB           equ	141	;# 
  1624     008E                     TRISC           equ	142	;# 
  1625     0090                     PIE0            equ	144	;# 
  1626     0091                     PIE1            equ	145	;# 
  1627     0092                     PIE2            equ	146	;# 
  1628     0093                     PIE3            equ	147	;# 
  1629     0094                     PIE4            equ	148	;# 
  1630     0097                     WDTCON          equ	151	;# 
  1631     009B                     ADRES           equ	155	;# 
  1632     009B                     ADRESL          equ	155	;# 
  1633     009C                     ADRESH          equ	156	;# 
  1634     009D                     ADCON0          equ	157	;# 
  1635     009E                     ADCON1          equ	158	;# 
  1636     009F                     ADACT           equ	159	;# 
  1637     010C                     LATA            equ	268	;# 
  1638     010D                     LATB            equ	269	;# 
  1639     010E                     LATC            equ	270	;# 
  1640     0111                     CM1CON0         equ	273	;# 
  1641     0112                     CM1CON1         equ	274	;# 
  1642     0113                     CM2CON0         equ	275	;# 
  1643     0114                     CM2CON1         equ	276	;# 
  1644     0115                     CMOUT           equ	277	;# 
  1645     0116                     BORCON          equ	278	;# 
  1646     0117                     FVRCON          equ	279	;# 
  1647     0118                     DACCON0         equ	280	;# 
  1648     0119                     DACCON1         equ	281	;# 
  1649     018C                     ANSELA          equ	396	;# 
  1650     018D                     ANSELB          equ	397	;# 
  1651     018E                     ANSELC          equ	398	;# 
  1652     0197                     VREGCON         equ	407	;# 
  1653     0199                     RC1REG          equ	409	;# 
  1654     0199                     RCREG           equ	409	;# 
  1655     0199                     RCREG1          equ	409	;# 
  1656     019A                     TX1REG          equ	410	;# 
  1657     019A                     TXREG1          equ	410	;# 
  1658     019A                     TXREG           equ	410	;# 
  1659     019B                     SP1BRG          equ	411	;# 
  1660     019B                     SPBRG           equ	411	;# 
  1661     019B                     SP1BRGL         equ	411	;# 
  1662     019B                     SPBRG1          equ	411	;# 
  1663     019B                     SPBRGL          equ	411	;# 
  1664     019C                     SP1BRGH         equ	412	;# 
  1665     019C                     SPBRGH          equ	412	;# 
  1666     019C                     SPBRGH1         equ	412	;# 
  1667     019D                     RC1STA          equ	413	;# 
  1668     019D                     RCSTA1          equ	413	;# 
  1669     019D                     RCSTA           equ	413	;# 
  1670     019E                     TX1STA          equ	414	;# 
  1671     019E                     TXSTA1          equ	414	;# 
  1672     019E                     TXSTA           equ	414	;# 
  1673     019F                     BAUD1CON        equ	415	;# 
  1674     019F                     BAUDCON1        equ	415	;# 
  1675     019F                     BAUDCTL1        equ	415	;# 
  1676     019F                     BAUDCON         equ	415	;# 
  1677     019F                     BAUDCTL         equ	415	;# 
  1678     020C                     WPUA            equ	524	;# 
  1679     020D                     WPUB            equ	525	;# 
  1680     020E                     WPUC            equ	526	;# 
  1681     0211                     SSP1BUF         equ	529	;# 
  1682     0211                     SSPBUF          equ	529	;# 
  1683     0212                     SSP1ADD         equ	530	;# 
  1684     0212                     SSPADD          equ	530	;# 
  1685     0213                     SSP1MSK         equ	531	;# 
  1686     0213                     SSPMSK          equ	531	;# 
  1687     0214                     SSP1STAT        equ	532	;# 
  1688     0214                     SSPSTAT         equ	532	;# 
  1689     0215                     SSP1CON1        equ	533	;# 
  1690     0215                     SSPCON          equ	533	;# 
  1691     0215                     SSPCON1         equ	533	;# 
  1692     0215                     SSP1CON         equ	533	;# 
  1693     0216                     SSP1CON2        equ	534	;# 
  1694     0216                     SSPCON2         equ	534	;# 
  1695     0217                     SSP1CON3        equ	535	;# 
  1696     0217                     SSPCON3         equ	535	;# 
  1697     0219                     SSP2BUF         equ	537	;# 
  1698     021A                     SSP2ADD         equ	538	;# 
  1699     021B                     SSP2MSK         equ	539	;# 
  1700     021C                     SSP2STAT        equ	540	;# 
  1701     021D                     SSP2CON1        equ	541	;# 
  1702     021D                     SSP2CON         equ	541	;# 
  1703     021E                     SSP2CON2        equ	542	;# 
  1704     021F                     SSP2CON3        equ	543	;# 
  1705     028C                     ODCONA          equ	652	;# 
  1706     028D                     ODCONB          equ	653	;# 
  1707     028E                     ODCONC          equ	654	;# 
  1708     0291                     CCPR1           equ	657	;# 
  1709     0291                     CCPR1L          equ	657	;# 
  1710     0292                     CCPR1H          equ	658	;# 
  1711     0293                     CCP1CON         equ	659	;# 
  1712     0294                     CCP1CAP         equ	660	;# 
  1713     0295                     CCPR2           equ	661	;# 
  1714     0295                     CCPR2L          equ	661	;# 
  1715     0296                     CCPR2H          equ	662	;# 
  1716     0297                     CCP2CON         equ	663	;# 
  1717     0298                     CCP2CAP         equ	664	;# 
  1718     029F                     CCPTMRS         equ	671	;# 
  1719     030C                     SLRCONA         equ	780	;# 
  1720     030D                     SLRCONB         equ	781	;# 
  1721     030E                     SLRCONC         equ	782	;# 
  1722     0311                     CCPR3           equ	785	;# 
  1723     0311                     CCPR3L          equ	785	;# 
  1724     0312                     CCPR3H          equ	786	;# 
  1725     0313                     CCP3CON         equ	787	;# 
  1726     0314                     CCP3CAP         equ	788	;# 
  1727     0315                     CCPR4           equ	789	;# 
  1728     0315                     CCPR4L          equ	789	;# 
  1729     0316                     CCPR4H          equ	790	;# 
  1730     0317                     CCP4CON         equ	791	;# 
  1731     0318                     CCP4CAP         equ	792	;# 
  1732     038C                     INLVLA          equ	908	;# 
  1733     038D                     INLVLB          equ	909	;# 
  1734     038E                     INLVLC          equ	910	;# 
  1735     0391                     IOCAP           equ	913	;# 
  1736     0392                     IOCAN           equ	914	;# 
  1737     0393                     IOCAF           equ	915	;# 
  1738     0394                     IOCBP           equ	916	;# 
  1739     0395                     IOCBN           equ	917	;# 
  1740     0396                     IOCBF           equ	918	;# 
  1741     0397                     IOCCP           equ	919	;# 
  1742     0398                     IOCCN           equ	920	;# 
  1743     0399                     IOCCF           equ	921	;# 
  1744     039A                     CLKRCON         equ	922	;# 
  1745     039C                     MDCON           equ	924	;# 
  1746     039D                     MDSRC           equ	925	;# 
  1747     039E                     MDCARH          equ	926	;# 
  1748     039F                     MDCARL          equ	927	;# 
  1749     0411                     TMR3            equ	1041	;# 
  1750     0411                     TMR3L           equ	1041	;# 
  1751     0412                     TMR3H           equ	1042	;# 
  1752     0413                     T3CON           equ	1043	;# 
  1753     0414                     T3GCON          equ	1044	;# 
  1754     0415                     TMR4            equ	1045	;# 
  1755     0416                     PR4             equ	1046	;# 
  1756     0417                     T4CON           equ	1047	;# 
  1757     0418                     TMR5            equ	1048	;# 
  1758     0418                     TMR5L           equ	1048	;# 
  1759     0419                     TMR5H           equ	1049	;# 
  1760     041A                     T5CON           equ	1050	;# 
  1761     041B                     T5GCON          equ	1051	;# 
  1762     041C                     TMR6            equ	1052	;# 
  1763     041D                     PR6             equ	1053	;# 
  1764     041E                     T6CON           equ	1054	;# 
  1765     041F                     CCDCON          equ	1055	;# 
  1766     0498                     NCO1ACC         equ	1176	;# 
  1767     0498                     NCO1ACCL        equ	1176	;# 
  1768     0499                     NCO1ACCH        equ	1177	;# 
  1769     049A                     NCO1ACCU        equ	1178	;# 
  1770     049B                     NCO1INC         equ	1179	;# 
  1771     049B                     NCO1INCL        equ	1179	;# 
  1772     049C                     NCO1INCH        equ	1180	;# 
  1773     049D                     NCO1INCU        equ	1181	;# 
  1774     049E                     NCO1CON         equ	1182	;# 
  1775     049F                     NCO1CLK         equ	1183	;# 
  1776     0617                     PWM5DCL         equ	1559	;# 
  1777     0618                     PWM5DCH         equ	1560	;# 
  1778     0619                     PWM5CON         equ	1561	;# 
  1779     0619                     PWM5CON0        equ	1561	;# 
  1780     061A                     PWM6DCL         equ	1562	;# 
  1781     061B                     PWM6DCH         equ	1563	;# 
  1782     061C                     PWM6CON         equ	1564	;# 
  1783     061C                     PWM6CON0        equ	1564	;# 
  1784     061F                     PWMTMRS         equ	1567	;# 
  1785     0691                     CWG1CLKCON      equ	1681	;# 
  1786     0692                     CWG1DAT         equ	1682	;# 
  1787     0693                     CWG1DBR         equ	1683	;# 
  1788     0694                     CWG1DBF         equ	1684	;# 
  1789     0695                     CWG1CON0        equ	1685	;# 
  1790     0696                     CWG1CON1        equ	1686	;# 
  1791     0697                     CWG1AS0         equ	1687	;# 
  1792     0698                     CWG1AS1         equ	1688	;# 
  1793     0699                     CWG1STR         equ	1689	;# 
  1794     0711                     CWG2CLKCON      equ	1809	;# 
  1795     0712                     CWG2DAT         equ	1810	;# 
  1796     0713                     CWG2DBR         equ	1811	;# 
  1797     0714                     CWG2DBF         equ	1812	;# 
  1798     0715                     CWG2CON0        equ	1813	;# 
  1799     0716                     CWG2CON1        equ	1814	;# 
  1800     0717                     CWG2AS0         equ	1815	;# 
  1801     0718                     CWG2AS1         equ	1816	;# 
  1802     0719                     CWG2STR         equ	1817	;# 
  1803     0891                     NVMADR          equ	2193	;# 
  1804     0891                     EEADR           equ	2193	;# 
  1805     0891                     PMADR           equ	2193	;# 
  1806     0891                     NVMADRL         equ	2193	;# 
  1807     0891                     EEADRL          equ	2193	;# 
  1808     0891                     PMADRL          equ	2193	;# 
  1809     0892                     NVMADRH         equ	2194	;# 
  1810     0892                     EEADRH          equ	2194	;# 
  1811     0892                     PMADRH          equ	2194	;# 
  1812     0893                     NVMDAT          equ	2195	;# 
  1813     0893                     EEDAT           equ	2195	;# 
  1814     0893                     PMDAT           equ	2195	;# 
  1815     0893                     NVMDATL         equ	2195	;# 
  1816     0893                     EEDATL          equ	2195	;# 
  1817     0893                     PMDATL          equ	2195	;# 
  1818     0894                     NVMDATH         equ	2196	;# 
  1819     0894                     EEDATH          equ	2196	;# 
  1820     0894                     PMDATH          equ	2196	;# 
  1821     0895                     NVMCON1         equ	2197	;# 
  1822     0895                     EECON1          equ	2197	;# 
  1823     0895                     PMCON1          equ	2197	;# 
  1824     0896                     NVMCON2         equ	2198	;# 
  1825     0896                     EECON2          equ	2198	;# 
  1826     0896                     PMCON2          equ	2198	;# 
  1827     089B                     PCON0           equ	2203	;# 
  1828     0911                     PMD0            equ	2321	;# 
  1829     0912                     PMD1            equ	2322	;# 
  1830     0913                     PMD2            equ	2323	;# 
  1831     0914                     PMD3            equ	2324	;# 
  1832     0915                     PMD4            equ	2325	;# 
  1833     0916                     PMD5            equ	2326	;# 
  1834     0918                     CPUDOZE         equ	2328	;# 
  1835     0919                     OSCCON1         equ	2329	;# 
  1836     091A                     OSCCON2         equ	2330	;# 
  1837     091B                     OSCCON3         equ	2331	;# 
  1838     091C                     OSCSTAT1        equ	2332	;# 
  1839     091D                     OSCEN           equ	2333	;# 
  1840     091E                     OSCTUNE         equ	2334	;# 
  1841     091F                     OSCFRQ          equ	2335	;# 
  1842     0E0F                     PPSLOCK         equ	3599	;# 
  1843     0E10                     INTPPS          equ	3600	;# 
  1844     0E11                     T0CKIPPS        equ	3601	;# 
  1845     0E12                     T1CKIPPS        equ	3602	;# 
  1846     0E13                     T1GPPS          equ	3603	;# 
  1847     0E14                     CCP1PPS         equ	3604	;# 
  1848     0E15                     CCP2PPS         equ	3605	;# 
  1849     0E16                     CCP3PPS         equ	3606	;# 
  1850     0E17                     CCP4PPS         equ	3607	;# 
  1851     0E18                     CWG1PPS         equ	3608	;# 
  1852     0E19                     CWG2PPS         equ	3609	;# 
  1853     0E1A                     MDCIN1PPS       equ	3610	;# 
  1854     0E1B                     MDCIN2PPS       equ	3611	;# 
  1855     0E1C                     MDMINPPS        equ	3612	;# 
  1856     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1857     0E1E                     SSP2DATPPS      equ	3614	;# 
  1858     0E1F                     SSP2SSPPS       equ	3615	;# 
  1859     0E20                     SSP1CLKPPS      equ	3616	;# 
  1860     0E21                     SSP1DATPPS      equ	3617	;# 
  1861     0E22                     SSP1SSPPS       equ	3618	;# 
  1862     0E24                     RXPPS           equ	3620	;# 
  1863     0E25                     TXPPS           equ	3621	;# 
  1864     0E28                     CLCIN0PPS       equ	3624	;# 
  1865     0E29                     CLCIN1PPS       equ	3625	;# 
  1866     0E2A                     CLCIN2PPS       equ	3626	;# 
  1867     0E2B                     CLCIN3PPS       equ	3627	;# 
  1868     0E2C                     T3CKIPPS        equ	3628	;# 
  1869     0E2D                     T3GPPS          equ	3629	;# 
  1870     0E2E                     T5CKIPPS        equ	3630	;# 
  1871     0E2F                     T5GPPS          equ	3631	;# 
  1872     0E90                     RA0PPS          equ	3728	;# 
  1873     0E91                     RA1PPS          equ	3729	;# 
  1874     0E92                     RA2PPS          equ	3730	;# 
  1875     0E94                     RA4PPS          equ	3732	;# 
  1876     0E95                     RA5PPS          equ	3733	;# 
  1877     0E9C                     RB4PPS          equ	3740	;# 
  1878     0E9D                     RB5PPS          equ	3741	;# 
  1879     0E9E                     RB6PPS          equ	3742	;# 
  1880     0E9F                     RB7PPS          equ	3743	;# 
  1881     0EA0                     RC0PPS          equ	3744	;# 
  1882     0EA1                     RC1PPS          equ	3745	;# 
  1883     0EA2                     RC2PPS          equ	3746	;# 
  1884     0EA3                     RC3PPS          equ	3747	;# 
  1885     0EA4                     RC4PPS          equ	3748	;# 
  1886     0EA5                     RC5PPS          equ	3749	;# 
  1887     0EA6                     RC6PPS          equ	3750	;# 
  1888     0EA7                     RC7PPS          equ	3751	;# 
  1889     0F0F                     CLCDATA         equ	3855	;# 
  1890     0F10                     CLC1CON         equ	3856	;# 
  1891     0F11                     CLC1POL         equ	3857	;# 
  1892     0F12                     CLC1SEL0        equ	3858	;# 
  1893     0F13                     CLC1SEL1        equ	3859	;# 
  1894     0F14                     CLC1SEL2        equ	3860	;# 
  1895     0F15                     CLC1SEL3        equ	3861	;# 
  1896     0F16                     CLC1GLS0        equ	3862	;# 
  1897     0F17                     CLC1GLS1        equ	3863	;# 
  1898     0F18                     CLC1GLS2        equ	3864	;# 
  1899     0F19                     CLC1GLS3        equ	3865	;# 
  1900     0F1A                     CLC2CON         equ	3866	;# 
  1901     0F1B                     CLC2POL         equ	3867	;# 
  1902     0F1C                     CLC2SEL0        equ	3868	;# 
  1903     0F1D                     CLC2SEL1        equ	3869	;# 
  1904     0F1E                     CLC2SEL2        equ	3870	;# 
  1905     0F1F                     CLC2SEL3        equ	3871	;# 
  1906     0F20                     CLC2GLS0        equ	3872	;# 
  1907     0F21                     CLC2GLS1        equ	3873	;# 
  1908     0F22                     CLC2GLS2        equ	3874	;# 
  1909     0F23                     CLC2GLS3        equ	3875	;# 
  1910     0F24                     CLC3CON         equ	3876	;# 
  1911     0F25                     CLC3POL         equ	3877	;# 
  1912     0F26                     CLC3SEL0        equ	3878	;# 
  1913     0F27                     CLC3SEL1        equ	3879	;# 
  1914     0F28                     CLC3SEL2        equ	3880	;# 
  1915     0F29                     CLC3SEL3        equ	3881	;# 
  1916     0F2A                     CLC3GLS0        equ	3882	;# 
  1917     0F2B                     CLC3GLS1        equ	3883	;# 
  1918     0F2C                     CLC3GLS2        equ	3884	;# 
  1919     0F2D                     CLC3GLS3        equ	3885	;# 
  1920     0F2E                     CLC4CON         equ	3886	;# 
  1921     0F2F                     CLC4POL         equ	3887	;# 
  1922     0F30                     CLC4SEL0        equ	3888	;# 
  1923     0F31                     CLC4SEL1        equ	3889	;# 
  1924     0F32                     CLC4SEL2        equ	3890	;# 
  1925     0F33                     CLC4SEL3        equ	3891	;# 
  1926     0F34                     CLC4GLS0        equ	3892	;# 
  1927     0F35                     CLC4GLS1        equ	3893	;# 
  1928     0F36                     CLC4GLS2        equ	3894	;# 
  1929     0F37                     CLC4GLS3        equ	3895	;# 
  1930     0FE4                     STATUS_SHAD     equ	4068	;# 
  1931     0FE5                     WREG_SHAD       equ	4069	;# 
  1932     0FE6                     BSR_SHAD        equ	4070	;# 
  1933     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1934     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1935     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1936     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1937     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1938     0FED                     STKPTR          equ	4077	;# 
  1939     0FEE                     TOSL            equ	4078	;# 
  1940     0FEF                     TOSH            equ	4079	;# 
  1941     0000                     INDF0           equ	0	;# 
  1942     0001                     INDF1           equ	1	;# 
  1943     0002                     PCL             equ	2	;# 
  1944     0003                     STATUS          equ	3	;# 
  1945     0004                     FSR0L           equ	4	;# 
  1946     0005                     FSR0H           equ	5	;# 
  1947     0006                     FSR1L           equ	6	;# 
  1948     0007                     FSR1H           equ	7	;# 
  1949     0008                     BSR             equ	8	;# 
  1950     0009                     WREG            equ	9	;# 
  1951     000A                     PCLATH          equ	10	;# 
  1952     000B                     INTCON          equ	11	;# 
  1953     000C                     PORTA           equ	12	;# 
  1954     000D                     PORTB           equ	13	;# 
  1955     000E                     PORTC           equ	14	;# 
  1956     0010                     PIR0            equ	16	;# 
  1957     0011                     PIR1            equ	17	;# 
  1958     0012                     PIR2            equ	18	;# 
  1959     0013                     PIR3            equ	19	;# 
  1960     0014                     PIR4            equ	20	;# 
  1961     0015                     TMR0L           equ	21	;# 
  1962     0015                     TMR0            equ	21	;# 
  1963     0016                     TMR0H           equ	22	;# 
  1964     0016                     PR0             equ	22	;# 
  1965     0017                     T0CON0          equ	23	;# 
  1966     0018                     T0CON1          equ	24	;# 
  1967     0019                     TMR1            equ	25	;# 
  1968     0019                     TMR1L           equ	25	;# 
  1969     001A                     TMR1H           equ	26	;# 
  1970     001B                     T1CON           equ	27	;# 
  1971     001C                     T1GCON          equ	28	;# 
  1972     001D                     TMR2            equ	29	;# 
  1973     001E                     PR2             equ	30	;# 
  1974     001F                     T2CON           equ	31	;# 
  1975     008C                     TRISA           equ	140	;# 
  1976     008D                     TRISB           equ	141	;# 
  1977     008E                     TRISC           equ	142	;# 
  1978     0090                     PIE0            equ	144	;# 
  1979     0091                     PIE1            equ	145	;# 
  1980     0092                     PIE2            equ	146	;# 
  1981     0093                     PIE3            equ	147	;# 
  1982     0094                     PIE4            equ	148	;# 
  1983     0097                     WDTCON          equ	151	;# 
  1984     009B                     ADRES           equ	155	;# 
  1985     009B                     ADRESL          equ	155	;# 
  1986     009C                     ADRESH          equ	156	;# 
  1987     009D                     ADCON0          equ	157	;# 
  1988     009E                     ADCON1          equ	158	;# 
  1989     009F                     ADACT           equ	159	;# 
  1990     010C                     LATA            equ	268	;# 
  1991     010D                     LATB            equ	269	;# 
  1992     010E                     LATC            equ	270	;# 
  1993     0111                     CM1CON0         equ	273	;# 
  1994     0112                     CM1CON1         equ	274	;# 
  1995     0113                     CM2CON0         equ	275	;# 
  1996     0114                     CM2CON1         equ	276	;# 
  1997     0115                     CMOUT           equ	277	;# 
  1998     0116                     BORCON          equ	278	;# 
  1999     0117                     FVRCON          equ	279	;# 
  2000     0118                     DACCON0         equ	280	;# 
  2001     0119                     DACCON1         equ	281	;# 
  2002     018C                     ANSELA          equ	396	;# 
  2003     018D                     ANSELB          equ	397	;# 
  2004     018E                     ANSELC          equ	398	;# 
  2005     0197                     VREGCON         equ	407	;# 
  2006     0199                     RC1REG          equ	409	;# 
  2007     0199                     RCREG           equ	409	;# 
  2008     0199                     RCREG1          equ	409	;# 
  2009     019A                     TX1REG          equ	410	;# 
  2010     019A                     TXREG1          equ	410	;# 
  2011     019A                     TXREG           equ	410	;# 
  2012     019B                     SP1BRG          equ	411	;# 
  2013     019B                     SPBRG           equ	411	;# 
  2014     019B                     SP1BRGL         equ	411	;# 
  2015     019B                     SPBRG1          equ	411	;# 
  2016     019B                     SPBRGL          equ	411	;# 
  2017     019C                     SP1BRGH         equ	412	;# 
  2018     019C                     SPBRGH          equ	412	;# 
  2019     019C                     SPBRGH1         equ	412	;# 
  2020     019D                     RC1STA          equ	413	;# 
  2021     019D                     RCSTA1          equ	413	;# 
  2022     019D                     RCSTA           equ	413	;# 
  2023     019E                     TX1STA          equ	414	;# 
  2024     019E                     TXSTA1          equ	414	;# 
  2025     019E                     TXSTA           equ	414	;# 
  2026     019F                     BAUD1CON        equ	415	;# 
  2027     019F                     BAUDCON1        equ	415	;# 
  2028     019F                     BAUDCTL1        equ	415	;# 
  2029     019F                     BAUDCON         equ	415	;# 
  2030     019F                     BAUDCTL         equ	415	;# 
  2031     020C                     WPUA            equ	524	;# 
  2032     020D                     WPUB            equ	525	;# 
  2033     020E                     WPUC            equ	526	;# 
  2034     0211                     SSP1BUF         equ	529	;# 
  2035     0211                     SSPBUF          equ	529	;# 
  2036     0212                     SSP1ADD         equ	530	;# 
  2037     0212                     SSPADD          equ	530	;# 
  2038     0213                     SSP1MSK         equ	531	;# 
  2039     0213                     SSPMSK          equ	531	;# 
  2040     0214                     SSP1STAT        equ	532	;# 
  2041     0214                     SSPSTAT         equ	532	;# 
  2042     0215                     SSP1CON1        equ	533	;# 
  2043     0215                     SSPCON          equ	533	;# 
  2044     0215                     SSPCON1         equ	533	;# 
  2045     0215                     SSP1CON         equ	533	;# 
  2046     0216                     SSP1CON2        equ	534	;# 
  2047     0216                     SSPCON2         equ	534	;# 
  2048     0217                     SSP1CON3        equ	535	;# 
  2049     0217                     SSPCON3         equ	535	;# 
  2050     0219                     SSP2BUF         equ	537	;# 
  2051     021A                     SSP2ADD         equ	538	;# 
  2052     021B                     SSP2MSK         equ	539	;# 
  2053     021C                     SSP2STAT        equ	540	;# 
  2054     021D                     SSP2CON1        equ	541	;# 
  2055     021D                     SSP2CON         equ	541	;# 
  2056     021E                     SSP2CON2        equ	542	;# 
  2057     021F                     SSP2CON3        equ	543	;# 
  2058     028C                     ODCONA          equ	652	;# 
  2059     028D                     ODCONB          equ	653	;# 
  2060     028E                     ODCONC          equ	654	;# 
  2061     0291                     CCPR1           equ	657	;# 
  2062     0291                     CCPR1L          equ	657	;# 
  2063     0292                     CCPR1H          equ	658	;# 
  2064     0293                     CCP1CON         equ	659	;# 
  2065     0294                     CCP1CAP         equ	660	;# 
  2066     0295                     CCPR2           equ	661	;# 
  2067     0295                     CCPR2L          equ	661	;# 
  2068     0296                     CCPR2H          equ	662	;# 
  2069     0297                     CCP2CON         equ	663	;# 
  2070     0298                     CCP2CAP         equ	664	;# 
  2071     029F                     CCPTMRS         equ	671	;# 
  2072     030C                     SLRCONA         equ	780	;# 
  2073     030D                     SLRCONB         equ	781	;# 
  2074     030E                     SLRCONC         equ	782	;# 
  2075     0311                     CCPR3           equ	785	;# 
  2076     0311                     CCPR3L          equ	785	;# 
  2077     0312                     CCPR3H          equ	786	;# 
  2078     0313                     CCP3CON         equ	787	;# 
  2079     0314                     CCP3CAP         equ	788	;# 
  2080     0315                     CCPR4           equ	789	;# 
  2081     0315                     CCPR4L          equ	789	;# 
  2082     0316                     CCPR4H          equ	790	;# 
  2083     0317                     CCP4CON         equ	791	;# 
  2084     0318                     CCP4CAP         equ	792	;# 
  2085     038C                     INLVLA          equ	908	;# 
  2086     038D                     INLVLB          equ	909	;# 
  2087     038E                     INLVLC          equ	910	;# 
  2088     0391                     IOCAP           equ	913	;# 
  2089     0392                     IOCAN           equ	914	;# 
  2090     0393                     IOCAF           equ	915	;# 
  2091     0394                     IOCBP           equ	916	;# 
  2092     0395                     IOCBN           equ	917	;# 
  2093     0396                     IOCBF           equ	918	;# 
  2094     0397                     IOCCP           equ	919	;# 
  2095     0398                     IOCCN           equ	920	;# 
  2096     0399                     IOCCF           equ	921	;# 
  2097     039A                     CLKRCON         equ	922	;# 
  2098     039C                     MDCON           equ	924	;# 
  2099     039D                     MDSRC           equ	925	;# 
  2100     039E                     MDCARH          equ	926	;# 
  2101     039F                     MDCARL          equ	927	;# 
  2102     0411                     TMR3            equ	1041	;# 
  2103     0411                     TMR3L           equ	1041	;# 
  2104     0412                     TMR3H           equ	1042	;# 
  2105     0413                     T3CON           equ	1043	;# 
  2106     0414                     T3GCON          equ	1044	;# 
  2107     0415                     TMR4            equ	1045	;# 
  2108     0416                     PR4             equ	1046	;# 
  2109     0417                     T4CON           equ	1047	;# 
  2110     0418                     TMR5            equ	1048	;# 
  2111     0418                     TMR5L           equ	1048	;# 
  2112     0419                     TMR5H           equ	1049	;# 
  2113     041A                     T5CON           equ	1050	;# 
  2114     041B                     T5GCON          equ	1051	;# 
  2115     041C                     TMR6            equ	1052	;# 
  2116     041D                     PR6             equ	1053	;# 
  2117     041E                     T6CON           equ	1054	;# 
  2118     041F                     CCDCON          equ	1055	;# 
  2119     0498                     NCO1ACC         equ	1176	;# 
  2120     0498                     NCO1ACCL        equ	1176	;# 
  2121     0499                     NCO1ACCH        equ	1177	;# 
  2122     049A                     NCO1ACCU        equ	1178	;# 
  2123     049B                     NCO1INC         equ	1179	;# 
  2124     049B                     NCO1INCL        equ	1179	;# 
  2125     049C                     NCO1INCH        equ	1180	;# 
  2126     049D                     NCO1INCU        equ	1181	;# 
  2127     049E                     NCO1CON         equ	1182	;# 
  2128     049F                     NCO1CLK         equ	1183	;# 
  2129     0617                     PWM5DCL         equ	1559	;# 
  2130     0618                     PWM5DCH         equ	1560	;# 
  2131     0619                     PWM5CON         equ	1561	;# 
  2132     0619                     PWM5CON0        equ	1561	;# 
  2133     061A                     PWM6DCL         equ	1562	;# 
  2134     061B                     PWM6DCH         equ	1563	;# 
  2135     061C                     PWM6CON         equ	1564	;# 
  2136     061C                     PWM6CON0        equ	1564	;# 
  2137     061F                     PWMTMRS         equ	1567	;# 
  2138     0691                     CWG1CLKCON      equ	1681	;# 
  2139     0692                     CWG1DAT         equ	1682	;# 
  2140     0693                     CWG1DBR         equ	1683	;# 
  2141     0694                     CWG1DBF         equ	1684	;# 
  2142     0695                     CWG1CON0        equ	1685	;# 
  2143     0696                     CWG1CON1        equ	1686	;# 
  2144     0697                     CWG1AS0         equ	1687	;# 
  2145     0698                     CWG1AS1         equ	1688	;# 
  2146     0699                     CWG1STR         equ	1689	;# 
  2147     0711                     CWG2CLKCON      equ	1809	;# 
  2148     0712                     CWG2DAT         equ	1810	;# 
  2149     0713                     CWG2DBR         equ	1811	;# 
  2150     0714                     CWG2DBF         equ	1812	;# 
  2151     0715                     CWG2CON0        equ	1813	;# 
  2152     0716                     CWG2CON1        equ	1814	;# 
  2153     0717                     CWG2AS0         equ	1815	;# 
  2154     0718                     CWG2AS1         equ	1816	;# 
  2155     0719                     CWG2STR         equ	1817	;# 
  2156     0891                     NVMADR          equ	2193	;# 
  2157     0891                     EEADR           equ	2193	;# 
  2158     0891                     PMADR           equ	2193	;# 
  2159     0891                     NVMADRL         equ	2193	;# 
  2160     0891                     EEADRL          equ	2193	;# 
  2161     0891                     PMADRL          equ	2193	;# 
  2162     0892                     NVMADRH         equ	2194	;# 
  2163     0892                     EEADRH          equ	2194	;# 
  2164     0892                     PMADRH          equ	2194	;# 
  2165     0893                     NVMDAT          equ	2195	;# 
  2166     0893                     EEDAT           equ	2195	;# 
  2167     0893                     PMDAT           equ	2195	;# 
  2168     0893                     NVMDATL         equ	2195	;# 
  2169     0893                     EEDATL          equ	2195	;# 
  2170     0893                     PMDATL          equ	2195	;# 
  2171     0894                     NVMDATH         equ	2196	;# 
  2172     0894                     EEDATH          equ	2196	;# 
  2173     0894                     PMDATH          equ	2196	;# 
  2174     0895                     NVMCON1         equ	2197	;# 
  2175     0895                     EECON1          equ	2197	;# 
  2176     0895                     PMCON1          equ	2197	;# 
  2177     0896                     NVMCON2         equ	2198	;# 
  2178     0896                     EECON2          equ	2198	;# 
  2179     0896                     PMCON2          equ	2198	;# 
  2180     089B                     PCON0           equ	2203	;# 
  2181     0911                     PMD0            equ	2321	;# 
  2182     0912                     PMD1            equ	2322	;# 
  2183     0913                     PMD2            equ	2323	;# 
  2184     0914                     PMD3            equ	2324	;# 
  2185     0915                     PMD4            equ	2325	;# 
  2186     0916                     PMD5            equ	2326	;# 
  2187     0918                     CPUDOZE         equ	2328	;# 
  2188     0919                     OSCCON1         equ	2329	;# 
  2189     091A                     OSCCON2         equ	2330	;# 
  2190     091B                     OSCCON3         equ	2331	;# 
  2191     091C                     OSCSTAT1        equ	2332	;# 
  2192     091D                     OSCEN           equ	2333	;# 
  2193     091E                     OSCTUNE         equ	2334	;# 
  2194     091F                     OSCFRQ          equ	2335	;# 
  2195     0E0F                     PPSLOCK         equ	3599	;# 
  2196     0E10                     INTPPS          equ	3600	;# 
  2197     0E11                     T0CKIPPS        equ	3601	;# 
  2198     0E12                     T1CKIPPS        equ	3602	;# 
  2199     0E13                     T1GPPS          equ	3603	;# 
  2200     0E14                     CCP1PPS         equ	3604	;# 
  2201     0E15                     CCP2PPS         equ	3605	;# 
  2202     0E16                     CCP3PPS         equ	3606	;# 
  2203     0E17                     CCP4PPS         equ	3607	;# 
  2204     0E18                     CWG1PPS         equ	3608	;# 
  2205     0E19                     CWG2PPS         equ	3609	;# 
  2206     0E1A                     MDCIN1PPS       equ	3610	;# 
  2207     0E1B                     MDCIN2PPS       equ	3611	;# 
  2208     0E1C                     MDMINPPS        equ	3612	;# 
  2209     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2210     0E1E                     SSP2DATPPS      equ	3614	;# 
  2211     0E1F                     SSP2SSPPS       equ	3615	;# 
  2212     0E20                     SSP1CLKPPS      equ	3616	;# 
  2213     0E21                     SSP1DATPPS      equ	3617	;# 
  2214     0E22                     SSP1SSPPS       equ	3618	;# 
  2215     0E24                     RXPPS           equ	3620	;# 
  2216     0E25                     TXPPS           equ	3621	;# 
  2217     0E28                     CLCIN0PPS       equ	3624	;# 
  2218     0E29                     CLCIN1PPS       equ	3625	;# 
  2219     0E2A                     CLCIN2PPS       equ	3626	;# 
  2220     0E2B                     CLCIN3PPS       equ	3627	;# 
  2221     0E2C                     T3CKIPPS        equ	3628	;# 
  2222     0E2D                     T3GPPS          equ	3629	;# 
  2223     0E2E                     T5CKIPPS        equ	3630	;# 
  2224     0E2F                     T5GPPS          equ	3631	;# 
  2225     0E90                     RA0PPS          equ	3728	;# 
  2226     0E91                     RA1PPS          equ	3729	;# 
  2227     0E92                     RA2PPS          equ	3730	;# 
  2228     0E94                     RA4PPS          equ	3732	;# 
  2229     0E95                     RA5PPS          equ	3733	;# 
  2230     0E9C                     RB4PPS          equ	3740	;# 
  2231     0E9D                     RB5PPS          equ	3741	;# 
  2232     0E9E                     RB6PPS          equ	3742	;# 
  2233     0E9F                     RB7PPS          equ	3743	;# 
  2234     0EA0                     RC0PPS          equ	3744	;# 
  2235     0EA1                     RC1PPS          equ	3745	;# 
  2236     0EA2                     RC2PPS          equ	3746	;# 
  2237     0EA3                     RC3PPS          equ	3747	;# 
  2238     0EA4                     RC4PPS          equ	3748	;# 
  2239     0EA5                     RC5PPS          equ	3749	;# 
  2240     0EA6                     RC6PPS          equ	3750	;# 
  2241     0EA7                     RC7PPS          equ	3751	;# 
  2242     0F0F                     CLCDATA         equ	3855	;# 
  2243     0F10                     CLC1CON         equ	3856	;# 
  2244     0F11                     CLC1POL         equ	3857	;# 
  2245     0F12                     CLC1SEL0        equ	3858	;# 
  2246     0F13                     CLC1SEL1        equ	3859	;# 
  2247     0F14                     CLC1SEL2        equ	3860	;# 
  2248     0F15                     CLC1SEL3        equ	3861	;# 
  2249     0F16                     CLC1GLS0        equ	3862	;# 
  2250     0F17                     CLC1GLS1        equ	3863	;# 
  2251     0F18                     CLC1GLS2        equ	3864	;# 
  2252     0F19                     CLC1GLS3        equ	3865	;# 
  2253     0F1A                     CLC2CON         equ	3866	;# 
  2254     0F1B                     CLC2POL         equ	3867	;# 
  2255     0F1C                     CLC2SEL0        equ	3868	;# 
  2256     0F1D                     CLC2SEL1        equ	3869	;# 
  2257     0F1E                     CLC2SEL2        equ	3870	;# 
  2258     0F1F                     CLC2SEL3        equ	3871	;# 
  2259     0F20                     CLC2GLS0        equ	3872	;# 
  2260     0F21                     CLC2GLS1        equ	3873	;# 
  2261     0F22                     CLC2GLS2        equ	3874	;# 
  2262     0F23                     CLC2GLS3        equ	3875	;# 
  2263     0F24                     CLC3CON         equ	3876	;# 
  2264     0F25                     CLC3POL         equ	3877	;# 
  2265     0F26                     CLC3SEL0        equ	3878	;# 
  2266     0F27                     CLC3SEL1        equ	3879	;# 
  2267     0F28                     CLC3SEL2        equ	3880	;# 
  2268     0F29                     CLC3SEL3        equ	3881	;# 
  2269     0F2A                     CLC3GLS0        equ	3882	;# 
  2270     0F2B                     CLC3GLS1        equ	3883	;# 
  2271     0F2C                     CLC3GLS2        equ	3884	;# 
  2272     0F2D                     CLC3GLS3        equ	3885	;# 
  2273     0F2E                     CLC4CON         equ	3886	;# 
  2274     0F2F                     CLC4POL         equ	3887	;# 
  2275     0F30                     CLC4SEL0        equ	3888	;# 
  2276     0F31                     CLC4SEL1        equ	3889	;# 
  2277     0F32                     CLC4SEL2        equ	3890	;# 
  2278     0F33                     CLC4SEL3        equ	3891	;# 
  2279     0F34                     CLC4GLS0        equ	3892	;# 
  2280     0F35                     CLC4GLS1        equ	3893	;# 
  2281     0F36                     CLC4GLS2        equ	3894	;# 
  2282     0F37                     CLC4GLS3        equ	3895	;# 
  2283     0FE4                     STATUS_SHAD     equ	4068	;# 
  2284     0FE5                     WREG_SHAD       equ	4069	;# 
  2285     0FE6                     BSR_SHAD        equ	4070	;# 
  2286     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2287     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2288     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2289     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2290     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2291     0FED                     STKPTR          equ	4077	;# 
  2292     0FEE                     TOSL            equ	4078	;# 
  2293     0FEF                     TOSH            equ	4079	;# 
  2294     0000                     INDF0           equ	0	;# 
  2295     0001                     INDF1           equ	1	;# 
  2296     0002                     PCL             equ	2	;# 
  2297     0003                     STATUS          equ	3	;# 
  2298     0004                     FSR0L           equ	4	;# 
  2299     0005                     FSR0H           equ	5	;# 
  2300     0006                     FSR1L           equ	6	;# 
  2301     0007                     FSR1H           equ	7	;# 
  2302     0008                     BSR             equ	8	;# 
  2303     0009                     WREG            equ	9	;# 
  2304     000A                     PCLATH          equ	10	;# 
  2305     000B                     INTCON          equ	11	;# 
  2306     000C                     PORTA           equ	12	;# 
  2307     000D                     PORTB           equ	13	;# 
  2308     000E                     PORTC           equ	14	;# 
  2309     0010                     PIR0            equ	16	;# 
  2310     0011                     PIR1            equ	17	;# 
  2311     0012                     PIR2            equ	18	;# 
  2312     0013                     PIR3            equ	19	;# 
  2313     0014                     PIR4            equ	20	;# 
  2314     0015                     TMR0L           equ	21	;# 
  2315     0015                     TMR0            equ	21	;# 
  2316     0016                     TMR0H           equ	22	;# 
  2317     0016                     PR0             equ	22	;# 
  2318     0017                     T0CON0          equ	23	;# 
  2319     0018                     T0CON1          equ	24	;# 
  2320     0019                     TMR1            equ	25	;# 
  2321     0019                     TMR1L           equ	25	;# 
  2322     001A                     TMR1H           equ	26	;# 
  2323     001B                     T1CON           equ	27	;# 
  2324     001C                     T1GCON          equ	28	;# 
  2325     001D                     TMR2            equ	29	;# 
  2326     001E                     PR2             equ	30	;# 
  2327     001F                     T2CON           equ	31	;# 
  2328     008C                     TRISA           equ	140	;# 
  2329     008D                     TRISB           equ	141	;# 
  2330     008E                     TRISC           equ	142	;# 
  2331     0090                     PIE0            equ	144	;# 
  2332     0091                     PIE1            equ	145	;# 
  2333     0092                     PIE2            equ	146	;# 
  2334     0093                     PIE3            equ	147	;# 
  2335     0094                     PIE4            equ	148	;# 
  2336     0097                     WDTCON          equ	151	;# 
  2337     009B                     ADRES           equ	155	;# 
  2338     009B                     ADRESL          equ	155	;# 
  2339     009C                     ADRESH          equ	156	;# 
  2340     009D                     ADCON0          equ	157	;# 
  2341     009E                     ADCON1          equ	158	;# 
  2342     009F                     ADACT           equ	159	;# 
  2343     010C                     LATA            equ	268	;# 
  2344     010D                     LATB            equ	269	;# 
  2345     010E                     LATC            equ	270	;# 
  2346     0111                     CM1CON0         equ	273	;# 
  2347     0112                     CM1CON1         equ	274	;# 
  2348     0113                     CM2CON0         equ	275	;# 
  2349     0114                     CM2CON1         equ	276	;# 
  2350     0115                     CMOUT           equ	277	;# 
  2351     0116                     BORCON          equ	278	;# 
  2352     0117                     FVRCON          equ	279	;# 
  2353     0118                     DACCON0         equ	280	;# 
  2354     0119                     DACCON1         equ	281	;# 
  2355     018C                     ANSELA          equ	396	;# 
  2356     018D                     ANSELB          equ	397	;# 
  2357     018E                     ANSELC          equ	398	;# 
  2358     0197                     VREGCON         equ	407	;# 
  2359     0199                     RC1REG          equ	409	;# 
  2360     0199                     RCREG           equ	409	;# 
  2361     0199                     RCREG1          equ	409	;# 
  2362     019A                     TX1REG          equ	410	;# 
  2363     019A                     TXREG1          equ	410	;# 
  2364     019A                     TXREG           equ	410	;# 
  2365     019B                     SP1BRG          equ	411	;# 
  2366     019B                     SPBRG           equ	411	;# 
  2367     019B                     SP1BRGL         equ	411	;# 
  2368     019B                     SPBRG1          equ	411	;# 
  2369     019B                     SPBRGL          equ	411	;# 
  2370     019C                     SP1BRGH         equ	412	;# 
  2371     019C                     SPBRGH          equ	412	;# 
  2372     019C                     SPBRGH1         equ	412	;# 
  2373     019D                     RC1STA          equ	413	;# 
  2374     019D                     RCSTA1          equ	413	;# 
  2375     019D                     RCSTA           equ	413	;# 
  2376     019E                     TX1STA          equ	414	;# 
  2377     019E                     TXSTA1          equ	414	;# 
  2378     019E                     TXSTA           equ	414	;# 
  2379     019F                     BAUD1CON        equ	415	;# 
  2380     019F                     BAUDCON1        equ	415	;# 
  2381     019F                     BAUDCTL1        equ	415	;# 
  2382     019F                     BAUDCON         equ	415	;# 
  2383     019F                     BAUDCTL         equ	415	;# 
  2384     020C                     WPUA            equ	524	;# 
  2385     020D                     WPUB            equ	525	;# 
  2386     020E                     WPUC            equ	526	;# 
  2387     0211                     SSP1BUF         equ	529	;# 
  2388     0211                     SSPBUF          equ	529	;# 
  2389     0212                     SSP1ADD         equ	530	;# 
  2390     0212                     SSPADD          equ	530	;# 
  2391     0213                     SSP1MSK         equ	531	;# 
  2392     0213                     SSPMSK          equ	531	;# 
  2393     0214                     SSP1STAT        equ	532	;# 
  2394     0214                     SSPSTAT         equ	532	;# 
  2395     0215                     SSP1CON1        equ	533	;# 
  2396     0215                     SSPCON          equ	533	;# 
  2397     0215                     SSPCON1         equ	533	;# 
  2398     0215                     SSP1CON         equ	533	;# 
  2399     0216                     SSP1CON2        equ	534	;# 
  2400     0216                     SSPCON2         equ	534	;# 
  2401     0217                     SSP1CON3        equ	535	;# 
  2402     0217                     SSPCON3         equ	535	;# 
  2403     0219                     SSP2BUF         equ	537	;# 
  2404     021A                     SSP2ADD         equ	538	;# 
  2405     021B                     SSP2MSK         equ	539	;# 
  2406     021C                     SSP2STAT        equ	540	;# 
  2407     021D                     SSP2CON1        equ	541	;# 
  2408     021D                     SSP2CON         equ	541	;# 
  2409     021E                     SSP2CON2        equ	542	;# 
  2410     021F                     SSP2CON3        equ	543	;# 
  2411     028C                     ODCONA          equ	652	;# 
  2412     028D                     ODCONB          equ	653	;# 
  2413     028E                     ODCONC          equ	654	;# 
  2414     0291                     CCPR1           equ	657	;# 
  2415     0291                     CCPR1L          equ	657	;# 
  2416     0292                     CCPR1H          equ	658	;# 
  2417     0293                     CCP1CON         equ	659	;# 
  2418     0294                     CCP1CAP         equ	660	;# 
  2419     0295                     CCPR2           equ	661	;# 
  2420     0295                     CCPR2L          equ	661	;# 
  2421     0296                     CCPR2H          equ	662	;# 
  2422     0297                     CCP2CON         equ	663	;# 
  2423     0298                     CCP2CAP         equ	664	;# 
  2424     029F                     CCPTMRS         equ	671	;# 
  2425     030C                     SLRCONA         equ	780	;# 
  2426     030D                     SLRCONB         equ	781	;# 
  2427     030E                     SLRCONC         equ	782	;# 
  2428     0311                     CCPR3           equ	785	;# 
  2429     0311                     CCPR3L          equ	785	;# 
  2430     0312                     CCPR3H          equ	786	;# 
  2431     0313                     CCP3CON         equ	787	;# 
  2432     0314                     CCP3CAP         equ	788	;# 
  2433     0315                     CCPR4           equ	789	;# 
  2434     0315                     CCPR4L          equ	789	;# 
  2435     0316                     CCPR4H          equ	790	;# 
  2436     0317                     CCP4CON         equ	791	;# 
  2437     0318                     CCP4CAP         equ	792	;# 
  2438     038C                     INLVLA          equ	908	;# 
  2439     038D                     INLVLB          equ	909	;# 
  2440     038E                     INLVLC          equ	910	;# 
  2441     0391                     IOCAP           equ	913	;# 
  2442     0392                     IOCAN           equ	914	;# 
  2443     0393                     IOCAF           equ	915	;# 
  2444     0394                     IOCBP           equ	916	;# 
  2445     0395                     IOCBN           equ	917	;# 
  2446     0396                     IOCBF           equ	918	;# 
  2447     0397                     IOCCP           equ	919	;# 
  2448     0398                     IOCCN           equ	920	;# 
  2449     0399                     IOCCF           equ	921	;# 
  2450     039A                     CLKRCON         equ	922	;# 
  2451     039C                     MDCON           equ	924	;# 
  2452     039D                     MDSRC           equ	925	;# 
  2453     039E                     MDCARH          equ	926	;# 
  2454     039F                     MDCARL          equ	927	;# 
  2455     0411                     TMR3            equ	1041	;# 
  2456     0411                     TMR3L           equ	1041	;# 
  2457     0412                     TMR3H           equ	1042	;# 
  2458     0413                     T3CON           equ	1043	;# 
  2459     0414                     T3GCON          equ	1044	;# 
  2460     0415                     TMR4            equ	1045	;# 
  2461     0416                     PR4             equ	1046	;# 
  2462     0417                     T4CON           equ	1047	;# 
  2463     0418                     TMR5            equ	1048	;# 
  2464     0418                     TMR5L           equ	1048	;# 
  2465     0419                     TMR5H           equ	1049	;# 
  2466     041A                     T5CON           equ	1050	;# 
  2467     041B                     T5GCON          equ	1051	;# 
  2468     041C                     TMR6            equ	1052	;# 
  2469     041D                     PR6             equ	1053	;# 
  2470     041E                     T6CON           equ	1054	;# 
  2471     041F                     CCDCON          equ	1055	;# 
  2472     0498                     NCO1ACC         equ	1176	;# 
  2473     0498                     NCO1ACCL        equ	1176	;# 
  2474     0499                     NCO1ACCH        equ	1177	;# 
  2475     049A                     NCO1ACCU        equ	1178	;# 
  2476     049B                     NCO1INC         equ	1179	;# 
  2477     049B                     NCO1INCL        equ	1179	;# 
  2478     049C                     NCO1INCH        equ	1180	;# 
  2479     049D                     NCO1INCU        equ	1181	;# 
  2480     049E                     NCO1CON         equ	1182	;# 
  2481     049F                     NCO1CLK         equ	1183	;# 
  2482     0617                     PWM5DCL         equ	1559	;# 
  2483     0618                     PWM5DCH         equ	1560	;# 
  2484     0619                     PWM5CON         equ	1561	;# 
  2485     0619                     PWM5CON0        equ	1561	;# 
  2486     061A                     PWM6DCL         equ	1562	;# 
  2487     061B                     PWM6DCH         equ	1563	;# 
  2488     061C                     PWM6CON         equ	1564	;# 
  2489     061C                     PWM6CON0        equ	1564	;# 
  2490     061F                     PWMTMRS         equ	1567	;# 
  2491     0691                     CWG1CLKCON      equ	1681	;# 
  2492     0692                     CWG1DAT         equ	1682	;# 
  2493     0693                     CWG1DBR         equ	1683	;# 
  2494     0694                     CWG1DBF         equ	1684	;# 
  2495     0695                     CWG1CON0        equ	1685	;# 
  2496     0696                     CWG1CON1        equ	1686	;# 
  2497     0697                     CWG1AS0         equ	1687	;# 
  2498     0698                     CWG1AS1         equ	1688	;# 
  2499     0699                     CWG1STR         equ	1689	;# 
  2500     0711                     CWG2CLKCON      equ	1809	;# 
  2501     0712                     CWG2DAT         equ	1810	;# 
  2502     0713                     CWG2DBR         equ	1811	;# 
  2503     0714                     CWG2DBF         equ	1812	;# 
  2504     0715                     CWG2CON0        equ	1813	;# 
  2505     0716                     CWG2CON1        equ	1814	;# 
  2506     0717                     CWG2AS0         equ	1815	;# 
  2507     0718                     CWG2AS1         equ	1816	;# 
  2508     0719                     CWG2STR         equ	1817	;# 
  2509     0891                     NVMADR          equ	2193	;# 
  2510     0891                     EEADR           equ	2193	;# 
  2511     0891                     PMADR           equ	2193	;# 
  2512     0891                     NVMADRL         equ	2193	;# 
  2513     0891                     EEADRL          equ	2193	;# 
  2514     0891                     PMADRL          equ	2193	;# 
  2515     0892                     NVMADRH         equ	2194	;# 
  2516     0892                     EEADRH          equ	2194	;# 
  2517     0892                     PMADRH          equ	2194	;# 
  2518     0893                     NVMDAT          equ	2195	;# 
  2519     0893                     EEDAT           equ	2195	;# 
  2520     0893                     PMDAT           equ	2195	;# 
  2521     0893                     NVMDATL         equ	2195	;# 
  2522     0893                     EEDATL          equ	2195	;# 
  2523     0893                     PMDATL          equ	2195	;# 
  2524     0894                     NVMDATH         equ	2196	;# 
  2525     0894                     EEDATH          equ	2196	;# 
  2526     0894                     PMDATH          equ	2196	;# 
  2527     0895                     NVMCON1         equ	2197	;# 
  2528     0895                     EECON1          equ	2197	;# 
  2529     0895                     PMCON1          equ	2197	;# 
  2530     0896                     NVMCON2         equ	2198	;# 
  2531     0896                     EECON2          equ	2198	;# 
  2532     0896                     PMCON2          equ	2198	;# 
  2533     089B                     PCON0           equ	2203	;# 
  2534     0911                     PMD0            equ	2321	;# 
  2535     0912                     PMD1            equ	2322	;# 
  2536     0913                     PMD2            equ	2323	;# 
  2537     0914                     PMD3            equ	2324	;# 
  2538     0915                     PMD4            equ	2325	;# 
  2539     0916                     PMD5            equ	2326	;# 
  2540     0918                     CPUDOZE         equ	2328	;# 
  2541     0919                     OSCCON1         equ	2329	;# 
  2542     091A                     OSCCON2         equ	2330	;# 
  2543     091B                     OSCCON3         equ	2331	;# 
  2544     091C                     OSCSTAT1        equ	2332	;# 
  2545     091D                     OSCEN           equ	2333	;# 
  2546     091E                     OSCTUNE         equ	2334	;# 
  2547     091F                     OSCFRQ          equ	2335	;# 
  2548     0E0F                     PPSLOCK         equ	3599	;# 
  2549     0E10                     INTPPS          equ	3600	;# 
  2550     0E11                     T0CKIPPS        equ	3601	;# 
  2551     0E12                     T1CKIPPS        equ	3602	;# 
  2552     0E13                     T1GPPS          equ	3603	;# 
  2553     0E14                     CCP1PPS         equ	3604	;# 
  2554     0E15                     CCP2PPS         equ	3605	;# 
  2555     0E16                     CCP3PPS         equ	3606	;# 
  2556     0E17                     CCP4PPS         equ	3607	;# 
  2557     0E18                     CWG1PPS         equ	3608	;# 
  2558     0E19                     CWG2PPS         equ	3609	;# 
  2559     0E1A                     MDCIN1PPS       equ	3610	;# 
  2560     0E1B                     MDCIN2PPS       equ	3611	;# 
  2561     0E1C                     MDMINPPS        equ	3612	;# 
  2562     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2563     0E1E                     SSP2DATPPS      equ	3614	;# 
  2564     0E1F                     SSP2SSPPS       equ	3615	;# 
  2565     0E20                     SSP1CLKPPS      equ	3616	;# 
  2566     0E21                     SSP1DATPPS      equ	3617	;# 
  2567     0E22                     SSP1SSPPS       equ	3618	;# 
  2568     0E24                     RXPPS           equ	3620	;# 
  2569     0E25                     TXPPS           equ	3621	;# 
  2570     0E28                     CLCIN0PPS       equ	3624	;# 
  2571     0E29                     CLCIN1PPS       equ	3625	;# 
  2572     0E2A                     CLCIN2PPS       equ	3626	;# 
  2573     0E2B                     CLCIN3PPS       equ	3627	;# 
  2574     0E2C                     T3CKIPPS        equ	3628	;# 
  2575     0E2D                     T3GPPS          equ	3629	;# 
  2576     0E2E                     T5CKIPPS        equ	3630	;# 
  2577     0E2F                     T5GPPS          equ	3631	;# 
  2578     0E90                     RA0PPS          equ	3728	;# 
  2579     0E91                     RA1PPS          equ	3729	;# 
  2580     0E92                     RA2PPS          equ	3730	;# 
  2581     0E94                     RA4PPS          equ	3732	;# 
  2582     0E95                     RA5PPS          equ	3733	;# 
  2583     0E9C                     RB4PPS          equ	3740	;# 
  2584     0E9D                     RB5PPS          equ	3741	;# 
  2585     0E9E                     RB6PPS          equ	3742	;# 
  2586     0E9F                     RB7PPS          equ	3743	;# 
  2587     0EA0                     RC0PPS          equ	3744	;# 
  2588     0EA1                     RC1PPS          equ	3745	;# 
  2589     0EA2                     RC2PPS          equ	3746	;# 
  2590     0EA3                     RC3PPS          equ	3747	;# 
  2591     0EA4                     RC4PPS          equ	3748	;# 
  2592     0EA5                     RC5PPS          equ	3749	;# 
  2593     0EA6                     RC6PPS          equ	3750	;# 
  2594     0EA7                     RC7PPS          equ	3751	;# 
  2595     0F0F                     CLCDATA         equ	3855	;# 
  2596     0F10                     CLC1CON         equ	3856	;# 
  2597     0F11                     CLC1POL         equ	3857	;# 
  2598     0F12                     CLC1SEL0        equ	3858	;# 
  2599     0F13                     CLC1SEL1        equ	3859	;# 
  2600     0F14                     CLC1SEL2        equ	3860	;# 
  2601     0F15                     CLC1SEL3        equ	3861	;# 
  2602     0F16                     CLC1GLS0        equ	3862	;# 
  2603     0F17                     CLC1GLS1        equ	3863	;# 
  2604     0F18                     CLC1GLS2        equ	3864	;# 
  2605     0F19                     CLC1GLS3        equ	3865	;# 
  2606     0F1A                     CLC2CON         equ	3866	;# 
  2607     0F1B                     CLC2POL         equ	3867	;# 
  2608     0F1C                     CLC2SEL0        equ	3868	;# 
  2609     0F1D                     CLC2SEL1        equ	3869	;# 
  2610     0F1E                     CLC2SEL2        equ	3870	;# 
  2611     0F1F                     CLC2SEL3        equ	3871	;# 
  2612     0F20                     CLC2GLS0        equ	3872	;# 
  2613     0F21                     CLC2GLS1        equ	3873	;# 
  2614     0F22                     CLC2GLS2        equ	3874	;# 
  2615     0F23                     CLC2GLS3        equ	3875	;# 
  2616     0F24                     CLC3CON         equ	3876	;# 
  2617     0F25                     CLC3POL         equ	3877	;# 
  2618     0F26                     CLC3SEL0        equ	3878	;# 
  2619     0F27                     CLC3SEL1        equ	3879	;# 
  2620     0F28                     CLC3SEL2        equ	3880	;# 
  2621     0F29                     CLC3SEL3        equ	3881	;# 
  2622     0F2A                     CLC3GLS0        equ	3882	;# 
  2623     0F2B                     CLC3GLS1        equ	3883	;# 
  2624     0F2C                     CLC3GLS2        equ	3884	;# 
  2625     0F2D                     CLC3GLS3        equ	3885	;# 
  2626     0F2E                     CLC4CON         equ	3886	;# 
  2627     0F2F                     CLC4POL         equ	3887	;# 
  2628     0F30                     CLC4SEL0        equ	3888	;# 
  2629     0F31                     CLC4SEL1        equ	3889	;# 
  2630     0F32                     CLC4SEL2        equ	3890	;# 
  2631     0F33                     CLC4SEL3        equ	3891	;# 
  2632     0F34                     CLC4GLS0        equ	3892	;# 
  2633     0F35                     CLC4GLS1        equ	3893	;# 
  2634     0F36                     CLC4GLS2        equ	3894	;# 
  2635     0F37                     CLC4GLS3        equ	3895	;# 
  2636     0FE4                     STATUS_SHAD     equ	4068	;# 
  2637     0FE5                     WREG_SHAD       equ	4069	;# 
  2638     0FE6                     BSR_SHAD        equ	4070	;# 
  2639     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2640     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2641     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2642     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2643     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2644     0FED                     STKPTR          equ	4077	;# 
  2645     0FEE                     TOSL            equ	4078	;# 
  2646     0FEF                     TOSH            equ	4079	;# 
  2647     0000                     INDF0           equ	0	;# 
  2648     0001                     INDF1           equ	1	;# 
  2649     0002                     PCL             equ	2	;# 
  2650     0003                     STATUS          equ	3	;# 
  2651     0004                     FSR0L           equ	4	;# 
  2652     0005                     FSR0H           equ	5	;# 
  2653     0006                     FSR1L           equ	6	;# 
  2654     0007                     FSR1H           equ	7	;# 
  2655     0008                     BSR             equ	8	;# 
  2656     0009                     WREG            equ	9	;# 
  2657     000A                     PCLATH          equ	10	;# 
  2658     000B                     INTCON          equ	11	;# 
  2659     000C                     PORTA           equ	12	;# 
  2660     000D                     PORTB           equ	13	;# 
  2661     000E                     PORTC           equ	14	;# 
  2662     0010                     PIR0            equ	16	;# 
  2663     0011                     PIR1            equ	17	;# 
  2664     0012                     PIR2            equ	18	;# 
  2665     0013                     PIR3            equ	19	;# 
  2666     0014                     PIR4            equ	20	;# 
  2667     0015                     TMR0L           equ	21	;# 
  2668     0015                     TMR0            equ	21	;# 
  2669     0016                     TMR0H           equ	22	;# 
  2670     0016                     PR0             equ	22	;# 
  2671     0017                     T0CON0          equ	23	;# 
  2672     0018                     T0CON1          equ	24	;# 
  2673     0019                     TMR1            equ	25	;# 
  2674     0019                     TMR1L           equ	25	;# 
  2675     001A                     TMR1H           equ	26	;# 
  2676     001B                     T1CON           equ	27	;# 
  2677     001C                     T1GCON          equ	28	;# 
  2678     001D                     TMR2            equ	29	;# 
  2679     001E                     PR2             equ	30	;# 
  2680     001F                     T2CON           equ	31	;# 
  2681     008C                     TRISA           equ	140	;# 
  2682     008D                     TRISB           equ	141	;# 
  2683     008E                     TRISC           equ	142	;# 
  2684     0090                     PIE0            equ	144	;# 
  2685     0091                     PIE1            equ	145	;# 
  2686     0092                     PIE2            equ	146	;# 
  2687     0093                     PIE3            equ	147	;# 
  2688     0094                     PIE4            equ	148	;# 
  2689     0097                     WDTCON          equ	151	;# 
  2690     009B                     ADRES           equ	155	;# 
  2691     009B                     ADRESL          equ	155	;# 
  2692     009C                     ADRESH          equ	156	;# 
  2693     009D                     ADCON0          equ	157	;# 
  2694     009E                     ADCON1          equ	158	;# 
  2695     009F                     ADACT           equ	159	;# 
  2696     010C                     LATA            equ	268	;# 
  2697     010D                     LATB            equ	269	;# 
  2698     010E                     LATC            equ	270	;# 
  2699     0111                     CM1CON0         equ	273	;# 
  2700     0112                     CM1CON1         equ	274	;# 
  2701     0113                     CM2CON0         equ	275	;# 
  2702     0114                     CM2CON1         equ	276	;# 
  2703     0115                     CMOUT           equ	277	;# 
  2704     0116                     BORCON          equ	278	;# 
  2705     0117                     FVRCON          equ	279	;# 
  2706     0118                     DACCON0         equ	280	;# 
  2707     0119                     DACCON1         equ	281	;# 
  2708     018C                     ANSELA          equ	396	;# 
  2709     018D                     ANSELB          equ	397	;# 
  2710     018E                     ANSELC          equ	398	;# 
  2711     0197                     VREGCON         equ	407	;# 
  2712     0199                     RC1REG          equ	409	;# 
  2713     0199                     RCREG           equ	409	;# 
  2714     0199                     RCREG1          equ	409	;# 
  2715     019A                     TX1REG          equ	410	;# 
  2716     019A                     TXREG1          equ	410	;# 
  2717     019A                     TXREG           equ	410	;# 
  2718     019B                     SP1BRG          equ	411	;# 
  2719     019B                     SPBRG           equ	411	;# 
  2720     019B                     SP1BRGL         equ	411	;# 
  2721     019B                     SPBRG1          equ	411	;# 
  2722     019B                     SPBRGL          equ	411	;# 
  2723     019C                     SP1BRGH         equ	412	;# 
  2724     019C                     SPBRGH          equ	412	;# 
  2725     019C                     SPBRGH1         equ	412	;# 
  2726     019D                     RC1STA          equ	413	;# 
  2727     019D                     RCSTA1          equ	413	;# 
  2728     019D                     RCSTA           equ	413	;# 
  2729     019E                     TX1STA          equ	414	;# 
  2730     019E                     TXSTA1          equ	414	;# 
  2731     019E                     TXSTA           equ	414	;# 
  2732     019F                     BAUD1CON        equ	415	;# 
  2733     019F                     BAUDCON1        equ	415	;# 
  2734     019F                     BAUDCTL1        equ	415	;# 
  2735     019F                     BAUDCON         equ	415	;# 
  2736     019F                     BAUDCTL         equ	415	;# 
  2737     020C                     WPUA            equ	524	;# 
  2738     020D                     WPUB            equ	525	;# 
  2739     020E                     WPUC            equ	526	;# 
  2740     0211                     SSP1BUF         equ	529	;# 
  2741     0211                     SSPBUF          equ	529	;# 
  2742     0212                     SSP1ADD         equ	530	;# 
  2743     0212                     SSPADD          equ	530	;# 
  2744     0213                     SSP1MSK         equ	531	;# 
  2745     0213                     SSPMSK          equ	531	;# 
  2746     0214                     SSP1STAT        equ	532	;# 
  2747     0214                     SSPSTAT         equ	532	;# 
  2748     0215                     SSP1CON1        equ	533	;# 
  2749     0215                     SSPCON          equ	533	;# 
  2750     0215                     SSPCON1         equ	533	;# 
  2751     0215                     SSP1CON         equ	533	;# 
  2752     0216                     SSP1CON2        equ	534	;# 
  2753     0216                     SSPCON2         equ	534	;# 
  2754     0217                     SSP1CON3        equ	535	;# 
  2755     0217                     SSPCON3         equ	535	;# 
  2756     0219                     SSP2BUF         equ	537	;# 
  2757     021A                     SSP2ADD         equ	538	;# 
  2758     021B                     SSP2MSK         equ	539	;# 
  2759     021C                     SSP2STAT        equ	540	;# 
  2760     021D                     SSP2CON1        equ	541	;# 
  2761     021D                     SSP2CON         equ	541	;# 
  2762     021E                     SSP2CON2        equ	542	;# 
  2763     021F                     SSP2CON3        equ	543	;# 
  2764     028C                     ODCONA          equ	652	;# 
  2765     028D                     ODCONB          equ	653	;# 
  2766     028E                     ODCONC          equ	654	;# 
  2767     0291                     CCPR1           equ	657	;# 
  2768     0291                     CCPR1L          equ	657	;# 
  2769     0292                     CCPR1H          equ	658	;# 
  2770     0293                     CCP1CON         equ	659	;# 
  2771     0294                     CCP1CAP         equ	660	;# 
  2772     0295                     CCPR2           equ	661	;# 
  2773     0295                     CCPR2L          equ	661	;# 
  2774     0296                     CCPR2H          equ	662	;# 
  2775     0297                     CCP2CON         equ	663	;# 
  2776     0298                     CCP2CAP         equ	664	;# 
  2777     029F                     CCPTMRS         equ	671	;# 
  2778     030C                     SLRCONA         equ	780	;# 
  2779     030D                     SLRCONB         equ	781	;# 
  2780     030E                     SLRCONC         equ	782	;# 
  2781     0311                     CCPR3           equ	785	;# 
  2782     0311                     CCPR3L          equ	785	;# 
  2783     0312                     CCPR3H          equ	786	;# 
  2784     0313                     CCP3CON         equ	787	;# 
  2785     0314                     CCP3CAP         equ	788	;# 
  2786     0315                     CCPR4           equ	789	;# 
  2787     0315                     CCPR4L          equ	789	;# 
  2788     0316                     CCPR4H          equ	790	;# 
  2789     0317                     CCP4CON         equ	791	;# 
  2790     0318                     CCP4CAP         equ	792	;# 
  2791     038C                     INLVLA          equ	908	;# 
  2792     038D                     INLVLB          equ	909	;# 
  2793     038E                     INLVLC          equ	910	;# 
  2794     0391                     IOCAP           equ	913	;# 
  2795     0392                     IOCAN           equ	914	;# 
  2796     0393                     IOCAF           equ	915	;# 
  2797     0394                     IOCBP           equ	916	;# 
  2798     0395                     IOCBN           equ	917	;# 
  2799     0396                     IOCBF           equ	918	;# 
  2800     0397                     IOCCP           equ	919	;# 
  2801     0398                     IOCCN           equ	920	;# 
  2802     0399                     IOCCF           equ	921	;# 
  2803     039A                     CLKRCON         equ	922	;# 
  2804     039C                     MDCON           equ	924	;# 
  2805     039D                     MDSRC           equ	925	;# 
  2806     039E                     MDCARH          equ	926	;# 
  2807     039F                     MDCARL          equ	927	;# 
  2808     0411                     TMR3            equ	1041	;# 
  2809     0411                     TMR3L           equ	1041	;# 
  2810     0412                     TMR3H           equ	1042	;# 
  2811     0413                     T3CON           equ	1043	;# 
  2812     0414                     T3GCON          equ	1044	;# 
  2813     0415                     TMR4            equ	1045	;# 
  2814     0416                     PR4             equ	1046	;# 
  2815     0417                     T4CON           equ	1047	;# 
  2816     0418                     TMR5            equ	1048	;# 
  2817     0418                     TMR5L           equ	1048	;# 
  2818     0419                     TMR5H           equ	1049	;# 
  2819     041A                     T5CON           equ	1050	;# 
  2820     041B                     T5GCON          equ	1051	;# 
  2821     041C                     TMR6            equ	1052	;# 
  2822     041D                     PR6             equ	1053	;# 
  2823     041E                     T6CON           equ	1054	;# 
  2824     041F                     CCDCON          equ	1055	;# 
  2825     0498                     NCO1ACC         equ	1176	;# 
  2826     0498                     NCO1ACCL        equ	1176	;# 
  2827     0499                     NCO1ACCH        equ	1177	;# 
  2828     049A                     NCO1ACCU        equ	1178	;# 
  2829     049B                     NCO1INC         equ	1179	;# 
  2830     049B                     NCO1INCL        equ	1179	;# 
  2831     049C                     NCO1INCH        equ	1180	;# 
  2832     049D                     NCO1INCU        equ	1181	;# 
  2833     049E                     NCO1CON         equ	1182	;# 
  2834     049F                     NCO1CLK         equ	1183	;# 
  2835     0617                     PWM5DCL         equ	1559	;# 
  2836     0618                     PWM5DCH         equ	1560	;# 
  2837     0619                     PWM5CON         equ	1561	;# 
  2838     0619                     PWM5CON0        equ	1561	;# 
  2839     061A                     PWM6DCL         equ	1562	;# 
  2840     061B                     PWM6DCH         equ	1563	;# 
  2841     061C                     PWM6CON         equ	1564	;# 
  2842     061C                     PWM6CON0        equ	1564	;# 
  2843     061F                     PWMTMRS         equ	1567	;# 
  2844     0691                     CWG1CLKCON      equ	1681	;# 
  2845     0692                     CWG1DAT         equ	1682	;# 
  2846     0693                     CWG1DBR         equ	1683	;# 
  2847     0694                     CWG1DBF         equ	1684	;# 
  2848     0695                     CWG1CON0        equ	1685	;# 
  2849     0696                     CWG1CON1        equ	1686	;# 
  2850     0697                     CWG1AS0         equ	1687	;# 
  2851     0698                     CWG1AS1         equ	1688	;# 
  2852     0699                     CWG1STR         equ	1689	;# 
  2853     0711                     CWG2CLKCON      equ	1809	;# 
  2854     0712                     CWG2DAT         equ	1810	;# 
  2855     0713                     CWG2DBR         equ	1811	;# 
  2856     0714                     CWG2DBF         equ	1812	;# 
  2857     0715                     CWG2CON0        equ	1813	;# 
  2858     0716                     CWG2CON1        equ	1814	;# 
  2859     0717                     CWG2AS0         equ	1815	;# 
  2860     0718                     CWG2AS1         equ	1816	;# 
  2861     0719                     CWG2STR         equ	1817	;# 
  2862     0891                     NVMADR          equ	2193	;# 
  2863     0891                     EEADR           equ	2193	;# 
  2864     0891                     PMADR           equ	2193	;# 
  2865     0891                     NVMADRL         equ	2193	;# 
  2866     0891                     EEADRL          equ	2193	;# 
  2867     0891                     PMADRL          equ	2193	;# 
  2868     0892                     NVMADRH         equ	2194	;# 
  2869     0892                     EEADRH          equ	2194	;# 
  2870     0892                     PMADRH          equ	2194	;# 
  2871     0893                     NVMDAT          equ	2195	;# 
  2872     0893                     EEDAT           equ	2195	;# 
  2873     0893                     PMDAT           equ	2195	;# 
  2874     0893                     NVMDATL         equ	2195	;# 
  2875     0893                     EEDATL          equ	2195	;# 
  2876     0893                     PMDATL          equ	2195	;# 
  2877     0894                     NVMDATH         equ	2196	;# 
  2878     0894                     EEDATH          equ	2196	;# 
  2879     0894                     PMDATH          equ	2196	;# 
  2880     0895                     NVMCON1         equ	2197	;# 
  2881     0895                     EECON1          equ	2197	;# 
  2882     0895                     PMCON1          equ	2197	;# 
  2883     0896                     NVMCON2         equ	2198	;# 
  2884     0896                     EECON2          equ	2198	;# 
  2885     0896                     PMCON2          equ	2198	;# 
  2886     089B                     PCON0           equ	2203	;# 
  2887     0911                     PMD0            equ	2321	;# 
  2888     0912                     PMD1            equ	2322	;# 
  2889     0913                     PMD2            equ	2323	;# 
  2890     0914                     PMD3            equ	2324	;# 
  2891     0915                     PMD4            equ	2325	;# 
  2892     0916                     PMD5            equ	2326	;# 
  2893     0918                     CPUDOZE         equ	2328	;# 
  2894     0919                     OSCCON1         equ	2329	;# 
  2895     091A                     OSCCON2         equ	2330	;# 
  2896     091B                     OSCCON3         equ	2331	;# 
  2897     091C                     OSCSTAT1        equ	2332	;# 
  2898     091D                     OSCEN           equ	2333	;# 
  2899     091E                     OSCTUNE         equ	2334	;# 
  2900     091F                     OSCFRQ          equ	2335	;# 
  2901     0E0F                     PPSLOCK         equ	3599	;# 
  2902     0E10                     INTPPS          equ	3600	;# 
  2903     0E11                     T0CKIPPS        equ	3601	;# 
  2904     0E12                     T1CKIPPS        equ	3602	;# 
  2905     0E13                     T1GPPS          equ	3603	;# 
  2906     0E14                     CCP1PPS         equ	3604	;# 
  2907     0E15                     CCP2PPS         equ	3605	;# 
  2908     0E16                     CCP3PPS         equ	3606	;# 
  2909     0E17                     CCP4PPS         equ	3607	;# 
  2910     0E18                     CWG1PPS         equ	3608	;# 
  2911     0E19                     CWG2PPS         equ	3609	;# 
  2912     0E1A                     MDCIN1PPS       equ	3610	;# 
  2913     0E1B                     MDCIN2PPS       equ	3611	;# 
  2914     0E1C                     MDMINPPS        equ	3612	;# 
  2915     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2916     0E1E                     SSP2DATPPS      equ	3614	;# 
  2917     0E1F                     SSP2SSPPS       equ	3615	;# 
  2918     0E20                     SSP1CLKPPS      equ	3616	;# 
  2919     0E21                     SSP1DATPPS      equ	3617	;# 
  2920     0E22                     SSP1SSPPS       equ	3618	;# 
  2921     0E24                     RXPPS           equ	3620	;# 
  2922     0E25                     TXPPS           equ	3621	;# 
  2923     0E28                     CLCIN0PPS       equ	3624	;# 
  2924     0E29                     CLCIN1PPS       equ	3625	;# 
  2925     0E2A                     CLCIN2PPS       equ	3626	;# 
  2926     0E2B                     CLCIN3PPS       equ	3627	;# 
  2927     0E2C                     T3CKIPPS        equ	3628	;# 
  2928     0E2D                     T3GPPS          equ	3629	;# 
  2929     0E2E                     T5CKIPPS        equ	3630	;# 
  2930     0E2F                     T5GPPS          equ	3631	;# 
  2931     0E90                     RA0PPS          equ	3728	;# 
  2932     0E91                     RA1PPS          equ	3729	;# 
  2933     0E92                     RA2PPS          equ	3730	;# 
  2934     0E94                     RA4PPS          equ	3732	;# 
  2935     0E95                     RA5PPS          equ	3733	;# 
  2936     0E9C                     RB4PPS          equ	3740	;# 
  2937     0E9D                     RB5PPS          equ	3741	;# 
  2938     0E9E                     RB6PPS          equ	3742	;# 
  2939     0E9F                     RB7PPS          equ	3743	;# 
  2940     0EA0                     RC0PPS          equ	3744	;# 
  2941     0EA1                     RC1PPS          equ	3745	;# 
  2942     0EA2                     RC2PPS          equ	3746	;# 
  2943     0EA3                     RC3PPS          equ	3747	;# 
  2944     0EA4                     RC4PPS          equ	3748	;# 
  2945     0EA5                     RC5PPS          equ	3749	;# 
  2946     0EA6                     RC6PPS          equ	3750	;# 
  2947     0EA7                     RC7PPS          equ	3751	;# 
  2948     0F0F                     CLCDATA         equ	3855	;# 
  2949     0F10                     CLC1CON         equ	3856	;# 
  2950     0F11                     CLC1POL         equ	3857	;# 
  2951     0F12                     CLC1SEL0        equ	3858	;# 
  2952     0F13                     CLC1SEL1        equ	3859	;# 
  2953     0F14                     CLC1SEL2        equ	3860	;# 
  2954     0F15                     CLC1SEL3        equ	3861	;# 
  2955     0F16                     CLC1GLS0        equ	3862	;# 
  2956     0F17                     CLC1GLS1        equ	3863	;# 
  2957     0F18                     CLC1GLS2        equ	3864	;# 
  2958     0F19                     CLC1GLS3        equ	3865	;# 
  2959     0F1A                     CLC2CON         equ	3866	;# 
  2960     0F1B                     CLC2POL         equ	3867	;# 
  2961     0F1C                     CLC2SEL0        equ	3868	;# 
  2962     0F1D                     CLC2SEL1        equ	3869	;# 
  2963     0F1E                     CLC2SEL2        equ	3870	;# 
  2964     0F1F                     CLC2SEL3        equ	3871	;# 
  2965     0F20                     CLC2GLS0        equ	3872	;# 
  2966     0F21                     CLC2GLS1        equ	3873	;# 
  2967     0F22                     CLC2GLS2        equ	3874	;# 
  2968     0F23                     CLC2GLS3        equ	3875	;# 
  2969     0F24                     CLC3CON         equ	3876	;# 
  2970     0F25                     CLC3POL         equ	3877	;# 
  2971     0F26                     CLC3SEL0        equ	3878	;# 
  2972     0F27                     CLC3SEL1        equ	3879	;# 
  2973     0F28                     CLC3SEL2        equ	3880	;# 
  2974     0F29                     CLC3SEL3        equ	3881	;# 
  2975     0F2A                     CLC3GLS0        equ	3882	;# 
  2976     0F2B                     CLC3GLS1        equ	3883	;# 
  2977     0F2C                     CLC3GLS2        equ	3884	;# 
  2978     0F2D                     CLC3GLS3        equ	3885	;# 
  2979     0F2E                     CLC4CON         equ	3886	;# 
  2980     0F2F                     CLC4POL         equ	3887	;# 
  2981     0F30                     CLC4SEL0        equ	3888	;# 
  2982     0F31                     CLC4SEL1        equ	3889	;# 
  2983     0F32                     CLC4SEL2        equ	3890	;# 
  2984     0F33                     CLC4SEL3        equ	3891	;# 
  2985     0F34                     CLC4GLS0        equ	3892	;# 
  2986     0F35                     CLC4GLS1        equ	3893	;# 
  2987     0F36                     CLC4GLS2        equ	3894	;# 
  2988     0F37                     CLC4GLS3        equ	3895	;# 
  2989     0FE4                     STATUS_SHAD     equ	4068	;# 
  2990     0FE5                     WREG_SHAD       equ	4069	;# 
  2991     0FE6                     BSR_SHAD        equ	4070	;# 
  2992     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2993     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2994     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2995     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2996     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2997     0FED                     STKPTR          equ	4077	;# 
  2998     0FEE                     TOSL            equ	4078	;# 
  2999     0FEF                     TOSH            equ	4079	;# 
  3000     0000                     INDF0           equ	0	;# 
  3001     0001                     INDF1           equ	1	;# 
  3002     0002                     PCL             equ	2	;# 
  3003     0003                     STATUS          equ	3	;# 
  3004     0004                     FSR0L           equ	4	;# 
  3005     0005                     FSR0H           equ	5	;# 
  3006     0006                     FSR1L           equ	6	;# 
  3007     0007                     FSR1H           equ	7	;# 
  3008     0008                     BSR             equ	8	;# 
  3009     0009                     WREG            equ	9	;# 
  3010     000A                     PCLATH          equ	10	;# 
  3011     000B                     INTCON          equ	11	;# 
  3012     000C                     PORTA           equ	12	;# 
  3013     000D                     PORTB           equ	13	;# 
  3014     000E                     PORTC           equ	14	;# 
  3015     0010                     PIR0            equ	16	;# 
  3016     0011                     PIR1            equ	17	;# 
  3017     0012                     PIR2            equ	18	;# 
  3018     0013                     PIR3            equ	19	;# 
  3019     0014                     PIR4            equ	20	;# 
  3020     0015                     TMR0L           equ	21	;# 
  3021     0015                     TMR0            equ	21	;# 
  3022     0016                     TMR0H           equ	22	;# 
  3023     0016                     PR0             equ	22	;# 
  3024     0017                     T0CON0          equ	23	;# 
  3025     0018                     T0CON1          equ	24	;# 
  3026     0019                     TMR1            equ	25	;# 
  3027     0019                     TMR1L           equ	25	;# 
  3028     001A                     TMR1H           equ	26	;# 
  3029     001B                     T1CON           equ	27	;# 
  3030     001C                     T1GCON          equ	28	;# 
  3031     001D                     TMR2            equ	29	;# 
  3032     001E                     PR2             equ	30	;# 
  3033     001F                     T2CON           equ	31	;# 
  3034     008C                     TRISA           equ	140	;# 
  3035     008D                     TRISB           equ	141	;# 
  3036     008E                     TRISC           equ	142	;# 
  3037     0090                     PIE0            equ	144	;# 
  3038     0091                     PIE1            equ	145	;# 
  3039     0092                     PIE2            equ	146	;# 
  3040     0093                     PIE3            equ	147	;# 
  3041     0094                     PIE4            equ	148	;# 
  3042     0097                     WDTCON          equ	151	;# 
  3043     009B                     ADRES           equ	155	;# 
  3044     009B                     ADRESL          equ	155	;# 
  3045     009C                     ADRESH          equ	156	;# 
  3046     009D                     ADCON0          equ	157	;# 
  3047     009E                     ADCON1          equ	158	;# 
  3048     009F                     ADACT           equ	159	;# 
  3049     010C                     LATA            equ	268	;# 
  3050     010D                     LATB            equ	269	;# 
  3051     010E                     LATC            equ	270	;# 
  3052     0111                     CM1CON0         equ	273	;# 
  3053     0112                     CM1CON1         equ	274	;# 
  3054     0113                     CM2CON0         equ	275	;# 
  3055     0114                     CM2CON1         equ	276	;# 
  3056     0115                     CMOUT           equ	277	;# 
  3057     0116                     BORCON          equ	278	;# 
  3058     0117                     FVRCON          equ	279	;# 
  3059     0118                     DACCON0         equ	280	;# 
  3060     0119                     DACCON1         equ	281	;# 
  3061     018C                     ANSELA          equ	396	;# 
  3062     018D                     ANSELB          equ	397	;# 
  3063     018E                     ANSELC          equ	398	;# 
  3064     0197                     VREGCON         equ	407	;# 
  3065     0199                     RC1REG          equ	409	;# 
  3066     0199                     RCREG           equ	409	;# 
  3067     0199                     RCREG1          equ	409	;# 
  3068     019A                     TX1REG          equ	410	;# 
  3069     019A                     TXREG1          equ	410	;# 
  3070     019A                     TXREG           equ	410	;# 
  3071     019B                     SP1BRG          equ	411	;# 
  3072     019B                     SPBRG           equ	411	;# 
  3073     019B                     SP1BRGL         equ	411	;# 
  3074     019B                     SPBRG1          equ	411	;# 
  3075     019B                     SPBRGL          equ	411	;# 
  3076     019C                     SP1BRGH         equ	412	;# 
  3077     019C                     SPBRGH          equ	412	;# 
  3078     019C                     SPBRGH1         equ	412	;# 
  3079     019D                     RC1STA          equ	413	;# 
  3080     019D                     RCSTA1          equ	413	;# 
  3081     019D                     RCSTA           equ	413	;# 
  3082     019E                     TX1STA          equ	414	;# 
  3083     019E                     TXSTA1          equ	414	;# 
  3084     019E                     TXSTA           equ	414	;# 
  3085     019F                     BAUD1CON        equ	415	;# 
  3086     019F                     BAUDCON1        equ	415	;# 
  3087     019F                     BAUDCTL1        equ	415	;# 
  3088     019F                     BAUDCON         equ	415	;# 
  3089     019F                     BAUDCTL         equ	415	;# 
  3090     020C                     WPUA            equ	524	;# 
  3091     020D                     WPUB            equ	525	;# 
  3092     020E                     WPUC            equ	526	;# 
  3093     0211                     SSP1BUF         equ	529	;# 
  3094     0211                     SSPBUF          equ	529	;# 
  3095     0212                     SSP1ADD         equ	530	;# 
  3096     0212                     SSPADD          equ	530	;# 
  3097     0213                     SSP1MSK         equ	531	;# 
  3098     0213                     SSPMSK          equ	531	;# 
  3099     0214                     SSP1STAT        equ	532	;# 
  3100     0214                     SSPSTAT         equ	532	;# 
  3101     0215                     SSP1CON1        equ	533	;# 
  3102     0215                     SSPCON          equ	533	;# 
  3103     0215                     SSPCON1         equ	533	;# 
  3104     0215                     SSP1CON         equ	533	;# 
  3105     0216                     SSP1CON2        equ	534	;# 
  3106     0216                     SSPCON2         equ	534	;# 
  3107     0217                     SSP1CON3        equ	535	;# 
  3108     0217                     SSPCON3         equ	535	;# 
  3109     0219                     SSP2BUF         equ	537	;# 
  3110     021A                     SSP2ADD         equ	538	;# 
  3111     021B                     SSP2MSK         equ	539	;# 
  3112     021C                     SSP2STAT        equ	540	;# 
  3113     021D                     SSP2CON1        equ	541	;# 
  3114     021D                     SSP2CON         equ	541	;# 
  3115     021E                     SSP2CON2        equ	542	;# 
  3116     021F                     SSP2CON3        equ	543	;# 
  3117     028C                     ODCONA          equ	652	;# 
  3118     028D                     ODCONB          equ	653	;# 
  3119     028E                     ODCONC          equ	654	;# 
  3120     0291                     CCPR1           equ	657	;# 
  3121     0291                     CCPR1L          equ	657	;# 
  3122     0292                     CCPR1H          equ	658	;# 
  3123     0293                     CCP1CON         equ	659	;# 
  3124     0294                     CCP1CAP         equ	660	;# 
  3125     0295                     CCPR2           equ	661	;# 
  3126     0295                     CCPR2L          equ	661	;# 
  3127     0296                     CCPR2H          equ	662	;# 
  3128     0297                     CCP2CON         equ	663	;# 
  3129     0298                     CCP2CAP         equ	664	;# 
  3130     029F                     CCPTMRS         equ	671	;# 
  3131     030C                     SLRCONA         equ	780	;# 
  3132     030D                     SLRCONB         equ	781	;# 
  3133     030E                     SLRCONC         equ	782	;# 
  3134     0311                     CCPR3           equ	785	;# 
  3135     0311                     CCPR3L          equ	785	;# 
  3136     0312                     CCPR3H          equ	786	;# 
  3137     0313                     CCP3CON         equ	787	;# 
  3138     0314                     CCP3CAP         equ	788	;# 
  3139     0315                     CCPR4           equ	789	;# 
  3140     0315                     CCPR4L          equ	789	;# 
  3141     0316                     CCPR4H          equ	790	;# 
  3142     0317                     CCP4CON         equ	791	;# 
  3143     0318                     CCP4CAP         equ	792	;# 
  3144     038C                     INLVLA          equ	908	;# 
  3145     038D                     INLVLB          equ	909	;# 
  3146     038E                     INLVLC          equ	910	;# 
  3147     0391                     IOCAP           equ	913	;# 
  3148     0392                     IOCAN           equ	914	;# 
  3149     0393                     IOCAF           equ	915	;# 
  3150     0394                     IOCBP           equ	916	;# 
  3151     0395                     IOCBN           equ	917	;# 
  3152     0396                     IOCBF           equ	918	;# 
  3153     0397                     IOCCP           equ	919	;# 
  3154     0398                     IOCCN           equ	920	;# 
  3155     0399                     IOCCF           equ	921	;# 
  3156     039A                     CLKRCON         equ	922	;# 
  3157     039C                     MDCON           equ	924	;# 
  3158     039D                     MDSRC           equ	925	;# 
  3159     039E                     MDCARH          equ	926	;# 
  3160     039F                     MDCARL          equ	927	;# 
  3161     0411                     TMR3            equ	1041	;# 
  3162     0411                     TMR3L           equ	1041	;# 
  3163     0412                     TMR3H           equ	1042	;# 
  3164     0413                     T3CON           equ	1043	;# 
  3165     0414                     T3GCON          equ	1044	;# 
  3166     0415                     TMR4            equ	1045	;# 
  3167     0416                     PR4             equ	1046	;# 
  3168     0417                     T4CON           equ	1047	;# 
  3169     0418                     TMR5            equ	1048	;# 
  3170     0418                     TMR5L           equ	1048	;# 
  3171     0419                     TMR5H           equ	1049	;# 
  3172     041A                     T5CON           equ	1050	;# 
  3173     041B                     T5GCON          equ	1051	;# 
  3174     041C                     TMR6            equ	1052	;# 
  3175     041D                     PR6             equ	1053	;# 
  3176     041E                     T6CON           equ	1054	;# 
  3177     041F                     CCDCON          equ	1055	;# 
  3178     0498                     NCO1ACC         equ	1176	;# 
  3179     0498                     NCO1ACCL        equ	1176	;# 
  3180     0499                     NCO1ACCH        equ	1177	;# 
  3181     049A                     NCO1ACCU        equ	1178	;# 
  3182     049B                     NCO1INC         equ	1179	;# 
  3183     049B                     NCO1INCL        equ	1179	;# 
  3184     049C                     NCO1INCH        equ	1180	;# 
  3185     049D                     NCO1INCU        equ	1181	;# 
  3186     049E                     NCO1CON         equ	1182	;# 
  3187     049F                     NCO1CLK         equ	1183	;# 
  3188     0617                     PWM5DCL         equ	1559	;# 
  3189     0618                     PWM5DCH         equ	1560	;# 
  3190     0619                     PWM5CON         equ	1561	;# 
  3191     0619                     PWM5CON0        equ	1561	;# 
  3192     061A                     PWM6DCL         equ	1562	;# 
  3193     061B                     PWM6DCH         equ	1563	;# 
  3194     061C                     PWM6CON         equ	1564	;# 
  3195     061C                     PWM6CON0        equ	1564	;# 
  3196     061F                     PWMTMRS         equ	1567	;# 
  3197     0691                     CWG1CLKCON      equ	1681	;# 
  3198     0692                     CWG1DAT         equ	1682	;# 
  3199     0693                     CWG1DBR         equ	1683	;# 
  3200     0694                     CWG1DBF         equ	1684	;# 
  3201     0695                     CWG1CON0        equ	1685	;# 
  3202     0696                     CWG1CON1        equ	1686	;# 
  3203     0697                     CWG1AS0         equ	1687	;# 
  3204     0698                     CWG1AS1         equ	1688	;# 
  3205     0699                     CWG1STR         equ	1689	;# 
  3206     0711                     CWG2CLKCON      equ	1809	;# 
  3207     0712                     CWG2DAT         equ	1810	;# 
  3208     0713                     CWG2DBR         equ	1811	;# 
  3209     0714                     CWG2DBF         equ	1812	;# 
  3210     0715                     CWG2CON0        equ	1813	;# 
  3211     0716                     CWG2CON1        equ	1814	;# 
  3212     0717                     CWG2AS0         equ	1815	;# 
  3213     0718                     CWG2AS1         equ	1816	;# 
  3214     0719                     CWG2STR         equ	1817	;# 
  3215     0891                     NVMADR          equ	2193	;# 
  3216     0891                     EEADR           equ	2193	;# 
  3217     0891                     PMADR           equ	2193	;# 
  3218     0891                     NVMADRL         equ	2193	;# 
  3219     0891                     EEADRL          equ	2193	;# 
  3220     0891                     PMADRL          equ	2193	;# 
  3221     0892                     NVMADRH         equ	2194	;# 
  3222     0892                     EEADRH          equ	2194	;# 
  3223     0892                     PMADRH          equ	2194	;# 
  3224     0893                     NVMDAT          equ	2195	;# 
  3225     0893                     EEDAT           equ	2195	;# 
  3226     0893                     PMDAT           equ	2195	;# 
  3227     0893                     NVMDATL         equ	2195	;# 
  3228     0893                     EEDATL          equ	2195	;# 
  3229     0893                     PMDATL          equ	2195	;# 
  3230     0894                     NVMDATH         equ	2196	;# 
  3231     0894                     EEDATH          equ	2196	;# 
  3232     0894                     PMDATH          equ	2196	;# 
  3233     0895                     NVMCON1         equ	2197	;# 
  3234     0895                     EECON1          equ	2197	;# 
  3235     0895                     PMCON1          equ	2197	;# 
  3236     0896                     NVMCON2         equ	2198	;# 
  3237     0896                     EECON2          equ	2198	;# 
  3238     0896                     PMCON2          equ	2198	;# 
  3239     089B                     PCON0           equ	2203	;# 
  3240     0911                     PMD0            equ	2321	;# 
  3241     0912                     PMD1            equ	2322	;# 
  3242     0913                     PMD2            equ	2323	;# 
  3243     0914                     PMD3            equ	2324	;# 
  3244     0915                     PMD4            equ	2325	;# 
  3245     0916                     PMD5            equ	2326	;# 
  3246     0918                     CPUDOZE         equ	2328	;# 
  3247     0919                     OSCCON1         equ	2329	;# 
  3248     091A                     OSCCON2         equ	2330	;# 
  3249     091B                     OSCCON3         equ	2331	;# 
  3250     091C                     OSCSTAT1        equ	2332	;# 
  3251     091D                     OSCEN           equ	2333	;# 
  3252     091E                     OSCTUNE         equ	2334	;# 
  3253     091F                     OSCFRQ          equ	2335	;# 
  3254     0E0F                     PPSLOCK         equ	3599	;# 
  3255     0E10                     INTPPS          equ	3600	;# 
  3256     0E11                     T0CKIPPS        equ	3601	;# 
  3257     0E12                     T1CKIPPS        equ	3602	;# 
  3258     0E13                     T1GPPS          equ	3603	;# 
  3259     0E14                     CCP1PPS         equ	3604	;# 
  3260     0E15                     CCP2PPS         equ	3605	;# 
  3261     0E16                     CCP3PPS         equ	3606	;# 
  3262     0E17                     CCP4PPS         equ	3607	;# 
  3263     0E18                     CWG1PPS         equ	3608	;# 
  3264     0E19                     CWG2PPS         equ	3609	;# 
  3265     0E1A                     MDCIN1PPS       equ	3610	;# 
  3266     0E1B                     MDCIN2PPS       equ	3611	;# 
  3267     0E1C                     MDMINPPS        equ	3612	;# 
  3268     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3269     0E1E                     SSP2DATPPS      equ	3614	;# 
  3270     0E1F                     SSP2SSPPS       equ	3615	;# 
  3271     0E20                     SSP1CLKPPS      equ	3616	;# 
  3272     0E21                     SSP1DATPPS      equ	3617	;# 
  3273     0E22                     SSP1SSPPS       equ	3618	;# 
  3274     0E24                     RXPPS           equ	3620	;# 
  3275     0E25                     TXPPS           equ	3621	;# 
  3276     0E28                     CLCIN0PPS       equ	3624	;# 
  3277     0E29                     CLCIN1PPS       equ	3625	;# 
  3278     0E2A                     CLCIN2PPS       equ	3626	;# 
  3279     0E2B                     CLCIN3PPS       equ	3627	;# 
  3280     0E2C                     T3CKIPPS        equ	3628	;# 
  3281     0E2D                     T3GPPS          equ	3629	;# 
  3282     0E2E                     T5CKIPPS        equ	3630	;# 
  3283     0E2F                     T5GPPS          equ	3631	;# 
  3284     0E90                     RA0PPS          equ	3728	;# 
  3285     0E91                     RA1PPS          equ	3729	;# 
  3286     0E92                     RA2PPS          equ	3730	;# 
  3287     0E94                     RA4PPS          equ	3732	;# 
  3288     0E95                     RA5PPS          equ	3733	;# 
  3289     0E9C                     RB4PPS          equ	3740	;# 
  3290     0E9D                     RB5PPS          equ	3741	;# 
  3291     0E9E                     RB6PPS          equ	3742	;# 
  3292     0E9F                     RB7PPS          equ	3743	;# 
  3293     0EA0                     RC0PPS          equ	3744	;# 
  3294     0EA1                     RC1PPS          equ	3745	;# 
  3295     0EA2                     RC2PPS          equ	3746	;# 
  3296     0EA3                     RC3PPS          equ	3747	;# 
  3297     0EA4                     RC4PPS          equ	3748	;# 
  3298     0EA5                     RC5PPS          equ	3749	;# 
  3299     0EA6                     RC6PPS          equ	3750	;# 
  3300     0EA7                     RC7PPS          equ	3751	;# 
  3301     0F0F                     CLCDATA         equ	3855	;# 
  3302     0F10                     CLC1CON         equ	3856	;# 
  3303     0F11                     CLC1POL         equ	3857	;# 
  3304     0F12                     CLC1SEL0        equ	3858	;# 
  3305     0F13                     CLC1SEL1        equ	3859	;# 
  3306     0F14                     CLC1SEL2        equ	3860	;# 
  3307     0F15                     CLC1SEL3        equ	3861	;# 
  3308     0F16                     CLC1GLS0        equ	3862	;# 
  3309     0F17                     CLC1GLS1        equ	3863	;# 
  3310     0F18                     CLC1GLS2        equ	3864	;# 
  3311     0F19                     CLC1GLS3        equ	3865	;# 
  3312     0F1A                     CLC2CON         equ	3866	;# 
  3313     0F1B                     CLC2POL         equ	3867	;# 
  3314     0F1C                     CLC2SEL0        equ	3868	;# 
  3315     0F1D                     CLC2SEL1        equ	3869	;# 
  3316     0F1E                     CLC2SEL2        equ	3870	;# 
  3317     0F1F                     CLC2SEL3        equ	3871	;# 
  3318     0F20                     CLC2GLS0        equ	3872	;# 
  3319     0F21                     CLC2GLS1        equ	3873	;# 
  3320     0F22                     CLC2GLS2        equ	3874	;# 
  3321     0F23                     CLC2GLS3        equ	3875	;# 
  3322     0F24                     CLC3CON         equ	3876	;# 
  3323     0F25                     CLC3POL         equ	3877	;# 
  3324     0F26                     CLC3SEL0        equ	3878	;# 
  3325     0F27                     CLC3SEL1        equ	3879	;# 
  3326     0F28                     CLC3SEL2        equ	3880	;# 
  3327     0F29                     CLC3SEL3        equ	3881	;# 
  3328     0F2A                     CLC3GLS0        equ	3882	;# 
  3329     0F2B                     CLC3GLS1        equ	3883	;# 
  3330     0F2C                     CLC3GLS2        equ	3884	;# 
  3331     0F2D                     CLC3GLS3        equ	3885	;# 
  3332     0F2E                     CLC4CON         equ	3886	;# 
  3333     0F2F                     CLC4POL         equ	3887	;# 
  3334     0F30                     CLC4SEL0        equ	3888	;# 
  3335     0F31                     CLC4SEL1        equ	3889	;# 
  3336     0F32                     CLC4SEL2        equ	3890	;# 
  3337     0F33                     CLC4SEL3        equ	3891	;# 
  3338     0F34                     CLC4GLS0        equ	3892	;# 
  3339     0F35                     CLC4GLS1        equ	3893	;# 
  3340     0F36                     CLC4GLS2        equ	3894	;# 
  3341     0F37                     CLC4GLS3        equ	3895	;# 
  3342     0FE4                     STATUS_SHAD     equ	4068	;# 
  3343     0FE5                     WREG_SHAD       equ	4069	;# 
  3344     0FE6                     BSR_SHAD        equ	4070	;# 
  3345     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3346     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3347     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3348     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3349     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3350     0FED                     STKPTR          equ	4077	;# 
  3351     0FEE                     TOSL            equ	4078	;# 
  3352     0FEF                     TOSH            equ	4079	;# 
  3353     0000                     INDF0           equ	0	;# 
  3354     0001                     INDF1           equ	1	;# 
  3355     0002                     PCL             equ	2	;# 
  3356     0003                     STATUS          equ	3	;# 
  3357     0004                     FSR0L           equ	4	;# 
  3358     0005                     FSR0H           equ	5	;# 
  3359     0006                     FSR1L           equ	6	;# 
  3360     0007                     FSR1H           equ	7	;# 
  3361     0008                     BSR             equ	8	;# 
  3362     0009                     WREG            equ	9	;# 
  3363     000A                     PCLATH          equ	10	;# 
  3364     000B                     INTCON          equ	11	;# 
  3365     000C                     PORTA           equ	12	;# 
  3366     000D                     PORTB           equ	13	;# 
  3367     000E                     PORTC           equ	14	;# 
  3368     0010                     PIR0            equ	16	;# 
  3369     0011                     PIR1            equ	17	;# 
  3370     0012                     PIR2            equ	18	;# 
  3371     0013                     PIR3            equ	19	;# 
  3372     0014                     PIR4            equ	20	;# 
  3373     0015                     TMR0L           equ	21	;# 
  3374     0015                     TMR0            equ	21	;# 
  3375     0016                     TMR0H           equ	22	;# 
  3376     0016                     PR0             equ	22	;# 
  3377     0017                     T0CON0          equ	23	;# 
  3378     0018                     T0CON1          equ	24	;# 
  3379     0019                     TMR1            equ	25	;# 
  3380     0019                     TMR1L           equ	25	;# 
  3381     001A                     TMR1H           equ	26	;# 
  3382     001B                     T1CON           equ	27	;# 
  3383     001C                     T1GCON          equ	28	;# 
  3384     001D                     TMR2            equ	29	;# 
  3385     001E                     PR2             equ	30	;# 
  3386     001F                     T2CON           equ	31	;# 
  3387     008C                     TRISA           equ	140	;# 
  3388     008D                     TRISB           equ	141	;# 
  3389     008E                     TRISC           equ	142	;# 
  3390     0090                     PIE0            equ	144	;# 
  3391     0091                     PIE1            equ	145	;# 
  3392     0092                     PIE2            equ	146	;# 
  3393     0093                     PIE3            equ	147	;# 
  3394     0094                     PIE4            equ	148	;# 
  3395     0097                     WDTCON          equ	151	;# 
  3396     009B                     ADRES           equ	155	;# 
  3397     009B                     ADRESL          equ	155	;# 
  3398     009C                     ADRESH          equ	156	;# 
  3399     009D                     ADCON0          equ	157	;# 
  3400     009E                     ADCON1          equ	158	;# 
  3401     009F                     ADACT           equ	159	;# 
  3402     010C                     LATA            equ	268	;# 
  3403     010D                     LATB            equ	269	;# 
  3404     010E                     LATC            equ	270	;# 
  3405     0111                     CM1CON0         equ	273	;# 
  3406     0112                     CM1CON1         equ	274	;# 
  3407     0113                     CM2CON0         equ	275	;# 
  3408     0114                     CM2CON1         equ	276	;# 
  3409     0115                     CMOUT           equ	277	;# 
  3410     0116                     BORCON          equ	278	;# 
  3411     0117                     FVRCON          equ	279	;# 
  3412     0118                     DACCON0         equ	280	;# 
  3413     0119                     DACCON1         equ	281	;# 
  3414     018C                     ANSELA          equ	396	;# 
  3415     018D                     ANSELB          equ	397	;# 
  3416     018E                     ANSELC          equ	398	;# 
  3417     0197                     VREGCON         equ	407	;# 
  3418     0199                     RC1REG          equ	409	;# 
  3419     0199                     RCREG           equ	409	;# 
  3420     0199                     RCREG1          equ	409	;# 
  3421     019A                     TX1REG          equ	410	;# 
  3422     019A                     TXREG1          equ	410	;# 
  3423     019A                     TXREG           equ	410	;# 
  3424     019B                     SP1BRG          equ	411	;# 
  3425     019B                     SPBRG           equ	411	;# 
  3426     019B                     SP1BRGL         equ	411	;# 
  3427     019B                     SPBRG1          equ	411	;# 
  3428     019B                     SPBRGL          equ	411	;# 
  3429     019C                     SP1BRGH         equ	412	;# 
  3430     019C                     SPBRGH          equ	412	;# 
  3431     019C                     SPBRGH1         equ	412	;# 
  3432     019D                     RC1STA          equ	413	;# 
  3433     019D                     RCSTA1          equ	413	;# 
  3434     019D                     RCSTA           equ	413	;# 
  3435     019E                     TX1STA          equ	414	;# 
  3436     019E                     TXSTA1          equ	414	;# 
  3437     019E                     TXSTA           equ	414	;# 
  3438     019F                     BAUD1CON        equ	415	;# 
  3439     019F                     BAUDCON1        equ	415	;# 
  3440     019F                     BAUDCTL1        equ	415	;# 
  3441     019F                     BAUDCON         equ	415	;# 
  3442     019F                     BAUDCTL         equ	415	;# 
  3443     020C                     WPUA            equ	524	;# 
  3444     020D                     WPUB            equ	525	;# 
  3445     020E                     WPUC            equ	526	;# 
  3446     0211                     SSP1BUF         equ	529	;# 
  3447     0211                     SSPBUF          equ	529	;# 
  3448     0212                     SSP1ADD         equ	530	;# 
  3449     0212                     SSPADD          equ	530	;# 
  3450     0213                     SSP1MSK         equ	531	;# 
  3451     0213                     SSPMSK          equ	531	;# 
  3452     0214                     SSP1STAT        equ	532	;# 
  3453     0214                     SSPSTAT         equ	532	;# 
  3454     0215                     SSP1CON1        equ	533	;# 
  3455     0215                     SSPCON          equ	533	;# 
  3456     0215                     SSPCON1         equ	533	;# 
  3457     0215                     SSP1CON         equ	533	;# 
  3458     0216                     SSP1CON2        equ	534	;# 
  3459     0216                     SSPCON2         equ	534	;# 
  3460     0217                     SSP1CON3        equ	535	;# 
  3461     0217                     SSPCON3         equ	535	;# 
  3462     0219                     SSP2BUF         equ	537	;# 
  3463     021A                     SSP2ADD         equ	538	;# 
  3464     021B                     SSP2MSK         equ	539	;# 
  3465     021C                     SSP2STAT        equ	540	;# 
  3466     021D                     SSP2CON1        equ	541	;# 
  3467     021D                     SSP2CON         equ	541	;# 
  3468     021E                     SSP2CON2        equ	542	;# 
  3469     021F                     SSP2CON3        equ	543	;# 
  3470     028C                     ODCONA          equ	652	;# 
  3471     028D                     ODCONB          equ	653	;# 
  3472     028E                     ODCONC          equ	654	;# 
  3473     0291                     CCPR1           equ	657	;# 
  3474     0291                     CCPR1L          equ	657	;# 
  3475     0292                     CCPR1H          equ	658	;# 
  3476     0293                     CCP1CON         equ	659	;# 
  3477     0294                     CCP1CAP         equ	660	;# 
  3478     0295                     CCPR2           equ	661	;# 
  3479     0295                     CCPR2L          equ	661	;# 
  3480     0296                     CCPR2H          equ	662	;# 
  3481     0297                     CCP2CON         equ	663	;# 
  3482     0298                     CCP2CAP         equ	664	;# 
  3483     029F                     CCPTMRS         equ	671	;# 
  3484     030C                     SLRCONA         equ	780	;# 
  3485     030D                     SLRCONB         equ	781	;# 
  3486     030E                     SLRCONC         equ	782	;# 
  3487     0311                     CCPR3           equ	785	;# 
  3488     0311                     CCPR3L          equ	785	;# 
  3489     0312                     CCPR3H          equ	786	;# 
  3490     0313                     CCP3CON         equ	787	;# 
  3491     0314                     CCP3CAP         equ	788	;# 
  3492     0315                     CCPR4           equ	789	;# 
  3493     0315                     CCPR4L          equ	789	;# 
  3494     0316                     CCPR4H          equ	790	;# 
  3495     0317                     CCP4CON         equ	791	;# 
  3496     0318                     CCP4CAP         equ	792	;# 
  3497     038C                     INLVLA          equ	908	;# 
  3498     038D                     INLVLB          equ	909	;# 
  3499     038E                     INLVLC          equ	910	;# 
  3500     0391                     IOCAP           equ	913	;# 
  3501     0392                     IOCAN           equ	914	;# 
  3502     0393                     IOCAF           equ	915	;# 
  3503     0394                     IOCBP           equ	916	;# 
  3504     0395                     IOCBN           equ	917	;# 
  3505     0396                     IOCBF           equ	918	;# 
  3506     0397                     IOCCP           equ	919	;# 
  3507     0398                     IOCCN           equ	920	;# 
  3508     0399                     IOCCF           equ	921	;# 
  3509     039A                     CLKRCON         equ	922	;# 
  3510     039C                     MDCON           equ	924	;# 
  3511     039D                     MDSRC           equ	925	;# 
  3512     039E                     MDCARH          equ	926	;# 
  3513     039F                     MDCARL          equ	927	;# 
  3514     0411                     TMR3            equ	1041	;# 
  3515     0411                     TMR3L           equ	1041	;# 
  3516     0412                     TMR3H           equ	1042	;# 
  3517     0413                     T3CON           equ	1043	;# 
  3518     0414                     T3GCON          equ	1044	;# 
  3519     0415                     TMR4            equ	1045	;# 
  3520     0416                     PR4             equ	1046	;# 
  3521     0417                     T4CON           equ	1047	;# 
  3522     0418                     TMR5            equ	1048	;# 
  3523     0418                     TMR5L           equ	1048	;# 
  3524     0419                     TMR5H           equ	1049	;# 
  3525     041A                     T5CON           equ	1050	;# 
  3526     041B                     T5GCON          equ	1051	;# 
  3527     041C                     TMR6            equ	1052	;# 
  3528     041D                     PR6             equ	1053	;# 
  3529     041E                     T6CON           equ	1054	;# 
  3530     041F                     CCDCON          equ	1055	;# 
  3531     0498                     NCO1ACC         equ	1176	;# 
  3532     0498                     NCO1ACCL        equ	1176	;# 
  3533     0499                     NCO1ACCH        equ	1177	;# 
  3534     049A                     NCO1ACCU        equ	1178	;# 
  3535     049B                     NCO1INC         equ	1179	;# 
  3536     049B                     NCO1INCL        equ	1179	;# 
  3537     049C                     NCO1INCH        equ	1180	;# 
  3538     049D                     NCO1INCU        equ	1181	;# 
  3539     049E                     NCO1CON         equ	1182	;# 
  3540     049F                     NCO1CLK         equ	1183	;# 
  3541     0617                     PWM5DCL         equ	1559	;# 
  3542     0618                     PWM5DCH         equ	1560	;# 
  3543     0619                     PWM5CON         equ	1561	;# 
  3544     0619                     PWM5CON0        equ	1561	;# 
  3545     061A                     PWM6DCL         equ	1562	;# 
  3546     061B                     PWM6DCH         equ	1563	;# 
  3547     061C                     PWM6CON         equ	1564	;# 
  3548     061C                     PWM6CON0        equ	1564	;# 
  3549     061F                     PWMTMRS         equ	1567	;# 
  3550     0691                     CWG1CLKCON      equ	1681	;# 
  3551     0692                     CWG1DAT         equ	1682	;# 
  3552     0693                     CWG1DBR         equ	1683	;# 
  3553     0694                     CWG1DBF         equ	1684	;# 
  3554     0695                     CWG1CON0        equ	1685	;# 
  3555     0696                     CWG1CON1        equ	1686	;# 
  3556     0697                     CWG1AS0         equ	1687	;# 
  3557     0698                     CWG1AS1         equ	1688	;# 
  3558     0699                     CWG1STR         equ	1689	;# 
  3559     0711                     CWG2CLKCON      equ	1809	;# 
  3560     0712                     CWG2DAT         equ	1810	;# 
  3561     0713                     CWG2DBR         equ	1811	;# 
  3562     0714                     CWG2DBF         equ	1812	;# 
  3563     0715                     CWG2CON0        equ	1813	;# 
  3564     0716                     CWG2CON1        equ	1814	;# 
  3565     0717                     CWG2AS0         equ	1815	;# 
  3566     0718                     CWG2AS1         equ	1816	;# 
  3567     0719                     CWG2STR         equ	1817	;# 
  3568     0891                     NVMADR          equ	2193	;# 
  3569     0891                     EEADR           equ	2193	;# 
  3570     0891                     PMADR           equ	2193	;# 
  3571     0891                     NVMADRL         equ	2193	;# 
  3572     0891                     EEADRL          equ	2193	;# 
  3573     0891                     PMADRL          equ	2193	;# 
  3574     0892                     NVMADRH         equ	2194	;# 
  3575     0892                     EEADRH          equ	2194	;# 
  3576     0892                     PMADRH          equ	2194	;# 
  3577     0893                     NVMDAT          equ	2195	;# 
  3578     0893                     EEDAT           equ	2195	;# 
  3579     0893                     PMDAT           equ	2195	;# 
  3580     0893                     NVMDATL         equ	2195	;# 
  3581     0893                     EEDATL          equ	2195	;# 
  3582     0893                     PMDATL          equ	2195	;# 
  3583     0894                     NVMDATH         equ	2196	;# 
  3584     0894                     EEDATH          equ	2196	;# 
  3585     0894                     PMDATH          equ	2196	;# 
  3586     0895                     NVMCON1         equ	2197	;# 
  3587     0895                     EECON1          equ	2197	;# 
  3588     0895                     PMCON1          equ	2197	;# 
  3589     0896                     NVMCON2         equ	2198	;# 
  3590     0896                     EECON2          equ	2198	;# 
  3591     0896                     PMCON2          equ	2198	;# 
  3592     089B                     PCON0           equ	2203	;# 
  3593     0911                     PMD0            equ	2321	;# 
  3594     0912                     PMD1            equ	2322	;# 
  3595     0913                     PMD2            equ	2323	;# 
  3596     0914                     PMD3            equ	2324	;# 
  3597     0915                     PMD4            equ	2325	;# 
  3598     0916                     PMD5            equ	2326	;# 
  3599     0918                     CPUDOZE         equ	2328	;# 
  3600     0919                     OSCCON1         equ	2329	;# 
  3601     091A                     OSCCON2         equ	2330	;# 
  3602     091B                     OSCCON3         equ	2331	;# 
  3603     091C                     OSCSTAT1        equ	2332	;# 
  3604     091D                     OSCEN           equ	2333	;# 
  3605     091E                     OSCTUNE         equ	2334	;# 
  3606     091F                     OSCFRQ          equ	2335	;# 
  3607     0E0F                     PPSLOCK         equ	3599	;# 
  3608     0E10                     INTPPS          equ	3600	;# 
  3609     0E11                     T0CKIPPS        equ	3601	;# 
  3610     0E12                     T1CKIPPS        equ	3602	;# 
  3611     0E13                     T1GPPS          equ	3603	;# 
  3612     0E14                     CCP1PPS         equ	3604	;# 
  3613     0E15                     CCP2PPS         equ	3605	;# 
  3614     0E16                     CCP3PPS         equ	3606	;# 
  3615     0E17                     CCP4PPS         equ	3607	;# 
  3616     0E18                     CWG1PPS         equ	3608	;# 
  3617     0E19                     CWG2PPS         equ	3609	;# 
  3618     0E1A                     MDCIN1PPS       equ	3610	;# 
  3619     0E1B                     MDCIN2PPS       equ	3611	;# 
  3620     0E1C                     MDMINPPS        equ	3612	;# 
  3621     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3622     0E1E                     SSP2DATPPS      equ	3614	;# 
  3623     0E1F                     SSP2SSPPS       equ	3615	;# 
  3624     0E20                     SSP1CLKPPS      equ	3616	;# 
  3625     0E21                     SSP1DATPPS      equ	3617	;# 
  3626     0E22                     SSP1SSPPS       equ	3618	;# 
  3627     0E24                     RXPPS           equ	3620	;# 
  3628     0E25                     TXPPS           equ	3621	;# 
  3629     0E28                     CLCIN0PPS       equ	3624	;# 
  3630     0E29                     CLCIN1PPS       equ	3625	;# 
  3631     0E2A                     CLCIN2PPS       equ	3626	;# 
  3632     0E2B                     CLCIN3PPS       equ	3627	;# 
  3633     0E2C                     T3CKIPPS        equ	3628	;# 
  3634     0E2D                     T3GPPS          equ	3629	;# 
  3635     0E2E                     T5CKIPPS        equ	3630	;# 
  3636     0E2F                     T5GPPS          equ	3631	;# 
  3637     0E90                     RA0PPS          equ	3728	;# 
  3638     0E91                     RA1PPS          equ	3729	;# 
  3639     0E92                     RA2PPS          equ	3730	;# 
  3640     0E94                     RA4PPS          equ	3732	;# 
  3641     0E95                     RA5PPS          equ	3733	;# 
  3642     0E9C                     RB4PPS          equ	3740	;# 
  3643     0E9D                     RB5PPS          equ	3741	;# 
  3644     0E9E                     RB6PPS          equ	3742	;# 
  3645     0E9F                     RB7PPS          equ	3743	;# 
  3646     0EA0                     RC0PPS          equ	3744	;# 
  3647     0EA1                     RC1PPS          equ	3745	;# 
  3648     0EA2                     RC2PPS          equ	3746	;# 
  3649     0EA3                     RC3PPS          equ	3747	;# 
  3650     0EA4                     RC4PPS          equ	3748	;# 
  3651     0EA5                     RC5PPS          equ	3749	;# 
  3652     0EA6                     RC6PPS          equ	3750	;# 
  3653     0EA7                     RC7PPS          equ	3751	;# 
  3654     0F0F                     CLCDATA         equ	3855	;# 
  3655     0F10                     CLC1CON         equ	3856	;# 
  3656     0F11                     CLC1POL         equ	3857	;# 
  3657     0F12                     CLC1SEL0        equ	3858	;# 
  3658     0F13                     CLC1SEL1        equ	3859	;# 
  3659     0F14                     CLC1SEL2        equ	3860	;# 
  3660     0F15                     CLC1SEL3        equ	3861	;# 
  3661     0F16                     CLC1GLS0        equ	3862	;# 
  3662     0F17                     CLC1GLS1        equ	3863	;# 
  3663     0F18                     CLC1GLS2        equ	3864	;# 
  3664     0F19                     CLC1GLS3        equ	3865	;# 
  3665     0F1A                     CLC2CON         equ	3866	;# 
  3666     0F1B                     CLC2POL         equ	3867	;# 
  3667     0F1C                     CLC2SEL0        equ	3868	;# 
  3668     0F1D                     CLC2SEL1        equ	3869	;# 
  3669     0F1E                     CLC2SEL2        equ	3870	;# 
  3670     0F1F                     CLC2SEL3        equ	3871	;# 
  3671     0F20                     CLC2GLS0        equ	3872	;# 
  3672     0F21                     CLC2GLS1        equ	3873	;# 
  3673     0F22                     CLC2GLS2        equ	3874	;# 
  3674     0F23                     CLC2GLS3        equ	3875	;# 
  3675     0F24                     CLC3CON         equ	3876	;# 
  3676     0F25                     CLC3POL         equ	3877	;# 
  3677     0F26                     CLC3SEL0        equ	3878	;# 
  3678     0F27                     CLC3SEL1        equ	3879	;# 
  3679     0F28                     CLC3SEL2        equ	3880	;# 
  3680     0F29                     CLC3SEL3        equ	3881	;# 
  3681     0F2A                     CLC3GLS0        equ	3882	;# 
  3682     0F2B                     CLC3GLS1        equ	3883	;# 
  3683     0F2C                     CLC3GLS2        equ	3884	;# 
  3684     0F2D                     CLC3GLS3        equ	3885	;# 
  3685     0F2E                     CLC4CON         equ	3886	;# 
  3686     0F2F                     CLC4POL         equ	3887	;# 
  3687     0F30                     CLC4SEL0        equ	3888	;# 
  3688     0F31                     CLC4SEL1        equ	3889	;# 
  3689     0F32                     CLC4SEL2        equ	3890	;# 
  3690     0F33                     CLC4SEL3        equ	3891	;# 
  3691     0F34                     CLC4GLS0        equ	3892	;# 
  3692     0F35                     CLC4GLS1        equ	3893	;# 
  3693     0F36                     CLC4GLS2        equ	3894	;# 
  3694     0F37                     CLC4GLS3        equ	3895	;# 
  3695     0FE4                     STATUS_SHAD     equ	4068	;# 
  3696     0FE5                     WREG_SHAD       equ	4069	;# 
  3697     0FE6                     BSR_SHAD        equ	4070	;# 
  3698     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3699     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3700     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3701     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3702     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3703     0FED                     STKPTR          equ	4077	;# 
  3704     0FEE                     TOSL            equ	4078	;# 
  3705     0FEF                     TOSH            equ	4079	;# 
  3706     0000                     INDF0           equ	0	;# 
  3707     0001                     INDF1           equ	1	;# 
  3708     0002                     PCL             equ	2	;# 
  3709     0003                     STATUS          equ	3	;# 
  3710     0004                     FSR0L           equ	4	;# 
  3711     0005                     FSR0H           equ	5	;# 
  3712     0006                     FSR1L           equ	6	;# 
  3713     0007                     FSR1H           equ	7	;# 
  3714     0008                     BSR             equ	8	;# 
  3715     0009                     WREG            equ	9	;# 
  3716     000A                     PCLATH          equ	10	;# 
  3717     000B                     INTCON          equ	11	;# 
  3718     000C                     PORTA           equ	12	;# 
  3719     000D                     PORTB           equ	13	;# 
  3720     000E                     PORTC           equ	14	;# 
  3721     0010                     PIR0            equ	16	;# 
  3722     0011                     PIR1            equ	17	;# 
  3723     0012                     PIR2            equ	18	;# 
  3724     0013                     PIR3            equ	19	;# 
  3725     0014                     PIR4            equ	20	;# 
  3726     0015                     TMR0L           equ	21	;# 
  3727     0015                     TMR0            equ	21	;# 
  3728     0016                     TMR0H           equ	22	;# 
  3729     0016                     PR0             equ	22	;# 
  3730     0017                     T0CON0          equ	23	;# 
  3731     0018                     T0CON1          equ	24	;# 
  3732     0019                     TMR1            equ	25	;# 
  3733     0019                     TMR1L           equ	25	;# 
  3734     001A                     TMR1H           equ	26	;# 
  3735     001B                     T1CON           equ	27	;# 
  3736     001C                     T1GCON          equ	28	;# 
  3737     001D                     TMR2            equ	29	;# 
  3738     001E                     PR2             equ	30	;# 
  3739     001F                     T2CON           equ	31	;# 
  3740     008C                     TRISA           equ	140	;# 
  3741     008D                     TRISB           equ	141	;# 
  3742     008E                     TRISC           equ	142	;# 
  3743     0090                     PIE0            equ	144	;# 
  3744     0091                     PIE1            equ	145	;# 
  3745     0092                     PIE2            equ	146	;# 
  3746     0093                     PIE3            equ	147	;# 
  3747     0094                     PIE4            equ	148	;# 
  3748     0097                     WDTCON          equ	151	;# 
  3749     009B                     ADRES           equ	155	;# 
  3750     009B                     ADRESL          equ	155	;# 
  3751     009C                     ADRESH          equ	156	;# 
  3752     009D                     ADCON0          equ	157	;# 
  3753     009E                     ADCON1          equ	158	;# 
  3754     009F                     ADACT           equ	159	;# 
  3755     010C                     LATA            equ	268	;# 
  3756     010D                     LATB            equ	269	;# 
  3757     010E                     LATC            equ	270	;# 
  3758     0111                     CM1CON0         equ	273	;# 
  3759     0112                     CM1CON1         equ	274	;# 
  3760     0113                     CM2CON0         equ	275	;# 
  3761     0114                     CM2CON1         equ	276	;# 
  3762     0115                     CMOUT           equ	277	;# 
  3763     0116                     BORCON          equ	278	;# 
  3764     0117                     FVRCON          equ	279	;# 
  3765     0118                     DACCON0         equ	280	;# 
  3766     0119                     DACCON1         equ	281	;# 
  3767     018C                     ANSELA          equ	396	;# 
  3768     018D                     ANSELB          equ	397	;# 
  3769     018E                     ANSELC          equ	398	;# 
  3770     0197                     VREGCON         equ	407	;# 
  3771     0199                     RC1REG          equ	409	;# 
  3772     0199                     RCREG           equ	409	;# 
  3773     0199                     RCREG1          equ	409	;# 
  3774     019A                     TX1REG          equ	410	;# 
  3775     019A                     TXREG1          equ	410	;# 
  3776     019A                     TXREG           equ	410	;# 
  3777     019B                     SP1BRG          equ	411	;# 
  3778     019B                     SPBRG           equ	411	;# 
  3779     019B                     SP1BRGL         equ	411	;# 
  3780     019B                     SPBRG1          equ	411	;# 
  3781     019B                     SPBRGL          equ	411	;# 
  3782     019C                     SP1BRGH         equ	412	;# 
  3783     019C                     SPBRGH          equ	412	;# 
  3784     019C                     SPBRGH1         equ	412	;# 
  3785     019D                     RC1STA          equ	413	;# 
  3786     019D                     RCSTA1          equ	413	;# 
  3787     019D                     RCSTA           equ	413	;# 
  3788     019E                     TX1STA          equ	414	;# 
  3789     019E                     TXSTA1          equ	414	;# 
  3790     019E                     TXSTA           equ	414	;# 
  3791     019F                     BAUD1CON        equ	415	;# 
  3792     019F                     BAUDCON1        equ	415	;# 
  3793     019F                     BAUDCTL1        equ	415	;# 
  3794     019F                     BAUDCON         equ	415	;# 
  3795     019F                     BAUDCTL         equ	415	;# 
  3796     020C                     WPUA            equ	524	;# 
  3797     020D                     WPUB            equ	525	;# 
  3798     020E                     WPUC            equ	526	;# 
  3799     0211                     SSP1BUF         equ	529	;# 
  3800     0211                     SSPBUF          equ	529	;# 
  3801     0212                     SSP1ADD         equ	530	;# 
  3802     0212                     SSPADD          equ	530	;# 
  3803     0213                     SSP1MSK         equ	531	;# 
  3804     0213                     SSPMSK          equ	531	;# 
  3805     0214                     SSP1STAT        equ	532	;# 
  3806     0214                     SSPSTAT         equ	532	;# 
  3807     0215                     SSP1CON1        equ	533	;# 
  3808     0215                     SSPCON          equ	533	;# 
  3809     0215                     SSPCON1         equ	533	;# 
  3810     0215                     SSP1CON         equ	533	;# 
  3811     0216                     SSP1CON2        equ	534	;# 
  3812     0216                     SSPCON2         equ	534	;# 
  3813     0217                     SSP1CON3        equ	535	;# 
  3814     0217                     SSPCON3         equ	535	;# 
  3815     0219                     SSP2BUF         equ	537	;# 
  3816     021A                     SSP2ADD         equ	538	;# 
  3817     021B                     SSP2MSK         equ	539	;# 
  3818     021C                     SSP2STAT        equ	540	;# 
  3819     021D                     SSP2CON1        equ	541	;# 
  3820     021D                     SSP2CON         equ	541	;# 
  3821     021E                     SSP2CON2        equ	542	;# 
  3822     021F                     SSP2CON3        equ	543	;# 
  3823     028C                     ODCONA          equ	652	;# 
  3824     028D                     ODCONB          equ	653	;# 
  3825     028E                     ODCONC          equ	654	;# 
  3826     0291                     CCPR1           equ	657	;# 
  3827     0291                     CCPR1L          equ	657	;# 
  3828     0292                     CCPR1H          equ	658	;# 
  3829     0293                     CCP1CON         equ	659	;# 
  3830     0294                     CCP1CAP         equ	660	;# 
  3831     0295                     CCPR2           equ	661	;# 
  3832     0295                     CCPR2L          equ	661	;# 
  3833     0296                     CCPR2H          equ	662	;# 
  3834     0297                     CCP2CON         equ	663	;# 
  3835     0298                     CCP2CAP         equ	664	;# 
  3836     029F                     CCPTMRS         equ	671	;# 
  3837     030C                     SLRCONA         equ	780	;# 
  3838     030D                     SLRCONB         equ	781	;# 
  3839     030E                     SLRCONC         equ	782	;# 
  3840     0311                     CCPR3           equ	785	;# 
  3841     0311                     CCPR3L          equ	785	;# 
  3842     0312                     CCPR3H          equ	786	;# 
  3843     0313                     CCP3CON         equ	787	;# 
  3844     0314                     CCP3CAP         equ	788	;# 
  3845     0315                     CCPR4           equ	789	;# 
  3846     0315                     CCPR4L          equ	789	;# 
  3847     0316                     CCPR4H          equ	790	;# 
  3848     0317                     CCP4CON         equ	791	;# 
  3849     0318                     CCP4CAP         equ	792	;# 
  3850     038C                     INLVLA          equ	908	;# 
  3851     038D                     INLVLB          equ	909	;# 
  3852     038E                     INLVLC          equ	910	;# 
  3853     0391                     IOCAP           equ	913	;# 
  3854     0392                     IOCAN           equ	914	;# 
  3855     0393                     IOCAF           equ	915	;# 
  3856     0394                     IOCBP           equ	916	;# 
  3857     0395                     IOCBN           equ	917	;# 
  3858     0396                     IOCBF           equ	918	;# 
  3859     0397                     IOCCP           equ	919	;# 
  3860     0398                     IOCCN           equ	920	;# 
  3861     0399                     IOCCF           equ	921	;# 
  3862     039A                     CLKRCON         equ	922	;# 
  3863     039C                     MDCON           equ	924	;# 
  3864     039D                     MDSRC           equ	925	;# 
  3865     039E                     MDCARH          equ	926	;# 
  3866     039F                     MDCARL          equ	927	;# 
  3867     0411                     TMR3            equ	1041	;# 
  3868     0411                     TMR3L           equ	1041	;# 
  3869     0412                     TMR3H           equ	1042	;# 
  3870     0413                     T3CON           equ	1043	;# 
  3871     0414                     T3GCON          equ	1044	;# 
  3872     0415                     TMR4            equ	1045	;# 
  3873     0416                     PR4             equ	1046	;# 
  3874     0417                     T4CON           equ	1047	;# 
  3875     0418                     TMR5            equ	1048	;# 
  3876     0418                     TMR5L           equ	1048	;# 
  3877     0419                     TMR5H           equ	1049	;# 
  3878     041A                     T5CON           equ	1050	;# 
  3879     041B                     T5GCON          equ	1051	;# 
  3880     041C                     TMR6            equ	1052	;# 
  3881     041D                     PR6             equ	1053	;# 
  3882     041E                     T6CON           equ	1054	;# 
  3883     041F                     CCDCON          equ	1055	;# 
  3884     0498                     NCO1ACC         equ	1176	;# 
  3885     0498                     NCO1ACCL        equ	1176	;# 
  3886     0499                     NCO1ACCH        equ	1177	;# 
  3887     049A                     NCO1ACCU        equ	1178	;# 
  3888     049B                     NCO1INC         equ	1179	;# 
  3889     049B                     NCO1INCL        equ	1179	;# 
  3890     049C                     NCO1INCH        equ	1180	;# 
  3891     049D                     NCO1INCU        equ	1181	;# 
  3892     049E                     NCO1CON         equ	1182	;# 
  3893     049F                     NCO1CLK         equ	1183	;# 
  3894     0617                     PWM5DCL         equ	1559	;# 
  3895     0618                     PWM5DCH         equ	1560	;# 
  3896     0619                     PWM5CON         equ	1561	;# 
  3897     0619                     PWM5CON0        equ	1561	;# 
  3898     061A                     PWM6DCL         equ	1562	;# 
  3899     061B                     PWM6DCH         equ	1563	;# 
  3900     061C                     PWM6CON         equ	1564	;# 
  3901     061C                     PWM6CON0        equ	1564	;# 
  3902     061F                     PWMTMRS         equ	1567	;# 
  3903     0691                     CWG1CLKCON      equ	1681	;# 
  3904     0692                     CWG1DAT         equ	1682	;# 
  3905     0693                     CWG1DBR         equ	1683	;# 
  3906     0694                     CWG1DBF         equ	1684	;# 
  3907     0695                     CWG1CON0        equ	1685	;# 
  3908     0696                     CWG1CON1        equ	1686	;# 
  3909     0697                     CWG1AS0         equ	1687	;# 
  3910     0698                     CWG1AS1         equ	1688	;# 
  3911     0699                     CWG1STR         equ	1689	;# 
  3912     0711                     CWG2CLKCON      equ	1809	;# 
  3913     0712                     CWG2DAT         equ	1810	;# 
  3914     0713                     CWG2DBR         equ	1811	;# 
  3915     0714                     CWG2DBF         equ	1812	;# 
  3916     0715                     CWG2CON0        equ	1813	;# 
  3917     0716                     CWG2CON1        equ	1814	;# 
  3918     0717                     CWG2AS0         equ	1815	;# 
  3919     0718                     CWG2AS1         equ	1816	;# 
  3920     0719                     CWG2STR         equ	1817	;# 
  3921     0891                     NVMADR          equ	2193	;# 
  3922     0891                     EEADR           equ	2193	;# 
  3923     0891                     PMADR           equ	2193	;# 
  3924     0891                     NVMADRL         equ	2193	;# 
  3925     0891                     EEADRL          equ	2193	;# 
  3926     0891                     PMADRL          equ	2193	;# 
  3927     0892                     NVMADRH         equ	2194	;# 
  3928     0892                     EEADRH          equ	2194	;# 
  3929     0892                     PMADRH          equ	2194	;# 
  3930     0893                     NVMDAT          equ	2195	;# 
  3931     0893                     EEDAT           equ	2195	;# 
  3932     0893                     PMDAT           equ	2195	;# 
  3933     0893                     NVMDATL         equ	2195	;# 
  3934     0893                     EEDATL          equ	2195	;# 
  3935     0893                     PMDATL          equ	2195	;# 
  3936     0894                     NVMDATH         equ	2196	;# 
  3937     0894                     EEDATH          equ	2196	;# 
  3938     0894                     PMDATH          equ	2196	;# 
  3939     0895                     NVMCON1         equ	2197	;# 
  3940     0895                     EECON1          equ	2197	;# 
  3941     0895                     PMCON1          equ	2197	;# 
  3942     0896                     NVMCON2         equ	2198	;# 
  3943     0896                     EECON2          equ	2198	;# 
  3944     0896                     PMCON2          equ	2198	;# 
  3945     089B                     PCON0           equ	2203	;# 
  3946     0911                     PMD0            equ	2321	;# 
  3947     0912                     PMD1            equ	2322	;# 
  3948     0913                     PMD2            equ	2323	;# 
  3949     0914                     PMD3            equ	2324	;# 
  3950     0915                     PMD4            equ	2325	;# 
  3951     0916                     PMD5            equ	2326	;# 
  3952     0918                     CPUDOZE         equ	2328	;# 
  3953     0919                     OSCCON1         equ	2329	;# 
  3954     091A                     OSCCON2         equ	2330	;# 
  3955     091B                     OSCCON3         equ	2331	;# 
  3956     091C                     OSCSTAT1        equ	2332	;# 
  3957     091D                     OSCEN           equ	2333	;# 
  3958     091E                     OSCTUNE         equ	2334	;# 
  3959     091F                     OSCFRQ          equ	2335	;# 
  3960     0E0F                     PPSLOCK         equ	3599	;# 
  3961     0E10                     INTPPS          equ	3600	;# 
  3962     0E11                     T0CKIPPS        equ	3601	;# 
  3963     0E12                     T1CKIPPS        equ	3602	;# 
  3964     0E13                     T1GPPS          equ	3603	;# 
  3965     0E14                     CCP1PPS         equ	3604	;# 
  3966     0E15                     CCP2PPS         equ	3605	;# 
  3967     0E16                     CCP3PPS         equ	3606	;# 
  3968     0E17                     CCP4PPS         equ	3607	;# 
  3969     0E18                     CWG1PPS         equ	3608	;# 
  3970     0E19                     CWG2PPS         equ	3609	;# 
  3971     0E1A                     MDCIN1PPS       equ	3610	;# 
  3972     0E1B                     MDCIN2PPS       equ	3611	;# 
  3973     0E1C                     MDMINPPS        equ	3612	;# 
  3974     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3975     0E1E                     SSP2DATPPS      equ	3614	;# 
  3976     0E1F                     SSP2SSPPS       equ	3615	;# 
  3977     0E20                     SSP1CLKPPS      equ	3616	;# 
  3978     0E21                     SSP1DATPPS      equ	3617	;# 
  3979     0E22                     SSP1SSPPS       equ	3618	;# 
  3980     0E24                     RXPPS           equ	3620	;# 
  3981     0E25                     TXPPS           equ	3621	;# 
  3982     0E28                     CLCIN0PPS       equ	3624	;# 
  3983     0E29                     CLCIN1PPS       equ	3625	;# 
  3984     0E2A                     CLCIN2PPS       equ	3626	;# 
  3985     0E2B                     CLCIN3PPS       equ	3627	;# 
  3986     0E2C                     T3CKIPPS        equ	3628	;# 
  3987     0E2D                     T3GPPS          equ	3629	;# 
  3988     0E2E                     T5CKIPPS        equ	3630	;# 
  3989     0E2F                     T5GPPS          equ	3631	;# 
  3990     0E90                     RA0PPS          equ	3728	;# 
  3991     0E91                     RA1PPS          equ	3729	;# 
  3992     0E92                     RA2PPS          equ	3730	;# 
  3993     0E94                     RA4PPS          equ	3732	;# 
  3994     0E95                     RA5PPS          equ	3733	;# 
  3995     0E9C                     RB4PPS          equ	3740	;# 
  3996     0E9D                     RB5PPS          equ	3741	;# 
  3997     0E9E                     RB6PPS          equ	3742	;# 
  3998     0E9F                     RB7PPS          equ	3743	;# 
  3999     0EA0                     RC0PPS          equ	3744	;# 
  4000     0EA1                     RC1PPS          equ	3745	;# 
  4001     0EA2                     RC2PPS          equ	3746	;# 
  4002     0EA3                     RC3PPS          equ	3747	;# 
  4003     0EA4                     RC4PPS          equ	3748	;# 
  4004     0EA5                     RC5PPS          equ	3749	;# 
  4005     0EA6                     RC6PPS          equ	3750	;# 
  4006     0EA7                     RC7PPS          equ	3751	;# 
  4007     0F0F                     CLCDATA         equ	3855	;# 
  4008     0F10                     CLC1CON         equ	3856	;# 
  4009     0F11                     CLC1POL         equ	3857	;# 
  4010     0F12                     CLC1SEL0        equ	3858	;# 
  4011     0F13                     CLC1SEL1        equ	3859	;# 
  4012     0F14                     CLC1SEL2        equ	3860	;# 
  4013     0F15                     CLC1SEL3        equ	3861	;# 
  4014     0F16                     CLC1GLS0        equ	3862	;# 
  4015     0F17                     CLC1GLS1        equ	3863	;# 
  4016     0F18                     CLC1GLS2        equ	3864	;# 
  4017     0F19                     CLC1GLS3        equ	3865	;# 
  4018     0F1A                     CLC2CON         equ	3866	;# 
  4019     0F1B                     CLC2POL         equ	3867	;# 
  4020     0F1C                     CLC2SEL0        equ	3868	;# 
  4021     0F1D                     CLC2SEL1        equ	3869	;# 
  4022     0F1E                     CLC2SEL2        equ	3870	;# 
  4023     0F1F                     CLC2SEL3        equ	3871	;# 
  4024     0F20                     CLC2GLS0        equ	3872	;# 
  4025     0F21                     CLC2GLS1        equ	3873	;# 
  4026     0F22                     CLC2GLS2        equ	3874	;# 
  4027     0F23                     CLC2GLS3        equ	3875	;# 
  4028     0F24                     CLC3CON         equ	3876	;# 
  4029     0F25                     CLC3POL         equ	3877	;# 
  4030     0F26                     CLC3SEL0        equ	3878	;# 
  4031     0F27                     CLC3SEL1        equ	3879	;# 
  4032     0F28                     CLC3SEL2        equ	3880	;# 
  4033     0F29                     CLC3SEL3        equ	3881	;# 
  4034     0F2A                     CLC3GLS0        equ	3882	;# 
  4035     0F2B                     CLC3GLS1        equ	3883	;# 
  4036     0F2C                     CLC3GLS2        equ	3884	;# 
  4037     0F2D                     CLC3GLS3        equ	3885	;# 
  4038     0F2E                     CLC4CON         equ	3886	;# 
  4039     0F2F                     CLC4POL         equ	3887	;# 
  4040     0F30                     CLC4SEL0        equ	3888	;# 
  4041     0F31                     CLC4SEL1        equ	3889	;# 
  4042     0F32                     CLC4SEL2        equ	3890	;# 
  4043     0F33                     CLC4SEL3        equ	3891	;# 
  4044     0F34                     CLC4GLS0        equ	3892	;# 
  4045     0F35                     CLC4GLS1        equ	3893	;# 
  4046     0F36                     CLC4GLS2        equ	3894	;# 
  4047     0F37                     CLC4GLS3        equ	3895	;# 
  4048     0FE4                     STATUS_SHAD     equ	4068	;# 
  4049     0FE5                     WREG_SHAD       equ	4069	;# 
  4050     0FE6                     BSR_SHAD        equ	4070	;# 
  4051     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4052     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4053     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4054     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4055     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4056     0FED                     STKPTR          equ	4077	;# 
  4057     0FEE                     TOSL            equ	4078	;# 
  4058     0FEF                     TOSH            equ	4079	;# 
  4059     0000                     INDF0           equ	0	;# 
  4060     0001                     INDF1           equ	1	;# 
  4061     0002                     PCL             equ	2	;# 
  4062     0003                     STATUS          equ	3	;# 
  4063     0004                     FSR0L           equ	4	;# 
  4064     0005                     FSR0H           equ	5	;# 
  4065     0006                     FSR1L           equ	6	;# 
  4066     0007                     FSR1H           equ	7	;# 
  4067     0008                     BSR             equ	8	;# 
  4068     0009                     WREG            equ	9	;# 
  4069     000A                     PCLATH          equ	10	;# 
  4070     000B                     INTCON          equ	11	;# 
  4071     000C                     PORTA           equ	12	;# 
  4072     000D                     PORTB           equ	13	;# 
  4073     000E                     PORTC           equ	14	;# 
  4074     0010                     PIR0            equ	16	;# 
  4075     0011                     PIR1            equ	17	;# 
  4076     0012                     PIR2            equ	18	;# 
  4077     0013                     PIR3            equ	19	;# 
  4078     0014                     PIR4            equ	20	;# 
  4079     0015                     TMR0L           equ	21	;# 
  4080     0015                     TMR0            equ	21	;# 
  4081     0016                     TMR0H           equ	22	;# 
  4082     0016                     PR0             equ	22	;# 
  4083     0017                     T0CON0          equ	23	;# 
  4084     0018                     T0CON1          equ	24	;# 
  4085     0019                     TMR1            equ	25	;# 
  4086     0019                     TMR1L           equ	25	;# 
  4087     001A                     TMR1H           equ	26	;# 
  4088     001B                     T1CON           equ	27	;# 
  4089     001C                     T1GCON          equ	28	;# 
  4090     001D                     TMR2            equ	29	;# 
  4091     001E                     PR2             equ	30	;# 
  4092     001F                     T2CON           equ	31	;# 
  4093     008C                     TRISA           equ	140	;# 
  4094     008D                     TRISB           equ	141	;# 
  4095     008E                     TRISC           equ	142	;# 
  4096     0090                     PIE0            equ	144	;# 
  4097     0091                     PIE1            equ	145	;# 
  4098     0092                     PIE2            equ	146	;# 
  4099     0093                     PIE3            equ	147	;# 
  4100     0094                     PIE4            equ	148	;# 
  4101     0097                     WDTCON          equ	151	;# 
  4102     009B                     ADRES           equ	155	;# 
  4103     009B                     ADRESL          equ	155	;# 
  4104     009C                     ADRESH          equ	156	;# 
  4105     009D                     ADCON0          equ	157	;# 
  4106     009E                     ADCON1          equ	158	;# 
  4107     009F                     ADACT           equ	159	;# 
  4108     010C                     LATA            equ	268	;# 
  4109     010D                     LATB            equ	269	;# 
  4110     010E                     LATC            equ	270	;# 
  4111     0111                     CM1CON0         equ	273	;# 
  4112     0112                     CM1CON1         equ	274	;# 
  4113     0113                     CM2CON0         equ	275	;# 
  4114     0114                     CM2CON1         equ	276	;# 
  4115     0115                     CMOUT           equ	277	;# 
  4116     0116                     BORCON          equ	278	;# 
  4117     0117                     FVRCON          equ	279	;# 
  4118     0118                     DACCON0         equ	280	;# 
  4119     0119                     DACCON1         equ	281	;# 
  4120     018C                     ANSELA          equ	396	;# 
  4121     018D                     ANSELB          equ	397	;# 
  4122     018E                     ANSELC          equ	398	;# 
  4123     0197                     VREGCON         equ	407	;# 
  4124     0199                     RC1REG          equ	409	;# 
  4125     0199                     RCREG           equ	409	;# 
  4126     0199                     RCREG1          equ	409	;# 
  4127     019A                     TX1REG          equ	410	;# 
  4128     019A                     TXREG1          equ	410	;# 
  4129     019A                     TXREG           equ	410	;# 
  4130     019B                     SP1BRG          equ	411	;# 
  4131     019B                     SPBRG           equ	411	;# 
  4132     019B                     SP1BRGL         equ	411	;# 
  4133     019B                     SPBRG1          equ	411	;# 
  4134     019B                     SPBRGL          equ	411	;# 
  4135     019C                     SP1BRGH         equ	412	;# 
  4136     019C                     SPBRGH          equ	412	;# 
  4137     019C                     SPBRGH1         equ	412	;# 
  4138     019D                     RC1STA          equ	413	;# 
  4139     019D                     RCSTA1          equ	413	;# 
  4140     019D                     RCSTA           equ	413	;# 
  4141     019E                     TX1STA          equ	414	;# 
  4142     019E                     TXSTA1          equ	414	;# 
  4143     019E                     TXSTA           equ	414	;# 
  4144     019F                     BAUD1CON        equ	415	;# 
  4145     019F                     BAUDCON1        equ	415	;# 
  4146     019F                     BAUDCTL1        equ	415	;# 
  4147     019F                     BAUDCON         equ	415	;# 
  4148     019F                     BAUDCTL         equ	415	;# 
  4149     020C                     WPUA            equ	524	;# 
  4150     020D                     WPUB            equ	525	;# 
  4151     020E                     WPUC            equ	526	;# 
  4152     0211                     SSP1BUF         equ	529	;# 
  4153     0211                     SSPBUF          equ	529	;# 
  4154     0212                     SSP1ADD         equ	530	;# 
  4155     0212                     SSPADD          equ	530	;# 
  4156     0213                     SSP1MSK         equ	531	;# 
  4157     0213                     SSPMSK          equ	531	;# 
  4158     0214                     SSP1STAT        equ	532	;# 
  4159     0214                     SSPSTAT         equ	532	;# 
  4160     0215                     SSP1CON1        equ	533	;# 
  4161     0215                     SSPCON          equ	533	;# 
  4162     0215                     SSPCON1         equ	533	;# 
  4163     0215                     SSP1CON         equ	533	;# 
  4164     0216                     SSP1CON2        equ	534	;# 
  4165     0216                     SSPCON2         equ	534	;# 
  4166     0217                     SSP1CON3        equ	535	;# 
  4167     0217                     SSPCON3         equ	535	;# 
  4168     0219                     SSP2BUF         equ	537	;# 
  4169     021A                     SSP2ADD         equ	538	;# 
  4170     021B                     SSP2MSK         equ	539	;# 
  4171     021C                     SSP2STAT        equ	540	;# 
  4172     021D                     SSP2CON1        equ	541	;# 
  4173     021D                     SSP2CON         equ	541	;# 
  4174     021E                     SSP2CON2        equ	542	;# 
  4175     021F                     SSP2CON3        equ	543	;# 
  4176     028C                     ODCONA          equ	652	;# 
  4177     028D                     ODCONB          equ	653	;# 
  4178     028E                     ODCONC          equ	654	;# 
  4179     0291                     CCPR1           equ	657	;# 
  4180     0291                     CCPR1L          equ	657	;# 
  4181     0292                     CCPR1H          equ	658	;# 
  4182     0293                     CCP1CON         equ	659	;# 
  4183     0294                     CCP1CAP         equ	660	;# 
  4184     0295                     CCPR2           equ	661	;# 
  4185     0295                     CCPR2L          equ	661	;# 
  4186     0296                     CCPR2H          equ	662	;# 
  4187     0297                     CCP2CON         equ	663	;# 
  4188     0298                     CCP2CAP         equ	664	;# 
  4189     029F                     CCPTMRS         equ	671	;# 
  4190     030C                     SLRCONA         equ	780	;# 
  4191     030D                     SLRCONB         equ	781	;# 
  4192     030E                     SLRCONC         equ	782	;# 
  4193     0311                     CCPR3           equ	785	;# 
  4194     0311                     CCPR3L          equ	785	;# 
  4195     0312                     CCPR3H          equ	786	;# 
  4196     0313                     CCP3CON         equ	787	;# 
  4197     0314                     CCP3CAP         equ	788	;# 
  4198     0315                     CCPR4           equ	789	;# 
  4199     0315                     CCPR4L          equ	789	;# 
  4200     0316                     CCPR4H          equ	790	;# 
  4201     0317                     CCP4CON         equ	791	;# 
  4202     0318                     CCP4CAP         equ	792	;# 
  4203     038C                     INLVLA          equ	908	;# 
  4204     038D                     INLVLB          equ	909	;# 
  4205     038E                     INLVLC          equ	910	;# 
  4206     0391                     IOCAP           equ	913	;# 
  4207     0392                     IOCAN           equ	914	;# 
  4208     0393                     IOCAF           equ	915	;# 
  4209     0394                     IOCBP           equ	916	;# 
  4210     0395                     IOCBN           equ	917	;# 
  4211     0396                     IOCBF           equ	918	;# 
  4212     0397                     IOCCP           equ	919	;# 
  4213     0398                     IOCCN           equ	920	;# 
  4214     0399                     IOCCF           equ	921	;# 
  4215     039A                     CLKRCON         equ	922	;# 
  4216     039C                     MDCON           equ	924	;# 
  4217     039D                     MDSRC           equ	925	;# 
  4218     039E                     MDCARH          equ	926	;# 
  4219     039F                     MDCARL          equ	927	;# 
  4220     0411                     TMR3            equ	1041	;# 
  4221     0411                     TMR3L           equ	1041	;# 
  4222     0412                     TMR3H           equ	1042	;# 
  4223     0413                     T3CON           equ	1043	;# 
  4224     0414                     T3GCON          equ	1044	;# 
  4225     0415                     TMR4            equ	1045	;# 
  4226     0416                     PR4             equ	1046	;# 
  4227     0417                     T4CON           equ	1047	;# 
  4228     0418                     TMR5            equ	1048	;# 
  4229     0418                     TMR5L           equ	1048	;# 
  4230     0419                     TMR5H           equ	1049	;# 
  4231     041A                     T5CON           equ	1050	;# 
  4232     041B                     T5GCON          equ	1051	;# 
  4233     041C                     TMR6            equ	1052	;# 
  4234     041D                     PR6             equ	1053	;# 
  4235     041E                     T6CON           equ	1054	;# 
  4236     041F                     CCDCON          equ	1055	;# 
  4237     0498                     NCO1ACC         equ	1176	;# 
  4238     0498                     NCO1ACCL        equ	1176	;# 
  4239     0499                     NCO1ACCH        equ	1177	;# 
  4240     049A                     NCO1ACCU        equ	1178	;# 
  4241     049B                     NCO1INC         equ	1179	;# 
  4242     049B                     NCO1INCL        equ	1179	;# 
  4243     049C                     NCO1INCH        equ	1180	;# 
  4244     049D                     NCO1INCU        equ	1181	;# 
  4245     049E                     NCO1CON         equ	1182	;# 
  4246     049F                     NCO1CLK         equ	1183	;# 
  4247     0617                     PWM5DCL         equ	1559	;# 
  4248     0618                     PWM5DCH         equ	1560	;# 
  4249     0619                     PWM5CON         equ	1561	;# 
  4250     0619                     PWM5CON0        equ	1561	;# 
  4251     061A                     PWM6DCL         equ	1562	;# 
  4252     061B                     PWM6DCH         equ	1563	;# 
  4253     061C                     PWM6CON         equ	1564	;# 
  4254     061C                     PWM6CON0        equ	1564	;# 
  4255     061F                     PWMTMRS         equ	1567	;# 
  4256     0691                     CWG1CLKCON      equ	1681	;# 
  4257     0692                     CWG1DAT         equ	1682	;# 
  4258     0693                     CWG1DBR         equ	1683	;# 
  4259     0694                     CWG1DBF         equ	1684	;# 
  4260     0695                     CWG1CON0        equ	1685	;# 
  4261     0696                     CWG1CON1        equ	1686	;# 
  4262     0697                     CWG1AS0         equ	1687	;# 
  4263     0698                     CWG1AS1         equ	1688	;# 
  4264     0699                     CWG1STR         equ	1689	;# 
  4265     0711                     CWG2CLKCON      equ	1809	;# 
  4266     0712                     CWG2DAT         equ	1810	;# 
  4267     0713                     CWG2DBR         equ	1811	;# 
  4268     0714                     CWG2DBF         equ	1812	;# 
  4269     0715                     CWG2CON0        equ	1813	;# 
  4270     0716                     CWG2CON1        equ	1814	;# 
  4271     0717                     CWG2AS0         equ	1815	;# 
  4272     0718                     CWG2AS1         equ	1816	;# 
  4273     0719                     CWG2STR         equ	1817	;# 
  4274     0891                     NVMADR          equ	2193	;# 
  4275     0891                     EEADR           equ	2193	;# 
  4276     0891                     PMADR           equ	2193	;# 
  4277     0891                     NVMADRL         equ	2193	;# 
  4278     0891                     EEADRL          equ	2193	;# 
  4279     0891                     PMADRL          equ	2193	;# 
  4280     0892                     NVMADRH         equ	2194	;# 
  4281     0892                     EEADRH          equ	2194	;# 
  4282     0892                     PMADRH          equ	2194	;# 
  4283     0893                     NVMDAT          equ	2195	;# 
  4284     0893                     EEDAT           equ	2195	;# 
  4285     0893                     PMDAT           equ	2195	;# 
  4286     0893                     NVMDATL         equ	2195	;# 
  4287     0893                     EEDATL          equ	2195	;# 
  4288     0893                     PMDATL          equ	2195	;# 
  4289     0894                     NVMDATH         equ	2196	;# 
  4290     0894                     EEDATH          equ	2196	;# 
  4291     0894                     PMDATH          equ	2196	;# 
  4292     0895                     NVMCON1         equ	2197	;# 
  4293     0895                     EECON1          equ	2197	;# 
  4294     0895                     PMCON1          equ	2197	;# 
  4295     0896                     NVMCON2         equ	2198	;# 
  4296     0896                     EECON2          equ	2198	;# 
  4297     0896                     PMCON2          equ	2198	;# 
  4298     089B                     PCON0           equ	2203	;# 
  4299     0911                     PMD0            equ	2321	;# 
  4300     0912                     PMD1            equ	2322	;# 
  4301     0913                     PMD2            equ	2323	;# 
  4302     0914                     PMD3            equ	2324	;# 
  4303     0915                     PMD4            equ	2325	;# 
  4304     0916                     PMD5            equ	2326	;# 
  4305     0918                     CPUDOZE         equ	2328	;# 
  4306     0919                     OSCCON1         equ	2329	;# 
  4307     091A                     OSCCON2         equ	2330	;# 
  4308     091B                     OSCCON3         equ	2331	;# 
  4309     091C                     OSCSTAT1        equ	2332	;# 
  4310     091D                     OSCEN           equ	2333	;# 
  4311     091E                     OSCTUNE         equ	2334	;# 
  4312     091F                     OSCFRQ          equ	2335	;# 
  4313     0E0F                     PPSLOCK         equ	3599	;# 
  4314     0E10                     INTPPS          equ	3600	;# 
  4315     0E11                     T0CKIPPS        equ	3601	;# 
  4316     0E12                     T1CKIPPS        equ	3602	;# 
  4317     0E13                     T1GPPS          equ	3603	;# 
  4318     0E14                     CCP1PPS         equ	3604	;# 
  4319     0E15                     CCP2PPS         equ	3605	;# 
  4320     0E16                     CCP3PPS         equ	3606	;# 
  4321     0E17                     CCP4PPS         equ	3607	;# 
  4322     0E18                     CWG1PPS         equ	3608	;# 
  4323     0E19                     CWG2PPS         equ	3609	;# 
  4324     0E1A                     MDCIN1PPS       equ	3610	;# 
  4325     0E1B                     MDCIN2PPS       equ	3611	;# 
  4326     0E1C                     MDMINPPS        equ	3612	;# 
  4327     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4328     0E1E                     SSP2DATPPS      equ	3614	;# 
  4329     0E1F                     SSP2SSPPS       equ	3615	;# 
  4330     0E20                     SSP1CLKPPS      equ	3616	;# 
  4331     0E21                     SSP1DATPPS      equ	3617	;# 
  4332     0E22                     SSP1SSPPS       equ	3618	;# 
  4333     0E24                     RXPPS           equ	3620	;# 
  4334     0E25                     TXPPS           equ	3621	;# 
  4335     0E28                     CLCIN0PPS       equ	3624	;# 
  4336     0E29                     CLCIN1PPS       equ	3625	;# 
  4337     0E2A                     CLCIN2PPS       equ	3626	;# 
  4338     0E2B                     CLCIN3PPS       equ	3627	;# 
  4339     0E2C                     T3CKIPPS        equ	3628	;# 
  4340     0E2D                     T3GPPS          equ	3629	;# 
  4341     0E2E                     T5CKIPPS        equ	3630	;# 
  4342     0E2F                     T5GPPS          equ	3631	;# 
  4343     0E90                     RA0PPS          equ	3728	;# 
  4344     0E91                     RA1PPS          equ	3729	;# 
  4345     0E92                     RA2PPS          equ	3730	;# 
  4346     0E94                     RA4PPS          equ	3732	;# 
  4347     0E95                     RA5PPS          equ	3733	;# 
  4348     0E9C                     RB4PPS          equ	3740	;# 
  4349     0E9D                     RB5PPS          equ	3741	;# 
  4350     0E9E                     RB6PPS          equ	3742	;# 
  4351     0E9F                     RB7PPS          equ	3743	;# 
  4352     0EA0                     RC0PPS          equ	3744	;# 
  4353     0EA1                     RC1PPS          equ	3745	;# 
  4354     0EA2                     RC2PPS          equ	3746	;# 
  4355     0EA3                     RC3PPS          equ	3747	;# 
  4356     0EA4                     RC4PPS          equ	3748	;# 
  4357     0EA5                     RC5PPS          equ	3749	;# 
  4358     0EA6                     RC6PPS          equ	3750	;# 
  4359     0EA7                     RC7PPS          equ	3751	;# 
  4360     0F0F                     CLCDATA         equ	3855	;# 
  4361     0F10                     CLC1CON         equ	3856	;# 
  4362     0F11                     CLC1POL         equ	3857	;# 
  4363     0F12                     CLC1SEL0        equ	3858	;# 
  4364     0F13                     CLC1SEL1        equ	3859	;# 
  4365     0F14                     CLC1SEL2        equ	3860	;# 
  4366     0F15                     CLC1SEL3        equ	3861	;# 
  4367     0F16                     CLC1GLS0        equ	3862	;# 
  4368     0F17                     CLC1GLS1        equ	3863	;# 
  4369     0F18                     CLC1GLS2        equ	3864	;# 
  4370     0F19                     CLC1GLS3        equ	3865	;# 
  4371     0F1A                     CLC2CON         equ	3866	;# 
  4372     0F1B                     CLC2POL         equ	3867	;# 
  4373     0F1C                     CLC2SEL0        equ	3868	;# 
  4374     0F1D                     CLC2SEL1        equ	3869	;# 
  4375     0F1E                     CLC2SEL2        equ	3870	;# 
  4376     0F1F                     CLC2SEL3        equ	3871	;# 
  4377     0F20                     CLC2GLS0        equ	3872	;# 
  4378     0F21                     CLC2GLS1        equ	3873	;# 
  4379     0F22                     CLC2GLS2        equ	3874	;# 
  4380     0F23                     CLC2GLS3        equ	3875	;# 
  4381     0F24                     CLC3CON         equ	3876	;# 
  4382     0F25                     CLC3POL         equ	3877	;# 
  4383     0F26                     CLC3SEL0        equ	3878	;# 
  4384     0F27                     CLC3SEL1        equ	3879	;# 
  4385     0F28                     CLC3SEL2        equ	3880	;# 
  4386     0F29                     CLC3SEL3        equ	3881	;# 
  4387     0F2A                     CLC3GLS0        equ	3882	;# 
  4388     0F2B                     CLC3GLS1        equ	3883	;# 
  4389     0F2C                     CLC3GLS2        equ	3884	;# 
  4390     0F2D                     CLC3GLS3        equ	3885	;# 
  4391     0F2E                     CLC4CON         equ	3886	;# 
  4392     0F2F                     CLC4POL         equ	3887	;# 
  4393     0F30                     CLC4SEL0        equ	3888	;# 
  4394     0F31                     CLC4SEL1        equ	3889	;# 
  4395     0F32                     CLC4SEL2        equ	3890	;# 
  4396     0F33                     CLC4SEL3        equ	3891	;# 
  4397     0F34                     CLC4GLS0        equ	3892	;# 
  4398     0F35                     CLC4GLS1        equ	3893	;# 
  4399     0F36                     CLC4GLS2        equ	3894	;# 
  4400     0F37                     CLC4GLS3        equ	3895	;# 
  4401     0FE4                     STATUS_SHAD     equ	4068	;# 
  4402     0FE5                     WREG_SHAD       equ	4069	;# 
  4403     0FE6                     BSR_SHAD        equ	4070	;# 
  4404     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4405     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4406     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4407     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4408     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4409     0FED                     STKPTR          equ	4077	;# 
  4410     0FEE                     TOSL            equ	4078	;# 
  4411     0FEF                     TOSH            equ	4079	;# 
  4412     0000                     INDF0           equ	0	;# 
  4413     0001                     INDF1           equ	1	;# 
  4414     0002                     PCL             equ	2	;# 
  4415     0003                     STATUS          equ	3	;# 
  4416     0004                     FSR0L           equ	4	;# 
  4417     0005                     FSR0H           equ	5	;# 
  4418     0006                     FSR1L           equ	6	;# 
  4419     0007                     FSR1H           equ	7	;# 
  4420     0008                     BSR             equ	8	;# 
  4421     0009                     WREG            equ	9	;# 
  4422     000A                     PCLATH          equ	10	;# 
  4423     000B                     INTCON          equ	11	;# 
  4424     000C                     PORTA           equ	12	;# 
  4425     000D                     PORTB           equ	13	;# 
  4426     000E                     PORTC           equ	14	;# 
  4427     0010                     PIR0            equ	16	;# 
  4428     0011                     PIR1            equ	17	;# 
  4429     0012                     PIR2            equ	18	;# 
  4430     0013                     PIR3            equ	19	;# 
  4431     0014                     PIR4            equ	20	;# 
  4432     0015                     TMR0L           equ	21	;# 
  4433     0015                     TMR0            equ	21	;# 
  4434     0016                     TMR0H           equ	22	;# 
  4435     0016                     PR0             equ	22	;# 
  4436     0017                     T0CON0          equ	23	;# 
  4437     0018                     T0CON1          equ	24	;# 
  4438     0019                     TMR1            equ	25	;# 
  4439     0019                     TMR1L           equ	25	;# 
  4440     001A                     TMR1H           equ	26	;# 
  4441     001B                     T1CON           equ	27	;# 
  4442     001C                     T1GCON          equ	28	;# 
  4443     001D                     TMR2            equ	29	;# 
  4444     001E                     PR2             equ	30	;# 
  4445     001F                     T2CON           equ	31	;# 
  4446     008C                     TRISA           equ	140	;# 
  4447     008D                     TRISB           equ	141	;# 
  4448     008E                     TRISC           equ	142	;# 
  4449     0090                     PIE0            equ	144	;# 
  4450     0091                     PIE1            equ	145	;# 
  4451     0092                     PIE2            equ	146	;# 
  4452     0093                     PIE3            equ	147	;# 
  4453     0094                     PIE4            equ	148	;# 
  4454     0097                     WDTCON          equ	151	;# 
  4455     009B                     ADRES           equ	155	;# 
  4456     009B                     ADRESL          equ	155	;# 
  4457     009C                     ADRESH          equ	156	;# 
  4458     009D                     ADCON0          equ	157	;# 
  4459     009E                     ADCON1          equ	158	;# 
  4460     009F                     ADACT           equ	159	;# 
  4461     010C                     LATA            equ	268	;# 
  4462     010D                     LATB            equ	269	;# 
  4463     010E                     LATC            equ	270	;# 
  4464     0111                     CM1CON0         equ	273	;# 
  4465     0112                     CM1CON1         equ	274	;# 
  4466     0113                     CM2CON0         equ	275	;# 
  4467     0114                     CM2CON1         equ	276	;# 
  4468     0115                     CMOUT           equ	277	;# 
  4469     0116                     BORCON          equ	278	;# 
  4470     0117                     FVRCON          equ	279	;# 
  4471     0118                     DACCON0         equ	280	;# 
  4472     0119                     DACCON1         equ	281	;# 
  4473     018C                     ANSELA          equ	396	;# 
  4474     018D                     ANSELB          equ	397	;# 
  4475     018E                     ANSELC          equ	398	;# 
  4476     0197                     VREGCON         equ	407	;# 
  4477     0199                     RC1REG          equ	409	;# 
  4478     0199                     RCREG           equ	409	;# 
  4479     0199                     RCREG1          equ	409	;# 
  4480     019A                     TX1REG          equ	410	;# 
  4481     019A                     TXREG1          equ	410	;# 
  4482     019A                     TXREG           equ	410	;# 
  4483     019B                     SP1BRG          equ	411	;# 
  4484     019B                     SPBRG           equ	411	;# 
  4485     019B                     SP1BRGL         equ	411	;# 
  4486     019B                     SPBRG1          equ	411	;# 
  4487     019B                     SPBRGL          equ	411	;# 
  4488     019C                     SP1BRGH         equ	412	;# 
  4489     019C                     SPBRGH          equ	412	;# 
  4490     019C                     SPBRGH1         equ	412	;# 
  4491     019D                     RC1STA          equ	413	;# 
  4492     019D                     RCSTA1          equ	413	;# 
  4493     019D                     RCSTA           equ	413	;# 
  4494     019E                     TX1STA          equ	414	;# 
  4495     019E                     TXSTA1          equ	414	;# 
  4496     019E                     TXSTA           equ	414	;# 
  4497     019F                     BAUD1CON        equ	415	;# 
  4498     019F                     BAUDCON1        equ	415	;# 
  4499     019F                     BAUDCTL1        equ	415	;# 
  4500     019F                     BAUDCON         equ	415	;# 
  4501     019F                     BAUDCTL         equ	415	;# 
  4502     020C                     WPUA            equ	524	;# 
  4503     020D                     WPUB            equ	525	;# 
  4504     020E                     WPUC            equ	526	;# 
  4505     0211                     SSP1BUF         equ	529	;# 
  4506     0211                     SSPBUF          equ	529	;# 
  4507     0212                     SSP1ADD         equ	530	;# 
  4508     0212                     SSPADD          equ	530	;# 
  4509     0213                     SSP1MSK         equ	531	;# 
  4510     0213                     SSPMSK          equ	531	;# 
  4511     0214                     SSP1STAT        equ	532	;# 
  4512     0214                     SSPSTAT         equ	532	;# 
  4513     0215                     SSP1CON1        equ	533	;# 
  4514     0215                     SSPCON          equ	533	;# 
  4515     0215                     SSPCON1         equ	533	;# 
  4516     0215                     SSP1CON         equ	533	;# 
  4517     0216                     SSP1CON2        equ	534	;# 
  4518     0216                     SSPCON2         equ	534	;# 
  4519     0217                     SSP1CON3        equ	535	;# 
  4520     0217                     SSPCON3         equ	535	;# 
  4521     0219                     SSP2BUF         equ	537	;# 
  4522     021A                     SSP2ADD         equ	538	;# 
  4523     021B                     SSP2MSK         equ	539	;# 
  4524     021C                     SSP2STAT        equ	540	;# 
  4525     021D                     SSP2CON1        equ	541	;# 
  4526     021D                     SSP2CON         equ	541	;# 
  4527     021E                     SSP2CON2        equ	542	;# 
  4528     021F                     SSP2CON3        equ	543	;# 
  4529     028C                     ODCONA          equ	652	;# 
  4530     028D                     ODCONB          equ	653	;# 
  4531     028E                     ODCONC          equ	654	;# 
  4532     0291                     CCPR1           equ	657	;# 
  4533     0291                     CCPR1L          equ	657	;# 
  4534     0292                     CCPR1H          equ	658	;# 
  4535     0293                     CCP1CON         equ	659	;# 
  4536     0294                     CCP1CAP         equ	660	;# 
  4537     0295                     CCPR2           equ	661	;# 
  4538     0295                     CCPR2L          equ	661	;# 
  4539     0296                     CCPR2H          equ	662	;# 
  4540     0297                     CCP2CON         equ	663	;# 
  4541     0298                     CCP2CAP         equ	664	;# 
  4542     029F                     CCPTMRS         equ	671	;# 
  4543     030C                     SLRCONA         equ	780	;# 
  4544     030D                     SLRCONB         equ	781	;# 
  4545     030E                     SLRCONC         equ	782	;# 
  4546     0311                     CCPR3           equ	785	;# 
  4547     0311                     CCPR3L          equ	785	;# 
  4548     0312                     CCPR3H          equ	786	;# 
  4549     0313                     CCP3CON         equ	787	;# 
  4550     0314                     CCP3CAP         equ	788	;# 
  4551     0315                     CCPR4           equ	789	;# 
  4552     0315                     CCPR4L          equ	789	;# 
  4553     0316                     CCPR4H          equ	790	;# 
  4554     0317                     CCP4CON         equ	791	;# 
  4555     0318                     CCP4CAP         equ	792	;# 
  4556     038C                     INLVLA          equ	908	;# 
  4557     038D                     INLVLB          equ	909	;# 
  4558     038E                     INLVLC          equ	910	;# 
  4559     0391                     IOCAP           equ	913	;# 
  4560     0392                     IOCAN           equ	914	;# 
  4561     0393                     IOCAF           equ	915	;# 
  4562     0394                     IOCBP           equ	916	;# 
  4563     0395                     IOCBN           equ	917	;# 
  4564     0396                     IOCBF           equ	918	;# 
  4565     0397                     IOCCP           equ	919	;# 
  4566     0398                     IOCCN           equ	920	;# 
  4567     0399                     IOCCF           equ	921	;# 
  4568     039A                     CLKRCON         equ	922	;# 
  4569     039C                     MDCON           equ	924	;# 
  4570     039D                     MDSRC           equ	925	;# 
  4571     039E                     MDCARH          equ	926	;# 
  4572     039F                     MDCARL          equ	927	;# 
  4573     0411                     TMR3            equ	1041	;# 
  4574     0411                     TMR3L           equ	1041	;# 
  4575     0412                     TMR3H           equ	1042	;# 
  4576     0413                     T3CON           equ	1043	;# 
  4577     0414                     T3GCON          equ	1044	;# 
  4578     0415                     TMR4            equ	1045	;# 
  4579     0416                     PR4             equ	1046	;# 
  4580     0417                     T4CON           equ	1047	;# 
  4581     0418                     TMR5            equ	1048	;# 
  4582     0418                     TMR5L           equ	1048	;# 
  4583     0419                     TMR5H           equ	1049	;# 
  4584     041A                     T5CON           equ	1050	;# 
  4585     041B                     T5GCON          equ	1051	;# 
  4586     041C                     TMR6            equ	1052	;# 
  4587     041D                     PR6             equ	1053	;# 
  4588     041E                     T6CON           equ	1054	;# 
  4589     041F                     CCDCON          equ	1055	;# 
  4590     0498                     NCO1ACC         equ	1176	;# 
  4591     0498                     NCO1ACCL        equ	1176	;# 
  4592     0499                     NCO1ACCH        equ	1177	;# 
  4593     049A                     NCO1ACCU        equ	1178	;# 
  4594     049B                     NCO1INC         equ	1179	;# 
  4595     049B                     NCO1INCL        equ	1179	;# 
  4596     049C                     NCO1INCH        equ	1180	;# 
  4597     049D                     NCO1INCU        equ	1181	;# 
  4598     049E                     NCO1CON         equ	1182	;# 
  4599     049F                     NCO1CLK         equ	1183	;# 
  4600     0617                     PWM5DCL         equ	1559	;# 
  4601     0618                     PWM5DCH         equ	1560	;# 
  4602     0619                     PWM5CON         equ	1561	;# 
  4603     0619                     PWM5CON0        equ	1561	;# 
  4604     061A                     PWM6DCL         equ	1562	;# 
  4605     061B                     PWM6DCH         equ	1563	;# 
  4606     061C                     PWM6CON         equ	1564	;# 
  4607     061C                     PWM6CON0        equ	1564	;# 
  4608     061F                     PWMTMRS         equ	1567	;# 
  4609     0691                     CWG1CLKCON      equ	1681	;# 
  4610     0692                     CWG1DAT         equ	1682	;# 
  4611     0693                     CWG1DBR         equ	1683	;# 
  4612     0694                     CWG1DBF         equ	1684	;# 
  4613     0695                     CWG1CON0        equ	1685	;# 
  4614     0696                     CWG1CON1        equ	1686	;# 
  4615     0697                     CWG1AS0         equ	1687	;# 
  4616     0698                     CWG1AS1         equ	1688	;# 
  4617     0699                     CWG1STR         equ	1689	;# 
  4618     0711                     CWG2CLKCON      equ	1809	;# 
  4619     0712                     CWG2DAT         equ	1810	;# 
  4620     0713                     CWG2DBR         equ	1811	;# 
  4621     0714                     CWG2DBF         equ	1812	;# 
  4622     0715                     CWG2CON0        equ	1813	;# 
  4623     0716                     CWG2CON1        equ	1814	;# 
  4624     0717                     CWG2AS0         equ	1815	;# 
  4625     0718                     CWG2AS1         equ	1816	;# 
  4626     0719                     CWG2STR         equ	1817	;# 
  4627     0891                     NVMADR          equ	2193	;# 
  4628     0891                     EEADR           equ	2193	;# 
  4629     0891                     PMADR           equ	2193	;# 
  4630     0891                     NVMADRL         equ	2193	;# 
  4631     0891                     EEADRL          equ	2193	;# 
  4632     0891                     PMADRL          equ	2193	;# 
  4633     0892                     NVMADRH         equ	2194	;# 
  4634     0892                     EEADRH          equ	2194	;# 
  4635     0892                     PMADRH          equ	2194	;# 
  4636     0893                     NVMDAT          equ	2195	;# 
  4637     0893                     EEDAT           equ	2195	;# 
  4638     0893                     PMDAT           equ	2195	;# 
  4639     0893                     NVMDATL         equ	2195	;# 
  4640     0893                     EEDATL          equ	2195	;# 
  4641     0893                     PMDATL          equ	2195	;# 
  4642     0894                     NVMDATH         equ	2196	;# 
  4643     0894                     EEDATH          equ	2196	;# 
  4644     0894                     PMDATH          equ	2196	;# 
  4645     0895                     NVMCON1         equ	2197	;# 
  4646     0895                     EECON1          equ	2197	;# 
  4647     0895                     PMCON1          equ	2197	;# 
  4648     0896                     NVMCON2         equ	2198	;# 
  4649     0896                     EECON2          equ	2198	;# 
  4650     0896                     PMCON2          equ	2198	;# 
  4651     089B                     PCON0           equ	2203	;# 
  4652     0911                     PMD0            equ	2321	;# 
  4653     0912                     PMD1            equ	2322	;# 
  4654     0913                     PMD2            equ	2323	;# 
  4655     0914                     PMD3            equ	2324	;# 
  4656     0915                     PMD4            equ	2325	;# 
  4657     0916                     PMD5            equ	2326	;# 
  4658     0918                     CPUDOZE         equ	2328	;# 
  4659     0919                     OSCCON1         equ	2329	;# 
  4660     091A                     OSCCON2         equ	2330	;# 
  4661     091B                     OSCCON3         equ	2331	;# 
  4662     091C                     OSCSTAT1        equ	2332	;# 
  4663     091D                     OSCEN           equ	2333	;# 
  4664     091E                     OSCTUNE         equ	2334	;# 
  4665     091F                     OSCFRQ          equ	2335	;# 
  4666     0E0F                     PPSLOCK         equ	3599	;# 
  4667     0E10                     INTPPS          equ	3600	;# 
  4668     0E11                     T0CKIPPS        equ	3601	;# 
  4669     0E12                     T1CKIPPS        equ	3602	;# 
  4670     0E13                     T1GPPS          equ	3603	;# 
  4671     0E14                     CCP1PPS         equ	3604	;# 
  4672     0E15                     CCP2PPS         equ	3605	;# 
  4673     0E16                     CCP3PPS         equ	3606	;# 
  4674     0E17                     CCP4PPS         equ	3607	;# 
  4675     0E18                     CWG1PPS         equ	3608	;# 
  4676     0E19                     CWG2PPS         equ	3609	;# 
  4677     0E1A                     MDCIN1PPS       equ	3610	;# 
  4678     0E1B                     MDCIN2PPS       equ	3611	;# 
  4679     0E1C                     MDMINPPS        equ	3612	;# 
  4680     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4681     0E1E                     SSP2DATPPS      equ	3614	;# 
  4682     0E1F                     SSP2SSPPS       equ	3615	;# 
  4683     0E20                     SSP1CLKPPS      equ	3616	;# 
  4684     0E21                     SSP1DATPPS      equ	3617	;# 
  4685     0E22                     SSP1SSPPS       equ	3618	;# 
  4686     0E24                     RXPPS           equ	3620	;# 
  4687     0E25                     TXPPS           equ	3621	;# 
  4688     0E28                     CLCIN0PPS       equ	3624	;# 
  4689     0E29                     CLCIN1PPS       equ	3625	;# 
  4690     0E2A                     CLCIN2PPS       equ	3626	;# 
  4691     0E2B                     CLCIN3PPS       equ	3627	;# 
  4692     0E2C                     T3CKIPPS        equ	3628	;# 
  4693     0E2D                     T3GPPS          equ	3629	;# 
  4694     0E2E                     T5CKIPPS        equ	3630	;# 
  4695     0E2F                     T5GPPS          equ	3631	;# 
  4696     0E90                     RA0PPS          equ	3728	;# 
  4697     0E91                     RA1PPS          equ	3729	;# 
  4698     0E92                     RA2PPS          equ	3730	;# 
  4699     0E94                     RA4PPS          equ	3732	;# 
  4700     0E95                     RA5PPS          equ	3733	;# 
  4701     0E9C                     RB4PPS          equ	3740	;# 
  4702     0E9D                     RB5PPS          equ	3741	;# 
  4703     0E9E                     RB6PPS          equ	3742	;# 
  4704     0E9F                     RB7PPS          equ	3743	;# 
  4705     0EA0                     RC0PPS          equ	3744	;# 
  4706     0EA1                     RC1PPS          equ	3745	;# 
  4707     0EA2                     RC2PPS          equ	3746	;# 
  4708     0EA3                     RC3PPS          equ	3747	;# 
  4709     0EA4                     RC4PPS          equ	3748	;# 
  4710     0EA5                     RC5PPS          equ	3749	;# 
  4711     0EA6                     RC6PPS          equ	3750	;# 
  4712     0EA7                     RC7PPS          equ	3751	;# 
  4713     0F0F                     CLCDATA         equ	3855	;# 
  4714     0F10                     CLC1CON         equ	3856	;# 
  4715     0F11                     CLC1POL         equ	3857	;# 
  4716     0F12                     CLC1SEL0        equ	3858	;# 
  4717     0F13                     CLC1SEL1        equ	3859	;# 
  4718     0F14                     CLC1SEL2        equ	3860	;# 
  4719     0F15                     CLC1SEL3        equ	3861	;# 
  4720     0F16                     CLC1GLS0        equ	3862	;# 
  4721     0F17                     CLC1GLS1        equ	3863	;# 
  4722     0F18                     CLC1GLS2        equ	3864	;# 
  4723     0F19                     CLC1GLS3        equ	3865	;# 
  4724     0F1A                     CLC2CON         equ	3866	;# 
  4725     0F1B                     CLC2POL         equ	3867	;# 
  4726     0F1C                     CLC2SEL0        equ	3868	;# 
  4727     0F1D                     CLC2SEL1        equ	3869	;# 
  4728     0F1E                     CLC2SEL2        equ	3870	;# 
  4729     0F1F                     CLC2SEL3        equ	3871	;# 
  4730     0F20                     CLC2GLS0        equ	3872	;# 
  4731     0F21                     CLC2GLS1        equ	3873	;# 
  4732     0F22                     CLC2GLS2        equ	3874	;# 
  4733     0F23                     CLC2GLS3        equ	3875	;# 
  4734     0F24                     CLC3CON         equ	3876	;# 
  4735     0F25                     CLC3POL         equ	3877	;# 
  4736     0F26                     CLC3SEL0        equ	3878	;# 
  4737     0F27                     CLC3SEL1        equ	3879	;# 
  4738     0F28                     CLC3SEL2        equ	3880	;# 
  4739     0F29                     CLC3SEL3        equ	3881	;# 
  4740     0F2A                     CLC3GLS0        equ	3882	;# 
  4741     0F2B                     CLC3GLS1        equ	3883	;# 
  4742     0F2C                     CLC3GLS2        equ	3884	;# 
  4743     0F2D                     CLC3GLS3        equ	3885	;# 
  4744     0F2E                     CLC4CON         equ	3886	;# 
  4745     0F2F                     CLC4POL         equ	3887	;# 
  4746     0F30                     CLC4SEL0        equ	3888	;# 
  4747     0F31                     CLC4SEL1        equ	3889	;# 
  4748     0F32                     CLC4SEL2        equ	3890	;# 
  4749     0F33                     CLC4SEL3        equ	3891	;# 
  4750     0F34                     CLC4GLS0        equ	3892	;# 
  4751     0F35                     CLC4GLS1        equ	3893	;# 
  4752     0F36                     CLC4GLS2        equ	3894	;# 
  4753     0F37                     CLC4GLS3        equ	3895	;# 
  4754     0FE4                     STATUS_SHAD     equ	4068	;# 
  4755     0FE5                     WREG_SHAD       equ	4069	;# 
  4756     0FE6                     BSR_SHAD        equ	4070	;# 
  4757     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4758     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4759     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4760     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4761     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4762     0FED                     STKPTR          equ	4077	;# 
  4763     0FEE                     TOSL            equ	4078	;# 
  4764     0FEF                     TOSH            equ	4079	;# 
  4765     0000                     INDF0           equ	0	;# 
  4766     0001                     INDF1           equ	1	;# 
  4767     0002                     PCL             equ	2	;# 
  4768     0003                     STATUS          equ	3	;# 
  4769     0004                     FSR0L           equ	4	;# 
  4770     0005                     FSR0H           equ	5	;# 
  4771     0006                     FSR1L           equ	6	;# 
  4772     0007                     FSR1H           equ	7	;# 
  4773     0008                     BSR             equ	8	;# 
  4774     0009                     WREG            equ	9	;# 
  4775     000A                     PCLATH          equ	10	;# 
  4776     000B                     INTCON          equ	11	;# 
  4777     000C                     PORTA           equ	12	;# 
  4778     000D                     PORTB           equ	13	;# 
  4779     000E                     PORTC           equ	14	;# 
  4780     0010                     PIR0            equ	16	;# 
  4781     0011                     PIR1            equ	17	;# 
  4782     0012                     PIR2            equ	18	;# 
  4783     0013                     PIR3            equ	19	;# 
  4784     0014                     PIR4            equ	20	;# 
  4785     0015                     TMR0L           equ	21	;# 
  4786     0015                     TMR0            equ	21	;# 
  4787     0016                     TMR0H           equ	22	;# 
  4788     0016                     PR0             equ	22	;# 
  4789     0017                     T0CON0          equ	23	;# 
  4790     0018                     T0CON1          equ	24	;# 
  4791     0019                     TMR1            equ	25	;# 
  4792     0019                     TMR1L           equ	25	;# 
  4793     001A                     TMR1H           equ	26	;# 
  4794     001B                     T1CON           equ	27	;# 
  4795     001C                     T1GCON          equ	28	;# 
  4796     001D                     TMR2            equ	29	;# 
  4797     001E                     PR2             equ	30	;# 
  4798     001F                     T2CON           equ	31	;# 
  4799     008C                     TRISA           equ	140	;# 
  4800     008D                     TRISB           equ	141	;# 
  4801     008E                     TRISC           equ	142	;# 
  4802     0090                     PIE0            equ	144	;# 
  4803     0091                     PIE1            equ	145	;# 
  4804     0092                     PIE2            equ	146	;# 
  4805     0093                     PIE3            equ	147	;# 
  4806     0094                     PIE4            equ	148	;# 
  4807     0097                     WDTCON          equ	151	;# 
  4808     009B                     ADRES           equ	155	;# 
  4809     009B                     ADRESL          equ	155	;# 
  4810     009C                     ADRESH          equ	156	;# 
  4811     009D                     ADCON0          equ	157	;# 
  4812     009E                     ADCON1          equ	158	;# 
  4813     009F                     ADACT           equ	159	;# 
  4814     010C                     LATA            equ	268	;# 
  4815     010D                     LATB            equ	269	;# 
  4816     010E                     LATC            equ	270	;# 
  4817     0111                     CM1CON0         equ	273	;# 
  4818     0112                     CM1CON1         equ	274	;# 
  4819     0113                     CM2CON0         equ	275	;# 
  4820     0114                     CM2CON1         equ	276	;# 
  4821     0115                     CMOUT           equ	277	;# 
  4822     0116                     BORCON          equ	278	;# 
  4823     0117                     FVRCON          equ	279	;# 
  4824     0118                     DACCON0         equ	280	;# 
  4825     0119                     DACCON1         equ	281	;# 
  4826     018C                     ANSELA          equ	396	;# 
  4827     018D                     ANSELB          equ	397	;# 
  4828     018E                     ANSELC          equ	398	;# 
  4829     0197                     VREGCON         equ	407	;# 
  4830     0199                     RC1REG          equ	409	;# 
  4831     0199                     RCREG           equ	409	;# 
  4832     0199                     RCREG1          equ	409	;# 
  4833     019A                     TX1REG          equ	410	;# 
  4834     019A                     TXREG1          equ	410	;# 
  4835     019A                     TXREG           equ	410	;# 
  4836     019B                     SP1BRG          equ	411	;# 
  4837     019B                     SPBRG           equ	411	;# 
  4838     019B                     SP1BRGL         equ	411	;# 
  4839     019B                     SPBRG1          equ	411	;# 
  4840     019B                     SPBRGL          equ	411	;# 
  4841     019C                     SP1BRGH         equ	412	;# 
  4842     019C                     SPBRGH          equ	412	;# 
  4843     019C                     SPBRGH1         equ	412	;# 
  4844     019D                     RC1STA          equ	413	;# 
  4845     019D                     RCSTA1          equ	413	;# 
  4846     019D                     RCSTA           equ	413	;# 
  4847     019E                     TX1STA          equ	414	;# 
  4848     019E                     TXSTA1          equ	414	;# 
  4849     019E                     TXSTA           equ	414	;# 
  4850     019F                     BAUD1CON        equ	415	;# 
  4851     019F                     BAUDCON1        equ	415	;# 
  4852     019F                     BAUDCTL1        equ	415	;# 
  4853     019F                     BAUDCON         equ	415	;# 
  4854     019F                     BAUDCTL         equ	415	;# 
  4855     020C                     WPUA            equ	524	;# 
  4856     020D                     WPUB            equ	525	;# 
  4857     020E                     WPUC            equ	526	;# 
  4858     0211                     SSP1BUF         equ	529	;# 
  4859     0211                     SSPBUF          equ	529	;# 
  4860     0212                     SSP1ADD         equ	530	;# 
  4861     0212                     SSPADD          equ	530	;# 
  4862     0213                     SSP1MSK         equ	531	;# 
  4863     0213                     SSPMSK          equ	531	;# 
  4864     0214                     SSP1STAT        equ	532	;# 
  4865     0214                     SSPSTAT         equ	532	;# 
  4866     0215                     SSP1CON1        equ	533	;# 
  4867     0215                     SSPCON          equ	533	;# 
  4868     0215                     SSPCON1         equ	533	;# 
  4869     0215                     SSP1CON         equ	533	;# 
  4870     0216                     SSP1CON2        equ	534	;# 
  4871     0216                     SSPCON2         equ	534	;# 
  4872     0217                     SSP1CON3        equ	535	;# 
  4873     0217                     SSPCON3         equ	535	;# 
  4874     0219                     SSP2BUF         equ	537	;# 
  4875     021A                     SSP2ADD         equ	538	;# 
  4876     021B                     SSP2MSK         equ	539	;# 
  4877     021C                     SSP2STAT        equ	540	;# 
  4878     021D                     SSP2CON1        equ	541	;# 
  4879     021D                     SSP2CON         equ	541	;# 
  4880     021E                     SSP2CON2        equ	542	;# 
  4881     021F                     SSP2CON3        equ	543	;# 
  4882     028C                     ODCONA          equ	652	;# 
  4883     028D                     ODCONB          equ	653	;# 
  4884     028E                     ODCONC          equ	654	;# 
  4885     0291                     CCPR1           equ	657	;# 
  4886     0291                     CCPR1L          equ	657	;# 
  4887     0292                     CCPR1H          equ	658	;# 
  4888     0293                     CCP1CON         equ	659	;# 
  4889     0294                     CCP1CAP         equ	660	;# 
  4890     0295                     CCPR2           equ	661	;# 
  4891     0295                     CCPR2L          equ	661	;# 
  4892     0296                     CCPR2H          equ	662	;# 
  4893     0297                     CCP2CON         equ	663	;# 
  4894     0298                     CCP2CAP         equ	664	;# 
  4895     029F                     CCPTMRS         equ	671	;# 
  4896     030C                     SLRCONA         equ	780	;# 
  4897     030D                     SLRCONB         equ	781	;# 
  4898     030E                     SLRCONC         equ	782	;# 
  4899     0311                     CCPR3           equ	785	;# 
  4900     0311                     CCPR3L          equ	785	;# 
  4901     0312                     CCPR3H          equ	786	;# 
  4902     0313                     CCP3CON         equ	787	;# 
  4903     0314                     CCP3CAP         equ	788	;# 
  4904     0315                     CCPR4           equ	789	;# 
  4905     0315                     CCPR4L          equ	789	;# 
  4906     0316                     CCPR4H          equ	790	;# 
  4907     0317                     CCP4CON         equ	791	;# 
  4908     0318                     CCP4CAP         equ	792	;# 
  4909     038C                     INLVLA          equ	908	;# 
  4910     038D                     INLVLB          equ	909	;# 
  4911     038E                     INLVLC          equ	910	;# 
  4912     0391                     IOCAP           equ	913	;# 
  4913     0392                     IOCAN           equ	914	;# 
  4914     0393                     IOCAF           equ	915	;# 
  4915     0394                     IOCBP           equ	916	;# 
  4916     0395                     IOCBN           equ	917	;# 
  4917     0396                     IOCBF           equ	918	;# 
  4918     0397                     IOCCP           equ	919	;# 
  4919     0398                     IOCCN           equ	920	;# 
  4920     0399                     IOCCF           equ	921	;# 
  4921     039A                     CLKRCON         equ	922	;# 
  4922     039C                     MDCON           equ	924	;# 
  4923     039D                     MDSRC           equ	925	;# 
  4924     039E                     MDCARH          equ	926	;# 
  4925     039F                     MDCARL          equ	927	;# 
  4926     0411                     TMR3            equ	1041	;# 
  4927     0411                     TMR3L           equ	1041	;# 
  4928     0412                     TMR3H           equ	1042	;# 
  4929     0413                     T3CON           equ	1043	;# 
  4930     0414                     T3GCON          equ	1044	;# 
  4931     0415                     TMR4            equ	1045	;# 
  4932     0416                     PR4             equ	1046	;# 
  4933     0417                     T4CON           equ	1047	;# 
  4934     0418                     TMR5            equ	1048	;# 
  4935     0418                     TMR5L           equ	1048	;# 
  4936     0419                     TMR5H           equ	1049	;# 
  4937     041A                     T5CON           equ	1050	;# 
  4938     041B                     T5GCON          equ	1051	;# 
  4939     041C                     TMR6            equ	1052	;# 
  4940     041D                     PR6             equ	1053	;# 
  4941     041E                     T6CON           equ	1054	;# 
  4942     041F                     CCDCON          equ	1055	;# 
  4943     0498                     NCO1ACC         equ	1176	;# 
  4944     0498                     NCO1ACCL        equ	1176	;# 
  4945     0499                     NCO1ACCH        equ	1177	;# 
  4946     049A                     NCO1ACCU        equ	1178	;# 
  4947     049B                     NCO1INC         equ	1179	;# 
  4948     049B                     NCO1INCL        equ	1179	;# 
  4949     049C                     NCO1INCH        equ	1180	;# 
  4950     049D                     NCO1INCU        equ	1181	;# 
  4951     049E                     NCO1CON         equ	1182	;# 
  4952     049F                     NCO1CLK         equ	1183	;# 
  4953     0617                     PWM5DCL         equ	1559	;# 
  4954     0618                     PWM5DCH         equ	1560	;# 
  4955     0619                     PWM5CON         equ	1561	;# 
  4956     0619                     PWM5CON0        equ	1561	;# 
  4957     061A                     PWM6DCL         equ	1562	;# 
  4958     061B                     PWM6DCH         equ	1563	;# 
  4959     061C                     PWM6CON         equ	1564	;# 
  4960     061C                     PWM6CON0        equ	1564	;# 
  4961     061F                     PWMTMRS         equ	1567	;# 
  4962     0691                     CWG1CLKCON      equ	1681	;# 
  4963     0692                     CWG1DAT         equ	1682	;# 
  4964     0693                     CWG1DBR         equ	1683	;# 
  4965     0694                     CWG1DBF         equ	1684	;# 
  4966     0695                     CWG1CON0        equ	1685	;# 
  4967     0696                     CWG1CON1        equ	1686	;# 
  4968     0697                     CWG1AS0         equ	1687	;# 
  4969     0698                     CWG1AS1         equ	1688	;# 
  4970     0699                     CWG1STR         equ	1689	;# 
  4971     0711                     CWG2CLKCON      equ	1809	;# 
  4972     0712                     CWG2DAT         equ	1810	;# 
  4973     0713                     CWG2DBR         equ	1811	;# 
  4974     0714                     CWG2DBF         equ	1812	;# 
  4975     0715                     CWG2CON0        equ	1813	;# 
  4976     0716                     CWG2CON1        equ	1814	;# 
  4977     0717                     CWG2AS0         equ	1815	;# 
  4978     0718                     CWG2AS1         equ	1816	;# 
  4979     0719                     CWG2STR         equ	1817	;# 
  4980     0891                     NVMADR          equ	2193	;# 
  4981     0891                     EEADR           equ	2193	;# 
  4982     0891                     PMADR           equ	2193	;# 
  4983     0891                     NVMADRL         equ	2193	;# 
  4984     0891                     EEADRL          equ	2193	;# 
  4985     0891                     PMADRL          equ	2193	;# 
  4986     0892                     NVMADRH         equ	2194	;# 
  4987     0892                     EEADRH          equ	2194	;# 
  4988     0892                     PMADRH          equ	2194	;# 
  4989     0893                     NVMDAT          equ	2195	;# 
  4990     0893                     EEDAT           equ	2195	;# 
  4991     0893                     PMDAT           equ	2195	;# 
  4992     0893                     NVMDATL         equ	2195	;# 
  4993     0893                     EEDATL          equ	2195	;# 
  4994     0893                     PMDATL          equ	2195	;# 
  4995     0894                     NVMDATH         equ	2196	;# 
  4996     0894                     EEDATH          equ	2196	;# 
  4997     0894                     PMDATH          equ	2196	;# 
  4998     0895                     NVMCON1         equ	2197	;# 
  4999     0895                     EECON1          equ	2197	;# 
  5000     0895                     PMCON1          equ	2197	;# 
  5001     0896                     NVMCON2         equ	2198	;# 
  5002     0896                     EECON2          equ	2198	;# 
  5003     0896                     PMCON2          equ	2198	;# 
  5004     089B                     PCON0           equ	2203	;# 
  5005     0911                     PMD0            equ	2321	;# 
  5006     0912                     PMD1            equ	2322	;# 
  5007     0913                     PMD2            equ	2323	;# 
  5008     0914                     PMD3            equ	2324	;# 
  5009     0915                     PMD4            equ	2325	;# 
  5010     0916                     PMD5            equ	2326	;# 
  5011     0918                     CPUDOZE         equ	2328	;# 
  5012     0919                     OSCCON1         equ	2329	;# 
  5013     091A                     OSCCON2         equ	2330	;# 
  5014     091B                     OSCCON3         equ	2331	;# 
  5015     091C                     OSCSTAT1        equ	2332	;# 
  5016     091D                     OSCEN           equ	2333	;# 
  5017     091E                     OSCTUNE         equ	2334	;# 
  5018     091F                     OSCFRQ          equ	2335	;# 
  5019     0E0F                     PPSLOCK         equ	3599	;# 
  5020     0E10                     INTPPS          equ	3600	;# 
  5021     0E11                     T0CKIPPS        equ	3601	;# 
  5022     0E12                     T1CKIPPS        equ	3602	;# 
  5023     0E13                     T1GPPS          equ	3603	;# 
  5024     0E14                     CCP1PPS         equ	3604	;# 
  5025     0E15                     CCP2PPS         equ	3605	;# 
  5026     0E16                     CCP3PPS         equ	3606	;# 
  5027     0E17                     CCP4PPS         equ	3607	;# 
  5028     0E18                     CWG1PPS         equ	3608	;# 
  5029     0E19                     CWG2PPS         equ	3609	;# 
  5030     0E1A                     MDCIN1PPS       equ	3610	;# 
  5031     0E1B                     MDCIN2PPS       equ	3611	;# 
  5032     0E1C                     MDMINPPS        equ	3612	;# 
  5033     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5034     0E1E                     SSP2DATPPS      equ	3614	;# 
  5035     0E1F                     SSP2SSPPS       equ	3615	;# 
  5036     0E20                     SSP1CLKPPS      equ	3616	;# 
  5037     0E21                     SSP1DATPPS      equ	3617	;# 
  5038     0E22                     SSP1SSPPS       equ	3618	;# 
  5039     0E24                     RXPPS           equ	3620	;# 
  5040     0E25                     TXPPS           equ	3621	;# 
  5041     0E28                     CLCIN0PPS       equ	3624	;# 
  5042     0E29                     CLCIN1PPS       equ	3625	;# 
  5043     0E2A                     CLCIN2PPS       equ	3626	;# 
  5044     0E2B                     CLCIN3PPS       equ	3627	;# 
  5045     0E2C                     T3CKIPPS        equ	3628	;# 
  5046     0E2D                     T3GPPS          equ	3629	;# 
  5047     0E2E                     T5CKIPPS        equ	3630	;# 
  5048     0E2F                     T5GPPS          equ	3631	;# 
  5049     0E90                     RA0PPS          equ	3728	;# 
  5050     0E91                     RA1PPS          equ	3729	;# 
  5051     0E92                     RA2PPS          equ	3730	;# 
  5052     0E94                     RA4PPS          equ	3732	;# 
  5053     0E95                     RA5PPS          equ	3733	;# 
  5054     0E9C                     RB4PPS          equ	3740	;# 
  5055     0E9D                     RB5PPS          equ	3741	;# 
  5056     0E9E                     RB6PPS          equ	3742	;# 
  5057     0E9F                     RB7PPS          equ	3743	;# 
  5058     0EA0                     RC0PPS          equ	3744	;# 
  5059     0EA1                     RC1PPS          equ	3745	;# 
  5060     0EA2                     RC2PPS          equ	3746	;# 
  5061     0EA3                     RC3PPS          equ	3747	;# 
  5062     0EA4                     RC4PPS          equ	3748	;# 
  5063     0EA5                     RC5PPS          equ	3749	;# 
  5064     0EA6                     RC6PPS          equ	3750	;# 
  5065     0EA7                     RC7PPS          equ	3751	;# 
  5066     0F0F                     CLCDATA         equ	3855	;# 
  5067     0F10                     CLC1CON         equ	3856	;# 
  5068     0F11                     CLC1POL         equ	3857	;# 
  5069     0F12                     CLC1SEL0        equ	3858	;# 
  5070     0F13                     CLC1SEL1        equ	3859	;# 
  5071     0F14                     CLC1SEL2        equ	3860	;# 
  5072     0F15                     CLC1SEL3        equ	3861	;# 
  5073     0F16                     CLC1GLS0        equ	3862	;# 
  5074     0F17                     CLC1GLS1        equ	3863	;# 
  5075     0F18                     CLC1GLS2        equ	3864	;# 
  5076     0F19                     CLC1GLS3        equ	3865	;# 
  5077     0F1A                     CLC2CON         equ	3866	;# 
  5078     0F1B                     CLC2POL         equ	3867	;# 
  5079     0F1C                     CLC2SEL0        equ	3868	;# 
  5080     0F1D                     CLC2SEL1        equ	3869	;# 
  5081     0F1E                     CLC2SEL2        equ	3870	;# 
  5082     0F1F                     CLC2SEL3        equ	3871	;# 
  5083     0F20                     CLC2GLS0        equ	3872	;# 
  5084     0F21                     CLC2GLS1        equ	3873	;# 
  5085     0F22                     CLC2GLS2        equ	3874	;# 
  5086     0F23                     CLC2GLS3        equ	3875	;# 
  5087     0F24                     CLC3CON         equ	3876	;# 
  5088     0F25                     CLC3POL         equ	3877	;# 
  5089     0F26                     CLC3SEL0        equ	3878	;# 
  5090     0F27                     CLC3SEL1        equ	3879	;# 
  5091     0F28                     CLC3SEL2        equ	3880	;# 
  5092     0F29                     CLC3SEL3        equ	3881	;# 
  5093     0F2A                     CLC3GLS0        equ	3882	;# 
  5094     0F2B                     CLC3GLS1        equ	3883	;# 
  5095     0F2C                     CLC3GLS2        equ	3884	;# 
  5096     0F2D                     CLC3GLS3        equ	3885	;# 
  5097     0F2E                     CLC4CON         equ	3886	;# 
  5098     0F2F                     CLC4POL         equ	3887	;# 
  5099     0F30                     CLC4SEL0        equ	3888	;# 
  5100     0F31                     CLC4SEL1        equ	3889	;# 
  5101     0F32                     CLC4SEL2        equ	3890	;# 
  5102     0F33                     CLC4SEL3        equ	3891	;# 
  5103     0F34                     CLC4GLS0        equ	3892	;# 
  5104     0F35                     CLC4GLS1        equ	3893	;# 
  5105     0F36                     CLC4GLS2        equ	3894	;# 
  5106     0F37                     CLC4GLS3        equ	3895	;# 
  5107     0FE4                     STATUS_SHAD     equ	4068	;# 
  5108     0FE5                     WREG_SHAD       equ	4069	;# 
  5109     0FE6                     BSR_SHAD        equ	4070	;# 
  5110     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5111     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5112     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5113     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5114     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5115     0FED                     STKPTR          equ	4077	;# 
  5116     0FEE                     TOSL            equ	4078	;# 
  5117     0FEF                     TOSH            equ	4079	;# 
  5118     0000                     INDF0           equ	0	;# 
  5119     0001                     INDF1           equ	1	;# 
  5120     0002                     PCL             equ	2	;# 
  5121     0003                     STATUS          equ	3	;# 
  5122     0004                     FSR0L           equ	4	;# 
  5123     0005                     FSR0H           equ	5	;# 
  5124     0006                     FSR1L           equ	6	;# 
  5125     0007                     FSR1H           equ	7	;# 
  5126     0008                     BSR             equ	8	;# 
  5127     0009                     WREG            equ	9	;# 
  5128     000A                     PCLATH          equ	10	;# 
  5129     000B                     INTCON          equ	11	;# 
  5130     000C                     PORTA           equ	12	;# 
  5131     000D                     PORTB           equ	13	;# 
  5132     000E                     PORTC           equ	14	;# 
  5133     0010                     PIR0            equ	16	;# 
  5134     0011                     PIR1            equ	17	;# 
  5135     0012                     PIR2            equ	18	;# 
  5136     0013                     PIR3            equ	19	;# 
  5137     0014                     PIR4            equ	20	;# 
  5138     0015                     TMR0L           equ	21	;# 
  5139     0015                     TMR0            equ	21	;# 
  5140     0016                     TMR0H           equ	22	;# 
  5141     0016                     PR0             equ	22	;# 
  5142     0017                     T0CON0          equ	23	;# 
  5143     0018                     T0CON1          equ	24	;# 
  5144     0019                     TMR1            equ	25	;# 
  5145     0019                     TMR1L           equ	25	;# 
  5146     001A                     TMR1H           equ	26	;# 
  5147     001B                     T1CON           equ	27	;# 
  5148     001C                     T1GCON          equ	28	;# 
  5149     001D                     TMR2            equ	29	;# 
  5150     001E                     PR2             equ	30	;# 
  5151     001F                     T2CON           equ	31	;# 
  5152     008C                     TRISA           equ	140	;# 
  5153     008D                     TRISB           equ	141	;# 
  5154     008E                     TRISC           equ	142	;# 
  5155     0090                     PIE0            equ	144	;# 
  5156     0091                     PIE1            equ	145	;# 
  5157     0092                     PIE2            equ	146	;# 
  5158     0093                     PIE3            equ	147	;# 
  5159     0094                     PIE4            equ	148	;# 
  5160     0097                     WDTCON          equ	151	;# 
  5161     009B                     ADRES           equ	155	;# 
  5162     009B                     ADRESL          equ	155	;# 
  5163     009C                     ADRESH          equ	156	;# 
  5164     009D                     ADCON0          equ	157	;# 
  5165     009E                     ADCON1          equ	158	;# 
  5166     009F                     ADACT           equ	159	;# 
  5167     010C                     LATA            equ	268	;# 
  5168     010D                     LATB            equ	269	;# 
  5169     010E                     LATC            equ	270	;# 
  5170     0111                     CM1CON0         equ	273	;# 
  5171     0112                     CM1CON1         equ	274	;# 
  5172     0113                     CM2CON0         equ	275	;# 
  5173     0114                     CM2CON1         equ	276	;# 
  5174     0115                     CMOUT           equ	277	;# 
  5175     0116                     BORCON          equ	278	;# 
  5176     0117                     FVRCON          equ	279	;# 
  5177     0118                     DACCON0         equ	280	;# 
  5178     0119                     DACCON1         equ	281	;# 
  5179     018C                     ANSELA          equ	396	;# 
  5180     018D                     ANSELB          equ	397	;# 
  5181     018E                     ANSELC          equ	398	;# 
  5182     0197                     VREGCON         equ	407	;# 
  5183     0199                     RC1REG          equ	409	;# 
  5184     0199                     RCREG           equ	409	;# 
  5185     0199                     RCREG1          equ	409	;# 
  5186     019A                     TX1REG          equ	410	;# 
  5187     019A                     TXREG1          equ	410	;# 
  5188     019A                     TXREG           equ	410	;# 
  5189     019B                     SP1BRG          equ	411	;# 
  5190     019B                     SPBRG           equ	411	;# 
  5191     019B                     SP1BRGL         equ	411	;# 
  5192     019B                     SPBRG1          equ	411	;# 
  5193     019B                     SPBRGL          equ	411	;# 
  5194     019C                     SP1BRGH         equ	412	;# 
  5195     019C                     SPBRGH          equ	412	;# 
  5196     019C                     SPBRGH1         equ	412	;# 
  5197     019D                     RC1STA          equ	413	;# 
  5198     019D                     RCSTA1          equ	413	;# 
  5199     019D                     RCSTA           equ	413	;# 
  5200     019E                     TX1STA          equ	414	;# 
  5201     019E                     TXSTA1          equ	414	;# 
  5202     019E                     TXSTA           equ	414	;# 
  5203     019F                     BAUD1CON        equ	415	;# 
  5204     019F                     BAUDCON1        equ	415	;# 
  5205     019F                     BAUDCTL1        equ	415	;# 
  5206     019F                     BAUDCON         equ	415	;# 
  5207     019F                     BAUDCTL         equ	415	;# 
  5208     020C                     WPUA            equ	524	;# 
  5209     020D                     WPUB            equ	525	;# 
  5210     020E                     WPUC            equ	526	;# 
  5211     0211                     SSP1BUF         equ	529	;# 
  5212     0211                     SSPBUF          equ	529	;# 
  5213     0212                     SSP1ADD         equ	530	;# 
  5214     0212                     SSPADD          equ	530	;# 
  5215     0213                     SSP1MSK         equ	531	;# 
  5216     0213                     SSPMSK          equ	531	;# 
  5217     0214                     SSP1STAT        equ	532	;# 
  5218     0214                     SSPSTAT         equ	532	;# 
  5219     0215                     SSP1CON1        equ	533	;# 
  5220     0215                     SSPCON          equ	533	;# 
  5221     0215                     SSPCON1         equ	533	;# 
  5222     0215                     SSP1CON         equ	533	;# 
  5223     0216                     SSP1CON2        equ	534	;# 
  5224     0216                     SSPCON2         equ	534	;# 
  5225     0217                     SSP1CON3        equ	535	;# 
  5226     0217                     SSPCON3         equ	535	;# 
  5227     0219                     SSP2BUF         equ	537	;# 
  5228     021A                     SSP2ADD         equ	538	;# 
  5229     021B                     SSP2MSK         equ	539	;# 
  5230     021C                     SSP2STAT        equ	540	;# 
  5231     021D                     SSP2CON1        equ	541	;# 
  5232     021D                     SSP2CON         equ	541	;# 
  5233     021E                     SSP2CON2        equ	542	;# 
  5234     021F                     SSP2CON3        equ	543	;# 
  5235     028C                     ODCONA          equ	652	;# 
  5236     028D                     ODCONB          equ	653	;# 
  5237     028E                     ODCONC          equ	654	;# 
  5238     0291                     CCPR1           equ	657	;# 
  5239     0291                     CCPR1L          equ	657	;# 
  5240     0292                     CCPR1H          equ	658	;# 
  5241     0293                     CCP1CON         equ	659	;# 
  5242     0294                     CCP1CAP         equ	660	;# 
  5243     0295                     CCPR2           equ	661	;# 
  5244     0295                     CCPR2L          equ	661	;# 
  5245     0296                     CCPR2H          equ	662	;# 
  5246     0297                     CCP2CON         equ	663	;# 
  5247     0298                     CCP2CAP         equ	664	;# 
  5248     029F                     CCPTMRS         equ	671	;# 
  5249     030C                     SLRCONA         equ	780	;# 
  5250     030D                     SLRCONB         equ	781	;# 
  5251     030E                     SLRCONC         equ	782	;# 
  5252     0311                     CCPR3           equ	785	;# 
  5253     0311                     CCPR3L          equ	785	;# 
  5254     0312                     CCPR3H          equ	786	;# 
  5255     0313                     CCP3CON         equ	787	;# 
  5256     0314                     CCP3CAP         equ	788	;# 
  5257     0315                     CCPR4           equ	789	;# 
  5258     0315                     CCPR4L          equ	789	;# 
  5259     0316                     CCPR4H          equ	790	;# 
  5260     0317                     CCP4CON         equ	791	;# 
  5261     0318                     CCP4CAP         equ	792	;# 
  5262     038C                     INLVLA          equ	908	;# 
  5263     038D                     INLVLB          equ	909	;# 
  5264     038E                     INLVLC          equ	910	;# 
  5265     0391                     IOCAP           equ	913	;# 
  5266     0392                     IOCAN           equ	914	;# 
  5267     0393                     IOCAF           equ	915	;# 
  5268     0394                     IOCBP           equ	916	;# 
  5269     0395                     IOCBN           equ	917	;# 
  5270     0396                     IOCBF           equ	918	;# 
  5271     0397                     IOCCP           equ	919	;# 
  5272     0398                     IOCCN           equ	920	;# 
  5273     0399                     IOCCF           equ	921	;# 
  5274     039A                     CLKRCON         equ	922	;# 
  5275     039C                     MDCON           equ	924	;# 
  5276     039D                     MDSRC           equ	925	;# 
  5277     039E                     MDCARH          equ	926	;# 
  5278     039F                     MDCARL          equ	927	;# 
  5279     0411                     TMR3            equ	1041	;# 
  5280     0411                     TMR3L           equ	1041	;# 
  5281     0412                     TMR3H           equ	1042	;# 
  5282     0413                     T3CON           equ	1043	;# 
  5283     0414                     T3GCON          equ	1044	;# 
  5284     0415                     TMR4            equ	1045	;# 
  5285     0416                     PR4             equ	1046	;# 
  5286     0417                     T4CON           equ	1047	;# 
  5287     0418                     TMR5            equ	1048	;# 
  5288     0418                     TMR5L           equ	1048	;# 
  5289     0419                     TMR5H           equ	1049	;# 
  5290     041A                     T5CON           equ	1050	;# 
  5291     041B                     T5GCON          equ	1051	;# 
  5292     041C                     TMR6            equ	1052	;# 
  5293     041D                     PR6             equ	1053	;# 
  5294     041E                     T6CON           equ	1054	;# 
  5295     041F                     CCDCON          equ	1055	;# 
  5296     0498                     NCO1ACC         equ	1176	;# 
  5297     0498                     NCO1ACCL        equ	1176	;# 
  5298     0499                     NCO1ACCH        equ	1177	;# 
  5299     049A                     NCO1ACCU        equ	1178	;# 
  5300     049B                     NCO1INC         equ	1179	;# 
  5301     049B                     NCO1INCL        equ	1179	;# 
  5302     049C                     NCO1INCH        equ	1180	;# 
  5303     049D                     NCO1INCU        equ	1181	;# 
  5304     049E                     NCO1CON         equ	1182	;# 
  5305     049F                     NCO1CLK         equ	1183	;# 
  5306     0617                     PWM5DCL         equ	1559	;# 
  5307     0618                     PWM5DCH         equ	1560	;# 
  5308     0619                     PWM5CON         equ	1561	;# 
  5309     0619                     PWM5CON0        equ	1561	;# 
  5310     061A                     PWM6DCL         equ	1562	;# 
  5311     061B                     PWM6DCH         equ	1563	;# 
  5312     061C                     PWM6CON         equ	1564	;# 
  5313     061C                     PWM6CON0        equ	1564	;# 
  5314     061F                     PWMTMRS         equ	1567	;# 
  5315     0691                     CWG1CLKCON      equ	1681	;# 
  5316     0692                     CWG1DAT         equ	1682	;# 
  5317     0693                     CWG1DBR         equ	1683	;# 
  5318     0694                     CWG1DBF         equ	1684	;# 
  5319     0695                     CWG1CON0        equ	1685	;# 
  5320     0696                     CWG1CON1        equ	1686	;# 
  5321     0697                     CWG1AS0         equ	1687	;# 
  5322     0698                     CWG1AS1         equ	1688	;# 
  5323     0699                     CWG1STR         equ	1689	;# 
  5324     0711                     CWG2CLKCON      equ	1809	;# 
  5325     0712                     CWG2DAT         equ	1810	;# 
  5326     0713                     CWG2DBR         equ	1811	;# 
  5327     0714                     CWG2DBF         equ	1812	;# 
  5328     0715                     CWG2CON0        equ	1813	;# 
  5329     0716                     CWG2CON1        equ	1814	;# 
  5330     0717                     CWG2AS0         equ	1815	;# 
  5331     0718                     CWG2AS1         equ	1816	;# 
  5332     0719                     CWG2STR         equ	1817	;# 
  5333     0891                     NVMADR          equ	2193	;# 
  5334     0891                     EEADR           equ	2193	;# 
  5335     0891                     PMADR           equ	2193	;# 
  5336     0891                     NVMADRL         equ	2193	;# 
  5337     0891                     EEADRL          equ	2193	;# 
  5338     0891                     PMADRL          equ	2193	;# 
  5339     0892                     NVMADRH         equ	2194	;# 
  5340     0892                     EEADRH          equ	2194	;# 
  5341     0892                     PMADRH          equ	2194	;# 
  5342     0893                     NVMDAT          equ	2195	;# 
  5343     0893                     EEDAT           equ	2195	;# 
  5344     0893                     PMDAT           equ	2195	;# 
  5345     0893                     NVMDATL         equ	2195	;# 
  5346     0893                     EEDATL          equ	2195	;# 
  5347     0893                     PMDATL          equ	2195	;# 
  5348     0894                     NVMDATH         equ	2196	;# 
  5349     0894                     EEDATH          equ	2196	;# 
  5350     0894                     PMDATH          equ	2196	;# 
  5351     0895                     NVMCON1         equ	2197	;# 
  5352     0895                     EECON1          equ	2197	;# 
  5353     0895                     PMCON1          equ	2197	;# 
  5354     0896                     NVMCON2         equ	2198	;# 
  5355     0896                     EECON2          equ	2198	;# 
  5356     0896                     PMCON2          equ	2198	;# 
  5357     089B                     PCON0           equ	2203	;# 
  5358     0911                     PMD0            equ	2321	;# 
  5359     0912                     PMD1            equ	2322	;# 
  5360     0913                     PMD2            equ	2323	;# 
  5361     0914                     PMD3            equ	2324	;# 
  5362     0915                     PMD4            equ	2325	;# 
  5363     0916                     PMD5            equ	2326	;# 
  5364     0918                     CPUDOZE         equ	2328	;# 
  5365     0919                     OSCCON1         equ	2329	;# 
  5366     091A                     OSCCON2         equ	2330	;# 
  5367     091B                     OSCCON3         equ	2331	;# 
  5368     091C                     OSCSTAT1        equ	2332	;# 
  5369     091D                     OSCEN           equ	2333	;# 
  5370     091E                     OSCTUNE         equ	2334	;# 
  5371     091F                     OSCFRQ          equ	2335	;# 
  5372     0E0F                     PPSLOCK         equ	3599	;# 
  5373     0E10                     INTPPS          equ	3600	;# 
  5374     0E11                     T0CKIPPS        equ	3601	;# 
  5375     0E12                     T1CKIPPS        equ	3602	;# 
  5376     0E13                     T1GPPS          equ	3603	;# 
  5377     0E14                     CCP1PPS         equ	3604	;# 
  5378     0E15                     CCP2PPS         equ	3605	;# 
  5379     0E16                     CCP3PPS         equ	3606	;# 
  5380     0E17                     CCP4PPS         equ	3607	;# 
  5381     0E18                     CWG1PPS         equ	3608	;# 
  5382     0E19                     CWG2PPS         equ	3609	;# 
  5383     0E1A                     MDCIN1PPS       equ	3610	;# 
  5384     0E1B                     MDCIN2PPS       equ	3611	;# 
  5385     0E1C                     MDMINPPS        equ	3612	;# 
  5386     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5387     0E1E                     SSP2DATPPS      equ	3614	;# 
  5388     0E1F                     SSP2SSPPS       equ	3615	;# 
  5389     0E20                     SSP1CLKPPS      equ	3616	;# 
  5390     0E21                     SSP1DATPPS      equ	3617	;# 
  5391     0E22                     SSP1SSPPS       equ	3618	;# 
  5392     0E24                     RXPPS           equ	3620	;# 
  5393     0E25                     TXPPS           equ	3621	;# 
  5394     0E28                     CLCIN0PPS       equ	3624	;# 
  5395     0E29                     CLCIN1PPS       equ	3625	;# 
  5396     0E2A                     CLCIN2PPS       equ	3626	;# 
  5397     0E2B                     CLCIN3PPS       equ	3627	;# 
  5398     0E2C                     T3CKIPPS        equ	3628	;# 
  5399     0E2D                     T3GPPS          equ	3629	;# 
  5400     0E2E                     T5CKIPPS        equ	3630	;# 
  5401     0E2F                     T5GPPS          equ	3631	;# 
  5402     0E90                     RA0PPS          equ	3728	;# 
  5403     0E91                     RA1PPS          equ	3729	;# 
  5404     0E92                     RA2PPS          equ	3730	;# 
  5405     0E94                     RA4PPS          equ	3732	;# 
  5406     0E95                     RA5PPS          equ	3733	;# 
  5407     0E9C                     RB4PPS          equ	3740	;# 
  5408     0E9D                     RB5PPS          equ	3741	;# 
  5409     0E9E                     RB6PPS          equ	3742	;# 
  5410     0E9F                     RB7PPS          equ	3743	;# 
  5411     0EA0                     RC0PPS          equ	3744	;# 
  5412     0EA1                     RC1PPS          equ	3745	;# 
  5413     0EA2                     RC2PPS          equ	3746	;# 
  5414     0EA3                     RC3PPS          equ	3747	;# 
  5415     0EA4                     RC4PPS          equ	3748	;# 
  5416     0EA5                     RC5PPS          equ	3749	;# 
  5417     0EA6                     RC6PPS          equ	3750	;# 
  5418     0EA7                     RC7PPS          equ	3751	;# 
  5419     0F0F                     CLCDATA         equ	3855	;# 
  5420     0F10                     CLC1CON         equ	3856	;# 
  5421     0F11                     CLC1POL         equ	3857	;# 
  5422     0F12                     CLC1SEL0        equ	3858	;# 
  5423     0F13                     CLC1SEL1        equ	3859	;# 
  5424     0F14                     CLC1SEL2        equ	3860	;# 
  5425     0F15                     CLC1SEL3        equ	3861	;# 
  5426     0F16                     CLC1GLS0        equ	3862	;# 
  5427     0F17                     CLC1GLS1        equ	3863	;# 
  5428     0F18                     CLC1GLS2        equ	3864	;# 
  5429     0F19                     CLC1GLS3        equ	3865	;# 
  5430     0F1A                     CLC2CON         equ	3866	;# 
  5431     0F1B                     CLC2POL         equ	3867	;# 
  5432     0F1C                     CLC2SEL0        equ	3868	;# 
  5433     0F1D                     CLC2SEL1        equ	3869	;# 
  5434     0F1E                     CLC2SEL2        equ	3870	;# 
  5435     0F1F                     CLC2SEL3        equ	3871	;# 
  5436     0F20                     CLC2GLS0        equ	3872	;# 
  5437     0F21                     CLC2GLS1        equ	3873	;# 
  5438     0F22                     CLC2GLS2        equ	3874	;# 
  5439     0F23                     CLC2GLS3        equ	3875	;# 
  5440     0F24                     CLC3CON         equ	3876	;# 
  5441     0F25                     CLC3POL         equ	3877	;# 
  5442     0F26                     CLC3SEL0        equ	3878	;# 
  5443     0F27                     CLC3SEL1        equ	3879	;# 
  5444     0F28                     CLC3SEL2        equ	3880	;# 
  5445     0F29                     CLC3SEL3        equ	3881	;# 
  5446     0F2A                     CLC3GLS0        equ	3882	;# 
  5447     0F2B                     CLC3GLS1        equ	3883	;# 
  5448     0F2C                     CLC3GLS2        equ	3884	;# 
  5449     0F2D                     CLC3GLS3        equ	3885	;# 
  5450     0F2E                     CLC4CON         equ	3886	;# 
  5451     0F2F                     CLC4POL         equ	3887	;# 
  5452     0F30                     CLC4SEL0        equ	3888	;# 
  5453     0F31                     CLC4SEL1        equ	3889	;# 
  5454     0F32                     CLC4SEL2        equ	3890	;# 
  5455     0F33                     CLC4SEL3        equ	3891	;# 
  5456     0F34                     CLC4GLS0        equ	3892	;# 
  5457     0F35                     CLC4GLS1        equ	3893	;# 
  5458     0F36                     CLC4GLS2        equ	3894	;# 
  5459     0F37                     CLC4GLS3        equ	3895	;# 
  5460     0FE4                     STATUS_SHAD     equ	4068	;# 
  5461     0FE5                     WREG_SHAD       equ	4069	;# 
  5462     0FE6                     BSR_SHAD        equ	4070	;# 
  5463     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5464     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5465     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5466     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5467     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5468     0FED                     STKPTR          equ	4077	;# 
  5469     0FEE                     TOSL            equ	4078	;# 
  5470     0FEF                     TOSH            equ	4079	;# 
  5471     0000                     INDF0           equ	0	;# 
  5472     0001                     INDF1           equ	1	;# 
  5473     0002                     PCL             equ	2	;# 
  5474     0003                     STATUS          equ	3	;# 
  5475     0004                     FSR0L           equ	4	;# 
  5476     0005                     FSR0H           equ	5	;# 
  5477     0006                     FSR1L           equ	6	;# 
  5478     0007                     FSR1H           equ	7	;# 
  5479     0008                     BSR             equ	8	;# 
  5480     0009                     WREG            equ	9	;# 
  5481     000A                     PCLATH          equ	10	;# 
  5482     000B                     INTCON          equ	11	;# 
  5483     000C                     PORTA           equ	12	;# 
  5484     000D                     PORTB           equ	13	;# 
  5485     000E                     PORTC           equ	14	;# 
  5486     0010                     PIR0            equ	16	;# 
  5487     0011                     PIR1            equ	17	;# 
  5488     0012                     PIR2            equ	18	;# 
  5489     0013                     PIR3            equ	19	;# 
  5490     0014                     PIR4            equ	20	;# 
  5491     0015                     TMR0L           equ	21	;# 
  5492     0015                     TMR0            equ	21	;# 
  5493     0016                     TMR0H           equ	22	;# 
  5494     0016                     PR0             equ	22	;# 
  5495     0017                     T0CON0          equ	23	;# 
  5496     0018                     T0CON1          equ	24	;# 
  5497     0019                     TMR1            equ	25	;# 
  5498     0019                     TMR1L           equ	25	;# 
  5499     001A                     TMR1H           equ	26	;# 
  5500     001B                     T1CON           equ	27	;# 
  5501     001C                     T1GCON          equ	28	;# 
  5502     001D                     TMR2            equ	29	;# 
  5503     001E                     PR2             equ	30	;# 
  5504     001F                     T2CON           equ	31	;# 
  5505     008C                     TRISA           equ	140	;# 
  5506     008D                     TRISB           equ	141	;# 
  5507     008E                     TRISC           equ	142	;# 
  5508     0090                     PIE0            equ	144	;# 
  5509     0091                     PIE1            equ	145	;# 
  5510     0092                     PIE2            equ	146	;# 
  5511     0093                     PIE3            equ	147	;# 
  5512     0094                     PIE4            equ	148	;# 
  5513     0097                     WDTCON          equ	151	;# 
  5514     009B                     ADRES           equ	155	;# 
  5515     009B                     ADRESL          equ	155	;# 
  5516     009C                     ADRESH          equ	156	;# 
  5517     009D                     ADCON0          equ	157	;# 
  5518     009E                     ADCON1          equ	158	;# 
  5519     009F                     ADACT           equ	159	;# 
  5520     010C                     LATA            equ	268	;# 
  5521     010D                     LATB            equ	269	;# 
  5522     010E                     LATC            equ	270	;# 
  5523     0111                     CM1CON0         equ	273	;# 
  5524     0112                     CM1CON1         equ	274	;# 
  5525     0113                     CM2CON0         equ	275	;# 
  5526     0114                     CM2CON1         equ	276	;# 
  5527     0115                     CMOUT           equ	277	;# 
  5528     0116                     BORCON          equ	278	;# 
  5529     0117                     FVRCON          equ	279	;# 
  5530     0118                     DACCON0         equ	280	;# 
  5531     0119                     DACCON1         equ	281	;# 
  5532     018C                     ANSELA          equ	396	;# 
  5533     018D                     ANSELB          equ	397	;# 
  5534     018E                     ANSELC          equ	398	;# 
  5535     0197                     VREGCON         equ	407	;# 
  5536     0199                     RC1REG          equ	409	;# 
  5537     0199                     RCREG           equ	409	;# 
  5538     0199                     RCREG1          equ	409	;# 
  5539     019A                     TX1REG          equ	410	;# 
  5540     019A                     TXREG1          equ	410	;# 
  5541     019A                     TXREG           equ	410	;# 
  5542     019B                     SP1BRG          equ	411	;# 
  5543     019B                     SPBRG           equ	411	;# 
  5544     019B                     SP1BRGL         equ	411	;# 
  5545     019B                     SPBRG1          equ	411	;# 
  5546     019B                     SPBRGL          equ	411	;# 
  5547     019C                     SP1BRGH         equ	412	;# 
  5548     019C                     SPBRGH          equ	412	;# 
  5549     019C                     SPBRGH1         equ	412	;# 
  5550     019D                     RC1STA          equ	413	;# 
  5551     019D                     RCSTA1          equ	413	;# 
  5552     019D                     RCSTA           equ	413	;# 
  5553     019E                     TX1STA          equ	414	;# 
  5554     019E                     TXSTA1          equ	414	;# 
  5555     019E                     TXSTA           equ	414	;# 
  5556     019F                     BAUD1CON        equ	415	;# 
  5557     019F                     BAUDCON1        equ	415	;# 
  5558     019F                     BAUDCTL1        equ	415	;# 
  5559     019F                     BAUDCON         equ	415	;# 
  5560     019F                     BAUDCTL         equ	415	;# 
  5561     020C                     WPUA            equ	524	;# 
  5562     020D                     WPUB            equ	525	;# 
  5563     020E                     WPUC            equ	526	;# 
  5564     0211                     SSP1BUF         equ	529	;# 
  5565     0211                     SSPBUF          equ	529	;# 
  5566     0212                     SSP1ADD         equ	530	;# 
  5567     0212                     SSPADD          equ	530	;# 
  5568     0213                     SSP1MSK         equ	531	;# 
  5569     0213                     SSPMSK          equ	531	;# 
  5570     0214                     SSP1STAT        equ	532	;# 
  5571     0214                     SSPSTAT         equ	532	;# 
  5572     0215                     SSP1CON1        equ	533	;# 
  5573     0215                     SSPCON          equ	533	;# 
  5574     0215                     SSPCON1         equ	533	;# 
  5575     0215                     SSP1CON         equ	533	;# 
  5576     0216                     SSP1CON2        equ	534	;# 
  5577     0216                     SSPCON2         equ	534	;# 
  5578     0217                     SSP1CON3        equ	535	;# 
  5579     0217                     SSPCON3         equ	535	;# 
  5580     0219                     SSP2BUF         equ	537	;# 
  5581     021A                     SSP2ADD         equ	538	;# 
  5582     021B                     SSP2MSK         equ	539	;# 
  5583     021C                     SSP2STAT        equ	540	;# 
  5584     021D                     SSP2CON1        equ	541	;# 
  5585     021D                     SSP2CON         equ	541	;# 
  5586     021E                     SSP2CON2        equ	542	;# 
  5587     021F                     SSP2CON3        equ	543	;# 
  5588     028C                     ODCONA          equ	652	;# 
  5589     028D                     ODCONB          equ	653	;# 
  5590     028E                     ODCONC          equ	654	;# 
  5591     0291                     CCPR1           equ	657	;# 
  5592     0291                     CCPR1L          equ	657	;# 
  5593     0292                     CCPR1H          equ	658	;# 
  5594     0293                     CCP1CON         equ	659	;# 
  5595     0294                     CCP1CAP         equ	660	;# 
  5596     0295                     CCPR2           equ	661	;# 
  5597     0295                     CCPR2L          equ	661	;# 
  5598     0296                     CCPR2H          equ	662	;# 
  5599     0297                     CCP2CON         equ	663	;# 
  5600     0298                     CCP2CAP         equ	664	;# 
  5601     029F                     CCPTMRS         equ	671	;# 
  5602     030C                     SLRCONA         equ	780	;# 
  5603     030D                     SLRCONB         equ	781	;# 
  5604     030E                     SLRCONC         equ	782	;# 
  5605     0311                     CCPR3           equ	785	;# 
  5606     0311                     CCPR3L          equ	785	;# 
  5607     0312                     CCPR3H          equ	786	;# 
  5608     0313                     CCP3CON         equ	787	;# 
  5609     0314                     CCP3CAP         equ	788	;# 
  5610     0315                     CCPR4           equ	789	;# 
  5611     0315                     CCPR4L          equ	789	;# 
  5612     0316                     CCPR4H          equ	790	;# 
  5613     0317                     CCP4CON         equ	791	;# 
  5614     0318                     CCP4CAP         equ	792	;# 
  5615     038C                     INLVLA          equ	908	;# 
  5616     038D                     INLVLB          equ	909	;# 
  5617     038E                     INLVLC          equ	910	;# 
  5618     0391                     IOCAP           equ	913	;# 
  5619     0392                     IOCAN           equ	914	;# 
  5620     0393                     IOCAF           equ	915	;# 
  5621     0394                     IOCBP           equ	916	;# 
  5622     0395                     IOCBN           equ	917	;# 
  5623     0396                     IOCBF           equ	918	;# 
  5624     0397                     IOCCP           equ	919	;# 
  5625     0398                     IOCCN           equ	920	;# 
  5626     0399                     IOCCF           equ	921	;# 
  5627     039A                     CLKRCON         equ	922	;# 
  5628     039C                     MDCON           equ	924	;# 
  5629     039D                     MDSRC           equ	925	;# 
  5630     039E                     MDCARH          equ	926	;# 
  5631     039F                     MDCARL          equ	927	;# 
  5632     0411                     TMR3            equ	1041	;# 
  5633     0411                     TMR3L           equ	1041	;# 
  5634     0412                     TMR3H           equ	1042	;# 
  5635     0413                     T3CON           equ	1043	;# 
  5636     0414                     T3GCON          equ	1044	;# 
  5637     0415                     TMR4            equ	1045	;# 
  5638     0416                     PR4             equ	1046	;# 
  5639     0417                     T4CON           equ	1047	;# 
  5640     0418                     TMR5            equ	1048	;# 
  5641     0418                     TMR5L           equ	1048	;# 
  5642     0419                     TMR5H           equ	1049	;# 
  5643     041A                     T5CON           equ	1050	;# 
  5644     041B                     T5GCON          equ	1051	;# 
  5645     041C                     TMR6            equ	1052	;# 
  5646     041D                     PR6             equ	1053	;# 
  5647     041E                     T6CON           equ	1054	;# 
  5648     041F                     CCDCON          equ	1055	;# 
  5649     0498                     NCO1ACC         equ	1176	;# 
  5650     0498                     NCO1ACCL        equ	1176	;# 
  5651     0499                     NCO1ACCH        equ	1177	;# 
  5652     049A                     NCO1ACCU        equ	1178	;# 
  5653     049B                     NCO1INC         equ	1179	;# 
  5654     049B                     NCO1INCL        equ	1179	;# 
  5655     049C                     NCO1INCH        equ	1180	;# 
  5656     049D                     NCO1INCU        equ	1181	;# 
  5657     049E                     NCO1CON         equ	1182	;# 
  5658     049F                     NCO1CLK         equ	1183	;# 
  5659     0617                     PWM5DCL         equ	1559	;# 
  5660     0618                     PWM5DCH         equ	1560	;# 
  5661     0619                     PWM5CON         equ	1561	;# 
  5662     0619                     PWM5CON0        equ	1561	;# 
  5663     061A                     PWM6DCL         equ	1562	;# 
  5664     061B                     PWM6DCH         equ	1563	;# 
  5665     061C                     PWM6CON         equ	1564	;# 
  5666     061C                     PWM6CON0        equ	1564	;# 
  5667     061F                     PWMTMRS         equ	1567	;# 
  5668     0691                     CWG1CLKCON      equ	1681	;# 
  5669     0692                     CWG1DAT         equ	1682	;# 
  5670     0693                     CWG1DBR         equ	1683	;# 
  5671     0694                     CWG1DBF         equ	1684	;# 
  5672     0695                     CWG1CON0        equ	1685	;# 
  5673     0696                     CWG1CON1        equ	1686	;# 
  5674     0697                     CWG1AS0         equ	1687	;# 
  5675     0698                     CWG1AS1         equ	1688	;# 
  5676     0699                     CWG1STR         equ	1689	;# 
  5677     0711                     CWG2CLKCON      equ	1809	;# 
  5678     0712                     CWG2DAT         equ	1810	;# 
  5679     0713                     CWG2DBR         equ	1811	;# 
  5680     0714                     CWG2DBF         equ	1812	;# 
  5681     0715                     CWG2CON0        equ	1813	;# 
  5682     0716                     CWG2CON1        equ	1814	;# 
  5683     0717                     CWG2AS0         equ	1815	;# 
  5684     0718                     CWG2AS1         equ	1816	;# 
  5685     0719                     CWG2STR         equ	1817	;# 
  5686     0891                     NVMADR          equ	2193	;# 
  5687     0891                     EEADR           equ	2193	;# 
  5688     0891                     PMADR           equ	2193	;# 
  5689     0891                     NVMADRL         equ	2193	;# 
  5690     0891                     EEADRL          equ	2193	;# 
  5691     0891                     PMADRL          equ	2193	;# 
  5692     0892                     NVMADRH         equ	2194	;# 
  5693     0892                     EEADRH          equ	2194	;# 
  5694     0892                     PMADRH          equ	2194	;# 
  5695     0893                     NVMDAT          equ	2195	;# 
  5696     0893                     EEDAT           equ	2195	;# 
  5697     0893                     PMDAT           equ	2195	;# 
  5698     0893                     NVMDATL         equ	2195	;# 
  5699     0893                     EEDATL          equ	2195	;# 
  5700     0893                     PMDATL          equ	2195	;# 
  5701     0894                     NVMDATH         equ	2196	;# 
  5702     0894                     EEDATH          equ	2196	;# 
  5703     0894                     PMDATH          equ	2196	;# 
  5704     0895                     NVMCON1         equ	2197	;# 
  5705     0895                     EECON1          equ	2197	;# 
  5706     0895                     PMCON1          equ	2197	;# 
  5707     0896                     NVMCON2         equ	2198	;# 
  5708     0896                     EECON2          equ	2198	;# 
  5709     0896                     PMCON2          equ	2198	;# 
  5710     089B                     PCON0           equ	2203	;# 
  5711     0911                     PMD0            equ	2321	;# 
  5712     0912                     PMD1            equ	2322	;# 
  5713     0913                     PMD2            equ	2323	;# 
  5714     0914                     PMD3            equ	2324	;# 
  5715     0915                     PMD4            equ	2325	;# 
  5716     0916                     PMD5            equ	2326	;# 
  5717     0918                     CPUDOZE         equ	2328	;# 
  5718     0919                     OSCCON1         equ	2329	;# 
  5719     091A                     OSCCON2         equ	2330	;# 
  5720     091B                     OSCCON3         equ	2331	;# 
  5721     091C                     OSCSTAT1        equ	2332	;# 
  5722     091D                     OSCEN           equ	2333	;# 
  5723     091E                     OSCTUNE         equ	2334	;# 
  5724     091F                     OSCFRQ          equ	2335	;# 
  5725     0E0F                     PPSLOCK         equ	3599	;# 
  5726     0E10                     INTPPS          equ	3600	;# 
  5727     0E11                     T0CKIPPS        equ	3601	;# 
  5728     0E12                     T1CKIPPS        equ	3602	;# 
  5729     0E13                     T1GPPS          equ	3603	;# 
  5730     0E14                     CCP1PPS         equ	3604	;# 
  5731     0E15                     CCP2PPS         equ	3605	;# 
  5732     0E16                     CCP3PPS         equ	3606	;# 
  5733     0E17                     CCP4PPS         equ	3607	;# 
  5734     0E18                     CWG1PPS         equ	3608	;# 
  5735     0E19                     CWG2PPS         equ	3609	;# 
  5736     0E1A                     MDCIN1PPS       equ	3610	;# 
  5737     0E1B                     MDCIN2PPS       equ	3611	;# 
  5738     0E1C                     MDMINPPS        equ	3612	;# 
  5739     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5740     0E1E                     SSP2DATPPS      equ	3614	;# 
  5741     0E1F                     SSP2SSPPS       equ	3615	;# 
  5742     0E20                     SSP1CLKPPS      equ	3616	;# 
  5743     0E21                     SSP1DATPPS      equ	3617	;# 
  5744     0E22                     SSP1SSPPS       equ	3618	;# 
  5745     0E24                     RXPPS           equ	3620	;# 
  5746     0E25                     TXPPS           equ	3621	;# 
  5747     0E28                     CLCIN0PPS       equ	3624	;# 
  5748     0E29                     CLCIN1PPS       equ	3625	;# 
  5749     0E2A                     CLCIN2PPS       equ	3626	;# 
  5750     0E2B                     CLCIN3PPS       equ	3627	;# 
  5751     0E2C                     T3CKIPPS        equ	3628	;# 
  5752     0E2D                     T3GPPS          equ	3629	;# 
  5753     0E2E                     T5CKIPPS        equ	3630	;# 
  5754     0E2F                     T5GPPS          equ	3631	;# 
  5755     0E90                     RA0PPS          equ	3728	;# 
  5756     0E91                     RA1PPS          equ	3729	;# 
  5757     0E92                     RA2PPS          equ	3730	;# 
  5758     0E94                     RA4PPS          equ	3732	;# 
  5759     0E95                     RA5PPS          equ	3733	;# 
  5760     0E9C                     RB4PPS          equ	3740	;# 
  5761     0E9D                     RB5PPS          equ	3741	;# 
  5762     0E9E                     RB6PPS          equ	3742	;# 
  5763     0E9F                     RB7PPS          equ	3743	;# 
  5764     0EA0                     RC0PPS          equ	3744	;# 
  5765     0EA1                     RC1PPS          equ	3745	;# 
  5766     0EA2                     RC2PPS          equ	3746	;# 
  5767     0EA3                     RC3PPS          equ	3747	;# 
  5768     0EA4                     RC4PPS          equ	3748	;# 
  5769     0EA5                     RC5PPS          equ	3749	;# 
  5770     0EA6                     RC6PPS          equ	3750	;# 
  5771     0EA7                     RC7PPS          equ	3751	;# 
  5772     0F0F                     CLCDATA         equ	3855	;# 
  5773     0F10                     CLC1CON         equ	3856	;# 
  5774     0F11                     CLC1POL         equ	3857	;# 
  5775     0F12                     CLC1SEL0        equ	3858	;# 
  5776     0F13                     CLC1SEL1        equ	3859	;# 
  5777     0F14                     CLC1SEL2        equ	3860	;# 
  5778     0F15                     CLC1SEL3        equ	3861	;# 
  5779     0F16                     CLC1GLS0        equ	3862	;# 
  5780     0F17                     CLC1GLS1        equ	3863	;# 
  5781     0F18                     CLC1GLS2        equ	3864	;# 
  5782     0F19                     CLC1GLS3        equ	3865	;# 
  5783     0F1A                     CLC2CON         equ	3866	;# 
  5784     0F1B                     CLC2POL         equ	3867	;# 
  5785     0F1C                     CLC2SEL0        equ	3868	;# 
  5786     0F1D                     CLC2SEL1        equ	3869	;# 
  5787     0F1E                     CLC2SEL2        equ	3870	;# 
  5788     0F1F                     CLC2SEL3        equ	3871	;# 
  5789     0F20                     CLC2GLS0        equ	3872	;# 
  5790     0F21                     CLC2GLS1        equ	3873	;# 
  5791     0F22                     CLC2GLS2        equ	3874	;# 
  5792     0F23                     CLC2GLS3        equ	3875	;# 
  5793     0F24                     CLC3CON         equ	3876	;# 
  5794     0F25                     CLC3POL         equ	3877	;# 
  5795     0F26                     CLC3SEL0        equ	3878	;# 
  5796     0F27                     CLC3SEL1        equ	3879	;# 
  5797     0F28                     CLC3SEL2        equ	3880	;# 
  5798     0F29                     CLC3SEL3        equ	3881	;# 
  5799     0F2A                     CLC3GLS0        equ	3882	;# 
  5800     0F2B                     CLC3GLS1        equ	3883	;# 
  5801     0F2C                     CLC3GLS2        equ	3884	;# 
  5802     0F2D                     CLC3GLS3        equ	3885	;# 
  5803     0F2E                     CLC4CON         equ	3886	;# 
  5804     0F2F                     CLC4POL         equ	3887	;# 
  5805     0F30                     CLC4SEL0        equ	3888	;# 
  5806     0F31                     CLC4SEL1        equ	3889	;# 
  5807     0F32                     CLC4SEL2        equ	3890	;# 
  5808     0F33                     CLC4SEL3        equ	3891	;# 
  5809     0F34                     CLC4GLS0        equ	3892	;# 
  5810     0F35                     CLC4GLS1        equ	3893	;# 
  5811     0F36                     CLC4GLS2        equ	3894	;# 
  5812     0F37                     CLC4GLS3        equ	3895	;# 
  5813     0FE4                     STATUS_SHAD     equ	4068	;# 
  5814     0FE5                     WREG_SHAD       equ	4069	;# 
  5815     0FE6                     BSR_SHAD        equ	4070	;# 
  5816     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5817     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5818     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5819     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5820     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5821     0FED                     STKPTR          equ	4077	;# 
  5822     0FEE                     TOSL            equ	4078	;# 
  5823     0FEF                     TOSH            equ	4079	;# 
  5824     0000                     INDF0           equ	0	;# 
  5825     0001                     INDF1           equ	1	;# 
  5826     0002                     PCL             equ	2	;# 
  5827     0003                     STATUS          equ	3	;# 
  5828     0004                     FSR0L           equ	4	;# 
  5829     0005                     FSR0H           equ	5	;# 
  5830     0006                     FSR1L           equ	6	;# 
  5831     0007                     FSR1H           equ	7	;# 
  5832     0008                     BSR             equ	8	;# 
  5833     0009                     WREG            equ	9	;# 
  5834     000A                     PCLATH          equ	10	;# 
  5835     000B                     INTCON          equ	11	;# 
  5836     000C                     PORTA           equ	12	;# 
  5837     000D                     PORTB           equ	13	;# 
  5838     000E                     PORTC           equ	14	;# 
  5839     0010                     PIR0            equ	16	;# 
  5840     0011                     PIR1            equ	17	;# 
  5841     0012                     PIR2            equ	18	;# 
  5842     0013                     PIR3            equ	19	;# 
  5843     0014                     PIR4            equ	20	;# 
  5844     0015                     TMR0L           equ	21	;# 
  5845     0015                     TMR0            equ	21	;# 
  5846     0016                     TMR0H           equ	22	;# 
  5847     0016                     PR0             equ	22	;# 
  5848     0017                     T0CON0          equ	23	;# 
  5849     0018                     T0CON1          equ	24	;# 
  5850     0019                     TMR1            equ	25	;# 
  5851     0019                     TMR1L           equ	25	;# 
  5852     001A                     TMR1H           equ	26	;# 
  5853     001B                     T1CON           equ	27	;# 
  5854     001C                     T1GCON          equ	28	;# 
  5855     001D                     TMR2            equ	29	;# 
  5856     001E                     PR2             equ	30	;# 
  5857     001F                     T2CON           equ	31	;# 
  5858     008C                     TRISA           equ	140	;# 
  5859     008D                     TRISB           equ	141	;# 
  5860     008E                     TRISC           equ	142	;# 
  5861     0090                     PIE0            equ	144	;# 
  5862     0091                     PIE1            equ	145	;# 
  5863     0092                     PIE2            equ	146	;# 
  5864     0093                     PIE3            equ	147	;# 
  5865     0094                     PIE4            equ	148	;# 
  5866     0097                     WDTCON          equ	151	;# 
  5867     009B                     ADRES           equ	155	;# 
  5868     009B                     ADRESL          equ	155	;# 
  5869     009C                     ADRESH          equ	156	;# 
  5870     009D                     ADCON0          equ	157	;# 
  5871     009E                     ADCON1          equ	158	;# 
  5872     009F                     ADACT           equ	159	;# 
  5873     010C                     LATA            equ	268	;# 
  5874     010D                     LATB            equ	269	;# 
  5875     010E                     LATC            equ	270	;# 
  5876     0111                     CM1CON0         equ	273	;# 
  5877     0112                     CM1CON1         equ	274	;# 
  5878     0113                     CM2CON0         equ	275	;# 
  5879     0114                     CM2CON1         equ	276	;# 
  5880     0115                     CMOUT           equ	277	;# 
  5881     0116                     BORCON          equ	278	;# 
  5882     0117                     FVRCON          equ	279	;# 
  5883     0118                     DACCON0         equ	280	;# 
  5884     0119                     DACCON1         equ	281	;# 
  5885     018C                     ANSELA          equ	396	;# 
  5886     018D                     ANSELB          equ	397	;# 
  5887     018E                     ANSELC          equ	398	;# 
  5888     0197                     VREGCON         equ	407	;# 
  5889     0199                     RC1REG          equ	409	;# 
  5890     0199                     RCREG           equ	409	;# 
  5891     0199                     RCREG1          equ	409	;# 
  5892     019A                     TX1REG          equ	410	;# 
  5893     019A                     TXREG1          equ	410	;# 
  5894     019A                     TXREG           equ	410	;# 
  5895     019B                     SP1BRG          equ	411	;# 
  5896     019B                     SPBRG           equ	411	;# 
  5897     019B                     SP1BRGL         equ	411	;# 
  5898     019B                     SPBRG1          equ	411	;# 
  5899     019B                     SPBRGL          equ	411	;# 
  5900     019C                     SP1BRGH         equ	412	;# 
  5901     019C                     SPBRGH          equ	412	;# 
  5902     019C                     SPBRGH1         equ	412	;# 
  5903     019D                     RC1STA          equ	413	;# 
  5904     019D                     RCSTA1          equ	413	;# 
  5905     019D                     RCSTA           equ	413	;# 
  5906     019E                     TX1STA          equ	414	;# 
  5907     019E                     TXSTA1          equ	414	;# 
  5908     019E                     TXSTA           equ	414	;# 
  5909     019F                     BAUD1CON        equ	415	;# 
  5910     019F                     BAUDCON1        equ	415	;# 
  5911     019F                     BAUDCTL1        equ	415	;# 
  5912     019F                     BAUDCON         equ	415	;# 
  5913     019F                     BAUDCTL         equ	415	;# 
  5914     020C                     WPUA            equ	524	;# 
  5915     020D                     WPUB            equ	525	;# 
  5916     020E                     WPUC            equ	526	;# 
  5917     0211                     SSP1BUF         equ	529	;# 
  5918     0211                     SSPBUF          equ	529	;# 
  5919     0212                     SSP1ADD         equ	530	;# 
  5920     0212                     SSPADD          equ	530	;# 
  5921     0213                     SSP1MSK         equ	531	;# 
  5922     0213                     SSPMSK          equ	531	;# 
  5923     0214                     SSP1STAT        equ	532	;# 
  5924     0214                     SSPSTAT         equ	532	;# 
  5925     0215                     SSP1CON1        equ	533	;# 
  5926     0215                     SSPCON          equ	533	;# 
  5927     0215                     SSPCON1         equ	533	;# 
  5928     0215                     SSP1CON         equ	533	;# 
  5929     0216                     SSP1CON2        equ	534	;# 
  5930     0216                     SSPCON2         equ	534	;# 
  5931     0217                     SSP1CON3        equ	535	;# 
  5932     0217                     SSPCON3         equ	535	;# 
  5933     0219                     SSP2BUF         equ	537	;# 
  5934     021A                     SSP2ADD         equ	538	;# 
  5935     021B                     SSP2MSK         equ	539	;# 
  5936     021C                     SSP2STAT        equ	540	;# 
  5937     021D                     SSP2CON1        equ	541	;# 
  5938     021D                     SSP2CON         equ	541	;# 
  5939     021E                     SSP2CON2        equ	542	;# 
  5940     021F                     SSP2CON3        equ	543	;# 
  5941     028C                     ODCONA          equ	652	;# 
  5942     028D                     ODCONB          equ	653	;# 
  5943     028E                     ODCONC          equ	654	;# 
  5944     0291                     CCPR1           equ	657	;# 
  5945     0291                     CCPR1L          equ	657	;# 
  5946     0292                     CCPR1H          equ	658	;# 
  5947     0293                     CCP1CON         equ	659	;# 
  5948     0294                     CCP1CAP         equ	660	;# 
  5949     0295                     CCPR2           equ	661	;# 
  5950     0295                     CCPR2L          equ	661	;# 
  5951     0296                     CCPR2H          equ	662	;# 
  5952     0297                     CCP2CON         equ	663	;# 
  5953     0298                     CCP2CAP         equ	664	;# 
  5954     029F                     CCPTMRS         equ	671	;# 
  5955     030C                     SLRCONA         equ	780	;# 
  5956     030D                     SLRCONB         equ	781	;# 
  5957     030E                     SLRCONC         equ	782	;# 
  5958     0311                     CCPR3           equ	785	;# 
  5959     0311                     CCPR3L          equ	785	;# 
  5960     0312                     CCPR3H          equ	786	;# 
  5961     0313                     CCP3CON         equ	787	;# 
  5962     0314                     CCP3CAP         equ	788	;# 
  5963     0315                     CCPR4           equ	789	;# 
  5964     0315                     CCPR4L          equ	789	;# 
  5965     0316                     CCPR4H          equ	790	;# 
  5966     0317                     CCP4CON         equ	791	;# 
  5967     0318                     CCP4CAP         equ	792	;# 
  5968     038C                     INLVLA          equ	908	;# 
  5969     038D                     INLVLB          equ	909	;# 
  5970     038E                     INLVLC          equ	910	;# 
  5971     0391                     IOCAP           equ	913	;# 
  5972     0392                     IOCAN           equ	914	;# 
  5973     0393                     IOCAF           equ	915	;# 
  5974     0394                     IOCBP           equ	916	;# 
  5975     0395                     IOCBN           equ	917	;# 
  5976     0396                     IOCBF           equ	918	;# 
  5977     0397                     IOCCP           equ	919	;# 
  5978     0398                     IOCCN           equ	920	;# 
  5979     0399                     IOCCF           equ	921	;# 
  5980     039A                     CLKRCON         equ	922	;# 
  5981     039C                     MDCON           equ	924	;# 
  5982     039D                     MDSRC           equ	925	;# 
  5983     039E                     MDCARH          equ	926	;# 
  5984     039F                     MDCARL          equ	927	;# 
  5985     0411                     TMR3            equ	1041	;# 
  5986     0411                     TMR3L           equ	1041	;# 
  5987     0412                     TMR3H           equ	1042	;# 
  5988     0413                     T3CON           equ	1043	;# 
  5989     0414                     T3GCON          equ	1044	;# 
  5990     0415                     TMR4            equ	1045	;# 
  5991     0416                     PR4             equ	1046	;# 
  5992     0417                     T4CON           equ	1047	;# 
  5993     0418                     TMR5            equ	1048	;# 
  5994     0418                     TMR5L           equ	1048	;# 
  5995     0419                     TMR5H           equ	1049	;# 
  5996     041A                     T5CON           equ	1050	;# 
  5997     041B                     T5GCON          equ	1051	;# 
  5998     041C                     TMR6            equ	1052	;# 
  5999     041D                     PR6             equ	1053	;# 
  6000     041E                     T6CON           equ	1054	;# 
  6001     041F                     CCDCON          equ	1055	;# 
  6002     0498                     NCO1ACC         equ	1176	;# 
  6003     0498                     NCO1ACCL        equ	1176	;# 
  6004     0499                     NCO1ACCH        equ	1177	;# 
  6005     049A                     NCO1ACCU        equ	1178	;# 
  6006     049B                     NCO1INC         equ	1179	;# 
  6007     049B                     NCO1INCL        equ	1179	;# 
  6008     049C                     NCO1INCH        equ	1180	;# 
  6009     049D                     NCO1INCU        equ	1181	;# 
  6010     049E                     NCO1CON         equ	1182	;# 
  6011     049F                     NCO1CLK         equ	1183	;# 
  6012     0617                     PWM5DCL         equ	1559	;# 
  6013     0618                     PWM5DCH         equ	1560	;# 
  6014     0619                     PWM5CON         equ	1561	;# 
  6015     0619                     PWM5CON0        equ	1561	;# 
  6016     061A                     PWM6DCL         equ	1562	;# 
  6017     061B                     PWM6DCH         equ	1563	;# 
  6018     061C                     PWM6CON         equ	1564	;# 
  6019     061C                     PWM6CON0        equ	1564	;# 
  6020     061F                     PWMTMRS         equ	1567	;# 
  6021     0691                     CWG1CLKCON      equ	1681	;# 
  6022     0692                     CWG1DAT         equ	1682	;# 
  6023     0693                     CWG1DBR         equ	1683	;# 
  6024     0694                     CWG1DBF         equ	1684	;# 
  6025     0695                     CWG1CON0        equ	1685	;# 
  6026     0696                     CWG1CON1        equ	1686	;# 
  6027     0697                     CWG1AS0         equ	1687	;# 
  6028     0698                     CWG1AS1         equ	1688	;# 
  6029     0699                     CWG1STR         equ	1689	;# 
  6030     0711                     CWG2CLKCON      equ	1809	;# 
  6031     0712                     CWG2DAT         equ	1810	;# 
  6032     0713                     CWG2DBR         equ	1811	;# 
  6033     0714                     CWG2DBF         equ	1812	;# 
  6034     0715                     CWG2CON0        equ	1813	;# 
  6035     0716                     CWG2CON1        equ	1814	;# 
  6036     0717                     CWG2AS0         equ	1815	;# 
  6037     0718                     CWG2AS1         equ	1816	;# 
  6038     0719                     CWG2STR         equ	1817	;# 
  6039     0891                     NVMADR          equ	2193	;# 
  6040     0891                     EEADR           equ	2193	;# 
  6041     0891                     PMADR           equ	2193	;# 
  6042     0891                     NVMADRL         equ	2193	;# 
  6043     0891                     EEADRL          equ	2193	;# 
  6044     0891                     PMADRL          equ	2193	;# 
  6045     0892                     NVMADRH         equ	2194	;# 
  6046     0892                     EEADRH          equ	2194	;# 
  6047     0892                     PMADRH          equ	2194	;# 
  6048     0893                     NVMDAT          equ	2195	;# 
  6049     0893                     EEDAT           equ	2195	;# 
  6050     0893                     PMDAT           equ	2195	;# 
  6051     0893                     NVMDATL         equ	2195	;# 
  6052     0893                     EEDATL          equ	2195	;# 
  6053     0893                     PMDATL          equ	2195	;# 
  6054     0894                     NVMDATH         equ	2196	;# 
  6055     0894                     EEDATH          equ	2196	;# 
  6056     0894                     PMDATH          equ	2196	;# 
  6057     0895                     NVMCON1         equ	2197	;# 
  6058     0895                     EECON1          equ	2197	;# 
  6059     0895                     PMCON1          equ	2197	;# 
  6060     0896                     NVMCON2         equ	2198	;# 
  6061     0896                     EECON2          equ	2198	;# 
  6062     0896                     PMCON2          equ	2198	;# 
  6063     089B                     PCON0           equ	2203	;# 
  6064     0911                     PMD0            equ	2321	;# 
  6065     0912                     PMD1            equ	2322	;# 
  6066     0913                     PMD2            equ	2323	;# 
  6067     0914                     PMD3            equ	2324	;# 
  6068     0915                     PMD4            equ	2325	;# 
  6069     0916                     PMD5            equ	2326	;# 
  6070     0918                     CPUDOZE         equ	2328	;# 
  6071     0919                     OSCCON1         equ	2329	;# 
  6072     091A                     OSCCON2         equ	2330	;# 
  6073     091B                     OSCCON3         equ	2331	;# 
  6074     091C                     OSCSTAT1        equ	2332	;# 
  6075     091D                     OSCEN           equ	2333	;# 
  6076     091E                     OSCTUNE         equ	2334	;# 
  6077     091F                     OSCFRQ          equ	2335	;# 
  6078     0E0F                     PPSLOCK         equ	3599	;# 
  6079     0E10                     INTPPS          equ	3600	;# 
  6080     0E11                     T0CKIPPS        equ	3601	;# 
  6081     0E12                     T1CKIPPS        equ	3602	;# 
  6082     0E13                     T1GPPS          equ	3603	;# 
  6083     0E14                     CCP1PPS         equ	3604	;# 
  6084     0E15                     CCP2PPS         equ	3605	;# 
  6085     0E16                     CCP3PPS         equ	3606	;# 
  6086     0E17                     CCP4PPS         equ	3607	;# 
  6087     0E18                     CWG1PPS         equ	3608	;# 
  6088     0E19                     CWG2PPS         equ	3609	;# 
  6089     0E1A                     MDCIN1PPS       equ	3610	;# 
  6090     0E1B                     MDCIN2PPS       equ	3611	;# 
  6091     0E1C                     MDMINPPS        equ	3612	;# 
  6092     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6093     0E1E                     SSP2DATPPS      equ	3614	;# 
  6094     0E1F                     SSP2SSPPS       equ	3615	;# 
  6095     0E20                     SSP1CLKPPS      equ	3616	;# 
  6096     0E21                     SSP1DATPPS      equ	3617	;# 
  6097     0E22                     SSP1SSPPS       equ	3618	;# 
  6098     0E24                     RXPPS           equ	3620	;# 
  6099     0E25                     TXPPS           equ	3621	;# 
  6100     0E28                     CLCIN0PPS       equ	3624	;# 
  6101     0E29                     CLCIN1PPS       equ	3625	;# 
  6102     0E2A                     CLCIN2PPS       equ	3626	;# 
  6103     0E2B                     CLCIN3PPS       equ	3627	;# 
  6104     0E2C                     T3CKIPPS        equ	3628	;# 
  6105     0E2D                     T3GPPS          equ	3629	;# 
  6106     0E2E                     T5CKIPPS        equ	3630	;# 
  6107     0E2F                     T5GPPS          equ	3631	;# 
  6108     0E90                     RA0PPS          equ	3728	;# 
  6109     0E91                     RA1PPS          equ	3729	;# 
  6110     0E92                     RA2PPS          equ	3730	;# 
  6111     0E94                     RA4PPS          equ	3732	;# 
  6112     0E95                     RA5PPS          equ	3733	;# 
  6113     0E9C                     RB4PPS          equ	3740	;# 
  6114     0E9D                     RB5PPS          equ	3741	;# 
  6115     0E9E                     RB6PPS          equ	3742	;# 
  6116     0E9F                     RB7PPS          equ	3743	;# 
  6117     0EA0                     RC0PPS          equ	3744	;# 
  6118     0EA1                     RC1PPS          equ	3745	;# 
  6119     0EA2                     RC2PPS          equ	3746	;# 
  6120     0EA3                     RC3PPS          equ	3747	;# 
  6121     0EA4                     RC4PPS          equ	3748	;# 
  6122     0EA5                     RC5PPS          equ	3749	;# 
  6123     0EA6                     RC6PPS          equ	3750	;# 
  6124     0EA7                     RC7PPS          equ	3751	;# 
  6125     0F0F                     CLCDATA         equ	3855	;# 
  6126     0F10                     CLC1CON         equ	3856	;# 
  6127     0F11                     CLC1POL         equ	3857	;# 
  6128     0F12                     CLC1SEL0        equ	3858	;# 
  6129     0F13                     CLC1SEL1        equ	3859	;# 
  6130     0F14                     CLC1SEL2        equ	3860	;# 
  6131     0F15                     CLC1SEL3        equ	3861	;# 
  6132     0F16                     CLC1GLS0        equ	3862	;# 
  6133     0F17                     CLC1GLS1        equ	3863	;# 
  6134     0F18                     CLC1GLS2        equ	3864	;# 
  6135     0F19                     CLC1GLS3        equ	3865	;# 
  6136     0F1A                     CLC2CON         equ	3866	;# 
  6137     0F1B                     CLC2POL         equ	3867	;# 
  6138     0F1C                     CLC2SEL0        equ	3868	;# 
  6139     0F1D                     CLC2SEL1        equ	3869	;# 
  6140     0F1E                     CLC2SEL2        equ	3870	;# 
  6141     0F1F                     CLC2SEL3        equ	3871	;# 
  6142     0F20                     CLC2GLS0        equ	3872	;# 
  6143     0F21                     CLC2GLS1        equ	3873	;# 
  6144     0F22                     CLC2GLS2        equ	3874	;# 
  6145     0F23                     CLC2GLS3        equ	3875	;# 
  6146     0F24                     CLC3CON         equ	3876	;# 
  6147     0F25                     CLC3POL         equ	3877	;# 
  6148     0F26                     CLC3SEL0        equ	3878	;# 
  6149     0F27                     CLC3SEL1        equ	3879	;# 
  6150     0F28                     CLC3SEL2        equ	3880	;# 
  6151     0F29                     CLC3SEL3        equ	3881	;# 
  6152     0F2A                     CLC3GLS0        equ	3882	;# 
  6153     0F2B                     CLC3GLS1        equ	3883	;# 
  6154     0F2C                     CLC3GLS2        equ	3884	;# 
  6155     0F2D                     CLC3GLS3        equ	3885	;# 
  6156     0F2E                     CLC4CON         equ	3886	;# 
  6157     0F2F                     CLC4POL         equ	3887	;# 
  6158     0F30                     CLC4SEL0        equ	3888	;# 
  6159     0F31                     CLC4SEL1        equ	3889	;# 
  6160     0F32                     CLC4SEL2        equ	3890	;# 
  6161     0F33                     CLC4SEL3        equ	3891	;# 
  6162     0F34                     CLC4GLS0        equ	3892	;# 
  6163     0F35                     CLC4GLS1        equ	3893	;# 
  6164     0F36                     CLC4GLS2        equ	3894	;# 
  6165     0F37                     CLC4GLS3        equ	3895	;# 
  6166     0FE4                     STATUS_SHAD     equ	4068	;# 
  6167     0FE5                     WREG_SHAD       equ	4069	;# 
  6168     0FE6                     BSR_SHAD        equ	4070	;# 
  6169     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6170     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6171     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6172     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6173     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6174     0FED                     STKPTR          equ	4077	;# 
  6175     0FEE                     TOSL            equ	4078	;# 
  6176     0FEF                     TOSH            equ	4079	;# 
  6177     0000                     INDF0           equ	0	;# 
  6178     0001                     INDF1           equ	1	;# 
  6179     0002                     PCL             equ	2	;# 
  6180     0003                     STATUS          equ	3	;# 
  6181     0004                     FSR0L           equ	4	;# 
  6182     0005                     FSR0H           equ	5	;# 
  6183     0006                     FSR1L           equ	6	;# 
  6184     0007                     FSR1H           equ	7	;# 
  6185     0008                     BSR             equ	8	;# 
  6186     0009                     WREG            equ	9	;# 
  6187     000A                     PCLATH          equ	10	;# 
  6188     000B                     INTCON          equ	11	;# 
  6189     000C                     PORTA           equ	12	;# 
  6190     000D                     PORTB           equ	13	;# 
  6191     000E                     PORTC           equ	14	;# 
  6192     0010                     PIR0            equ	16	;# 
  6193     0011                     PIR1            equ	17	;# 
  6194     0012                     PIR2            equ	18	;# 
  6195     0013                     PIR3            equ	19	;# 
  6196     0014                     PIR4            equ	20	;# 
  6197     0015                     TMR0L           equ	21	;# 
  6198     0015                     TMR0            equ	21	;# 
  6199     0016                     TMR0H           equ	22	;# 
  6200     0016                     PR0             equ	22	;# 
  6201     0017                     T0CON0          equ	23	;# 
  6202     0018                     T0CON1          equ	24	;# 
  6203     0019                     TMR1            equ	25	;# 
  6204     0019                     TMR1L           equ	25	;# 
  6205     001A                     TMR1H           equ	26	;# 
  6206     001B                     T1CON           equ	27	;# 
  6207     001C                     T1GCON          equ	28	;# 
  6208     001D                     TMR2            equ	29	;# 
  6209     001E                     PR2             equ	30	;# 
  6210     001F                     T2CON           equ	31	;# 
  6211     008C                     TRISA           equ	140	;# 
  6212     008D                     TRISB           equ	141	;# 
  6213     008E                     TRISC           equ	142	;# 
  6214     0090                     PIE0            equ	144	;# 
  6215     0091                     PIE1            equ	145	;# 
  6216     0092                     PIE2            equ	146	;# 
  6217     0093                     PIE3            equ	147	;# 
  6218     0094                     PIE4            equ	148	;# 
  6219     0097                     WDTCON          equ	151	;# 
  6220     009B                     ADRES           equ	155	;# 
  6221     009B                     ADRESL          equ	155	;# 
  6222     009C                     ADRESH          equ	156	;# 
  6223     009D                     ADCON0          equ	157	;# 
  6224     009E                     ADCON1          equ	158	;# 
  6225     009F                     ADACT           equ	159	;# 
  6226     010C                     LATA            equ	268	;# 
  6227     010D                     LATB            equ	269	;# 
  6228     010E                     LATC            equ	270	;# 
  6229     0111                     CM1CON0         equ	273	;# 
  6230     0112                     CM1CON1         equ	274	;# 
  6231     0113                     CM2CON0         equ	275	;# 
  6232     0114                     CM2CON1         equ	276	;# 
  6233     0115                     CMOUT           equ	277	;# 
  6234     0116                     BORCON          equ	278	;# 
  6235     0117                     FVRCON          equ	279	;# 
  6236     0118                     DACCON0         equ	280	;# 
  6237     0119                     DACCON1         equ	281	;# 
  6238     018C                     ANSELA          equ	396	;# 
  6239     018D                     ANSELB          equ	397	;# 
  6240     018E                     ANSELC          equ	398	;# 
  6241     0197                     VREGCON         equ	407	;# 
  6242     0199                     RC1REG          equ	409	;# 
  6243     0199                     RCREG           equ	409	;# 
  6244     0199                     RCREG1          equ	409	;# 
  6245     019A                     TX1REG          equ	410	;# 
  6246     019A                     TXREG1          equ	410	;# 
  6247     019A                     TXREG           equ	410	;# 
  6248     019B                     SP1BRG          equ	411	;# 
  6249     019B                     SPBRG           equ	411	;# 
  6250     019B                     SP1BRGL         equ	411	;# 
  6251     019B                     SPBRG1          equ	411	;# 
  6252     019B                     SPBRGL          equ	411	;# 
  6253     019C                     SP1BRGH         equ	412	;# 
  6254     019C                     SPBRGH          equ	412	;# 
  6255     019C                     SPBRGH1         equ	412	;# 
  6256     019D                     RC1STA          equ	413	;# 
  6257     019D                     RCSTA1          equ	413	;# 
  6258     019D                     RCSTA           equ	413	;# 
  6259     019E                     TX1STA          equ	414	;# 
  6260     019E                     TXSTA1          equ	414	;# 
  6261     019E                     TXSTA           equ	414	;# 
  6262     019F                     BAUD1CON        equ	415	;# 
  6263     019F                     BAUDCON1        equ	415	;# 
  6264     019F                     BAUDCTL1        equ	415	;# 
  6265     019F                     BAUDCON         equ	415	;# 
  6266     019F                     BAUDCTL         equ	415	;# 
  6267     020C                     WPUA            equ	524	;# 
  6268     020D                     WPUB            equ	525	;# 
  6269     020E                     WPUC            equ	526	;# 
  6270     0211                     SSP1BUF         equ	529	;# 
  6271     0211                     SSPBUF          equ	529	;# 
  6272     0212                     SSP1ADD         equ	530	;# 
  6273     0212                     SSPADD          equ	530	;# 
  6274     0213                     SSP1MSK         equ	531	;# 
  6275     0213                     SSPMSK          equ	531	;# 
  6276     0214                     SSP1STAT        equ	532	;# 
  6277     0214                     SSPSTAT         equ	532	;# 
  6278     0215                     SSP1CON1        equ	533	;# 
  6279     0215                     SSPCON          equ	533	;# 
  6280     0215                     SSPCON1         equ	533	;# 
  6281     0215                     SSP1CON         equ	533	;# 
  6282     0216                     SSP1CON2        equ	534	;# 
  6283     0216                     SSPCON2         equ	534	;# 
  6284     0217                     SSP1CON3        equ	535	;# 
  6285     0217                     SSPCON3         equ	535	;# 
  6286     0219                     SSP2BUF         equ	537	;# 
  6287     021A                     SSP2ADD         equ	538	;# 
  6288     021B                     SSP2MSK         equ	539	;# 
  6289     021C                     SSP2STAT        equ	540	;# 
  6290     021D                     SSP2CON1        equ	541	;# 
  6291     021D                     SSP2CON         equ	541	;# 
  6292     021E                     SSP2CON2        equ	542	;# 
  6293     021F                     SSP2CON3        equ	543	;# 
  6294     028C                     ODCONA          equ	652	;# 
  6295     028D                     ODCONB          equ	653	;# 
  6296     028E                     ODCONC          equ	654	;# 
  6297     0291                     CCPR1           equ	657	;# 
  6298     0291                     CCPR1L          equ	657	;# 
  6299     0292                     CCPR1H          equ	658	;# 
  6300     0293                     CCP1CON         equ	659	;# 
  6301     0294                     CCP1CAP         equ	660	;# 
  6302     0295                     CCPR2           equ	661	;# 
  6303     0295                     CCPR2L          equ	661	;# 
  6304     0296                     CCPR2H          equ	662	;# 
  6305     0297                     CCP2CON         equ	663	;# 
  6306     0298                     CCP2CAP         equ	664	;# 
  6307     029F                     CCPTMRS         equ	671	;# 
  6308     030C                     SLRCONA         equ	780	;# 
  6309     030D                     SLRCONB         equ	781	;# 
  6310     030E                     SLRCONC         equ	782	;# 
  6311     0311                     CCPR3           equ	785	;# 
  6312     0311                     CCPR3L          equ	785	;# 
  6313     0312                     CCPR3H          equ	786	;# 
  6314     0313                     CCP3CON         equ	787	;# 
  6315     0314                     CCP3CAP         equ	788	;# 
  6316     0315                     CCPR4           equ	789	;# 
  6317     0315                     CCPR4L          equ	789	;# 
  6318     0316                     CCPR4H          equ	790	;# 
  6319     0317                     CCP4CON         equ	791	;# 
  6320     0318                     CCP4CAP         equ	792	;# 
  6321     038C                     INLVLA          equ	908	;# 
  6322     038D                     INLVLB          equ	909	;# 
  6323     038E                     INLVLC          equ	910	;# 
  6324     0391                     IOCAP           equ	913	;# 
  6325     0392                     IOCAN           equ	914	;# 
  6326     0393                     IOCAF           equ	915	;# 
  6327     0394                     IOCBP           equ	916	;# 
  6328     0395                     IOCBN           equ	917	;# 
  6329     0396                     IOCBF           equ	918	;# 
  6330     0397                     IOCCP           equ	919	;# 
  6331     0398                     IOCCN           equ	920	;# 
  6332     0399                     IOCCF           equ	921	;# 
  6333     039A                     CLKRCON         equ	922	;# 
  6334     039C                     MDCON           equ	924	;# 
  6335     039D                     MDSRC           equ	925	;# 
  6336     039E                     MDCARH          equ	926	;# 
  6337     039F                     MDCARL          equ	927	;# 
  6338     0411                     TMR3            equ	1041	;# 
  6339     0411                     TMR3L           equ	1041	;# 
  6340     0412                     TMR3H           equ	1042	;# 
  6341     0413                     T3CON           equ	1043	;# 
  6342     0414                     T3GCON          equ	1044	;# 
  6343     0415                     TMR4            equ	1045	;# 
  6344     0416                     PR4             equ	1046	;# 
  6345     0417                     T4CON           equ	1047	;# 
  6346     0418                     TMR5            equ	1048	;# 
  6347     0418                     TMR5L           equ	1048	;# 
  6348     0419                     TMR5H           equ	1049	;# 
  6349     041A                     T5CON           equ	1050	;# 
  6350     041B                     T5GCON          equ	1051	;# 
  6351     041C                     TMR6            equ	1052	;# 
  6352     041D                     PR6             equ	1053	;# 
  6353     041E                     T6CON           equ	1054	;# 
  6354     041F                     CCDCON          equ	1055	;# 
  6355     0498                     NCO1ACC         equ	1176	;# 
  6356     0498                     NCO1ACCL        equ	1176	;# 
  6357     0499                     NCO1ACCH        equ	1177	;# 
  6358     049A                     NCO1ACCU        equ	1178	;# 
  6359     049B                     NCO1INC         equ	1179	;# 
  6360     049B                     NCO1INCL        equ	1179	;# 
  6361     049C                     NCO1INCH        equ	1180	;# 
  6362     049D                     NCO1INCU        equ	1181	;# 
  6363     049E                     NCO1CON         equ	1182	;# 
  6364     049F                     NCO1CLK         equ	1183	;# 
  6365     0617                     PWM5DCL         equ	1559	;# 
  6366     0618                     PWM5DCH         equ	1560	;# 
  6367     0619                     PWM5CON         equ	1561	;# 
  6368     0619                     PWM5CON0        equ	1561	;# 
  6369     061A                     PWM6DCL         equ	1562	;# 
  6370     061B                     PWM6DCH         equ	1563	;# 
  6371     061C                     PWM6CON         equ	1564	;# 
  6372     061C                     PWM6CON0        equ	1564	;# 
  6373     061F                     PWMTMRS         equ	1567	;# 
  6374     0691                     CWG1CLKCON      equ	1681	;# 
  6375     0692                     CWG1DAT         equ	1682	;# 
  6376     0693                     CWG1DBR         equ	1683	;# 
  6377     0694                     CWG1DBF         equ	1684	;# 
  6378     0695                     CWG1CON0        equ	1685	;# 
  6379     0696                     CWG1CON1        equ	1686	;# 
  6380     0697                     CWG1AS0         equ	1687	;# 
  6381     0698                     CWG1AS1         equ	1688	;# 
  6382     0699                     CWG1STR         equ	1689	;# 
  6383     0711                     CWG2CLKCON      equ	1809	;# 
  6384     0712                     CWG2DAT         equ	1810	;# 
  6385     0713                     CWG2DBR         equ	1811	;# 
  6386     0714                     CWG2DBF         equ	1812	;# 
  6387     0715                     CWG2CON0        equ	1813	;# 
  6388     0716                     CWG2CON1        equ	1814	;# 
  6389     0717                     CWG2AS0         equ	1815	;# 
  6390     0718                     CWG2AS1         equ	1816	;# 
  6391     0719                     CWG2STR         equ	1817	;# 
  6392     0891                     NVMADR          equ	2193	;# 
  6393     0891                     EEADR           equ	2193	;# 
  6394     0891                     PMADR           equ	2193	;# 
  6395     0891                     NVMADRL         equ	2193	;# 
  6396     0891                     EEADRL          equ	2193	;# 
  6397     0891                     PMADRL          equ	2193	;# 
  6398     0892                     NVMADRH         equ	2194	;# 
  6399     0892                     EEADRH          equ	2194	;# 
  6400     0892                     PMADRH          equ	2194	;# 
  6401     0893                     NVMDAT          equ	2195	;# 
  6402     0893                     EEDAT           equ	2195	;# 
  6403     0893                     PMDAT           equ	2195	;# 
  6404     0893                     NVMDATL         equ	2195	;# 
  6405     0893                     EEDATL          equ	2195	;# 
  6406     0893                     PMDATL          equ	2195	;# 
  6407     0894                     NVMDATH         equ	2196	;# 
  6408     0894                     EEDATH          equ	2196	;# 
  6409     0894                     PMDATH          equ	2196	;# 
  6410     0895                     NVMCON1         equ	2197	;# 
  6411     0895                     EECON1          equ	2197	;# 
  6412     0895                     PMCON1          equ	2197	;# 
  6413     0896                     NVMCON2         equ	2198	;# 
  6414     0896                     EECON2          equ	2198	;# 
  6415     0896                     PMCON2          equ	2198	;# 
  6416     089B                     PCON0           equ	2203	;# 
  6417     0911                     PMD0            equ	2321	;# 
  6418     0912                     PMD1            equ	2322	;# 
  6419     0913                     PMD2            equ	2323	;# 
  6420     0914                     PMD3            equ	2324	;# 
  6421     0915                     PMD4            equ	2325	;# 
  6422     0916                     PMD5            equ	2326	;# 
  6423     0918                     CPUDOZE         equ	2328	;# 
  6424     0919                     OSCCON1         equ	2329	;# 
  6425     091A                     OSCCON2         equ	2330	;# 
  6426     091B                     OSCCON3         equ	2331	;# 
  6427     091C                     OSCSTAT1        equ	2332	;# 
  6428     091D                     OSCEN           equ	2333	;# 
  6429     091E                     OSCTUNE         equ	2334	;# 
  6430     091F                     OSCFRQ          equ	2335	;# 
  6431     0E0F                     PPSLOCK         equ	3599	;# 
  6432     0E10                     INTPPS          equ	3600	;# 
  6433     0E11                     T0CKIPPS        equ	3601	;# 
  6434     0E12                     T1CKIPPS        equ	3602	;# 
  6435     0E13                     T1GPPS          equ	3603	;# 
  6436     0E14                     CCP1PPS         equ	3604	;# 
  6437     0E15                     CCP2PPS         equ	3605	;# 
  6438     0E16                     CCP3PPS         equ	3606	;# 
  6439     0E17                     CCP4PPS         equ	3607	;# 
  6440     0E18                     CWG1PPS         equ	3608	;# 
  6441     0E19                     CWG2PPS         equ	3609	;# 
  6442     0E1A                     MDCIN1PPS       equ	3610	;# 
  6443     0E1B                     MDCIN2PPS       equ	3611	;# 
  6444     0E1C                     MDMINPPS        equ	3612	;# 
  6445     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6446     0E1E                     SSP2DATPPS      equ	3614	;# 
  6447     0E1F                     SSP2SSPPS       equ	3615	;# 
  6448     0E20                     SSP1CLKPPS      equ	3616	;# 
  6449     0E21                     SSP1DATPPS      equ	3617	;# 
  6450     0E22                     SSP1SSPPS       equ	3618	;# 
  6451     0E24                     RXPPS           equ	3620	;# 
  6452     0E25                     TXPPS           equ	3621	;# 
  6453     0E28                     CLCIN0PPS       equ	3624	;# 
  6454     0E29                     CLCIN1PPS       equ	3625	;# 
  6455     0E2A                     CLCIN2PPS       equ	3626	;# 
  6456     0E2B                     CLCIN3PPS       equ	3627	;# 
  6457     0E2C                     T3CKIPPS        equ	3628	;# 
  6458     0E2D                     T3GPPS          equ	3629	;# 
  6459     0E2E                     T5CKIPPS        equ	3630	;# 
  6460     0E2F                     T5GPPS          equ	3631	;# 
  6461     0E90                     RA0PPS          equ	3728	;# 
  6462     0E91                     RA1PPS          equ	3729	;# 
  6463     0E92                     RA2PPS          equ	3730	;# 
  6464     0E94                     RA4PPS          equ	3732	;# 
  6465     0E95                     RA5PPS          equ	3733	;# 
  6466     0E9C                     RB4PPS          equ	3740	;# 
  6467     0E9D                     RB5PPS          equ	3741	;# 
  6468     0E9E                     RB6PPS          equ	3742	;# 
  6469     0E9F                     RB7PPS          equ	3743	;# 
  6470     0EA0                     RC0PPS          equ	3744	;# 
  6471     0EA1                     RC1PPS          equ	3745	;# 
  6472     0EA2                     RC2PPS          equ	3746	;# 
  6473     0EA3                     RC3PPS          equ	3747	;# 
  6474     0EA4                     RC4PPS          equ	3748	;# 
  6475     0EA5                     RC5PPS          equ	3749	;# 
  6476     0EA6                     RC6PPS          equ	3750	;# 
  6477     0EA7                     RC7PPS          equ	3751	;# 
  6478     0F0F                     CLCDATA         equ	3855	;# 
  6479     0F10                     CLC1CON         equ	3856	;# 
  6480     0F11                     CLC1POL         equ	3857	;# 
  6481     0F12                     CLC1SEL0        equ	3858	;# 
  6482     0F13                     CLC1SEL1        equ	3859	;# 
  6483     0F14                     CLC1SEL2        equ	3860	;# 
  6484     0F15                     CLC1SEL3        equ	3861	;# 
  6485     0F16                     CLC1GLS0        equ	3862	;# 
  6486     0F17                     CLC1GLS1        equ	3863	;# 
  6487     0F18                     CLC1GLS2        equ	3864	;# 
  6488     0F19                     CLC1GLS3        equ	3865	;# 
  6489     0F1A                     CLC2CON         equ	3866	;# 
  6490     0F1B                     CLC2POL         equ	3867	;# 
  6491     0F1C                     CLC2SEL0        equ	3868	;# 
  6492     0F1D                     CLC2SEL1        equ	3869	;# 
  6493     0F1E                     CLC2SEL2        equ	3870	;# 
  6494     0F1F                     CLC2SEL3        equ	3871	;# 
  6495     0F20                     CLC2GLS0        equ	3872	;# 
  6496     0F21                     CLC2GLS1        equ	3873	;# 
  6497     0F22                     CLC2GLS2        equ	3874	;# 
  6498     0F23                     CLC2GLS3        equ	3875	;# 
  6499     0F24                     CLC3CON         equ	3876	;# 
  6500     0F25                     CLC3POL         equ	3877	;# 
  6501     0F26                     CLC3SEL0        equ	3878	;# 
  6502     0F27                     CLC3SEL1        equ	3879	;# 
  6503     0F28                     CLC3SEL2        equ	3880	;# 
  6504     0F29                     CLC3SEL3        equ	3881	;# 
  6505     0F2A                     CLC3GLS0        equ	3882	;# 
  6506     0F2B                     CLC3GLS1        equ	3883	;# 
  6507     0F2C                     CLC3GLS2        equ	3884	;# 
  6508     0F2D                     CLC3GLS3        equ	3885	;# 
  6509     0F2E                     CLC4CON         equ	3886	;# 
  6510     0F2F                     CLC4POL         equ	3887	;# 
  6511     0F30                     CLC4SEL0        equ	3888	;# 
  6512     0F31                     CLC4SEL1        equ	3889	;# 
  6513     0F32                     CLC4SEL2        equ	3890	;# 
  6514     0F33                     CLC4SEL3        equ	3891	;# 
  6515     0F34                     CLC4GLS0        equ	3892	;# 
  6516     0F35                     CLC4GLS1        equ	3893	;# 
  6517     0F36                     CLC4GLS2        equ	3894	;# 
  6518     0F37                     CLC4GLS3        equ	3895	;# 
  6519     0FE4                     STATUS_SHAD     equ	4068	;# 
  6520     0FE5                     WREG_SHAD       equ	4069	;# 
  6521     0FE6                     BSR_SHAD        equ	4070	;# 
  6522     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6523     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6524     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6525     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6526     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6527     0FED                     STKPTR          equ	4077	;# 
  6528     0FEE                     TOSL            equ	4078	;# 
  6529     0FEF                     TOSH            equ	4079	;# 
  6530                           
  6531 ;; Function _SPI1_Deinitialize is unused but had its address taken
  6532     0000                     _SPI1_Deinitialize equ	0
  6533                           
  6534 ;; Function _SPI1_Close is unused but had its address taken
  6535     0000                     _SPI1_Close     equ	0
  6536                           
  6537 ;; Function _SPI1_BufferExchange is unused but had its address taken
  6538     0000                     _SPI1_BufferExchange equ	0
  6539                           
  6540 ;; Function _SPI1_BufferWrite is unused but had its address taken
  6541     0000                     _SPI1_BufferWrite equ	0
  6542                           
  6543 ;; Function _SPI1_BufferRead is unused but had its address taken
  6544     0000                     _SPI1_BufferRead equ	0
  6545                           
  6546 ;; Function _SPI1_ByteWrite is unused but had its address taken
  6547     0000                     _SPI1_ByteWrite equ	0
  6548                           
  6549 ;; Function _SPI1_ByteRead is unused but had its address taken
  6550     0000                     _SPI1_ByteRead  equ	0
  6551                           
  6552 ;; Function _SPI1_IsRxReady is unused but had its address taken
  6553     0000                     _SPI1_IsRxReady equ	0
  6554                           
  6555 ;; Function _SPI1_IsTxReady is unused but had its address taken
  6556     0000                     _SPI1_IsTxReady equ	0
  6557                           
  6558 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6559     0000                     _INT_DefaultInterruptHandler equ	0
  6560                           
  6561 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6562     0000                     _EUSART_Deinitialize equ	0
  6563                           
  6564 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6565     0000                     _EUSART_TransmitEnable equ	0
  6566                           
  6567 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6568     0000                     _EUSART_TransmitDisable equ	0
  6569                           
  6570 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6571     0000                     _EUSART_AutoBaudSet equ	0
  6572                           
  6573 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6574     0000                     _EUSART_AutoBaudQuery equ	0
  6575                           
  6576 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6577     0000                     _EUSART_IsTxDone equ	0
  6578                           
  6579 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6580     0000                     _EUSART_ErrorGet equ	0
  6581                           
  6582 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  6583     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  6584                           
  6585 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  6586     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  6587                           
  6588                           	psect	idataBANK0
  6589     1D2F                     __pidataBANK0:
  6590                           
  6591                           ;initializer for _increment_setpoint
  6592     1D2F  3423               	retlw	35
  6593     1D30  3400               	retlw	0
  6594                           
  6595                           ;initializer for _mustPrintLogs
  6596     1D31  3401               	retlw	1
  6597                           
  6598                           ;initializer for adcConversionDoneHandler@new_channel
  6599     1D32  3410               	retlw	16
  6600                           
  6601                           	psect	idataBANK2
  6602     1DB5                     __pidataBANK2:
  6603                           
  6604                           ;initializer for _ki
  6605     1DB5  3400               	retlw	0
  6606     1DB6  3400               	retlw	0
  6607     1DB7  3460               	retlw	96
  6608     1DB8  3440               	retlw	64
  6609                           
  6610                           ;initializer for _kp
  6611     1DB9  3466               	retlw	102
  6612     1DBA  3466               	retlw	102
  6613     1DBB  3466               	retlw	102
  6614     1DBC  343F               	retlw	63
  6615                           
  6616                           ;initializer for _setpoint
  6617     1DBD  3496               	retlw	150
  6618     1DBE  3400               	retlw	0
  6619                           
  6620                           	psect	stringtext1
  6621     1800                     __pstringtext1:
  6622     1800                     _UART1:
  6623     1800  3403               	retlw	low _EUSART_Initialize
  6624     1801  3411               	retlw	high _EUSART_Initialize
  6625     1802  3400               	retlw	0
  6626     1803  3400               	retlw	0
  6627     1804  34BE               	retlw	low _EUSART_Read
  6628     1805  341F               	retlw	high _EUSART_Read
  6629     1806  3486               	retlw	low _EUSART_Write
  6630     1807  3410               	retlw	high _EUSART_Write
  6631     1808  34A2               	retlw	low _EUSART_IsRxReady
  6632     1809  341D               	retlw	high _EUSART_IsRxReady
  6633     180A  3499               	retlw	low _EUSART_IsTxReady
  6634     180B  341D               	retlw	high _EUSART_IsTxReady
  6635     180C  3400               	retlw	0
  6636     180D  3400               	retlw	0
  6637     180E  3400               	retlw	0
  6638     180F  3400               	retlw	0
  6639     1810  3400               	retlw	0
  6640     1811  3400               	retlw	0
  6641     1812  3400               	retlw	0
  6642     1813  3400               	retlw	0
  6643     1814  3400               	retlw	0
  6644     1815  3400               	retlw	0
  6645     1816  3400               	retlw	0
  6646     1817  3400               	retlw	0
  6647     1818  3400               	retlw	0
  6648     1819  3400               	retlw	0
  6649     181A  3400               	retlw	0
  6650     181B  3400               	retlw	0
  6651     181C  3400               	retlw	0
  6652     181D  3400               	retlw	0
  6653     181E  3400               	retlw	0
  6654     181F  3400               	retlw	0
  6655     1820  3400               	retlw	0
  6656     1821  3400               	retlw	0
  6657     1822  3400               	retlw	0
  6658     1823  3400               	retlw	0
  6659     1824  3400               	retlw	0
  6660     1825  3400               	retlw	0
  6661     1826  3400               	retlw	0
  6662     1827  3400               	retlw	0
  6663     1828  3443               	retlw	low _EUSART_FramingErrorCallbackRegister
  6664     1829  341E               	retlw	high _EUSART_FramingErrorCallbackRegister
  6665     182A  3452               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6666     182B  341E               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6667     182C  3400               	retlw	0
  6668     182D  3400               	retlw	0
  6669     182E  3400               	retlw	0
  6670     182F  3400               	retlw	0
  6671     1830                     __end_of_UART1:
  6672                           
  6673                           	psect	stringtext2
  6674     1830                     __pstringtext2:
  6675     1830                     _ledstrip:
  6676     1830  34AB               	retlw	low _SPI1_Initialize
  6677     1831  341D               	retlw	high _SPI1_Initialize
  6678     1832  3400               	retlw	0
  6679     1833  3400               	retlw	0
  6680     1834  3464               	retlw	low _SPI1_Open
  6681     1835  3415               	retlw	high _SPI1_Open
  6682     1836  3400               	retlw	0
  6683     1837  3400               	retlw	0
  6684     1838  3400               	retlw	0
  6685     1839  3400               	retlw	0
  6686     183A  3400               	retlw	0
  6687     183B  3400               	retlw	0
  6688     183C  3400               	retlw	0
  6689     183D  3400               	retlw	0
  6690     183E  34FB               	retlw	low _SPI1_ByteExchange
  6691     183F  341D               	retlw	high _SPI1_ByteExchange
  6692     1840  3400               	retlw	0
  6693     1841  3400               	retlw	0
  6694     1842  3400               	retlw	0
  6695     1843  3400               	retlw	0
  6696     1844  3400               	retlw	0
  6697     1845  3400               	retlw	0
  6698     1846  3400               	retlw	0
  6699     1847  3400               	retlw	0
  6700     1848  3400               	retlw	0
  6701     1849  3400               	retlw	0
  6702     184A  3400               	retlw	0
  6703     184B  3400               	retlw	0
  6704     184C                     __end_of_ledstrip:
  6705                           
  6706                           	psect	stringtext3
  6707     18D2                     __pstringtext3:
  6708     18D2                     _spi1_configuration:
  6709     18D2  3440               	retlw	64
  6710     18D3  340A               	retlw	10
  6711     18D4  3410               	retlw	16
  6712     18D5  3407               	retlw	7
  6713     18D6  3400               	retlw	0
  6714     18D7  3464               	retlw	100
  6715     18D8  3400               	retlw	0
  6716     18D9  3410               	retlw	16
  6717     18DA  3401               	retlw	1
  6718     18DB  3400               	retlw	0
  6719     18DC                     __end_of_spi1_configuration:
  6720                           
  6721                           	psect	nvBANK2
  6722     0154                     __pnvBANK2:
  6723     0154                     _TMR6_PeriodMatchCallback:
  6724     0154                     	ds	2
  6725     0156                     _TMR4_PeriodMatchCallback:
  6726     0156                     	ds	2
  6727     0158                     _TMR2_PeriodMatchCallback:
  6728     0158                     	ds	2
  6729     015A                     _EUSART_RxInterruptHandler:
  6730     015A                     	ds	2
  6731     015C                     _EUSART_TxInterruptHandler:
  6732     015C                     	ds	2
  6733     015E                     _ADC_InterruptHandler:
  6734     015E                     	ds	2
  6735     001F                     _T2CONbits      set	31
  6736     001F                     _T2CON          set	31
  6737     001D                     _TMR2           set	29
  6738     001E                     _PR2            set	30
  6739     0012                     _PIR2bits       set	18
  6740     000B                     _INTCONbits     set	11
  6741     0010                     _PIR0bits       set	16
  6742     0011                     _PIR1bits       set	17
  6743     008E                     _TRISC          set	142
  6744     008D                     _TRISB          set	141
  6745     008C                     _TRISA          set	140
  6746     0092                     _PIE2bits       set	146
  6747     009D                     _ADCON0bits     set	157
  6748     0091                     _PIE1bits       set	145
  6749     009D                     _ADCON0         set	157
  6750     009F                     _ADACT          set	159
  6751     009C                     _ADRESH         set	156
  6752     009B                     _ADRESL         set	155
  6753     009E                     _ADCON1         set	158
  6754     010E                     _LATC           set	270
  6755     010D                     _LATB           set	269
  6756     010C                     _LATA           set	268
  6757     019A                     _TX1REG         set	410
  6758     0199                     _RC1REG         set	409
  6759     019F                     _BAUD1CONbits   set	415
  6760     019E                     _TX1STAbits     set	414
  6761     019D                     _RC1STAbits     set	413
  6762     019C                     _SP1BRGH        set	412
  6763     019B                     _SP1BRGL        set	411
  6764     019E                     _TX1STA         set	414
  6765     019D                     _RC1STA         set	413
  6766     019F                     _BAUD1CON       set	415
  6767     018E                     _ANSELC         set	398
  6768     018D                     _ANSELB         set	397
  6769     018C                     _ANSELA         set	396
  6770     020E                     _WPUC           set	526
  6771     020D                     _WPUB           set	525
  6772     020C                     _WPUA           set	524
  6773     0211                     _SSP1BUF        set	529
  6774     0215                     _SSP1CON1bits   set	533
  6775     0212                     _SSP1ADD        set	530
  6776     0217                     _SSP1CON3       set	535
  6777     0215                     _SSP1CON1       set	533
  6778     0214                     _SSP1STAT       set	532
  6779     028E                     _ODCONC         set	654
  6780     028D                     _ODCONB         set	653
  6781     028C                     _ODCONA         set	652
  6782     030E                     _SLRCONC        set	782
  6783     030D                     _SLRCONB        set	781
  6784     030C                     _SLRCONA        set	780
  6785     0399                     _IOCCF          set	921
  6786     0398                     _IOCCN          set	920
  6787     0397                     _IOCCP          set	919
  6788     0396                     _IOCBF          set	918
  6789     0395                     _IOCBN          set	917
  6790     0394                     _IOCBP          set	916
  6791     0393                     _IOCAF          set	915
  6792     0392                     _IOCAN          set	914
  6793     0391                     _IOCAP          set	913
  6794     038E                     _INLVLC         set	910
  6795     038D                     _INLVLB         set	909
  6796     038C                     _INLVLA         set	908
  6797     041E                     _T6CONbits      set	1054
  6798     041E                     _T6CON          set	1054
  6799     041C                     _TMR6           set	1052
  6800     041D                     _PR6            set	1053
  6801     0417                     _T4CONbits      set	1047
  6802     0417                     _T4CON          set	1047
  6803     0415                     _TMR4           set	1045
  6804     0416                     _PR4            set	1046
  6805     061A                     _PWM6DCL        set	1562
  6806     061B                     _PWM6DCH        set	1563
  6807     061C                     _PWM6CON        set	1564
  6808     061F                     _PWMTMRSbits    set	1567
  6809     0617                     _PWM5DCL        set	1559
  6810     0618                     _PWM5DCH        set	1560
  6811     0619                     _PWM5CON        set	1561
  6812     091E                     _OSCTUNE        set	2334
  6813     091C                     _OSCSTAT1       set	2332
  6814     091F                     _OSCFRQ         set	2335
  6815     091D                     _OSCEN          set	2333
  6816     091B                     _OSCCON3        set	2331
  6817     0919                     _OSCCON1        set	2329
  6818     0E20                     _SSP1CLKPPS     set	3616
  6819     0E24                     _RXPPS          set	3620
  6820     0E21                     _SSP1DATPPS     set	3617
  6821     0E9E                     _RB6PPS         set	3742
  6822     0E9F                     _RB7PPS         set	3743
  6823     0EA7                     _RC7PPS         set	3751
  6824     0EA5                     _RC5PPS         set	3749
  6825     0E9C                     _RB4PPS         set	3740
  6826                           
  6827                           	psect	stringtext4
  6828     184C                     __pstringtext4:
  6829     184C                     STR_7:
  6830     184C  3463               	retlw	99	;'c'
  6831     184D  3468               	retlw	104	;'h'
  6832     184E  3461               	retlw	97	;'a'
  6833     184F  346E               	retlw	110	;'n'
  6834     1850  3467               	retlw	103	;'g'
  6835     1851  3465               	retlw	101	;'e'
  6836     1852  3464               	retlw	100	;'d'
  6837     1853  3420               	retlw	32	;' '
  6838     1854  3473               	retlw	115	;'s'
  6839     1855  3465               	retlw	101	;'e'
  6840     1856  3474               	retlw	116	;'t'
  6841     1857  3470               	retlw	112	;'p'
  6842     1858  346F               	retlw	111	;'o'
  6843     1859  3469               	retlw	105	;'i'
  6844     185A  346E               	retlw	110	;'n'
  6845     185B  3474               	retlw	116	;'t'
  6846     185C  3420               	retlw	32	;' '
  6847     185D  3474               	retlw	116	;'t'
  6848     185E  346F               	retlw	111	;'o'
  6849     185F  3420               	retlw	32	;' '
  6850     1860  3425               	retlw	37	;'%'
  6851     1861  3475               	retlw	117	;'u'
  6852     1862  340D               	retlw	13
  6853     1863  340A               	retlw	10
  6854     1864  3400               	retlw	0
  6855                           
  6856                           	psect	stringtext5
  6857     1865                     __pstringtext5:
  6858     1865                     STR_2:
  6859     1865  3469               	retlw	105	;'i'
  6860     1866  346E               	retlw	110	;'n'
  6861     1867  3470               	retlw	112	;'p'
  6862     1868  3475               	retlw	117	;'u'
  6863     1869  3474               	retlw	116	;'t'
  6864     186A  3420               	retlw	32	;' '
  6865     186B  3462               	retlw	98	;'b'
  6866     186C  3475               	retlw	117	;'u'
  6867     186D  3466               	retlw	102	;'f'
  6868     186E  3466               	retlw	102	;'f'
  6869     186F  3465               	retlw	101	;'e'
  6870     1870  3472               	retlw	114	;'r'
  6871     1871  3420               	retlw	32	;' '
  6872     1872  346F               	retlw	111	;'o'
  6873     1873  3476               	retlw	118	;'v'
  6874     1874  3465               	retlw	101	;'e'
  6875     1875  3472               	retlw	114	;'r'
  6876     1876  3466               	retlw	102	;'f'
  6877     1877  346C               	retlw	108	;'l'
  6878     1878  346F               	retlw	111	;'o'
  6879     1879  3477               	retlw	119	;'w'
  6880     187A  340D               	retlw	13
  6881     187B  340A               	retlw	10
  6882     187C  3400               	retlw	0
  6883                           
  6884                           	psect	stringtext6
  6885     187D                     __pstringtext6:
  6886     187D                     STR_11:
  6887     187D  3455               	retlw	85	;'U'
  6888     187E  346E               	retlw	110	;'n'
  6889     187F  346B               	retlw	107	;'k'
  6890     1880  346F               	retlw	111	;'o'
  6891     1881  3477               	retlw	119	;'w'
  6892     1882  346E               	retlw	110	;'n'
  6893     1883  3420               	retlw	32	;' '
  6894     1884  3463               	retlw	99	;'c'
  6895     1885  346F               	retlw	111	;'o'
  6896     1886  346D               	retlw	109	;'m'
  6897     1887  346D               	retlw	109	;'m'
  6898     1888  3461               	retlw	97	;'a'
  6899     1889  346E               	retlw	110	;'n'
  6900     188A  3464               	retlw	100	;'d'
  6901     188B  340D               	retlw	13
  6902     188C  340A               	retlw	10
  6903     188D  3400               	retlw	0
  6904                           
  6905                           	psect	stringtext7
  6906     188E                     __pstringtext7:
  6907     188E                     STR_3:
  6908     188E  342C               	retlw	44	;','
  6909     188F  3420               	retlw	32	;' '
  6910     1890  3473               	retlw	115	;'s'
  6911     1891  3465               	retlw	101	;'e'
  6912     1892  3474               	retlw	116	;'t'
  6913     1893  3470               	retlw	112	;'p'
  6914     1894  346F               	retlw	111	;'o'
  6915     1895  3469               	retlw	105	;'i'
  6916     1896  346E               	retlw	110	;'n'
  6917     1897  3474               	retlw	116	;'t'
  6918     1898  343A               	retlw	58	;':'
  6919     1899  3420               	retlw	32	;' '
  6920     189A  3425               	retlw	37	;'%'
  6921     189B  3475               	retlw	117	;'u'
  6922     189C  3420               	retlw	32	;' '
  6923     189D  3400               	retlw	0
  6924                           
  6925                           	psect	stringtext8
  6926     189E                     __pstringtext8:
  6927     189E                     STR_10:
  6928     189E  346C               	retlw	108	;'l'
  6929     189F  346F               	retlw	111	;'o'
  6930     18A0  3467               	retlw	103	;'g'
  6931     18A1  3473               	retlw	115	;'s'
  6932     18A2  3420               	retlw	32	;' '
  6933     18A3  3474               	retlw	116	;'t'
  6934     18A4  346F               	retlw	111	;'o'
  6935     18A5  3467               	retlw	103	;'g'
  6936     18A6  3467               	retlw	103	;'g'
  6937     18A7  346C               	retlw	108	;'l'
  6938     18A8  3465               	retlw	101	;'e'
  6939     18A9  3464               	retlw	100	;'d'
  6940     18AA  340D               	retlw	13
  6941     18AB  340A               	retlw	10
  6942     18AC  3400               	retlw	0
  6943                           
  6944                           	psect	stringtext9
  6945     18AD                     __pstringtext9:
  6946     18AD                     STR_9:
  6947     18AD  3463               	retlw	99	;'c'
  6948     18AE  3468               	retlw	104	;'h'
  6949     18AF  3461               	retlw	97	;'a'
  6950     18B0  346E               	retlw	110	;'n'
  6951     18B1  3467               	retlw	103	;'g'
  6952     18B2  3465               	retlw	101	;'e'
  6953     18B3  3464               	retlw	100	;'d'
  6954     18B4  3420               	retlw	32	;' '
  6955     18B5  346B               	retlw	107	;'k'
  6956     18B6  3469               	retlw	105	;'i'
  6957     18B7  340D               	retlw	13
  6958     18B8  340A               	retlw	10
  6959     18B9  3400               	retlw	0
  6960                           
  6961                           	psect	stringtext10
  6962     18BA                     __pstringtext10:
  6963     18BA                     STR_8:
  6964     18BA  3463               	retlw	99	;'c'
  6965     18BB  3468               	retlw	104	;'h'
  6966     18BC  3461               	retlw	97	;'a'
  6967     18BD  346E               	retlw	110	;'n'
  6968     18BE  3467               	retlw	103	;'g'
  6969     18BF  3465               	retlw	101	;'e'
  6970     18C0  3464               	retlw	100	;'d'
  6971     18C1  3420               	retlw	32	;' '
  6972     18C2  346B               	retlw	107	;'k'
  6973     18C3  3470               	retlw	112	;'p'
  6974     18C4  340D               	retlw	13
  6975     18C5  340A               	retlw	10
  6976     18C6  3400               	retlw	0
  6977                           
  6978                           	psect	stringtext11
  6979     18C7                     __pstringtext11:
  6980     18C7                     STR_5:
  6981     18C7  342C               	retlw	44	;','
  6982     18C8  3420               	retlw	32	;' '
  6983     18C9  3470               	retlw	112	;'p'
  6984     18CA  346F               	retlw	111	;'o'
  6985     18CB  346D               	retlw	109	;'m'
  6986     18CC  3470               	retlw	112	;'p'
  6987     18CD  343A               	retlw	58	;':'
  6988     18CE  3420               	retlw	32	;' '
  6989     18CF  3425               	retlw	37	;'%'
  6990     18D0  3475               	retlw	117	;'u'
  6991     18D1  3400               	retlw	0
  6992                           
  6993                           	psect	stringtext12
  6994     18DC                     __pstringtext12:
  6995     18DC                     STR_4:
  6996     18DC  3443               	retlw	67	;'C'
  6997     18DD  346F               	retlw	111	;'o'
  6998     18DE  3475               	retlw	117	;'u'
  6999     18DF  346E               	retlw	110	;'n'
  7000     18E0  3474               	retlw	116	;'t'
  7001     18E1  343A               	retlw	58	;':'
  7002     18E2  3420               	retlw	32	;' '
  7003     18E3  3425               	retlw	37	;'%'
  7004     18E4  3475               	retlw	117	;'u'
  7005     18E5  3400               	retlw	0
  7006                           
  7007                           	psect	stringtext13
  7008     18E6                     __pstringtext13:
  7009     18E6                     STR_1:
  7010     18E6  3425               	retlw	37	;'%'
  7011     18E7  3469               	retlw	105	;'i'
  7012     18E8  342E               	retlw	46	;'.'
  7013     18E9  3425               	retlw	37	;'%'
  7014     18EA  3430               	retlw	48	;'0'
  7015     18EB  3433               	retlw	51	;'3'
  7016     18EC  3475               	retlw	117	;'u'
  7017     18ED  3400               	retlw	0
  7018                           
  7019                           	psect	stringtext14
  7020     0000                     __pstringtext14:
  7021     18AA                     STR_6           equ	STR_10+12
  7022                           
  7023                           	psect	cinit
  7024     005A                     start_initialization:	
  7025                           ; #config settings
  7026                           
  7027     005A                     __initialization:
  7028                           
  7029                           ; Initialize objects allocated to BANK0
  7030     005A  302F               	movlw	low __pidataBANK0
  7031     005B  0084               	movwf	4
  7032     005C  309D               	movlw	(high __pidataBANK0)| (0+128)
  7033     005D  0085               	movwf	5
  7034     005E  306B               	movlw	low __pdataBANK0
  7035     005F  0086               	movwf	6
  7036     0060  3000               	movlw	high __pdataBANK0
  7037     0061  0087               	movwf	7
  7038     0062  3004               	movlw	4
  7039     0063  319D  254B  3180   	fcall	init_ram
  7040                           
  7041                           ; Initialize objects allocated to BANK2
  7042     0066  30B5               	movlw	low __pidataBANK2
  7043     0067  0084               	movwf	4
  7044     0068  309D               	movlw	(high __pidataBANK2)| (0+128)
  7045     0069  0085               	movwf	5
  7046     006A  3060               	movlw	low __pdataBANK2
  7047     006B  0086               	movwf	6
  7048     006C  3001               	movlw	high __pdataBANK2
  7049     006D  0087               	movwf	7
  7050     006E  300A               	movlw	10
  7051     006F  319D  254B  3180   	fcall	init_ram
  7052                           
  7053                           ; Clear objects allocated to BANK0
  7054     0072  3055               	movlw	low __pbssBANK0
  7055     0073  0084               	movwf	4
  7056     0074  3000               	movlw	high __pbssBANK0
  7057     0075  0085               	movwf	5
  7058     0076  3016               	movlw	22
  7059     0077  319D  2545  3180   	fcall	clear_ram0
  7060                           
  7061                           ; Clear objects allocated to BANK1
  7062     007A  0021               	movlb	1	; select bank1
  7063     007B  01ED               	clrf	__pbssBANK1& (0+127)
  7064     007C  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  7065                           
  7066                           ; Clear objects allocated to BANK2
  7067     007D  3020               	movlw	low __pbssBANK2
  7068     007E  0084               	movwf	4
  7069     007F  3001               	movlw	high __pbssBANK2
  7070     0080  0085               	movwf	5
  7071     0081  3034               	movlw	52
  7072     0082  319D  2545  3180   	fcall	clear_ram0
  7073                           
  7074                           ; Clear objects allocated to BANK3
  7075     0085  30A0               	movlw	low __pbssBANK3
  7076     0086  0084               	movwf	4
  7077     0087  3001               	movlw	high __pbssBANK3
  7078     0088  0085               	movwf	5
  7079     0089  3034               	movlw	52
  7080     008A  319D  2545  3180   	fcall	clear_ram0
  7081     008D                     end_of_initialization:	
  7082                           ;End of C runtime variable initialization code
  7083                           
  7084     008D                     __end_of__initialization:
  7085     008D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7086     008E  0020               	movlb	0
  7087     008F  3190  28D8         	ljmp	_main	;jump to C main() function
  7088                           
  7089                           	psect	bssBANK0
  7090     0055                     __pbssBANK0:
  7091     0055                     _width:
  7092     0055                     	ds	2
  7093     0057                     _dutycycle:
  7094     0057                     	ds	2
  7095     0059                     _ADC_hoogtesensor:
  7096     0059                     	ds	2
  7097     005B                     _EUSART_OverrunErrorHandler:
  7098     005B                     	ds	2
  7099     005D                     _EUSART_FramingErrorHandler:
  7100     005D                     	ds	2
  7101     005F                     _INT_InterruptHandler:
  7102     005F                     	ds	2
  7103     0061                     _flags:
  7104     0061                     	ds	1
  7105     0062                     _buzzing:
  7106     0062                     	ds	1
  7107     0063                     _is_on_target:
  7108     0063                     	ds	1
  7109     0064                     readLine@index:
  7110     0064                     	ds	1
  7111     0065                     _eusartRxCount:
  7112     0065                     	ds	1
  7113     0066                     _eusartRxTail:
  7114     0066                     	ds	1
  7115     0067                     _eusartRxHead:
  7116     0067                     	ds	1
  7117     0068                     _eusartTxBufferRemaining:
  7118     0068                     	ds	1
  7119     0069                     _eusartTxTail:
  7120     0069                     	ds	1
  7121     006A                     _eusartTxHead:
  7122     006A                     	ds	1
  7123                           
  7124                           	psect	dataBANK0
  7125     006B                     __pdataBANK0:
  7126     006B                     _increment_setpoint:
  7127     006B                     	ds	2
  7128     006D                     _mustPrintLogs:
  7129     006D                     	ds	1
  7130     006E                     adcConversionDoneHandler@new_channel:
  7131     006E                     	ds	1
  7132                           
  7133                           	psect	bssBANK1
  7134     00ED                     __pbssBANK1:
  7135     00ED                     _ADC_pomphoogte:
  7136     00ED                     	ds	2
  7137                           
  7138                           	psect	bssBANK2
  7139     0120                     __pbssBANK2:
  7140     0120                     _eusartRxStatusBuffer:
  7141     0120                     	ds	16
  7142     0130                     _eusartRxBuffer:
  7143     0130                     	ds	8
  7144     0138                     _eusartTxBuffer:
  7145     0138                     	ds	8
  7146     0140                     _integraal:
  7147     0140                     	ds	4
  7148     0144                     _nout:
  7149     0144                     	ds	2
  7150     0146                     _prec:
  7151     0146                     	ds	2
  7152     0148                     _counter:
  7153     0148                     	ds	2
  7154     014A                     _hoogte_bal:
  7155     014A                     	ds	2
  7156     014C                     _ADC_potentiometer:
  7157     014C                     	ds	2
  7158     014E                     _EUSART_RxCompleteInterruptHandler:
  7159     014E                     	ds	2
  7160     0150                     _EUSART_TxCompleteInterruptHandler:
  7161     0150                     	ds	2
  7162     0152                     _eusartRxLastError:
  7163     0152                     	ds	2
  7164                           
  7165                           	psect	dataBANK2
  7166     0160                     __pdataBANK2:
  7167     0160                     _ki:
  7168     0160                     	ds	4
  7169     0164                     _kp:
  7170     0164                     	ds	4
  7171     0168                     _setpoint:
  7172     0168                     	ds	2
  7173                           
  7174                           	psect	bssBANK3
  7175     01A0                     __pbssBANK3:
  7176     01A0                     _dbuf:
  7177     01A0                     	ds	32
  7178     01C0                     _line:
  7179     01C0                     	ds	20
  7180                           
  7181                           	psect	inittext
  7182     1D4B                     init_ram:
  7183     1D4B  00FE               	movwf	btemp
  7184     1D4C                     initloop:
  7185     1D4C  0012               	moviw fsr0++
  7186     1D4D  001E               	movwi fsr1++
  7187     1D4E  0BFE               	decfsz	btemp,f
  7188     1D4F  2D4C               	goto	initloop
  7189     1D50  3400               	retlw	0
  7190                           
  7191                           	psect	clrtext
  7192     1D45                     clear_ram0:	
  7193                           ;	Called with FSR0 containing the base address, and
  7194                           ;	WREG with the size to clear
  7195                           
  7196     1D45  0064               	clrwdt	;clear the watchdog before getting into this loop
  7197     1D46                     clrloop0:
  7198     1D46  0180               	clrf	0	;clear RAM location pointed to by FSR
  7199     1D47  3101               	addfsr 0,1
  7200     1D48  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7201     1D49  2D46               	goto	clrloop0	;have we reached the end yet?
  7202     1D4A  3400               	retlw	0	;all done for this memory range, return
  7203                           
  7204                           	psect	cstackBANK1
  7205     00A0                     __pcstackBANK1:
  7206     00A0                     ?_ADC_SetInterruptHandler:
  7207     00A0                     ?_SPI1_ByteExchange:	
  7208                           ; 1 bytes @ 0x0
  7209                           
  7210     00A0                     ?_INT_SetInterruptHandler:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213     00A0                     ?_EUSART_Write:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222     00A0                     ?_PWM_buzzer_LoadDutyValue:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231     00A0                     ?_getSetpoint:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234     00A0                     ?_getCounter:	
  7235                           ; 2 bytes @ 0x0
  7236                           
  7237     00A0                     ?__Umul8_16:	
  7238                           ; 2 bytes @ 0x0
  7239                           
  7240     00A0                     ?_strlen:	
  7241                           ; 2 bytes @ 0x0
  7242                           
  7243     00A0                     ?_getPomphoogte:	
  7244                           ; 2 bytes @ 0x0
  7245                           
  7246     00A0                     ?___wmul:	
  7247                           ; 2 bytes @ 0x0
  7248                           
  7249     00A0                     ?___awdiv:	
  7250                           ; 2 bytes @ 0x0
  7251                           
  7252     00A0                     ?___awmod:	
  7253                           ; 2 bytes @ 0x0
  7254                           
  7255     00A0                     ?___lwdiv:	
  7256                           ; 2 bytes @ 0x0
  7257                           
  7258     00A0                     ?___lwmod:	
  7259                           ; 2 bytes @ 0x0
  7260                           
  7261     00A0                     ?___fldiv:	
  7262                           ; 2 bytes @ 0x0
  7263                           
  7264     00A0                     ?___xxtofl:	
  7265                           ; 4 bytes @ 0x0
  7266                           
  7267     00A0                     SPI1_ByteExchange@byteData:	
  7268                           ; 4 bytes @ 0x0
  7269                           
  7270     00A0                     EUSART_Read@tempRxTail:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273     00A0                     EUSART_Write@txData:	
  7274                           ; 1 bytes @ 0x0
  7275                           
  7276     00A0                     __Umul8_16@multiplicand:	
  7277                           ; 1 bytes @ 0x0
  7278                           
  7279     00A0                     strlen@s:	
  7280                           ; 1 bytes @ 0x0
  7281                           
  7282     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  7283                           ; 1 bytes @ 0x0
  7284                           
  7285     00A0                     PWM_buzzer_LoadDutyValue@dutyValue:	
  7286                           ; 2 bytes @ 0x0
  7287                           
  7288     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  7289                           ; 2 bytes @ 0x0
  7290                           
  7291     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  7292                           ; 2 bytes @ 0x0
  7293                           
  7294     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  7295                           ; 2 bytes @ 0x0
  7296                           
  7297     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7298                           ; 2 bytes @ 0x0
  7299                           
  7300     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7301                           ; 2 bytes @ 0x0
  7302                           
  7303     00A0                     ___wmul@multiplier:	
  7304                           ; 2 bytes @ 0x0
  7305                           
  7306     00A0                     ___awdiv@divisor:	
  7307                           ; 2 bytes @ 0x0
  7308                           
  7309     00A0                     ___awmod@divisor:	
  7310                           ; 2 bytes @ 0x0
  7311                           
  7312     00A0                     ___lwdiv@divisor:	
  7313                           ; 2 bytes @ 0x0
  7314                           
  7315     00A0                     ___lwmod@divisor:	
  7316                           ; 2 bytes @ 0x0
  7317                           
  7318     00A0                     ___fldiv@a:	
  7319                           ; 2 bytes @ 0x0
  7320                           
  7321     00A0                     ___xxtofl@val:	
  7322                           ; 4 bytes @ 0x0
  7323                           
  7324     00A0                     ??_SPI1_Initialize:	
  7325                           ; 4 bytes @ 0x0
  7326                           
  7327     00A0                     ??_TMR2_Initialize:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330     00A0                     ??_TMR4_Initialize:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333     00A0                     ??_TMR6_Initialize:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339     00A0                     ??_EUSART_Read:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342     00A0                     ??_EUSART_IsRxReady:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345     00A0                     ??_EUSART_IsTxReady:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348     00A0                     ??_ADC_SelectChannel:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351     00A0                     ??_pwm_fan_Initialize:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354     00A0                     ??_PWM_buzzer_Initialize:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357     00A0                     ??_CLOCK_Initialize:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360     00A0                     ??_PIN_MANAGER_Initialize:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363                           
  7364                           ; 1 bytes @ 0x0
  7365     00A0                     	ds	1
  7366     00A1                     ?_sendLedstripFrame:
  7367     00A1                     ADC_SelectChannel@channel:	
  7368                           ; 1 bytes @ 0x1
  7369                           
  7370     00A1                     EUSART_Read@readValue:	
  7371                           ; 1 bytes @ 0x1
  7372                           
  7373     00A1                     EUSART_Write@tempTxHead:	
  7374                           ; 1 bytes @ 0x1
  7375                           
  7376     00A1                     sendLedstripFrame@green:	
  7377                           ; 1 bytes @ 0x1
  7378                           
  7379     00A1                     ??_SPI1_ByteExchange:	
  7380                           ; 1 bytes @ 0x1
  7381                           
  7382     00A1                     ??_EUSART_Write:	
  7383                           ; 1 bytes @ 0x1
  7384                           
  7385     00A1                     ??_sendLedstripStartFrame:	
  7386                           ; 1 bytes @ 0x1
  7387                           
  7388     00A1                     ??_sendLedstripEndFrame:	
  7389                           ; 1 bytes @ 0x1
  7390                           
  7391                           
  7392                           ; 1 bytes @ 0x1
  7393     00A1                     	ds	1
  7394     00A2                     putch@txData:
  7395     00A2                     sendLedstripFrame@blue:	
  7396                           ; 1 bytes @ 0x2
  7397                           
  7398     00A2                     strlen@a:	
  7399                           ; 1 bytes @ 0x2
  7400                           
  7401     00A2                     ___wmul@multiplicand:	
  7402                           ; 1 bytes @ 0x2
  7403                           
  7404     00A2                     ___awdiv@dividend:	
  7405                           ; 2 bytes @ 0x2
  7406                           
  7407     00A2                     ___awmod@dividend:	
  7408                           ; 2 bytes @ 0x2
  7409                           
  7410     00A2                     ___lwdiv@dividend:	
  7411                           ; 2 bytes @ 0x2
  7412                           
  7413     00A2                     ___lwmod@dividend:	
  7414                           ; 2 bytes @ 0x2
  7415                           
  7416     00A2                     ??_ADC_SetInterruptHandler:	
  7417                           ; 2 bytes @ 0x2
  7418                           
  7419     00A2                     ??_INT_SetInterruptHandler:	
  7420                           ; 1 bytes @ 0x2
  7421                           
  7422     00A2                     ??_EUSART_Initialize:	
  7423                           ; 1 bytes @ 0x2
  7424                           
  7425     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  7426                           ; 1 bytes @ 0x2
  7427                           
  7428     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  7429                           ; 1 bytes @ 0x2
  7430                           
  7431     00A2                     ??_initAdcMultiplexer:	
  7432                           ; 1 bytes @ 0x2
  7433                           
  7434     00A2                     ??_getSetpoint:	
  7435                           ; 1 bytes @ 0x2
  7436                           
  7437     00A2                     ??_getCounter:	
  7438                           ; 1 bytes @ 0x2
  7439                           
  7440     00A2                     ??__Umul8_16:	
  7441                           ; 1 bytes @ 0x2
  7442                           
  7443     00A2                     ??_strlen:	
  7444                           ; 1 bytes @ 0x2
  7445                           
  7446     00A2                     ??_ADC_Initialize:	
  7447                           ; 1 bytes @ 0x2
  7448                           
  7449     00A2                     ??_PWM_buzzer_LoadDutyValue:	
  7450                           ; 1 bytes @ 0x2
  7451                           
  7452     00A2                     ??_INTERRUPT_Initialize:	
  7453                           ; 1 bytes @ 0x2
  7454                           
  7455     00A2                     ??_SYSTEM_Initialize:	
  7456                           ; 1 bytes @ 0x2
  7457                           
  7458     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  7459                           ; 1 bytes @ 0x2
  7460                           
  7461     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  7462                           ; 1 bytes @ 0x2
  7463                           
  7464     00A2                     ??_putch:	
  7465                           ; 1 bytes @ 0x2
  7466                           
  7467     00A2                     ??_getPomphoogte:	
  7468                           ; 1 bytes @ 0x2
  7469                           
  7470                           
  7471                           ; 1 bytes @ 0x2
  7472     00A2                     	ds	1
  7473     00A3                     ?_fputc:
  7474     00A3                     sendLedstripFrame@intensity:	
  7475                           ; 2 bytes @ 0x3
  7476                           
  7477     00A3                     fputc@c:	
  7478                           ; 1 bytes @ 0x3
  7479                           
  7480                           
  7481                           ; 2 bytes @ 0x3
  7482     00A3                     	ds	1
  7483     00A4                     sendLedstripFrame@red:
  7484     00A4                     ___awdiv@counter:	
  7485                           ; 1 bytes @ 0x4
  7486                           
  7487     00A4                     ___awmod@counter:	
  7488                           ; 1 bytes @ 0x4
  7489                           
  7490     00A4                     ___lwmod@counter:	
  7491                           ; 1 bytes @ 0x4
  7492                           
  7493     00A4                     ___wmul@product:	
  7494                           ; 1 bytes @ 0x4
  7495                           
  7496     00A4                     ___lwdiv@quotient:	
  7497                           ; 2 bytes @ 0x4
  7498                           
  7499     00A4                     __Umul8_16@product:	
  7500                           ; 2 bytes @ 0x4
  7501                           
  7502     00A4                     ___fldiv@b:	
  7503                           ; 2 bytes @ 0x4
  7504                           
  7505     00A4                     ??_sendLedstripFrame:	
  7506                           ; 4 bytes @ 0x4
  7507                           
  7508     00A4                     ??___wmul:	
  7509                           ; 1 bytes @ 0x4
  7510                           
  7511     00A4                     ??___awdiv:	
  7512                           ; 1 bytes @ 0x4
  7513                           
  7514     00A4                     ??___awmod:	
  7515                           ; 1 bytes @ 0x4
  7516                           
  7517     00A4                     ??___lwdiv:	
  7518                           ; 1 bytes @ 0x4
  7519                           
  7520     00A4                     ??___lwmod:	
  7521                           ; 1 bytes @ 0x4
  7522                           
  7523     00A4                     ??___xxtofl:	
  7524                           ; 1 bytes @ 0x4
  7525                           
  7526                           
  7527                           ; 1 bytes @ 0x4
  7528     00A4                     	ds	1
  7529     00A5                     ___awdiv@sign:
  7530     00A5                     ___awmod@sign:	
  7531                           ; 1 bytes @ 0x5
  7532                           
  7533     00A5                     fputc@fp:	
  7534                           ; 1 bytes @ 0x5
  7535                           
  7536                           
  7537                           ; 2 bytes @ 0x5
  7538     00A5                     	ds	1
  7539     00A6                     ?_SPI1_Open:
  7540     00A6                     ?_atoi:	
  7541                           ; 1 bytes @ 0x6
  7542                           
  7543     00A6                     ?_abs:	
  7544                           ; 2 bytes @ 0x6
  7545                           
  7546     00A6                     ?_read_prec_or_width:	
  7547                           ; 2 bytes @ 0x6
  7548                           
  7549     00A6                     SPI1_Open@spiConfigIndex:	
  7550                           ; 2 bytes @ 0x6
  7551                           
  7552     00A6                     ___lwdiv@counter:	
  7553                           ; 1 bytes @ 0x6
  7554                           
  7555     00A6                     atoi@s:	
  7556                           ; 1 bytes @ 0x6
  7557                           
  7558     00A6                     read_prec_or_width@fmt:	
  7559                           ; 1 bytes @ 0x6
  7560                           
  7561     00A6                     ___awdiv@quotient:	
  7562                           ; 1 bytes @ 0x6
  7563                           
  7564     00A6                     __Umul8_16@word_mpld:	
  7565                           ; 2 bytes @ 0x6
  7566                           
  7567     00A6                     abs@a:	
  7568                           ; 2 bytes @ 0x6
  7569                           
  7570                           
  7571                           ; 2 bytes @ 0x6
  7572     00A6                     	ds	1
  7573     00A7                     read_prec_or_width@ap:
  7574     00A7                     ??_SPI1_Open:	
  7575                           ; 1 bytes @ 0x7
  7576                           
  7577     00A7                     ??_fputc:	
  7578                           ; 1 bytes @ 0x7
  7579                           
  7580     00A7                     ??_counter_led:	
  7581                           ; 1 bytes @ 0x7
  7582                           
  7583                           
  7584                           ; 1 bytes @ 0x7
  7585     00A7                     	ds	1
  7586     00A8                     __Umul8_16@multiplier:
  7587     00A8                     ___xxtofl@sign:	
  7588                           ; 1 bytes @ 0x8
  7589                           
  7590     00A8                     counter_led@loops:	
  7591                           ; 1 bytes @ 0x8
  7592                           
  7593     00A8                     ??_atoi:	
  7594                           ; 2 bytes @ 0x8
  7595                           
  7596     00A8                     ??_abs:	
  7597                           ; 1 bytes @ 0x8
  7598                           
  7599     00A8                     ??___fldiv:	
  7600                           ; 1 bytes @ 0x8
  7601                           
  7602     00A8                     ??_read_prec_or_width:	
  7603                           ; 1 bytes @ 0x8
  7604                           
  7605                           
  7606                           ; 1 bytes @ 0x8
  7607     00A8                     	ds	1
  7608     00A9                     ?___flmul:
  7609     00A9                     ___xxtofl@exp:	
  7610                           ; 4 bytes @ 0x9
  7611                           
  7612     00A9                     ___flmul@b:	
  7613                           ; 1 bytes @ 0x9
  7614                           
  7615     00A9                     ??_initLedstrip:	
  7616                           ; 4 bytes @ 0x9
  7617                           
  7618                           
  7619                           ; 1 bytes @ 0x9
  7620     00A9                     	ds	1
  7621     00AA                     atoi@neg:
  7622     00AA                     counter_led@counter:	
  7623                           ; 1 bytes @ 0xA
  7624                           
  7625     00AA                     ___xxtofl@arg:	
  7626                           ; 2 bytes @ 0xA
  7627                           
  7628                           
  7629                           ; 4 bytes @ 0xA
  7630     00AA                     	ds	1
  7631     00AB                     read_prec_or_width@c:
  7632     00AB                     atoi@n:	
  7633                           ; 1 bytes @ 0xB
  7634                           
  7635                           
  7636                           ; 2 bytes @ 0xB
  7637     00AB                     	ds	1
  7638     00AC                     ?_fputs:
  7639     00AC                     counter_led@led:	
  7640                           ; 2 bytes @ 0xC
  7641                           
  7642     00AC                     fputs@s:	
  7643                           ; 1 bytes @ 0xC
  7644                           
  7645     00AC                     read_prec_or_width@n:	
  7646                           ; 1 bytes @ 0xC
  7647                           
  7648                           
  7649                           ; 2 bytes @ 0xC
  7650     00AC                     	ds	1
  7651     00AD                     ?_setSetpoint:
  7652     00AD                     setSetpoint@new_setpoint:	
  7653                           ; 1 bytes @ 0xD
  7654                           
  7655     00AD                     fputs@fp:	
  7656                           ; 2 bytes @ 0xD
  7657                           
  7658     00AD                     ___fldiv@rem:	
  7659                           ; 2 bytes @ 0xD
  7660                           
  7661     00AD                     ___flmul@a:	
  7662                           ; 4 bytes @ 0xD
  7663                           
  7664     00AD                     ??_TMR6_Tasks:	
  7665                           ; 4 bytes @ 0xD
  7666                           
  7667     00AD                     ??_updateLedstripAnimation:	
  7668                           ; 1 bytes @ 0xD
  7669                           
  7670                           
  7671                           ; 1 bytes @ 0xD
  7672     00AD                     	ds	1
  7673     00AE                     ?___fladd:
  7674     00AE                     ___fladd@b:	
  7675                           ; 4 bytes @ 0xE
  7676                           
  7677                           
  7678                           ; 4 bytes @ 0xE
  7679     00AE                     	ds	1
  7680     00AF                     ??_check_push_up:
  7681     00AF                     ??_setSetpoint:	
  7682                           ; 1 bytes @ 0xF
  7683                           
  7684     00AF                     ??_fputs:	
  7685                           ; 1 bytes @ 0xF
  7686                           
  7687                           
  7688                           ; 1 bytes @ 0xF
  7689     00AF                     	ds	2
  7690     00B1                     ___fldiv@sign:
  7691     00B1                     fputs@c:	
  7692                           ; 1 bytes @ 0x11
  7693                           
  7694     00B1                     ??___flmul:	
  7695                           ; 1 bytes @ 0x11
  7696                           
  7697                           
  7698                           ; 1 bytes @ 0x11
  7699     00B1                     	ds	1
  7700     00B2                     ___fldiv@new_exp:
  7701     00B2                     fputs@i:	
  7702                           ; 2 bytes @ 0x12
  7703                           
  7704     00B2                     ___fladd@a:	
  7705                           ; 2 bytes @ 0x12
  7706                           
  7707                           
  7708                           ; 4 bytes @ 0x12
  7709     00B2                     	ds	2
  7710     00B4                     ?_pad:
  7711     00B4                     pad@fp:	
  7712                           ; 2 bytes @ 0x14
  7713                           
  7714     00B4                     ___fldiv@grs:	
  7715                           ; 2 bytes @ 0x14
  7716                           
  7717                           
  7718                           ; 4 bytes @ 0x14
  7719     00B4                     	ds	2
  7720     00B6                     ___flmul@sign:
  7721     00B6                     pad@buf:	
  7722                           ; 1 bytes @ 0x16
  7723                           
  7724     00B6                     ??___fladd:	
  7725                           ; 1 bytes @ 0x16
  7726                           
  7727                           
  7728                           ; 1 bytes @ 0x16
  7729     00B6                     	ds	1
  7730     00B7                     pad@p:
  7731     00B7                     ___flmul@grs:	
  7732                           ; 2 bytes @ 0x17
  7733                           
  7734                           
  7735                           ; 4 bytes @ 0x17
  7736     00B7                     	ds	1
  7737     00B8                     ___fldiv@bexp:
  7738                           
  7739                           ; 1 bytes @ 0x18
  7740     00B8                     	ds	1
  7741     00B9                     ___fldiv@aexp:
  7742     00B9                     ??_pad:	
  7743                           ; 1 bytes @ 0x19
  7744                           
  7745                           
  7746                           ; 1 bytes @ 0x19
  7747     00B9                     	ds	1
  7748     00BA                     pad@i:
  7749                           
  7750                           ; 2 bytes @ 0x1A
  7751     00BA                     	ds	1
  7752     00BB                     ___flmul@aexp:
  7753                           
  7754                           ; 1 bytes @ 0x1B
  7755     00BB                     	ds	1
  7756     00BC                     ?_dtoa:
  7757     00BC                     ?_utoa:	
  7758                           ; 2 bytes @ 0x1C
  7759                           
  7760     00BC                     ___flmul@bexp:	
  7761                           ; 2 bytes @ 0x1C
  7762                           
  7763     00BC                     dtoa@fp:	
  7764                           ; 1 bytes @ 0x1C
  7765                           
  7766     00BC                     utoa@fp:	
  7767                           ; 2 bytes @ 0x1C
  7768                           
  7769                           
  7770                           ; 2 bytes @ 0x1C
  7771     00BC                     	ds	1
  7772     00BD                     ___flmul@prod:
  7773                           
  7774                           ; 4 bytes @ 0x1D
  7775     00BD                     	ds	1
  7776     00BE                     ___fladd@signs:
  7777     00BE                     dtoa@d:	
  7778                           ; 1 bytes @ 0x1E
  7779                           
  7780     00BE                     utoa@d:	
  7781                           ; 2 bytes @ 0x1E
  7782                           
  7783                           
  7784                           ; 2 bytes @ 0x1E
  7785     00BE                     	ds	1
  7786     00BF                     ___fladd@aexp:
  7787                           
  7788                           ; 1 bytes @ 0x1F
  7789     00BF                     	ds	1
  7790     00C0                     ___fladd@bexp:
  7791     00C0                     ??_dtoa:	
  7792                           ; 1 bytes @ 0x20
  7793                           
  7794     00C0                     ??_utoa:	
  7795                           ; 1 bytes @ 0x20
  7796                           
  7797                           
  7798                           ; 1 bytes @ 0x20
  7799     00C0                     	ds	1
  7800     00C1                     ___fladd@grs:
  7801     00C1                     utoa@p:	
  7802                           ; 1 bytes @ 0x21
  7803                           
  7804     00C1                     ___flmul@temp:	
  7805                           ; 1 bytes @ 0x21
  7806                           
  7807     00C1                     _dtoa$2145:	
  7808                           ; 2 bytes @ 0x21
  7809                           
  7810                           
  7811                           ; 2 bytes @ 0x21
  7812     00C1                     	ds	1
  7813     00C2                     utoa@w:
  7814                           
  7815                           ; 2 bytes @ 0x22
  7816     00C2                     	ds	1
  7817     00C3                     ?_str2float:
  7818     00C3                     str2float@str:	
  7819                           ; 4 bytes @ 0x23
  7820                           
  7821     00C3                     dtoa@p:	
  7822                           ; 1 bytes @ 0x23
  7823                           
  7824                           
  7825                           ; 1 bytes @ 0x23
  7826     00C3                     	ds	1
  7827     00C4                     dtoa@w:
  7828     00C4                     utoa@i:	
  7829                           ; 2 bytes @ 0x24
  7830                           
  7831                           
  7832                           ; 2 bytes @ 0x24
  7833     00C4                     	ds	2
  7834     00C6                     dtoa@s:
  7835                           
  7836                           ; 1 bytes @ 0x26
  7837     00C6                     	ds	1
  7838     00C7                     str2float@decimal_separator:
  7839     00C7                     dtoa@i:	
  7840                           ; 1 bytes @ 0x27
  7841                           
  7842     00C7                     ??_str2float:	
  7843                           ; 2 bytes @ 0x27
  7844                           
  7845                           
  7846                           ; 1 bytes @ 0x27
  7847     00C7                     	ds	1
  7848     00C8                     str2float@multiplier:
  7849                           
  7850                           ; 1 bytes @ 0x28
  7851     00C8                     	ds	1
  7852     00C9                     ?_vfpfcnvrt:
  7853     00C9                     str2float@i:	
  7854                           ; 2 bytes @ 0x29
  7855                           
  7856     00C9                     vfpfcnvrt@fp:	
  7857                           ; 1 bytes @ 0x29
  7858                           
  7859                           
  7860                           ; 2 bytes @ 0x29
  7861     00C9                     	ds	1
  7862     00CA                     str2float@number:
  7863                           
  7864                           ; 4 bytes @ 0x2A
  7865     00CA                     	ds	1
  7866     00CB                     vfpfcnvrt@fmt:
  7867                           
  7868                           ; 1 bytes @ 0x2B
  7869     00CB                     	ds	1
  7870     00CC                     vfpfcnvrt@ap:
  7871                           
  7872                           ; 2 bytes @ 0x2C
  7873     00CC                     	ds	2
  7874     00CE                     str2float@digit:
  7875     00CE                     ??_vfpfcnvrt:	
  7876                           ; 1 bytes @ 0x2E
  7877                           
  7878                           
  7879                           ; 1 bytes @ 0x2E
  7880     00CE                     	ds	1
  7881     00CF                     ?_setKp:
  7882     00CF                     ?_setKi:	
  7883                           ; 1 bytes @ 0x2F
  7884                           
  7885     00CF                     setKp@new_kp:	
  7886                           ; 1 bytes @ 0x2F
  7887                           
  7888     00CF                     setKi@new_ki:	
  7889                           ; 4 bytes @ 0x2F
  7890                           
  7891                           
  7892                           ; 4 bytes @ 0x2F
  7893     00CF                     	ds	3
  7894     00D2                     vfpfcnvrt@done:
  7895                           
  7896                           ; 1 bytes @ 0x32
  7897     00D2                     	ds	1
  7898     00D3                     vfpfcnvrt@convarg:
  7899     00D3                     ??_setKp:	
  7900                           ; 4 bytes @ 0x33
  7901                           
  7902     00D3                     ??_setKi:	
  7903                           ; 1 bytes @ 0x33
  7904                           
  7905                           
  7906                           ; 1 bytes @ 0x33
  7907     00D3                     	ds	4
  7908     00D7                     vfpfcnvrt@cp:
  7909                           
  7910                           ; 2 bytes @ 0x37
  7911     00D7                     	ds	2
  7912     00D9                     ?_vfprintf:
  7913     00D9                     vfprintf@fp:	
  7914                           ; 2 bytes @ 0x39
  7915                           
  7916                           
  7917                           ; 2 bytes @ 0x39
  7918     00D9                     	ds	2
  7919     00DB                     vfprintf@fmt:
  7920                           
  7921                           ; 2 bytes @ 0x3B
  7922     00DB                     	ds	2
  7923     00DD                     vfprintf@ap:
  7924                           
  7925                           ; 1 bytes @ 0x3D
  7926     00DD                     	ds	1
  7927     00DE                     ??_vfprintf:
  7928                           
  7929                           ; 1 bytes @ 0x3E
  7930     00DE                     	ds	1
  7931     00DF                     vfprintf@cfmt:
  7932                           
  7933                           ; 2 bytes @ 0x3F
  7934     00DF                     	ds	2
  7935     00E1                     ?_printf:
  7936     00E1                     printf@fmt:	
  7937                           ; 2 bytes @ 0x41
  7938                           
  7939                           
  7940                           ; 2 bytes @ 0x41
  7941     00E1                     	ds	6
  7942     00E7                     printf@ap:
  7943     00E7                     ??_printf:	
  7944                           ; 1 bytes @ 0x47
  7945                           
  7946                           
  7947                           ; 1 bytes @ 0x47
  7948     00E7                     	ds	1
  7949     00E8                     ?_readLine:
  7950     00E8                     ??_printLogs:	
  7951                           ; 1 bytes @ 0x48
  7952                           
  7953                           
  7954                           ; 1 bytes @ 0x48
  7955     00E8                     	ds	2
  7956     00EA                     ??_readLine:
  7957                           
  7958                           ; 1 bytes @ 0x4A
  7959     00EA                     	ds	1
  7960     00EB                     uartHandler@str:
  7961     00EB                     ??_uartHandler:	
  7962                           ; 1 bytes @ 0x4B
  7963                           
  7964                           
  7965                           ; 1 bytes @ 0x4B
  7966     00EB                     	ds	1
  7967     00EC                     ??_main:
  7968                           
  7969                           ; 1 bytes @ 0x4C
  7970     00EC                     	ds	1
  7971                           
  7972                           	psect	cstackCOMMON
  7973     0070                     __pcstackCOMMON:
  7974     0070                     ?_ADC_DefaultInterruptHandler:
  7975     0070                     ?_SPI1_Initialize:	
  7976                           ; 1 bytes @ 0x0
  7977                           
  7978     0070                     ?_TMR4_ISR:	
  7979                           ; 1 bytes @ 0x0
  7980                           
  7981     0070                     ?_TMR2_ISR:	
  7982                           ; 1 bytes @ 0x0
  7983                           
  7984     0070                     ?_TMR2_Initialize:	
  7985                           ; 1 bytes @ 0x0
  7986                           
  7987     0070                     ?_TMR4_Initialize:	
  7988                           ; 1 bytes @ 0x0
  7989                           
  7990     0070                     ?_TMR6_Initialize:	
  7991                           ; 1 bytes @ 0x0
  7992                           
  7993     0070                     ?_EUSART_Initialize:	
  7994                           ; 1 bytes @ 0x0
  7995                           
  7996     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7997                           ; 1 bytes @ 0x0
  7998                           
  7999     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  8000                           ; 1 bytes @ 0x0
  8001                           
  8002     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  8003                           ; 1 bytes @ 0x0
  8004                           
  8005     0070                     ?_EUSART_Read:	
  8006                           ; 1 bytes @ 0x0
  8007                           
  8008     0070                     ?_EUSART_IsRxReady:	
  8009                           ; 1 bytes @ 0x0
  8010                           
  8011     0070                     ?_EUSART_IsTxReady:	
  8012                           ; 1 bytes @ 0x0
  8013                           
  8014     0070                     ?_EUSART_ReceiveISR:	
  8015                           ; 1 bytes @ 0x0
  8016                           
  8017     0070                     ?_EUSART_TransmitISR:	
  8018                           ; 1 bytes @ 0x0
  8019                           
  8020     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  8021                           ; 1 bytes @ 0x0
  8022                           
  8023     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  8024                           ; 1 bytes @ 0x0
  8025                           
  8026     0070                     ?_initAdcMultiplexer:	
  8027                           ; 1 bytes @ 0x0
  8028                           
  8029     0070                     ?_controller:	
  8030                           ; 1 bytes @ 0x0
  8031                           
  8032     0070                     ?_initLedstrip:	
  8033                           ; 1 bytes @ 0x0
  8034                           
  8035     0070                     ?_uartHandler:	
  8036                           ; 1 bytes @ 0x0
  8037                           
  8038     0070                     ?_check_push_up:	
  8039                           ; 1 bytes @ 0x0
  8040                           
  8041     0070                     ?_printLogs:	
  8042                           ; 1 bytes @ 0x0
  8043                           
  8044     0070                     ?_ADC_Initialize:	
  8045                           ; 1 bytes @ 0x0
  8046                           
  8047     0070                     ?_ADC_SelectChannel:	
  8048                           ; 1 bytes @ 0x0
  8049                           
  8050     0070                     ?_ADC_ISR:	
  8051                           ; 1 bytes @ 0x0
  8052                           
  8053     0070                     ?_pwm_fan_Initialize:	
  8054                           ; 1 bytes @ 0x0
  8055                           
  8056     0070                     ?_pwm_fan_LoadDutyValue:	
  8057                           ; 1 bytes @ 0x0
  8058                           
  8059     0070                     ?_PWM_buzzer_Initialize:	
  8060                           ; 1 bytes @ 0x0
  8061                           
  8062     0070                     ?_INTERRUPT_Initialize:	
  8063                           ; 1 bytes @ 0x0
  8064                           
  8065     0070                     ?_INTERRUPT_InterruptManager:	
  8066                           ; 1 bytes @ 0x0
  8067                           
  8068     0070                     ?_CLOCK_Initialize:	
  8069                           ; 1 bytes @ 0x0
  8070                           
  8071     0070                     ?_PIN_MANAGER_Initialize:	
  8072                           ; 1 bytes @ 0x0
  8073                           
  8074     0070                     ?_SYSTEM_Initialize:	
  8075                           ; 1 bytes @ 0x0
  8076                           
  8077     0070                     ?_TMR6_Tasks:	
  8078                           ; 1 bytes @ 0x0
  8079                           
  8080     0070                     ?_putch:	
  8081                           ; 1 bytes @ 0x0
  8082                           
  8083     0070                     ?_adcConversionDoneHandler:	
  8084                           ; 1 bytes @ 0x0
  8085                           
  8086     0070                     ?_sendLedstripStartFrame:	
  8087                           ; 1 bytes @ 0x0
  8088                           
  8089     0070                     ?_sendLedstripEndFrame:	
  8090                           ; 1 bytes @ 0x0
  8091                           
  8092     0070                     ?_counter_led:	
  8093                           ; 1 bytes @ 0x0
  8094                           
  8095     0070                     ?_updateLedstripAnimation:	
  8096                           ; 1 bytes @ 0x0
  8097                           
  8098     0070                     ?i1_ADC_SelectChannel:	
  8099                           ; 1 bytes @ 0x0
  8100                           
  8101     0070                     ?_ADC_GetConversionResult:	
  8102                           ; 1 bytes @ 0x0
  8103                           
  8104     0070                     ?_main:	
  8105                           ; 2 bytes @ 0x0
  8106                           
  8107     0070                     ?_getHoogtesensor:	
  8108                           ; 2 bytes @ 0x0
  8109                           
  8110     0070                     ?i1__Umul8_16:	
  8111                           ; 2 bytes @ 0x0
  8112                           
  8113     0070                     ?i1___xxtofl:	
  8114                           ; 2 bytes @ 0x0
  8115                           
  8116     0070                     EUSART_ReceiveISR@regValue:	
  8117                           ; 4 bytes @ 0x0
  8118                           
  8119     0070                     EUSART_TransmitISR@tempTxTail:	
  8120                           ; 1 bytes @ 0x0
  8121                           
  8122     0070                     i1__Umul8_16@multiplicand:	
  8123                           ; 1 bytes @ 0x0
  8124                           
  8125     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  8126                           ; 1 bytes @ 0x0
  8127                           
  8128     0070                     i1___xxtofl@val:	
  8129                           ; 2 bytes @ 0x0
  8130                           
  8131     0070                     ??_ADC_DefaultInterruptHandler:	
  8132                           ; 4 bytes @ 0x0
  8133                           
  8134     0070                     ??_TMR2_ISR:	
  8135                           ; 1 bytes @ 0x0
  8136                           
  8137     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  8138                           ; 1 bytes @ 0x0
  8139                           
  8140     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  8141                           ; 1 bytes @ 0x0
  8142                           
  8143     0070                     ??_EUSART_ReceiveISR:	
  8144                           ; 1 bytes @ 0x0
  8145                           
  8146     0070                     ??_EUSART_TransmitISR:	
  8147                           ; 1 bytes @ 0x0
  8148                           
  8149     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  8150                           ; 1 bytes @ 0x0
  8151                           
  8152     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  8153                           ; 1 bytes @ 0x0
  8154                           
  8155     0070                     ??i1_ADC_SelectChannel:	
  8156                           ; 1 bytes @ 0x0
  8157                           
  8158                           
  8159                           ; 1 bytes @ 0x0
  8160     0070                     	ds	1
  8161     0071                     EUSART_ReceiveISR@tempRxHead:
  8162     0071                     i1ADC_SelectChannel@channel:	
  8163                           ; 1 bytes @ 0x1
  8164                           
  8165                           
  8166                           ; 1 bytes @ 0x1
  8167     0071                     	ds	1
  8168     0072                     ??_ADC_GetConversionResult:
  8169     0072                     ??_pwm_fan_LoadDutyValue:	
  8170                           ; 1 bytes @ 0x2
  8171                           
  8172     0072                     ??_adcConversionDoneHandler:	
  8173                           ; 1 bytes @ 0x2
  8174                           
  8175     0072                     ??_getHoogtesensor:	
  8176                           ; 1 bytes @ 0x2
  8177                           
  8178     0072                     ??i1__Umul8_16:	
  8179                           ; 1 bytes @ 0x2
  8180                           
  8181                           
  8182                           ; 1 bytes @ 0x2
  8183     0072                     	ds	2
  8184     0074                     i1__Umul8_16@product:
  8185     0074                     ??_ADC_ISR:	
  8186                           ; 2 bytes @ 0x4
  8187                           
  8188     0074                     ??i1___xxtofl:	
  8189                           ; 1 bytes @ 0x4
  8190                           
  8191                           
  8192                           ; 1 bytes @ 0x4
  8193     0074                     	ds	2
  8194     0076                     i1__Umul8_16@word_mpld:
  8195                           
  8196                           ; 2 bytes @ 0x6
  8197     0076                     	ds	2
  8198     0078                     i1__Umul8_16@multiplier:
  8199     0078                     i1___xxtofl@sign:	
  8200                           ; 1 bytes @ 0x8
  8201                           
  8202                           
  8203                           ; 1 bytes @ 0x8
  8204     0078                     	ds	1
  8205     0079                     i1___xxtofl@exp:
  8206                           
  8207                           ; 1 bytes @ 0x9
  8208     0079                     	ds	1
  8209     007A                     i1___xxtofl@arg:
  8210                           
  8211                           ; 4 bytes @ 0xA
  8212     007A                     	ds	4
  8213     007E                     ??_TMR4_ISR:
  8214     007E                     ??_INTERRUPT_InterruptManager:	
  8215                           ; 1 bytes @ 0xE
  8216                           
  8217                           
  8218                           	psect	cstackBANK0
  8219     0020                     __pcstackBANK0:	
  8220                           ; 1 bytes @ 0xE
  8221                           
  8222     0020                     ?i1___flmul:
  8223     0020                     i1___flmul@b:	
  8224                           ; 4 bytes @ 0x0
  8225                           
  8226                           
  8227                           ; 4 bytes @ 0x0
  8228     0020                     	ds	4
  8229     0024                     i1___flmul@a:
  8230                           
  8231                           ; 4 bytes @ 0x4
  8232     0024                     	ds	4
  8233     0028                     ??i1___flmul:
  8234                           
  8235                           ; 1 bytes @ 0x8
  8236     0028                     	ds	5
  8237     002D                     i1___flmul@sign:
  8238                           
  8239                           ; 1 bytes @ 0xD
  8240     002D                     	ds	1
  8241     002E                     i1___flmul@grs:
  8242                           
  8243                           ; 4 bytes @ 0xE
  8244     002E                     	ds	4
  8245     0032                     i1___flmul@aexp:
  8246                           
  8247                           ; 1 bytes @ 0x12
  8248     0032                     	ds	1
  8249     0033                     i1___flmul@bexp:
  8250                           
  8251                           ; 1 bytes @ 0x13
  8252     0033                     	ds	1
  8253     0034                     i1___flmul@prod:
  8254                           
  8255                           ; 4 bytes @ 0x14
  8256     0034                     	ds	4
  8257     0038                     i1___flmul@temp:
  8258                           
  8259                           ; 2 bytes @ 0x18
  8260     0038                     	ds	2
  8261     003A                     ?___fltol:
  8262     003A                     ?i1___fladd:	
  8263                           ; 4 bytes @ 0x1A
  8264                           
  8265     003A                     ___fltol@f1:	
  8266                           ; 4 bytes @ 0x1A
  8267                           
  8268     003A                     i1___fladd@b:	
  8269                           ; 4 bytes @ 0x1A
  8270                           
  8271                           
  8272                           ; 4 bytes @ 0x1A
  8273     003A                     	ds	4
  8274     003E                     i1___fladd@a:
  8275     003E                     ??___fltol:	
  8276                           ; 4 bytes @ 0x1E
  8277                           
  8278                           
  8279                           ; 1 bytes @ 0x1E
  8280     003E                     	ds	4
  8281     0042                     ___fltol@sign1:
  8282     0042                     ??i1___fladd:	
  8283                           ; 1 bytes @ 0x22
  8284                           
  8285                           
  8286                           ; 1 bytes @ 0x22
  8287     0042                     	ds	1
  8288     0043                     ___fltol@exp1:
  8289                           
  8290                           ; 1 bytes @ 0x23
  8291     0043                     	ds	7
  8292     004A                     i1___fladd@signs:
  8293                           
  8294                           ; 1 bytes @ 0x2A
  8295     004A                     	ds	1
  8296     004B                     i1___fladd@aexp:
  8297                           
  8298                           ; 1 bytes @ 0x2B
  8299     004B                     	ds	1
  8300     004C                     i1___fladd@bexp:
  8301                           
  8302                           ; 1 bytes @ 0x2C
  8303     004C                     	ds	1
  8304     004D                     i1___fladd@grs:
  8305                           
  8306                           ; 1 bytes @ 0x2D
  8307     004D                     	ds	1
  8308     004E                     ??_controller:
  8309                           
  8310                           ; 1 bytes @ 0x2E
  8311     004E                     	ds	1
  8312     004F                     controller@P:
  8313                           
  8314                           ; 2 bytes @ 0x2F
  8315     004F                     	ds	2
  8316     0051                     controller@I:
  8317                           
  8318                           ; 2 bytes @ 0x31
  8319     0051                     	ds	2
  8320     0053                     controller@error:
  8321                           
  8322                           ; 2 bytes @ 0x33
  8323     0053                     	ds	2
  8324                           
  8325                           	psect	maintext
  8326     10D8                     __pmaintext:	
  8327 ;;
  8328 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8329 ;;
  8330 ;; *************** function _main *****************
  8331 ;; Defined at:
  8332 ;;		line 52 in file "main.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  2  808[None  ] int 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : B1F/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;Total ram usage:        1 bytes
  8351 ;; Hardware stack levels required when called: 16
  8352 ;; This function calls:
  8353 ;;		_SYSTEM_Initialize
  8354 ;;		_TMR4_PeriodMatchCallbackRegister
  8355 ;;		_TMR6_Tasks
  8356 ;;		_check_push_up
  8357 ;;		_initAdcMultiplexer
  8358 ;;		_initLedstrip
  8359 ;;		_printLogs
  8360 ;;		_uartHandler
  8361 ;; This function is called by:
  8362 ;;		Startup code after reset
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366     10D8                     _main:	
  8367                           ;psect for function _main
  8368                           
  8369     10D8                     l6217:	
  8370                           ;incstack = 0
  8371                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8372                           
  8373                           
  8374                           ;main.c: 54:     SYSTEM_Initialize();
  8375     10D8  319F  27DE  3190   	fcall	_SYSTEM_Initialize
  8376     10DB                     l6219:
  8377                           
  8378                           ;main.c: 60:     (INTCONbits.GIE = 1);
  8379     10DB  178B               	bsf	11,7	;volatile
  8380     10DC                     l6221:
  8381                           
  8382                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  8383     10DC  170B               	bsf	11,6	;volatile
  8384                           
  8385                           ;main.c: 71:     initAdcMultiplexer();
  8386     10DD  3188  2000  3190   	fcall	_initAdcMultiplexer
  8387                           
  8388                           ;main.c: 72:     TMR4_PeriodMatchCallbackRegister(controller);
  8389     10E0  30D6               	movlw	low _controller
  8390     10E1  0021               	movlb	1	; select bank1
  8391     10E2  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  8392     10E3  3009               	movlw	high _controller
  8393     10E4  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  8394     10E5  319D  256C  3190   	fcall	_TMR4_PeriodMatchCallbackRegister
  8395     10E8                     l6223:
  8396                           
  8397                           ;main.c: 73:     initLedstrip();
  8398     10E8  319E  2608  3190   	fcall	_initLedstrip
  8399     10EB                     l6225:
  8400                           
  8401                           ;main.c: 76:     {;main.c: 77:         uartHandler();
  8402     10EB  3196  26C2  3190   	fcall	_uartHandler
  8403     10EE                     l6227:
  8404                           
  8405                           ;main.c: 79:         check_push_up();
  8406     10EE  3195  25D4  3190   	fcall	_check_push_up
  8407     10F1                     l6229:
  8408                           
  8409                           ;main.c: 81:         _delay((unsigned long)((10)*(32000000U/4000.0)));
  8410     10F1  3068               	movlw	104
  8411     10F2  0021               	movlb	1	; select bank1
  8412     10F3  00EC               	movwf	??_main^(0+128)
  8413     10F4  30E4               	movlw	228
  8414     10F5                     u7567:
  8415     10F5  0B89               	decfsz	9,f
  8416     10F6  28F5               	goto	u7567
  8417     10F7  0BEC               	decfsz	??_main^(0+128),f
  8418     10F8  28F5               	goto	u7567
  8419     10F9  0000               	nop
  8420     10FA                     l6231:
  8421                           
  8422                           ;main.c: 84:         printLogs();
  8423     10FA  3191  21B2  3190   	fcall	_printLogs
  8424     10FD                     l6233:
  8425                           
  8426                           ;main.c: 86:         TMR6_Tasks();
  8427     10FD  319E  26E7  3190   	fcall	_TMR6_Tasks
  8428     1100  28EB               	goto	l6225
  8429     1101  3180  2858         	ljmp	start
  8430     1103                     __end_of_main:
  8431                           
  8432                           	psect	text1
  8433     16C2                     __ptext1:	
  8434 ;; *************** function _uartHandler *****************
  8435 ;; Defined at:
  8436 ;;		line 97 in file "UART.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  str             1   75[BANK1 ] PTR unsigned char 
  8441 ;;		 -> line(20), 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;Total ram usage:        1 bytes
  8456 ;; Hardware stack levels used: 1
  8457 ;; Hardware stack levels required when called: 15
  8458 ;; This function calls:
  8459 ;;		_atoi
  8460 ;;		_printf
  8461 ;;		_readLine
  8462 ;;		_setKi
  8463 ;;		_setKp
  8464 ;;		_setSetpoint
  8465 ;;		_str2float
  8466 ;; This function is called by:
  8467 ;;		_main
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471     16C2                     _uartHandler:	
  8472                           ;psect for function _uartHandler
  8473                           
  8474     16C2                     l6103:	
  8475                           ;incstack = 0
  8476                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8477                           
  8478                           
  8479                           ;UART.c: 98:     char *str = readLine();
  8480     16C2  3193  2386  3196   	fcall	_readLine
  8481     16C5  0021               	movlb	1	; select bank1
  8482     16C6  00EB               	movwf	uartHandler@str^(0+128)
  8483                           
  8484                           ;UART.c: 99:     switch (*str) {
  8485     16C7  2F3A               	goto	l6123
  8486     16C8                     l6105:
  8487                           
  8488                           ;UART.c: 105:             setSetpoint((uint16_t) atoi(str + 1));
  8489     16C8  086B               	movf	uartHandler@str^(0+128),w
  8490     16C9  3E01               	addlw	1
  8491     16CA  00A6               	movwf	atoi@s^(0+128)
  8492     16CB  3188  200D  3196   	fcall	_atoi
  8493     16CE  0021               	movlb	1	; select bank1
  8494     16CF  0827               	movf	(?_atoi+1)^(0+128),w
  8495     16D0  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8496     16D1  0826               	movf	?_atoi^(0+128),w
  8497     16D2  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  8498     16D3  319D  2587  3196   	fcall	_setSetpoint
  8499     16D6                     l6107:
  8500                           
  8501                           ;UART.c: 106:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  8502     16D6  304C               	movlw	low (STR_7| (0+32768))
  8503     16D7  0021               	movlb	1	; select bank1
  8504     16D8  00E1               	movwf	printf@fmt^(0+128)
  8505     16D9  3098               	movlw	high (STR_7| (0+32768))
  8506     16DA  00E2               	movwf	(printf@fmt^(0+128)+1)
  8507     16DB  086B               	movf	uartHandler@str^(0+128),w
  8508     16DC  3E01               	addlw	1
  8509     16DD  00A6               	movwf	atoi@s^(0+128)
  8510     16DE  3188  200D  3196   	fcall	_atoi
  8511     16E1  0021               	movlb	1	; select bank1
  8512     16E2  0827               	movf	(?_atoi+1)^(0+128),w
  8513     16E3  00E4               	movwf	((?_printf+1)^(0+128)+2)
  8514     16E4  0826               	movf	?_atoi^(0+128),w
  8515     16E5  00E3               	movwf	(?_printf^(0+128)+2)
  8516     16E6  319E  2670  3196   	fcall	_printf
  8517                           
  8518                           ;UART.c: 107:             break;
  8519     16E9  2F5B               	goto	l926
  8520     16EA                     l6109:
  8521                           
  8522                           ;UART.c: 111:             setKp(str2float(str + 1));
  8523     16EA  086B               	movf	uartHandler@str^(0+128),w
  8524     16EB  3E01               	addlw	1
  8525     16EC  00C3               	movwf	str2float@str^(0+128)
  8526     16ED  3189  212B  3196   	fcall	_str2float
  8527     16F0  0021               	movlb	1	; select bank1
  8528     16F1  0846               	movf	(?_str2float+3)^(0+128),w
  8529     16F2  00D2               	movwf	(setKp@new_kp+3)^(0+128)
  8530     16F3  0845               	movf	(?_str2float+2)^(0+128),w
  8531     16F4  00D1               	movwf	(setKp@new_kp+2)^(0+128)
  8532     16F5  0844               	movf	(?_str2float+1)^(0+128),w
  8533     16F6  00D0               	movwf	(setKp@new_kp+1)^(0+128)
  8534     16F7  0843               	movf	?_str2float^(0+128),w
  8535     16F8  00CF               	movwf	setKp@new_kp^(0+128)
  8536     16F9  319E  26C4  3196   	fcall	_setKp
  8537     16FC                     l6111:
  8538                           
  8539                           ;UART.c: 112:             printf("changed kp\r\n");
  8540     16FC  30BA               	movlw	low (STR_8| (0+32768))
  8541     16FD  0021               	movlb	1	; select bank1
  8542     16FE  00E1               	movwf	printf@fmt^(0+128)
  8543     16FF  3098               	movlw	high (STR_8| (0+32768))
  8544     1700  00E2               	movwf	(printf@fmt^(0+128)+1)
  8545     1701  319E  2670  3196   	fcall	_printf
  8546                           
  8547                           ;UART.c: 113:             break;
  8548     1704  2F5B               	goto	l926
  8549     1705                     l6113:
  8550                           
  8551                           ;UART.c: 116:             setKi(str2float(str + 1));
  8552     1705  086B               	movf	uartHandler@str^(0+128),w
  8553     1706  3E01               	addlw	1
  8554     1707  00C3               	movwf	str2float@str^(0+128)
  8555     1708  3189  212B  3196   	fcall	_str2float
  8556     170B  0021               	movlb	1	; select bank1
  8557     170C  0846               	movf	(?_str2float+3)^(0+128),w
  8558     170D  00D2               	movwf	(setKi@new_ki+3)^(0+128)
  8559     170E  0845               	movf	(?_str2float+2)^(0+128),w
  8560     170F  00D1               	movwf	(setKi@new_ki+2)^(0+128)
  8561     1710  0844               	movf	(?_str2float+1)^(0+128),w
  8562     1711  00D0               	movwf	(setKi@new_ki+1)^(0+128)
  8563     1712  0843               	movf	?_str2float^(0+128),w
  8564     1713  00CF               	movwf	setKi@new_ki^(0+128)
  8565     1714  319E  26B3  3196   	fcall	_setKi
  8566     1717                     l6115:
  8567                           
  8568                           ;UART.c: 117:             printf("changed ki\r\n");
  8569     1717  30AD               	movlw	low (STR_9| (0+32768))
  8570     1718  0021               	movlb	1	; select bank1
  8571     1719  00E1               	movwf	printf@fmt^(0+128)
  8572     171A  3098               	movlw	high (STR_9| (0+32768))
  8573     171B  00E2               	movwf	(printf@fmt^(0+128)+1)
  8574     171C  319E  2670  3196   	fcall	_printf
  8575                           
  8576                           ;UART.c: 118:             break;
  8577     171F  2F5B               	goto	l926
  8578     1720                     l6117:
  8579                           
  8580                           ;UART.c: 121:             mustPrintLogs = !mustPrintLogs;
  8581     1720  0020               	movlb	0	; select bank0
  8582     1721  086D               	movf	_mustPrintLogs,w
  8583     1722  1903               	btfsc	3,2
  8584     1723  2F25               	goto	u7241
  8585     1724  2F27               	goto	u7240
  8586     1725                     u7241:
  8587     1725  3001               	movlw	1
  8588     1726  2F28               	goto	u7250
  8589     1727                     u7240:
  8590     1727  3000               	movlw	0
  8591     1728                     u7250:
  8592     1728  00ED               	movwf	_mustPrintLogs
  8593     1729                     l6119:
  8594                           
  8595                           ;UART.c: 122:             printf("logs toggled\r\n");
  8596     1729  309E               	movlw	low (STR_10| (0+32768))
  8597     172A  0021               	movlb	1	; select bank1
  8598     172B  00E1               	movwf	printf@fmt^(0+128)
  8599     172C  3098               	movlw	high (STR_10| (0+32768))
  8600     172D  00E2               	movwf	(printf@fmt^(0+128)+1)
  8601     172E  319E  2670  3196   	fcall	_printf
  8602                           
  8603                           ;UART.c: 123:             break;
  8604     1731  2F5B               	goto	l926
  8605     1732                     l6121:
  8606                           
  8607                           ;UART.c: 127:             printf("Unkown command\r\n");
  8608     1732  307D               	movlw	low (STR_11| (0+32768))
  8609     1733  00E1               	movwf	printf@fmt^(0+128)
  8610     1734  3098               	movlw	high (STR_11| (0+32768))
  8611     1735  00E2               	movwf	(printf@fmt^(0+128)+1)
  8612     1736  319E  2670  3196   	fcall	_printf
  8613                           
  8614                           ;UART.c: 128:     };
  8615     1739  2F5B               	goto	l926
  8616     173A                     l6123:
  8617     173A  086B               	movf	uartHandler@str^(0+128),w
  8618     173B  0086               	movwf	6
  8619     173C  3001               	movlw	1	; select bank2/3
  8620     173D  0087               	movwf	7
  8621     173E  0801               	movf	1,w
  8622                           
  8623                           ; Switch size 1, requested type "simple"
  8624                           ; Number of cases is 9, Range of values is 0 to 115
  8625                           ; switch strategies available:
  8626                           ; Name         Instructions Cycles
  8627                           ; simple_byte           28    15 (average)
  8628                           ; direct_byte          238     6 (fixed)
  8629                           ; jumptable            260     6 (fixed)
  8630                           ;	Chosen strategy is simple_byte
  8631     173F  3A00               	xorlw	0	; case 0
  8632     1740  1903               	skipnz
  8633     1741  2F5B               	goto	l926
  8634     1742  3A49               	xorlw	73	; case 73
  8635     1743  1903               	skipnz
  8636     1744  2F05               	goto	l6113
  8637     1745  3A05               	xorlw	5	; case 76
  8638     1746  1903               	skipnz
  8639     1747  2F20               	goto	l6117
  8640     1748  3A1C               	xorlw	28	; case 80
  8641     1749  1903               	skipnz
  8642     174A  2EEA               	goto	l6109
  8643     174B  3A03               	xorlw	3	; case 83
  8644     174C  1903               	skipnz
  8645     174D  2EC8               	goto	l6105
  8646     174E  3A3A               	xorlw	58	; case 105
  8647     174F  1903               	skipnz
  8648     1750  2F05               	goto	l6113
  8649     1751  3A05               	xorlw	5	; case 108
  8650     1752  1903               	skipnz
  8651     1753  2F20               	goto	l6117
  8652     1754  3A1C               	xorlw	28	; case 112
  8653     1755  1903               	skipnz
  8654     1756  2EEA               	goto	l6109
  8655     1757  3A03               	xorlw	3	; case 115
  8656     1758  1903               	skipnz
  8657     1759  2EC8               	goto	l6105
  8658     175A  2F32               	goto	l6121
  8659     175B                     l926:
  8660     175B  0008               	return
  8661     175C                     __end_of_uartHandler:
  8662                           
  8663                           	psect	text2
  8664     092B                     __ptext2:	
  8665 ;; *************** function _str2float *****************
  8666 ;; Defined at:
  8667 ;;		line 25 in file "UART.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  str             1   35[BANK1 ] PTR unsigned char 
  8670 ;;		 -> line(20), 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  i               1   41[BANK1 ] unsigned char 
  8673 ;;  digit           1   46[BANK1 ] unsigned char 
  8674 ;;  number          4   42[BANK1 ] float 
  8675 ;;  multiplier      1   40[BANK1 ] unsigned char 
  8676 ;;  decimal_sepa    1   39[BANK1 ] _Bool 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  4   35[BANK1 ] float 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8686 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;Total ram usage:       12 bytes
  8691 ;; Hardware stack levels used: 1
  8692 ;; Hardware stack levels required when called: 7
  8693 ;; This function calls:
  8694 ;;		___fladd
  8695 ;;		___fldiv
  8696 ;;		___flmul
  8697 ;;		___xxtofl
  8698 ;; This function is called by:
  8699 ;;		_uartHandler
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703     092B                     _str2float:	
  8704                           ;psect for function _str2float
  8705                           
  8706     092B                     l5857:	
  8707                           ;incstack = 0
  8708                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8709                           
  8710                           
  8711                           ;UART.c: 26:     float number = 0;
  8712     092B  3000               	movlw	0
  8713     092C  0021               	movlb	1	; select bank1
  8714     092D  00CD               	movwf	(str2float@number+3)^(0+128)
  8715     092E  3000               	movlw	0
  8716     092F  00CC               	movwf	(str2float@number+2)^(0+128)
  8717     0930  3000               	movlw	0
  8718     0931  00CB               	movwf	(str2float@number+1)^(0+128)
  8719     0932  3000               	movlw	0
  8720     0933  00CA               	movwf	str2float@number^(0+128)
  8721     0934                     l5859:
  8722                           
  8723                           ;UART.c: 27:     _Bool decimal_separator = 0;
  8724     0934  01C7               	clrf	str2float@decimal_separator^(0+128)
  8725     0935                     l5861:
  8726                           
  8727                           ;UART.c: 30:         char digit = *str++;
  8728     0935  0843               	movf	str2float@str^(0+128),w
  8729     0936  0086               	movwf	6
  8730     0937  3001               	movlw	1	; select bank2/3
  8731     0938  0087               	movwf	7
  8732     0939  0801               	movf	1,w
  8733     093A  00CE               	movwf	str2float@digit^(0+128)
  8734     093B                     l5863:
  8735     093B  3001               	movlw	1
  8736     093C  07C3               	addwf	str2float@str^(0+128),f
  8737     093D                     l5865:
  8738                           
  8739                           ;UART.c: 31:         if ('0' <= digit && digit <= '9') {
  8740     093D  3030               	movlw	48
  8741     093E  024E               	subwf	str2float@digit^(0+128),w
  8742     093F  1C03               	skipc
  8743     0940  2942               	goto	u6931
  8744     0941  2943               	goto	u6930
  8745     0942                     u6931:
  8746     0942  2992               	goto	l5873
  8747     0943                     u6930:
  8748     0943                     l5867:
  8749     0943  303A               	movlw	58
  8750     0944  024E               	subwf	str2float@digit^(0+128),w
  8751     0945  1803               	skipnc
  8752     0946  2948               	goto	u6941
  8753     0947  2949               	goto	u6940
  8754     0948                     u6941:
  8755     0948  2992               	goto	l5873
  8756     0949                     u6940:
  8757     0949                     l5869:
  8758                           
  8759                           ;UART.c: 32:             number *= 10;
  8760     0949  3041               	movlw	65
  8761     094A  00AC               	movwf	(___flmul@b+3)^(0+128)
  8762     094B  3020               	movlw	32
  8763     094C  00AB               	movwf	(___flmul@b+2)^(0+128)
  8764     094D  3000               	movlw	0
  8765     094E  00AA               	movwf	(___flmul@b+1)^(0+128)
  8766     094F  3000               	movlw	0
  8767     0950  00A9               	movwf	___flmul@b^(0+128)
  8768     0951  084D               	movf	(str2float@number+3)^(0+128),w
  8769     0952  00B0               	movwf	(___flmul@a+3)^(0+128)
  8770     0953  084C               	movf	(str2float@number+2)^(0+128),w
  8771     0954  00AF               	movwf	(___flmul@a+2)^(0+128)
  8772     0955  084B               	movf	(str2float@number+1)^(0+128),w
  8773     0956  00AE               	movwf	(___flmul@a+1)^(0+128)
  8774     0957  084A               	movf	str2float@number^(0+128),w
  8775     0958  00AD               	movwf	___flmul@a^(0+128)
  8776     0959  3180  2091  3189   	fcall	___flmul
  8777     095C  0021               	movlb	1	; select bank1
  8778     095D  082C               	movf	(?___flmul+3)^(0+128),w
  8779     095E  00CD               	movwf	(str2float@number+3)^(0+128)
  8780     095F  082B               	movf	(?___flmul+2)^(0+128),w
  8781     0960  00CC               	movwf	(str2float@number+2)^(0+128)
  8782     0961  082A               	movf	(?___flmul+1)^(0+128),w
  8783     0962  00CB               	movwf	(str2float@number+1)^(0+128)
  8784     0963  0829               	movf	?___flmul^(0+128),w
  8785     0964  00CA               	movwf	str2float@number^(0+128)
  8786                           
  8787                           ;UART.c: 33:             number += digit - '0';
  8788     0965  084E               	movf	str2float@digit^(0+128),w
  8789     0966  3ED0               	addlw	208
  8790     0967  00A0               	movwf	___xxtofl@val^(0+128)
  8791     0968  30FF               	movlw	255
  8792     0969  1803               	skipnc
  8793     096A  3000               	movlw	0
  8794     096B  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8795     096C  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8796     096D  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8797     096E  3000               	movlw	0
  8798     096F  3188  2086  3189   	fcall	___xxtofl
  8799     0972  0021               	movlb	1	; select bank1
  8800     0973  0823               	movf	(?___xxtofl+3)^(0+128),w
  8801     0974  00B1               	movwf	(___fladd@b+3)^(0+128)
  8802     0975  0822               	movf	(?___xxtofl+2)^(0+128),w
  8803     0976  00B0               	movwf	(___fladd@b+2)^(0+128)
  8804     0977  0821               	movf	(?___xxtofl+1)^(0+128),w
  8805     0978  00AF               	movwf	(___fladd@b+1)^(0+128)
  8806     0979  0820               	movf	?___xxtofl^(0+128),w
  8807     097A  00AE               	movwf	___fladd@b^(0+128)
  8808     097B  084D               	movf	(str2float@number+3)^(0+128),w
  8809     097C  00B5               	movwf	(___fladd@a+3)^(0+128)
  8810     097D  084C               	movf	(str2float@number+2)^(0+128),w
  8811     097E  00B4               	movwf	(___fladd@a+2)^(0+128)
  8812     097F  084B               	movf	(str2float@number+1)^(0+128),w
  8813     0980  00B3               	movwf	(___fladd@a+1)^(0+128)
  8814     0981  084A               	movf	str2float@number^(0+128),w
  8815     0982  00B2               	movwf	___fladd@a^(0+128)
  8816     0983  3185  2507  3189   	fcall	___fladd
  8817     0986  0021               	movlb	1	; select bank1
  8818     0987  0831               	movf	(?___fladd+3)^(0+128),w
  8819     0988  00CD               	movwf	(str2float@number+3)^(0+128)
  8820     0989  0830               	movf	(?___fladd+2)^(0+128),w
  8821     098A  00CC               	movwf	(str2float@number+2)^(0+128)
  8822     098B  082F               	movf	(?___fladd+1)^(0+128),w
  8823     098C  00CB               	movwf	(str2float@number+1)^(0+128)
  8824     098D  082E               	movf	?___fladd^(0+128),w
  8825     098E  00CA               	movwf	str2float@number^(0+128)
  8826     098F                     l5871:
  8827                           
  8828                           ;UART.c: 34:             multiplier++;
  8829     098F  3001               	movlw	1
  8830     0990  07C8               	addwf	str2float@multiplier^(0+128),f
  8831                           
  8832                           ;UART.c: 35:         } else if (digit == ',' || digit == '.') {
  8833     0991  2935               	goto	l5861
  8834     0992                     l5873:
  8835     0992  302C               	movlw	44
  8836     0993  064E               	xorwf	str2float@digit^(0+128),w
  8837     0994  1903               	btfsc	3,2
  8838     0995  2997               	goto	u6951
  8839     0996  2998               	goto	u6950
  8840     0997                     u6951:
  8841     0997  299E               	goto	l881
  8842     0998                     u6950:
  8843     0998                     l5875:
  8844     0998  302E               	movlw	46
  8845     0999  064E               	xorwf	str2float@digit^(0+128),w
  8846     099A  1D03               	btfss	3,2
  8847     099B  299D               	goto	u6961
  8848     099C  299E               	goto	u6960
  8849     099D                     u6961:
  8850     099D  29A2               	goto	l5879
  8851     099E                     u6960:
  8852     099E                     l881:
  8853                           
  8854                           ;UART.c: 36:             decimal_separator = 1;
  8855     099E  3001               	movlw	1
  8856     099F  00C7               	movwf	str2float@decimal_separator^(0+128)
  8857     09A0                     l5877:
  8858                           
  8859                           ;UART.c: 37:             multiplier = 0;
  8860     09A0  01C8               	clrf	str2float@multiplier^(0+128)
  8861                           
  8862                           ;UART.c: 38:         } else {
  8863     09A1  2935               	goto	l5861
  8864     09A2                     l5879:
  8865                           
  8866                           ;UART.c: 43:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8867     09A2  01C9               	clrf	str2float@i^(0+128)
  8868     09A3  29C2               	goto	l5885
  8869     09A4                     l5881:
  8870                           
  8871                           ;UART.c: 44:         number /= 10;
  8872     09A4  3041               	movlw	65
  8873     09A5  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8874     09A6  3020               	movlw	32
  8875     09A7  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8876     09A8  3000               	movlw	0
  8877     09A9  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8878     09AA  3000               	movlw	0
  8879     09AB  00A0               	movwf	___fldiv@a^(0+128)
  8880     09AC  084D               	movf	(str2float@number+3)^(0+128),w
  8881     09AD  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8882     09AE  084C               	movf	(str2float@number+2)^(0+128),w
  8883     09AF  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8884     09B0  084B               	movf	(str2float@number+1)^(0+128),w
  8885     09B1  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8886     09B2  084A               	movf	str2float@number^(0+128),w
  8887     09B3  00A4               	movwf	___fldiv@b^(0+128)
  8888     09B4  318C  2450  3189   	fcall	___fldiv
  8889     09B7  0021               	movlb	1	; select bank1
  8890     09B8  0823               	movf	(?___fldiv+3)^(0+128),w
  8891     09B9  00CD               	movwf	(str2float@number+3)^(0+128)
  8892     09BA  0822               	movf	(?___fldiv+2)^(0+128),w
  8893     09BB  00CC               	movwf	(str2float@number+2)^(0+128)
  8894     09BC  0821               	movf	(?___fldiv+1)^(0+128),w
  8895     09BD  00CB               	movwf	(str2float@number+1)^(0+128)
  8896     09BE  0820               	movf	?___fldiv^(0+128),w
  8897     09BF  00CA               	movwf	str2float@number^(0+128)
  8898     09C0                     l5883:
  8899                           
  8900                           ;UART.c: 45:     }
  8901     09C0  3001               	movlw	1
  8902     09C1  07C9               	addwf	str2float@i^(0+128),f
  8903     09C2                     l5885:
  8904     09C2  0847               	movf	str2float@decimal_separator^(0+128),w
  8905     09C3  1903               	btfsc	3,2
  8906     09C4  29C6               	goto	u6971
  8907     09C5  29C7               	goto	u6970
  8908     09C6                     u6971:
  8909     09C6  29CD               	goto	l5889
  8910     09C7                     u6970:
  8911     09C7                     l5887:
  8912     09C7  0848               	movf	str2float@multiplier^(0+128),w
  8913     09C8  0249               	subwf	str2float@i^(0+128),w
  8914     09C9  1C03               	skipc
  8915     09CA  29CC               	goto	u6981
  8916     09CB  29CD               	goto	u6980
  8917     09CC                     u6981:
  8918     09CC  29A4               	goto	l5881
  8919     09CD                     u6980:
  8920     09CD                     l5889:
  8921                           
  8922                           ;UART.c: 46:     return number;
  8923     09CD  084D               	movf	(str2float@number+3)^(0+128),w
  8924     09CE  00C6               	movwf	(?_str2float+3)^(0+128)
  8925     09CF  084C               	movf	(str2float@number+2)^(0+128),w
  8926     09D0  00C5               	movwf	(?_str2float+2)^(0+128)
  8927     09D1  084B               	movf	(str2float@number+1)^(0+128),w
  8928     09D2  00C4               	movwf	(?_str2float+1)^(0+128)
  8929     09D3  084A               	movf	str2float@number^(0+128),w
  8930     09D4  00C3               	movwf	?_str2float^(0+128)
  8931     09D5                     l890:
  8932     09D5  0008               	return
  8933     09D6                     __end_of_str2float:
  8934                           
  8935                           	psect	text3
  8936     0886                     __ptext3:	
  8937 ;; *************** function ___xxtofl *****************
  8938 ;; Defined at:
  8939 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;  sign            1    wreg     unsigned char 
  8942 ;;  val             4    0[BANK1 ] long 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;  sign            1    8[BANK1 ] unsigned char 
  8945 ;;  arg             4   10[BANK1 ] unsigned long 
  8946 ;;  exp             1    9[BANK1 ] unsigned char 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  4    0[BANK1 ] unsigned char 
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8956 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;Total ram usage:       14 bytes
  8961 ;; Hardware stack levels used: 1
  8962 ;; Hardware stack levels required when called: 5
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_str2float
  8967 ;;		_printFloat
  8968 ;;		_getLedNumber
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972     0886                     ___xxtofl:	
  8973                           ;psect for function ___xxtofl
  8974                           
  8975                           
  8976                           ;incstack = 0
  8977                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8978                           ;___xxtofl@sign stored from wreg
  8979     0886  0021               	movlb	1	; select bank1
  8980     0887  00A8               	movwf	___xxtofl@sign^(0+128)
  8981     0888                     l5245:
  8982     0888  0828               	movf	___xxtofl@sign^(0+128),w
  8983     0889  1903               	btfsc	3,2
  8984     088A  288C               	goto	u5901
  8985     088B  288D               	goto	u5900
  8986     088C                     u5901:
  8987     088C  28A1               	goto	l5251
  8988     088D                     u5900:
  8989     088D                     l5247:
  8990     088D  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  8991     088E  2890               	goto	u5911
  8992     088F  2891               	goto	u5910
  8993     0890                     u5911:
  8994     0890  28A1               	goto	l5251
  8995     0891                     u5910:
  8996     0891                     l5249:
  8997     0891  0920               	comf	___xxtofl@val^(0+128),w
  8998     0892  00AA               	movwf	___xxtofl@arg^(0+128)
  8999     0893  0921               	comf	(___xxtofl@val^(0+128)+1),w
  9000     0894  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  9001     0895  0922               	comf	(___xxtofl@val^(0+128)+2),w
  9002     0896  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  9003     0897  0923               	comf	(___xxtofl@val^(0+128)+3),w
  9004     0898  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  9005     0899  0AAA               	incf	___xxtofl@arg^(0+128),f
  9006     089A  1903               	skipnz
  9007     089B  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  9008     089C  1903               	skipnz
  9009     089D  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  9010     089E  1903               	skipnz
  9011     089F  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  9012     08A0  28A9               	goto	l1658
  9013     08A1                     l5251:
  9014     08A1  0823               	movf	(___xxtofl@val+3)^(0+128),w
  9015     08A2  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  9016     08A3  0822               	movf	(___xxtofl@val+2)^(0+128),w
  9017     08A4  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  9018     08A5  0821               	movf	(___xxtofl@val+1)^(0+128),w
  9019     08A6  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  9020     08A7  0820               	movf	___xxtofl@val^(0+128),w
  9021     08A8  00AA               	movwf	___xxtofl@arg^(0+128)
  9022     08A9                     l1658:
  9023     08A9  0823               	movf	(___xxtofl@val+3)^(0+128),w
  9024     08AA  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  9025     08AB  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  9026     08AC  0420               	iorwf	___xxtofl@val^(0+128),w
  9027     08AD  1D03               	skipz
  9028     08AE  28B0               	goto	u5921
  9029     08AF  28B1               	goto	u5920
  9030     08B0                     u5921:
  9031     08B0  28BA               	goto	l1659
  9032     08B1                     u5920:
  9033     08B1                     l5253:
  9034     08B1  3000               	movlw	0
  9035     08B2  00A3               	movwf	(?___xxtofl+3)^(0+128)
  9036     08B3  3000               	movlw	0
  9037     08B4  00A2               	movwf	(?___xxtofl+2)^(0+128)
  9038     08B5  3000               	movlw	0
  9039     08B6  00A1               	movwf	(?___xxtofl+1)^(0+128)
  9040     08B7  3000               	movlw	0
  9041     08B8  00A0               	movwf	?___xxtofl^(0+128)
  9042     08B9  292A               	goto	l1660
  9043     08BA                     l1659:
  9044     08BA  3096               	movlw	150
  9045     08BB  00A9               	movwf	___xxtofl@exp^(0+128)
  9046     08BC  28C6               	goto	l5259
  9047     08BD                     l5257:
  9048     08BD  3001               	movlw	1
  9049     08BE  07A9               	addwf	___xxtofl@exp^(0+128),f
  9050     08BF  3001               	movlw	1
  9051     08C0                     u5935:
  9052     08C0  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  9053     08C1  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  9054     08C2  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  9055     08C3  0CAA               	rrf	___xxtofl@arg^(0+128),f
  9056     08C4  0B89               	decfsz	9,f
  9057     08C5  28C0               	goto	u5935
  9058     08C6                     l5259:
  9059     08C6  30FE               	movlw	254
  9060     08C7  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  9061     08C8  1D03               	btfss	3,2
  9062     08C9  28CB               	goto	u5941
  9063     08CA  28CC               	goto	u5940
  9064     08CB                     u5941:
  9065     08CB  28BD               	goto	l5257
  9066     08CC                     u5940:
  9067     08CC  28DC               	goto	l5263
  9068     08CD                     l5261:
  9069     08CD  3001               	movlw	1
  9070     08CE  07A9               	addwf	___xxtofl@exp^(0+128),f
  9071     08CF  3001               	movlw	1
  9072     08D0  07AA               	addwf	___xxtofl@arg^(0+128),f
  9073     08D1  3000               	movlw	0
  9074     08D2  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
  9075     08D3  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
  9076     08D4  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
  9077     08D5  3001               	movlw	1
  9078     08D6                     u5955:
  9079     08D6  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  9080     08D7  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  9081     08D8  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  9082     08D9  0CAA               	rrf	___xxtofl@arg^(0+128),f
  9083     08DA  0B89               	decfsz	9,f
  9084     08DB  28D6               	goto	u5955
  9085     08DC                     l5263:
  9086     08DC  30FF               	movlw	255
  9087     08DD  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  9088     08DE  1D03               	btfss	3,2
  9089     08DF  28E1               	goto	u5961
  9090     08E0  28E2               	goto	u5960
  9091     08E1                     u5961:
  9092     08E1  28CD               	goto	l5261
  9093     08E2                     u5960:
  9094     08E2  28EC               	goto	l5267
  9095     08E3                     l5265:
  9096     08E3  3001               	movlw	1
  9097     08E4  02A9               	subwf	___xxtofl@exp^(0+128),f
  9098     08E5  3001               	movlw	1
  9099     08E6                     u5975:
  9100     08E6  35AA               	lslf	___xxtofl@arg^(0+128),f
  9101     08E7  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  9102     08E8  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  9103     08E9  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  9104     08EA  0B89               	decfsz	9,f
  9105     08EB  28E6               	goto	u5975
  9106     08EC                     l5267:
  9107     08EC  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  9108     08ED  28EF               	goto	u5981
  9109     08EE  28F0               	goto	u5980
  9110     08EF                     u5981:
  9111     08EF  28F6               	goto	l1671
  9112     08F0                     u5980:
  9113     08F0                     l5269:
  9114     08F0  3002               	movlw	2
  9115     08F1  0229               	subwf	___xxtofl@exp^(0+128),w
  9116     08F2  1803               	skipnc
  9117     08F3  28F5               	goto	u5991
  9118     08F4  28F6               	goto	u5990
  9119     08F5                     u5991:
  9120     08F5  28E3               	goto	l5265
  9121     08F6                     u5990:
  9122     08F6                     l1671:
  9123     08F6  1829               	btfsc	___xxtofl@exp^(0+128),0
  9124     08F7  28F9               	goto	u6001
  9125     08F8  28FA               	goto	u6000
  9126     08F9                     u6001:
  9127     08F9  2902               	goto	l1672
  9128     08FA                     u6000:
  9129     08FA                     l5271:
  9130     08FA  30FF               	movlw	255
  9131     08FB  05AA               	andwf	___xxtofl@arg^(0+128),f
  9132     08FC  30FF               	movlw	255
  9133     08FD  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  9134     08FE  307F               	movlw	127
  9135     08FF  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  9136     0900  30FF               	movlw	255
  9137     0901  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  9138     0902                     l1672:
  9139     0902  1003               	clrc
  9140     0903  0CA9               	rrf	___xxtofl@exp^(0+128),f
  9141     0904                     l5273:
  9142     0904  0829               	movf	___xxtofl@exp^(0+128),w
  9143     0905  00A4               	movwf	??___xxtofl^(0+128)
  9144     0906  01A5               	clrf	(??___xxtofl^(0+128)+1)
  9145     0907  01A6               	clrf	(??___xxtofl^(0+128)+2)
  9146     0908  01A7               	clrf	(??___xxtofl^(0+128)+3)
  9147     0909  3018               	movlw	24
  9148     090A                     u6015:
  9149     090A  35A4               	lslf	??___xxtofl^(0+128),f
  9150     090B  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  9151     090C  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  9152     090D  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  9153     090E                     u6010:
  9154     090E  0B89               	decfsz	9,f
  9155     090F  290A               	goto	u6015
  9156     0910  0824               	movf	??___xxtofl^(0+128),w
  9157     0911  04AA               	iorwf	___xxtofl@arg^(0+128),f
  9158     0912  0825               	movf	(??___xxtofl+1)^(0+128),w
  9159     0913  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  9160     0914  0826               	movf	(??___xxtofl+2)^(0+128),w
  9161     0915  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  9162     0916  0827               	movf	(??___xxtofl+3)^(0+128),w
  9163     0917  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  9164     0918                     l5275:
  9165     0918  0828               	movf	___xxtofl@sign^(0+128),w
  9166     0919  1903               	btfsc	3,2
  9167     091A  291C               	goto	u6021
  9168     091B  291D               	goto	u6020
  9169     091C                     u6021:
  9170     091C  2922               	goto	l5281
  9171     091D                     u6020:
  9172     091D                     l5277:
  9173     091D  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  9174     091E  2920               	goto	u6031
  9175     091F  2921               	goto	u6030
  9176     0920                     u6031:
  9177     0920  2922               	goto	l5281
  9178     0921                     u6030:
  9179     0921                     l5279:
  9180     0921  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  9181     0922                     l5281:
  9182     0922  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  9183     0923  00A3               	movwf	(?___xxtofl+3)^(0+128)
  9184     0924  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  9185     0925  00A2               	movwf	(?___xxtofl+2)^(0+128)
  9186     0926  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  9187     0927  00A1               	movwf	(?___xxtofl+1)^(0+128)
  9188     0928  082A               	movf	___xxtofl@arg^(0+128),w
  9189     0929  00A0               	movwf	?___xxtofl^(0+128)
  9190     092A                     l1660:
  9191     092A  0008               	return
  9192     092B                     __end_of___xxtofl:
  9193                           
  9194                           	psect	text4
  9195     0091                     __ptext4:	
  9196 ;; *************** function ___flmul *****************
  9197 ;; Defined at:
  9198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  b               4    9[BANK1 ] unsigned char 
  9201 ;;  a               4   13[BANK1 ] unsigned char 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  prod            4   29[BANK1 ] struct .
  9204 ;;  grs             4   23[BANK1 ] unsigned long 
  9205 ;;  temp            2   33[BANK1 ] struct .
  9206 ;;  bexp            1   28[BANK1 ] unsigned char 
  9207 ;;  aexp            1   27[BANK1 ] unsigned char 
  9208 ;;  sign            1   22[BANK1 ] unsigned char 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  4    9[BANK1 ] unsigned char 
  9211 ;; Registers used:
  9212 ;;		wreg, status,2, status,0, pclath, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9218 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;Total ram usage:       26 bytes
  9223 ;; Hardware stack levels used: 1
  9224 ;; Hardware stack levels required when called: 6
  9225 ;; This function calls:
  9226 ;;		__Umul8_16
  9227 ;; This function is called by:
  9228 ;;		_str2float
  9229 ;;		_printFloat
  9230 ;;		_getLedNumber
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234     0091                     ___flmul:	
  9235                           ;psect for function ___flmul
  9236                           
  9237     0091                     l5105:	
  9238                           ;incstack = 0
  9239                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9240                           
  9241     0091  0021               	movlb	1	; select bank1
  9242     0092  082C               	movf	(___flmul@b^(0+128)+3),w
  9243     0093  3980               	andlw	128
  9244     0094  00B6               	movwf	___flmul@sign^(0+128)
  9245     0095                     l5107:
  9246     0095  352C               	lslf	(___flmul@b^(0+128)+3),w
  9247     0096  00BC               	movwf	___flmul@bexp^(0+128)
  9248     0097                     l5109:
  9249     0097  1FAB               	btfss	(___flmul@b^(0+128)+2),7
  9250     0098  289A               	goto	u5631
  9251     0099  289B               	goto	u5630
  9252     009A                     u5631:
  9253     009A  289C               	goto	l5113
  9254     009B                     u5630:
  9255     009B                     l5111:
  9256     009B  143C               	bsf	___flmul@bexp^(0+128),0
  9257     009C                     l5113:
  9258     009C  083C               	movf	___flmul@bexp^(0+128),w
  9259     009D  1903               	btfsc	3,2
  9260     009E  28A0               	goto	u5641
  9261     009F  28A1               	goto	u5640
  9262     00A0                     u5641:
  9263     00A0  28B0               	goto	l5121
  9264     00A1                     u5640:
  9265     00A1                     l5115:
  9266     00A1  0A3C               	incf	___flmul@bexp^(0+128),w
  9267     00A2  1D03               	btfss	3,2
  9268     00A3  28A5               	goto	u5651
  9269     00A4  28A6               	goto	u5650
  9270     00A5                     u5651:
  9271     00A5  28AE               	goto	l5119
  9272     00A6                     u5650:
  9273     00A6                     l5117:
  9274     00A6  3000               	movlw	0
  9275     00A7  00AC               	movwf	(___flmul@b+3)^(0+128)
  9276     00A8  3000               	movlw	0
  9277     00A9  00AB               	movwf	(___flmul@b+2)^(0+128)
  9278     00AA  3000               	movlw	0
  9279     00AB  00AA               	movwf	(___flmul@b+1)^(0+128)
  9280     00AC  3000               	movlw	0
  9281     00AD  00A9               	movwf	___flmul@b^(0+128)
  9282     00AE                     l5119:
  9283     00AE  17AB               	bsf	(___flmul@b^(0+128)+2),7
  9284     00AF  28B8               	goto	l5123
  9285     00B0                     l5121:
  9286     00B0  3000               	movlw	0
  9287     00B1  00AC               	movwf	(___flmul@b+3)^(0+128)
  9288     00B2  3000               	movlw	0
  9289     00B3  00AB               	movwf	(___flmul@b+2)^(0+128)
  9290     00B4  3000               	movlw	0
  9291     00B5  00AA               	movwf	(___flmul@b+1)^(0+128)
  9292     00B6  3000               	movlw	0
  9293     00B7  00A9               	movwf	___flmul@b^(0+128)
  9294     00B8                     l5123:
  9295     00B8  0830               	movf	(___flmul@a^(0+128)+3),w
  9296     00B9  3980               	andlw	128
  9297     00BA  06B6               	xorwf	___flmul@sign^(0+128),f
  9298     00BB                     l5125:
  9299     00BB  3530               	lslf	(___flmul@a^(0+128)+3),w
  9300     00BC  00BB               	movwf	___flmul@aexp^(0+128)
  9301     00BD                     l5127:
  9302     00BD  1FAF               	btfss	(___flmul@a^(0+128)+2),7
  9303     00BE  28C0               	goto	u5661
  9304     00BF  28C1               	goto	u5660
  9305     00C0                     u5661:
  9306     00C0  28C2               	goto	l5131
  9307     00C1                     u5660:
  9308     00C1                     l5129:
  9309     00C1  143B               	bsf	___flmul@aexp^(0+128),0
  9310     00C2                     l5131:
  9311     00C2  083B               	movf	___flmul@aexp^(0+128),w
  9312     00C3  1903               	btfsc	3,2
  9313     00C4  28C6               	goto	u5671
  9314     00C5  28C7               	goto	u5670
  9315     00C6                     u5671:
  9316     00C6  28D6               	goto	l5139
  9317     00C7                     u5670:
  9318     00C7                     l5133:
  9319     00C7  0A3B               	incf	___flmul@aexp^(0+128),w
  9320     00C8  1D03               	btfss	3,2
  9321     00C9  28CB               	goto	u5681
  9322     00CA  28CC               	goto	u5680
  9323     00CB                     u5681:
  9324     00CB  28D4               	goto	l5137
  9325     00CC                     u5680:
  9326     00CC                     l5135:
  9327     00CC  3000               	movlw	0
  9328     00CD  00B0               	movwf	(___flmul@a+3)^(0+128)
  9329     00CE  3000               	movlw	0
  9330     00CF  00AF               	movwf	(___flmul@a+2)^(0+128)
  9331     00D0  3000               	movlw	0
  9332     00D1  00AE               	movwf	(___flmul@a+1)^(0+128)
  9333     00D2  3000               	movlw	0
  9334     00D3  00AD               	movwf	___flmul@a^(0+128)
  9335     00D4                     l5137:
  9336     00D4  17AF               	bsf	(___flmul@a^(0+128)+2),7
  9337     00D5  28DE               	goto	l5141
  9338     00D6                     l5139:
  9339     00D6  3000               	movlw	0
  9340     00D7  00B0               	movwf	(___flmul@a+3)^(0+128)
  9341     00D8  3000               	movlw	0
  9342     00D9  00AF               	movwf	(___flmul@a+2)^(0+128)
  9343     00DA  3000               	movlw	0
  9344     00DB  00AE               	movwf	(___flmul@a+1)^(0+128)
  9345     00DC  3000               	movlw	0
  9346     00DD  00AD               	movwf	___flmul@a^(0+128)
  9347     00DE                     l5141:
  9348     00DE  083B               	movf	___flmul@aexp^(0+128),w
  9349     00DF  1903               	btfsc	3,2
  9350     00E0  28E2               	goto	u5691
  9351     00E1  28E3               	goto	u5690
  9352     00E2                     u5691:
  9353     00E2  28E8               	goto	l5145
  9354     00E3                     u5690:
  9355     00E3                     l5143:
  9356     00E3  083C               	movf	___flmul@bexp^(0+128),w
  9357     00E4  1D03               	btfss	3,2
  9358     00E5  28E7               	goto	u5701
  9359     00E6  28E8               	goto	u5700
  9360     00E7                     u5701:
  9361     00E7  28F1               	goto	l5149
  9362     00E8                     u5700:
  9363     00E8                     l5145:
  9364     00E8  3000               	movlw	0
  9365     00E9  00AC               	movwf	(?___flmul+3)^(0+128)
  9366     00EA  3000               	movlw	0
  9367     00EB  00AB               	movwf	(?___flmul+2)^(0+128)
  9368     00EC  3000               	movlw	0
  9369     00ED  00AA               	movwf	(?___flmul+1)^(0+128)
  9370     00EE  3000               	movlw	0
  9371     00EF  00A9               	movwf	?___flmul^(0+128)
  9372     00F0  2ACB               	goto	l1614
  9373     00F1                     l5149:
  9374     00F1  0829               	movf	___flmul@b^(0+128),w
  9375     00F2  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9376     00F3  082F               	movf	(___flmul@a^(0+128)+2),w
  9377     00F4  3190  2062  3180   	fcall	__Umul8_16
  9378     00F7  0021               	movlb	1	; select bank1
  9379     00F8  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9380     00F9  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9381     00FA  0820               	movf	?__Umul8_16^(0+128),w
  9382     00FB  00C1               	movwf	___flmul@temp^(0+128)
  9383     00FC                     l5151:
  9384     00FC  0841               	movf	___flmul@temp^(0+128),w
  9385     00FD  00B1               	movwf	??___flmul^(0+128)
  9386     00FE  01B2               	clrf	(??___flmul^(0+128)+1)
  9387     00FF  01B3               	clrf	(??___flmul^(0+128)+2)
  9388     0100  01B4               	clrf	(??___flmul^(0+128)+3)
  9389     0101  0834               	movf	(??___flmul+3)^(0+128),w
  9390     0102  00BA               	movwf	(___flmul@grs+3)^(0+128)
  9391     0103  0833               	movf	(??___flmul+2)^(0+128),w
  9392     0104  00B9               	movwf	(___flmul@grs+2)^(0+128)
  9393     0105  0832               	movf	(??___flmul+1)^(0+128),w
  9394     0106  00B8               	movwf	(___flmul@grs+1)^(0+128)
  9395     0107  0831               	movf	??___flmul^(0+128),w
  9396     0108  00B7               	movwf	___flmul@grs^(0+128)
  9397     0109                     l5153:
  9398     0109  0842               	movf	(___flmul@temp^(0+128)+1),w
  9399     010A  00B1               	movwf	??___flmul^(0+128)
  9400     010B  01B2               	clrf	(??___flmul^(0+128)+1)
  9401     010C  01B3               	clrf	(??___flmul^(0+128)+2)
  9402     010D  01B4               	clrf	(??___flmul^(0+128)+3)
  9403     010E  0834               	movf	(??___flmul+3)^(0+128),w
  9404     010F  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9405     0110  0833               	movf	(??___flmul+2)^(0+128),w
  9406     0111  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9407     0112  0832               	movf	(??___flmul+1)^(0+128),w
  9408     0113  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9409     0114  0831               	movf	??___flmul^(0+128),w
  9410     0115  00BD               	movwf	___flmul@prod^(0+128)
  9411     0116  082A               	movf	(___flmul@b^(0+128)+1),w
  9412     0117  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9413     0118  082E               	movf	(___flmul@a^(0+128)+1),w
  9414     0119  3190  2062  3180   	fcall	__Umul8_16
  9415     011C  0021               	movlb	1	; select bank1
  9416     011D  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9417     011E  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9418     011F  0820               	movf	?__Umul8_16^(0+128),w
  9419     0120  00C1               	movwf	___flmul@temp^(0+128)
  9420     0121                     l5155:
  9421     0121  0841               	movf	___flmul@temp^(0+128),w
  9422     0122  00B1               	movwf	??___flmul^(0+128)
  9423     0123  01B2               	clrf	(??___flmul^(0+128)+1)
  9424     0124  01B3               	clrf	(??___flmul^(0+128)+2)
  9425     0125  01B4               	clrf	(??___flmul^(0+128)+3)
  9426     0126  0831               	movf	??___flmul^(0+128),w
  9427     0127  07B7               	addwf	___flmul@grs^(0+128),f
  9428     0128  0832               	movf	(??___flmul+1)^(0+128),w
  9429     0129  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9430     012A  0833               	movf	(??___flmul+2)^(0+128),w
  9431     012B  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9432     012C  0834               	movf	(??___flmul+3)^(0+128),w
  9433     012D  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9434     012E                     l5157:
  9435     012E  0842               	movf	(___flmul@temp^(0+128)+1),w
  9436     012F  00B1               	movwf	??___flmul^(0+128)
  9437     0130  01B2               	clrf	(??___flmul^(0+128)+1)
  9438     0131  01B3               	clrf	(??___flmul^(0+128)+2)
  9439     0132  01B4               	clrf	(??___flmul^(0+128)+3)
  9440     0133  0831               	movf	??___flmul^(0+128),w
  9441     0134  07BD               	addwf	___flmul@prod^(0+128),f
  9442     0135  0832               	movf	(??___flmul+1)^(0+128),w
  9443     0136  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9444     0137  0833               	movf	(??___flmul+2)^(0+128),w
  9445     0138  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9446     0139  0834               	movf	(??___flmul+3)^(0+128),w
  9447     013A  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9448     013B  082B               	movf	(___flmul@b^(0+128)+2),w
  9449     013C  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9450     013D  082D               	movf	___flmul@a^(0+128),w
  9451     013E  3190  2062  3180   	fcall	__Umul8_16
  9452     0141  0021               	movlb	1	; select bank1
  9453     0142  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9454     0143  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9455     0144  0820               	movf	?__Umul8_16^(0+128),w
  9456     0145  00C1               	movwf	___flmul@temp^(0+128)
  9457     0146                     l5159:
  9458     0146  0841               	movf	___flmul@temp^(0+128),w
  9459     0147  00B1               	movwf	??___flmul^(0+128)
  9460     0148  01B2               	clrf	(??___flmul^(0+128)+1)
  9461     0149  01B3               	clrf	(??___flmul^(0+128)+2)
  9462     014A  01B4               	clrf	(??___flmul^(0+128)+3)
  9463     014B  0831               	movf	??___flmul^(0+128),w
  9464     014C  07B7               	addwf	___flmul@grs^(0+128),f
  9465     014D  0832               	movf	(??___flmul+1)^(0+128),w
  9466     014E  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9467     014F  0833               	movf	(??___flmul+2)^(0+128),w
  9468     0150  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9469     0151  0834               	movf	(??___flmul+3)^(0+128),w
  9470     0152  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9471     0153                     l5161:
  9472     0153  0842               	movf	(___flmul@temp^(0+128)+1),w
  9473     0154  00B1               	movwf	??___flmul^(0+128)
  9474     0155  01B2               	clrf	(??___flmul^(0+128)+1)
  9475     0156  01B3               	clrf	(??___flmul^(0+128)+2)
  9476     0157  01B4               	clrf	(??___flmul^(0+128)+3)
  9477     0158  0831               	movf	??___flmul^(0+128),w
  9478     0159  07BD               	addwf	___flmul@prod^(0+128),f
  9479     015A  0832               	movf	(??___flmul+1)^(0+128),w
  9480     015B  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9481     015C  0833               	movf	(??___flmul+2)^(0+128),w
  9482     015D  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9483     015E  0834               	movf	(??___flmul+3)^(0+128),w
  9484     015F  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9485     0160                     l5163:
  9486     0160  3008               	movlw	8
  9487     0161                     u5715:
  9488     0161  35B7               	lslf	___flmul@grs^(0+128),f
  9489     0162  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9490     0163  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9491     0164  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9492     0165  0B89               	decfsz	9,f
  9493     0166  2961               	goto	u5715
  9494     0167                     l5165:
  9495     0167  082A               	movf	(___flmul@b^(0+128)+1),w
  9496     0168  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9497     0169  082D               	movf	___flmul@a^(0+128),w
  9498     016A  3190  2062  3180   	fcall	__Umul8_16
  9499     016D  0021               	movlb	1	; select bank1
  9500     016E  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9501     016F  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9502     0170  0820               	movf	?__Umul8_16^(0+128),w
  9503     0171  00C1               	movwf	___flmul@temp^(0+128)
  9504     0172                     l5167:
  9505     0172  0841               	movf	___flmul@temp^(0+128),w
  9506     0173  07B7               	addwf	___flmul@grs^(0+128),f
  9507     0174  0842               	movf	(___flmul@temp+1)^(0+128),w
  9508     0175  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9509     0176  3000               	movlw	0
  9510     0177  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9511     0178  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9512     0179                     l5169:
  9513     0179  0829               	movf	___flmul@b^(0+128),w
  9514     017A  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9515     017B  082E               	movf	(___flmul@a^(0+128)+1),w
  9516     017C  3190  2062  3180   	fcall	__Umul8_16
  9517     017F  0021               	movlb	1	; select bank1
  9518     0180  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9519     0181  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9520     0182  0820               	movf	?__Umul8_16^(0+128),w
  9521     0183  00C1               	movwf	___flmul@temp^(0+128)
  9522     0184                     l5171:
  9523     0184  0841               	movf	___flmul@temp^(0+128),w
  9524     0185  07B7               	addwf	___flmul@grs^(0+128),f
  9525     0186  0842               	movf	(___flmul@temp+1)^(0+128),w
  9526     0187  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9527     0188  3000               	movlw	0
  9528     0189  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9529     018A  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9530     018B                     l5173:
  9531     018B  3008               	movlw	8
  9532     018C                     u5725:
  9533     018C  35B7               	lslf	___flmul@grs^(0+128),f
  9534     018D  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9535     018E  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9536     018F  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9537     0190  0B89               	decfsz	9,f
  9538     0191  298C               	goto	u5725
  9539     0192  0829               	movf	___flmul@b^(0+128),w
  9540     0193  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9541     0194  082D               	movf	___flmul@a^(0+128),w
  9542     0195  3190  2062  3180   	fcall	__Umul8_16
  9543     0198  0021               	movlb	1	; select bank1
  9544     0199  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9545     019A  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9546     019B  0820               	movf	?__Umul8_16^(0+128),w
  9547     019C  00C1               	movwf	___flmul@temp^(0+128)
  9548     019D                     l5175:
  9549     019D  0841               	movf	___flmul@temp^(0+128),w
  9550     019E  07B7               	addwf	___flmul@grs^(0+128),f
  9551     019F  0842               	movf	(___flmul@temp+1)^(0+128),w
  9552     01A0  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  9553     01A1  3000               	movlw	0
  9554     01A2  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  9555     01A3  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  9556     01A4                     l5177:
  9557     01A4  082A               	movf	(___flmul@b^(0+128)+1),w
  9558     01A5  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9559     01A6  082F               	movf	(___flmul@a^(0+128)+2),w
  9560     01A7  3190  2062  3180   	fcall	__Umul8_16
  9561     01AA  0021               	movlb	1	; select bank1
  9562     01AB  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9563     01AC  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9564     01AD  0820               	movf	?__Umul8_16^(0+128),w
  9565     01AE  00C1               	movwf	___flmul@temp^(0+128)
  9566     01AF  0841               	movf	___flmul@temp^(0+128),w
  9567     01B0  07BD               	addwf	___flmul@prod^(0+128),f
  9568     01B1  0842               	movf	(___flmul@temp+1)^(0+128),w
  9569     01B2  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9570     01B3  3000               	movlw	0
  9571     01B4  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9572     01B5  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9573     01B6                     l5179:
  9574     01B6  082B               	movf	(___flmul@b^(0+128)+2),w
  9575     01B7  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9576     01B8  082E               	movf	(___flmul@a^(0+128)+1),w
  9577     01B9  3190  2062  3180   	fcall	__Umul8_16
  9578     01BC  0021               	movlb	1	; select bank1
  9579     01BD  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9580     01BE  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9581     01BF  0820               	movf	?__Umul8_16^(0+128),w
  9582     01C0  00C1               	movwf	___flmul@temp^(0+128)
  9583     01C1                     l5181:
  9584     01C1  0841               	movf	___flmul@temp^(0+128),w
  9585     01C2  07BD               	addwf	___flmul@prod^(0+128),f
  9586     01C3  0842               	movf	(___flmul@temp+1)^(0+128),w
  9587     01C4  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9588     01C5  3000               	movlw	0
  9589     01C6  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9590     01C7  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9591     01C8  082B               	movf	(___flmul@b^(0+128)+2),w
  9592     01C9  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  9593     01CA  082F               	movf	(___flmul@a^(0+128)+2),w
  9594     01CB  3190  2062  3180   	fcall	__Umul8_16
  9595     01CE  0021               	movlb	1	; select bank1
  9596     01CF  0821               	movf	(?__Umul8_16+1)^(0+128),w
  9597     01D0  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9598     01D1  0820               	movf	?__Umul8_16^(0+128),w
  9599     01D2  00C1               	movwf	___flmul@temp^(0+128)
  9600     01D3                     l5183:
  9601     01D3  0841               	movf	___flmul@temp^(0+128),w
  9602     01D4  00B1               	movwf	??___flmul^(0+128)
  9603     01D5  0842               	movf	(___flmul@temp+1)^(0+128),w
  9604     01D6  00B2               	movwf	(??___flmul^(0+128)+1)
  9605     01D7  01B3               	clrf	(??___flmul^(0+128)+2)
  9606     01D8  01B4               	clrf	(??___flmul^(0+128)+3)
  9607     01D9  3008               	movlw	8
  9608     01DA                     u5735:
  9609     01DA  35B1               	lslf	??___flmul^(0+128),f
  9610     01DB  0DB2               	rlf	(??___flmul^(0+128)+1),f
  9611     01DC  0DB3               	rlf	(??___flmul^(0+128)+2),f
  9612     01DD  0DB4               	rlf	(??___flmul^(0+128)+3),f
  9613     01DE                     u5730:
  9614     01DE  0B89               	decfsz	9,f
  9615     01DF  29DA               	goto	u5735
  9616     01E0  0831               	movf	??___flmul^(0+128),w
  9617     01E1  07BD               	addwf	___flmul@prod^(0+128),f
  9618     01E2  0832               	movf	(??___flmul+1)^(0+128),w
  9619     01E3  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9620     01E4  0833               	movf	(??___flmul+2)^(0+128),w
  9621     01E5  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9622     01E6  0834               	movf	(??___flmul+3)^(0+128),w
  9623     01E7  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9624     01E8                     l5185:
  9625     01E8  0837               	movf	___flmul@grs^(0+128),w
  9626     01E9  00B1               	movwf	??___flmul^(0+128)
  9627     01EA  0838               	movf	(___flmul@grs+1)^(0+128),w
  9628     01EB  00B2               	movwf	(??___flmul^(0+128)+1)
  9629     01EC  0839               	movf	(___flmul@grs+2)^(0+128),w
  9630     01ED  00B3               	movwf	(??___flmul^(0+128)+2)
  9631     01EE  083A               	movf	(___flmul@grs+3)^(0+128),w
  9632     01EF  00B4               	movwf	(??___flmul^(0+128)+3)
  9633     01F0  3018               	movlw	24
  9634     01F1                     u5745:
  9635     01F1  36B4               	lsrf	(??___flmul^(0+128)+3),f
  9636     01F2  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9637     01F3  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9638     01F4  0CB1               	rrf	??___flmul^(0+128),f
  9639     01F5                     u5740:
  9640     01F5  0B89               	decfsz	9,f
  9641     01F6  29F1               	goto	u5745
  9642     01F7  0831               	movf	??___flmul^(0+128),w
  9643     01F8  07BD               	addwf	___flmul@prod^(0+128),f
  9644     01F9  0832               	movf	(??___flmul+1)^(0+128),w
  9645     01FA  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9646     01FB  0833               	movf	(??___flmul+2)^(0+128),w
  9647     01FC  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9648     01FD  0834               	movf	(??___flmul+3)^(0+128),w
  9649     01FE  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9650     01FF                     l5187:
  9651     01FF  3008               	movlw	8
  9652     0200                     u5755:
  9653     0200  35B7               	lslf	___flmul@grs^(0+128),f
  9654     0201  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9655     0202  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9656     0203  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9657     0204  0B89               	decfsz	9,f
  9658     0205  2A00               	goto	u5755
  9659     0206                     l5189:
  9660     0206  083C               	movf	___flmul@bexp^(0+128),w
  9661     0207  073B               	addwf	___flmul@aexp^(0+128),w
  9662     0208  00B1               	movwf	??___flmul^(0+128)
  9663     0209  01B2               	clrf	(??___flmul^(0+128)+1)
  9664     020A  0DB2               	rlf	(??___flmul+1)^(0+128),f
  9665     020B  0831               	movf	??___flmul^(0+128),w
  9666     020C  3E82               	addlw	130
  9667     020D  00C1               	movwf	___flmul@temp^(0+128)
  9668     020E  30FF               	movlw	255
  9669     020F  3D32               	addwfc	(??___flmul+1)^(0+128),w
  9670     0210  00C2               	movwf	(___flmul@temp+1)^(0+128)
  9671     0211  2A29               	goto	l5201
  9672     0212                     l5191:
  9673     0212  3001               	movlw	1
  9674     0213                     u5765:
  9675     0213  35BD               	lslf	___flmul@prod^(0+128),f
  9676     0214  0DBE               	rlf	(___flmul@prod+1)^(0+128),f
  9677     0215  0DBF               	rlf	(___flmul@prod+2)^(0+128),f
  9678     0216  0DC0               	rlf	(___flmul@prod+3)^(0+128),f
  9679     0217  0B89               	decfsz	9,f
  9680     0218  2A13               	goto	u5765
  9681     0219                     l5193:
  9682     0219  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  9683     021A  2A1C               	goto	u5771
  9684     021B  2A1D               	goto	u5770
  9685     021C                     u5771:
  9686     021C  2A1E               	goto	l5197
  9687     021D                     u5770:
  9688     021D                     l5195:
  9689     021D  143D               	bsf	___flmul@prod^(0+128),0
  9690     021E                     l5197:
  9691     021E  3001               	movlw	1
  9692     021F                     u5785:
  9693     021F  35B7               	lslf	___flmul@grs^(0+128),f
  9694     0220  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  9695     0221  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  9696     0222  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  9697     0223  0B89               	decfsz	9,f
  9698     0224  2A1F               	goto	u5785
  9699     0225                     l5199:
  9700     0225  30FF               	movlw	255
  9701     0226  07C1               	addwf	___flmul@temp^(0+128),f
  9702     0227  30FF               	movlw	255
  9703     0228  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9704     0229                     l5201:
  9705     0229  1FBF               	btfss	(___flmul@prod+2)^(0+128),7
  9706     022A  2A2C               	goto	u5791
  9707     022B  2A2D               	goto	u5790
  9708     022C                     u5791:
  9709     022C  2A12               	goto	l5191
  9710     022D                     u5790:
  9711     022D                     l5203:
  9712     022D  01BB               	clrf	___flmul@aexp^(0+128)
  9713     022E                     l5205:
  9714     022E  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  9715     022F  2A31               	goto	u5801
  9716     0230  2A32               	goto	u5800
  9717     0231                     u5801:
  9718     0231  2A4E               	goto	l5213
  9719     0232                     u5800:
  9720     0232                     l5207:
  9721     0232  30FF               	movlw	255
  9722     0233  0537               	andwf	___flmul@grs^(0+128),w
  9723     0234  00B1               	movwf	??___flmul^(0+128)
  9724     0235  30FF               	movlw	255
  9725     0236  0538               	andwf	(___flmul@grs+1)^(0+128),w
  9726     0237  00B2               	movwf	(??___flmul^(0+128)+1)
  9727     0238  30FF               	movlw	255
  9728     0239  0539               	andwf	(___flmul@grs+2)^(0+128),w
  9729     023A  00B3               	movwf	(??___flmul^(0+128)+2)
  9730     023B  307F               	movlw	127
  9731     023C  053A               	andwf	(___flmul@grs+3)^(0+128),w
  9732     023D  00B4               	movwf	(??___flmul^(0+128)+3)
  9733     023E  0834               	movf	(??___flmul+3)^(0+128),w
  9734     023F  0433               	iorwf	(??___flmul+2)^(0+128),w
  9735     0240  0432               	iorwf	(??___flmul+1)^(0+128),w
  9736     0241  0431               	iorwf	??___flmul^(0+128),w
  9737     0242  1903               	skipnz
  9738     0243  2A45               	goto	u5811
  9739     0244  2A46               	goto	u5810
  9740     0245                     u5811:
  9741     0245  2A49               	goto	l1620
  9742     0246                     u5810:
  9743     0246                     l5209:
  9744     0246  3001               	movlw	1
  9745     0247  00BB               	movwf	___flmul@aexp^(0+128)
  9746     0248  2A4E               	goto	l5213
  9747     0249                     l1620:
  9748     0249  1C3D               	btfss	___flmul@prod^(0+128),0
  9749     024A  2A4C               	goto	u5821
  9750     024B  2A4D               	goto	u5820
  9751     024C                     u5821:
  9752     024C  2A4E               	goto	l5213
  9753     024D                     u5820:
  9754     024D  2A46               	goto	l5209
  9755     024E                     l5213:
  9756     024E  083B               	movf	___flmul@aexp^(0+128),w
  9757     024F  1903               	btfsc	3,2
  9758     0250  2A52               	goto	u5831
  9759     0251  2A53               	goto	u5830
  9760     0252                     u5831:
  9761     0252  2A79               	goto	l5223
  9762     0253                     u5830:
  9763     0253                     l5215:
  9764     0253  3001               	movlw	1
  9765     0254  07BD               	addwf	___flmul@prod^(0+128),f
  9766     0255  3000               	movlw	0
  9767     0256  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  9768     0257  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  9769     0258  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  9770     0259                     l5217:
  9771     0259  1C40               	btfss	(___flmul@prod+3)^(0+128),0
  9772     025A  2A5C               	goto	u5841
  9773     025B  2A5D               	goto	u5840
  9774     025C                     u5841:
  9775     025C  2A79               	goto	l5223
  9776     025D                     u5840:
  9777     025D                     l5219:
  9778     025D  083D               	movf	___flmul@prod^(0+128),w
  9779     025E  00B1               	movwf	??___flmul^(0+128)
  9780     025F  083E               	movf	(___flmul@prod+1)^(0+128),w
  9781     0260  00B2               	movwf	(??___flmul^(0+128)+1)
  9782     0261  083F               	movf	(___flmul@prod+2)^(0+128),w
  9783     0262  00B3               	movwf	(??___flmul^(0+128)+2)
  9784     0263  0840               	movf	(___flmul@prod+3)^(0+128),w
  9785     0264  00B4               	movwf	(??___flmul^(0+128)+3)
  9786     0265  3001               	movlw	1
  9787     0266  00B5               	movwf	(??___flmul+4)^(0+128)
  9788     0267                     u5855:
  9789     0267  37B4               	asrf	(??___flmul^(0+128)+3),f
  9790     0268  0CB3               	rrf	(??___flmul^(0+128)+2),f
  9791     0269  0CB2               	rrf	(??___flmul^(0+128)+1),f
  9792     026A  0CB1               	rrf	??___flmul^(0+128),f
  9793     026B                     u5850:
  9794     026B  0BB5               	decfsz	(??___flmul+4)^(0+128),f
  9795     026C  2A67               	goto	u5855
  9796     026D  0834               	movf	(??___flmul+3)^(0+128),w
  9797     026E  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9798     026F  0833               	movf	(??___flmul+2)^(0+128),w
  9799     0270  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9800     0271  0832               	movf	(??___flmul+1)^(0+128),w
  9801     0272  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9802     0273  0831               	movf	??___flmul^(0+128),w
  9803     0274  00BD               	movwf	___flmul@prod^(0+128)
  9804     0275                     l5221:
  9805     0275  3001               	movlw	1
  9806     0276  07C1               	addwf	___flmul@temp^(0+128),f
  9807     0277  3000               	movlw	0
  9808     0278  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  9809     0279                     l5223:
  9810     0279  0842               	movf	(___flmul@temp+1)^(0+128),w
  9811     027A  3A80               	xorlw	128
  9812     027B  00B1               	movwf	??___flmul^(0+128)
  9813     027C  3080               	movlw	128
  9814     027D  0231               	subwf	??___flmul^(0+128),w
  9815     027E  1D03               	skipz
  9816     027F  2A82               	goto	u5865
  9817     0280  30FF               	movlw	255
  9818     0281  0241               	subwf	___flmul@temp^(0+128),w
  9819     0282                     u5865:
  9820     0282  1C03               	skipc
  9821     0283  2A85               	goto	u5861
  9822     0284  2A86               	goto	u5860
  9823     0285                     u5861:
  9824     0285  2A90               	goto	l5227
  9825     0286                     u5860:
  9826     0286                     l5225:
  9827     0286  307F               	movlw	127
  9828     0287  0021               	movlb	1	; select bank1
  9829     0288  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9830     0289  3080               	movlw	128
  9831     028A  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9832     028B  3000               	movlw	0
  9833     028C  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9834     028D  3000               	movlw	0
  9835     028E  00BD               	movwf	___flmul@prod^(0+128)
  9836     028F  2AC1               	goto	l1626
  9837     0290                     l5227:
  9838     0290  0021               	movlb	1	; select bank1
  9839     0291  0842               	movf	(___flmul@temp+1)^(0+128),w
  9840     0292  3A80               	xorlw	128
  9841     0293  00B1               	movwf	??___flmul^(0+128)
  9842     0294  3080               	movlw	128
  9843     0295  0231               	subwf	??___flmul^(0+128),w
  9844     0296  1D03               	skipz
  9845     0297  2A9A               	goto	u5875
  9846     0298  3001               	movlw	1
  9847     0299  0241               	subwf	___flmul@temp^(0+128),w
  9848     029A                     u5875:
  9849     029A  1803               	skipnc
  9850     029B  2A9D               	goto	u5871
  9851     029C  2A9E               	goto	u5870
  9852     029D                     u5871:
  9853     029D  2AA9               	goto	l5233
  9854     029E                     u5870:
  9855     029E                     l5229:
  9856     029E  3000               	movlw	0
  9857     029F  0021               	movlb	1	; select bank1
  9858     02A0  00C0               	movwf	(___flmul@prod+3)^(0+128)
  9859     02A1  3000               	movlw	0
  9860     02A2  00BF               	movwf	(___flmul@prod+2)^(0+128)
  9861     02A3  3000               	movlw	0
  9862     02A4  00BE               	movwf	(___flmul@prod+1)^(0+128)
  9863     02A5  3000               	movlw	0
  9864     02A6  00BD               	movwf	___flmul@prod^(0+128)
  9865     02A7                     l5231:
  9866     02A7  01B6               	clrf	___flmul@sign^(0+128)
  9867     02A8  2AC1               	goto	l1626
  9868     02A9                     l5233:
  9869     02A9  0021               	movlb	1	; select bank1
  9870     02AA  0841               	movf	___flmul@temp^(0+128),w
  9871     02AB  00BC               	movwf	___flmul@bexp^(0+128)
  9872     02AC  30FF               	movlw	255
  9873     02AD  05BD               	andwf	___flmul@prod^(0+128),f
  9874     02AE  30FF               	movlw	255
  9875     02AF  05BE               	andwf	(___flmul@prod+1)^(0+128),f
  9876     02B0  307F               	movlw	127
  9877     02B1  05BF               	andwf	(___flmul@prod+2)^(0+128),f
  9878     02B2  3000               	movlw	0
  9879     02B3  05C0               	andwf	(___flmul@prod+3)^(0+128),f
  9880     02B4                     l5235:
  9881     02B4  1C3C               	btfss	___flmul@bexp^(0+128),0
  9882     02B5  2AB7               	goto	u5881
  9883     02B6  2AB8               	goto	u5880
  9884     02B7                     u5881:
  9885     02B7  2AB9               	goto	l5239
  9886     02B8                     u5880:
  9887     02B8                     l5237:
  9888     02B8  17BF               	bsf	(___flmul@prod^(0+128)+2),7
  9889     02B9                     l5239:
  9890     02B9  083C               	movf	___flmul@bexp^(0+128),w
  9891     02BA  00B1               	movwf	??___flmul^(0+128)
  9892     02BB  3001               	movlw	1
  9893     02BC                     u5895:
  9894     02BC  36B1               	lsrf	??___flmul^(0+128),f
  9895     02BD  0B89               	decfsz	9,f
  9896     02BE  2ABC               	goto	u5895
  9897     02BF  0831               	movf	??___flmul^(0+128),w
  9898     02C0  00C0               	movwf	(___flmul@prod^(0+128)+3)
  9899     02C1                     l1626:
  9900     02C1  0836               	movf	___flmul@sign^(0+128),w
  9901     02C2  04C0               	iorwf	(___flmul@prod^(0+128)+3),f
  9902     02C3                     l5241:
  9903     02C3  0840               	movf	(___flmul@prod+3)^(0+128),w
  9904     02C4  00AC               	movwf	(?___flmul+3)^(0+128)
  9905     02C5  083F               	movf	(___flmul@prod+2)^(0+128),w
  9906     02C6  00AB               	movwf	(?___flmul+2)^(0+128)
  9907     02C7  083E               	movf	(___flmul@prod+1)^(0+128),w
  9908     02C8  00AA               	movwf	(?___flmul+1)^(0+128)
  9909     02C9  083D               	movf	___flmul@prod^(0+128),w
  9910     02CA  00A9               	movwf	?___flmul^(0+128)
  9911     02CB                     l1614:
  9912     02CB  0008               	return
  9913     02CC                     __end_of___flmul:
  9914                           
  9915                           	psect	text5
  9916     1062                     __ptext5:	
  9917 ;; *************** function __Umul8_16 *****************
  9918 ;; Defined at:
  9919 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;  multiplier      1    wreg     unsigned char 
  9922 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;  multiplier      1    8[BANK1 ] unsigned char 
  9925 ;;  word_mpld       2    6[BANK1 ] unsigned short 
  9926 ;;  product         2    4[BANK1 ] unsigned short 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  2    0[BANK1 ] unsigned int 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2, status,0
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9936 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;Total ram usage:        9 bytes
  9941 ;; Hardware stack levels used: 1
  9942 ;; Hardware stack levels required when called: 5
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		___flmul
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950     1062                     __Umul8_16:	
  9951                           ;psect for function __Umul8_16
  9952                           
  9953                           
  9954                           ;incstack = 0
  9955                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9956                           ;__Umul8_16@multiplier stored from wreg
  9957     1062  0021               	movlb	1	; select bank1
  9958     1063  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  9959     1064                     l4615:
  9960     1064  01A4               	clrf	__Umul8_16@product^(0+128)
  9961     1065  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  9962     1066                     l4617:
  9963     1066  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  9964     1067  00A2               	movwf	??__Umul8_16^(0+128)
  9965     1068  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  9966     1069  0822               	movf	??__Umul8_16^(0+128),w
  9967     106A  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  9968     106B  0823               	movf	(??__Umul8_16+1)^(0+128),w
  9969     106C  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  9970     106D                     l4619:
  9971     106D  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  9972     106E  2870               	goto	u4621
  9973     106F  2871               	goto	u4620
  9974     1070                     u4621:
  9975     1070  2875               	goto	l1633
  9976     1071                     u4620:
  9977     1071                     l4621:
  9978     1071  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  9979     1072  07A4               	addwf	__Umul8_16@product^(0+128),f
  9980     1073  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  9981     1074  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
  9982     1075                     l1633:
  9983     1075  3001               	movlw	1
  9984     1076                     u4635:
  9985     1076  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
  9986     1077  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  9987     1078  0B89               	decfsz	9,f
  9988     1079  2876               	goto	u4635
  9989     107A  1003               	clrc
  9990     107B  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  9991     107C                     l4623:
  9992     107C  0828               	movf	__Umul8_16@multiplier^(0+128),w
  9993     107D  1D03               	btfss	3,2
  9994     107E  2880               	goto	u4641
  9995     107F  2881               	goto	u4640
  9996     1080                     u4641:
  9997     1080  286D               	goto	l4619
  9998     1081                     u4640:
  9999     1081                     l4625:
 10000     1081  0825               	movf	(__Umul8_16@product+1)^(0+128),w
 10001     1082  00A1               	movwf	(?__Umul8_16+1)^(0+128)
 10002     1083  0824               	movf	__Umul8_16@product^(0+128),w
 10003     1084  00A0               	movwf	?__Umul8_16^(0+128)
 10004     1085                     l1635:
 10005     1085  0008               	return
 10006     1086                     __end_of__Umul8_16:
 10007                           
 10008                           	psect	text6
 10009     0C50                     __ptext6:	
 10010 ;; *************** function ___fldiv *****************
 10011 ;; Defined at:
 10012 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  a               4    0[BANK1 ] unsigned int 
 10015 ;;  b               4    4[BANK1 ] unsigned int 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  grs             4   20[BANK1 ] unsigned long 
 10018 ;;  rem             4   13[BANK1 ] unsigned long 
 10019 ;;  new_exp         2   18[BANK1 ] short 
 10020 ;;  aexp            1   25[BANK1 ] unsigned char 
 10021 ;;  bexp            1   24[BANK1 ] unsigned char 
 10022 ;;  sign            1   17[BANK1 ] unsigned char 
 10023 ;; Return value:  Size  Location     Type
 10024 ;;                  4    0[BANK1 ] unsigned char 
 10025 ;; Registers used:
 10026 ;;		wreg, status,2, status,0
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10032 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 10034 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10035 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;Total ram usage:       26 bytes
 10037 ;; Hardware stack levels used: 1
 10038 ;; Hardware stack levels required when called: 5
 10039 ;; This function calls:
 10040 ;;		Nothing
 10041 ;; This function is called by:
 10042 ;;		_str2float
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046     0C50                     ___fldiv:	
 10047                           ;psect for function ___fldiv
 10048                           
 10049     0C50                     l4965:	
 10050                           ;incstack = 0
 10051                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10052                           
 10053     0C50  0021               	movlb	1	; select bank1
 10054     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
 10055     0C52  3980               	andlw	128
 10056     0C53  00B1               	movwf	___fldiv@sign^(0+128)
 10057     0C54                     l4967:
 10058     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
 10059     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
 10060     0C56                     l4969:
 10061     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
 10062     0C57  2C59               	goto	u5331
 10063     0C58  2C5A               	goto	u5330
 10064     0C59                     u5331:
 10065     0C59  2C5B               	goto	l4973
 10066     0C5A                     u5330:
 10067     0C5A                     l4971:
 10068     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
 10069     0C5B                     l4973:
 10070     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
 10071     0C5C  1903               	btfsc	3,2
 10072     0C5D  2C5F               	goto	u5341
 10073     0C5E  2C60               	goto	u5340
 10074     0C5F                     u5341:
 10075     0C5F  2C70               	goto	l4983
 10076     0C60                     u5340:
 10077     0C60                     l4975:
 10078     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
 10079     0C61  1D03               	btfss	3,2
 10080     0C62  2C64               	goto	u5351
 10081     0C63  2C65               	goto	u5350
 10082     0C64                     u5351:
 10083     0C64  2C6D               	goto	l4979
 10084     0C65                     u5350:
 10085     0C65                     l4977:
 10086     0C65  3000               	movlw	0
 10087     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10088     0C67  3000               	movlw	0
 10089     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10090     0C69  3000               	movlw	0
 10091     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10092     0C6B  3000               	movlw	0
 10093     0C6C  00A4               	movwf	___fldiv@b^(0+128)
 10094     0C6D                     l4979:
 10095     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10096     0C6E                     l4981:
 10097     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
 10098     0C6F  2C78               	goto	l4985
 10099     0C70                     l4983:
 10100     0C70  3000               	movlw	0
 10101     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10102     0C72  3000               	movlw	0
 10103     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10104     0C74  3000               	movlw	0
 10105     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10106     0C76  3000               	movlw	0
 10107     0C77  00A4               	movwf	___fldiv@b^(0+128)
 10108     0C78                     l4985:
 10109     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
 10110     0C79  3980               	andlw	128
 10111     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
 10112     0C7B                     l4987:
 10113     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
 10114     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
 10115     0C7D                     l4989:
 10116     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
 10117     0C7E  2C80               	goto	u5361
 10118     0C7F  2C81               	goto	u5360
 10119     0C80                     u5361:
 10120     0C80  2C82               	goto	l4993
 10121     0C81                     u5360:
 10122     0C81                     l4991:
 10123     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
 10124     0C82                     l4993:
 10125     0C82  0839               	movf	___fldiv@aexp^(0+128),w
 10126     0C83  1903               	btfsc	3,2
 10127     0C84  2C86               	goto	u5371
 10128     0C85  2C87               	goto	u5370
 10129     0C86                     u5371:
 10130     0C86  2C97               	goto	l5003
 10131     0C87                     u5370:
 10132     0C87                     l4995:
 10133     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
 10134     0C88  1D03               	btfss	3,2
 10135     0C89  2C8B               	goto	u5381
 10136     0C8A  2C8C               	goto	u5380
 10137     0C8B                     u5381:
 10138     0C8B  2C94               	goto	l4999
 10139     0C8C                     u5380:
 10140     0C8C                     l4997:
 10141     0C8C  3000               	movlw	0
 10142     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10143     0C8E  3000               	movlw	0
 10144     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10145     0C90  3000               	movlw	0
 10146     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10147     0C92  3000               	movlw	0
 10148     0C93  00A0               	movwf	___fldiv@a^(0+128)
 10149     0C94                     l4999:
 10150     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
 10151     0C95                     l5001:
 10152     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
 10153     0C96  2C9F               	goto	l1574
 10154     0C97                     l5003:
 10155     0C97  3000               	movlw	0
 10156     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
 10157     0C99  3000               	movlw	0
 10158     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
 10159     0C9B  3000               	movlw	0
 10160     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
 10161     0C9D  3000               	movlw	0
 10162     0C9E  00A0               	movwf	___fldiv@a^(0+128)
 10163     0C9F                     l1574:
 10164     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
 10165     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
 10166     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
 10167     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
 10168     0CA3  1D03               	skipz
 10169     0CA4  2CA6               	goto	u5391
 10170     0CA5  2CA7               	goto	u5390
 10171     0CA6                     u5391:
 10172     0CA6  2CBE               	goto	l5013
 10173     0CA7                     u5390:
 10174     0CA7                     l5005:
 10175     0CA7  3000               	movlw	0
 10176     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10177     0CA9  3000               	movlw	0
 10178     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10179     0CAB  3000               	movlw	0
 10180     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10181     0CAD  3000               	movlw	0
 10182     0CAE  00A4               	movwf	___fldiv@b^(0+128)
 10183     0CAF  3080               	movlw	128
 10184     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
 10185     0CB1  307F               	movlw	127
 10186     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 10187     0CB3                     l5007:
 10188     0CB3  0831               	movf	___fldiv@sign^(0+128),w
 10189     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10190     0CB5                     l5009:
 10191     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
 10192     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
 10193     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
 10194     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
 10195     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
 10196     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
 10197     0CBB  0824               	movf	___fldiv@b^(0+128),w
 10198     0CBC  00A0               	movwf	?___fldiv^(0+128)
 10199     0CBD  2DF3               	goto	l1576
 10200     0CBE                     l5013:
 10201     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
 10202     0CBF  1D03               	btfss	3,2
 10203     0CC0  2CC2               	goto	u5401
 10204     0CC1  2CC3               	goto	u5400
 10205     0CC2                     u5401:
 10206     0CC2  2CCC               	goto	l5019
 10207     0CC3                     u5400:
 10208     0CC3                     l5015:
 10209     0CC3  3000               	movlw	0
 10210     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
 10211     0CC5  3000               	movlw	0
 10212     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
 10213     0CC7  3000               	movlw	0
 10214     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
 10215     0CC9  3000               	movlw	0
 10216     0CCA  00A0               	movwf	?___fldiv^(0+128)
 10217     0CCB  2DF3               	goto	l1576
 10218     0CCC                     l5019:
 10219     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
 10220     0CCD  00A8               	movwf	??___fldiv^(0+128)
 10221     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
 10222     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
 10223     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
 10224     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
 10225     0CD2  0228               	subwf	??___fldiv^(0+128),w
 10226     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
 10227     0CD4  1C03               	skipc
 10228     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
 10229     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
 10230     0CD7  3E7F               	addlw	127
 10231     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10232     0CD9  3000               	movlw	0
 10233     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
 10234     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
 10235     0CDC                     l5021:
 10236     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
 10237     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
 10238     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
 10239     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
 10240     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
 10241     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
 10242     0CE2  0824               	movf	___fldiv@b^(0+128),w
 10243     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
 10244     0CE4                     l5023:
 10245     0CE4  3000               	movlw	0
 10246     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10247     0CE6  3000               	movlw	0
 10248     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10249     0CE8  3000               	movlw	0
 10250     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10251     0CEA  3000               	movlw	0
 10252     0CEB  00A4               	movwf	___fldiv@b^(0+128)
 10253     0CEC                     l5025:
 10254     0CEC  3000               	movlw	0
 10255     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
 10256     0CEE  3000               	movlw	0
 10257     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
 10258     0CF0  3000               	movlw	0
 10259     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
 10260     0CF2  3000               	movlw	0
 10261     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
 10262     0CF4                     l5027:
 10263     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
 10264     0CF5  2D32               	goto	l5047
 10265     0CF6                     l5029:
 10266     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
 10267     0CF7  1903               	btfsc	3,2
 10268     0CF8  2CFA               	goto	u5411
 10269     0CF9  2CFB               	goto	u5410
 10270     0CFA                     u5411:
 10271     0CFA  2D15               	goto	l5039
 10272     0CFB                     u5410:
 10273     0CFB                     l5031:
 10274     0CFB  3001               	movlw	1
 10275     0CFC                     u5425:
 10276     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
 10277     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
 10278     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
 10279     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
 10280     0D00  0B89               	decfsz	9,f
 10281     0D01  2CFC               	goto	u5425
 10282     0D02  3001               	movlw	1
 10283     0D03                     u5435:
 10284     0D03  35A4               	lslf	___fldiv@b^(0+128),f
 10285     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10286     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10287     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10288     0D07  0B89               	decfsz	9,f
 10289     0D08  2D03               	goto	u5435
 10290     0D09                     l5033:
 10291     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10292     0D0A  2D0C               	goto	u5441
 10293     0D0B  2D0D               	goto	u5440
 10294     0D0C                     u5441:
 10295     0D0C  2D0E               	goto	l5037
 10296     0D0D                     u5440:
 10297     0D0D                     l5035:
 10298     0D0D  1424               	bsf	___fldiv@b^(0+128),0
 10299     0D0E                     l5037:
 10300     0D0E  3001               	movlw	1
 10301     0D0F                     u5455:
 10302     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
 10303     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10304     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10305     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10306     0D13  0B89               	decfsz	9,f
 10307     0D14  2D0F               	goto	u5455
 10308     0D15                     l5039:
 10309     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
 10310     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
 10311     0D17  1D03               	skipz
 10312     0D18  2D23               	goto	u5465
 10313     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
 10314     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
 10315     0D1B  1D03               	skipz
 10316     0D1C  2D23               	goto	u5465
 10317     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
 10318     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
 10319     0D1F  1D03               	skipz
 10320     0D20  2D23               	goto	u5465
 10321     0D21  0820               	movf	___fldiv@a^(0+128),w
 10322     0D22  022D               	subwf	___fldiv@rem^(0+128),w
 10323     0D23                     u5465:
 10324     0D23  1C03               	skipc
 10325     0D24  2D26               	goto	u5461
 10326     0D25  2D27               	goto	u5460
 10327     0D26                     u5461:
 10328     0D26  2D30               	goto	l5045
 10329     0D27                     u5460:
 10330     0D27                     l5041:
 10331     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
 10332     0D28                     l5043:
 10333     0D28  0820               	movf	___fldiv@a^(0+128),w
 10334     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
 10335     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
 10336     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
 10337     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
 10338     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
 10339     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
 10340     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
 10341     0D30                     l5045:
 10342     0D30  3001               	movlw	1
 10343     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
 10344     0D32                     l5047:
 10345     0D32  301A               	movlw	26
 10346     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
 10347     0D34  1C03               	skipc
 10348     0D35  2D37               	goto	u5471
 10349     0D36  2D38               	goto	u5470
 10350     0D37                     u5471:
 10351     0D37  2CF6               	goto	l5029
 10352     0D38                     u5470:
 10353     0D38                     l5049:
 10354     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
 10355     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
 10356     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
 10357     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
 10358     0D3C  1903               	skipnz
 10359     0D3D  2D3F               	goto	u5481
 10360     0D3E  2D40               	goto	u5480
 10361     0D3F                     u5481:
 10362     0D3F  2D59               	goto	l5063
 10363     0D40                     u5480:
 10364     0D40                     l5051:
 10365     0D40  1434               	bsf	___fldiv@grs^(0+128),0
 10366     0D41  2D59               	goto	l5063
 10367     0D42                     l5053:
 10368     0D42  3001               	movlw	1
 10369     0D43                     u5495:
 10370     0D43  35A4               	lslf	___fldiv@b^(0+128),f
 10371     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
 10372     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
 10373     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
 10374     0D47  0B89               	decfsz	9,f
 10375     0D48  2D43               	goto	u5495
 10376     0D49                     l5055:
 10377     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10378     0D4A  2D4C               	goto	u5501
 10379     0D4B  2D4D               	goto	u5500
 10380     0D4C                     u5501:
 10381     0D4C  2D4E               	goto	l5059
 10382     0D4D                     u5500:
 10383     0D4D                     l5057:
 10384     0D4D  1424               	bsf	___fldiv@b^(0+128),0
 10385     0D4E                     l5059:
 10386     0D4E  3001               	movlw	1
 10387     0D4F                     u5515:
 10388     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
 10389     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
 10390     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
 10391     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
 10392     0D53  0B89               	decfsz	9,f
 10393     0D54  2D4F               	goto	u5515
 10394     0D55                     l5061:
 10395     0D55  30FF               	movlw	255
 10396     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10397     0D57  30FF               	movlw	255
 10398     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10399     0D59                     l5063:
 10400     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
 10401     0D5A  2D5C               	goto	u5521
 10402     0D5B  2D5D               	goto	u5520
 10403     0D5C                     u5521:
 10404     0D5C  2D42               	goto	l5053
 10405     0D5D                     u5520:
 10406     0D5D                     l5065:
 10407     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
 10408     0D5E                     l5067:
 10409     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
 10410     0D5F  2D61               	goto	u5531
 10411     0D60  2D62               	goto	u5530
 10412     0D61                     u5531:
 10413     0D61  2D7E               	goto	l5075
 10414     0D62                     u5530:
 10415     0D62                     l5069:
 10416     0D62  30FF               	movlw	255
 10417     0D63  0534               	andwf	___fldiv@grs^(0+128),w
 10418     0D64  00A8               	movwf	??___fldiv^(0+128)
 10419     0D65  30FF               	movlw	255
 10420     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
 10421     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
 10422     0D68  30FF               	movlw	255
 10423     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
 10424     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
 10425     0D6B  307F               	movlw	127
 10426     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
 10427     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
 10428     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
 10429     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
 10430     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
 10431     0D71  0428               	iorwf	??___fldiv^(0+128),w
 10432     0D72  1903               	skipnz
 10433     0D73  2D75               	goto	u5541
 10434     0D74  2D76               	goto	u5540
 10435     0D75                     u5541:
 10436     0D75  2D79               	goto	l1590
 10437     0D76                     u5540:
 10438     0D76                     l5071:
 10439     0D76  3001               	movlw	1
 10440     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
 10441     0D78  2D7E               	goto	l5075
 10442     0D79                     l1590:
 10443     0D79  1C24               	btfss	___fldiv@b^(0+128),0
 10444     0D7A  2D7C               	goto	u5551
 10445     0D7B  2D7D               	goto	u5550
 10446     0D7C                     u5551:
 10447     0D7C  2D7E               	goto	l5075
 10448     0D7D                     u5550:
 10449     0D7D  2D76               	goto	l5071
 10450     0D7E                     l5075:
 10451     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
 10452     0D7F  1903               	btfsc	3,2
 10453     0D80  2D82               	goto	u5561
 10454     0D81  2D83               	goto	u5560
 10455     0D82                     u5561:
 10456     0D82  2DA9               	goto	l5085
 10457     0D83                     u5560:
 10458     0D83                     l5077:
 10459     0D83  3001               	movlw	1
 10460     0D84  07A4               	addwf	___fldiv@b^(0+128),f
 10461     0D85  3000               	movlw	0
 10462     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
 10463     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
 10464     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
 10465     0D89                     l5079:
 10466     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
 10467     0D8A  2D8C               	goto	u5571
 10468     0D8B  2D8D               	goto	u5570
 10469     0D8C                     u5571:
 10470     0D8C  2DA9               	goto	l5085
 10471     0D8D                     u5570:
 10472     0D8D                     l5081:
 10473     0D8D  0824               	movf	___fldiv@b^(0+128),w
 10474     0D8E  00A8               	movwf	??___fldiv^(0+128)
 10475     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
 10476     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
 10477     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
 10478     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
 10479     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
 10480     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
 10481     0D95  3001               	movlw	1
 10482     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
 10483     0D97                     u5585:
 10484     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
 10485     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
 10486     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
 10487     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
 10488     0D9B                     u5580:
 10489     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
 10490     0D9C  2D97               	goto	u5585
 10491     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
 10492     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10493     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
 10494     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10495     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
 10496     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10497     0DA3  0828               	movf	??___fldiv^(0+128),w
 10498     0DA4  00A4               	movwf	___fldiv@b^(0+128)
 10499     0DA5                     l5083:
 10500     0DA5  3001               	movlw	1
 10501     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
 10502     0DA7  3000               	movlw	0
 10503     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 10504     0DA9                     l5085:
 10505     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10506     0DAA  3A80               	xorlw	128
 10507     0DAB  00A8               	movwf	??___fldiv^(0+128)
 10508     0DAC  3080               	movlw	128
 10509     0DAD  0228               	subwf	??___fldiv^(0+128),w
 10510     0DAE  1D03               	skipz
 10511     0DAF  2DB2               	goto	u5595
 10512     0DB0  30FF               	movlw	255
 10513     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
 10514     0DB2                     u5595:
 10515     0DB2  1C03               	skipc
 10516     0DB3  2DB5               	goto	u5591
 10517     0DB4  2DB6               	goto	u5590
 10518     0DB5                     u5591:
 10519     0DB5  2DC3               	goto	l1595
 10520     0DB6                     u5590:
 10521     0DB6                     l5087:
 10522     0DB6  30FF               	movlw	255
 10523     0DB7  0021               	movlb	1	; select bank1
 10524     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
 10525     0DB9  3000               	movlw	0
 10526     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
 10527     0DBB  3000               	movlw	0
 10528     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10529     0DBD  3000               	movlw	0
 10530     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10531     0DBF  3000               	movlw	0
 10532     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10533     0DC1  3000               	movlw	0
 10534     0DC2  00A4               	movwf	___fldiv@b^(0+128)
 10535     0DC3                     l1595:
 10536     0DC3  0021               	movlb	1	; select bank1
 10537     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
 10538     0DC5  3A80               	xorlw	128
 10539     0DC6  00A8               	movwf	??___fldiv^(0+128)
 10540     0DC7  3080               	movlw	128
 10541     0DC8  0228               	subwf	??___fldiv^(0+128),w
 10542     0DC9  1D03               	skipz
 10543     0DCA  2DCD               	goto	u5605
 10544     0DCB  3001               	movlw	1
 10545     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
 10546     0DCD                     u5605:
 10547     0DCD  1803               	skipnc
 10548     0DCE  2DD0               	goto	u5601
 10549     0DCF  2DD1               	goto	u5600
 10550     0DD0                     u5601:
 10551     0DD0  2DDD               	goto	l1596
 10552     0DD1                     u5600:
 10553     0DD1                     l5089:
 10554     0DD1  0021               	movlb	1	; select bank1
 10555     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
 10556     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
 10557     0DD4                     l5091:
 10558     0DD4  3000               	movlw	0
 10559     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
 10560     0DD6  3000               	movlw	0
 10561     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
 10562     0DD8  3000               	movlw	0
 10563     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
 10564     0DDA  3000               	movlw	0
 10565     0DDB  00A4               	movwf	___fldiv@b^(0+128)
 10566     0DDC                     l5093:
 10567     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
 10568     0DDD                     l1596:
 10569     0DDD  0021               	movlb	1	; select bank1
 10570     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
 10571     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
 10572     0DE0                     l5095:
 10573     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
 10574     0DE1  2DE3               	goto	u5611
 10575     0DE2  2DE4               	goto	u5610
 10576     0DE3                     u5611:
 10577     0DE3  2DE6               	goto	l5099
 10578     0DE4                     u5610:
 10579     0DE4                     l5097:
 10580     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
 10581     0DE5  2DE8               	goto	l1598
 10582     0DE6                     l5099:
 10583     0DE6  307F               	movlw	127
 10584     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
 10585     0DE8                     l1598:
 10586     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
 10587     0DE9  00A8               	movwf	??___fldiv^(0+128)
 10588     0DEA  3001               	movlw	1
 10589     0DEB                     u5625:
 10590     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
 10591     0DEC  0B89               	decfsz	9,f
 10592     0DED  2DEB               	goto	u5625
 10593     0DEE  0828               	movf	??___fldiv^(0+128),w
 10594     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
 10595     0DF0  0831               	movf	___fldiv@sign^(0+128),w
 10596     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
 10597     0DF2  2CB5               	goto	l5009
 10598     0DF3                     l1576:
 10599     0DF3  0008               	return
 10600     0DF4                     __end_of___fldiv:
 10601                           
 10602                           	psect	text7
 10603     0507                     __ptext7:	
 10604 ;; *************** function ___fladd *****************
 10605 ;; Defined at:
 10606 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  b               4   14[BANK1 ] unsigned char 
 10609 ;;  a               4   18[BANK1 ] unsigned char 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  grs             1   33[BANK1 ] unsigned char 
 10612 ;;  bexp            1   32[BANK1 ] unsigned char 
 10613 ;;  aexp            1   31[BANK1 ] unsigned char 
 10614 ;;  signs           1   30[BANK1 ] unsigned char 
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  4   14[BANK1 ] unsigned char 
 10617 ;; Registers used:
 10618 ;;		wreg, status,2, status,0
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10624 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;Total ram usage:       20 bytes
 10629 ;; Hardware stack levels used: 1
 10630 ;; Hardware stack levels required when called: 5
 10631 ;; This function calls:
 10632 ;;		Nothing
 10633 ;; This function is called by:
 10634 ;;		_str2float
 10635 ;;		_getLedNumber
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639     0507                     ___fladd:	
 10640                           ;psect for function ___fladd
 10641                           
 10642     0507                     l4769:	
 10643                           ;incstack = 0
 10644                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10645                           
 10646     0507  0021               	movlb	1	; select bank1
 10647     0508  0831               	movf	(___fladd@b^(0+128)+3),w
 10648     0509  3980               	andlw	128
 10649     050A  00BE               	movwf	___fladd@signs^(0+128)
 10650     050B                     l4771:
 10651     050B  3531               	lslf	(___fladd@b^(0+128)+3),w
 10652     050C  00C0               	movwf	___fladd@bexp^(0+128)
 10653     050D                     l4773:
 10654     050D  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 10655     050E  2D10               	goto	u4871
 10656     050F  2D11               	goto	u4870
 10657     0510                     u4871:
 10658     0510  2D12               	goto	l4777
 10659     0511                     u4870:
 10660     0511                     l4775:
 10661     0511  1440               	bsf	___fladd@bexp^(0+128),0
 10662     0512                     l4777:
 10663     0512  0840               	movf	___fladd@bexp^(0+128),w
 10664     0513  1903               	btfsc	3,2
 10665     0514  2D16               	goto	u4881
 10666     0515  2D17               	goto	u4880
 10667     0516                     u4881:
 10668     0516  2D27               	goto	l4787
 10669     0517                     u4880:
 10670     0517                     l4779:
 10671     0517  0A40               	incf	___fladd@bexp^(0+128),w
 10672     0518  1D03               	btfss	3,2
 10673     0519  2D1B               	goto	u4891
 10674     051A  2D1C               	goto	u4890
 10675     051B                     u4891:
 10676     051B  2D24               	goto	l4783
 10677     051C                     u4890:
 10678     051C                     l4781:
 10679     051C  3000               	movlw	0
 10680     051D  00B1               	movwf	(___fladd@b+3)^(0+128)
 10681     051E  3000               	movlw	0
 10682     051F  00B0               	movwf	(___fladd@b+2)^(0+128)
 10683     0520  3000               	movlw	0
 10684     0521  00AF               	movwf	(___fladd@b+1)^(0+128)
 10685     0522  3000               	movlw	0
 10686     0523  00AE               	movwf	___fladd@b^(0+128)
 10687     0524                     l4783:
 10688     0524  17B0               	bsf	(___fladd@b^(0+128)+2),7
 10689     0525                     l4785:
 10690     0525  01B1               	clrf	(___fladd@b^(0+128)+3)
 10691     0526  2D2F               	goto	l4789
 10692     0527                     l4787:
 10693     0527  3000               	movlw	0
 10694     0528  00B1               	movwf	(___fladd@b+3)^(0+128)
 10695     0529  3000               	movlw	0
 10696     052A  00B0               	movwf	(___fladd@b+2)^(0+128)
 10697     052B  3000               	movlw	0
 10698     052C  00AF               	movwf	(___fladd@b+1)^(0+128)
 10699     052D  3000               	movlw	0
 10700     052E  00AE               	movwf	___fladd@b^(0+128)
 10701     052F                     l4789:
 10702     052F  0835               	movf	(___fladd@a^(0+128)+3),w
 10703     0530  3980               	andlw	128
 10704     0531  00BF               	movwf	___fladd@aexp^(0+128)
 10705     0532                     l4791:
 10706     0532  083F               	movf	___fladd@aexp^(0+128),w
 10707     0533  063E               	xorwf	___fladd@signs^(0+128),w
 10708     0534  1903               	skipnz
 10709     0535  2D37               	goto	u4901
 10710     0536  2D38               	goto	u4900
 10711     0537                     u4901:
 10712     0537  2D39               	goto	l4795
 10713     0538                     u4900:
 10714     0538                     l4793:
 10715     0538  173E               	bsf	___fladd@signs^(0+128),6
 10716     0539                     l4795:
 10717     0539  3535               	lslf	(___fladd@a^(0+128)+3),w
 10718     053A  00BF               	movwf	___fladd@aexp^(0+128)
 10719     053B                     l4797:
 10720     053B  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 10721     053C  2D3E               	goto	u4911
 10722     053D  2D3F               	goto	u4910
 10723     053E                     u4911:
 10724     053E  2D40               	goto	l4801
 10725     053F                     u4910:
 10726     053F                     l4799:
 10727     053F  143F               	bsf	___fladd@aexp^(0+128),0
 10728     0540                     l4801:
 10729     0540  083F               	movf	___fladd@aexp^(0+128),w
 10730     0541  1903               	btfsc	3,2
 10731     0542  2D44               	goto	u4921
 10732     0543  2D45               	goto	u4920
 10733     0544                     u4921:
 10734     0544  2D55               	goto	l4811
 10735     0545                     u4920:
 10736     0545                     l4803:
 10737     0545  0A3F               	incf	___fladd@aexp^(0+128),w
 10738     0546  1D03               	btfss	3,2
 10739     0547  2D49               	goto	u4931
 10740     0548  2D4A               	goto	u4930
 10741     0549                     u4931:
 10742     0549  2D52               	goto	l4807
 10743     054A                     u4930:
 10744     054A                     l4805:
 10745     054A  3000               	movlw	0
 10746     054B  00B5               	movwf	(___fladd@a+3)^(0+128)
 10747     054C  3000               	movlw	0
 10748     054D  00B4               	movwf	(___fladd@a+2)^(0+128)
 10749     054E  3000               	movlw	0
 10750     054F  00B3               	movwf	(___fladd@a+1)^(0+128)
 10751     0550  3000               	movlw	0
 10752     0551  00B2               	movwf	___fladd@a^(0+128)
 10753     0552                     l4807:
 10754     0552  17B4               	bsf	(___fladd@a^(0+128)+2),7
 10755     0553                     l4809:
 10756     0553  01B5               	clrf	(___fladd@a^(0+128)+3)
 10757     0554  2D5D               	goto	l1518
 10758     0555                     l4811:
 10759     0555  3000               	movlw	0
 10760     0556  00B5               	movwf	(___fladd@a+3)^(0+128)
 10761     0557  3000               	movlw	0
 10762     0558  00B4               	movwf	(___fladd@a+2)^(0+128)
 10763     0559  3000               	movlw	0
 10764     055A  00B3               	movwf	(___fladd@a+1)^(0+128)
 10765     055B  3000               	movlw	0
 10766     055C  00B2               	movwf	___fladd@a^(0+128)
 10767     055D                     l1518:
 10768     055D  0840               	movf	___fladd@bexp^(0+128),w
 10769     055E  023F               	subwf	___fladd@aexp^(0+128),w
 10770     055F  1803               	skipnc
 10771     0560  2D62               	goto	u4941
 10772     0561  2D63               	goto	u4940
 10773     0562                     u4941:
 10774     0562  2D87               	goto	l4847
 10775     0563                     u4940:
 10776     0563                     l4813:
 10777     0563  1F3E               	btfss	___fladd@signs^(0+128),6
 10778     0564  2D66               	goto	u4951
 10779     0565  2D67               	goto	u4950
 10780     0566                     u4951:
 10781     0566  2D69               	goto	l4817
 10782     0567                     u4950:
 10783     0567                     l4815:
 10784     0567  3080               	movlw	128
 10785     0568  06BE               	xorwf	___fladd@signs^(0+128),f
 10786     0569                     l4817:
 10787     0569  0840               	movf	___fladd@bexp^(0+128),w
 10788     056A  00C1               	movwf	___fladd@grs^(0+128)
 10789     056B                     l4819:
 10790     056B  083F               	movf	___fladd@aexp^(0+128),w
 10791     056C  00C0               	movwf	___fladd@bexp^(0+128)
 10792     056D                     l4821:
 10793     056D  0841               	movf	___fladd@grs^(0+128),w
 10794     056E  00BF               	movwf	___fladd@aexp^(0+128)
 10795     056F                     l4823:
 10796     056F  082E               	movf	___fladd@b^(0+128),w
 10797     0570  00C1               	movwf	___fladd@grs^(0+128)
 10798     0571                     l4825:
 10799     0571  0832               	movf	___fladd@a^(0+128),w
 10800     0572  00AE               	movwf	___fladd@b^(0+128)
 10801     0573                     l4827:
 10802     0573  0841               	movf	___fladd@grs^(0+128),w
 10803     0574  00B2               	movwf	___fladd@a^(0+128)
 10804     0575                     l4829:
 10805     0575  082F               	movf	(___fladd@b^(0+128)+1),w
 10806     0576  00C1               	movwf	___fladd@grs^(0+128)
 10807     0577                     l4831:
 10808     0577  0833               	movf	(___fladd@a^(0+128)+1),w
 10809     0578  00AF               	movwf	(___fladd@b^(0+128)+1)
 10810     0579                     l4833:
 10811     0579  0841               	movf	___fladd@grs^(0+128),w
 10812     057A  00B3               	movwf	(___fladd@a^(0+128)+1)
 10813     057B                     l4835:
 10814     057B  0830               	movf	(___fladd@b^(0+128)+2),w
 10815     057C  00C1               	movwf	___fladd@grs^(0+128)
 10816     057D                     l4837:
 10817     057D  0834               	movf	(___fladd@a^(0+128)+2),w
 10818     057E  00B0               	movwf	(___fladd@b^(0+128)+2)
 10819     057F                     l4839:
 10820     057F  0841               	movf	___fladd@grs^(0+128),w
 10821     0580  00B4               	movwf	(___fladd@a^(0+128)+2)
 10822     0581                     l4841:
 10823     0581  0831               	movf	(___fladd@b^(0+128)+3),w
 10824     0582  00C1               	movwf	___fladd@grs^(0+128)
 10825     0583                     l4843:
 10826     0583  0835               	movf	(___fladd@a^(0+128)+3),w
 10827     0584  00B1               	movwf	(___fladd@b^(0+128)+3)
 10828     0585                     l4845:
 10829     0585  0841               	movf	___fladd@grs^(0+128),w
 10830     0586  00B5               	movwf	(___fladd@a^(0+128)+3)
 10831     0587                     l4847:
 10832     0587  01C1               	clrf	___fladd@grs^(0+128)
 10833     0588                     l4849:
 10834     0588  083F               	movf	___fladd@aexp^(0+128),w
 10835     0589  00B6               	movwf	??___fladd^(0+128)
 10836     058A  01B7               	clrf	(??___fladd^(0+128)+1)
 10837     058B  0837               	movf	(??___fladd+1)^(0+128),w
 10838     058C  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 10839     058D  0840               	movf	___fladd@bexp^(0+128),w
 10840     058E  0236               	subwf	??___fladd^(0+128),w
 10841     058F  00B8               	movwf	(??___fladd+2)^(0+128)
 10842     0590  1C03               	skipc
 10843     0591  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 10844     0592  0839               	movf	(??___fladd+3)^(0+128),w
 10845     0593  3A80               	xorlw	128
 10846     0594  00BA               	movwf	(??___fladd+4)^(0+128)
 10847     0595  3080               	movlw	128
 10848     0596  023A               	subwf	(??___fladd+4)^(0+128),w
 10849     0597  1D03               	skipz
 10850     0598  2D9B               	goto	u4965
 10851     0599  301A               	movlw	26
 10852     059A  0238               	subwf	(??___fladd+2)^(0+128),w
 10853     059B                     u4965:
 10854     059B  1C03               	skipc
 10855     059C  2D9E               	goto	u4961
 10856     059D  2D9F               	goto	u4960
 10857     059E                     u4961:
 10858     059E  2DD5               	goto	l4865
 10859     059F                     u4960:
 10860     059F                     l4851:
 10861     059F  0021               	movlb	1	; select bank1
 10862     05A0  0831               	movf	(___fladd@b+3)^(0+128),w
 10863     05A1  0430               	iorwf	(___fladd@b+2)^(0+128),w
 10864     05A2  042F               	iorwf	(___fladd@b+1)^(0+128),w
 10865     05A3  042E               	iorwf	___fladd@b^(0+128),w
 10866     05A4  1D03               	skipz
 10867     05A5  2DA7               	goto	u4971
 10868     05A6  2DA9               	goto	u4970
 10869     05A7                     u4971:
 10870     05A7  3001               	movlw	1
 10871     05A8  2DAA               	goto	u4980
 10872     05A9                     u4970:
 10873     05A9  3000               	movlw	0
 10874     05AA                     u4980:
 10875     05AA  00C1               	movwf	___fladd@grs^(0+128)
 10876     05AB  3000               	movlw	0
 10877     05AC  00B1               	movwf	(___fladd@b+3)^(0+128)
 10878     05AD  3000               	movlw	0
 10879     05AE  00B0               	movwf	(___fladd@b+2)^(0+128)
 10880     05AF  3000               	movlw	0
 10881     05B0  00AF               	movwf	(___fladd@b+1)^(0+128)
 10882     05B1  3000               	movlw	0
 10883     05B2  00AE               	movwf	___fladd@b^(0+128)
 10884     05B3  083F               	movf	___fladd@aexp^(0+128),w
 10885     05B4  00C0               	movwf	___fladd@bexp^(0+128)
 10886     05B5  2DDC               	goto	l1522
 10887     05B6                     l1524:
 10888     05B6  1C41               	btfss	___fladd@grs^(0+128),0
 10889     05B7  2DB9               	goto	u4991
 10890     05B8  2DBA               	goto	u4990
 10891     05B9                     u4991:
 10892     05B9  2DC4               	goto	l4855
 10893     05BA                     u4990:
 10894     05BA                     l4853:
 10895     05BA  0841               	movf	___fladd@grs^(0+128),w
 10896     05BB  00B6               	movwf	??___fladd^(0+128)
 10897     05BC  3001               	movlw	1
 10898     05BD                     u5005:
 10899     05BD  36B6               	lsrf	??___fladd^(0+128),f
 10900     05BE  0B89               	decfsz	9,f
 10901     05BF  2DBD               	goto	u5005
 10902     05C0  0836               	movf	??___fladd^(0+128),w
 10903     05C1  3801               	iorlw	1
 10904     05C2  00C1               	movwf	___fladd@grs^(0+128)
 10905     05C3  2DC6               	goto	l4857
 10906     05C4                     l4855:
 10907     05C4  1003               	clrc
 10908     05C5  0CC1               	rrf	___fladd@grs^(0+128),f
 10909     05C6                     l4857:
 10910     05C6  1C2E               	btfss	___fladd@b^(0+128),0
 10911     05C7  2DC9               	goto	u5011
 10912     05C8  2DCA               	goto	u5010
 10913     05C9                     u5011:
 10914     05C9  2DCB               	goto	l4861
 10915     05CA                     u5010:
 10916     05CA                     l4859:
 10917     05CA  17C1               	bsf	___fladd@grs^(0+128),7
 10918     05CB                     l4861:
 10919     05CB  3001               	movlw	1
 10920     05CC  00B6               	movwf	??___fladd^(0+128)
 10921     05CD                     u5025:
 10922     05CD  37B1               	asrf	(___fladd@b+3)^(0+128),f
 10923     05CE  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 10924     05CF  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 10925     05D0  0CAE               	rrf	___fladd@b^(0+128),f
 10926     05D1  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 10927     05D2  2DCD               	goto	u5025
 10928     05D3                     l4863:
 10929     05D3  3001               	movlw	1
 10930     05D4  07C0               	addwf	___fladd@bexp^(0+128),f
 10931     05D5                     l4865:
 10932     05D5  0021               	movlb	1	; select bank1
 10933     05D6  083F               	movf	___fladd@aexp^(0+128),w
 10934     05D7  0240               	subwf	___fladd@bexp^(0+128),w
 10935     05D8  1C03               	skipc
 10936     05D9  2DDB               	goto	u5031
 10937     05DA  2DDC               	goto	u5030
 10938     05DB                     u5031:
 10939     05DB  2DB6               	goto	l1524
 10940     05DC                     u5030:
 10941     05DC                     l1522:
 10942     05DC  1B3E               	btfsc	___fladd@signs^(0+128),6
 10943     05DD  2DDF               	goto	u5041
 10944     05DE  2DE0               	goto	u5040
 10945     05DF                     u5041:
 10946     05DF  2E1A               	goto	l4891
 10947     05E0                     u5040:
 10948     05E0                     l4867:
 10949     05E0  0840               	movf	___fladd@bexp^(0+128),w
 10950     05E1  1D03               	btfss	3,2
 10951     05E2  2DE4               	goto	u5051
 10952     05E3  2DE5               	goto	u5050
 10953     05E4                     u5051:
 10954     05E4  2DEE               	goto	l4873
 10955     05E5                     u5050:
 10956     05E5                     l4869:
 10957     05E5  3000               	movlw	0
 10958     05E6  00B1               	movwf	(?___fladd+3)^(0+128)
 10959     05E7  3000               	movlw	0
 10960     05E8  00B0               	movwf	(?___fladd+2)^(0+128)
 10961     05E9  3000               	movlw	0
 10962     05EA  00AF               	movwf	(?___fladd+1)^(0+128)
 10963     05EB  3000               	movlw	0
 10964     05EC  00AE               	movwf	?___fladd^(0+128)
 10965     05ED  2F12               	goto	l1531
 10966     05EE                     l4873:
 10967     05EE  0832               	movf	___fladd@a^(0+128),w
 10968     05EF  07AE               	addwf	___fladd@b^(0+128),f
 10969     05F0  0833               	movf	(___fladd@a+1)^(0+128),w
 10970     05F1  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 10971     05F2  0834               	movf	(___fladd@a+2)^(0+128),w
 10972     05F3  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 10973     05F4  0835               	movf	(___fladd@a+3)^(0+128),w
 10974     05F5  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 10975     05F6                     l4875:
 10976     05F6  1C31               	btfss	(___fladd@b+3)^(0+128),0
 10977     05F7  2DF9               	goto	u5061
 10978     05F8  2DFA               	goto	u5060
 10979     05F9                     u5061:
 10980     05F9  2EA4               	goto	l4927
 10981     05FA                     u5060:
 10982     05FA                     l4877:
 10983     05FA  1C41               	btfss	___fladd@grs^(0+128),0
 10984     05FB  2DFD               	goto	u5071
 10985     05FC  2DFE               	goto	u5070
 10986     05FD                     u5071:
 10987     05FD  2E08               	goto	l4881
 10988     05FE                     u5070:
 10989     05FE                     l4879:
 10990     05FE  0841               	movf	___fladd@grs^(0+128),w
 10991     05FF  00B6               	movwf	??___fladd^(0+128)
 10992     0600  3001               	movlw	1
 10993     0601                     u5085:
 10994     0601  36B6               	lsrf	??___fladd^(0+128),f
 10995     0602  0B89               	decfsz	9,f
 10996     0603  2E01               	goto	u5085
 10997     0604  0836               	movf	??___fladd^(0+128),w
 10998     0605  3801               	iorlw	1
 10999     0606  00C1               	movwf	___fladd@grs^(0+128)
 11000     0607  2E0A               	goto	l4883
 11001     0608                     l4881:
 11002     0608  1003               	clrc
 11003     0609  0CC1               	rrf	___fladd@grs^(0+128),f
 11004     060A                     l4883:
 11005     060A  1C2E               	btfss	___fladd@b^(0+128),0
 11006     060B  2E0D               	goto	u5091
 11007     060C  2E0E               	goto	u5090
 11008     060D                     u5091:
 11009     060D  2E0F               	goto	l4887
 11010     060E                     u5090:
 11011     060E                     l4885:
 11012     060E  17C1               	bsf	___fladd@grs^(0+128),7
 11013     060F                     l4887:
 11014     060F  3001               	movlw	1
 11015     0610  00B6               	movwf	??___fladd^(0+128)
 11016     0611                     u5105:
 11017     0611  37B1               	asrf	(___fladd@b+3)^(0+128),f
 11018     0612  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 11019     0613  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 11020     0614  0CAE               	rrf	___fladd@b^(0+128),f
 11021     0615  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 11022     0616  2E11               	goto	u5105
 11023     0617                     l4889:
 11024     0617  3001               	movlw	1
 11025     0618  07C0               	addwf	___fladd@bexp^(0+128),f
 11026     0619  2EA4               	goto	l4927
 11027     061A                     l4891:
 11028     061A  0831               	movf	(___fladd@b+3)^(0+128),w
 11029     061B  3A80               	xorlw	128
 11030     061C  00B6               	movwf	??___fladd^(0+128)
 11031     061D  0835               	movf	(___fladd@a+3)^(0+128),w
 11032     061E  3A80               	xorlw	128
 11033     061F  0236               	subwf	??___fladd^(0+128),w
 11034     0620  1D03               	skipz
 11035     0621  2E2C               	goto	u5113
 11036     0622  0834               	movf	(___fladd@a+2)^(0+128),w
 11037     0623  0230               	subwf	(___fladd@b+2)^(0+128),w
 11038     0624  1D03               	skipz
 11039     0625  2E2C               	goto	u5113
 11040     0626  0833               	movf	(___fladd@a+1)^(0+128),w
 11041     0627  022F               	subwf	(___fladd@b+1)^(0+128),w
 11042     0628  1D03               	skipz
 11043     0629  2E2C               	goto	u5113
 11044     062A  0832               	movf	___fladd@a^(0+128),w
 11045     062B  022E               	subwf	___fladd@b^(0+128),w
 11046     062C                     u5113:
 11047     062C  1803               	skipnc
 11048     062D  2E2F               	goto	u5111
 11049     062E  2E30               	goto	u5110
 11050     062F                     u5111:
 11051     062F  2E65               	goto	l4903
 11052     0630                     u5110:
 11053     0630                     l4893:
 11054     0630  30FF               	movlw	255
 11055     0631  00B6               	movwf	??___fladd^(0+128)
 11056     0632  30FF               	movlw	255
 11057     0633  00B7               	movwf	(??___fladd^(0+128)+1)
 11058     0634  30FF               	movlw	255
 11059     0635  00B8               	movwf	(??___fladd^(0+128)+2)
 11060     0636  30FF               	movlw	255
 11061     0637  00B9               	movwf	(??___fladd^(0+128)+3)
 11062     0638  082E               	movf	___fladd@b^(0+128),w
 11063     0639  0232               	subwf	___fladd@a^(0+128),w
 11064     063A  00BA               	movwf	(??___fladd+4)^(0+128)
 11065     063B  082F               	movf	(___fladd@b+1)^(0+128),w
 11066     063C  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 11067     063D  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 11068     063E  0830               	movf	(___fladd@b+2)^(0+128),w
 11069     063F  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 11070     0640  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 11071     0641  0831               	movf	(___fladd@b+3)^(0+128),w
 11072     0642  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 11073     0643  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 11074     0644  083A               	movf	(??___fladd+4)^(0+128),w
 11075     0645  07B6               	addwf	??___fladd^(0+128),f
 11076     0646  083B               	movf	(??___fladd+5)^(0+128),w
 11077     0647  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 11078     0648  083C               	movf	(??___fladd+6)^(0+128),w
 11079     0649  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 11080     064A  083D               	movf	(??___fladd+7)^(0+128),w
 11081     064B  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 11082     064C  0839               	movf	(??___fladd+3)^(0+128),w
 11083     064D  00B1               	movwf	(___fladd@b+3)^(0+128)
 11084     064E  0838               	movf	(??___fladd+2)^(0+128),w
 11085     064F  00B0               	movwf	(___fladd@b+2)^(0+128)
 11086     0650  0837               	movf	(??___fladd+1)^(0+128),w
 11087     0651  00AF               	movwf	(___fladd@b+1)^(0+128)
 11088     0652  0836               	movf	??___fladd^(0+128),w
 11089     0653  00AE               	movwf	___fladd@b^(0+128)
 11090     0654                     l4895:
 11091     0654  3080               	movlw	128
 11092     0655  06BE               	xorwf	___fladd@signs^(0+128),f
 11093     0656                     l4897:
 11094     0656  0341               	decf	___fladd@grs^(0+128),w
 11095     0657  3AFF               	xorlw	255
 11096     0658  00C1               	movwf	___fladd@grs^(0+128)
 11097     0659                     l4899:
 11098     0659  0841               	movf	___fladd@grs^(0+128),w
 11099     065A  1D03               	btfss	3,2
 11100     065B  2E5D               	goto	u5121
 11101     065C  2E5E               	goto	u5120
 11102     065D                     u5121:
 11103     065D  2E6D               	goto	l1539
 11104     065E                     u5120:
 11105     065E                     l4901:
 11106     065E  3001               	movlw	1
 11107     065F  07AE               	addwf	___fladd@b^(0+128),f
 11108     0660  3000               	movlw	0
 11109     0661  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 11110     0662  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 11111     0663  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 11112     0664  2E6D               	goto	l1539
 11113     0665                     l4903:
 11114     0665  0832               	movf	___fladd@a^(0+128),w
 11115     0666  02AE               	subwf	___fladd@b^(0+128),f
 11116     0667  0833               	movf	(___fladd@a+1)^(0+128),w
 11117     0668  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 11118     0669  0834               	movf	(___fladd@a+2)^(0+128),w
 11119     066A  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 11120     066B  0835               	movf	(___fladd@a+3)^(0+128),w
 11121     066C  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 11122     066D                     l1539:
 11123     066D  0831               	movf	(___fladd@b+3)^(0+128),w
 11124     066E  0430               	iorwf	(___fladd@b+2)^(0+128),w
 11125     066F  042F               	iorwf	(___fladd@b+1)^(0+128),w
 11126     0670  042E               	iorwf	___fladd@b^(0+128),w
 11127     0671  1D03               	skipz
 11128     0672  2E74               	goto	u5131
 11129     0673  2E75               	goto	u5130
 11130     0674                     u5131:
 11131     0674  2EA0               	goto	l4925
 11132     0675                     u5130:
 11133     0675                     l4905:
 11134     0675  0841               	movf	___fladd@grs^(0+128),w
 11135     0676  1D03               	btfss	3,2
 11136     0677  2E79               	goto	u5141
 11137     0678  2E7A               	goto	u5140
 11138     0679                     u5141:
 11139     0679  2EA0               	goto	l4925
 11140     067A                     u5140:
 11141     067A                     l4907:
 11142     067A  3000               	movlw	0
 11143     067B  00B1               	movwf	(?___fladd+3)^(0+128)
 11144     067C  3000               	movlw	0
 11145     067D  00B0               	movwf	(?___fladd+2)^(0+128)
 11146     067E  3000               	movlw	0
 11147     067F  00AF               	movwf	(?___fladd+1)^(0+128)
 11148     0680  3000               	movlw	0
 11149     0681  00AE               	movwf	?___fladd^(0+128)
 11150     0682  2F12               	goto	l1531
 11151     0683                     l4911:
 11152     0683  3001               	movlw	1
 11153     0684                     u5155:
 11154     0684  35AE               	lslf	___fladd@b^(0+128),f
 11155     0685  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 11156     0686  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 11157     0687  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 11158     0688  0B89               	decfsz	9,f
 11159     0689  2E84               	goto	u5155
 11160     068A                     l4913:
 11161     068A  1FC1               	btfss	___fladd@grs^(0+128),7
 11162     068B  2E8D               	goto	u5161
 11163     068C  2E8E               	goto	u5160
 11164     068D                     u5161:
 11165     068D  2E8F               	goto	l1543
 11166     068E                     u5160:
 11167     068E                     l4915:
 11168     068E  142E               	bsf	___fladd@b^(0+128),0
 11169     068F                     l1543:
 11170     068F  1C41               	btfss	___fladd@grs^(0+128),0
 11171     0690  2E92               	goto	u5171
 11172     0691  2E93               	goto	u5170
 11173     0692                     u5171:
 11174     0692  2E97               	goto	l4919
 11175     0693                     u5170:
 11176     0693                     l4917:
 11177     0693  1403               	setc
 11178     0694  0D41               	rlf	___fladd@grs^(0+128),w
 11179     0695  00C1               	movwf	___fladd@grs^(0+128)
 11180     0696  2E99               	goto	l4921
 11181     0697                     l4919:
 11182     0697  1003               	clrc
 11183     0698  0DC1               	rlf	___fladd@grs^(0+128),f
 11184     0699                     l4921:
 11185     0699  0840               	movf	___fladd@bexp^(0+128),w
 11186     069A  1903               	btfsc	3,2
 11187     069B  2E9D               	goto	u5181
 11188     069C  2E9E               	goto	u5180
 11189     069D                     u5181:
 11190     069D  2EA0               	goto	l4925
 11191     069E                     u5180:
 11192     069E                     l4923:
 11193     069E  3001               	movlw	1
 11194     069F  02C0               	subwf	___fladd@bexp^(0+128),f
 11195     06A0                     l4925:
 11196     06A0  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 11197     06A1  2EA3               	goto	u5191
 11198     06A2  2EA4               	goto	u5190
 11199     06A3                     u5191:
 11200     06A3  2E83               	goto	l4911
 11201     06A4                     u5190:
 11202     06A4                     l4927:
 11203     06A4  01BF               	clrf	___fladd@aexp^(0+128)
 11204     06A5                     l4929:
 11205     06A5  1FC1               	btfss	___fladd@grs^(0+128),7
 11206     06A6  2EA8               	goto	u5201
 11207     06A7  2EA9               	goto	u5200
 11208     06A8                     u5201:
 11209     06A8  2EB7               	goto	l4937
 11210     06A9                     u5200:
 11211     06A9                     l4931:
 11212     06A9  0841               	movf	___fladd@grs^(0+128),w
 11213     06AA  397F               	andlw	127
 11214     06AB  1903               	btfsc	3,2
 11215     06AC  2EAE               	goto	u5211
 11216     06AD  2EAF               	goto	u5210
 11217     06AE                     u5211:
 11218     06AE  2EB2               	goto	l1549
 11219     06AF                     u5210:
 11220     06AF                     l4933:
 11221     06AF  3001               	movlw	1
 11222     06B0  00BF               	movwf	___fladd@aexp^(0+128)
 11223     06B1  2EB7               	goto	l4937
 11224     06B2                     l1549:
 11225     06B2  1C2E               	btfss	___fladd@b^(0+128),0
 11226     06B3  2EB5               	goto	u5221
 11227     06B4  2EB6               	goto	u5220
 11228     06B5                     u5221:
 11229     06B5  2EB7               	goto	l4937
 11230     06B6                     u5220:
 11231     06B6  2EAF               	goto	l4933
 11232     06B7                     l4937:
 11233     06B7  083F               	movf	___fladd@aexp^(0+128),w
 11234     06B8  1903               	btfsc	3,2
 11235     06B9  2EBB               	goto	u5231
 11236     06BA  2EBC               	goto	u5230
 11237     06BB                     u5231:
 11238     06BB  2EE5               	goto	l1552
 11239     06BC                     u5230:
 11240     06BC                     l4939:
 11241     06BC  3001               	movlw	1
 11242     06BD  07AE               	addwf	___fladd@b^(0+128),f
 11243     06BE  3000               	movlw	0
 11244     06BF  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 11245     06C0  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 11246     06C1  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 11247     06C2                     l4941:
 11248     06C2  1C31               	btfss	(___fladd@b+3)^(0+128),0
 11249     06C3  2EC5               	goto	u5241
 11250     06C4  2EC6               	goto	u5240
 11251     06C5                     u5241:
 11252     06C5  2EE5               	goto	l1552
 11253     06C6                     u5240:
 11254     06C6                     l4943:
 11255     06C6  082E               	movf	___fladd@b^(0+128),w
 11256     06C7  00B6               	movwf	??___fladd^(0+128)
 11257     06C8  082F               	movf	(___fladd@b+1)^(0+128),w
 11258     06C9  00B7               	movwf	(??___fladd^(0+128)+1)
 11259     06CA  0830               	movf	(___fladd@b+2)^(0+128),w
 11260     06CB  00B8               	movwf	(??___fladd^(0+128)+2)
 11261     06CC  0831               	movf	(___fladd@b+3)^(0+128),w
 11262     06CD  00B9               	movwf	(??___fladd^(0+128)+3)
 11263     06CE  3001               	movlw	1
 11264     06CF  00BA               	movwf	(??___fladd+4)^(0+128)
 11265     06D0                     u5255:
 11266     06D0  37B9               	asrf	(??___fladd^(0+128)+3),f
 11267     06D1  0CB8               	rrf	(??___fladd^(0+128)+2),f
 11268     06D2  0CB7               	rrf	(??___fladd^(0+128)+1),f
 11269     06D3  0CB6               	rrf	??___fladd^(0+128),f
 11270     06D4                     u5250:
 11271     06D4  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 11272     06D5  2ED0               	goto	u5255
 11273     06D6  0839               	movf	(??___fladd+3)^(0+128),w
 11274     06D7  00B1               	movwf	(___fladd@b+3)^(0+128)
 11275     06D8  0838               	movf	(??___fladd+2)^(0+128),w
 11276     06D9  00B0               	movwf	(___fladd@b+2)^(0+128)
 11277     06DA  0837               	movf	(??___fladd+1)^(0+128),w
 11278     06DB  00AF               	movwf	(___fladd@b+1)^(0+128)
 11279     06DC  0836               	movf	??___fladd^(0+128),w
 11280     06DD  00AE               	movwf	___fladd@b^(0+128)
 11281     06DE  0A40               	incf	___fladd@bexp^(0+128),w
 11282     06DF  1903               	btfsc	3,2
 11283     06E0  2EE2               	goto	u5261
 11284     06E1  2EE3               	goto	u5260
 11285     06E2                     u5261:
 11286     06E2  2EE5               	goto	l1552
 11287     06E3                     u5260:
 11288     06E3                     l4945:
 11289     06E3  3001               	movlw	1
 11290     06E4  07C0               	addwf	___fladd@bexp^(0+128),f
 11291     06E5                     l1552:
 11292     06E5  0A40               	incf	___fladd@bexp^(0+128),w
 11293     06E6  1903               	btfsc	3,2
 11294     06E7  2EE9               	goto	u5271
 11295     06E8  2EEA               	goto	u5270
 11296     06E9                     u5271:
 11297     06E9  2EEF               	goto	l4949
 11298     06EA                     u5270:
 11299     06EA                     l4947:
 11300     06EA  0840               	movf	___fladd@bexp^(0+128),w
 11301     06EB  1D03               	btfss	3,2
 11302     06EC  2EEE               	goto	u5281
 11303     06ED  2EEF               	goto	u5280
 11304     06EE                     u5281:
 11305     06EE  2EFD               	goto	l4955
 11306     06EF                     u5280:
 11307     06EF                     l4949:
 11308     06EF  3000               	movlw	0
 11309     06F0  00B1               	movwf	(___fladd@b+3)^(0+128)
 11310     06F1  3000               	movlw	0
 11311     06F2  00B0               	movwf	(___fladd@b+2)^(0+128)
 11312     06F3  3000               	movlw	0
 11313     06F4  00AF               	movwf	(___fladd@b+1)^(0+128)
 11314     06F5  3000               	movlw	0
 11315     06F6  00AE               	movwf	___fladd@b^(0+128)
 11316     06F7                     l4951:
 11317     06F7  0840               	movf	___fladd@bexp^(0+128),w
 11318     06F8  1D03               	btfss	3,2
 11319     06F9  2EFB               	goto	u5291
 11320     06FA  2EFC               	goto	u5290
 11321     06FB                     u5291:
 11322     06FB  2EFD               	goto	l4955
 11323     06FC                     u5290:
 11324     06FC                     l4953:
 11325     06FC  01BE               	clrf	___fladd@signs^(0+128)
 11326     06FD                     l4955:
 11327     06FD  1C40               	btfss	___fladd@bexp^(0+128),0
 11328     06FE  2F00               	goto	u5301
 11329     06FF  2F01               	goto	u5300
 11330     0700                     u5301:
 11331     0700  2F03               	goto	l4959
 11332     0701                     u5300:
 11333     0701                     l4957:
 11334     0701  17B0               	bsf	(___fladd@b^(0+128)+2),7
 11335     0702  2F05               	goto	l1560
 11336     0703                     l4959:
 11337     0703  307F               	movlw	127
 11338     0704  05B0               	andwf	(___fladd@b^(0+128)+2),f
 11339     0705                     l1560:
 11340     0705  0840               	movf	___fladd@bexp^(0+128),w
 11341     0706  00B6               	movwf	??___fladd^(0+128)
 11342     0707  3001               	movlw	1
 11343     0708                     u5315:
 11344     0708  36B6               	lsrf	??___fladd^(0+128),f
 11345     0709  0B89               	decfsz	9,f
 11346     070A  2F08               	goto	u5315
 11347     070B  0836               	movf	??___fladd^(0+128),w
 11348     070C  00B1               	movwf	(___fladd@b^(0+128)+3)
 11349     070D                     l4961:
 11350     070D  1FBE               	btfss	___fladd@signs^(0+128),7
 11351     070E  2F10               	goto	u5321
 11352     070F  2F11               	goto	u5320
 11353     0710                     u5321:
 11354     0710  2F12               	goto	l1561
 11355     0711                     u5320:
 11356     0711                     l4963:
 11357     0711  17B1               	bsf	(___fladd@b^(0+128)+3),7
 11358     0712                     l1561:
 11359     0712                     l1531:
 11360     0712  0008               	return
 11361     0713                     __end_of___fladd:
 11362                           
 11363                           	psect	text8
 11364     1EC4                     __ptext8:	
 11365 ;; *************** function _setKp *****************
 11366 ;; Defined at:
 11367 ;;		line 46 in file "controller.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  new_kp          4   47[BANK1 ] float 
 11370 ;; Auto vars:     Size  Location     Type
 11371 ;;		None
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  1    wreg      void 
 11374 ;; Registers used:
 11375 ;;		wreg
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11381 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;Total ram usage:        4 bytes
 11386 ;; Hardware stack levels used: 1
 11387 ;; Hardware stack levels required when called: 5
 11388 ;; This function calls:
 11389 ;;		Nothing
 11390 ;; This function is called by:
 11391 ;;		_uartHandler
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395     1EC4                     _setKp:	
 11396                           ;psect for function _setKp
 11397                           
 11398     1EC4                     l5971:	
 11399                           ;incstack = 0
 11400                           ; Regs used in _setKp: [wreg]
 11401                           
 11402     1EC4  0021               	movlb	1	; select bank1
 11403     1EC5  0852               	movf	(setKp@new_kp+3)^(0+128),w
 11404     1EC6  0022               	movlb	2	; select bank2
 11405     1EC7  00E7               	movwf	(_kp+3)^(0+256)
 11406     1EC8  0021               	movlb	1	; select bank1
 11407     1EC9  0851               	movf	(setKp@new_kp+2)^(0+128),w
 11408     1ECA  0022               	movlb	2	; select bank2
 11409     1ECB  00E6               	movwf	(_kp+2)^(0+256)
 11410     1ECC  0021               	movlb	1	; select bank1
 11411     1ECD  0850               	movf	(setKp@new_kp+1)^(0+128),w
 11412     1ECE  0022               	movlb	2	; select bank2
 11413     1ECF  00E5               	movwf	(_kp+1)^(0+256)
 11414     1ED0  0021               	movlb	1	; select bank1
 11415     1ED1  084F               	movf	setKp@new_kp^(0+128),w
 11416     1ED2  0022               	movlb	2	; select bank2
 11417     1ED3  00E4               	movwf	_kp^(0+256)
 11418     1ED4                     l971:
 11419     1ED4  0008               	return
 11420     1ED5                     __end_of_setKp:
 11421                           
 11422                           	psect	text9
 11423     1EB3                     __ptext9:	
 11424 ;; *************** function _setKi *****************
 11425 ;; Defined at:
 11426 ;;		line 47 in file "controller.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;  new_ki          4   47[BANK1 ] float 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		wreg
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11440 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;Total ram usage:        4 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; Hardware stack levels required when called: 5
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_uartHandler
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454     1EB3                     _setKi:	
 11455                           ;psect for function _setKi
 11456                           
 11457     1EB3                     l5973:	
 11458                           ;incstack = 0
 11459                           ; Regs used in _setKi: [wreg]
 11460                           
 11461     1EB3  0021               	movlb	1	; select bank1
 11462     1EB4  0852               	movf	(setKi@new_ki+3)^(0+128),w
 11463     1EB5  0022               	movlb	2	; select bank2
 11464     1EB6  00E3               	movwf	(_ki+3)^(0+256)
 11465     1EB7  0021               	movlb	1	; select bank1
 11466     1EB8  0851               	movf	(setKi@new_ki+2)^(0+128),w
 11467     1EB9  0022               	movlb	2	; select bank2
 11468     1EBA  00E2               	movwf	(_ki+2)^(0+256)
 11469     1EBB  0021               	movlb	1	; select bank1
 11470     1EBC  0850               	movf	(setKi@new_ki+1)^(0+128),w
 11471     1EBD  0022               	movlb	2	; select bank2
 11472     1EBE  00E1               	movwf	(_ki+1)^(0+256)
 11473     1EBF  0021               	movlb	1	; select bank1
 11474     1EC0  084F               	movf	setKi@new_ki^(0+128),w
 11475     1EC1  0022               	movlb	2	; select bank2
 11476     1EC2  00E0               	movwf	_ki^(0+256)
 11477     1EC3                     l974:
 11478     1EC3  0008               	return
 11479     1EC4                     __end_of_setKi:
 11480                           
 11481                           	psect	text10
 11482     1386                     __ptext10:	
 11483 ;; *************** function _readLine *****************
 11484 ;; Defined at:
 11485 ;;		line 50 in file "UART.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;		None
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1   72[BANK1 ] PTR unsigned char 
 11492 ;; Registers used:
 11493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11499 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;Total ram usage:        3 bytes
 11504 ;; Hardware stack levels used: 1
 11505 ;; Hardware stack levels required when called: 14
 11506 ;; This function calls:
 11507 ;;		_EUSART_IsRxReady
 11508 ;;		_EUSART_Read
 11509 ;;		_printf
 11510 ;; This function is called by:
 11511 ;;		_uartHandler
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515     1386                     _readLine:	
 11516                           ;psect for function _readLine
 11517                           
 11518     1386                     l895:	
 11519                           ;incstack = 0
 11520                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11521                           ;UART.c: 51:     static uint8_t index = 0;;UART.c: 52:     while (1) {
 11522                           
 11523     1386                     l5893:
 11524                           
 11525                           ;UART.c: 53:         if (!EUSART_IsRxReady()) {
 11526     1386  319D  25A2  3193   	fcall	_EUSART_IsRxReady
 11527     1389  3A00               	xorlw	0
 11528     138A  1D03               	skipz
 11529     138B  2B8D               	goto	u6991
 11530     138C  2B8E               	goto	u6990
 11531     138D                     u6991:
 11532     138D  2B98               	goto	l5901
 11533     138E                     u6990:
 11534     138E                     l5895:
 11535                           
 11536                           ;UART.c: 54:             line[index] = 0;
 11537     138E  0020               	movlb	0	; select bank0
 11538     138F  0864               	movf	readLine@index,w
 11539     1390  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11540     1391  0086               	movwf	6
 11541     1392  3001               	movlw	1	; select bank3/4
 11542     1393  0087               	movwf	7
 11543     1394  0181               	clrf	1
 11544     1395                     l5897:
 11545                           
 11546                           ;UART.c: 55:             return line + index;
 11547     1395  0864               	movf	readLine@index,w
 11548     1396  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11549     1397  2BDE               	goto	l897
 11550     1398                     l5901:
 11551                           
 11552                           ;UART.c: 57:         if (index >= 20 - 1) {
 11553     1398  3013               	movlw	19
 11554     1399  0020               	movlb	0	; select bank0
 11555     139A  0264               	subwf	readLine@index,w
 11556     139B  1C03               	skipc
 11557     139C  2B9E               	goto	u7001
 11558     139D  2B9F               	goto	u7000
 11559     139E                     u7001:
 11560     139E  2BB9               	goto	l5919
 11561     139F                     u7000:
 11562     139F  2BA3               	goto	l5907
 11563     13A0                     l5905:
 11564                           
 11565                           ;UART.c: 59:                 EUSART_Read();
 11566     13A0  319F  27BE  3193   	fcall	_EUSART_Read
 11567     13A3                     l5907:
 11568                           
 11569                           ;UART.c: 58:             while (EUSART_IsRxReady()) {
 11570     13A3  319D  25A2  3193   	fcall	_EUSART_IsRxReady
 11571     13A6  3A00               	xorlw	0
 11572     13A7  1D03               	skipz
 11573     13A8  2BAA               	goto	u7011
 11574     13A9  2BAB               	goto	u7010
 11575     13AA                     u7011:
 11576     13AA  2BA0               	goto	l5905
 11577     13AB                     u7010:
 11578     13AB                     l5909:
 11579                           
 11580                           ;UART.c: 61:             printf("input buffer overflow\r\n");
 11581     13AB  3065               	movlw	low (STR_2| (0+32768))
 11582     13AC  0021               	movlb	1	; select bank1
 11583     13AD  00E1               	movwf	printf@fmt^(0+128)
 11584     13AE  3098               	movlw	high (STR_2| (0+32768))
 11585     13AF  00E2               	movwf	(printf@fmt^(0+128)+1)
 11586     13B0  319E  2670  3193   	fcall	_printf
 11587     13B3                     l5911:
 11588                           
 11589                           ;UART.c: 62:             index = 0;
 11590     13B3  0020               	movlb	0	; select bank0
 11591     13B4  01E4               	clrf	readLine@index
 11592     13B5                     l5913:
 11593                           
 11594                           ;UART.c: 63:             line[index] = 0;
 11595     13B5  0023               	movlb	3	; select bank3
 11596     13B6  01C0               	clrf	_line^(0+384)
 11597     13B7                     l5915:
 11598                           
 11599                           ;UART.c: 64:             return line;
 11600     13B7  30C0               	movlw	(low (_line| (0+256)))& (0+255)
 11601     13B8  2BDE               	goto	l897
 11602     13B9                     l5919:
 11603                           
 11604                           ;UART.c: 67:         line[index] = EUSART_Read();
 11605     13B9  319F  27BE  3193   	fcall	_EUSART_Read
 11606     13BC  0021               	movlb	1	; select bank1
 11607     13BD  00EA               	movwf	??_readLine^(0+128)
 11608     13BE  0020               	movlb	0	; select bank0
 11609     13BF  0864               	movf	readLine@index,w
 11610     13C0  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11611     13C1  0086               	movwf	6
 11612     13C2  3001               	movlw	1	; select bank3/4
 11613     13C3  0087               	movwf	7
 11614     13C4  0021               	movlb	1	; select bank1
 11615     13C5  086A               	movf	??_readLine^(0+128),w
 11616     13C6  0081               	movwf	1
 11617     13C7                     l5921:
 11618                           
 11619                           ;UART.c: 68:         if (line[index] == '\n') {
 11620     13C7  0020               	movlb	0	; select bank0
 11621     13C8  0864               	movf	readLine@index,w
 11622     13C9  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
 11623     13CA  0086               	movwf	6
 11624     13CB  3001               	movlw	1	; select bank3/4
 11625     13CC  0087               	movwf	7
 11626     13CD  300A               	movlw	10
 11627     13CE  0601               	xorwf	1,w
 11628     13CF  1D03               	btfss	3,2
 11629     13D0  2BD2               	goto	u7021
 11630     13D1  2BD3               	goto	u7020
 11631     13D2                     u7021:
 11632     13D2  2BDB               	goto	l5931
 11633     13D3                     u7020:
 11634     13D3                     l5923:
 11635                           
 11636                           ;UART.c: 69:             line[index + 1] = 0;
 11637     13D3  0864               	movf	readLine@index,w
 11638     13D4  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
 11639     13D5  0086               	movwf	6
 11640     13D6  3001               	movlw	1	; select bank3/4
 11641     13D7  0087               	movwf	7
 11642     13D8  0181               	clrf	1
 11643     13D9                     l5925:
 11644                           
 11645                           ;UART.c: 70:             index = 0;
 11646     13D9  01E4               	clrf	readLine@index
 11647     13DA  2BB7               	goto	l5915
 11648     13DB                     l5931:
 11649                           
 11650                           ;UART.c: 73:         index++;
 11651     13DB  3001               	movlw	1
 11652     13DC  07E4               	addwf	readLine@index,f
 11653     13DD  2B86               	goto	l895
 11654     13DE                     l897:
 11655     13DE  0008               	return
 11656     13DF                     __end_of_readLine:
 11657                           
 11658                           	psect	text11
 11659     1FBE                     __ptext11:	
 11660 ;; *************** function _EUSART_Read *****************
 11661 ;; Defined at:
 11662 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;		None
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;  readValue       1    1[BANK1 ] unsigned char 
 11667 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
 11668 ;; Return value:  Size  Location     Type
 11669 ;;                  1    wreg      unsigned char 
 11670 ;; Registers used:
 11671 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11672 ;; Tracked objects:
 11673 ;;		On entry : 0/0
 11674 ;;		On exit  : 0/0
 11675 ;;		Unchanged: 0/0
 11676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11680 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11681 ;;Total ram usage:        2 bytes
 11682 ;; Hardware stack levels used: 1
 11683 ;; Hardware stack levels required when called: 5
 11684 ;; This function calls:
 11685 ;;		Nothing
 11686 ;; This function is called by:
 11687 ;;		_readLine
 11688 ;;		_getch
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692     1FBE                     _EUSART_Read:	
 11693                           ;psect for function _EUSART_Read
 11694                           
 11695     1FBE                     l4677:	
 11696                           ;incstack = 0
 11697                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11698                           
 11699     1FBE                     l4679:
 11700                           
 11701                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
 11702     1FBE  0020               	movlb	0	; select bank0
 11703     1FBF  0866               	movf	_eusartRxTail,w
 11704     1FC0  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11705     1FC1  0086               	movwf	6
 11706     1FC2  3001               	movlw	1	; select bank2/3
 11707     1FC3  0087               	movwf	7
 11708     1FC4  0801               	movf	1,w
 11709     1FC5  0021               	movlb	1	; select bank1
 11710     1FC6  00A1               	movwf	EUSART_Read@readValue^(0+128)
 11711     1FC7                     l4681:
 11712                           
 11713                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 11714     1FC7  0020               	movlb	0	; select bank0
 11715     1FC8  0866               	movf	_eusartRxTail,w	;volatile
 11716     1FC9  3E01               	addlw	1
 11717     1FCA  3907               	andlw	7
 11718     1FCB  0021               	movlb	1	; select bank1
 11719     1FCC  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
 11720     1FCD                     l4683:
 11721                           
 11722                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
 11723     1FCD  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
 11724     1FCE  0020               	movlb	0	; select bank0
 11725     1FCF  00E6               	movwf	_eusartRxTail	;volatile
 11726     1FD0                     l4685:
 11727                           
 11728                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
 11729     1FD0  0021               	movlb	1	; select bank1
 11730     1FD1  1291               	bcf	17,5	;volatile
 11731     1FD2                     l4687:
 11732                           
 11733                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
 11734     1FD2  0020               	movlb	0	; select bank0
 11735     1FD3  0865               	movf	_eusartRxCount,w	;volatile
 11736     1FD4  1903               	btfsc	3,2
 11737     1FD5  2FD7               	goto	u4741
 11738     1FD6  2FD8               	goto	u4740
 11739     1FD7                     u4741:
 11740     1FD7  2FDA               	goto	l4691
 11741     1FD8                     u4740:
 11742     1FD8                     l4689:
 11743                           
 11744                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
 11745     1FD8  3001               	movlw	1
 11746     1FD9  02E5               	subwf	_eusartRxCount,f	;volatile
 11747     1FDA                     l4691:
 11748                           
 11749                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
 11750     1FDA  0021               	movlb	1	; select bank1
 11751     1FDB  1691               	bsf	17,5	;volatile
 11752     1FDC                     l4693:
 11753                           
 11754                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
 11755     1FDC  0821               	movf	EUSART_Read@readValue^(0+128),w
 11756     1FDD                     l725:
 11757     1FDD  0008               	return
 11758     1FDE                     __end_of_EUSART_Read:
 11759                           
 11760                           	psect	text12
 11761     1DA2                     __ptext12:	
 11762 ;; *************** function _EUSART_IsRxReady *****************
 11763 ;; Defined at:
 11764 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
 11765 ;; Parameters:    Size  Location     Type
 11766 ;;		None
 11767 ;; Auto vars:     Size  Location     Type
 11768 ;;		None
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  1    wreg      _Bool 
 11771 ;; Registers used:
 11772 ;;		wreg, status,2, status,0
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;Total ram usage:        0 bytes
 11783 ;; Hardware stack levels used: 1
 11784 ;; Hardware stack levels required when called: 5
 11785 ;; This function calls:
 11786 ;;		Nothing
 11787 ;; This function is called by:
 11788 ;;		_readLine
 11789 ;;		_getch
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793     1DA2                     _EUSART_IsRxReady:	
 11794                           ;psect for function _EUSART_IsRxReady
 11795                           
 11796     1DA2                     l4673:	
 11797                           ;incstack = 0
 11798                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 11799                           
 11800                           
 11801                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
 11802     1DA2  0020               	movlb	0	; select bank0
 11803     1DA3  0865               	movf	_eusartRxCount,w	;volatile
 11804     1DA4  1D03               	btfss	3,2
 11805     1DA5  2DA7               	goto	u4721
 11806     1DA6  2DA9               	goto	u4720
 11807     1DA7                     u4721:
 11808     1DA7  3001               	movlw	1
 11809     1DA8  2DAA               	goto	u4730
 11810     1DA9                     u4720:
 11811     1DA9  3000               	movlw	0
 11812     1DAA                     u4730:
 11813     1DAA                     l712:
 11814     1DAA  0008               	return
 11815     1DAB                     __end_of_EUSART_IsRxReady:
 11816                           
 11817                           	psect	text13
 11818     080D                     __ptext13:	
 11819 ;; *************** function _atoi *****************
 11820 ;; Defined at:
 11821 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;  s               1    6[BANK1 ] PTR const unsigned char 
 11824 ;;		 -> line(20), 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;  n               2   11[BANK1 ] int 
 11827 ;;  neg             1   10[BANK1 ] _Bool 
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  2    6[BANK1 ] int 
 11830 ;; Registers used:
 11831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11837 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11838 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11839 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11840 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;Total ram usage:        7 bytes
 11842 ;; Hardware stack levels used: 1
 11843 ;; Hardware stack levels required when called: 6
 11844 ;; This function calls:
 11845 ;;		___wmul
 11846 ;; This function is called by:
 11847 ;;		_uartHandler
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           
 11851     080D                     _atoi:	
 11852                           ;psect for function _atoi
 11853                           
 11854     080D                     l5937:	
 11855                           ;incstack = 0
 11856                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11857                           
 11858     080D  0021               	movlb	1	; select bank1
 11859     080E  01AB               	clrf	atoi@n^(0+128)
 11860     080F  01AC               	clrf	(atoi@n+1)^(0+128)
 11861     0810  01AA               	clrf	atoi@neg^(0+128)
 11862     0811  2814               	goto	l5941
 11863     0812                     l5939:
 11864     0812  3001               	movlw	1
 11865     0813  07A6               	addwf	atoi@s^(0+128),f
 11866     0814                     l5941:
 11867     0814  0826               	movf	atoi@s^(0+128),w
 11868     0815  0086               	movwf	6
 11869     0816  3001               	movlw	1	; select bank2/3
 11870     0817  0087               	movwf	7
 11871     0818  3020               	movlw	32
 11872     0819  0601               	xorwf	1,w
 11873     081A  1903               	btfsc	3,2
 11874     081B  281D               	goto	u7031
 11875     081C  281E               	goto	u7030
 11876     081D                     u7031:
 11877     081D  2812               	goto	l5939
 11878     081E                     u7030:
 11879     081E                     l5943:
 11880     081E  0826               	movf	atoi@s^(0+128),w
 11881     081F  0086               	movwf	6
 11882     0820  3001               	movlw	1	; select bank2/3
 11883     0821  0087               	movwf	7
 11884     0822  30F7               	movlw	247
 11885     0823  0701               	addwf	1,w
 11886     0824  00A8               	movwf	??_atoi^(0+128)
 11887     0825  3005               	movlw	5
 11888     0826  0228               	subwf	??_atoi^(0+128),w
 11889     0827  1C03               	skipc
 11890     0828  282A               	goto	u7041
 11891     0829  282B               	goto	u7040
 11892     082A                     u7041:
 11893     082A  2812               	goto	l5939
 11894     082B                     u7040:
 11895     082B                     l5945:
 11896     082B  0826               	movf	atoi@s^(0+128),w
 11897     082C  0086               	movwf	6
 11898     082D  3001               	movlw	1	; select bank2/3
 11899     082E  0087               	movwf	7
 11900     082F  302D               	movlw	45
 11901     0830  0601               	xorwf	1,w
 11902     0831  1D03               	btfss	3,2
 11903     0832  2834               	goto	u7051
 11904     0833  2835               	goto	u7050
 11905     0834                     u7051:
 11906     0834  283A               	goto	l5951
 11907     0835                     u7050:
 11908     0835                     l5947:
 11909     0835  3001               	movlw	1
 11910     0836  00AA               	movwf	atoi@neg^(0+128)
 11911     0837                     l5949:
 11912     0837  3001               	movlw	1
 11913     0838  07A6               	addwf	atoi@s^(0+128),f
 11914     0839  2863               	goto	l5959
 11915     083A                     l5951:
 11916     083A  0826               	movf	atoi@s^(0+128),w
 11917     083B  0086               	movwf	6
 11918     083C  3001               	movlw	1	; select bank2/3
 11919     083D  0087               	movwf	7
 11920     083E  302B               	movlw	43
 11921     083F  0601               	xorwf	1,w
 11922     0840  1D03               	btfss	3,2
 11923     0841  2843               	goto	u7061
 11924     0842  2844               	goto	u7060
 11925     0843                     u7061:
 11926     0843  2863               	goto	l5959
 11927     0844                     u7060:
 11928     0844  2837               	goto	l5949
 11929     0845                     l5955:
 11930     0845  0826               	movf	atoi@s^(0+128),w
 11931     0846  0086               	movwf	6
 11932     0847  3001               	movlw	1	; select bank2/3
 11933     0848  0087               	movwf	7
 11934     0849  082C               	movf	(atoi@n+1)^(0+128),w
 11935     084A  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 11936     084B  082B               	movf	atoi@n^(0+128),w
 11937     084C  00A0               	movwf	___wmul@multiplier^(0+128)
 11938     084D  300A               	movlw	10
 11939     084E  00A2               	movwf	___wmul@multiplicand^(0+128)
 11940     084F  3000               	movlw	0
 11941     0850  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 11942     0851  319F  279E  3188   	fcall	___wmul
 11943     0854  0021               	movlb	1	; select bank1
 11944     0855  0821               	movf	(?___wmul+1)^(0+128),w
 11945     0856  00A9               	movwf	(??_atoi^(0+128)+1)
 11946     0857  0801               	movf	1,w
 11947     0858  0220               	subwf	?___wmul^(0+128),w
 11948     0859  00A8               	movwf	??_atoi^(0+128)
 11949     085A  1C03               	skipc
 11950     085B  03A9               	decf	(??_atoi^(0+128)+1),f
 11951     085C  0828               	movf	??_atoi^(0+128),w
 11952     085D  3E30               	addlw	48
 11953     085E  00AB               	movwf	atoi@n^(0+128)
 11954     085F  3000               	movlw	0
 11955     0860  3D29               	addwfc	(??_atoi+1)^(0+128),w
 11956     0861  00AC               	movwf	(atoi@n+1)^(0+128)
 11957     0862  2837               	goto	l5949
 11958     0863                     l5959:
 11959     0863  0826               	movf	atoi@s^(0+128),w
 11960     0864  0086               	movwf	6
 11961     0865  3001               	movlw	1	; select bank2/3
 11962     0866  0087               	movwf	7
 11963     0867  30D0               	movlw	208
 11964     0868  0701               	addwf	1,w
 11965     0869  00A8               	movwf	??_atoi^(0+128)
 11966     086A  300A               	movlw	10
 11967     086B  0228               	subwf	??_atoi^(0+128),w
 11968     086C  1C03               	skipc
 11969     086D  286F               	goto	u7071
 11970     086E  2870               	goto	u7070
 11971     086F                     u7071:
 11972     086F  2845               	goto	l5955
 11973     0870                     u7070:
 11974     0870                     l5961:
 11975     0870  082A               	movf	atoi@neg^(0+128),w
 11976     0871  1D03               	btfss	3,2
 11977     0872  2874               	goto	u7081
 11978     0873  2875               	goto	u7080
 11979     0874                     u7081:
 11980     0874  2881               	goto	l5965
 11981     0875                     u7080:
 11982     0875                     l5963:
 11983     0875  092B               	comf	atoi@n^(0+128),w
 11984     0876  00A8               	movwf	??_atoi^(0+128)
 11985     0877  092C               	comf	(atoi@n+1)^(0+128),w
 11986     0878  00A9               	movwf	(??_atoi^(0+128)+1)
 11987     0879  0AA8               	incf	??_atoi^(0+128),f
 11988     087A  1903               	skipnz
 11989     087B  0AA9               	incf	(??_atoi^(0+128)+1),f
 11990     087C  0828               	movf	??_atoi^(0+128),w
 11991     087D  00A6               	movwf	?_atoi^(0+128)
 11992     087E  0829               	movf	(??_atoi+1)^(0+128),w
 11993     087F  00A7               	movwf	(?_atoi+1)^(0+128)
 11994     0880  2885               	goto	l1689
 11995     0881                     l5965:
 11996     0881  082C               	movf	(atoi@n+1)^(0+128),w
 11997     0882  00A7               	movwf	(?_atoi+1)^(0+128)
 11998     0883  082B               	movf	atoi@n^(0+128),w
 11999     0884  00A6               	movwf	?_atoi^(0+128)
 12000     0885                     l1689:
 12001     0885  0008               	return
 12002     0886                     __end_of_atoi:
 12003                           
 12004                           	psect	text14
 12005     11B2                     __ptext14:	
 12006 ;; *************** function _printLogs *****************
 12007 ;; Defined at:
 12008 ;;		line 77 in file "UART.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;		None
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;		None
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  1    wreg      void 
 12015 ;; Registers used:
 12016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;Total ram usage:        0 bytes
 12027 ;; Hardware stack levels used: 1
 12028 ;; Hardware stack levels required when called: 14
 12029 ;; This function calls:
 12030 ;;		_getCounter
 12031 ;;		_getPomphoogte
 12032 ;;		_getSetpoint
 12033 ;;		_printf
 12034 ;; This function is called by:
 12035 ;;		_main
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039     11B2                     _printLogs:	
 12040                           ;psect for function _printLogs
 12041                           
 12042     11B2                     l6151:	
 12043                           ;incstack = 0
 12044                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12045                           
 12046                           
 12047                           ;UART.c: 79:     if (mustPrintLogs) {
 12048     11B2  0020               	movlb	0	; select bank0
 12049     11B3  086D               	movf	_mustPrintLogs,w
 12050     11B4  1903               	btfsc	3,2
 12051     11B5  29B7               	goto	u7311
 12052     11B6  29B8               	goto	u7310
 12053     11B7                     u7311:
 12054     11B7  29F0               	goto	l908
 12055     11B8                     u7310:
 12056     11B8                     l6153:
 12057                           
 12058                           ;UART.c: 81:         printf(", setpoint: %u ", getSetpoint());
 12059     11B8  308E               	movlw	low (STR_3| (0+32768))
 12060     11B9  0021               	movlb	1	; select bank1
 12061     11BA  00E1               	movwf	printf@fmt^(0+128)
 12062     11BB  3098               	movlw	high (STR_3| (0+32768))
 12063     11BC  00E2               	movwf	(printf@fmt^(0+128)+1)
 12064     11BD  319D  257E  3191   	fcall	_getSetpoint
 12065     11C0  0021               	movlb	1	; select bank1
 12066     11C1  0821               	movf	(?_getSetpoint+1)^(0+128),w
 12067     11C2  00E4               	movwf	((?_printf+1)^(0+128)+2)
 12068     11C3  0820               	movf	?_getSetpoint^(0+128),w
 12069     11C4  00E3               	movwf	(?_printf^(0+128)+2)
 12070     11C5  319E  2670  3191   	fcall	_printf
 12071                           
 12072                           ;UART.c: 87:         printf("Count: %u", getCounter());
 12073     11C8  30DC               	movlw	low (STR_4| (0+32768))
 12074     11C9  0021               	movlb	1	; select bank1
 12075     11CA  00E1               	movwf	printf@fmt^(0+128)
 12076     11CB  3098               	movlw	high (STR_4| (0+32768))
 12077     11CC  00E2               	movwf	(printf@fmt^(0+128)+1)
 12078     11CD  319D  2575  3191   	fcall	_getCounter
 12079     11D0  0021               	movlb	1	; select bank1
 12080     11D1  0821               	movf	(?_getCounter+1)^(0+128),w
 12081     11D2  00E4               	movwf	((?_printf+1)^(0+128)+2)
 12082     11D3  0820               	movf	?_getCounter^(0+128),w
 12083     11D4  00E3               	movwf	(?_printf^(0+128)+2)
 12084     11D5  319E  2670  3191   	fcall	_printf
 12085                           
 12086                           ;UART.c: 88:         printf (", pomp: %u", getPomphoogte());
 12087     11D8  30C7               	movlw	low (STR_5| (0+32768))
 12088     11D9  0021               	movlb	1	; select bank1
 12089     11DA  00E1               	movwf	printf@fmt^(0+128)
 12090     11DB  3098               	movlw	high (STR_5| (0+32768))
 12091     11DC  00E2               	movwf	(printf@fmt^(0+128)+1)
 12092     11DD  319D  253F  3191   	fcall	_getPomphoogte
 12093     11E0  0021               	movlb	1	; select bank1
 12094     11E1  0821               	movf	(?_getPomphoogte+1)^(0+128),w
 12095     11E2  00E4               	movwf	((?_printf+1)^(0+128)+2)
 12096     11E3  0820               	movf	?_getPomphoogte^(0+128),w
 12097     11E4  00E3               	movwf	(?_printf^(0+128)+2)
 12098     11E5  319E  2670  3191   	fcall	_printf
 12099                           
 12100                           ;UART.c: 89:         printf("\r\n");
 12101     11E8  30AA               	movlw	low ((STR_10+12)| (0+32768))
 12102     11E9  0021               	movlb	1	; select bank1
 12103     11EA  00E1               	movwf	printf@fmt^(0+128)
 12104     11EB  3098               	movlw	high ((STR_10+12)| (0+32768))
 12105     11EC  00E2               	movwf	(printf@fmt^(0+128)+1)
 12106     11ED  319E  2670  3191   	fcall	_printf
 12107     11F0                     l908:
 12108     11F0  0008               	return
 12109     11F1                     __end_of_printLogs:
 12110                           
 12111                           	psect	text15
 12112     1E70                     __ptext15:	
 12113 ;; *************** function _printf *****************
 12114 ;; Defined at:
 12115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
 12118 ;;		 -> STR_11(17), STR_10(15), STR_9(13), STR_8(13), 
 12119 ;;		 -> STR_7(25), STR_6(3), STR_5(11), STR_4(10), 
 12120 ;;		 -> STR_3(16), STR_2(24), STR_1(8), 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  ret             2    0        int 
 12123 ;;  ap              1   71[BANK1 ] PTR void [1]
 12124 ;;		 -> ?_printf(2), 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  2   65[BANK1 ] int 
 12127 ;; Registers used:
 12128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12134 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12135 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;Total ram usage:        7 bytes
 12139 ;; Hardware stack levels used: 1
 12140 ;; Hardware stack levels required when called: 13
 12141 ;; This function calls:
 12142 ;;		_vfprintf
 12143 ;; This function is called by:
 12144 ;;		_readLine
 12145 ;;		_printLogs
 12146 ;;		_uartHandler
 12147 ;;		_printFloat
 12148 ;;		_printOut
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152     1E70                     _printf:	
 12153                           ;psect for function _printf
 12154                           
 12155     1E70                     l4701:	
 12156                           ;incstack = 0
 12157                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12158                           
 12159     1E70  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
 12160     1E71  0021               	movlb	1	; select bank1
 12161     1E72  00E7               	movwf	printf@ap^(0+128)
 12162     1E73                     l4703:
 12163     1E73  3000               	movlw	0
 12164     1E74  00D9               	movwf	vfprintf@fp^(0+128)
 12165     1E75  00DA               	movwf	(vfprintf@fp+1)^(0+128)
 12166     1E76  0862               	movf	(printf@fmt+1)^(0+128),w
 12167     1E77  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 12168     1E78  0861               	movf	printf@fmt^(0+128),w
 12169     1E79  00DB               	movwf	vfprintf@fmt^(0+128)
 12170     1E7A  30E7               	movlw	(low (printf@ap| 0))& (0+255)
 12171     1E7B  00DD               	movwf	vfprintf@ap^(0+128)
 12172     1E7C  3190  20AE  319E   	fcall	_vfprintf
 12173     1E7F                     l1696:
 12174     1E7F  0008               	return
 12175     1E80                     __end_of_printf:
 12176                           
 12177                           	psect	text16
 12178     10AE                     __ptext16:	
 12179 ;; *************** function _vfprintf *****************
 12180 ;; Defined at:
 12181 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
 12184 ;;		 -> NULL(0), 
 12185 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
 12186 ;;		 -> STR_11(17), STR_10(15), STR_9(13), STR_8(13), 
 12187 ;;		 -> STR_7(25), STR_6(3), STR_5(11), STR_4(10), 
 12188 ;;		 -> STR_3(16), STR_2(24), STR_1(8), 
 12189 ;;  ap              1   61[BANK1 ] PTR PTR void 
 12190 ;;		 -> printf@ap(1), 
 12191 ;; Auto vars:     Size  Location     Type
 12192 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
 12193 ;;		 -> STR_11(17), STR_10(15), STR_9(13), STR_8(13), 
 12194 ;;		 -> STR_7(25), STR_6(3), STR_5(11), STR_4(10), 
 12195 ;;		 -> STR_3(16), STR_2(24), STR_1(8), 
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  2   57[BANK1 ] int 
 12198 ;; Registers used:
 12199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12200 ;; Tracked objects:
 12201 ;;		On entry : 0/0
 12202 ;;		On exit  : 0/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12205 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12206 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;Total ram usage:        8 bytes
 12210 ;; Hardware stack levels used: 1
 12211 ;; Hardware stack levels required when called: 12
 12212 ;; This function calls:
 12213 ;;		_vfpfcnvrt
 12214 ;; This function is called by:
 12215 ;;		_printf
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219     10AE                     _vfprintf:	
 12220                           ;psect for function _vfprintf
 12221                           
 12222     10AE                     l4629:	
 12223                           ;incstack = 0
 12224                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12225                           
 12226                           
 12227                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 12228     10AE  0021               	movlb	1	; select bank1
 12229     10AF  085C               	movf	(vfprintf@fmt+1)^(0+128),w
 12230     10B0  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
 12231     10B1  085B               	movf	vfprintf@fmt^(0+128),w
 12232     10B2  00DF               	movwf	vfprintf@cfmt^(0+128)
 12233     10B3                     l4631:
 12234                           
 12235                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
 12236     10B3  0022               	movlb	2	; select bank2
 12237     10B4  01C4               	clrf	_nout^(0+256)
 12238     10B5  01C5               	clrf	(_nout+1)^(0+256)
 12239                           
 12240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12241     10B6  28CB               	goto	l4635
 12242     10B7                     l4633:
 12243                           
 12244                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
 12245     10B7  085A               	movf	(vfprintf@fp+1)^(0+128),w
 12246     10B8  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 12247     10B9  0859               	movf	vfprintf@fp^(0+128),w
 12248     10BA  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 12249     10BB  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 12250     10BC  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 12251     10BD  085D               	movf	vfprintf@ap^(0+128),w
 12252     10BE  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 12253     10BF  01CD               	clrf	(vfpfcnvrt@ap+1)^(0+128)
 12254     10C0  318A  22DE  3190   	fcall	_vfpfcnvrt
 12255     10C3  0021               	movlb	1	; select bank1
 12256     10C4  0849               	movf	?_vfpfcnvrt^(0+128),w
 12257     10C5  0022               	movlb	2	; select bank2
 12258     10C6  07C4               	addwf	_nout^(0+256),f
 12259     10C7  0021               	movlb	1	; select bank1
 12260     10C8  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
 12261     10C9  0022               	movlb	2	; select bank2
 12262     10CA  3DC5               	addwfc	(_nout+1)^(0+256),f
 12263     10CB                     l4635:
 12264                           
 12265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 12266     10CB  0021               	movlb	1	; select bank1
 12267     10CC  085F               	movf	vfprintf@cfmt^(0+128),w
 12268     10CD  0084               	movwf	4
 12269     10CE  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
 12270     10CF  0085               	movwf	5
 12271     10D0  0012               	moviw fsr0++
 12272     10D1  1D03               	btfss	3,2
 12273     10D2  28D4               	goto	u4651
 12274     10D3  28D5               	goto	u4650
 12275     10D4                     u4651:
 12276     10D4  28B7               	goto	l4633
 12277     10D5                     u4650:
 12278     10D5                     l4637:
 12279                           
 12280                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 12281     10D5  01D9               	clrf	?_vfprintf^(0+128)
 12282     10D6  01DA               	clrf	(?_vfprintf+1)^(0+128)
 12283     10D7                     l1788:
 12284     10D7  0008               	return
 12285     10D8                     __end_of_vfprintf:
 12286                           
 12287                           	psect	text17
 12288     0ADE                     __ptext17:	
 12289 ;; *************** function _vfpfcnvrt *****************
 12290 ;; Defined at:
 12291 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 12294 ;;		 -> NULL(0), 
 12295 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 12296 ;;		 -> vfprintf@cfmt(2), 
 12297 ;;  ap              2   44[BANK1 ] PTR PTR void 
 12298 ;;		 -> printf@ap(1), 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  convarg         4   51[BANK1 ] struct .
 12301 ;;  cp              2   55[BANK1 ] PTR unsigned char 
 12302 ;;		 -> STR_11(17), STR_10(15), STR_9(13), STR_8(13), 
 12303 ;;		 -> STR_7(25), STR_6(3), STR_5(11), STR_4(10), 
 12304 ;;		 -> STR_3(16), STR_2(24), STR_1(8), 
 12305 ;;  done            1   50[BANK1 ] _Bool 
 12306 ;;  c               1    0        unsigned char 
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  2   41[BANK1 ] int 
 12309 ;; Registers used:
 12310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12316 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;Total ram usage:       16 bytes
 12321 ;; Hardware stack levels used: 1
 12322 ;; Hardware stack levels required when called: 11
 12323 ;; This function calls:
 12324 ;;		_dtoa
 12325 ;;		_fputc
 12326 ;;		_read_prec_or_width
 12327 ;;		_utoa
 12328 ;; This function is called by:
 12329 ;;		_vfprintf
 12330 ;; This function uses a non-reentrant model
 12331 ;;
 12332                           
 12333     0ADE                     _vfpfcnvrt:	
 12334                           ;psect for function _vfpfcnvrt
 12335                           
 12336     0ADE                     l4517:	
 12337                           ;incstack = 0
 12338                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12339                           
 12340                           
 12341                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 12342     0ADE  0021               	movlb	1	; select bank1
 12343     0ADF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12344     0AE0  0086               	movwf	6
 12345     0AE1  0187               	clrf	7
 12346     0AE2  3F40               	moviw [0]fsr1
 12347     0AE3  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12348     0AE4  3F41               	moviw [1]fsr1
 12349     0AE5  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12350     0AE6  084E               	movf	??_vfpfcnvrt^(0+128),w
 12351     0AE7  0084               	movwf	4
 12352     0AE8  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12353     0AE9  0085               	movwf	5
 12354     0AEA  0012               	moviw fsr0++
 12355     0AEB  3A25               	xorlw	37
 12356     0AEC  1D03               	btfss	3,2
 12357     0AED  2AEF               	goto	u4541
 12358     0AEE  2AF0               	goto	u4540
 12359     0AEF                     u4541:
 12360     0AEF  2C2C               	goto	l4597
 12361     0AF0                     u4540:
 12362     0AF0                     l4519:
 12363                           
 12364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 12365     0AF0  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12366     0AF1  0086               	movwf	6
 12367     0AF2  0187               	clrf	7
 12368     0AF3  3001               	movlw	1
 12369     0AF4  0781               	addwf	1,f
 12370     0AF5  3141               	addfsr 1,1
 12371     0AF6  1803               	skipnc
 12372     0AF7  0A81               	incf	1,f
 12373     0AF8                     l4521:
 12374                           
 12375                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 12376     0AF8  0020               	movlb	0	; select bank0
 12377     0AF9  01D5               	clrf	_width
 12378     0AFA  01D6               	clrf	_width+1
 12379     0AFB  3000               	movlw	0
 12380     0AFC  00E1               	movwf	_flags
 12381     0AFD                     l4523:
 12382                           
 12383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 12384     0AFD  30FF               	movlw	255
 12385     0AFE  0022               	movlb	2	; select bank2
 12386     0AFF  00C6               	movwf	_prec^(0+256)
 12387     0B00  30FF               	movlw	255
 12388     0B01  00C7               	movwf	(_prec^(0+256)+1)
 12389     0B02                     l4525:
 12390                           
 12391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 12392     0B02  0021               	movlb	1	; select bank1
 12393     0B03  01D2               	clrf	vfpfcnvrt@done^(0+128)
 12394                           
 12395                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12396     0B04  2B24               	goto	l4533
 12397     0B05                     l1766:	
 12398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 12399                           
 12400                           
 12401                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 12402     0B05  0020               	movlb	0	; select bank0
 12403     0B06  14E1               	bsf	_flags,1
 12404     0B07                     l4527:
 12405                           
 12406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 12407     0B07  0021               	movlb	1	; select bank1
 12408     0B08  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12409     0B09  0086               	movwf	6
 12410     0B0A  0187               	clrf	7
 12411     0B0B  3001               	movlw	1
 12412     0B0C  0781               	addwf	1,f
 12413     0B0D  3141               	addfsr 1,1
 12414     0B0E  1803               	skipnc
 12415     0B0F  0A81               	incf	1,f
 12416                           
 12417                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 12418     0B10  2B24               	goto	l4533
 12419     0B11                     l1768:	
 12420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 12421                           
 12422                           
 12423                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 12424     0B11  3001               	movlw	1
 12425     0B12  00D2               	movwf	vfpfcnvrt@done^(0+128)
 12426                           
 12427                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 12428     0B13  2B24               	goto	l4533
 12429     0B14                     l4531:
 12430     0B14  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12431     0B15  0086               	movwf	6
 12432     0B16  0187               	clrf	7
 12433     0B17  3F40               	moviw [0]fsr1
 12434     0B18  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12435     0B19  3F41               	moviw [1]fsr1
 12436     0B1A  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12437     0B1B  084E               	movf	??_vfpfcnvrt^(0+128),w
 12438     0B1C  0084               	movwf	4
 12439     0B1D  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12440     0B1E  0085               	movwf	5
 12441     0B1F  0800               	movf	0,w	;code access
 12442                           
 12443                           ; Switch size 1, requested type "simple"
 12444                           ; Number of cases is 1, Range of values is 48 to 48
 12445                           ; switch strategies available:
 12446                           ; Name         Instructions Cycles
 12447                           ; simple_byte            4     3 (average)
 12448                           ; direct_byte           11     9 (fixed)
 12449                           ; jumptable            263     9 (fixed)
 12450                           ;	Chosen strategy is simple_byte
 12451     0B20  3A30               	xorlw	48	; case 48
 12452     0B21  1903               	skipnz
 12453     0B22  2B05               	goto	l1766
 12454     0B23  2B11               	goto	l1768
 12455     0B24                     l4533:
 12456                           
 12457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 12458     0B24  0852               	movf	vfpfcnvrt@done^(0+128),w
 12459     0B25  1903               	btfsc	3,2
 12460     0B26  2B28               	goto	u4551
 12461     0B27  2B29               	goto	u4550
 12462     0B28                     u4551:
 12463     0B28  2B14               	goto	l4531
 12464     0B29                     u4550:
 12465     0B29                     l4535:
 12466                           
 12467                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 12468     0B29  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12469     0B2A  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 12470     0B2B  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12471     0B2C  00A7               	movwf	read_prec_or_width@ap^(0+128)
 12472     0B2D  3194  243B  318A   	fcall	_read_prec_or_width
 12473     0B30  0021               	movlb	1	; select bank1
 12474     0B31  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 12475     0B32  0020               	movlb	0	; select bank0
 12476     0B33  00D6               	movwf	_width+1
 12477     0B34  0021               	movlb	1	; select bank1
 12478     0B35  0826               	movf	?_read_prec_or_width^(0+128),w
 12479     0B36  0020               	movlb	0	; select bank0
 12480     0B37  00D5               	movwf	_width
 12481     0B38                     l4537:
 12482                           
 12483                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 12484     0B38  1FD6               	btfss	_width+1,7
 12485     0B39  2B3B               	goto	u4561
 12486     0B3A  2B3C               	goto	u4560
 12487     0B3B                     u4561:
 12488     0B3B  2B42               	goto	l4543
 12489     0B3C                     u4560:
 12490     0B3C                     l4539:
 12491                           
 12492                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 12493     0B3C  1461               	bsf	_flags,0
 12494     0B3D                     l4541:
 12495                           
 12496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 12497     0B3D  09D5               	comf	_width,f
 12498     0B3E  09D6               	comf	_width+1,f
 12499     0B3F  0AD5               	incf	_width,f
 12500     0B40  1903               	skipnz
 12501     0B41  0AD6               	incf	_width+1,f
 12502     0B42                     l4543:
 12503                           
 12504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 12505     0B42  0021               	movlb	1	; select bank1
 12506     0B43  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12507     0B44  0086               	movwf	6
 12508     0B45  0187               	clrf	7
 12509     0B46  3F40               	moviw [0]fsr1
 12510     0B47  00D7               	movwf	vfpfcnvrt@cp^(0+128)
 12511     0B48  3F41               	moviw [1]fsr1
 12512     0B49  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 12513     0B4A                     l4545:
 12514                           
 12515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 12516     0B4A  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12517     0B4B  0084               	movwf	4
 12518     0B4C  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12519     0B4D  0085               	movwf	5
 12520     0B4E  0012               	moviw fsr0++
 12521     0B4F  3A64               	xorlw	100
 12522     0B50  1903               	btfsc	3,2
 12523     0B51  2B53               	goto	u4571
 12524     0B52  2B54               	goto	u4570
 12525     0B53                     u4571:
 12526     0B53  2B5E               	goto	l4549
 12527     0B54                     u4570:
 12528     0B54                     l4547:
 12529     0B54  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12530     0B55  0084               	movwf	4
 12531     0B56  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12532     0B57  0085               	movwf	5
 12533     0B58  0012               	moviw fsr0++
 12534     0B59  3A69               	xorlw	105
 12535     0B5A  1D03               	btfss	3,2
 12536     0B5B  2B5D               	goto	u4581
 12537     0B5C  2B5E               	goto	u4580
 12538     0B5D                     u4581:
 12539     0B5D  2B89               	goto	l4557
 12540     0B5E                     u4580:
 12541     0B5E                     l4549:
 12542                           
 12543                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 12544     0B5E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12545     0B5F  0086               	movwf	6
 12546     0B60  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12547     0B61  0087               	movwf	7
 12548     0B62  0801               	movf	1,w
 12549     0B63  0084               	movwf	4
 12550     0B64  0185               	clrf	5
 12551     0B65  3002               	movlw	2
 12552     0B66  0781               	addwf	1,f
 12553     0B67  3F00               	moviw [0]fsr0
 12554     0B68  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12555     0B69  3F01               	moviw [1]fsr0
 12556     0B6A  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12557     0B6B                     l4551:
 12558                           
 12559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 12560     0B6B  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12561     0B6C  3E01               	addlw	1
 12562     0B6D  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12563     0B6E  3000               	movlw	0
 12564     0B6F  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12565     0B70  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12566     0B71  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12567     0B72  0086               	movwf	6
 12568     0B73  0187               	clrf	7
 12569     0B74  084E               	movf	??_vfpfcnvrt^(0+128),w
 12570     0B75  3FC0               	movwi [0]fsr1
 12571     0B76  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12572     0B77  3FC1               	movwi [1]fsr1
 12573     0B78                     l4553:
 12574                           
 12575                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
 12576     0B78  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12577     0B79  00BD               	movwf	(dtoa@fp+1)^(0+128)
 12578     0B7A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12579     0B7B  00BC               	movwf	dtoa@fp^(0+128)
 12580     0B7C  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12581     0B7D  00BF               	movwf	(dtoa@d+1)^(0+128)
 12582     0B7E  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12583     0B7F  00BE               	movwf	dtoa@d^(0+128)
 12584     0B80  3187  2713  318A   	fcall	_dtoa
 12585     0B83  0021               	movlb	1	; select bank1
 12586     0B84  083D               	movf	(?_dtoa+1)^(0+128),w
 12587     0B85  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12588     0B86  083C               	movf	?_dtoa^(0+128),w
 12589     0B87  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12590     0B88  2C4F               	goto	l1774
 12591     0B89                     l4557:
 12592     0B89  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12593     0B8A  0084               	movwf	4
 12594     0B8B  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12595     0B8C  0085               	movwf	5
 12596     0B8D  0012               	moviw fsr0++
 12597     0B8E  3A75               	xorlw	117
 12598     0B8F  1D03               	btfss	3,2
 12599     0B90  2B92               	goto	u4591
 12600     0B91  2B93               	goto	u4590
 12601     0B92                     u4591:
 12602     0B92  2BC8               	goto	l4571
 12603     0B93                     u4590:
 12604     0B93                     l4559:
 12605                           
 12606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 12607     0B93  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12608     0B94  0086               	movwf	6
 12609     0B95  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12610     0B96  0087               	movwf	7
 12611     0B97  0801               	movf	1,w
 12612     0B98  0084               	movwf	4
 12613     0B99  0185               	clrf	5
 12614     0B9A  3002               	movlw	2
 12615     0B9B  0781               	addwf	1,f
 12616     0B9C  3F00               	moviw [0]fsr0
 12617     0B9D  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 12618     0B9E  3F01               	moviw [1]fsr0
 12619     0B9F  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 12620     0BA0                     l4561:
 12621                           
 12622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 12623     0BA0  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12624     0BA1  3E01               	addlw	1
 12625     0BA2  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12626     0BA3  3000               	movlw	0
 12627     0BA4  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12628     0BA5  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12629     0BA6  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12630     0BA7  0086               	movwf	6
 12631     0BA8  0187               	clrf	7
 12632     0BA9  084E               	movf	??_vfpfcnvrt^(0+128),w
 12633     0BAA  3FC0               	movwi [0]fsr1
 12634     0BAB  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12635     0BAC  3FC1               	movwi [1]fsr1
 12636                           
 12637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 12638     0BAD  2BBF               	goto	l4569
 12639     0BAE                     l4563:
 12640                           
 12641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
 12642     0BAE  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12643     0BAF  00BD               	movwf	(utoa@fp+1)^(0+128)
 12644     0BB0  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12645     0BB1  00BC               	movwf	utoa@fp^(0+128)
 12646     0BB2  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 12647     0BB3  00BF               	movwf	(utoa@d+1)^(0+128)
 12648     0BB4  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 12649     0BB5  00BE               	movwf	utoa@d^(0+128)
 12650     0BB6  3196  2649  318A   	fcall	_utoa
 12651     0BB9  0021               	movlb	1	; select bank1
 12652     0BBA  083D               	movf	(?_utoa+1)^(0+128),w
 12653     0BBB  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 12654     0BBC  083C               	movf	?_utoa^(0+128),w
 12655     0BBD  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12656     0BBE  2C4F               	goto	l1774
 12657     0BBF                     l4569:
 12658     0BBF  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12659     0BC0  0084               	movwf	4
 12660     0BC1  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12661     0BC2  0085               	movwf	5
 12662     0BC3  0800               	movf	0,w	;code access
 12663                           
 12664                           ; Switch size 1, requested type "simple"
 12665                           ; Number of cases is 1, Range of values is 117 to 117
 12666                           ; switch strategies available:
 12667                           ; Name         Instructions Cycles
 12668                           ; simple_byte            4     3 (average)
 12669                           ; direct_byte           11     9 (fixed)
 12670                           ; jumptable            263     9 (fixed)
 12671                           ;	Chosen strategy is simple_byte
 12672     0BC4  3A75               	xorlw	117	; case 117
 12673     0BC5  1903               	skipnz
 12674     0BC6  2BAE               	goto	l4563
 12675     0BC7  2BC8               	goto	l4571
 12676     0BC8                     l4571:
 12677                           
 12678                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
 12679     0BC8  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12680     0BC9  0084               	movwf	4
 12681     0BCA  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 12682     0BCB  0085               	movwf	5
 12683     0BCC  0012               	moviw fsr0++
 12684     0BCD  3A6E               	xorlw	110
 12685     0BCE  1D03               	btfss	3,2
 12686     0BCF  2BD1               	goto	u4601
 12687     0BD0  2BD2               	goto	u4600
 12688     0BD1                     u4601:
 12689     0BD1  2BF9               	goto	l4581
 12690     0BD2                     u4600:
 12691     0BD2                     l4573:
 12692                           
 12693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
 12694     0BD2  084C               	movf	vfpfcnvrt@ap^(0+128),w
 12695     0BD3  0086               	movwf	6
 12696     0BD4  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 12697     0BD5  0087               	movwf	7
 12698     0BD6  0801               	movf	1,w
 12699     0BD7  0084               	movwf	4
 12700     0BD8  0185               	clrf	5
 12701     0BD9  3002               	movlw	2
 12702     0BDA  0781               	addwf	1,f
 12703     0BDB  3F00               	moviw [0]fsr0
 12704     0BDC  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12705     0BDD  3F01               	moviw [1]fsr0
 12706     0BDE  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12707     0BDF  084E               	movf	??_vfpfcnvrt^(0+128),w
 12708     0BE0  0086               	movwf	6
 12709     0BE1  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12710     0BE2  0087               	movwf	7
 12711     0BE3  0022               	movlb	2	; select bank2
 12712     0BE4  0844               	movf	_nout^(0+256),w
 12713     0BE5  3FC0               	movwi [0]fsr1
 12714     0BE6  0845               	movf	(_nout+1)^(0+256),w
 12715     0BE7  3FC1               	movwi [1]fsr1
 12716     0BE8                     l4575:
 12717                           
 12718                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
 12719     0BE8  0021               	movlb	1	; select bank1
 12720     0BE9  0857               	movf	vfpfcnvrt@cp^(0+128),w
 12721     0BEA  3E01               	addlw	1
 12722     0BEB  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12723     0BEC  3000               	movlw	0
 12724     0BED  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 12725     0BEE  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 12726     0BEF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12727     0BF0  0086               	movwf	6
 12728     0BF1  0187               	clrf	7
 12729     0BF2  084E               	movf	??_vfpfcnvrt^(0+128),w
 12730     0BF3  3FC0               	movwi [0]fsr1
 12731     0BF4  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12732     0BF5  3FC1               	movwi [1]fsr1
 12733     0BF6                     l4577:
 12734                           
 12735                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
 12736     0BF6  01C9               	clrf	?_vfpfcnvrt^(0+128)
 12737     0BF7  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
 12738     0BF8  2C4F               	goto	l1774
 12739     0BF9                     l4581:
 12740                           
 12741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
 12742     0BF9  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12743     0BFA  0086               	movwf	6
 12744     0BFB  0187               	clrf	7
 12745     0BFC  3F40               	moviw [0]fsr1
 12746     0BFD  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12747     0BFE  3F41               	moviw [1]fsr1
 12748     0BFF  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12749     0C00  084E               	movf	??_vfpfcnvrt^(0+128),w
 12750     0C01  0084               	movwf	4
 12751     0C02  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12752     0C03  0085               	movwf	5
 12753     0C04  0012               	moviw fsr0++
 12754     0C05  3A25               	xorlw	37
 12755     0C06  1D03               	btfss	3,2
 12756     0C07  2C09               	goto	u4611
 12757     0C08  2C0A               	goto	u4610
 12758     0C09                     u4611:
 12759     0C09  2C23               	goto	l4591
 12760     0C0A                     u4610:
 12761     0C0A                     l4583:
 12762                           
 12763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
 12764     0C0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12765     0C0B  0086               	movwf	6
 12766     0C0C  0187               	clrf	7
 12767     0C0D  3001               	movlw	1
 12768     0C0E  0781               	addwf	1,f
 12769     0C0F  3141               	addfsr 1,1
 12770     0C10  1803               	skipnc
 12771     0C11  0A81               	incf	1,f
 12772     0C12                     l4585:
 12773                           
 12774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
 12775     0C12  3025               	movlw	37
 12776     0C13  00A3               	movwf	fputc@c^(0+128)
 12777     0C14  3000               	movlw	0
 12778     0C15  00A4               	movwf	(fputc@c^(0+128)+1)
 12779     0C16  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12780     0C17  00A6               	movwf	(fputc@fp+1)^(0+128)
 12781     0C18  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12782     0C19  00A5               	movwf	fputc@fp^(0+128)
 12783     0C1A  3194  2497  318A   	fcall	_fputc
 12784     0C1D                     l4587:
 12785                           
 12786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
 12787     0C1D  3001               	movlw	1
 12788     0C1E  0021               	movlb	1	; select bank1
 12789     0C1F  00C9               	movwf	?_vfpfcnvrt^(0+128)
 12790     0C20  3000               	movlw	0
 12791     0C21  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
 12792     0C22  2C4F               	goto	l1774
 12793     0C23                     l4591:
 12794                           
 12795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 12796     0C23  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12797     0C24  0086               	movwf	6
 12798     0C25  0187               	clrf	7
 12799     0C26  3001               	movlw	1
 12800     0C27  0781               	addwf	1,f
 12801     0C28  3141               	addfsr 1,1
 12802     0C29  1803               	skipnc
 12803     0C2A  0A81               	incf	1,f
 12804     0C2B  2BF6               	goto	l4577
 12805     0C2C                     l4597:
 12806                           
 12807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 12808     0C2C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12809     0C2D  0086               	movwf	6
 12810     0C2E  0187               	clrf	7
 12811     0C2F  3F40               	moviw [0]fsr1
 12812     0C30  00CE               	movwf	??_vfpfcnvrt^(0+128)
 12813     0C31  3F41               	moviw [1]fsr1
 12814     0C32  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 12815     0C33  084E               	movf	??_vfpfcnvrt^(0+128),w
 12816     0C34  0084               	movwf	4
 12817     0C35  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 12818     0C36  0085               	movwf	5
 12819     0C37  0800               	movf	0,w	;code access
 12820     0C38  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
 12821     0C39  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 12822     0C3A  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
 12823     0C3B  00A3               	movwf	fputc@c^(0+128)
 12824     0C3C  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
 12825     0C3D  00A4               	movwf	(fputc@c+1)^(0+128)
 12826     0C3E  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 12827     0C3F  00A6               	movwf	(fputc@fp+1)^(0+128)
 12828     0C40  0849               	movf	vfpfcnvrt@fp^(0+128),w
 12829     0C41  00A5               	movwf	fputc@fp^(0+128)
 12830     0C42  3194  2497  318A   	fcall	_fputc
 12831     0C45                     l4599:
 12832                           
 12833                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
 12834     0C45  0021               	movlb	1	; select bank1
 12835     0C46  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 12836     0C47  0086               	movwf	6
 12837     0C48  0187               	clrf	7
 12838     0C49  3001               	movlw	1
 12839     0C4A  0781               	addwf	1,f
 12840     0C4B  3141               	addfsr 1,1
 12841     0C4C  1803               	skipnc
 12842     0C4D  0A81               	incf	1,f
 12843     0C4E  2C1D               	goto	l4587
 12844     0C4F                     l1774:
 12845     0C4F  0008               	return
 12846     0C50                     __end_of_vfpfcnvrt:
 12847                           
 12848                           	psect	text18
 12849     1649                     __ptext18:	
 12850 ;; *************** function _utoa *****************
 12851 ;; Defined at:
 12852 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 12855 ;;		 -> NULL(0), 
 12856 ;;  d               2   30[BANK1 ] unsigned int 
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;  i               2   36[BANK1 ] int 
 12859 ;;  w               2   34[BANK1 ] int 
 12860 ;;  p               1   33[BANK1 ] _Bool 
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  2   28[BANK1 ] int 
 12863 ;; Registers used:
 12864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12870 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12872 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;Total ram usage:       10 bytes
 12875 ;; Hardware stack levels used: 1
 12876 ;; Hardware stack levels required when called: 10
 12877 ;; This function calls:
 12878 ;;		___lwdiv
 12879 ;;		___lwmod
 12880 ;;		_pad
 12881 ;; This function is called by:
 12882 ;;		_vfpfcnvrt
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886     1649                     _utoa:	
 12887                           ;psect for function _utoa
 12888                           
 12889     1649                     l4463:	
 12890                           ;incstack = 0
 12891                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12892                           
 12893                           
 12894                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
 12895     1649  3001               	movlw	1
 12896     164A  0021               	movlb	1	; select bank1
 12897     164B  00C1               	movwf	utoa@p^(0+128)
 12898     164C                     l4465:
 12899                           
 12900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 12901     164C  0020               	movlb	0	; select bank0
 12902     164D  0856               	movf	_width+1,w
 12903     164E  0021               	movlb	1	; select bank1
 12904     164F  00C3               	movwf	(utoa@w+1)^(0+128)
 12905     1650  0020               	movlb	0	; select bank0
 12906     1651  0855               	movf	_width,w
 12907     1652  0021               	movlb	1	; select bank1
 12908     1653  00C2               	movwf	utoa@w^(0+128)
 12909                           
 12910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 12911     1654  301F               	movlw	31
 12912     1655  00C4               	movwf	utoa@i^(0+128)
 12913     1656  3000               	movlw	0
 12914     1657  00C5               	movwf	(utoa@i^(0+128)+1)
 12915     1658                     l4467:
 12916                           
 12917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 12918     1658  0023               	movlb	3	; select bank3
 12919     1659  01BF               	clrf	(_dbuf^(0+384)+31)
 12920                           
 12921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12922     165A  2E89               	goto	l4479
 12923     165B                     l4469:
 12924                           
 12925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 12926     165B  30FF               	movlw	255
 12927     165C  0021               	movlb	1	; select bank1
 12928     165D  07C4               	addwf	utoa@i^(0+128),f
 12929     165E  30FF               	movlw	255
 12930     165F  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 12931     1660                     l4471:
 12932                           
 12933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 12934     1660  0844               	movf	utoa@i^(0+128),w
 12935     1661  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12936     1662  0086               	movwf	6
 12937     1663  3001               	movlw	1	; select bank3/4
 12938     1664  0087               	movwf	7
 12939     1665  300A               	movlw	10
 12940     1666  00A0               	movwf	___lwmod@divisor^(0+128)
 12941     1667  3000               	movlw	0
 12942     1668  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 12943     1669  083F               	movf	(utoa@d+1)^(0+128),w
 12944     166A  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 12945     166B  083E               	movf	utoa@d^(0+128),w
 12946     166C  00A2               	movwf	___lwmod@dividend^(0+128)
 12947     166D  3187  27CC  3196   	fcall	___lwmod
 12948     1670  0021               	movlb	1	; select bank1
 12949     1671  0820               	movf	?___lwmod^(0+128),w
 12950     1672  3E30               	addlw	48
 12951     1673  0081               	movwf	1
 12952     1674                     l4473:
 12953                           
 12954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 12955     1674  01C1               	clrf	utoa@p^(0+128)
 12956     1675                     l4475:
 12957                           
 12958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 12959     1675  30FF               	movlw	255
 12960     1676  07C2               	addwf	utoa@w^(0+128),f
 12961     1677  30FF               	movlw	255
 12962     1678  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 12963     1679                     l4477:
 12964                           
 12965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 12966     1679  300A               	movlw	10
 12967     167A  00A0               	movwf	___lwdiv@divisor^(0+128)
 12968     167B  3000               	movlw	0
 12969     167C  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 12970     167D  083F               	movf	(utoa@d+1)^(0+128),w
 12971     167E  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 12972     167F  083E               	movf	utoa@d^(0+128),w
 12973     1680  00A2               	movwf	___lwdiv@dividend^(0+128)
 12974     1681  3191  213A  3196   	fcall	___lwdiv
 12975     1684  0021               	movlb	1	; select bank1
 12976     1685  0821               	movf	(?___lwdiv+1)^(0+128),w
 12977     1686  00BF               	movwf	(utoa@d+1)^(0+128)
 12978     1687  0820               	movf	?___lwdiv^(0+128),w
 12979     1688  00BE               	movwf	utoa@d^(0+128)
 12980     1689                     l4479:
 12981                           
 12982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 12983     1689  0021               	movlb	1	; select bank1
 12984     168A  0844               	movf	utoa@i^(0+128),w
 12985     168B  0445               	iorwf	(utoa@i+1)^(0+128),w
 12986     168C  1903               	btfsc	3,2
 12987     168D  2E8F               	goto	u4461
 12988     168E  2E90               	goto	u4460
 12989     168F                     u4461:
 12990     168F  2EAD               	goto	l4489
 12991     1690                     u4460:
 12992     1690                     l4481:
 12993     1690  083E               	movf	utoa@d^(0+128),w
 12994     1691  043F               	iorwf	(utoa@d+1)^(0+128),w
 12995     1692  1D03               	btfss	3,2
 12996     1693  2E95               	goto	u4471
 12997     1694  2E96               	goto	u4470
 12998     1695                     u4471:
 12999     1695  2E5B               	goto	l4469
 13000     1696                     u4470:
 13001     1696                     l4483:
 13002     1696  0841               	movf	utoa@p^(0+128),w
 13003     1697  1D03               	btfss	3,2
 13004     1698  2E9A               	goto	u4481
 13005     1699  2E9B               	goto	u4480
 13006     169A                     u4481:
 13007     169A  2E5B               	goto	l4469
 13008     169B                     u4480:
 13009     169B                     l4485:
 13010     169B  0843               	movf	(utoa@w+1)^(0+128),w
 13011     169C  3A80               	xorlw	128
 13012     169D  00C0               	movwf	??_utoa^(0+128)
 13013     169E  3080               	movlw	128
 13014     169F  0240               	subwf	??_utoa^(0+128),w
 13015     16A0  1D03               	skipz
 13016     16A1  2EA4               	goto	u4495
 13017     16A2  3001               	movlw	1
 13018     16A3  0242               	subwf	utoa@w^(0+128),w
 13019     16A4                     u4495:
 13020     16A4  1C03               	skipc
 13021     16A5  2EA7               	goto	u4491
 13022     16A6  2EA8               	goto	u4490
 13023     16A7                     u4491:
 13024     16A7  2EAD               	goto	l4489
 13025     16A8                     u4490:
 13026     16A8                     l4487:
 13027     16A8  0020               	movlb	0	; select bank0
 13028     16A9  18E1               	btfsc	_flags,1
 13029     16AA  2EAC               	goto	u4501
 13030     16AB  2EAD               	goto	u4500
 13031     16AC                     u4501:
 13032     16AC  2E5B               	goto	l4469
 13033     16AD                     u4500:
 13034     16AD                     l4489:
 13035                           
 13036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 13037     16AD  0021               	movlb	1	; select bank1
 13038     16AE  083D               	movf	(utoa@fp+1)^(0+128),w
 13039     16AF  00B5               	movwf	(pad@fp+1)^(0+128)
 13040     16B0  083C               	movf	utoa@fp^(0+128),w
 13041     16B1  00B4               	movwf	pad@fp^(0+128)
 13042     16B2  0844               	movf	utoa@i^(0+128),w
 13043     16B3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13044     16B4  00B6               	movwf	pad@buf^(0+128)
 13045     16B5  0843               	movf	(utoa@w+1)^(0+128),w
 13046     16B6  00B8               	movwf	(pad@p+1)^(0+128)
 13047     16B7  0842               	movf	utoa@w^(0+128),w
 13048     16B8  00B7               	movwf	pad@p^(0+128)
 13049     16B9  3192  22DB  3196   	fcall	_pad
 13050     16BC  0021               	movlb	1	; select bank1
 13051     16BD  0835               	movf	(?_pad+1)^(0+128),w
 13052     16BE  00BD               	movwf	(?_utoa+1)^(0+128)
 13053     16BF  0834               	movf	?_pad^(0+128),w
 13054     16C0  00BC               	movwf	?_utoa^(0+128)
 13055     16C1                     l1751:
 13056     16C1  0008               	return
 13057     16C2                     __end_of_utoa:
 13058                           
 13059                           	psect	text19
 13060     07CC                     __ptext19:	
 13061 ;; *************** function ___lwmod *****************
 13062 ;; Defined at:
 13063 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;  divisor         2    0[BANK1 ] unsigned int 
 13066 ;;  dividend        2    2[BANK1 ] unsigned int 
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;  counter         1    4[BANK1 ] unsigned char 
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  2    0[BANK1 ] unsigned int 
 13071 ;; Registers used:
 13072 ;;		wreg, status,2, status,0
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13078 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13082 ;;Total ram usage:        5 bytes
 13083 ;; Hardware stack levels used: 1
 13084 ;; Hardware stack levels required when called: 5
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		_utoa
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092     07CC                     ___lwmod:	
 13093                           ;psect for function ___lwmod
 13094                           
 13095     07CC                     l4367:	
 13096                           ;incstack = 0
 13097                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13098                           
 13099     07CC  0021               	movlb	1	; select bank1
 13100     07CD  0820               	movf	___lwmod@divisor^(0+128),w
 13101     07CE  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 13102     07CF  1903               	btfsc	3,2
 13103     07D0  2FD2               	goto	u4251
 13104     07D1  2FD3               	goto	u4250
 13105     07D2                     u4251:
 13106     07D2  2FFA               	goto	l4385
 13107     07D3                     u4250:
 13108     07D3                     l4369:
 13109     07D3  3001               	movlw	1
 13110     07D4  00A4               	movwf	___lwmod@counter^(0+128)
 13111     07D5  2FDD               	goto	l4375
 13112     07D6                     l4371:
 13113     07D6  3001               	movlw	1
 13114     07D7                     u4265:
 13115     07D7  35A0               	lslf	___lwmod@divisor^(0+128),f
 13116     07D8  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 13117     07D9  0B89               	decfsz	9,f
 13118     07DA  2FD7               	goto	u4265
 13119     07DB                     l4373:
 13120     07DB  3001               	movlw	1
 13121     07DC  07A4               	addwf	___lwmod@counter^(0+128),f
 13122     07DD                     l4375:
 13123     07DD  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 13124     07DE  2FE0               	goto	u4271
 13125     07DF  2FE1               	goto	u4270
 13126     07E0                     u4271:
 13127     07E0  2FD6               	goto	l4371
 13128     07E1                     u4270:
 13129     07E1                     l4377:
 13130     07E1  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 13131     07E2  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 13132     07E3  1D03               	skipz
 13133     07E4  2FE7               	goto	u4285
 13134     07E5  0820               	movf	___lwmod@divisor^(0+128),w
 13135     07E6  0222               	subwf	___lwmod@dividend^(0+128),w
 13136     07E7                     u4285:
 13137     07E7  1C03               	skipc
 13138     07E8  2FEA               	goto	u4281
 13139     07E9  2FEB               	goto	u4280
 13140     07EA                     u4281:
 13141     07EA  2FEF               	goto	l4381
 13142     07EB                     u4280:
 13143     07EB                     l4379:
 13144     07EB  0820               	movf	___lwmod@divisor^(0+128),w
 13145     07EC  02A2               	subwf	___lwmod@dividend^(0+128),f
 13146     07ED  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 13147     07EE  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 13148     07EF                     l4381:
 13149     07EF  3001               	movlw	1
 13150     07F0                     u4295:
 13151     07F0  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 13152     07F1  0CA0               	rrf	___lwmod@divisor^(0+128),f
 13153     07F2  0B89               	decfsz	9,f
 13154     07F3  2FF0               	goto	u4295
 13155     07F4                     l4383:
 13156     07F4  3001               	movlw	1
 13157     07F5  02A4               	subwf	___lwmod@counter^(0+128),f
 13158     07F6  1D03               	btfss	3,2
 13159     07F7  2FF9               	goto	u4301
 13160     07F8  2FFA               	goto	u4300
 13161     07F9                     u4301:
 13162     07F9  2FE1               	goto	l4377
 13163     07FA                     u4300:
 13164     07FA                     l4385:
 13165     07FA  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 13166     07FB  00A1               	movwf	(?___lwmod+1)^(0+128)
 13167     07FC  0822               	movf	___lwmod@dividend^(0+128),w
 13168     07FD  00A0               	movwf	?___lwmod^(0+128)
 13169     07FE                     l1507:
 13170     07FE  0008               	return
 13171     07FF                     __end_of___lwmod:
 13172                           
 13173                           	psect	text20
 13174     143B                     __ptext20:	
 13175 ;; *************** function _read_prec_or_width *****************
 13176 ;; Defined at:
 13177 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 13180 ;;		 -> vfprintf@cfmt(2), 
 13181 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
 13182 ;;		 -> printf@ap(1), 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;  c               1   11[BANK1 ] unsigned char 
 13185 ;;  n               2   12[BANK1 ] int 
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  2    6[BANK1 ] int 
 13188 ;; Registers used:
 13189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13195 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13196 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13197 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;Total ram usage:        8 bytes
 13200 ;; Hardware stack levels used: 1
 13201 ;; Hardware stack levels required when called: 6
 13202 ;; This function calls:
 13203 ;;		___wmul
 13204 ;; This function is called by:
 13205 ;;		_vfpfcnvrt
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           
 13209     143B                     _read_prec_or_width:	
 13210                           ;psect for function _read_prec_or_width
 13211                           
 13212     143B                     l4493:	
 13213                           ;incstack = 0
 13214                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13215                           
 13216                           
 13217                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 13218     143B  0021               	movlb	1	; select bank1
 13219     143C  01AC               	clrf	read_prec_or_width@n^(0+128)
 13220     143D  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
 13221     143E                     l4495:
 13222                           
 13223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 13224     143E  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13225     143F  0086               	movwf	6
 13226     1440  0187               	clrf	7
 13227     1441  3F40               	moviw [0]fsr1
 13228     1442  00A8               	movwf	??_read_prec_or_width^(0+128)
 13229     1443  3F41               	moviw [1]fsr1
 13230     1444  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 13231     1445  0828               	movf	??_read_prec_or_width^(0+128),w
 13232     1446  0084               	movwf	4
 13233     1447  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 13234     1448  0085               	movwf	5
 13235     1449  0012               	moviw fsr0++
 13236     144A  3A2A               	xorlw	42
 13237     144B  1D03               	btfss	3,2
 13238     144C  2C4E               	goto	u4511
 13239     144D  2C4F               	goto	u4510
 13240     144E                     u4511:
 13241     144E  2C7E               	goto	l4505
 13242     144F                     u4510:
 13243     144F                     l4497:
 13244                           
 13245                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 13246     144F  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13247     1450  0086               	movwf	6
 13248     1451  0187               	clrf	7
 13249     1452  3001               	movlw	1
 13250     1453  0781               	addwf	1,f
 13251     1454  3141               	addfsr 1,1
 13252     1455  1803               	skipnc
 13253     1456  0A81               	incf	1,f
 13254     1457                     l4499:
 13255                           
 13256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 13257     1457  0827               	movf	read_prec_or_width@ap^(0+128),w
 13258     1458  0086               	movwf	6
 13259     1459  0187               	clrf	7
 13260     145A  0801               	movf	1,w
 13261     145B  0084               	movwf	4
 13262     145C  0185               	clrf	5
 13263     145D  3002               	movlw	2
 13264     145E  0781               	addwf	1,f
 13265     145F  3F00               	moviw [0]fsr0
 13266     1460  00AC               	movwf	read_prec_or_width@n^(0+128)
 13267     1461  3F01               	moviw [1]fsr0
 13268     1462  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 13269                           
 13270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 13271     1463  2C92               	goto	l4507
 13272     1464                     l4501:
 13273                           
 13274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 13275     1464  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 13276     1465  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13277     1466  082C               	movf	read_prec_or_width@n^(0+128),w
 13278     1467  00A0               	movwf	___wmul@multiplier^(0+128)
 13279     1468  300A               	movlw	10
 13280     1469  00A2               	movwf	___wmul@multiplicand^(0+128)
 13281     146A  3000               	movlw	0
 13282     146B  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13283     146C  319F  279E  3194   	fcall	___wmul
 13284     146F  0021               	movlb	1	; select bank1
 13285     1470  082B               	movf	read_prec_or_width@c^(0+128),w
 13286     1471  0720               	addwf	?___wmul^(0+128),w
 13287     1472  00AC               	movwf	read_prec_or_width@n^(0+128)
 13288     1473  3000               	movlw	0
 13289     1474  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13290     1475  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 13291     1476                     l4503:
 13292                           
 13293                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 13294     1476  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13295     1477  0086               	movwf	6
 13296     1478  0187               	clrf	7
 13297     1479  3001               	movlw	1
 13298     147A  0781               	addwf	1,f
 13299     147B  3141               	addfsr 1,1
 13300     147C  1803               	skipnc
 13301     147D  0A81               	incf	1,f
 13302     147E                     l4505:
 13303                           
 13304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 13305     147E  0826               	movf	read_prec_or_width@fmt^(0+128),w
 13306     147F  0086               	movwf	6
 13307     1480  0187               	clrf	7
 13308     1481  3F40               	moviw [0]fsr1
 13309     1482  00A8               	movwf	??_read_prec_or_width^(0+128)
 13310     1483  3F41               	moviw [1]fsr1
 13311     1484  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 13312     1485  0828               	movf	??_read_prec_or_width^(0+128),w
 13313     1486  0084               	movwf	4
 13314     1487  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 13315     1488  0085               	movwf	5
 13316     1489  0800               	movf	0,w	;code access
 13317     148A  3ED0               	addlw	208
 13318     148B  00AB               	movwf	read_prec_or_width@c^(0+128)
 13319     148C  300A               	movlw	10
 13320     148D  022B               	subwf	read_prec_or_width@c^(0+128),w
 13321     148E  1C03               	skipc
 13322     148F  2C91               	goto	u4521
 13323     1490  2C92               	goto	u4520
 13324     1491                     u4521:
 13325     1491  2C64               	goto	l4501
 13326     1492                     u4520:
 13327     1492                     l4507:
 13328                           
 13329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 13330     1492  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 13331     1493  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 13332     1494  082C               	movf	read_prec_or_width@n^(0+128),w
 13333     1495  00A6               	movwf	?_read_prec_or_width^(0+128)
 13334     1496                     l1759:
 13335     1496  0008               	return
 13336     1497                     __end_of_read_prec_or_width:
 13337                           
 13338                           	psect	text21
 13339     0713                     __ptext21:	
 13340 ;; *************** function _dtoa *****************
 13341 ;; Defined at:
 13342 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 13345 ;;		 -> NULL(0), 
 13346 ;;  d               2   30[BANK1 ] int 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;  i               2   39[BANK1 ] int 
 13349 ;;  w               2   36[BANK1 ] int 
 13350 ;;  s               1   38[BANK1 ] unsigned char 
 13351 ;;  p               1   35[BANK1 ] _Bool 
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  2   28[BANK1 ] int 
 13354 ;; Registers used:
 13355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13361 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13364 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;Total ram usage:       13 bytes
 13366 ;; Hardware stack levels used: 1
 13367 ;; Hardware stack levels required when called: 10
 13368 ;; This function calls:
 13369 ;;		___awdiv
 13370 ;;		___awmod
 13371 ;;		_abs
 13372 ;;		_pad
 13373 ;; This function is called by:
 13374 ;;		_vfpfcnvrt
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378     0713                     _dtoa:	
 13379                           ;psect for function _dtoa
 13380                           
 13381     0713                     l4417:	
 13382                           ;incstack = 0
 13383                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13384                           
 13385                           
 13386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
 13387     0713  3001               	movlw	1
 13388     0714  0021               	movlb	1	; select bank1
 13389     0715  00C3               	movwf	dtoa@p^(0+128)
 13390     0716                     l4419:
 13391                           
 13392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 13393     0716  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 13394     0717  2F19               	goto	u4361
 13395     0718  2F1B               	goto	u4360
 13396     0719                     u4361:
 13397     0719  3001               	movlw	1
 13398     071A  2F1C               	goto	u4370
 13399     071B                     u4360:
 13400     071B  3000               	movlw	0
 13401     071C                     u4370:
 13402     071C  00C6               	movwf	dtoa@s^(0+128)
 13403                           
 13404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 13405     071D  0020               	movlb	0	; select bank0
 13406     071E  0856               	movf	_width+1,w
 13407     071F  0021               	movlb	1	; select bank1
 13408     0720  00C5               	movwf	(dtoa@w+1)^(0+128)
 13409     0721  0020               	movlb	0	; select bank0
 13410     0722  0855               	movf	_width,w
 13411     0723  0021               	movlb	1	; select bank1
 13412     0724  00C4               	movwf	dtoa@w^(0+128)
 13413     0725                     l4421:
 13414                           
 13415                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 13416     0725  0846               	movf	dtoa@s^(0+128),w
 13417     0726  1903               	btfsc	3,2
 13418     0727  2F29               	goto	u4381
 13419     0728  2F2A               	goto	u4380
 13420     0729                     u4381:
 13421     0729  2F3E               	goto	l1728
 13422     072A                     u4380:
 13423     072A                     l4423:
 13424                           
 13425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 13426     072A  30FF               	movlw	255
 13427     072B  07C4               	addwf	dtoa@w^(0+128),f
 13428     072C  30FF               	movlw	255
 13429     072D  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13430     072E                     l4425:
 13431                           
 13432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 13433     072E  0846               	movf	dtoa@s^(0+128),w
 13434     072F  1D03               	btfss	3,2
 13435     0730  2F32               	goto	u4391
 13436     0731  2F33               	goto	u4390
 13437     0732                     u4391:
 13438     0732  2F38               	goto	l4429
 13439     0733                     u4390:
 13440     0733                     l4427:
 13441     0733  302B               	movlw	43
 13442     0734  00C1               	movwf	_dtoa$2145^(0+128)
 13443     0735  3000               	movlw	0
 13444     0736  00C2               	movwf	(_dtoa$2145^(0+128)+1)
 13445     0737  2F3C               	goto	l1732
 13446     0738                     l4429:
 13447     0738  302D               	movlw	45
 13448     0739  00C1               	movwf	_dtoa$2145^(0+128)
 13449     073A  3000               	movlw	0
 13450     073B  00C2               	movwf	(_dtoa$2145^(0+128)+1)
 13451     073C                     l1732:
 13452     073C  0841               	movf	_dtoa$2145^(0+128),w
 13453     073D  00C6               	movwf	dtoa@s^(0+128)
 13454     073E                     l1728:	
 13455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 13456                           
 13457                           
 13458                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 13459     073E  301F               	movlw	31
 13460     073F  00C7               	movwf	dtoa@i^(0+128)
 13461     0740  3000               	movlw	0
 13462     0741  00C8               	movwf	(dtoa@i^(0+128)+1)
 13463     0742                     l4431:
 13464                           
 13465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 13466     0742  0023               	movlb	3	; select bank3
 13467     0743  01BF               	clrf	(_dbuf^(0+384)+31)
 13468                           
 13469                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13470     0744  2F7B               	goto	l4443
 13471     0745                     l4433:
 13472                           
 13473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 13474     0745  30FF               	movlw	255
 13475     0746  0021               	movlb	1	; select bank1
 13476     0747  07C7               	addwf	dtoa@i^(0+128),f
 13477     0748  30FF               	movlw	255
 13478     0749  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13479     074A                     l4435:
 13480                           
 13481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 13482     074A  0847               	movf	dtoa@i^(0+128),w
 13483     074B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13484     074C  0086               	movwf	6
 13485     074D  3001               	movlw	1	; select bank3/4
 13486     074E  0087               	movwf	7
 13487     074F  300A               	movlw	10
 13488     0750  00A0               	movwf	___awmod@divisor^(0+128)
 13489     0751  3000               	movlw	0
 13490     0752  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 13491     0753  083F               	movf	(dtoa@d+1)^(0+128),w
 13492     0754  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 13493     0755  083E               	movf	dtoa@d^(0+128),w
 13494     0756  00A2               	movwf	___awmod@dividend^(0+128)
 13495     0757  3192  2289  3187   	fcall	___awmod
 13496     075A  0021               	movlb	1	; select bank1
 13497     075B  0821               	movf	(?___awmod+1)^(0+128),w
 13498     075C  00A7               	movwf	(abs@a+1)^(0+128)
 13499     075D  0820               	movf	?___awmod^(0+128),w
 13500     075E  00A6               	movwf	abs@a^(0+128)
 13501     075F  319E  26D5  3187   	fcall	_abs
 13502     0762  0021               	movlb	1	; select bank1
 13503     0763  0826               	movf	?_abs^(0+128),w
 13504     0764  3E30               	addlw	48
 13505     0765  0081               	movwf	1
 13506     0766                     l4437:
 13507                           
 13508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 13509     0766  01C3               	clrf	dtoa@p^(0+128)
 13510     0767                     l4439:
 13511                           
 13512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 13513     0767  30FF               	movlw	255
 13514     0768  07C4               	addwf	dtoa@w^(0+128),f
 13515     0769  30FF               	movlw	255
 13516     076A  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 13517     076B                     l4441:
 13518                           
 13519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 13520     076B  300A               	movlw	10
 13521     076C  00A0               	movwf	___awdiv@divisor^(0+128)
 13522     076D  3000               	movlw	0
 13523     076E  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 13524     076F  083F               	movf	(dtoa@d+1)^(0+128),w
 13525     0770  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 13526     0771  083E               	movf	dtoa@d^(0+128),w
 13527     0772  00A2               	movwf	___awdiv@dividend^(0+128)
 13528     0773  3193  23DF  3187   	fcall	___awdiv
 13529     0776  0021               	movlb	1	; select bank1
 13530     0777  0821               	movf	(?___awdiv+1)^(0+128),w
 13531     0778  00BF               	movwf	(dtoa@d+1)^(0+128)
 13532     0779  0820               	movf	?___awdiv^(0+128),w
 13533     077A  00BE               	movwf	dtoa@d^(0+128)
 13534     077B                     l4443:
 13535                           
 13536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13537     077B  0021               	movlb	1	; select bank1
 13538     077C  0848               	movf	(dtoa@i+1)^(0+128),w
 13539     077D  3A80               	xorlw	128
 13540     077E  00C0               	movwf	??_dtoa^(0+128)
 13541     077F  3080               	movlw	128
 13542     0780  0240               	subwf	??_dtoa^(0+128),w
 13543     0781  1D03               	skipz
 13544     0782  2F85               	goto	u4405
 13545     0783  3001               	movlw	1
 13546     0784  0247               	subwf	dtoa@i^(0+128),w
 13547     0785                     u4405:
 13548     0785  1C03               	skipc
 13549     0786  2F88               	goto	u4401
 13550     0787  2F89               	goto	u4400
 13551     0788                     u4401:
 13552     0788  2FA7               	goto	l4453
 13553     0789                     u4400:
 13554     0789                     l4445:
 13555     0789  0021               	movlb	1	; select bank1
 13556     078A  083E               	movf	dtoa@d^(0+128),w
 13557     078B  043F               	iorwf	(dtoa@d+1)^(0+128),w
 13558     078C  1D03               	btfss	3,2
 13559     078D  2F8F               	goto	u4411
 13560     078E  2F90               	goto	u4410
 13561     078F                     u4411:
 13562     078F  2F45               	goto	l4433
 13563     0790                     u4410:
 13564     0790                     l4447:
 13565     0790  0843               	movf	dtoa@p^(0+128),w
 13566     0791  1D03               	btfss	3,2
 13567     0792  2F94               	goto	u4421
 13568     0793  2F95               	goto	u4420
 13569     0794                     u4421:
 13570     0794  2F45               	goto	l4433
 13571     0795                     u4420:
 13572     0795                     l4449:
 13573     0795  0845               	movf	(dtoa@w+1)^(0+128),w
 13574     0796  3A80               	xorlw	128
 13575     0797  00C0               	movwf	??_dtoa^(0+128)
 13576     0798  3080               	movlw	128
 13577     0799  0240               	subwf	??_dtoa^(0+128),w
 13578     079A  1D03               	skipz
 13579     079B  2F9E               	goto	u4435
 13580     079C  3001               	movlw	1
 13581     079D  0244               	subwf	dtoa@w^(0+128),w
 13582     079E                     u4435:
 13583     079E  1C03               	skipc
 13584     079F  2FA1               	goto	u4431
 13585     07A0  2FA2               	goto	u4430
 13586     07A1                     u4431:
 13587     07A1  2FA7               	goto	l4453
 13588     07A2                     u4430:
 13589     07A2                     l4451:
 13590     07A2  0020               	movlb	0	; select bank0
 13591     07A3  18E1               	btfsc	_flags,1
 13592     07A4  2FA6               	goto	u4441
 13593     07A5  2FA7               	goto	u4440
 13594     07A6                     u4441:
 13595     07A6  2F45               	goto	l4433
 13596     07A7                     u4440:
 13597     07A7                     l4453:
 13598                           
 13599                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 13600     07A7  0021               	movlb	1	; select bank1
 13601     07A8  0846               	movf	dtoa@s^(0+128),w
 13602     07A9  1903               	btfsc	3,2
 13603     07AA  2FAC               	goto	u4451
 13604     07AB  2FAD               	goto	u4450
 13605     07AC                     u4451:
 13606     07AC  2FB8               	goto	l4459
 13607     07AD                     u4450:
 13608     07AD                     l4455:
 13609                           
 13610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 13611     07AD  30FF               	movlw	255
 13612     07AE  07C7               	addwf	dtoa@i^(0+128),f
 13613     07AF  30FF               	movlw	255
 13614     07B0  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 13615     07B1                     l4457:
 13616                           
 13617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 13618     07B1  0847               	movf	dtoa@i^(0+128),w
 13619     07B2  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13620     07B3  0086               	movwf	6
 13621     07B4  3001               	movlw	1	; select bank3/4
 13622     07B5  0087               	movwf	7
 13623     07B6  0846               	movf	dtoa@s^(0+128),w
 13624     07B7  0081               	movwf	1
 13625     07B8                     l4459:
 13626                           
 13627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 13628     07B8  083D               	movf	(dtoa@fp+1)^(0+128),w
 13629     07B9  00B5               	movwf	(pad@fp+1)^(0+128)
 13630     07BA  083C               	movf	dtoa@fp^(0+128),w
 13631     07BB  00B4               	movwf	pad@fp^(0+128)
 13632     07BC  0847               	movf	dtoa@i^(0+128),w
 13633     07BD  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 13634     07BE  00B6               	movwf	pad@buf^(0+128)
 13635     07BF  0845               	movf	(dtoa@w+1)^(0+128),w
 13636     07C0  00B8               	movwf	(pad@p+1)^(0+128)
 13637     07C1  0844               	movf	dtoa@w^(0+128),w
 13638     07C2  00B7               	movwf	pad@p^(0+128)
 13639     07C3  3192  22DB  3187   	fcall	_pad
 13640     07C6  0021               	movlb	1	; select bank1
 13641     07C7  0835               	movf	(?_pad+1)^(0+128),w
 13642     07C8  00BD               	movwf	(?_dtoa+1)^(0+128)
 13643     07C9  0834               	movf	?_pad^(0+128),w
 13644     07CA  00BC               	movwf	?_dtoa^(0+128)
 13645     07CB                     l1741:
 13646     07CB  0008               	return
 13647     07CC                     __end_of_dtoa:
 13648                           
 13649                           	psect	text22
 13650     12DB                     __ptext22:	
 13651 ;; *************** function _pad *****************
 13652 ;; Defined at:
 13653 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 13656 ;;		 -> NULL(0), 
 13657 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 13658 ;;		 -> dbuf(32), 
 13659 ;;  p               2   23[BANK1 ] int 
 13660 ;; Auto vars:     Size  Location     Type
 13661 ;;  i               2   26[BANK1 ] int 
 13662 ;; Return value:  Size  Location     Type
 13663 ;;                  2   20[BANK1 ] int 
 13664 ;; Registers used:
 13665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13666 ;; Tracked objects:
 13667 ;;		On entry : 0/0
 13668 ;;		On exit  : 0/0
 13669 ;;		Unchanged: 0/0
 13670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13671 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13672 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13673 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13674 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;Total ram usage:        8 bytes
 13676 ;; Hardware stack levels used: 1
 13677 ;; Hardware stack levels required when called: 9
 13678 ;; This function calls:
 13679 ;;		_fputc
 13680 ;;		_fputs
 13681 ;;		_strlen
 13682 ;; This function is called by:
 13683 ;;		_dtoa
 13684 ;;		_utoa
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688     12DB                     _pad:	
 13689                           ;psect for function _pad
 13690                           
 13691     12DB                     l4389:	
 13692                           ;incstack = 0
 13693                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13694                           
 13695                           
 13696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 13697     12DB  0020               	movlb	0	; select bank0
 13698     12DC  1C61               	btfss	_flags,0
 13699     12DD  2ADF               	goto	u4311
 13700     12DE  2AE0               	goto	u4310
 13701     12DF                     u4311:
 13702     12DF  2AEA               	goto	l4393
 13703     12E0                     u4310:
 13704     12E0                     l4391:
 13705                           
 13706                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 13707     12E0  0021               	movlb	1	; select bank1
 13708     12E1  0836               	movf	pad@buf^(0+128),w
 13709     12E2  00AC               	movwf	fputs@s^(0+128)
 13710     12E3  0835               	movf	(pad@fp+1)^(0+128),w
 13711     12E4  00AE               	movwf	(fputs@fp+1)^(0+128)
 13712     12E5  0834               	movf	pad@fp^(0+128),w
 13713     12E6  00AD               	movwf	fputs@fp^(0+128)
 13714     12E7  3190  203E  3192   	fcall	_fputs
 13715     12EA                     l4393:
 13716                           
 13717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 13718     12EA  0021               	movlb	1	; select bank1
 13719     12EB  1FB8               	btfss	(pad@p+1)^(0+128),7
 13720     12EC  2AEE               	goto	u4321
 13721     12ED  2AEF               	goto	u4320
 13722     12EE                     u4321:
 13723     12EE  2AF1               	goto	l1720
 13724     12EF                     u4320:
 13725     12EF                     l4395:
 13726                           
 13727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 13728     12EF  01B7               	clrf	pad@p^(0+128)
 13729     12F0  01B8               	clrf	(pad@p+1)^(0+128)
 13730     12F1                     l1720:	
 13731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 13732                           
 13733                           
 13734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 13735     12F1  01BA               	clrf	pad@i^(0+128)
 13736     12F2  01BB               	clrf	(pad@i+1)^(0+128)
 13737                           
 13738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13739     12F3  2B05               	goto	l4401
 13740     12F4                     l4397:
 13741                           
 13742                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 13743     12F4  3020               	movlw	32
 13744     12F5  0021               	movlb	1	; select bank1
 13745     12F6  00A3               	movwf	fputc@c^(0+128)
 13746     12F7  3000               	movlw	0
 13747     12F8  00A4               	movwf	(fputc@c^(0+128)+1)
 13748     12F9  0835               	movf	(pad@fp+1)^(0+128),w
 13749     12FA  00A6               	movwf	(fputc@fp+1)^(0+128)
 13750     12FB  0834               	movf	pad@fp^(0+128),w
 13751     12FC  00A5               	movwf	fputc@fp^(0+128)
 13752     12FD  3194  2497  3192   	fcall	_fputc
 13753     1300                     l4399:
 13754                           
 13755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 13756     1300  3001               	movlw	1
 13757     1301  0021               	movlb	1	; select bank1
 13758     1302  07BA               	addwf	pad@i^(0+128),f
 13759     1303  3000               	movlw	0
 13760     1304  3DBB               	addwfc	(pad@i+1)^(0+128),f
 13761     1305                     l4401:
 13762                           
 13763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 13764     1305  083B               	movf	(pad@i+1)^(0+128),w
 13765     1306  3A80               	xorlw	128
 13766     1307  00B9               	movwf	??_pad^(0+128)
 13767     1308  0838               	movf	(pad@p+1)^(0+128),w
 13768     1309  3A80               	xorlw	128
 13769     130A  0239               	subwf	??_pad^(0+128),w
 13770     130B  1D03               	skipz
 13771     130C  2B0F               	goto	u4335
 13772     130D  0837               	movf	pad@p^(0+128),w
 13773     130E  023A               	subwf	pad@i^(0+128),w
 13774     130F                     u4335:
 13775     130F  1C03               	skipc
 13776     1310  2B12               	goto	u4331
 13777     1311  2B13               	goto	u4330
 13778     1312                     u4331:
 13779     1312  2AF4               	goto	l4397
 13780     1313                     u4330:
 13781     1313                     l1723:
 13782                           
 13783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 13784     1313  0020               	movlb	0	; select bank0
 13785     1314  1861               	btfsc	_flags,0
 13786     1315  2B17               	goto	u4341
 13787     1316  2B18               	goto	u4340
 13788     1317                     u4341:
 13789     1317  2B22               	goto	l4405
 13790     1318                     u4340:
 13791     1318                     l4403:
 13792                           
 13793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 13794     1318  0021               	movlb	1	; select bank1
 13795     1319  0836               	movf	pad@buf^(0+128),w
 13796     131A  00AC               	movwf	fputs@s^(0+128)
 13797     131B  0835               	movf	(pad@fp+1)^(0+128),w
 13798     131C  00AE               	movwf	(fputs@fp+1)^(0+128)
 13799     131D  0834               	movf	pad@fp^(0+128),w
 13800     131E  00AD               	movwf	fputs@fp^(0+128)
 13801     131F  3190  203E  3192   	fcall	_fputs
 13802     1322                     l4405:
 13803                           
 13804                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 13805     1322  0021               	movlb	1	; select bank1
 13806     1323  0836               	movf	pad@buf^(0+128),w
 13807     1324  00A0               	movwf	strlen@s^(0+128)
 13808     1325  319F  273B  3192   	fcall	_strlen
 13809     1328  0021               	movlb	1	; select bank1
 13810     1329  0837               	movf	pad@p^(0+128),w
 13811     132A  0720               	addwf	?_strlen^(0+128),w
 13812     132B  00B4               	movwf	?_pad^(0+128)
 13813     132C  0838               	movf	(pad@p+1)^(0+128),w
 13814     132D  3D21               	addwfc	(?_strlen+1)^(0+128),w
 13815     132E  00B5               	movwf	(?_pad+1)^(0+128)
 13816     132F                     l1725:
 13817     132F  0008               	return
 13818     1330                     __end_of_pad:
 13819                           
 13820                           	psect	text23
 13821     1F3B                     __ptext23:	
 13822 ;; *************** function _strlen *****************
 13823 ;; Defined at:
 13824 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 13827 ;;		 -> dbuf(32), 
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 13830 ;;		 -> dbuf(32), 
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  2    0[BANK1 ] unsigned int 
 13833 ;; Registers used:
 13834 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13840 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;Total ram usage:        3 bytes
 13845 ;; Hardware stack levels used: 1
 13846 ;; Hardware stack levels required when called: 5
 13847 ;; This function calls:
 13848 ;;		Nothing
 13849 ;; This function is called by:
 13850 ;;		_pad
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854     1F3B                     _strlen:	
 13855                           ;psect for function _strlen
 13856                           
 13857     1F3B                     l4235:	
 13858                           ;incstack = 0
 13859                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13860                           
 13861     1F3B  0021               	movlb	1	; select bank1
 13862     1F3C  0820               	movf	strlen@s^(0+128),w
 13863     1F3D  00A2               	movwf	strlen@a^(0+128)
 13864     1F3E  2F41               	goto	l4239
 13865     1F3F                     l4237:
 13866     1F3F  3001               	movlw	1
 13867     1F40  07A0               	addwf	strlen@s^(0+128),f
 13868     1F41                     l4239:
 13869     1F41  0820               	movf	strlen@s^(0+128),w
 13870     1F42  0086               	movwf	6
 13871     1F43  3001               	movlw	1	; select bank2/3
 13872     1F44  0087               	movwf	7
 13873     1F45  0801               	movf	1,w
 13874     1F46  1D03               	btfss	3,2
 13875     1F47  2F49               	goto	u3941
 13876     1F48  2F4A               	goto	u3940
 13877     1F49                     u3941:
 13878     1F49  2F3F               	goto	l4237
 13879     1F4A                     u3940:
 13880     1F4A                     l4241:
 13881     1F4A  0822               	movf	strlen@a^(0+128),w
 13882     1F4B  0220               	subwf	strlen@s^(0+128),w
 13883     1F4C  00A0               	movwf	?_strlen^(0+128)
 13884     1F4D  01A1               	clrf	(?_strlen+1)^(0+128)
 13885     1F4E  1BA0               	btfsc	?_strlen^(0+128),7
 13886     1F4F  03A1               	decf	(?_strlen+1)^(0+128),f
 13887     1F50                     l1821:
 13888     1F50  0008               	return
 13889     1F51                     __end_of_strlen:
 13890                           
 13891                           	psect	text24
 13892     103E                     __ptext24:	
 13893 ;; *************** function _fputs *****************
 13894 ;; Defined at:
 13895 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 13898 ;;		 -> dbuf(32), 
 13899 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 13900 ;;		 -> NULL(0), 
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;  i               2   18[BANK1 ] int 
 13903 ;;  c               1   17[BANK1 ] unsigned char 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  2   12[BANK1 ] int 
 13906 ;; Registers used:
 13907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13913 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13917 ;;Total ram usage:        8 bytes
 13918 ;; Hardware stack levels used: 1
 13919 ;; Hardware stack levels required when called: 8
 13920 ;; This function calls:
 13921 ;;		_fputc
 13922 ;; This function is called by:
 13923 ;;		_pad
 13924 ;; This function uses a non-reentrant model
 13925 ;;
 13926                           
 13927     103E                     _fputs:	
 13928                           ;psect for function _fputs
 13929                           
 13930     103E                     l4227:	
 13931                           ;incstack = 0
 13932                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13933                           
 13934     103E  0021               	movlb	1	; select bank1
 13935     103F  01B2               	clrf	fputs@i^(0+128)
 13936     1040  01B3               	clrf	(fputs@i+1)^(0+128)
 13937     1041  2855               	goto	l4233
 13938     1042                     l4229:
 13939     1042  0831               	movf	fputs@c^(0+128),w
 13940     1043  00AF               	movwf	??_fputs^(0+128)
 13941     1044  01B0               	clrf	(??_fputs^(0+128)+1)
 13942     1045  082F               	movf	??_fputs^(0+128),w
 13943     1046  00A3               	movwf	fputc@c^(0+128)
 13944     1047  0830               	movf	(??_fputs+1)^(0+128),w
 13945     1048  00A4               	movwf	(fputc@c+1)^(0+128)
 13946     1049  082E               	movf	(fputs@fp+1)^(0+128),w
 13947     104A  00A6               	movwf	(fputc@fp+1)^(0+128)
 13948     104B  082D               	movf	fputs@fp^(0+128),w
 13949     104C  00A5               	movwf	fputc@fp^(0+128)
 13950     104D  3194  2497  3190   	fcall	_fputc
 13951     1050                     l4231:
 13952     1050  3001               	movlw	1
 13953     1051  0021               	movlb	1	; select bank1
 13954     1052  07B2               	addwf	fputs@i^(0+128),f
 13955     1053  3000               	movlw	0
 13956     1054  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 13957     1055                     l4233:
 13958     1055  082C               	movf	fputs@s^(0+128),w
 13959     1056  0732               	addwf	fputs@i^(0+128),w
 13960     1057  0086               	movwf	6
 13961     1058  3001               	movlw	1	; select bank2/3
 13962     1059  0087               	movwf	7
 13963     105A  0801               	movf	1,w
 13964     105B  00B1               	movwf	fputs@c^(0+128)
 13965     105C  0831               	movf	fputs@c^(0+128),w
 13966     105D  1D03               	btfss	3,2
 13967     105E  2860               	goto	u3931
 13968     105F  2861               	goto	u3930
 13969     1060                     u3931:
 13970     1060  2842               	goto	l4229
 13971     1061                     u3930:
 13972     1061                     l1815:
 13973     1061  0008               	return
 13974     1062                     __end_of_fputs:
 13975                           
 13976                           	psect	text25
 13977     1497                     __ptext25:	
 13978 ;; *************** function _fputc *****************
 13979 ;; Defined at:
 13980 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  c               2    3[BANK1 ] int 
 13983 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 13984 ;;		 -> NULL(0), 
 13985 ;; Auto vars:     Size  Location     Type
 13986 ;;		None
 13987 ;; Return value:  Size  Location     Type
 13988 ;;                  2    3[BANK1 ] int 
 13989 ;; Registers used:
 13990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13991 ;; Tracked objects:
 13992 ;;		On entry : 0/0
 13993 ;;		On exit  : 0/0
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13996 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;Total ram usage:        9 bytes
 14001 ;; Hardware stack levels used: 1
 14002 ;; Hardware stack levels required when called: 7
 14003 ;; This function calls:
 14004 ;;		_putch
 14005 ;; This function is called by:
 14006 ;;		_pad
 14007 ;;		_vfpfcnvrt
 14008 ;;		_fputs
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           
 14012     1497                     _fputc:	
 14013                           ;psect for function _fputc
 14014                           
 14015     1497                     l4211:	
 14016                           ;incstack = 0
 14017                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14018                           
 14019     1497  0021               	movlb	1	; select bank1
 14020     1498  0825               	movf	fputc@fp^(0+128),w
 14021     1499  0426               	iorwf	(fputc@fp+1)^(0+128),w
 14022     149A  1903               	btfsc	3,2
 14023     149B  2C9D               	goto	u3891
 14024     149C  2C9E               	goto	u3890
 14025     149D                     u3891:
 14026     149D  2CA4               	goto	l4215
 14027     149E                     u3890:
 14028     149E                     l4213:
 14029     149E  0825               	movf	fputc@fp^(0+128),w
 14030     149F  0426               	iorwf	(fputc@fp+1)^(0+128),w
 14031     14A0  1D03               	btfss	3,2
 14032     14A1  2CA3               	goto	u3901
 14033     14A2  2CA4               	goto	u3900
 14034     14A3                     u3901:
 14035     14A3  2CA9               	goto	l4217
 14036     14A4                     u3900:
 14037     14A4                     l4215:
 14038     14A4  0823               	movf	fputc@c^(0+128),w
 14039     14A5  319E  26A2  3194   	fcall	_putch
 14040     14A8  2CF4               	goto	l1807
 14041     14A9                     l4217:
 14042     14A9  0825               	movf	fputc@fp^(0+128),w
 14043     14AA  0086               	movwf	6
 14044     14AB  0826               	movf	(fputc@fp+1)^(0+128),w
 14045     14AC  0087               	movwf	7
 14046     14AD  3149               	addfsr 1,9
 14047     14AE  0016               	moviw fsr1++
 14048     14AF  0401               	iorwf	1,w
 14049     14B0  1903               	btfsc	3,2
 14050     14B1  2CB3               	goto	u3911
 14051     14B2  2CB4               	goto	u3910
 14052     14B3                     u3911:
 14053     14B3  2CD4               	goto	l4221
 14054     14B4                     u3910:
 14055     14B4                     l4219:
 14056     14B4  0825               	movf	fputc@fp^(0+128),w
 14057     14B5  0086               	movwf	6
 14058     14B6  0826               	movf	(fputc@fp+1)^(0+128),w
 14059     14B7  0087               	movwf	7
 14060     14B8  3149               	addfsr 1,9
 14061     14B9  3F40               	moviw [0]fsr1
 14062     14BA  00A7               	movwf	??_fputc^(0+128)
 14063     14BB  3F41               	moviw [1]fsr1
 14064     14BC  00A8               	movwf	(??_fputc^(0+128)+1)
 14065     14BD  0825               	movf	fputc@fp^(0+128),w
 14066     14BE  0086               	movwf	6
 14067     14BF  0826               	movf	(fputc@fp+1)^(0+128),w
 14068     14C0  0087               	movwf	7
 14069     14C1  3142               	addfsr 1,2
 14070     14C2  3F40               	moviw [0]fsr1
 14071     14C3  00A9               	movwf	(??_fputc+2)^(0+128)
 14072     14C4  3F41               	moviw [1]fsr1
 14073     14C5  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 14074     14C6  082A               	movf	(??_fputc+3)^(0+128),w
 14075     14C7  3A80               	xorlw	128
 14076     14C8  00AB               	movwf	(??_fputc+4)^(0+128)
 14077     14C9  0828               	movf	(??_fputc+1)^(0+128),w
 14078     14CA  3A80               	xorlw	128
 14079     14CB  022B               	subwf	(??_fputc+4)^(0+128),w
 14080     14CC  1D03               	skipz
 14081     14CD  2CD0               	goto	u3925
 14082     14CE  0827               	movf	??_fputc^(0+128),w
 14083     14CF  0229               	subwf	(??_fputc+2)^(0+128),w
 14084     14D0                     u3925:
 14085     14D0  1803               	skipnc
 14086     14D1  2CD3               	goto	u3921
 14087     14D2  2CD4               	goto	u3920
 14088     14D3                     u3921:
 14089     14D3  2CF4               	goto	l1807
 14090     14D4                     u3920:
 14091     14D4                     l4221:
 14092     14D4  0021               	movlb	1	; select bank1
 14093     14D5  0825               	movf	fputc@fp^(0+128),w
 14094     14D6  0086               	movwf	6
 14095     14D7  0826               	movf	(fputc@fp+1)^(0+128),w
 14096     14D8  0087               	movwf	7
 14097     14D9  3142               	addfsr 1,2
 14098     14DA  0825               	movf	fputc@fp^(0+128),w
 14099     14DB  0084               	movwf	4
 14100     14DC  0826               	movf	(fputc@fp+1)^(0+128),w
 14101     14DD  0085               	movwf	5
 14102     14DE  3F00               	moviw [0]fsr0
 14103     14DF  00A7               	movwf	??_fputc^(0+128)
 14104     14E0  3F01               	moviw [1]fsr0
 14105     14E1  00A8               	movwf	(??_fputc^(0+128)+1)
 14106     14E2  3F40               	moviw [0]fsr1
 14107     14E3  0727               	addwf	??_fputc^(0+128),w
 14108     14E4  0084               	movwf	4
 14109     14E5  3F41               	moviw [1]fsr1
 14110     14E6  3D28               	addwfc	(??_fputc+1)^(0+128),w
 14111     14E7  0085               	movwf	5
 14112     14E8  0823               	movf	fputc@c^(0+128),w
 14113     14E9  0080               	movwf	0
 14114     14EA                     l4223:
 14115     14EA  0825               	movf	fputc@fp^(0+128),w
 14116     14EB  0086               	movwf	6
 14117     14EC  0826               	movf	(fputc@fp+1)^(0+128),w
 14118     14ED  0087               	movwf	7
 14119     14EE  3142               	addfsr 1,2
 14120     14EF  3001               	movlw	1
 14121     14F0  0781               	addwf	1,f
 14122     14F1  3141               	addfsr 1,1
 14123     14F2  1803               	skipnc
 14124     14F3  0A81               	incf	1,f
 14125     14F4                     l1807:
 14126     14F4  0008               	return
 14127     14F5                     __end_of_fputc:
 14128                           
 14129                           	psect	text26
 14130     1EA2                     __ptext26:	
 14131 ;; *************** function _putch *****************
 14132 ;; Defined at:
 14133 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;  txData          1    wreg     unsigned char 
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;  txData          1    2[BANK1 ] unsigned char 
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      void 
 14140 ;; Registers used:
 14141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14148 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;Total ram usage:        1 bytes
 14152 ;; Hardware stack levels used: 1
 14153 ;; Hardware stack levels required when called: 6
 14154 ;; This function calls:
 14155 ;;		_EUSART_IsTxReady
 14156 ;;		_EUSART_Write
 14157 ;; This function is called by:
 14158 ;;		_fputc
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162     1EA2                     _putch:	
 14163                           ;psect for function _putch
 14164                           
 14165                           
 14166                           ;incstack = 0
 14167                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14168                           ;putch@txData stored from wreg
 14169     1EA2  0021               	movlb	1	; select bank1
 14170     1EA3  00A2               	movwf	putch@txData^(0+128)
 14171     1EA4                     l4203:
 14172     1EA4                     l4205:	
 14173                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 14174                           
 14175                           
 14176                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 14177     1EA4  319D  2599  319E   	fcall	_EUSART_IsTxReady
 14178     1EA7  3A00               	xorlw	0
 14179     1EA8  1903               	skipnz
 14180     1EA9  2EAB               	goto	u3881
 14181     1EAA  2EAC               	goto	u3880
 14182     1EAB                     u3881:
 14183     1EAB  2EA4               	goto	l4205
 14184     1EAC                     u3880:
 14185     1EAC                     l4207:
 14186                           
 14187                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 14188     1EAC  0021               	movlb	1	; select bank1
 14189     1EAD  0822               	movf	putch@txData^(0+128),w
 14190     1EAE  00A0               	movwf	EUSART_Write@txData^(0+128)
 14191     1EAF  3190  2086  319E   	fcall	_EUSART_Write
 14192     1EB2                     l760:
 14193     1EB2  0008               	return
 14194     1EB3                     __end_of_putch:
 14195                           
 14196                           	psect	text27
 14197     1086                     __ptext27:	
 14198 ;; *************** function _EUSART_Write *****************
 14199 ;; Defined at:
 14200 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;  txData          1    0[BANK1 ] unsigned char 
 14203 ;; Auto vars:     Size  Location     Type
 14204 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 14205 ;; Return value:  Size  Location     Type
 14206 ;;                  1    wreg      void 
 14207 ;; Registers used:
 14208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14214 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14217 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14218 ;;Total ram usage:        2 bytes
 14219 ;; Hardware stack levels used: 1
 14220 ;; Hardware stack levels required when called: 5
 14221 ;; This function calls:
 14222 ;;		Nothing
 14223 ;; This function is called by:
 14224 ;;		_putch
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228     1086                     _EUSART_Write:	
 14229                           ;psect for function _EUSART_Write
 14230                           
 14231     1086                     l4187:	
 14232                           ;incstack = 0
 14233                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14234                           
 14235                           
 14236                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 14237     1086  0021               	movlb	1	; select bank1
 14238     1087  1A11               	btfsc	17,4	;volatile
 14239     1088  288A               	goto	u3861
 14240     1089  288B               	goto	u3860
 14241     108A                     u3861:
 14242     108A  288F               	goto	l4191
 14243     108B                     u3860:
 14244     108B                     l4189:
 14245                           
 14246                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 14247     108B  0820               	movf	EUSART_Write@txData^(0+128),w
 14248     108C  0023               	movlb	3	; select bank3
 14249     108D  009A               	movwf	26	;volatile
 14250                           
 14251                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 14252     108E  28AB               	goto	l739
 14253     108F                     l4191:
 14254     108F  0020               	movlb	0	; select bank0
 14255     1090  0868               	movf	_eusartTxBufferRemaining,w	;volatile
 14256     1091  1903               	btfsc	3,2
 14257     1092  2894               	goto	u3871
 14258     1093  2895               	goto	u3870
 14259     1094                     u3871:
 14260     1094  28AB               	goto	l739
 14261     1095                     u3870:
 14262     1095                     l4193:
 14263                           
 14264                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 14265     1095  086A               	movf	_eusartTxHead,w
 14266     1096  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14267     1097  0086               	movwf	6
 14268     1098  3001               	movlw	1	; select bank2/3
 14269     1099  0087               	movwf	7
 14270     109A  0021               	movlb	1	; select bank1
 14271     109B  0820               	movf	EUSART_Write@txData^(0+128),w
 14272     109C  0081               	movwf	1
 14273     109D                     l4195:
 14274                           
 14275                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 14276     109D  0020               	movlb	0	; select bank0
 14277     109E  086A               	movf	_eusartTxHead,w	;volatile
 14278     109F  3E01               	addlw	1
 14279     10A0  3907               	andlw	7
 14280     10A1  0021               	movlb	1	; select bank1
 14281     10A2  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 14282     10A3                     l4197:
 14283                           
 14284                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 14285     10A3  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 14286     10A4  0020               	movlb	0	; select bank0
 14287     10A5  00EA               	movwf	_eusartTxHead	;volatile
 14288     10A6                     l4199:
 14289                           
 14290                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 14291     10A6  0021               	movlb	1	; select bank1
 14292     10A7  1211               	bcf	17,4	;volatile
 14293     10A8                     l4201:
 14294                           
 14295                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 14296     10A8  3001               	movlw	1
 14297     10A9  0020               	movlb	0	; select bank0
 14298     10AA  02E8               	subwf	_eusartTxBufferRemaining,f	;volatile
 14299     10AB                     l739:	
 14300                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 14301                           
 14302                           
 14303                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 14304     10AB  0021               	movlb	1	; select bank1
 14305     10AC  1611               	bsf	17,4	;volatile
 14306     10AD                     l742:
 14307     10AD  0008               	return
 14308     10AE                     __end_of_EUSART_Write:
 14309                           
 14310                           	psect	text28
 14311     1D99                     __ptext28:	
 14312 ;; *************** function _EUSART_IsTxReady *****************
 14313 ;; Defined at:
 14314 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;		None
 14317 ;; Auto vars:     Size  Location     Type
 14318 ;;		None
 14319 ;; Return value:  Size  Location     Type
 14320 ;;                  1    wreg      _Bool 
 14321 ;; Registers used:
 14322 ;;		wreg, status,2, status,0
 14323 ;; Tracked objects:
 14324 ;;		On entry : 0/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14332 ;;Total ram usage:        0 bytes
 14333 ;; Hardware stack levels used: 1
 14334 ;; Hardware stack levels required when called: 5
 14335 ;; This function calls:
 14336 ;;		Nothing
 14337 ;; This function is called by:
 14338 ;;		_putch
 14339 ;; This function uses a non-reentrant model
 14340 ;;
 14341                           
 14342     1D99                     _EUSART_IsTxReady:	
 14343                           ;psect for function _EUSART_IsTxReady
 14344                           
 14345     1D99                     l4183:	
 14346                           ;incstack = 0
 14347                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 14348                           
 14349                           
 14350                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 14351     1D99  0020               	movlb	0	; select bank0
 14352     1D9A  0868               	movf	_eusartTxBufferRemaining,w	;volatile
 14353     1D9B  1D03               	btfss	3,2
 14354     1D9C  2D9E               	goto	u3841
 14355     1D9D  2DA0               	goto	u3840
 14356     1D9E                     u3841:
 14357     1D9E  3001               	movlw	1
 14358     1D9F  2DA1               	goto	u3850
 14359     1DA0                     u3840:
 14360     1DA0  3000               	movlw	0
 14361     1DA1                     u3850:
 14362     1DA1                     l715:
 14363     1DA1  0008               	return
 14364     1DA2                     __end_of_EUSART_IsTxReady:
 14365                           
 14366                           	psect	text29
 14367     1ED5                     __ptext29:	
 14368 ;; *************** function _abs *****************
 14369 ;; Defined at:
 14370 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 14371 ;; Parameters:    Size  Location     Type
 14372 ;;  a               2    6[BANK1 ] int 
 14373 ;; Auto vars:     Size  Location     Type
 14374 ;;		None
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  2    6[BANK1 ] int 
 14377 ;; Registers used:
 14378 ;;		wreg, status,2, status,0
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14384 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14387 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14388 ;;Total ram usage:        4 bytes
 14389 ;; Hardware stack levels used: 1
 14390 ;; Hardware stack levels required when called: 5
 14391 ;; This function calls:
 14392 ;;		Nothing
 14393 ;; This function is called by:
 14394 ;;		_dtoa
 14395 ;; This function uses a non-reentrant model
 14396 ;;
 14397                           
 14398     1ED5                     _abs:	
 14399                           ;psect for function _abs
 14400                           
 14401     1ED5                     l4409:	
 14402                           ;incstack = 0
 14403                           ; Regs used in _abs: [wreg+status,2+status,0]
 14404                           
 14405     1ED5  0021               	movlb	1	; select bank1
 14406     1ED6  1BA7               	btfsc	(abs@a+1)^(0+128),7
 14407     1ED7  2ED9               	goto	u4351
 14408     1ED8  2EDA               	goto	u4350
 14409     1ED9                     u4351:
 14410     1ED9  2EDB               	goto	l4413
 14411     1EDA                     u4350:
 14412     1EDA                     l4411:
 14413     1EDA  2EE6               	goto	l1795
 14414     1EDB                     l4413:
 14415     1EDB  0926               	comf	abs@a^(0+128),w
 14416     1EDC  00A8               	movwf	??_abs^(0+128)
 14417     1EDD  0927               	comf	(abs@a+1)^(0+128),w
 14418     1EDE  00A9               	movwf	(??_abs^(0+128)+1)
 14419     1EDF  0AA8               	incf	??_abs^(0+128),f
 14420     1EE0  1903               	skipnz
 14421     1EE1  0AA9               	incf	(??_abs^(0+128)+1),f
 14422     1EE2  0828               	movf	??_abs^(0+128),w
 14423     1EE3  00A6               	movwf	?_abs^(0+128)
 14424     1EE4  0829               	movf	(??_abs+1)^(0+128),w
 14425     1EE5  00A7               	movwf	(?_abs+1)^(0+128)
 14426     1EE6                     l1795:
 14427     1EE6  0008               	return
 14428     1EE7                     __end_of_abs:
 14429                           
 14430                           	psect	text30
 14431     1289                     __ptext30:	
 14432 ;; *************** function ___awmod *****************
 14433 ;; Defined at:
 14434 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 14435 ;; Parameters:    Size  Location     Type
 14436 ;;  divisor         2    0[BANK1 ] int 
 14437 ;;  dividend        2    2[BANK1 ] int 
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;  sign            1    5[BANK1 ] unsigned char 
 14440 ;;  counter         1    4[BANK1 ] unsigned char 
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  2    0[BANK1 ] int 
 14443 ;; Registers used:
 14444 ;;		wreg, status,2, status,0
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14450 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;Total ram usage:        6 bytes
 14455 ;; Hardware stack levels used: 1
 14456 ;; Hardware stack levels required when called: 5
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_dtoa
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464     1289                     ___awmod:	
 14465                           ;psect for function ___awmod
 14466                           
 14467     1289                     l4303:	
 14468                           ;incstack = 0
 14469                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14470                           
 14471     1289  0021               	movlb	1	; select bank1
 14472     128A  01A5               	clrf	___awmod@sign^(0+128)
 14473     128B                     l4305:
 14474     128B  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 14475     128C  2A8E               	goto	u4091
 14476     128D  2A8F               	goto	u4090
 14477     128E                     u4091:
 14478     128E  2A96               	goto	l4311
 14479     128F                     u4090:
 14480     128F                     l4307:
 14481     128F  09A2               	comf	___awmod@dividend^(0+128),f
 14482     1290  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14483     1291  0AA2               	incf	___awmod@dividend^(0+128),f
 14484     1292  1903               	skipnz
 14485     1293  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14486     1294                     l4309:
 14487     1294  3001               	movlw	1
 14488     1295  00A5               	movwf	___awmod@sign^(0+128)
 14489     1296                     l4311:
 14490     1296  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14491     1297  2A99               	goto	u4101
 14492     1298  2A9A               	goto	u4100
 14493     1299                     u4101:
 14494     1299  2A9F               	goto	l4315
 14495     129A                     u4100:
 14496     129A                     l4313:
 14497     129A  09A0               	comf	___awmod@divisor^(0+128),f
 14498     129B  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 14499     129C  0AA0               	incf	___awmod@divisor^(0+128),f
 14500     129D  1903               	skipnz
 14501     129E  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 14502     129F                     l4315:
 14503     129F  0820               	movf	___awmod@divisor^(0+128),w
 14504     12A0  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 14505     12A1  1903               	btfsc	3,2
 14506     12A2  2AA4               	goto	u4111
 14507     12A3  2AA5               	goto	u4110
 14508     12A4                     u4111:
 14509     12A4  2ACC               	goto	l4333
 14510     12A5                     u4110:
 14511     12A5                     l4317:
 14512     12A5  3001               	movlw	1
 14513     12A6  00A4               	movwf	___awmod@counter^(0+128)
 14514     12A7  2AAF               	goto	l4323
 14515     12A8                     l4319:
 14516     12A8  3001               	movlw	1
 14517     12A9                     u4125:
 14518     12A9  35A0               	lslf	___awmod@divisor^(0+128),f
 14519     12AA  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 14520     12AB  0B89               	decfsz	9,f
 14521     12AC  2AA9               	goto	u4125
 14522     12AD                     l4321:
 14523     12AD  3001               	movlw	1
 14524     12AE  07A4               	addwf	___awmod@counter^(0+128),f
 14525     12AF                     l4323:
 14526     12AF  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 14527     12B0  2AB2               	goto	u4131
 14528     12B1  2AB3               	goto	u4130
 14529     12B2                     u4131:
 14530     12B2  2AA8               	goto	l4319
 14531     12B3                     u4130:
 14532     12B3                     l4325:
 14533     12B3  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14534     12B4  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 14535     12B5  1D03               	skipz
 14536     12B6  2AB9               	goto	u4145
 14537     12B7  0820               	movf	___awmod@divisor^(0+128),w
 14538     12B8  0222               	subwf	___awmod@dividend^(0+128),w
 14539     12B9                     u4145:
 14540     12B9  1C03               	skipc
 14541     12BA  2ABC               	goto	u4141
 14542     12BB  2ABD               	goto	u4140
 14543     12BC                     u4141:
 14544     12BC  2AC1               	goto	l4329
 14545     12BD                     u4140:
 14546     12BD                     l4327:
 14547     12BD  0820               	movf	___awmod@divisor^(0+128),w
 14548     12BE  02A2               	subwf	___awmod@dividend^(0+128),f
 14549     12BF  0821               	movf	(___awmod@divisor+1)^(0+128),w
 14550     12C0  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 14551     12C1                     l4329:
 14552     12C1  3001               	movlw	1
 14553     12C2                     u4155:
 14554     12C2  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 14555     12C3  0CA0               	rrf	___awmod@divisor^(0+128),f
 14556     12C4  0B89               	decfsz	9,f
 14557     12C5  2AC2               	goto	u4155
 14558     12C6                     l4331:
 14559     12C6  3001               	movlw	1
 14560     12C7  02A4               	subwf	___awmod@counter^(0+128),f
 14561     12C8  1D03               	btfss	3,2
 14562     12C9  2ACB               	goto	u4161
 14563     12CA  2ACC               	goto	u4160
 14564     12CB                     u4161:
 14565     12CB  2AB3               	goto	l4325
 14566     12CC                     u4160:
 14567     12CC                     l4333:
 14568     12CC  0825               	movf	___awmod@sign^(0+128),w
 14569     12CD  1903               	btfsc	3,2
 14570     12CE  2AD0               	goto	u4171
 14571     12CF  2AD1               	goto	u4170
 14572     12D0                     u4171:
 14573     12D0  2AD6               	goto	l4337
 14574     12D1                     u4170:
 14575     12D1                     l4335:
 14576     12D1  09A2               	comf	___awmod@dividend^(0+128),f
 14577     12D2  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 14578     12D3  0AA2               	incf	___awmod@dividend^(0+128),f
 14579     12D4  1903               	skipnz
 14580     12D5  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 14581     12D6                     l4337:
 14582     12D6  0823               	movf	(___awmod@dividend+1)^(0+128),w
 14583     12D7  00A1               	movwf	(?___awmod+1)^(0+128)
 14584     12D8  0822               	movf	___awmod@dividend^(0+128),w
 14585     12D9  00A0               	movwf	?___awmod^(0+128)
 14586     12DA                     l1383:
 14587     12DA  0008               	return
 14588     12DB                     __end_of___awmod:
 14589                           
 14590                           	psect	text31
 14591     13DF                     __ptext31:	
 14592 ;; *************** function ___awdiv *****************
 14593 ;; Defined at:
 14594 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;  divisor         2    0[BANK1 ] int 
 14597 ;;  dividend        2    2[BANK1 ] int 
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  quotient        2    6[BANK1 ] int 
 14600 ;;  sign            1    5[BANK1 ] unsigned char 
 14601 ;;  counter         1    4[BANK1 ] unsigned char 
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  2    0[BANK1 ] int 
 14604 ;; Registers used:
 14605 ;;		wreg, status,2, status,0
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14611 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14612 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;Total ram usage:        8 bytes
 14616 ;; Hardware stack levels used: 1
 14617 ;; Hardware stack levels required when called: 5
 14618 ;; This function calls:
 14619 ;;		Nothing
 14620 ;; This function is called by:
 14621 ;;		_dtoa
 14622 ;; This function uses a non-reentrant model
 14623 ;;
 14624                           
 14625     13DF                     ___awdiv:	
 14626                           ;psect for function ___awdiv
 14627                           
 14628     13DF                     l4259:	
 14629                           ;incstack = 0
 14630                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14631                           
 14632     13DF  0021               	movlb	1	; select bank1
 14633     13E0  01A5               	clrf	___awdiv@sign^(0+128)
 14634     13E1                     l4261:
 14635     13E1  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14636     13E2  2BE4               	goto	u3991
 14637     13E3  2BE5               	goto	u3990
 14638     13E4                     u3991:
 14639     13E4  2BEC               	goto	l4267
 14640     13E5                     u3990:
 14641     13E5                     l4263:
 14642     13E5  09A0               	comf	___awdiv@divisor^(0+128),f
 14643     13E6  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 14644     13E7  0AA0               	incf	___awdiv@divisor^(0+128),f
 14645     13E8  1903               	skipnz
 14646     13E9  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 14647     13EA                     l4265:
 14648     13EA  3001               	movlw	1
 14649     13EB  00A5               	movwf	___awdiv@sign^(0+128)
 14650     13EC                     l4267:
 14651     13EC  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 14652     13ED  2BEF               	goto	u4001
 14653     13EE  2BF0               	goto	u4000
 14654     13EF                     u4001:
 14655     13EF  2BF7               	goto	l4273
 14656     13F0                     u4000:
 14657     13F0                     l4269:
 14658     13F0  09A2               	comf	___awdiv@dividend^(0+128),f
 14659     13F1  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 14660     13F2  0AA2               	incf	___awdiv@dividend^(0+128),f
 14661     13F3  1903               	skipnz
 14662     13F4  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 14663     13F5                     l4271:
 14664     13F5  3001               	movlw	1
 14665     13F6  06A5               	xorwf	___awdiv@sign^(0+128),f
 14666     13F7                     l4273:
 14667     13F7  01A6               	clrf	___awdiv@quotient^(0+128)
 14668     13F8  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 14669     13F9                     l4275:
 14670     13F9  0820               	movf	___awdiv@divisor^(0+128),w
 14671     13FA  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 14672     13FB  1903               	btfsc	3,2
 14673     13FC  2BFE               	goto	u4011
 14674     13FD  2BFF               	goto	u4010
 14675     13FE                     u4011:
 14676     13FE  2C2C               	goto	l4295
 14677     13FF                     u4010:
 14678     13FF                     l4277:
 14679     13FF  3001               	movlw	1
 14680     1400  00A4               	movwf	___awdiv@counter^(0+128)
 14681     1401  2C09               	goto	l4283
 14682     1402                     l4279:
 14683     1402  3001               	movlw	1
 14684     1403                     u4025:
 14685     1403  35A0               	lslf	___awdiv@divisor^(0+128),f
 14686     1404  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 14687     1405  0B89               	decfsz	9,f
 14688     1406  2C03               	goto	u4025
 14689     1407                     l4281:
 14690     1407  3001               	movlw	1
 14691     1408  07A4               	addwf	___awdiv@counter^(0+128),f
 14692     1409                     l4283:
 14693     1409  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 14694     140A  2C0C               	goto	u4031
 14695     140B  2C0D               	goto	u4030
 14696     140C                     u4031:
 14697     140C  2C02               	goto	l4279
 14698     140D                     u4030:
 14699     140D                     l4285:
 14700     140D  3001               	movlw	1
 14701     140E                     u4045:
 14702     140E  35A6               	lslf	___awdiv@quotient^(0+128),f
 14703     140F  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 14704     1410  0B89               	decfsz	9,f
 14705     1411  2C0E               	goto	u4045
 14706     1412  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14707     1413  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 14708     1414  1D03               	skipz
 14709     1415  2C18               	goto	u4055
 14710     1416  0820               	movf	___awdiv@divisor^(0+128),w
 14711     1417  0222               	subwf	___awdiv@dividend^(0+128),w
 14712     1418                     u4055:
 14713     1418  1C03               	skipc
 14714     1419  2C1B               	goto	u4051
 14715     141A  2C1C               	goto	u4050
 14716     141B                     u4051:
 14717     141B  2C21               	goto	l4291
 14718     141C                     u4050:
 14719     141C                     l4287:
 14720     141C  0820               	movf	___awdiv@divisor^(0+128),w
 14721     141D  02A2               	subwf	___awdiv@dividend^(0+128),f
 14722     141E  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 14723     141F  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 14724     1420                     l4289:
 14725     1420  1426               	bsf	___awdiv@quotient^(0+128),0
 14726     1421                     l4291:
 14727     1421  3001               	movlw	1
 14728     1422                     u4065:
 14729     1422  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 14730     1423  0CA0               	rrf	___awdiv@divisor^(0+128),f
 14731     1424  0B89               	decfsz	9,f
 14732     1425  2C22               	goto	u4065
 14733     1426                     l4293:
 14734     1426  3001               	movlw	1
 14735     1427  02A4               	subwf	___awdiv@counter^(0+128),f
 14736     1428  1D03               	btfss	3,2
 14737     1429  2C2B               	goto	u4071
 14738     142A  2C2C               	goto	u4070
 14739     142B                     u4071:
 14740     142B  2C0D               	goto	l4285
 14741     142C                     u4070:
 14742     142C                     l4295:
 14743     142C  0825               	movf	___awdiv@sign^(0+128),w
 14744     142D  1903               	btfsc	3,2
 14745     142E  2C30               	goto	u4081
 14746     142F  2C31               	goto	u4080
 14747     1430                     u4081:
 14748     1430  2C36               	goto	l4299
 14749     1431                     u4080:
 14750     1431                     l4297:
 14751     1431  09A6               	comf	___awdiv@quotient^(0+128),f
 14752     1432  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 14753     1433  0AA6               	incf	___awdiv@quotient^(0+128),f
 14754     1434  1903               	skipnz
 14755     1435  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 14756     1436                     l4299:
 14757     1436  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 14758     1437  00A1               	movwf	(?___awdiv+1)^(0+128)
 14759     1438  0826               	movf	___awdiv@quotient^(0+128),w
 14760     1439  00A0               	movwf	?___awdiv^(0+128)
 14761     143A                     l1370:
 14762     143A  0008               	return
 14763     143B                     __end_of___awdiv:
 14764                           
 14765                           	psect	text32
 14766     1E08                     __ptext32:	
 14767 ;; *************** function _initLedstrip *****************
 14768 ;; Defined at:
 14769 ;;		line 134 in file "ledstrip.c"
 14770 ;; Parameters:    Size  Location     Type
 14771 ;;		None
 14772 ;; Auto vars:     Size  Location     Type
 14773 ;;		None
 14774 ;; Return value:  Size  Location     Type
 14775 ;;                  1    wreg      void 
 14776 ;; Registers used:
 14777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14778 ;; Tracked objects:
 14779 ;;		On entry : 0/0
 14780 ;;		On exit  : 0/0
 14781 ;;		Unchanged: 0/0
 14782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14787 ;;Total ram usage:        0 bytes
 14788 ;; Hardware stack levels used: 1
 14789 ;; Hardware stack levels required when called: 7
 14790 ;; This function calls:
 14791 ;;		_SPI1_Open
 14792 ;;		_TMR6_PeriodMatchCallbackRegister
 14793 ;; This function is called by:
 14794 ;;		_main
 14795 ;; This function uses a non-reentrant model
 14796 ;;
 14797                           
 14798     1E08                     _initLedstrip:	
 14799                           ;psect for function _initLedstrip
 14800                           
 14801     1E08                     l6099:	
 14802                           ;incstack = 0
 14803                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14804                           
 14805                           
 14806                           ;ledstrip.c: 135:     SPI1_Open(HOST_CONFIG);
 14807     1E08  0021               	movlb	1	; select bank1
 14808     1E09  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 14809     1E0A  3195  2564  319E   	fcall	_SPI1_Open
 14810     1E0D                     l6101:
 14811                           
 14812                           ;ledstrip.c: 136:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 14813     1E0D  302B               	movlw	low _updateLedstripAnimation
 14814     1E0E  0021               	movlb	1	; select bank1
 14815     1E0F  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 14816     1E10  301D               	movlw	high _updateLedstripAnimation
 14817     1E11  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 14818     1E12  319D  2590  319E   	fcall	_TMR6_PeriodMatchCallbackRegister
 14819     1E15                     l1036:
 14820     1E15  0008               	return
 14821     1E16                     __end_of_initLedstrip:
 14822                           
 14823                           	psect	text33
 14824     1D90                     __ptext33:	
 14825 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 14826 ;; Defined at:
 14827 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 14828 ;; Parameters:    Size  Location     Type
 14829 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 14830 ;;		 -> updateLedstripAnimation(1), 
 14831 ;; Auto vars:     Size  Location     Type
 14832 ;;		None
 14833 ;; Return value:  Size  Location     Type
 14834 ;;                  1    wreg      void 
 14835 ;; Registers used:
 14836 ;;		wreg
 14837 ;; Tracked objects:
 14838 ;;		On entry : 0/0
 14839 ;;		On exit  : 0/0
 14840 ;;		Unchanged: 0/0
 14841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14842 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14845 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14846 ;;Total ram usage:        2 bytes
 14847 ;; Hardware stack levels used: 1
 14848 ;; Hardware stack levels required when called: 5
 14849 ;; This function calls:
 14850 ;;		Nothing
 14851 ;; This function is called by:
 14852 ;;		_initLedstrip
 14853 ;; This function uses a non-reentrant model
 14854 ;;
 14855                           
 14856     1D90                     _TMR6_PeriodMatchCallbackRegister:	
 14857                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 14858                           
 14859     1D90                     l5825:	
 14860                           ;incstack = 0
 14861                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 14862                           
 14863                           
 14864                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 14865     1D90  0021               	movlb	1	; select bank1
 14866     1D91  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 14867     1D92  0022               	movlb	2	; select bank2
 14868     1D93  00D5               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 14869     1D94  0021               	movlb	1	; select bank1
 14870     1D95  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 14871     1D96  0022               	movlb	2	; select bank2
 14872     1D97  00D4               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 14873     1D98                     l543:
 14874     1D98  0008               	return
 14875     1D99                     __end_of_TMR6_PeriodMatchCallbackRegister:
 14876                           
 14877                           	psect	text34
 14878     1564                     __ptext34:	
 14879 ;; *************** function _SPI1_Open *****************
 14880 ;; Defined at:
 14881 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;  returnValue     1    0        _Bool 
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  1    wreg      _Bool 
 14888 ;; Registers used:
 14889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14895 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14897 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14899 ;;Total ram usage:        3 bytes
 14900 ;; Hardware stack levels used: 1
 14901 ;; Hardware stack levels required when called: 6
 14902 ;; This function calls:
 14903 ;;		___wmul
 14904 ;; This function is called by:
 14905 ;;		_initLedstrip
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909     1564                     _SPI1_Open:	
 14910                           ;psect for function _SPI1_Open
 14911                           
 14912     1564                     l5693:	
 14913                           ;incstack = 0
 14914                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14915                           
 14916     1564                     l5695:
 14917                           
 14918                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 14919     1564  0024               	movlb	4	; select bank4
 14920     1565  1A95               	btfsc	21,5	;volatile
 14921     1566  2D68               	goto	u6921
 14922     1567  2D69               	goto	u6920
 14923     1568                     u6921:
 14924     1568  2DD3               	goto	l5703
 14925     1569                     u6920:
 14926     1569                     l5697:
 14927                           
 14928                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 14929     1569  0021               	movlb	1	; select bank1
 14930     156A  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14931     156B  00A7               	movwf	??_SPI1_Open^(0+128)
 14932     156C  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14933     156D  0827               	movf	??_SPI1_Open^(0+128),w
 14934     156E  00A0               	movwf	___wmul@multiplier^(0+128)
 14935     156F  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14936     1570  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14937     1571  3005               	movlw	5
 14938     1572  00A2               	movwf	___wmul@multiplicand^(0+128)
 14939     1573  3000               	movlw	0
 14940     1574  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14941     1575  319F  279E  3195   	fcall	___wmul
 14942     1578  30D2               	movlw	low _spi1_configuration
 14943     1579  0021               	movlb	1	; select bank1
 14944     157A  0720               	addwf	?___wmul^(0+128),w
 14945     157B  0084               	movwf	4
 14946     157C  3018               	movlw	high _spi1_configuration
 14947     157D  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14948     157E  3880               	iorlw	128
 14949     157F  0085               	movwf	5
 14950     1580  0800               	movf	0,w	;code access
 14951     1581  0024               	movlb	4	; select bank4
 14952     1582  0094               	movwf	20	;volatile
 14953                           
 14954                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 14955     1583  0021               	movlb	1	; select bank1
 14956     1584  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14957     1585  00A7               	movwf	??_SPI1_Open^(0+128)
 14958     1586  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14959     1587  0827               	movf	??_SPI1_Open^(0+128),w
 14960     1588  00A0               	movwf	___wmul@multiplier^(0+128)
 14961     1589  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14962     158A  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14963     158B  3005               	movlw	5
 14964     158C  00A2               	movwf	___wmul@multiplicand^(0+128)
 14965     158D  3000               	movlw	0
 14966     158E  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14967     158F  319F  279E  3195   	fcall	___wmul
 14968     1592  30D3               	movlw	low (_spi1_configuration+1)
 14969     1593  0021               	movlb	1	; select bank1
 14970     1594  0720               	addwf	?___wmul^(0+128),w
 14971     1595  0084               	movwf	4
 14972     1596  3018               	movlw	high (_spi1_configuration+1)
 14973     1597  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14974     1598  3880               	iorlw	128
 14975     1599  0085               	movwf	5
 14976     159A  0800               	movf	0,w	;code access
 14977     159B  0024               	movlb	4	; select bank4
 14978     159C  0095               	movwf	21	;volatile
 14979                           
 14980                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 14981     159D  0021               	movlb	1	; select bank1
 14982     159E  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14983     159F  00A7               	movwf	??_SPI1_Open^(0+128)
 14984     15A0  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14985     15A1  0827               	movf	??_SPI1_Open^(0+128),w
 14986     15A2  00A0               	movwf	___wmul@multiplier^(0+128)
 14987     15A3  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14988     15A4  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14989     15A5  3005               	movlw	5
 14990     15A6  00A2               	movwf	___wmul@multiplicand^(0+128)
 14991     15A7  3000               	movlw	0
 14992     15A8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14993     15A9  319F  279E  3195   	fcall	___wmul
 14994     15AC  30D4               	movlw	low (_spi1_configuration+2)
 14995     15AD  0021               	movlb	1	; select bank1
 14996     15AE  0720               	addwf	?___wmul^(0+128),w
 14997     15AF  0084               	movwf	4
 14998     15B0  3018               	movlw	high (_spi1_configuration+2)
 14999     15B1  3D21               	addwfc	(?___wmul+1)^(0+128),w
 15000     15B2  3880               	iorlw	128
 15001     15B3  0085               	movwf	5
 15002     15B4  0800               	movf	0,w	;code access
 15003     15B5  0024               	movlb	4	; select bank4
 15004     15B6  0097               	movwf	23	;volatile
 15005                           
 15006                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 15007     15B7  0021               	movlb	1	; select bank1
 15008     15B8  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 15009     15B9  00A7               	movwf	??_SPI1_Open^(0+128)
 15010     15BA  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 15011     15BB  0827               	movf	??_SPI1_Open^(0+128),w
 15012     15BC  00A0               	movwf	___wmul@multiplier^(0+128)
 15013     15BD  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 15014     15BE  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 15015     15BF  3005               	movlw	5
 15016     15C0  00A2               	movwf	___wmul@multiplicand^(0+128)
 15017     15C1  3000               	movlw	0
 15018     15C2  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 15019     15C3  319F  279E  3195   	fcall	___wmul
 15020     15C6  30D5               	movlw	low (_spi1_configuration+3)
 15021     15C7  0021               	movlb	1	; select bank1
 15022     15C8  0720               	addwf	?___wmul^(0+128),w
 15023     15C9  0084               	movwf	4
 15024     15CA  3018               	movlw	high (_spi1_configuration+3)
 15025     15CB  3D21               	addwfc	(?___wmul+1)^(0+128),w
 15026     15CC  3880               	iorlw	128
 15027     15CD  0085               	movwf	5
 15028     15CE  0800               	movf	0,w	;code access
 15029     15CF  0024               	movlb	4	; select bank4
 15030     15D0  0092               	movwf	18	;volatile
 15031     15D1                     l5699:
 15032                           
 15033                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 15034     15D1  1695               	bsf	21,5	;volatile
 15035     15D2                     l5701:
 15036                           
 15037                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 15038     15D2  2DD3               	goto	l141
 15039     15D3                     l5703:
 15040     15D3                     l141:
 15041     15D3  0008               	return
 15042     15D4                     __end_of_SPI1_Open:
 15043                           
 15044                           	psect	text35
 15045     0800                     __ptext35:	
 15046 ;; *************** function _initAdcMultiplexer *****************
 15047 ;; Defined at:
 15048 ;;		line 28 in file "adcMeasurements.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;		None
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;		None
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  1    wreg      void 
 15055 ;; Registers used:
 15056 ;;		wreg, status,2, status,0, pclath, cstack
 15057 ;; Tracked objects:
 15058 ;;		On entry : 0/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;Total ram usage:        0 bytes
 15067 ;; Hardware stack levels used: 1
 15068 ;; Hardware stack levels required when called: 6
 15069 ;; This function calls:
 15070 ;;		_ADC_SelectChannel
 15071 ;;		_ADC_SetInterruptHandler
 15072 ;; This function is called by:
 15073 ;;		_main
 15074 ;; This function uses a non-reentrant model
 15075 ;;
 15076                           
 15077     0800                     _initAdcMultiplexer:	
 15078                           ;psect for function _initAdcMultiplexer
 15079                           
 15080     0800                     l6097:	
 15081                           ;incstack = 0
 15082                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 15083                           
 15084                           
 15085                           ;adcMeasurements.c: 29:     ADC_SelectChannel(potentiometer);
 15086     0800  3010               	movlw	16
 15087     0801  319D  25EF  3188   	fcall	_ADC_SelectChannel
 15088                           
 15089                           ;adcMeasurements.c: 30:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 15090     0804  3075               	movlw	low _adcConversionDoneHandler
 15091     0805  0021               	movlb	1	; select bank1
 15092     0806  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 15093     0807  3011               	movlw	high _adcConversionDoneHandler
 15094     0808  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15095     0809  319D  2551  3188   	fcall	_ADC_SetInterruptHandler
 15096     080C                     l837:
 15097     080C  0008               	return
 15098     080D                     __end_of_initAdcMultiplexer:
 15099                           
 15100                           	psect	text36
 15101     1DEF                     __ptext36:	
 15102 ;; *************** function _ADC_SelectChannel *****************
 15103 ;; Defined at:
 15104 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 15105 ;; Parameters:    Size  Location     Type
 15106 ;;  channel         1    wreg     enum E6663
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;  channel         1    1[BANK1 ] enum E6663
 15109 ;; Return value:  Size  Location     Type
 15110 ;;                  1    wreg      void 
 15111 ;; Registers used:
 15112 ;;		wreg, status,2, status,0
 15113 ;; Tracked objects:
 15114 ;;		On entry : 0/0
 15115 ;;		On exit  : 0/0
 15116 ;;		Unchanged: 0/0
 15117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15119 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15120 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15121 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15122 ;;Total ram usage:        2 bytes
 15123 ;; Hardware stack levels used: 1
 15124 ;; Hardware stack levels required when called: 5
 15125 ;; This function calls:
 15126 ;;		Nothing
 15127 ;; This function is called by:
 15128 ;;		_initAdcMultiplexer
 15129 ;; This function uses a non-reentrant model
 15130 ;;
 15131                           
 15132     1DEF                     _ADC_SelectChannel:	
 15133                           ;psect for function _ADC_SelectChannel
 15134                           
 15135                           
 15136                           ;incstack = 0
 15137                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 15138                           ;ADC_SelectChannel@channel stored from wreg
 15139     1DEF  0021               	movlb	1	; select bank1
 15140     1DF0  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 15141     1DF1                     l5677:
 15142                           
 15143                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 15144     1DF1  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 15145     1DF2  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 15146     1DF3  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 15147     1DF4  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 15148     1DF5  081D               	movf	29,w	;volatile
 15149     1DF6  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 15150     1DF7  3903               	andlw	-253
 15151     1DF8  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 15152     1DF9  009D               	movwf	29	;volatile
 15153     1DFA                     l30:
 15154     1DFA  0008               	return
 15155     1DFB                     __end_of_ADC_SelectChannel:
 15156                           
 15157                           	psect	text37
 15158     15D4                     __ptext37:	
 15159 ;; *************** function _check_push_up *****************
 15160 ;; Defined at:
 15161 ;;		line 11 in file "PushUp.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;		None
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;		None
 15166 ;; Return value:  Size  Location     Type
 15167 ;;                  1    wreg      void 
 15168 ;; Registers used:
 15169 ;;		wreg, status,2, status,0, pclath, cstack
 15170 ;; Tracked objects:
 15171 ;;		On entry : 0/0
 15172 ;;		On exit  : 0/0
 15173 ;;		Unchanged: 0/0
 15174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15178 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;Total ram usage:        1 bytes
 15180 ;; Hardware stack levels used: 1
 15181 ;; Hardware stack levels required when called: 6
 15182 ;; This function calls:
 15183 ;;		_PWM_buzzer_LoadDutyValue
 15184 ;;		_getPomphoogte
 15185 ;;		_getSetpoint
 15186 ;;		_setSetpoint
 15187 ;; This function is called by:
 15188 ;;		_main
 15189 ;; This function uses a non-reentrant model
 15190 ;;
 15191                           
 15192     15D4                     _check_push_up:	
 15193                           ;psect for function _check_push_up
 15194                           
 15195     15D4                     l6125:	
 15196                           ;incstack = 0
 15197                           ; Regs used in _check_push_up: [wreg+status,2+status,0+pclath+cstack]
 15198                           
 15199                           
 15200                           ;PushUp.c: 12:     if (buzzing == 0){
 15201     15D4  0020               	movlb	0	; select bank0
 15202     15D5  0862               	movf	_buzzing,w
 15203     15D6  1D03               	btfss	3,2
 15204     15D7  2DD9               	goto	u7261
 15205     15D8  2DDA               	goto	u7260
 15206     15D9                     u7261:
 15207     15D9  2E39               	goto	l6147
 15208     15DA                     u7260:
 15209     15DA                     l6127:
 15210                           
 15211                           ;PushUp.c: 14:        if (getPomphoogte() >= 450) {
 15212     15DA  319D  253F  3195   	fcall	_getPomphoogte
 15213     15DD  3001               	movlw	1
 15214     15DE  0021               	movlb	1	; select bank1
 15215     15DF  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
 15216     15E0  30C2               	movlw	194
 15217     15E1  1903               	skipnz
 15218     15E2  0220               	subwf	?_getPomphoogte^(0+128),w
 15219     15E3  1C03               	skipc
 15220     15E4  2DE6               	goto	u7271
 15221     15E5  2DE7               	goto	u7270
 15222     15E6                     u7271:
 15223     15E6  2E31               	goto	l6145
 15224     15E7                     u7270:
 15225     15E7                     l6129:
 15226                           
 15227                           ;PushUp.c: 15:         PWM_buzzer_LoadDutyValue(400);
 15228     15E7  3090               	movlw	144
 15229     15E8  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
 15230     15E9  3001               	movlw	1
 15231     15EA  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue^(0+128)+1)
 15232     15EB  319F  2751  3195   	fcall	_PWM_buzzer_LoadDutyValue
 15233     15EE                     l6131:
 15234                           
 15235                           ;PushUp.c: 16:         buzzing = 1;
 15236     15EE  3001               	movlw	1
 15237     15EF  0020               	movlb	0	; select bank0
 15238     15F0  00E2               	movwf	_buzzing
 15239     15F1                     l6133:
 15240                           
 15241                           ;PushUp.c: 17:         counter += 1;
 15242     15F1  3001               	movlw	1
 15243     15F2  0022               	movlb	2	; select bank2
 15244     15F3  07C8               	addwf	_counter^(0+256),f
 15245     15F4  3000               	movlw	0
 15246     15F5  3DC9               	addwfc	(_counter+1)^(0+256),f
 15247     15F6                     l6135:
 15248                           
 15249                           ;PushUp.c: 18:         setSetpoint(getSetpoint() + increment_setpoint);
 15250     15F6  319D  257E  3195   	fcall	_getSetpoint
 15251     15F9  0020               	movlb	0	; select bank0
 15252     15FA  086B               	movf	_increment_setpoint,w
 15253     15FB  0021               	movlb	1	; select bank1
 15254     15FC  0720               	addwf	?_getSetpoint^(0+128),w
 15255     15FD  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
 15256     15FE  0020               	movlb	0	; select bank0
 15257     15FF  086C               	movf	_increment_setpoint+1,w
 15258     1600  0021               	movlb	1	; select bank1
 15259     1601  3D21               	addwfc	(?_getSetpoint+1)^(0+128),w
 15260     1602  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
 15261     1603  319D  2587  3195   	fcall	_setSetpoint
 15262                           
 15263                           ;PushUp.c: 19:         _delay((unsigned long)((20)*(32000000U/4000.0)));
 15264     1606  30D0               	movlw	208
 15265     1607  0021               	movlb	1	; select bank1
 15266     1608  00AF               	movwf	??_check_push_up^(0+128)
 15267     1609  30C9               	movlw	201
 15268     160A                     u7577:
 15269     160A  0B89               	decfsz	9,f
 15270     160B  2E0A               	goto	u7577
 15271     160C  0BAF               	decfsz	??_check_push_up^(0+128),f
 15272     160D  2E0A               	goto	u7577
 15273     160E  3200               	nop2
 15274     160F                     l6137:
 15275                           
 15276                           ;PushUp.c: 21:         if (getSetpoint() >= 850) {
 15277     160F  319D  257E  3195   	fcall	_getSetpoint
 15278     1612  3003               	movlw	3
 15279     1613  0021               	movlb	1	; select bank1
 15280     1614  0221               	subwf	(?_getSetpoint+1)^(0+128),w
 15281     1615  3052               	movlw	82
 15282     1616  1903               	skipnz
 15283     1617  0220               	subwf	?_getSetpoint^(0+128),w
 15284     1618  1C03               	skipc
 15285     1619  2E1B               	goto	u7281
 15286     161A  2E1C               	goto	u7280
 15287     161B                     u7281:
 15288     161B  2E23               	goto	l6141
 15289     161C                     u7280:
 15290     161C                     l6139:
 15291                           
 15292                           ;PushUp.c: 22:             increment_setpoint = -increment_setpoint;
 15293     161C  0020               	movlb	0	; select bank0
 15294     161D  09EB               	comf	_increment_setpoint,f
 15295     161E  09EC               	comf	_increment_setpoint+1,f
 15296     161F  0AEB               	incf	_increment_setpoint,f
 15297     1620  1903               	skipnz
 15298     1621  0AEC               	incf	_increment_setpoint+1,f
 15299                           
 15300                           ;PushUp.c: 23:         } else if (getSetpoint() <= 150) {
 15301     1622  2E31               	goto	l6145
 15302     1623                     l6141:
 15303     1623  319D  257E  3195   	fcall	_getSetpoint
 15304     1626  3000               	movlw	0
 15305     1627  0021               	movlb	1	; select bank1
 15306     1628  0221               	subwf	(?_getSetpoint+1)^(0+128),w
 15307     1629  3097               	movlw	151
 15308     162A  1903               	skipnz
 15309     162B  0220               	subwf	?_getSetpoint^(0+128),w
 15310     162C  1803               	skipnc
 15311     162D  2E2F               	goto	u7291
 15312     162E  2E30               	goto	u7290
 15313     162F                     u7291:
 15314     162F  2E31               	goto	l6145
 15315     1630                     u7290:
 15316     1630  2E1C               	goto	l6139
 15317     1631                     l6145:
 15318                           
 15319                           ;PushUp.c: 29:        PWM_buzzer_LoadDutyValue(0);
 15320     1631  3000               	movlw	0
 15321     1632  0021               	movlb	1	; select bank1
 15322     1633  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
 15323     1634  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128)
 15324     1635  319F  2751  3195   	fcall	_PWM_buzzer_LoadDutyValue
 15325                           
 15326                           ;PushUp.c: 30:     } else {
 15327     1638  2E48               	goto	l1062
 15328     1639                     l6147:
 15329                           
 15330                           ;PushUp.c: 31:         if (getPomphoogte() <= 350) {
 15331     1639  319D  253F  3195   	fcall	_getPomphoogte
 15332     163C  3001               	movlw	1
 15333     163D  0021               	movlb	1	; select bank1
 15334     163E  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
 15335     163F  305F               	movlw	95
 15336     1640  1903               	skipnz
 15337     1641  0220               	subwf	?_getPomphoogte^(0+128),w
 15338     1642  1803               	skipnc
 15339     1643  2E45               	goto	u7301
 15340     1644  2E46               	goto	u7300
 15341     1645                     u7301:
 15342     1645  2E48               	goto	l1062
 15343     1646                     u7300:
 15344     1646                     l6149:
 15345                           
 15346                           ;PushUp.c: 32:             buzzing = 0;
 15347     1646  0020               	movlb	0	; select bank0
 15348     1647  01E2               	clrf	_buzzing
 15349     1648                     l1062:
 15350     1648  0008               	return
 15351     1649                     __end_of_check_push_up:
 15352                           
 15353                           	psect	text38
 15354     1D87                     __ptext38:	
 15355 ;; *************** function _setSetpoint *****************
 15356 ;; Defined at:
 15357 ;;		line 44 in file "controller.c"
 15358 ;; Parameters:    Size  Location     Type
 15359 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;		None
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  1    wreg      void 
 15364 ;; Registers used:
 15365 ;;		wreg
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15371 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15375 ;;Total ram usage:        2 bytes
 15376 ;; Hardware stack levels used: 1
 15377 ;; Hardware stack levels required when called: 5
 15378 ;; This function calls:
 15379 ;;		Nothing
 15380 ;; This function is called by:
 15381 ;;		_uartHandler
 15382 ;;		_check_push_up
 15383 ;; This function uses a non-reentrant model
 15384 ;;
 15385                           
 15386     1D87                     _setSetpoint:	
 15387                           ;psect for function _setSetpoint
 15388                           
 15389     1D87                     l5969:	
 15390                           ;incstack = 0
 15391                           ; Regs used in _setSetpoint: [wreg]
 15392                           
 15393     1D87  0021               	movlb	1	; select bank1
 15394     1D88  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
 15395     1D89  0022               	movlb	2	; select bank2
 15396     1D8A  00E9               	movwf	(_setpoint+1)^(0+256)
 15397     1D8B  0021               	movlb	1	; select bank1
 15398     1D8C  082D               	movf	setSetpoint@new_setpoint^(0+128),w
 15399     1D8D  0022               	movlb	2	; select bank2
 15400     1D8E  00E8               	movwf	_setpoint^(0+256)
 15401     1D8F                     l965:
 15402     1D8F  0008               	return
 15403     1D90                     __end_of_setSetpoint:
 15404                           
 15405                           	psect	text39
 15406     1D7E                     __ptext39:	
 15407 ;; *************** function _getSetpoint *****************
 15408 ;; Defined at:
 15409 ;;		line 38 in file "controller.c"
 15410 ;; Parameters:    Size  Location     Type
 15411 ;;		None
 15412 ;; Auto vars:     Size  Location     Type
 15413 ;;		None
 15414 ;; Return value:  Size  Location     Type
 15415 ;;                  2    0[BANK1 ] unsigned short 
 15416 ;; Registers used:
 15417 ;;		wreg
 15418 ;; Tracked objects:
 15419 ;;		On entry : 0/0
 15420 ;;		On exit  : 0/0
 15421 ;;		Unchanged: 0/0
 15422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15423 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15426 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;Total ram usage:        2 bytes
 15428 ;; Hardware stack levels used: 1
 15429 ;; Hardware stack levels required when called: 5
 15430 ;; This function calls:
 15431 ;;		Nothing
 15432 ;; This function is called by:
 15433 ;;		_printLogs
 15434 ;;		_check_push_up
 15435 ;;		_position_led_strip
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439     1D7E                     _getSetpoint:	
 15440                           ;psect for function _getSetpoint
 15441                           
 15442     1D7E                     l5933:	
 15443                           ;incstack = 0
 15444                           ; Regs used in _getSetpoint: [wreg]
 15445                           
 15446     1D7E  0022               	movlb	2	; select bank2
 15447     1D7F  0869               	movf	(_setpoint+1)^(0+256),w
 15448     1D80  0021               	movlb	1	; select bank1
 15449     1D81  00A1               	movwf	(?_getSetpoint+1)^(0+128)
 15450     1D82  0022               	movlb	2	; select bank2
 15451     1D83  0868               	movf	_setpoint^(0+256),w
 15452     1D84  0021               	movlb	1	; select bank1
 15453     1D85  00A0               	movwf	?_getSetpoint^(0+128)
 15454     1D86                     l953:
 15455     1D86  0008               	return
 15456     1D87                     __end_of_getSetpoint:
 15457                           
 15458                           	psect	text40
 15459     1D3F                     __ptext40:	
 15460 ;; *************** function _getPomphoogte *****************
 15461 ;; Defined at:
 15462 ;;		line 41 in file "adcMeasurements.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;		None
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;		None
 15467 ;; Return value:  Size  Location     Type
 15468 ;;                  2    0[BANK1 ] unsigned short 
 15469 ;; Registers used:
 15470 ;;		wreg
 15471 ;; Tracked objects:
 15472 ;;		On entry : 0/0
 15473 ;;		On exit  : 0/0
 15474 ;;		Unchanged: 0/0
 15475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15476 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;Total ram usage:        2 bytes
 15481 ;; Hardware stack levels used: 1
 15482 ;; Hardware stack levels required when called: 5
 15483 ;; This function calls:
 15484 ;;		Nothing
 15485 ;; This function is called by:
 15486 ;;		_printLogs
 15487 ;;		_check_push_up
 15488 ;; This function uses a non-reentrant model
 15489 ;;
 15490                           
 15491     1D3F                     _getPomphoogte:	
 15492                           ;psect for function _getPomphoogte
 15493                           
 15494     1D3F                     l5853:	
 15495                           ;incstack = 0
 15496                           ; Regs used in _getPomphoogte: [wreg]
 15497                           
 15498                           
 15499                           ;adcMeasurements.c: 42:     return ADC_pomphoogte;
 15500     1D3F  0021               	movlb	1	; select bank1
 15501     1D40  086E               	movf	(_ADC_pomphoogte+1)^(0+128),w	;volatile
 15502     1D41  00A1               	movwf	(?_getPomphoogte+1)^(0+128)
 15503     1D42  086D               	movf	_ADC_pomphoogte^(0+128),w	;volatile
 15504     1D43  00A0               	movwf	?_getPomphoogte^(0+128)
 15505     1D44                     l846:
 15506     1D44  0008               	return
 15507     1D45                     __end_of_getPomphoogte:
 15508                           
 15509                           	psect	text41
 15510     1F51                     __ptext41:	
 15511 ;; *************** function _PWM_buzzer_LoadDutyValue *****************
 15512 ;; Defined at:
 15513 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm6.c"
 15514 ;; Parameters:    Size  Location     Type
 15515 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 15516 ;; Auto vars:     Size  Location     Type
 15517 ;;		None
 15518 ;; Return value:  Size  Location     Type
 15519 ;;                  1    wreg      void 
 15520 ;; Registers used:
 15521 ;;		wreg, status,2, status,0
 15522 ;; Tracked objects:
 15523 ;;		On entry : 0/0
 15524 ;;		On exit  : 0/0
 15525 ;;		Unchanged: 0/0
 15526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15527 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15531 ;;Total ram usage:        4 bytes
 15532 ;; Hardware stack levels used: 1
 15533 ;; Hardware stack levels required when called: 5
 15534 ;; This function calls:
 15535 ;;		Nothing
 15536 ;; This function is called by:
 15537 ;;		_check_push_up
 15538 ;; This function uses a non-reentrant model
 15539 ;;
 15540                           
 15541     1F51                     _PWM_buzzer_LoadDutyValue:	
 15542                           ;psect for function _PWM_buzzer_LoadDutyValue
 15543                           
 15544     1F51                     l5687:	
 15545                           ;incstack = 0
 15546                           ; Regs used in _PWM_buzzer_LoadDutyValue: [wreg+status,2+status,0]
 15547                           
 15548                           
 15549                           ;mcc_generated_files/pwm/src/pwm6.c: 63:  void PWM_buzzer_LoadDutyValue(uint16_t dutyVal
      +                          ue);mcc_generated_files/pwm/src/pwm6.c: 64:  {;mcc_generated_files/pwm/src/pwm6.c: 66:  
      +                              PWM6DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 15550     1F51  0021               	movlb	1	; select bank1
 15551     1F52  0821               	movf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128),w
 15552     1F53  00A3               	movwf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1)
 15553     1F54  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 15554     1F55  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 15555     1F56  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 15556     1F57  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 15557     1F58  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 15558     1F59  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 15559     1F5A  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 15560     1F5B  002C               	movlb	12	; select bank12
 15561     1F5C  009B               	movwf	27	;volatile
 15562                           
 15563                           ;mcc_generated_files/pwm/src/pwm6.c: 69:      PWM6DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 15564     1F5D  0021               	movlb	1	; select bank1
 15565     1F5E  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 15566     1F5F  3903               	andlw	3
 15567     1F60  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 15568     1F61  3006               	movlw	6
 15569     1F62                     u6915:
 15570     1F62  35A2               	lslf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 15571     1F63  0B89               	decfsz	9,f
 15572     1F64  2F62               	goto	u6915
 15573     1F65  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 15574     1F66  002C               	movlb	12	; select bank12
 15575     1F67  009A               	movwf	26	;volatile
 15576     1F68                     l86:
 15577     1F68  0008               	return
 15578     1F69                     __end_of_PWM_buzzer_LoadDutyValue:
 15579                           
 15580                           	psect	text42
 15581     1EE7                     __ptext42:	
 15582 ;; *************** function _TMR6_Tasks *****************
 15583 ;; Defined at:
 15584 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 15585 ;; Parameters:    Size  Location     Type
 15586 ;;		None
 15587 ;; Auto vars:     Size  Location     Type
 15588 ;;		None
 15589 ;; Return value:  Size  Location     Type
 15590 ;;                  1    wreg      void 
 15591 ;; Registers used:
 15592 ;;		wreg, status,2, status,0, pclath, cstack
 15593 ;; Tracked objects:
 15594 ;;		On entry : 0/0
 15595 ;;		On exit  : 0/0
 15596 ;;		Unchanged: 0/0
 15597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;Total ram usage:        0 bytes
 15603 ;; Hardware stack levels used: 1
 15604 ;; Hardware stack levels required when called: 9
 15605 ;; This function calls:
 15606 ;;		NULL
 15607 ;;		_TMR6_DefaultPeriodMatchCallback
 15608 ;;		_updateLedstripAnimation
 15609 ;; This function is called by:
 15610 ;;		_main
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614     1EE7                     _TMR6_Tasks:	
 15615                           ;psect for function _TMR6_Tasks
 15616                           
 15617     1EE7                     l6043:	
 15618                           ;incstack = 0
 15619                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 15620                           
 15621                           
 15622                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 15623     1EE7  0020               	movlb	0	; select bank0
 15624     1EE8  1F92               	btfss	18,7	;volatile
 15625     1EE9  2EEB               	goto	u7161
 15626     1EEA  2EEC               	goto	u7160
 15627     1EEB                     u7161:
 15628     1EEB  2EFA               	goto	l557
 15629     1EEC                     u7160:
 15630     1EEC                     l6045:
 15631                           
 15632                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 15633     1EEC  0022               	movlb	2	; select bank2
 15634     1EED  0854               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 15635     1EEE  0455               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 15636     1EEF  1903               	btfsc	3,2
 15637     1EF0  2EF2               	goto	u7171
 15638     1EF1  2EF3               	goto	u7170
 15639     1EF2                     u7171:
 15640     1EF2  2EF8               	goto	l6049
 15641     1EF3                     u7170:
 15642     1EF3                     l6047:
 15643                           
 15644                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 15645     1EF3  0855               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 15646     1EF4  008A               	movwf	10
 15647     1EF5  0854               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 15648     1EF6  000A               	callw
 15649     1EF7  319E               	pagesel	$
 15650     1EF8                     l6049:
 15651                           
 15652                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 15653     1EF8  0020               	movlb	0	; select bank0
 15654     1EF9  1392               	bcf	18,7	;volatile
 15655     1EFA                     l557:
 15656     1EFA  0008               	return
 15657     1EFB                     __end_of_TMR6_Tasks:
 15658                           
 15659                           	psect	text43
 15660     07FF                     __ptext43:	
 15661 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 15662 ;; Defined at:
 15663 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;		None
 15666 ;; Auto vars:     Size  Location     Type
 15667 ;;		None
 15668 ;; Return value:  Size  Location     Type
 15669 ;;                  1    wreg      void 
 15670 ;; Registers used:
 15671 ;;		None
 15672 ;; Tracked objects:
 15673 ;;		On entry : 0/0
 15674 ;;		On exit  : 0/0
 15675 ;;		Unchanged: 0/0
 15676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;Total ram usage:        0 bytes
 15682 ;; Hardware stack levels used: 1
 15683 ;; Hardware stack levels required when called: 5
 15684 ;; This function calls:
 15685 ;;		Nothing
 15686 ;; This function is called by:
 15687 ;;		_TMR6_Initialize
 15688 ;;		_TMR6_Tasks
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692     07FF                     _TMR6_DefaultPeriodMatchCallback:	
 15693                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 15694                           
 15695     07FF                     l546:	
 15696                           ;incstack = 0
 15697                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 15698                           
 15699     07FF  0008               	return
 15700     0800                     __end_of_TMR6_DefaultPeriodMatchCallback:
 15701                           
 15702                           	psect	text44
 15703     1D2B                     __ptext44:	
 15704 ;; *************** function _updateLedstripAnimation *****************
 15705 ;; Defined at:
 15706 ;;		line 130 in file "ledstrip.c"
 15707 ;; Parameters:    Size  Location     Type
 15708 ;;		None
 15709 ;; Auto vars:     Size  Location     Type
 15710 ;;		None
 15711 ;; Return value:  Size  Location     Type
 15712 ;;                  1    wreg      void 
 15713 ;; Registers used:
 15714 ;;		wreg, status,2, status,0, pclath, cstack
 15715 ;; Tracked objects:
 15716 ;;		On entry : 0/0
 15717 ;;		On exit  : 0/0
 15718 ;;		Unchanged: 0/0
 15719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;Total ram usage:        0 bytes
 15725 ;; Hardware stack levels used: 1
 15726 ;; Hardware stack levels required when called: 8
 15727 ;; This function calls:
 15728 ;;		_counter_led
 15729 ;; This function is called by:
 15730 ;;		_initLedstrip
 15731 ;;		_TMR6_Tasks
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735     1D2B                     _updateLedstripAnimation:	
 15736                           ;psect for function _updateLedstripAnimation
 15737                           
 15738     1D2B                     l6003:	
 15739                           ;incstack = 0
 15740                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 15741                           
 15742                           
 15743                           ;ledstrip.c: 131:     counter_led();
 15744     1D2B  3193  2330  319D   	fcall	_counter_led
 15745     1D2E                     l1033:
 15746     1D2E  0008               	return
 15747     1D2F                     __end_of_updateLedstripAnimation:
 15748                           
 15749                           	psect	text45
 15750     1330                     __ptext45:	
 15751 ;; *************** function _counter_led *****************
 15752 ;; Defined at:
 15753 ;;		line 112 in file "ledstrip.c"
 15754 ;; Parameters:    Size  Location     Type
 15755 ;;		None
 15756 ;; Auto vars:     Size  Location     Type
 15757 ;;  led             1   12[BANK1 ] unsigned char 
 15758 ;;  counter         2   10[BANK1 ] unsigned short 
 15759 ;;  loops           2    8[BANK1 ] unsigned short 
 15760 ;; Return value:  Size  Location     Type
 15761 ;;                  1    wreg      void 
 15762 ;; Registers used:
 15763 ;;		wreg, status,2, status,0, pclath, cstack
 15764 ;; Tracked objects:
 15765 ;;		On entry : 0/0
 15766 ;;		On exit  : 0/0
 15767 ;;		Unchanged: 0/0
 15768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15770 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15771 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15772 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15773 ;;Total ram usage:        6 bytes
 15774 ;; Hardware stack levels used: 1
 15775 ;; Hardware stack levels required when called: 7
 15776 ;; This function calls:
 15777 ;;		___lwdiv
 15778 ;;		___wmul
 15779 ;;		_getCounter
 15780 ;;		_sendLedstripEndFrame
 15781 ;;		_sendLedstripFrame
 15782 ;;		_sendLedstripStartFrame
 15783 ;; This function is called by:
 15784 ;;		_updateLedstripAnimation
 15785 ;; This function uses a non-reentrant model
 15786 ;;
 15787                           
 15788     1330                     _counter_led:	
 15789                           ;psect for function _counter_led
 15790                           
 15791     1330                     l4707:	
 15792                           ;incstack = 0
 15793                           ; Regs used in _counter_led: [wreg+status,2+status,0+pclath+cstack]
 15794                           
 15795                           
 15796                           ;ledstrip.c: 113:     uint16_t counter = getCounter();
 15797     1330  319D  2575  3193   	fcall	_getCounter
 15798     1333  0021               	movlb	1	; select bank1
 15799     1334  0821               	movf	(?_getCounter+1)^(0+128),w
 15800     1335  00AB               	movwf	(counter_led@counter+1)^(0+128)
 15801     1336  0820               	movf	?_getCounter^(0+128),w
 15802     1337  00AA               	movwf	counter_led@counter^(0+128)
 15803     1338                     l4709:
 15804                           
 15805                           ;ledstrip.c: 114:     uint16_t loops = counter / 60;
 15806     1338  303C               	movlw	60
 15807     1339  00A0               	movwf	___lwdiv@divisor^(0+128)
 15808     133A  3000               	movlw	0
 15809     133B  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 15810     133C  082B               	movf	(counter_led@counter+1)^(0+128),w
 15811     133D  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 15812     133E  082A               	movf	counter_led@counter^(0+128),w
 15813     133F  00A2               	movwf	___lwdiv@dividend^(0+128)
 15814     1340  3191  213A  3193   	fcall	___lwdiv
 15815     1343  0021               	movlb	1	; select bank1
 15816     1344  0821               	movf	(?___lwdiv+1)^(0+128),w
 15817     1345  00A9               	movwf	(counter_led@loops+1)^(0+128)
 15818     1346  0820               	movf	?___lwdiv^(0+128),w
 15819     1347  00A8               	movwf	counter_led@loops^(0+128)
 15820     1348                     l4711:
 15821                           
 15822                           ;ledstrip.c: 115:     counter -= 60 * (loops);
 15823     1348  0829               	movf	(counter_led@loops+1)^(0+128),w
 15824     1349  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 15825     134A  0828               	movf	counter_led@loops^(0+128),w
 15826     134B  00A0               	movwf	___wmul@multiplier^(0+128)
 15827     134C  303C               	movlw	60
 15828     134D  00A2               	movwf	___wmul@multiplicand^(0+128)
 15829     134E  3000               	movlw	0
 15830     134F  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 15831     1350  319F  279E  3193   	fcall	___wmul
 15832     1353  0021               	movlb	1	; select bank1
 15833     1354  0820               	movf	?___wmul^(0+128),w
 15834     1355  02AA               	subwf	counter_led@counter^(0+128),f
 15835     1356  0821               	movf	(?___wmul+1)^(0+128),w
 15836     1357  3BAB               	subwfb	(counter_led@counter+1)^(0+128),f
 15837     1358                     l4713:
 15838                           
 15839                           ;ledstrip.c: 117:     sendLedstripStartFrame();
 15840     1358  319F  2710  3193   	fcall	_sendLedstripStartFrame
 15841     135B                     l4715:
 15842                           
 15843                           ;ledstrip.c: 118:     for (uint8_t led = 0; led < 60; led++) {
 15844     135B  0021               	movlb	1	; select bank1
 15845     135C  01AC               	clrf	counter_led@led^(0+128)
 15846     135D                     l4721:
 15847                           
 15848                           ;ledstrip.c: 119:         if (led < counter) {
 15849     135D  082C               	movf	counter_led@led^(0+128),w
 15850     135E  00A7               	movwf	??_counter_led^(0+128)
 15851     135F  082B               	movf	(counter_led@counter+1)^(0+128),w
 15852     1360  1D03               	skipz
 15853     1361  2B64               	goto	u4755
 15854     1362  082A               	movf	counter_led@counter^(0+128),w
 15855     1363  0227               	subwf	??_counter_led^(0+128),w
 15856     1364                     u4755:
 15857     1364  1803               	skipnc
 15858     1365  2B67               	goto	u4751
 15859     1366  2B68               	goto	u4750
 15860     1367                     u4751:
 15861     1367  2B71               	goto	l4725
 15862     1368                     u4750:
 15863     1368                     l4723:
 15864                           
 15865                           ;ledstrip.c: 120:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 15866     1368  01A1               	clrf	sendLedstripFrame@green^(0+128)
 15867     1369  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 15868     136A  3005               	movlw	5
 15869     136B  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 15870     136C  30FF               	movlw	255
 15871     136D  3190  2000  3193   	fcall	_sendLedstripFrame
 15872                           
 15873                           ;ledstrip.c: 121:         } else {
 15874     1370  2B79               	goto	l4727
 15875     1371                     l4725:
 15876                           
 15877                           ;ledstrip.c: 122:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 15878     1371  01A1               	clrf	sendLedstripFrame@green^(0+128)
 15879     1372  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 15880     1373  3005               	movlw	5
 15881     1374  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 15882     1375  3000               	movlw	0
 15883     1376  3190  2000  3193   	fcall	_sendLedstripFrame
 15884     1379                     l4727:
 15885                           
 15886                           ;ledstrip.c: 124:     }
 15887     1379  3001               	movlw	1
 15888     137A  0021               	movlb	1	; select bank1
 15889     137B  07AC               	addwf	counter_led@led^(0+128),f
 15890     137C                     l4729:
 15891     137C  303C               	movlw	60
 15892     137D  022C               	subwf	counter_led@led^(0+128),w
 15893     137E  1C03               	skipc
 15894     137F  2B81               	goto	u4761
 15895     1380  2B82               	goto	u4760
 15896     1381                     u4761:
 15897     1381  2B5D               	goto	l4721
 15898     1382                     u4760:
 15899     1382                     l4731:
 15900                           
 15901                           ;ledstrip.c: 126:     sendLedstripEndFrame();
 15902     1382  319F  2769  3193   	fcall	_sendLedstripEndFrame
 15903     1385                     l1030:
 15904     1385  0008               	return
 15905     1386                     __end_of_counter_led:
 15906                           
 15907                           	psect	text46
 15908     1F10                     __ptext46:	
 15909 ;; *************** function _sendLedstripStartFrame *****************
 15910 ;; Defined at:
 15911 ;;		line 7 in file "ledstrip.c"
 15912 ;; Parameters:    Size  Location     Type
 15913 ;;		None
 15914 ;; Auto vars:     Size  Location     Type
 15915 ;;		None
 15916 ;; Return value:  Size  Location     Type
 15917 ;;                  1    wreg      void 
 15918 ;; Registers used:
 15919 ;;		wreg, status,2, status,0, pclath, cstack
 15920 ;; Tracked objects:
 15921 ;;		On entry : 0/0
 15922 ;;		On exit  : 0/0
 15923 ;;		Unchanged: 0/0
 15924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;Total ram usage:        0 bytes
 15930 ;; Hardware stack levels used: 1
 15931 ;; Hardware stack levels required when called: 6
 15932 ;; This function calls:
 15933 ;;		_SPI1_ByteExchange
 15934 ;; This function is called by:
 15935 ;;		_counter_led
 15936 ;;		_dutycycle_led_strip
 15937 ;;		_position_led_strip
 15938 ;; This function uses a non-reentrant model
 15939 ;;
 15940                           
 15941     1F10                     _sendLedstripStartFrame:	
 15942                           ;psect for function _sendLedstripStartFrame
 15943                           
 15944     1F10                     l4609:	
 15945                           ;incstack = 0
 15946                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 15947                           
 15948                           
 15949                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 15950     1F10  0021               	movlb	1	; select bank1
 15951     1F11  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15952     1F12  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 15953                           
 15954                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 15955     1F15  0021               	movlb	1	; select bank1
 15956     1F16  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15957     1F17  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 15958                           
 15959                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 15960     1F1A  0021               	movlb	1	; select bank1
 15961     1F1B  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15962     1F1C  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 15963                           
 15964                           ;ledstrip.c: 12:     SPI1_ByteExchange(0x00);
 15965     1F1F  0021               	movlb	1	; select bank1
 15966     1F20  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15967     1F21  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 15968     1F24                     l991:
 15969     1F24  0008               	return
 15970     1F25                     __end_of_sendLedstripStartFrame:
 15971                           
 15972                           	psect	text47
 15973     1000                     __ptext47:	
 15974 ;; *************** function _sendLedstripFrame *****************
 15975 ;; Defined at:
 15976 ;;		line 23 in file "ledstrip.c"
 15977 ;; Parameters:    Size  Location     Type
 15978 ;;  red             1    wreg     unsigned char 
 15979 ;;  green           1    1[BANK1 ] unsigned char 
 15980 ;;  blue            1    2[BANK1 ] unsigned char 
 15981 ;;  intensity       1    3[BANK1 ] unsigned char 
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;  red             1    4[BANK1 ] unsigned char 
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      void 
 15986 ;; Registers used:
 15987 ;;		wreg, status,2, status,0, pclath, cstack
 15988 ;; Tracked objects:
 15989 ;;		On entry : 0/0
 15990 ;;		On exit  : 0/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15993 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15994 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15996 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15997 ;;Total ram usage:        4 bytes
 15998 ;; Hardware stack levels used: 1
 15999 ;; Hardware stack levels required when called: 6
 16000 ;; This function calls:
 16001 ;;		_SPI1_ByteExchange
 16002 ;; This function is called by:
 16003 ;;		_counter_led
 16004 ;;		_dutycycle_led_strip
 16005 ;;		_position_led_strip
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009     1000                     _sendLedstripFrame:	
 16010                           ;psect for function _sendLedstripFrame
 16011                           
 16012                           
 16013                           ;incstack = 0
 16014                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 16015                           ;sendLedstripFrame@red stored from wreg
 16016     1000  0021               	movlb	1	; select bank1
 16017     1001  00A4               	movwf	sendLedstripFrame@red^(0+128)
 16018     1002                     l4613:
 16019                           
 16020                           ;ledstrip.c: 24:     SPI1_ByteExchange(0xE0 | intensity);
 16021     1002  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 16022     1003  38E0               	iorlw	224
 16023     1004  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16024     1005  319D  25FB  3190   	fcall	_SPI1_ByteExchange
 16025                           
 16026                           ;ledstrip.c: 26:     SPI1_ByteExchange(blue);
 16027     1008  0021               	movlb	1	; select bank1
 16028     1009  0822               	movf	sendLedstripFrame@blue^(0+128),w
 16029     100A  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16030     100B  319D  25FB  3190   	fcall	_SPI1_ByteExchange
 16031                           
 16032                           ;ledstrip.c: 27:     SPI1_ByteExchange(green);
 16033     100E  0021               	movlb	1	; select bank1
 16034     100F  0821               	movf	sendLedstripFrame@green^(0+128),w
 16035     1010  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16036     1011  319D  25FB  3190   	fcall	_SPI1_ByteExchange
 16037                           
 16038                           ;ledstrip.c: 28:     SPI1_ByteExchange(red);
 16039     1014  0021               	movlb	1	; select bank1
 16040     1015  0824               	movf	sendLedstripFrame@red^(0+128),w
 16041     1016  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16042     1017  319D  25FB  3190   	fcall	_SPI1_ByteExchange
 16043     101A                     l997:
 16044     101A  0008               	return
 16045     101B                     __end_of_sendLedstripFrame:
 16046                           
 16047                           	psect	text48
 16048     1F69                     __ptext48:	
 16049 ;; *************** function _sendLedstripEndFrame *****************
 16050 ;; Defined at:
 16051 ;;		line 15 in file "ledstrip.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;		None
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;		None
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  1    wreg      void 
 16058 ;; Registers used:
 16059 ;;		wreg, status,2, status,0, pclath, cstack
 16060 ;; Tracked objects:
 16061 ;;		On entry : 0/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;Total ram usage:        0 bytes
 16070 ;; Hardware stack levels used: 1
 16071 ;; Hardware stack levels required when called: 6
 16072 ;; This function calls:
 16073 ;;		_SPI1_ByteExchange
 16074 ;; This function is called by:
 16075 ;;		_counter_led
 16076 ;;		_dutycycle_led_strip
 16077 ;;		_position_led_strip
 16078 ;; This function uses a non-reentrant model
 16079 ;;
 16080                           
 16081     1F69                     _sendLedstripEndFrame:	
 16082                           ;psect for function _sendLedstripEndFrame
 16083                           
 16084     1F69                     l4611:	
 16085                           ;incstack = 0
 16086                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 16087                           
 16088                           
 16089                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 16090     1F69  30FF               	movlw	255
 16091     1F6A  0021               	movlb	1	; select bank1
 16092     1F6B  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16093     1F6C  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 16094                           
 16095                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 16096     1F6F  30FF               	movlw	255
 16097     1F70  0021               	movlb	1	; select bank1
 16098     1F71  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16099     1F72  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 16100                           
 16101                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 16102     1F75  30FF               	movlw	255
 16103     1F76  0021               	movlb	1	; select bank1
 16104     1F77  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16105     1F78  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 16106                           
 16107                           ;ledstrip.c: 20:     SPI1_ByteExchange(0xFF);
 16108     1F7B  30FF               	movlw	255
 16109     1F7C  0021               	movlb	1	; select bank1
 16110     1F7D  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 16111     1F7E  319D  25FB  319F   	fcall	_SPI1_ByteExchange
 16112     1F81                     l994:
 16113     1F81  0008               	return
 16114     1F82                     __end_of_sendLedstripEndFrame:
 16115                           
 16116                           	psect	text49
 16117     1DFB                     __ptext49:	
 16118 ;; *************** function _SPI1_ByteExchange *****************
 16119 ;; Defined at:
 16120 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 16121 ;; Parameters:    Size  Location     Type
 16122 ;;  byteData        1    0[BANK1 ] unsigned char 
 16123 ;; Auto vars:     Size  Location     Type
 16124 ;;		None
 16125 ;; Return value:  Size  Location     Type
 16126 ;;                  1    wreg      unsigned char 
 16127 ;; Registers used:
 16128 ;;		wreg
 16129 ;; Tracked objects:
 16130 ;;		On entry : 0/0
 16131 ;;		On exit  : 0/0
 16132 ;;		Unchanged: 0/0
 16133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16134 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16137 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16138 ;;Total ram usage:        1 bytes
 16139 ;; Hardware stack levels used: 1
 16140 ;; Hardware stack levels required when called: 5
 16141 ;; This function calls:
 16142 ;;		Nothing
 16143 ;; This function is called by:
 16144 ;;		_sendLedstripStartFrame
 16145 ;;		_sendLedstripEndFrame
 16146 ;;		_sendLedstripFrame
 16147 ;; This function uses a non-reentrant model
 16148 ;;
 16149                           
 16150     1DFB                     _SPI1_ByteExchange:	
 16151                           ;psect for function _SPI1_ByteExchange
 16152                           
 16153     1DFB                     l4511:	
 16154                           ;incstack = 0
 16155                           ; Regs used in _SPI1_ByteExchange: [wreg]
 16156                           
 16157                           
 16158                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 16159     1DFB  0021               	movlb	1	; select bank1
 16160     1DFC  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 16161     1DFD  0024               	movlb	4	; select bank4
 16162     1DFE  0091               	movwf	17	;volatile
 16163     1DFF                     l174:	
 16164                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 16165                           
 16166                           
 16167                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 16168     1DFF  0020               	movlb	0	; select bank0
 16169     1E00  1D91               	btfss	17,3	;volatile
 16170     1E01  2E03               	goto	u4531
 16171     1E02  2E04               	goto	u4530
 16172     1E03                     u4531:
 16173     1E03  2DFF               	goto	l174
 16174     1E04                     u4530:
 16175     1E04                     l176:
 16176                           
 16177                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 16178     1E04  1191               	bcf	17,3	;volatile
 16179     1E05                     l4513:
 16180                           
 16181                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 16182     1E05  0024               	movlb	4	; select bank4
 16183     1E06  0811               	movf	17,w	;volatile
 16184     1E07                     l177:
 16185     1E07  0008               	return
 16186     1E08                     __end_of_SPI1_ByteExchange:
 16187                           
 16188                           	psect	text50
 16189     1D75                     __ptext50:	
 16190 ;; *************** function _getCounter *****************
 16191 ;; Defined at:
 16192 ;;		line 38 in file "PushUp.c"
 16193 ;; Parameters:    Size  Location     Type
 16194 ;;		None
 16195 ;; Auto vars:     Size  Location     Type
 16196 ;;		None
 16197 ;; Return value:  Size  Location     Type
 16198 ;;                  2    0[BANK1 ] unsigned short 
 16199 ;; Registers used:
 16200 ;;		wreg
 16201 ;; Tracked objects:
 16202 ;;		On entry : 0/0
 16203 ;;		On exit  : 0/0
 16204 ;;		Unchanged: 0/0
 16205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16206 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16209 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16210 ;;Total ram usage:        2 bytes
 16211 ;; Hardware stack levels used: 1
 16212 ;; Hardware stack levels required when called: 5
 16213 ;; This function calls:
 16214 ;;		Nothing
 16215 ;; This function is called by:
 16216 ;;		_printLogs
 16217 ;;		_counter_led
 16218 ;; This function uses a non-reentrant model
 16219 ;;
 16220                           
 16221     1D75                     _getCounter:	
 16222                           ;psect for function _getCounter
 16223                           
 16224     1D75                     l4605:	
 16225                           ;incstack = 0
 16226                           ; Regs used in _getCounter: [wreg]
 16227                           
 16228     1D75  0022               	movlb	2	; select bank2
 16229     1D76  0849               	movf	(_counter+1)^(0+256),w
 16230     1D77  0021               	movlb	1	; select bank1
 16231     1D78  00A1               	movwf	(?_getCounter+1)^(0+128)
 16232     1D79  0022               	movlb	2	; select bank2
 16233     1D7A  0848               	movf	_counter^(0+256),w
 16234     1D7B  0021               	movlb	1	; select bank1
 16235     1D7C  00A0               	movwf	?_getCounter^(0+128)
 16236     1D7D                     l1065:
 16237     1D7D  0008               	return
 16238     1D7E                     __end_of_getCounter:
 16239                           
 16240                           	psect	text51
 16241     1F9E                     __ptext51:	
 16242 ;; *************** function ___wmul *****************
 16243 ;; Defined at:
 16244 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 16245 ;; Parameters:    Size  Location     Type
 16246 ;;  multiplier      2    0[BANK1 ] unsigned int 
 16247 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 16248 ;; Auto vars:     Size  Location     Type
 16249 ;;  product         2    4[BANK1 ] unsigned int 
 16250 ;; Return value:  Size  Location     Type
 16251 ;;                  2    0[BANK1 ] unsigned int 
 16252 ;; Registers used:
 16253 ;;		wreg, status,2, status,0
 16254 ;; Tracked objects:
 16255 ;;		On entry : 0/0
 16256 ;;		On exit  : 0/0
 16257 ;;		Unchanged: 0/0
 16258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16259 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 16263 ;;Total ram usage:        6 bytes
 16264 ;; Hardware stack levels used: 1
 16265 ;; Hardware stack levels required when called: 5
 16266 ;; This function calls:
 16267 ;;		Nothing
 16268 ;; This function is called by:
 16269 ;;		_SPI1_Open
 16270 ;;		_counter_led
 16271 ;;		_atoi
 16272 ;;		_read_prec_or_width
 16273 ;;		_dutycycle_led_strip
 16274 ;; This function uses a non-reentrant model
 16275 ;;
 16276                           
 16277     1F9E                     ___wmul:	
 16278                           ;psect for function ___wmul
 16279                           
 16280     1F9E                     l4245:	
 16281                           ;incstack = 0
 16282                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16283                           
 16284     1F9E  0021               	movlb	1	; select bank1
 16285     1F9F  01A4               	clrf	___wmul@product^(0+128)
 16286     1FA0  01A5               	clrf	(___wmul@product+1)^(0+128)
 16287     1FA1                     l4247:
 16288     1FA1  1C20               	btfss	___wmul@multiplier^(0+128),0
 16289     1FA2  2FA4               	goto	u3951
 16290     1FA3  2FA5               	goto	u3950
 16291     1FA4                     u3951:
 16292     1FA4  2FA9               	goto	l1217
 16293     1FA5                     u3950:
 16294     1FA5                     l4249:
 16295     1FA5  0822               	movf	___wmul@multiplicand^(0+128),w
 16296     1FA6  07A4               	addwf	___wmul@product^(0+128),f
 16297     1FA7  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 16298     1FA8  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 16299     1FA9                     l1217:
 16300     1FA9  3001               	movlw	1
 16301     1FAA                     u3965:
 16302     1FAA  35A2               	lslf	___wmul@multiplicand^(0+128),f
 16303     1FAB  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 16304     1FAC  0B89               	decfsz	9,f
 16305     1FAD  2FAA               	goto	u3965
 16306     1FAE                     l4251:
 16307     1FAE  3001               	movlw	1
 16308     1FAF                     u3975:
 16309     1FAF  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 16310     1FB0  0CA0               	rrf	___wmul@multiplier^(0+128),f
 16311     1FB1  0B89               	decfsz	9,f
 16312     1FB2  2FAF               	goto	u3975
 16313     1FB3                     l4253:
 16314     1FB3  0820               	movf	___wmul@multiplier^(0+128),w
 16315     1FB4  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 16316     1FB5  1D03               	btfss	3,2
 16317     1FB6  2FB8               	goto	u3981
 16318     1FB7  2FB9               	goto	u3980
 16319     1FB8                     u3981:
 16320     1FB8  2FA1               	goto	l4247
 16321     1FB9                     u3980:
 16322     1FB9                     l4255:
 16323     1FB9  0825               	movf	(___wmul@product+1)^(0+128),w
 16324     1FBA  00A1               	movwf	(?___wmul+1)^(0+128)
 16325     1FBB  0824               	movf	___wmul@product^(0+128),w
 16326     1FBC  00A0               	movwf	?___wmul^(0+128)
 16327     1FBD                     l1219:
 16328     1FBD  0008               	return
 16329     1FBE                     __end_of___wmul:
 16330                           
 16331                           	psect	text52
 16332     113A                     __ptext52:	
 16333 ;; *************** function ___lwdiv *****************
 16334 ;; Defined at:
 16335 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 16336 ;; Parameters:    Size  Location     Type
 16337 ;;  divisor         2    0[BANK1 ] unsigned int 
 16338 ;;  dividend        2    2[BANK1 ] unsigned int 
 16339 ;; Auto vars:     Size  Location     Type
 16340 ;;  quotient        2    4[BANK1 ] unsigned int 
 16341 ;;  counter         1    6[BANK1 ] unsigned char 
 16342 ;; Return value:  Size  Location     Type
 16343 ;;                  2    0[BANK1 ] unsigned int 
 16344 ;; Registers used:
 16345 ;;		wreg, status,2, status,0
 16346 ;; Tracked objects:
 16347 ;;		On entry : 0/0
 16348 ;;		On exit  : 0/0
 16349 ;;		Unchanged: 0/0
 16350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16351 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16352 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16354 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 16355 ;;Total ram usage:        7 bytes
 16356 ;; Hardware stack levels used: 1
 16357 ;; Hardware stack levels required when called: 5
 16358 ;; This function calls:
 16359 ;;		Nothing
 16360 ;; This function is called by:
 16361 ;;		_counter_led
 16362 ;;		_utoa
 16363 ;;		_dutycycle_led_strip
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367     113A                     ___lwdiv:	
 16368                           ;psect for function ___lwdiv
 16369                           
 16370     113A                     l4341:	
 16371                           ;incstack = 0
 16372                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16373                           
 16374     113A  0021               	movlb	1	; select bank1
 16375     113B  01A4               	clrf	___lwdiv@quotient^(0+128)
 16376     113C  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 16377     113D                     l4343:
 16378     113D  0820               	movf	___lwdiv@divisor^(0+128),w
 16379     113E  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 16380     113F  1903               	btfsc	3,2
 16381     1140  2942               	goto	u4181
 16382     1141  2943               	goto	u4180
 16383     1142                     u4181:
 16384     1142  2970               	goto	l4363
 16385     1143                     u4180:
 16386     1143                     l4345:
 16387     1143  3001               	movlw	1
 16388     1144  00A6               	movwf	___lwdiv@counter^(0+128)
 16389     1145  294D               	goto	l4351
 16390     1146                     l4347:
 16391     1146  3001               	movlw	1
 16392     1147                     u4195:
 16393     1147  35A0               	lslf	___lwdiv@divisor^(0+128),f
 16394     1148  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 16395     1149  0B89               	decfsz	9,f
 16396     114A  2947               	goto	u4195
 16397     114B                     l4349:
 16398     114B  3001               	movlw	1
 16399     114C  07A6               	addwf	___lwdiv@counter^(0+128),f
 16400     114D                     l4351:
 16401     114D  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
 16402     114E  2950               	goto	u4201
 16403     114F  2951               	goto	u4200
 16404     1150                     u4201:
 16405     1150  2946               	goto	l4347
 16406     1151                     u4200:
 16407     1151                     l4353:
 16408     1151  3001               	movlw	1
 16409     1152                     u4215:
 16410     1152  35A4               	lslf	___lwdiv@quotient^(0+128),f
 16411     1153  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 16412     1154  0B89               	decfsz	9,f
 16413     1155  2952               	goto	u4215
 16414     1156  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 16415     1157  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 16416     1158  1D03               	skipz
 16417     1159  295C               	goto	u4225
 16418     115A  0820               	movf	___lwdiv@divisor^(0+128),w
 16419     115B  0222               	subwf	___lwdiv@dividend^(0+128),w
 16420     115C                     u4225:
 16421     115C  1C03               	skipc
 16422     115D  295F               	goto	u4221
 16423     115E  2960               	goto	u4220
 16424     115F                     u4221:
 16425     115F  2965               	goto	l4359
 16426     1160                     u4220:
 16427     1160                     l4355:
 16428     1160  0820               	movf	___lwdiv@divisor^(0+128),w
 16429     1161  02A2               	subwf	___lwdiv@dividend^(0+128),f
 16430     1162  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 16431     1163  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 16432     1164                     l4357:
 16433     1164  1424               	bsf	___lwdiv@quotient^(0+128),0
 16434     1165                     l4359:
 16435     1165  3001               	movlw	1
 16436     1166                     u4235:
 16437     1166  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 16438     1167  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 16439     1168  0B89               	decfsz	9,f
 16440     1169  2966               	goto	u4235
 16441     116A                     l4361:
 16442     116A  3001               	movlw	1
 16443     116B  02A6               	subwf	___lwdiv@counter^(0+128),f
 16444     116C  1D03               	btfss	3,2
 16445     116D  296F               	goto	u4241
 16446     116E  2970               	goto	u4240
 16447     116F                     u4241:
 16448     116F  2951               	goto	l4353
 16449     1170                     u4240:
 16450     1170                     l4363:
 16451     1170  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 16452     1171  00A1               	movwf	(?___lwdiv+1)^(0+128)
 16453     1172  0824               	movf	___lwdiv@quotient^(0+128),w
 16454     1173  00A0               	movwf	?___lwdiv^(0+128)
 16455     1174                     l1497:
 16456     1174  0008               	return
 16457     1175                     __end_of___lwdiv:
 16458                           
 16459                           	psect	text53
 16460     1D6C                     __ptext53:	
 16461 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 16462 ;; Defined at:
 16463 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 16466 ;;		 -> controller(1), 
 16467 ;; Auto vars:     Size  Location     Type
 16468 ;;		None
 16469 ;; Return value:  Size  Location     Type
 16470 ;;                  1    wreg      void 
 16471 ;; Registers used:
 16472 ;;		wreg
 16473 ;; Tracked objects:
 16474 ;;		On entry : 0/0
 16475 ;;		On exit  : 0/0
 16476 ;;		Unchanged: 0/0
 16477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16478 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;Total ram usage:        2 bytes
 16483 ;; Hardware stack levels used: 1
 16484 ;; Hardware stack levels required when called: 5
 16485 ;; This function calls:
 16486 ;;		Nothing
 16487 ;; This function is called by:
 16488 ;;		_main
 16489 ;; This function uses a non-reentrant model
 16490 ;;
 16491                           
 16492     1D6C                     _TMR4_PeriodMatchCallbackRegister:	
 16493                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 16494                           
 16495     1D6C                     l6041:	
 16496                           ;incstack = 0
 16497                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 16498                           
 16499                           
 16500                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 16501     1D6C  0021               	movlb	1	; select bank1
 16502     1D6D  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 16503     1D6E  0022               	movlb	2	; select bank2
 16504     1D6F  00D7               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 16505     1D70  0021               	movlb	1	; select bank1
 16506     1D71  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 16507     1D72  0022               	movlb	2	; select bank2
 16508     1D73  00D6               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16509     1D74                     l494:
 16510     1D74  0008               	return
 16511     1D75                     __end_of_TMR4_PeriodMatchCallbackRegister:
 16512                           
 16513                           	psect	text54
 16514     1FDE                     __ptext54:	
 16515 ;; *************** function _SYSTEM_Initialize *****************
 16516 ;; Defined at:
 16517 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 16518 ;; Parameters:    Size  Location     Type
 16519 ;;		None
 16520 ;; Auto vars:     Size  Location     Type
 16521 ;;		None
 16522 ;; Return value:  Size  Location     Type
 16523 ;;                  1    wreg      void 
 16524 ;; Registers used:
 16525 ;;		wreg, status,2, status,0, pclath, cstack
 16526 ;; Tracked objects:
 16527 ;;		On entry : 0/0
 16528 ;;		On exit  : 0/0
 16529 ;;		Unchanged: 0/0
 16530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16535 ;;Total ram usage:        0 bytes
 16536 ;; Hardware stack levels used: 1
 16537 ;; Hardware stack levels required when called: 7
 16538 ;; This function calls:
 16539 ;;		_ADC_Initialize
 16540 ;;		_CLOCK_Initialize
 16541 ;;		_EUSART_Initialize
 16542 ;;		_INTERRUPT_Initialize
 16543 ;;		_PIN_MANAGER_Initialize
 16544 ;;		_PWM_buzzer_Initialize
 16545 ;;		_SPI1_Initialize
 16546 ;;		_TMR2_Initialize
 16547 ;;		_TMR4_Initialize
 16548 ;;		_TMR6_Initialize
 16549 ;;		_pwm_fan_Initialize
 16550 ;; This function is called by:
 16551 ;;		_main
 16552 ;; This function uses a non-reentrant model
 16553 ;;
 16554                           
 16555     1FDE                     _SYSTEM_Initialize:	
 16556                           ;psect for function _SYSTEM_Initialize
 16557                           
 16558     1FDE                     l6023:	
 16559                           ;incstack = 0
 16560                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16561                           
 16562                           
 16563                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 16564     1FDE  319D  255A  319F   	fcall	_CLOCK_Initialize
 16565                           
 16566                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 16567     1FE1  3191  21F1  319F   	fcall	_PIN_MANAGER_Initialize
 16568     1FE4                     l6025:
 16569                           
 16570                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 16571     1FE4  319E  2680  319F   	fcall	_TMR2_Initialize
 16572     1FE7                     l6027:
 16573                           
 16574                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 16575     1FE7  319E  2691  319F   	fcall	_TMR4_Initialize
 16576     1FEA                     l6029:
 16577                           
 16578                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 16579     1FEA  319E  2661  319F   	fcall	_TMR6_Initialize
 16580     1FED                     l6031:
 16581                           
 16582                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 16583     1FED  319F  2725  319F   	fcall	_ADC_Initialize
 16584     1FF0                     l6033:
 16585                           
 16586                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 16587     1FF0  3191  2103  319F   	fcall	_EUSART_Initialize
 16588     1FF3                     l6035:
 16589                           
 16590                           ;mcc_generated_files/system/src/system.c: 48:     PWM_buzzer_Initialize();
 16591     1FF3  319D  25D7  319F   	fcall	_PWM_buzzer_Initialize
 16592     1FF6                     l6037:
 16593                           
 16594                           ;mcc_generated_files/system/src/system.c: 49:     pwm_fan_Initialize();
 16595     1FF6  319D  25E3  319F   	fcall	_pwm_fan_Initialize
 16596     1FF9                     l6039:
 16597                           
 16598                           ;mcc_generated_files/system/src/system.c: 50:     SPI1_Initialize();
 16599     1FF9  319D  25AB  319F   	fcall	_SPI1_Initialize
 16600                           
 16601                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 16602     1FFC  319D  25CB  319F   	fcall	_INTERRUPT_Initialize
 16603     1FFF                     l379:
 16604     1FFF  0008               	return
 16605     2000                     __end_of_SYSTEM_Initialize:
 16606                           
 16607                           	psect	text55
 16608     1DE3                     __ptext55:	
 16609 ;; *************** function _pwm_fan_Initialize *****************
 16610 ;; Defined at:
 16611 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 16612 ;; Parameters:    Size  Location     Type
 16613 ;;		None
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;		None
 16616 ;; Return value:  Size  Location     Type
 16617 ;;                  1    wreg      void 
 16618 ;; Registers used:
 16619 ;;		wreg, status,2, status,0
 16620 ;; Tracked objects:
 16621 ;;		On entry : 0/0
 16622 ;;		On exit  : 0/0
 16623 ;;		Unchanged: 0/0
 16624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;Total ram usage:        0 bytes
 16630 ;; Hardware stack levels used: 1
 16631 ;; Hardware stack levels required when called: 5
 16632 ;; This function calls:
 16633 ;;		Nothing
 16634 ;; This function is called by:
 16635 ;;		_SYSTEM_Initialize
 16636 ;; This function uses a non-reentrant model
 16637 ;;
 16638                           
 16639     1DE3                     _pwm_fan_Initialize:	
 16640                           ;psect for function _pwm_fan_Initialize
 16641                           
 16642     1DE3                     l5679:	
 16643                           ;incstack = 0
 16644                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 16645                           
 16646                           
 16647                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 16648     1DE3  3080               	movlw	128
 16649     1DE4  002C               	movlb	12	; select bank12
 16650     1DE5  0099               	movwf	25	;volatile
 16651                           
 16652                           ;mcc_generated_files/pwm/src/pwm5.c: 54:     PWM5DCH = 0x7C;
 16653     1DE6  307C               	movlw	124
 16654     1DE7  0098               	movwf	24	;volatile
 16655                           
 16656                           ;mcc_generated_files/pwm/src/pwm5.c: 57:     PWM5DCL = 0xC0;
 16657     1DE8  30C0               	movlw	192
 16658     1DE9  0097               	movwf	23	;volatile
 16659     1DEA                     l5681:
 16660                           
 16661                           ;mcc_generated_files/pwm/src/pwm5.c: 61:     PWMTMRSbits.P5TSEL = 0x1;
 16662     1DEA  081F               	movf	31,w	;volatile
 16663     1DEB  39FC               	andlw	-4
 16664     1DEC  3801               	iorlw	1
 16665     1DED  009F               	movwf	31	;volatile
 16666     1DEE                     l69:
 16667     1DEE  0008               	return
 16668     1DEF                     __end_of_pwm_fan_Initialize:
 16669                           
 16670                           	psect	text56
 16671     1E61                     __ptext56:	
 16672 ;; *************** function _TMR6_Initialize *****************
 16673 ;; Defined at:
 16674 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;		None
 16677 ;; Auto vars:     Size  Location     Type
 16678 ;;		None
 16679 ;; Return value:  Size  Location     Type
 16680 ;;                  1    wreg      void 
 16681 ;; Registers used:
 16682 ;;		wreg, status,2
 16683 ;; Tracked objects:
 16684 ;;		On entry : 0/0
 16685 ;;		On exit  : 0/0
 16686 ;;		Unchanged: 0/0
 16687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16692 ;;Total ram usage:        0 bytes
 16693 ;; Hardware stack levels used: 1
 16694 ;; Hardware stack levels required when called: 5
 16695 ;; This function calls:
 16696 ;;		Nothing
 16697 ;; This function is called by:
 16698 ;;		_SYSTEM_Initialize
 16699 ;; This function uses a non-reentrant model
 16700 ;;
 16701                           
 16702     1E61                     _TMR6_Initialize:	
 16703                           ;psect for function _TMR6_Initialize
 16704                           
 16705     1E61                     l5779:	
 16706                           ;incstack = 0
 16707                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 16708                           
 16709                           
 16710                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 16711     1E61  300E               	movlw	14
 16712     1E62  0028               	movlb	8	; select bank8
 16713     1E63  009D               	movwf	29	;volatile
 16714     1E64                     l5781:
 16715                           
 16716                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 16717     1E64  019C               	clrf	28	;volatile
 16718     1E65                     l5783:
 16719                           
 16720                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 16721     1E65  30FF               	movlw	low _TMR6_DefaultPeriodMatchCallback
 16722     1E66  0022               	movlb	2	; select bank2
 16723     1E67  00D4               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 16724     1E68  3007               	movlw	high _TMR6_DefaultPeriodMatchCallback
 16725     1E69  00D5               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 16726     1E6A                     l5785:
 16727                           
 16728                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 16729     1E6A  0020               	movlb	0	; select bank0
 16730     1E6B  1392               	bcf	18,7	;volatile
 16731     1E6C                     l5787:
 16732                           
 16733                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 16734     1E6C  301D               	movlw	29
 16735     1E6D  0028               	movlb	8	; select bank8
 16736     1E6E  009E               	movwf	30	;volatile
 16737     1E6F                     l516:
 16738     1E6F  0008               	return
 16739     1E70                     __end_of_TMR6_Initialize:
 16740                           
 16741                           	psect	text57
 16742     1E91                     __ptext57:	
 16743 ;; *************** function _TMR4_Initialize *****************
 16744 ;; Defined at:
 16745 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 16746 ;; Parameters:    Size  Location     Type
 16747 ;;		None
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;		None
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  1    wreg      void 
 16752 ;; Registers used:
 16753 ;;		wreg, status,2
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16763 ;;Total ram usage:        0 bytes
 16764 ;; Hardware stack levels used: 1
 16765 ;; Hardware stack levels required when called: 5
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		_SYSTEM_Initialize
 16770 ;; This function uses a non-reentrant model
 16771 ;;
 16772                           
 16773     1E91                     _TMR4_Initialize:	
 16774                           ;psect for function _TMR4_Initialize
 16775                           
 16776     1E91                     l5767:	
 16777                           ;incstack = 0
 16778                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 16779                           
 16780                           
 16781                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xF9;
 16782     1E91  30F9               	movlw	249
 16783     1E92  0028               	movlb	8	; select bank8
 16784     1E93  0096               	movwf	22	;volatile
 16785     1E94                     l5769:
 16786                           
 16787                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 16788     1E94  0195               	clrf	21	;volatile
 16789     1E95                     l5771:
 16790                           
 16791                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 16792     1E95  3003               	movlw	low _TMR4_DefaultPeriodMatchCallback
 16793     1E96  0022               	movlb	2	; select bank2
 16794     1E97  00D6               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16795     1E98  3000               	movlw	high _TMR4_DefaultPeriodMatchCallback
 16796     1E99  00D7               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 16797     1E9A                     l5773:
 16798                           
 16799                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 16800     1E9A  0020               	movlb	0	; select bank0
 16801     1E9B  1092               	bcf	18,1	;volatile
 16802     1E9C                     l5775:
 16803                           
 16804                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 16805     1E9C  0021               	movlb	1	; select bank1
 16806     1E9D  1492               	bsf	18,1	;volatile
 16807     1E9E                     l5777:
 16808                           
 16809                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (3 << 0x0)
 16810     1E9E  3077               	movlw	119
 16811     1E9F  0028               	movlb	8	; select bank8
 16812     1EA0  0097               	movwf	23	;volatile
 16813     1EA1                     l457:
 16814     1EA1  0008               	return
 16815     1EA2                     __end_of_TMR4_Initialize:
 16816                           
 16817                           	psect	text58
 16818     1E80                     __ptext58:	
 16819 ;; *************** function _TMR2_Initialize *****************
 16820 ;; Defined at:
 16821 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 16822 ;; Parameters:    Size  Location     Type
 16823 ;;		None
 16824 ;; Auto vars:     Size  Location     Type
 16825 ;;		None
 16826 ;; Return value:  Size  Location     Type
 16827 ;;                  1    wreg      void 
 16828 ;; Registers used:
 16829 ;;		wreg, status,2
 16830 ;; Tracked objects:
 16831 ;;		On entry : 0/0
 16832 ;;		On exit  : 0/0
 16833 ;;		Unchanged: 0/0
 16834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16839 ;;Total ram usage:        0 bytes
 16840 ;; Hardware stack levels used: 1
 16841 ;; Hardware stack levels required when called: 5
 16842 ;; This function calls:
 16843 ;;		Nothing
 16844 ;; This function is called by:
 16845 ;;		_SYSTEM_Initialize
 16846 ;; This function uses a non-reentrant model
 16847 ;;
 16848                           
 16849     1E80                     _TMR2_Initialize:	
 16850                           ;psect for function _TMR2_Initialize
 16851                           
 16852     1E80                     l5755:	
 16853                           ;incstack = 0
 16854                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16855                           
 16856                           
 16857                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xF9;
 16858     1E80  30F9               	movlw	249
 16859     1E81  0020               	movlb	0	; select bank0
 16860     1E82  009E               	movwf	30	;volatile
 16861     1E83                     l5757:
 16862                           
 16863                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 16864     1E83  019D               	clrf	29	;volatile
 16865     1E84                     l5759:
 16866                           
 16867                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 16868     1E84  3002               	movlw	low _TMR2_DefaultPeriodMatchCallback
 16869     1E85  0022               	movlb	2	; select bank2
 16870     1E86  00D8               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 16871     1E87  3000               	movlw	high _TMR2_DefaultPeriodMatchCallback
 16872     1E88  00D9               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 16873     1E89                     l5761:
 16874                           
 16875                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 16876     1E89  0020               	movlb	0	; select bank0
 16877     1E8A  1091               	bcf	17,1	;volatile
 16878     1E8B                     l5763:
 16879                           
 16880                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 16881     1E8B  0021               	movlb	1	; select bank1
 16882     1E8C  1491               	bsf	17,1	;volatile
 16883     1E8D                     l5765:
 16884                           
 16885                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (2 << 0x0)
 16886     1E8D  301E               	movlw	30
 16887     1E8E  0020               	movlb	0	; select bank0
 16888     1E8F  009F               	movwf	31	;volatile
 16889     1E90                     l398:
 16890     1E90  0008               	return
 16891     1E91                     __end_of_TMR2_Initialize:
 16892                           
 16893                           	psect	text59
 16894     1DAB                     __ptext59:	
 16895 ;; *************** function _SPI1_Initialize *****************
 16896 ;; Defined at:
 16897 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;		None
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;		None
 16902 ;; Return value:  Size  Location     Type
 16903 ;;                  1    wreg      void 
 16904 ;; Registers used:
 16905 ;;		status,2
 16906 ;; Tracked objects:
 16907 ;;		On entry : 0/0
 16908 ;;		On exit  : 0/0
 16909 ;;		Unchanged: 0/0
 16910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16915 ;;Total ram usage:        0 bytes
 16916 ;; Hardware stack levels used: 1
 16917 ;; Hardware stack levels required when called: 5
 16918 ;; This function calls:
 16919 ;;		Nothing
 16920 ;; This function is called by:
 16921 ;;		_SYSTEM_Initialize
 16922 ;; This function uses a non-reentrant model
 16923 ;;
 16924                           
 16925     1DAB                     _SPI1_Initialize:	
 16926                           ;psect for function _SPI1_Initialize
 16927                           
 16928     1DAB                     l5689:	
 16929                           ;incstack = 0
 16930                           ; Regs used in _SPI1_Initialize: [status,2]
 16931                           
 16932                           
 16933                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 16934     1DAB  0021               	movlb	1	; select bank1
 16935     1DAC  1191               	bcf	17,3	;volatile
 16936                           
 16937                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 16938     1DAD  0020               	movlb	0	; select bank0
 16939     1DAE  1191               	bcf	17,3	;volatile
 16940     1DAF                     l5691:
 16941                           
 16942                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 16943     1DAF  0024               	movlb	4	; select bank4
 16944     1DB0  0194               	clrf	20	;volatile
 16945                           
 16946                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 16947     1DB1  0195               	clrf	21	;volatile
 16948                           
 16949                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 16950     1DB2  0197               	clrf	23	;volatile
 16951                           
 16952                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 16953     1DB3  0192               	clrf	18	;volatile
 16954     1DB4                     l133:
 16955     1DB4  0008               	return
 16956     1DB5                     __end_of_SPI1_Initialize:
 16957                           
 16958                           	psect	text60
 16959     1DD7                     __ptext60:	
 16960 ;; *************** function _PWM_buzzer_Initialize *****************
 16961 ;; Defined at:
 16962 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm6.c"
 16963 ;; Parameters:    Size  Location     Type
 16964 ;;		None
 16965 ;; Auto vars:     Size  Location     Type
 16966 ;;		None
 16967 ;; Return value:  Size  Location     Type
 16968 ;;                  1    wreg      void 
 16969 ;; Registers used:
 16970 ;;		wreg, status,2, status,0
 16971 ;; Tracked objects:
 16972 ;;		On entry : 0/0
 16973 ;;		On exit  : 0/0
 16974 ;;		Unchanged: 0/0
 16975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16980 ;;Total ram usage:        0 bytes
 16981 ;; Hardware stack levels used: 1
 16982 ;; Hardware stack levels required when called: 5
 16983 ;; This function calls:
 16984 ;;		Nothing
 16985 ;; This function is called by:
 16986 ;;		_SYSTEM_Initialize
 16987 ;; This function uses a non-reentrant model
 16988 ;;
 16989                           
 16990     1DD7                     _PWM_buzzer_Initialize:	
 16991                           ;psect for function _PWM_buzzer_Initialize
 16992                           
 16993     1DD7                     l5683:	
 16994                           ;incstack = 0
 16995                           ; Regs used in _PWM_buzzer_Initialize: [wreg+status,2+status,0]
 16996                           
 16997                           
 16998                           ;mcc_generated_files/pwm/src/pwm6.c: 50:     PWM6CON = 0x80;
 16999     1DD7  3080               	movlw	128
 17000     1DD8  002C               	movlb	12	; select bank12
 17001     1DD9  009C               	movwf	28	;volatile
 17002                           
 17003                           ;mcc_generated_files/pwm/src/pwm6.c: 53:     PWM6DCH = 0x7C;
 17004     1DDA  307C               	movlw	124
 17005     1DDB  009B               	movwf	27	;volatile
 17006                           
 17007                           ;mcc_generated_files/pwm/src/pwm6.c: 56:     PWM6DCL = 0xC0;
 17008     1DDC  30C0               	movlw	192
 17009     1DDD  009A               	movwf	26	;volatile
 17010     1DDE                     l5685:
 17011                           
 17012                           ;mcc_generated_files/pwm/src/pwm6.c: 60:     PWMTMRSbits.P6TSEL = 0x1;
 17013     1DDE  081F               	movf	31,w	;volatile
 17014     1DDF  39F3               	andlw	-13
 17015     1DE0  3804               	iorlw	4
 17016     1DE1  009F               	movwf	31	;volatile
 17017     1DE2                     l83:
 17018     1DE2  0008               	return
 17019     1DE3                     __end_of_PWM_buzzer_Initialize:
 17020                           
 17021                           	psect	text61
 17022     11F1                     __ptext61:	
 17023 ;; *************** function _PIN_MANAGER_Initialize *****************
 17024 ;; Defined at:
 17025 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 17026 ;; Parameters:    Size  Location     Type
 17027 ;;		None
 17028 ;; Auto vars:     Size  Location     Type
 17029 ;;		None
 17030 ;; Return value:  Size  Location     Type
 17031 ;;                  1    wreg      void 
 17032 ;; Registers used:
 17033 ;;		status,2
 17034 ;; Tracked objects:
 17035 ;;		On entry : 0/0
 17036 ;;		On exit  : 0/0
 17037 ;;		Unchanged: 0/0
 17038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;Total ram usage:        0 bytes
 17044 ;; Hardware stack levels used: 1
 17045 ;; Hardware stack levels required when called: 5
 17046 ;; This function calls:
 17047 ;;		Nothing
 17048 ;; This function is called by:
 17049 ;;		_SYSTEM_Initialize
 17050 ;; This function uses a non-reentrant model
 17051 ;;
 17052                           
 17053     11F1                     _PIN_MANAGER_Initialize:	
 17054                           ;psect for function _PIN_MANAGER_Initialize
 17055                           
 17056     11F1                     l5715:	
 17057                           ;incstack = 0
 17058                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 17059                           
 17060                           
 17061                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 17062     11F1  0022               	movlb	2	; select bank2
 17063     11F2  018C               	clrf	12	;volatile
 17064                           
 17065                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 17066     11F3  018D               	clrf	13	;volatile
 17067                           
 17068                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 17069     11F4  018E               	clrf	14	;volatile
 17070     11F5                     l5717:
 17071                           
 17072                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 17073     11F5  3019               	movlw	25
 17074     11F6  0021               	movlb	1	; select bank1
 17075     11F7  008C               	movwf	12	;volatile
 17076     11F8                     l5719:
 17077                           
 17078                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 17079     11F8  3020               	movlw	32
 17080     11F9  008D               	movwf	13	;volatile
 17081     11FA                     l5721:
 17082                           
 17083                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x1F;
 17084     11FA  301F               	movlw	31
 17085     11FB  008E               	movwf	14	;volatile
 17086     11FC                     l5723:
 17087                           
 17088                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 17089     11FC  3010               	movlw	16
 17090     11FD  0023               	movlb	3	; select bank3
 17091     11FE  008C               	movwf	12	;volatile
 17092     11FF                     l5725:
 17093                           
 17094                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 17095     11FF  3080               	movlw	128
 17096     1200  008D               	movwf	13	;volatile
 17097     1201                     l5727:
 17098                           
 17099                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBF;
 17100     1201  30BF               	movlw	191
 17101     1202  008E               	movwf	14	;volatile
 17102                           
 17103                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 17104     1203  0024               	movlb	4	; select bank4
 17105     1204  018C               	clrf	12	;volatile
 17106                           
 17107                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 17108     1205  018D               	clrf	13	;volatile
 17109                           
 17110                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 17111     1206  018E               	clrf	14	;volatile
 17112                           
 17113                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 17114     1207  0025               	movlb	5	; select bank5
 17115     1208  018C               	clrf	12	;volatile
 17116                           
 17117                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 17118     1209  018D               	clrf	13	;volatile
 17119                           
 17120                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 17121     120A  018E               	clrf	14	;volatile
 17122     120B                     l5729:
 17123                           
 17124                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 17125     120B  3037               	movlw	55
 17126     120C  0026               	movlb	6	; select bank6
 17127     120D  008C               	movwf	12	;volatile
 17128     120E                     l5731:
 17129                           
 17130                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 17131     120E  30F0               	movlw	240
 17132     120F  008D               	movwf	13	;volatile
 17133     1210                     l5733:
 17134                           
 17135                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 17136     1210  30FF               	movlw	255
 17137     1211  008E               	movwf	14	;volatile
 17138     1212                     l5735:
 17139                           
 17140                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 17141     1212  303F               	movlw	63
 17142     1213  0027               	movlb	7	; select bank7
 17143     1214  008C               	movwf	12	;volatile
 17144     1215                     l5737:
 17145                           
 17146                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 17147     1215  30F0               	movlw	240
 17148     1216  008D               	movwf	13	;volatile
 17149     1217                     l5739:
 17150                           
 17151                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 17152     1217  30FF               	movlw	255
 17153     1218  008E               	movwf	14	;volatile
 17154                           
 17155                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 17156     1219  003C               	movlb	28	; select bank28
 17157     121A  01A1               	clrf	33	;volatile
 17158     121B                     l5741:
 17159                           
 17160                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 17161     121B  300D               	movlw	13
 17162     121C  00A4               	movwf	36	;volatile
 17163     121D                     l5743:
 17164                           
 17165                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 17166     121D  3019               	movlw	25
 17167     121E  003D               	movlb	29	; select bank29
 17168     121F  009C               	movwf	28	;volatile
 17169     1220                     l5745:
 17170                           
 17171                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 17172     1220  3002               	movlw	2
 17173     1221  00A5               	movwf	37	;volatile
 17174     1222                     l5747:
 17175                           
 17176                           ;mcc_generated_files/system/src/pins.c: 95:     RC7PPS = 3;
 17177     1222  3003               	movlw	3
 17178     1223  00A7               	movwf	39	;volatile
 17179     1224                     l5749:
 17180                           
 17181                           ;mcc_generated_files/system/src/pins.c: 96:     RB7PPS = 20;
 17182     1224  3014               	movlw	20
 17183     1225  009F               	movwf	31	;volatile
 17184     1226                     l5751:
 17185                           
 17186                           ;mcc_generated_files/system/src/pins.c: 97:     SSP1CLKPPS = 0xE;
 17187     1226  300E               	movlw	14
 17188     1227  003C               	movlb	28	; select bank28
 17189     1228  00A0               	movwf	32	;volatile
 17190     1229                     l5753:
 17191                           
 17192                           ;mcc_generated_files/system/src/pins.c: 98:     RB6PPS = 24;
 17193     1229  3018               	movlw	24
 17194     122A  003D               	movlb	29	; select bank29
 17195     122B  009E               	movwf	30	;volatile
 17196                           
 17197                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAP = 0x0;
 17198     122C  0027               	movlb	7	; select bank7
 17199     122D  0191               	clrf	17	;volatile
 17200                           
 17201                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAN = 0x0;
 17202     122E  0192               	clrf	18	;volatile
 17203                           
 17204                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAF = 0x0;
 17205     122F  0193               	clrf	19	;volatile
 17206                           
 17207                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBP = 0x0;
 17208     1230  0194               	clrf	20	;volatile
 17209                           
 17210                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBN = 0x0;
 17211     1231  0195               	clrf	21	;volatile
 17212                           
 17213                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBF = 0x0;
 17214     1232  0196               	clrf	22	;volatile
 17215                           
 17216                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCP = 0x0;
 17217     1233  0197               	clrf	23	;volatile
 17218                           
 17219                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCN = 0x0;
 17220     1234  0198               	clrf	24	;volatile
 17221                           
 17222                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCF = 0x0;
 17223     1235  0199               	clrf	25	;volatile
 17224     1236                     l351:
 17225     1236  0008               	return
 17226     1237                     __end_of_PIN_MANAGER_Initialize:
 17227                           
 17228                           	psect	text62
 17229     1DCB                     __ptext62:	
 17230 ;; *************** function _INTERRUPT_Initialize *****************
 17231 ;; Defined at:
 17232 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 17233 ;; Parameters:    Size  Location     Type
 17234 ;;		None
 17235 ;; Auto vars:     Size  Location     Type
 17236 ;;		None
 17237 ;; Return value:  Size  Location     Type
 17238 ;;                  1    wreg      void 
 17239 ;; Registers used:
 17240 ;;		wreg, status,2, status,0, pclath, cstack
 17241 ;; Tracked objects:
 17242 ;;		On entry : 0/0
 17243 ;;		On exit  : 0/0
 17244 ;;		Unchanged: 0/0
 17245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17250 ;;Total ram usage:        0 bytes
 17251 ;; Hardware stack levels used: 1
 17252 ;; Hardware stack levels required when called: 6
 17253 ;; This function calls:
 17254 ;;		_INT_SetInterruptHandler
 17255 ;; This function is called by:
 17256 ;;		_SYSTEM_Initialize
 17257 ;; This function uses a non-reentrant model
 17258 ;;
 17259                           
 17260     1DCB                     _INTERRUPT_Initialize:	
 17261                           ;psect for function _INTERRUPT_Initialize
 17262                           
 17263     1DCB                     l5707:	
 17264                           ;incstack = 0
 17265                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17266                           
 17267                           
 17268                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 17269     1DCB  0020               	movlb	0	; select bank0
 17270     1DCC  1010               	bcf	16,0	;volatile
 17271                           
 17272                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 17273     1DCD  140B               	bsf	11,0	;volatile
 17274     1DCE                     l5709:
 17275                           
 17276                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 17277     1DCE  3000               	movlw	0
 17278     1DCF  0021               	movlb	1	; select bank1
 17279     1DD0  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 17280     1DD1  3000               	movlw	0
 17281     1DD2  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17282     1DD3  319D  2563  319D   	fcall	_INT_SetInterruptHandler
 17283     1DD6                     l227:
 17284     1DD6  0008               	return
 17285     1DD7                     __end_of_INTERRUPT_Initialize:
 17286                           
 17287                           	psect	text63
 17288     1D63                     __ptext63:	
 17289 ;; *************** function _INT_SetInterruptHandler *****************
 17290 ;; Defined at:
 17291 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 17292 ;; Parameters:    Size  Location     Type
 17293 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17294 ;;		 -> INT_DefaultInterruptHandler(1), 
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;		None
 17297 ;; Return value:  Size  Location     Type
 17298 ;;                  1    wreg      void 
 17299 ;; Registers used:
 17300 ;;		wreg
 17301 ;; Tracked objects:
 17302 ;;		On entry : 0/0
 17303 ;;		On exit  : 0/0
 17304 ;;		Unchanged: 0/0
 17305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17306 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17309 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17310 ;;Total ram usage:        2 bytes
 17311 ;; Hardware stack levels used: 1
 17312 ;; Hardware stack levels required when called: 5
 17313 ;; This function calls:
 17314 ;;		Nothing
 17315 ;; This function is called by:
 17316 ;;		_INTERRUPT_Initialize
 17317 ;; This function uses a non-reentrant model
 17318 ;;
 17319                           
 17320     1D63                     _INT_SetInterruptHandler:	
 17321                           ;psect for function _INT_SetInterruptHandler
 17322                           
 17323     1D63                     l4663:	
 17324                           ;incstack = 0
 17325                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 17326                           
 17327                           
 17328                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 17329     1D63  0021               	movlb	1	; select bank1
 17330     1D64  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17331     1D65  0020               	movlb	0	; select bank0
 17332     1D66  00E0               	movwf	_INT_InterruptHandler+1
 17333     1D67  0021               	movlb	1	; select bank1
 17334     1D68  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 17335     1D69  0020               	movlb	0	; select bank0
 17336     1D6A  00DF               	movwf	_INT_InterruptHandler
 17337     1D6B                     l254:
 17338     1D6B  0008               	return
 17339     1D6C                     __end_of_INT_SetInterruptHandler:
 17340                           
 17341                           	psect	text64
 17342     1103                     __ptext64:	
 17343 ;; *************** function _EUSART_Initialize *****************
 17344 ;; Defined at:
 17345 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;		None
 17348 ;; Auto vars:     Size  Location     Type
 17349 ;;		None
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  1    wreg      void 
 17352 ;; Registers used:
 17353 ;;		wreg, status,2, status,0, pclath, cstack
 17354 ;; Tracked objects:
 17355 ;;		On entry : 0/0
 17356 ;;		On exit  : 0/0
 17357 ;;		Unchanged: 0/0
 17358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17363 ;;Total ram usage:        0 bytes
 17364 ;; Hardware stack levels used: 1
 17365 ;; Hardware stack levels required when called: 6
 17366 ;; This function calls:
 17367 ;;		_EUSART_FramingErrorCallbackRegister
 17368 ;;		_EUSART_OverrunErrorCallbackRegister
 17369 ;; This function is called by:
 17370 ;;		_SYSTEM_Initialize
 17371 ;; This function uses a non-reentrant model
 17372 ;;
 17373                           
 17374     1103                     _EUSART_Initialize:	
 17375                           ;psect for function _EUSART_Initialize
 17376                           
 17377     1103                     l5789:	
 17378                           ;incstack = 0
 17379                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17380                           
 17381                           
 17382                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 17383     1103  0021               	movlb	1	; select bank1
 17384     1104  1291               	bcf	17,5	;volatile
 17385     1105                     l5791:
 17386                           
 17387                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 17388     1105  3037               	movlw	low _EUSART_ReceiveISR
 17389     1106  0022               	movlb	2	; select bank2
 17390     1107  00DA               	movwf	_EUSART_RxInterruptHandler^(0+256)
 17391     1108  3012               	movlw	high _EUSART_ReceiveISR
 17392     1109  00DB               	movwf	(_EUSART_RxInterruptHandler^(0+256)+1)
 17393     110A                     l5793:
 17394                           
 17395                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 17396     110A  0021               	movlb	1	; select bank1
 17397     110B  1211               	bcf	17,4	;volatile
 17398                           
 17399                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 17400     110C  3082               	movlw	low _EUSART_TransmitISR
 17401     110D  0022               	movlb	2	; select bank2
 17402     110E  00DC               	movwf	_EUSART_TxInterruptHandler^(0+256)
 17403     110F  301F               	movlw	high _EUSART_TransmitISR
 17404     1110  00DD               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 17405     1111                     l5795:
 17406                           
 17407                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 17408     1111  3048               	movlw	72
 17409     1112  0023               	movlb	3	; select bank3
 17410     1113  009F               	movwf	31	;volatile
 17411     1114                     l5797:
 17412                           
 17413                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 17414     1114  3090               	movlw	144
 17415     1115  009D               	movwf	29	;volatile
 17416     1116                     l5799:
 17417                           
 17418                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 17419     1116  3026               	movlw	38
 17420     1117  009E               	movwf	30	;volatile
 17421     1118                     l5801:
 17422                           
 17423                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 17424     1118  3040               	movlw	64
 17425     1119  009B               	movwf	27	;volatile
 17426     111A                     l5803:
 17427                           
 17428                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 17429     111A  3003               	movlw	3
 17430     111B  009C               	movwf	28	;volatile
 17431     111C                     l5805:
 17432                           
 17433                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 17434     111C  3026               	movlw	low _EUSART_DefaultFramingErrorCallback
 17435     111D  0021               	movlb	1	; select bank1
 17436     111E  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 17437     111F  301D               	movlw	high _EUSART_DefaultFramingErrorCallback
 17438     1120  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 17439     1121  319E  2643  3191   	fcall	_EUSART_FramingErrorCallbackRegister
 17440     1124                     l5807:
 17441                           
 17442                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 17443     1124  3027               	movlw	low _EUSART_DefaultOverrunErrorCallback
 17444     1125  0021               	movlb	1	; select bank1
 17445     1126  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 17446     1127  301D               	movlw	high _EUSART_DefaultOverrunErrorCallback
 17447     1128  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 17448     1129  319E  2652  3191   	fcall	_EUSART_OverrunErrorCallbackRegister
 17449     112C                     l5809:
 17450                           
 17451                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 17452     112C  0022               	movlb	2	; select bank2
 17453     112D  01D2               	clrf	_eusartRxLastError^(0+256)	;volatile
 17454     112E  01D3               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 17455     112F                     l5811:
 17456                           
 17457                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 17458     112F  0020               	movlb	0	; select bank0
 17459     1130  01EA               	clrf	_eusartTxHead	;volatile
 17460     1131                     l5813:
 17461                           
 17462                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 17463     1131  01E9               	clrf	_eusartTxTail	;volatile
 17464     1132                     l5815:
 17465                           
 17466                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 17467     1132  3008               	movlw	8
 17468     1133  00E8               	movwf	_eusartTxBufferRemaining	;volatile
 17469     1134                     l5817:
 17470                           
 17471                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 17472     1134  01E7               	clrf	_eusartRxHead	;volatile
 17473     1135                     l5819:
 17474                           
 17475                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 17476     1135  01E6               	clrf	_eusartRxTail	;volatile
 17477     1136                     l5821:
 17478                           
 17479                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 17480     1136  01E5               	clrf	_eusartRxCount	;volatile
 17481     1137                     l5823:
 17482                           
 17483                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 17484     1137  0021               	movlb	1	; select bank1
 17485     1138  1691               	bsf	17,5	;volatile
 17486     1139                     l656:
 17487     1139  0008               	return
 17488     113A                     __end_of_EUSART_Initialize:
 17489                           
 17490                           	psect	text65
 17491     1E52                     __ptext65:	
 17492 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 17493 ;; Defined at:
 17494 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 17495 ;; Parameters:    Size  Location     Type
 17496 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17497 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 17498 ;; Auto vars:     Size  Location     Type
 17499 ;;		None
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  1    wreg      void 
 17502 ;; Registers used:
 17503 ;;		wreg, status,2, status,0
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17509 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17512 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17513 ;;Total ram usage:        2 bytes
 17514 ;; Hardware stack levels used: 1
 17515 ;; Hardware stack levels required when called: 5
 17516 ;; This function calls:
 17517 ;;		Nothing
 17518 ;; This function is called by:
 17519 ;;		_EUSART_Initialize
 17520 ;; This function uses a non-reentrant model
 17521 ;;
 17522                           
 17523     1E52                     _EUSART_OverrunErrorCallbackRegister:	
 17524                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 17525                           
 17526     1E52                     l4669:	
 17527                           ;incstack = 0
 17528                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 17529                           
 17530                           
 17531                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 17532     1E52  0021               	movlb	1	; select bank1
 17533     1E53  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17534     1E54  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17535     1E55  1903               	btfsc	3,2
 17536     1E56  2E58               	goto	u4711
 17537     1E57  2E59               	goto	u4710
 17538     1E58                     u4711:
 17539     1E58  2E60               	goto	l774
 17540     1E59                     u4710:
 17541     1E59                     l4671:
 17542                           
 17543                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 17544     1E59  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17545     1E5A  0020               	movlb	0	; select bank0
 17546     1E5B  00DC               	movwf	_EUSART_OverrunErrorHandler+1
 17547     1E5C  0021               	movlb	1	; select bank1
 17548     1E5D  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17549     1E5E  0020               	movlb	0	; select bank0
 17550     1E5F  00DB               	movwf	_EUSART_OverrunErrorHandler
 17551     1E60                     l774:
 17552     1E60  0008               	return
 17553     1E61                     __end_of_EUSART_OverrunErrorCallbackRegister:
 17554                           
 17555                           	psect	text66
 17556     1E43                     __ptext66:	
 17557 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 17558 ;; Defined at:
 17559 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 17560 ;; Parameters:    Size  Location     Type
 17561 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17562 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 17563 ;; Auto vars:     Size  Location     Type
 17564 ;;		None
 17565 ;; Return value:  Size  Location     Type
 17566 ;;                  1    wreg      void 
 17567 ;; Registers used:
 17568 ;;		wreg, status,2, status,0
 17569 ;; Tracked objects:
 17570 ;;		On entry : 0/0
 17571 ;;		On exit  : 0/0
 17572 ;;		Unchanged: 0/0
 17573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17574 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17577 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17578 ;;Total ram usage:        2 bytes
 17579 ;; Hardware stack levels used: 1
 17580 ;; Hardware stack levels required when called: 5
 17581 ;; This function calls:
 17582 ;;		Nothing
 17583 ;; This function is called by:
 17584 ;;		_EUSART_Initialize
 17585 ;; This function uses a non-reentrant model
 17586 ;;
 17587                           
 17588     1E43                     _EUSART_FramingErrorCallbackRegister:	
 17589                           ;psect for function _EUSART_FramingErrorCallbackRegister
 17590                           
 17591     1E43                     l4665:	
 17592                           ;incstack = 0
 17593                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 17594                           
 17595                           
 17596                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 17597     1E43  0021               	movlb	1	; select bank1
 17598     1E44  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17599     1E45  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17600     1E46  1903               	btfsc	3,2
 17601     1E47  2E49               	goto	u4701
 17602     1E48  2E4A               	goto	u4700
 17603     1E49                     u4701:
 17604     1E49  2E51               	goto	l770
 17605     1E4A                     u4700:
 17606     1E4A                     l4667:
 17607                           
 17608                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 17609     1E4A  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17610     1E4B  0020               	movlb	0	; select bank0
 17611     1E4C  00DE               	movwf	_EUSART_FramingErrorHandler+1
 17612     1E4D  0021               	movlb	1	; select bank1
 17613     1E4E  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17614     1E4F  0020               	movlb	0	; select bank0
 17615     1E50  00DD               	movwf	_EUSART_FramingErrorHandler
 17616     1E51                     l770:
 17617     1E51  0008               	return
 17618     1E52                     __end_of_EUSART_FramingErrorCallbackRegister:
 17619                           
 17620                           	psect	text67
 17621     1D5A                     __ptext67:	
 17622 ;; *************** function _CLOCK_Initialize *****************
 17623 ;; Defined at:
 17624 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 17625 ;; Parameters:    Size  Location     Type
 17626 ;;		None
 17627 ;; Auto vars:     Size  Location     Type
 17628 ;;		None
 17629 ;; Return value:  Size  Location     Type
 17630 ;;                  1    wreg      void 
 17631 ;; Registers used:
 17632 ;;		status,2
 17633 ;; Tracked objects:
 17634 ;;		On entry : 0/0
 17635 ;;		On exit  : 0/0
 17636 ;;		Unchanged: 0/0
 17637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17642 ;;Total ram usage:        0 bytes
 17643 ;; Hardware stack levels used: 1
 17644 ;; Hardware stack levels required when called: 5
 17645 ;; This function calls:
 17646 ;;		Nothing
 17647 ;; This function is called by:
 17648 ;;		_SYSTEM_Initialize
 17649 ;; This function uses a non-reentrant model
 17650 ;;
 17651                           
 17652     1D5A                     _CLOCK_Initialize:	
 17653                           ;psect for function _CLOCK_Initialize
 17654                           
 17655     1D5A                     l5711:	
 17656                           ;incstack = 0
 17657                           ; Regs used in _CLOCK_Initialize: [status,2]
 17658                           
 17659                           
 17660                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 17661     1D5A  0032               	movlb	18	; select bank18
 17662     1D5B  0199               	clrf	25	;volatile
 17663                           
 17664                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 17665     1D5C  019B               	clrf	27	;volatile
 17666                           
 17667                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 17668     1D5D  019D               	clrf	29	;volatile
 17669     1D5E                     l5713:
 17670                           
 17671                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 17672     1D5E  3006               	movlw	6
 17673     1D5F  009F               	movwf	31	;volatile
 17674                           
 17675                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 17676     1D60  019E               	clrf	30	;volatile
 17677     1D61  019C               	clrf	28	;volatile
 17678     1D62                     l272:
 17679     1D62  0008               	return
 17680     1D63                     __end_of_CLOCK_Initialize:
 17681                           
 17682                           	psect	text68
 17683     1F25                     __ptext68:	
 17684 ;; *************** function _ADC_Initialize *****************
 17685 ;; Defined at:
 17686 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 17687 ;; Parameters:    Size  Location     Type
 17688 ;;		None
 17689 ;; Auto vars:     Size  Location     Type
 17690 ;;		None
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  1    wreg      void 
 17693 ;; Registers used:
 17694 ;;		wreg, status,2, status,0, pclath, cstack
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17704 ;;Total ram usage:        0 bytes
 17705 ;; Hardware stack levels used: 1
 17706 ;; Hardware stack levels required when called: 6
 17707 ;; This function calls:
 17708 ;;		_ADC_SetInterruptHandler
 17709 ;; This function is called by:
 17710 ;;		_SYSTEM_Initialize
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714     1F25                     _ADC_Initialize:	
 17715                           ;psect for function _ADC_Initialize
 17716                           
 17717     1F25                     l5663:	
 17718                           ;incstack = 0
 17719                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17720                           
 17721                           
 17722                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 17723     1F25  30A0               	movlw	160
 17724     1F26  0021               	movlb	1	; select bank1
 17725     1F27  009E               	movwf	30	;volatile
 17726     1F28                     l5665:
 17727                           
 17728                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 17729     1F28  019B               	clrf	27	;volatile
 17730                           
 17731                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 17732     1F29  019C               	clrf	28	;volatile
 17733     1F2A                     l5667:
 17734                           
 17735                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 17736     1F2A  3005               	movlw	5
 17737     1F2B  009F               	movwf	31	;volatile
 17738     1F2C                     l5669:
 17739                           
 17740                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 17741     1F2C  3001               	movlw	1
 17742     1F2D  009D               	movwf	29	;volatile
 17743     1F2E                     l5671:
 17744                           
 17745                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 17746     1F2E  0020               	movlb	0	; select bank0
 17747     1F2F  1311               	bcf	17,6	;volatile
 17748     1F30                     l5673:
 17749                           
 17750                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 17751     1F30  3025               	movlw	low _ADC_DefaultInterruptHandler
 17752     1F31  0021               	movlb	1	; select bank1
 17753     1F32  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 17754     1F33  301D               	movlw	high _ADC_DefaultInterruptHandler
 17755     1F34  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17756     1F35  319D  2551  319F   	fcall	_ADC_SetInterruptHandler
 17757     1F38                     l5675:
 17758                           
 17759                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 17760     1F38  0021               	movlb	1	; select bank1
 17761     1F39  1711               	bsf	17,6	;volatile
 17762     1F3A                     l27:
 17763     1F3A  0008               	return
 17764     1F3B                     __end_of_ADC_Initialize:
 17765                           
 17766                           	psect	text69
 17767     1D51                     __ptext69:	
 17768 ;; *************** function _ADC_SetInterruptHandler *****************
 17769 ;; Defined at:
 17770 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17773 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 17774 ;; Auto vars:     Size  Location     Type
 17775 ;;		None
 17776 ;; Return value:  Size  Location     Type
 17777 ;;                  1    wreg      void 
 17778 ;; Registers used:
 17779 ;;		wreg
 17780 ;; Tracked objects:
 17781 ;;		On entry : 0/0
 17782 ;;		On exit  : 0/0
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17785 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17788 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17789 ;;Total ram usage:        2 bytes
 17790 ;; Hardware stack levels used: 1
 17791 ;; Hardware stack levels required when called: 5
 17792 ;; This function calls:
 17793 ;;		Nothing
 17794 ;; This function is called by:
 17795 ;;		_ADC_Initialize
 17796 ;;		_initAdcMultiplexer
 17797 ;; This function uses a non-reentrant model
 17798 ;;
 17799                           
 17800     1D51                     _ADC_SetInterruptHandler:	
 17801                           ;psect for function _ADC_SetInterruptHandler
 17802                           
 17803     1D51                     l4655:	
 17804                           ;incstack = 0
 17805                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 17806                           
 17807                           
 17808                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 17809     1D51  0021               	movlb	1	; select bank1
 17810     1D52  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17811     1D53  0022               	movlb	2	; select bank2
 17812     1D54  00DF               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 17813     1D55  0021               	movlb	1	; select bank1
 17814     1D56  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 17815     1D57  0022               	movlb	2	; select bank2
 17816     1D58  00DE               	movwf	_ADC_InterruptHandler^(0+256)
 17817     1D59                     l55:
 17818     1D59  0008               	return
 17819     1D5A                     __end_of_ADC_SetInterruptHandler:
 17820                           
 17821                           	psect	intentry
 17822     0004                     __pintentry:	
 17823 ;; *************** function _INTERRUPT_InterruptManager *****************
 17824 ;; Defined at:
 17825 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 17826 ;; Parameters:    Size  Location     Type
 17827 ;;		None
 17828 ;; Auto vars:     Size  Location     Type
 17829 ;;		None
 17830 ;; Return value:  Size  Location     Type
 17831 ;;                  1    wreg      void 
 17832 ;; Registers used:
 17833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17834 ;; Tracked objects:
 17835 ;;		On entry : 0/0
 17836 ;;		On exit  : 0/0
 17837 ;;		Unchanged: 0/0
 17838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17843 ;;Total ram usage:        0 bytes
 17844 ;; Hardware stack levels used: 1
 17845 ;; Hardware stack levels required when called: 4
 17846 ;; This function calls:
 17847 ;;		NULL
 17848 ;;		_ADC_ISR
 17849 ;;		_EUSART_ReceiveISR
 17850 ;;		_EUSART_TransmitISR
 17851 ;;		_TMR2_ISR
 17852 ;;		_TMR4_ISR
 17853 ;; This function is called by:
 17854 ;;		Interrupt level 1
 17855 ;; This function uses a non-reentrant model
 17856 ;;
 17857                           
 17858     0004                     _INTERRUPT_InterruptManager:
 17859                           
 17860                           ;incstack = 0
 17861     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17862                           
 17863                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17864     0005  3180               	pagesel	$
 17865     0006                     i1l6163:
 17866                           
 17867                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 17868     0006  1F0B               	btfss	11,6	;volatile
 17869     0007  2809               	goto	u732_21
 17870     0008  280A               	goto	u732_20
 17871     0009                     u732_21:
 17872     0009  2856               	goto	i1l244
 17873     000A                     u732_20:
 17874     000A                     i1l6165:
 17875                           
 17876                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17877     000A  0021               	movlb	1	; select bank1
 17878     000B  1E11               	btfss	17,4	;volatile
 17879     000C  280E               	goto	u733_21
 17880     000D  280F               	goto	u733_20
 17881     000E                     u733_21:
 17882     000E  281B               	goto	i1l233
 17883     000F                     u733_20:
 17884     000F                     i1l6167:
 17885     000F  0020               	movlb	0	; select bank0
 17886     0010  1E11               	btfss	17,4	;volatile
 17887     0011  2813               	goto	u734_21
 17888     0012  2814               	goto	u734_20
 17889     0013                     u734_21:
 17890     0013  281B               	goto	i1l233
 17891     0014                     u734_20:
 17892     0014                     i1l6169:
 17893                           
 17894                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 17895     0014  0022               	movlb	2	; select bank2
 17896     0015  085D               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 17897     0016  008A               	movwf	10
 17898     0017  085C               	movf	_EUSART_TxInterruptHandler^(0+256),w
 17899     0018  000A               	callw
 17900     0019  3180               	pagesel	$
 17901                           
 17902                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 17903     001A  2856               	goto	i1l244
 17904     001B                     i1l233:	
 17905                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 17906                           
 17907     001B  0021               	movlb	1	; select bank1
 17908     001C  1E91               	btfss	17,5	;volatile
 17909     001D  281F               	goto	u735_21
 17910     001E  2820               	goto	u735_20
 17911     001F                     u735_21:
 17912     001F  282C               	goto	i1l235
 17913     0020                     u735_20:
 17914     0020                     i1l6171:
 17915     0020  0020               	movlb	0	; select bank0
 17916     0021  1E91               	btfss	17,5	;volatile
 17917     0022  2824               	goto	u736_21
 17918     0023  2825               	goto	u736_20
 17919     0024                     u736_21:
 17920     0024  282C               	goto	i1l235
 17921     0025                     u736_20:
 17922     0025                     i1l6173:
 17923                           
 17924                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 17925     0025  0022               	movlb	2	; select bank2
 17926     0026  085B               	movf	(_EUSART_RxInterruptHandler+1)^(0+256),w
 17927     0027  008A               	movwf	10
 17928     0028  085A               	movf	_EUSART_RxInterruptHandler^(0+256),w
 17929     0029  000A               	callw
 17930     002A  3180               	pagesel	$
 17931                           
 17932                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 17933     002B  2856               	goto	i1l244
 17934     002C                     i1l235:	
 17935                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 17936                           
 17937     002C  0021               	movlb	1	; select bank1
 17938     002D  1C92               	btfss	18,1	;volatile
 17939     002E  2830               	goto	u737_21
 17940     002F  2831               	goto	u737_20
 17941     0030                     u737_21:
 17942     0030  283A               	goto	i1l237
 17943     0031                     u737_20:
 17944     0031                     i1l6175:
 17945     0031  0020               	movlb	0	; select bank0
 17946     0032  1C92               	btfss	18,1	;volatile
 17947     0033  2835               	goto	u738_21
 17948     0034  2836               	goto	u738_20
 17949     0035                     u738_21:
 17950     0035  283A               	goto	i1l237
 17951     0036                     u738_20:
 17952     0036                     i1l6177:
 17953                           
 17954                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 17955     0036  319E  2634  3180   	fcall	_TMR4_ISR
 17956                           
 17957                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 17958     0039  2856               	goto	i1l244
 17959     003A                     i1l237:	
 17960                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 17961                           
 17962     003A  0021               	movlb	1	; select bank1
 17963     003B  1C91               	btfss	17,1	;volatile
 17964     003C  283E               	goto	u739_21
 17965     003D  283F               	goto	u739_20
 17966     003E                     u739_21:
 17967     003E  2848               	goto	i1l239
 17968     003F                     u739_20:
 17969     003F                     i1l6179:
 17970     003F  0020               	movlb	0	; select bank0
 17971     0040  1C91               	btfss	17,1	;volatile
 17972     0041  2843               	goto	u740_21
 17973     0042  2844               	goto	u740_20
 17974     0043                     u740_21:
 17975     0043  2848               	goto	i1l239
 17976     0044                     u740_20:
 17977     0044                     i1l6181:
 17978                           
 17979                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 17980     0044  319E  2625  3180   	fcall	_TMR2_ISR
 17981                           
 17982                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 17983     0047  2856               	goto	i1l244
 17984     0048                     i1l239:	
 17985                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 17986                           
 17987     0048  0021               	movlb	1	; select bank1
 17988     0049  1F11               	btfss	17,6	;volatile
 17989     004A  284C               	goto	u741_21
 17990     004B  284D               	goto	u741_20
 17991     004C                     u741_21:
 17992     004C  2856               	goto	i1l238
 17993     004D                     u741_20:
 17994     004D                     i1l6183:
 17995     004D  0020               	movlb	0	; select bank0
 17996     004E  1F11               	btfss	17,6	;volatile
 17997     004F  2851               	goto	u742_21
 17998     0050  2852               	goto	u742_20
 17999     0051                     u742_21:
 18000     0051  2856               	goto	i1l238
 18001     0052                     u742_20:
 18002     0052                     i1l6185:
 18003                           
 18004                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 18005     0052  319E  2616  3180   	fcall	_ADC_ISR
 18006                           
 18007                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 18008     0055  2856               	goto	i1l244
 18009     0056                     i1l238:
 18010     0056                     i1l244:
 18011     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 18012     0057  0009               	retfie
 18013     0058                     __end_of_INTERRUPT_InterruptManager:
 18014                           
 18015                           	psect	text71
 18016     1E34                     __ptext71:	
 18017 ;; *************** function _TMR4_ISR *****************
 18018 ;; Defined at:
 18019 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 18020 ;; Parameters:    Size  Location     Type
 18021 ;;		None
 18022 ;; Auto vars:     Size  Location     Type
 18023 ;;		None
 18024 ;; Return value:  Size  Location     Type
 18025 ;;                  1    wreg      void 
 18026 ;; Registers used:
 18027 ;;		wreg, status,2, status,0, pclath, cstack
 18028 ;; Tracked objects:
 18029 ;;		On entry : 0/0
 18030 ;;		On exit  : 0/0
 18031 ;;		Unchanged: 0/0
 18032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18037 ;;Total ram usage:        0 bytes
 18038 ;; Hardware stack levels used: 1
 18039 ;; Hardware stack levels required when called: 3
 18040 ;; This function calls:
 18041 ;;		NULL
 18042 ;;		_TMR4_DefaultPeriodMatchCallback
 18043 ;;		_controller
 18044 ;; This function is called by:
 18045 ;;		_INTERRUPT_InterruptManager
 18046 ;; This function uses a non-reentrant model
 18047 ;;
 18048                           
 18049     1E34                     _TMR4_ISR:	
 18050                           ;psect for function _TMR4_ISR
 18051                           
 18052     1E34                     i1l6011:	
 18053                           ;incstack = 0
 18054                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 18055                           
 18056                           
 18057                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 18058     1E34  0022               	movlb	2	; select bank2
 18059     1E35  0856               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 18060     1E36  0457               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 18061     1E37  1903               	btfsc	3,2
 18062     1E38  2E3A               	goto	u714_21
 18063     1E39  2E3B               	goto	u714_20
 18064     1E3A                     u714_21:
 18065     1E3A  2E40               	goto	i1l6015
 18066     1E3B                     u714_20:
 18067     1E3B                     i1l6013:
 18068                           
 18069                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 18070     1E3B  0857               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 18071     1E3C  008A               	movwf	10
 18072     1E3D  0856               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 18073     1E3E  000A               	callw
 18074     1E3F  319E               	pagesel	$
 18075     1E40                     i1l6015:
 18076                           
 18077                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 18078     1E40  0020               	movlb	0	; select bank0
 18079     1E41  1092               	bcf	18,1	;volatile
 18080     1E42                     i1l491:
 18081     1E42  0008               	return
 18082     1E43                     __end_of_TMR4_ISR:
 18083                           
 18084                           	psect	text72
 18085     0003                     __ptext72:	
 18086 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 18087 ;; Defined at:
 18088 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 18089 ;; Parameters:    Size  Location     Type
 18090 ;;		None
 18091 ;; Auto vars:     Size  Location     Type
 18092 ;;		None
 18093 ;; Return value:  Size  Location     Type
 18094 ;;                  1    wreg      void 
 18095 ;; Registers used:
 18096 ;;		None
 18097 ;; Tracked objects:
 18098 ;;		On entry : 0/0
 18099 ;;		On exit  : 0/0
 18100 ;;		Unchanged: 0/0
 18101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18106 ;;Total ram usage:        0 bytes
 18107 ;; Hardware stack levels used: 1
 18108 ;; This function calls:
 18109 ;;		Nothing
 18110 ;; This function is called by:
 18111 ;;		_TMR4_Initialize
 18112 ;;		_TMR4_ISR
 18113 ;; This function uses a non-reentrant model
 18114 ;;
 18115                           
 18116     0003                     _TMR4_DefaultPeriodMatchCallback:	
 18117                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 18118                           
 18119     0003                     i1l497:	
 18120                           ;incstack = 0
 18121                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 18122                           
 18123     0003  0008               	return
 18124     0004                     __end_of_TMR4_DefaultPeriodMatchCallback:
 18125                           
 18126                           	psect	text73
 18127     09D6                     __ptext73:	
 18128 ;; *************** function _controller *****************
 18129 ;; Defined at:
 18130 ;;		line 13 in file "controller.c"
 18131 ;; Parameters:    Size  Location     Type
 18132 ;;		None
 18133 ;; Auto vars:     Size  Location     Type
 18134 ;;  error           2   51[BANK0 ] short 
 18135 ;;  I               2   49[BANK0 ] short 
 18136 ;;  P               2   47[BANK0 ] short 
 18137 ;; Return value:  Size  Location     Type
 18138 ;;                  1    wreg      void 
 18139 ;; Registers used:
 18140 ;;		wreg, status,2, status,0, pclath, cstack
 18141 ;; Tracked objects:
 18142 ;;		On entry : 0/0
 18143 ;;		On exit  : 0/0
 18144 ;;		Unchanged: 0/0
 18145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18147 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18149 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18150 ;;Total ram usage:        7 bytes
 18151 ;; Hardware stack levels used: 1
 18152 ;; Hardware stack levels required when called: 2
 18153 ;; This function calls:
 18154 ;;		___fltol
 18155 ;;		_getHoogtesensor
 18156 ;;		_pwm_fan_LoadDutyValue
 18157 ;;		i1___fladd
 18158 ;;		i1___flmul
 18159 ;;		i1___xxtofl
 18160 ;; This function is called by:
 18161 ;;		_main
 18162 ;;		_TMR4_ISR
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166     09D6                     _controller:	
 18167                           ;psect for function _controller
 18168                           
 18169     09D6                     i1l5975:	
 18170                           ;incstack = 0
 18171                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 18172                           
 18173                           
 18174                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 18175     09D6  319D  2539  3189   	fcall	_getHoogtesensor
 18176     09D9  0871               	movf	?_getHoogtesensor+1,w
 18177     09DA  0022               	movlb	2	; select bank2
 18178     09DB  00CB               	movwf	(_hoogte_bal+1)^(0+256)
 18179     09DC  0870               	movf	?_getHoogtesensor,w
 18180     09DD  00CA               	movwf	_hoogte_bal^(0+256)
 18181     09DE                     i1l5977:
 18182                           
 18183                           ;controller.c: 17:     int16_t error = setpoint - hoogte_bal;
 18184     09DE  084A               	movf	_hoogte_bal^(0+256),w
 18185     09DF  0268               	subwf	_setpoint^(0+256),w
 18186     09E0  0020               	movlb	0	; select bank0
 18187     09E1  00D3               	movwf	controller@error
 18188     09E2  0022               	movlb	2	; select bank2
 18189     09E3  084B               	movf	(_hoogte_bal+1)^(0+256),w
 18190     09E4  3B69               	subwfb	(_setpoint+1)^(0+256),w
 18191     09E5  0020               	movlb	0	; select bank0
 18192     09E6  00D4               	movwf	controller@error+1
 18193     09E7                     i1l5979:
 18194                           
 18195                           ;controller.c: 19:     integraal += error * 0.002;
 18196     09E7  0853               	movf	controller@error,w
 18197     09E8  00F0               	movwf	i1___xxtofl@val
 18198     09E9  0854               	movf	controller@error+1,w
 18199     09EA  00F1               	movwf	i1___xxtofl@val+1
 18200     09EB  0D89               	rlf	9,f
 18201     09EC  3B89               	subwfb	9,f
 18202     09ED  0989               	comf	9,f
 18203     09EE  00F2               	movwf	i1___xxtofl@val+2
 18204     09EF  00F3               	movwf	i1___xxtofl@val+3
 18205     09F0  3001               	movlw	1
 18206     09F1  3197  275C  3189   	fcall	i1___xxtofl
 18207     09F4  0873               	movf	?i1___xxtofl+3,w
 18208     09F5  0020               	movlb	0	; select bank0
 18209     09F6  00A7               	movwf	i1___flmul@a+3
 18210     09F7  0872               	movf	?i1___xxtofl+2,w
 18211     09F8  00A6               	movwf	i1___flmul@a+2
 18212     09F9  0871               	movf	?i1___xxtofl+1,w
 18213     09FA  00A5               	movwf	i1___flmul@a+1
 18214     09FB  0870               	movf	?i1___xxtofl,w
 18215     09FC  00A4               	movwf	i1___flmul@a
 18216     09FD  303B               	movlw	59
 18217     09FE  00A3               	movwf	i1___flmul@b+3
 18218     09FF  3003               	movlw	3
 18219     0A00  00A2               	movwf	i1___flmul@b+2
 18220     0A01  3012               	movlw	18
 18221     0A02  00A1               	movwf	i1___flmul@b+1
 18222     0A03  306F               	movlw	111
 18223     0A04  00A0               	movwf	i1___flmul@b
 18224     0A05  3182  22CC  3189   	fcall	i1___flmul
 18225     0A08  0020               	movlb	0	; select bank0
 18226     0A09  0823               	movf	?i1___flmul+3,w
 18227     0A0A  00BD               	movwf	i1___fladd@b+3
 18228     0A0B  0822               	movf	?i1___flmul+2,w
 18229     0A0C  00BC               	movwf	i1___fladd@b+2
 18230     0A0D  0821               	movf	?i1___flmul+1,w
 18231     0A0E  00BB               	movwf	i1___fladd@b+1
 18232     0A0F  0820               	movf	?i1___flmul,w
 18233     0A10  00BA               	movwf	i1___fladd@b
 18234     0A11  0022               	movlb	2	; select bank2
 18235     0A12  0843               	movf	(_integraal+3)^(0+256),w
 18236     0A13  0020               	movlb	0	; select bank0
 18237     0A14  00C1               	movwf	i1___fladd@a+3
 18238     0A15  0022               	movlb	2	; select bank2
 18239     0A16  0842               	movf	(_integraal+2)^(0+256),w
 18240     0A17  0020               	movlb	0	; select bank0
 18241     0A18  00C0               	movwf	i1___fladd@a+2
 18242     0A19  0022               	movlb	2	; select bank2
 18243     0A1A  0841               	movf	(_integraal+1)^(0+256),w
 18244     0A1B  0020               	movlb	0	; select bank0
 18245     0A1C  00BF               	movwf	i1___fladd@a+1
 18246     0A1D  0022               	movlb	2	; select bank2
 18247     0A1E  0840               	movf	_integraal^(0+256),w
 18248     0A1F  0020               	movlb	0	; select bank0
 18249     0A20  00BE               	movwf	i1___fladd@a
 18250     0A21  318D  25F4  3189   	fcall	i1___fladd
 18251     0A24  0020               	movlb	0	; select bank0
 18252     0A25  083D               	movf	?i1___fladd+3,w
 18253     0A26  0022               	movlb	2	; select bank2
 18254     0A27  00C3               	movwf	(_integraal+3)^(0+256)
 18255     0A28  0020               	movlb	0	; select bank0
 18256     0A29  083C               	movf	?i1___fladd+2,w
 18257     0A2A  0022               	movlb	2	; select bank2
 18258     0A2B  00C2               	movwf	(_integraal+2)^(0+256)
 18259     0A2C  0020               	movlb	0	; select bank0
 18260     0A2D  083B               	movf	?i1___fladd+1,w
 18261     0A2E  0022               	movlb	2	; select bank2
 18262     0A2F  00C1               	movwf	(_integraal+1)^(0+256)
 18263     0A30  0020               	movlb	0	; select bank0
 18264     0A31  083A               	movf	?i1___fladd,w
 18265     0A32  0022               	movlb	2	; select bank2
 18266     0A33  00C0               	movwf	_integraal^(0+256)
 18267     0A34                     i1l5981:
 18268                           
 18269                           ;controller.c: 21:     int16_t P = kp * error;
 18270     0A34  0020               	movlb	0	; select bank0
 18271     0A35  0853               	movf	controller@error,w
 18272     0A36  00F0               	movwf	i1___xxtofl@val
 18273     0A37  0854               	movf	controller@error+1,w
 18274     0A38  00F1               	movwf	i1___xxtofl@val+1
 18275     0A39  0D89               	rlf	9,f
 18276     0A3A  3B89               	subwfb	9,f
 18277     0A3B  0989               	comf	9,f
 18278     0A3C  00F2               	movwf	i1___xxtofl@val+2
 18279     0A3D  00F3               	movwf	i1___xxtofl@val+3
 18280     0A3E  3001               	movlw	1
 18281     0A3F  3197  275C  3189   	fcall	i1___xxtofl
 18282     0A42  0873               	movf	?i1___xxtofl+3,w
 18283     0A43  0020               	movlb	0	; select bank0
 18284     0A44  00A7               	movwf	i1___flmul@a+3
 18285     0A45  0872               	movf	?i1___xxtofl+2,w
 18286     0A46  00A6               	movwf	i1___flmul@a+2
 18287     0A47  0871               	movf	?i1___xxtofl+1,w
 18288     0A48  00A5               	movwf	i1___flmul@a+1
 18289     0A49  0870               	movf	?i1___xxtofl,w
 18290     0A4A  00A4               	movwf	i1___flmul@a
 18291     0A4B  0022               	movlb	2	; select bank2
 18292     0A4C  0867               	movf	(_kp+3)^(0+256),w
 18293     0A4D  0020               	movlb	0	; select bank0
 18294     0A4E  00A3               	movwf	i1___flmul@b+3
 18295     0A4F  0022               	movlb	2	; select bank2
 18296     0A50  0866               	movf	(_kp+2)^(0+256),w
 18297     0A51  0020               	movlb	0	; select bank0
 18298     0A52  00A2               	movwf	i1___flmul@b+2
 18299     0A53  0022               	movlb	2	; select bank2
 18300     0A54  0865               	movf	(_kp+1)^(0+256),w
 18301     0A55  0020               	movlb	0	; select bank0
 18302     0A56  00A1               	movwf	i1___flmul@b+1
 18303     0A57  0022               	movlb	2	; select bank2
 18304     0A58  0864               	movf	_kp^(0+256),w
 18305     0A59  0020               	movlb	0	; select bank0
 18306     0A5A  00A0               	movwf	i1___flmul@b
 18307     0A5B  3182  22CC  3189   	fcall	i1___flmul
 18308     0A5E  0020               	movlb	0	; select bank0
 18309     0A5F  0823               	movf	?i1___flmul+3,w
 18310     0A60  00BD               	movwf	___fltol@f1+3
 18311     0A61  0822               	movf	?i1___flmul+2,w
 18312     0A62  00BC               	movwf	___fltol@f1+2
 18313     0A63  0821               	movf	?i1___flmul+1,w
 18314     0A64  00BB               	movwf	___fltol@f1+1
 18315     0A65  0820               	movf	?i1___flmul,w
 18316     0A66  00BA               	movwf	___fltol@f1
 18317     0A67  3194  24F5  3189   	fcall	___fltol
 18318     0A6A  0020               	movlb	0	; select bank0
 18319     0A6B  083B               	movf	?___fltol+1,w
 18320     0A6C  00D0               	movwf	controller@P+1
 18321     0A6D  083A               	movf	?___fltol,w
 18322     0A6E  00CF               	movwf	controller@P
 18323     0A6F                     i1l5983:
 18324                           
 18325                           ;controller.c: 22:     int16_t I = ki * integraal;
 18326     0A6F  0022               	movlb	2	; select bank2
 18327     0A70  0863               	movf	(_ki+3)^(0+256),w
 18328     0A71  0020               	movlb	0	; select bank0
 18329     0A72  00A7               	movwf	i1___flmul@a+3
 18330     0A73  0022               	movlb	2	; select bank2
 18331     0A74  0862               	movf	(_ki+2)^(0+256),w
 18332     0A75  0020               	movlb	0	; select bank0
 18333     0A76  00A6               	movwf	i1___flmul@a+2
 18334     0A77  0022               	movlb	2	; select bank2
 18335     0A78  0861               	movf	(_ki+1)^(0+256),w
 18336     0A79  0020               	movlb	0	; select bank0
 18337     0A7A  00A5               	movwf	i1___flmul@a+1
 18338     0A7B  0022               	movlb	2	; select bank2
 18339     0A7C  0860               	movf	_ki^(0+256),w
 18340     0A7D  0020               	movlb	0	; select bank0
 18341     0A7E  00A4               	movwf	i1___flmul@a
 18342     0A7F  0022               	movlb	2	; select bank2
 18343     0A80  0843               	movf	(_integraal+3)^(0+256),w
 18344     0A81  0020               	movlb	0	; select bank0
 18345     0A82  00A3               	movwf	i1___flmul@b+3
 18346     0A83  0022               	movlb	2	; select bank2
 18347     0A84  0842               	movf	(_integraal+2)^(0+256),w
 18348     0A85  0020               	movlb	0	; select bank0
 18349     0A86  00A2               	movwf	i1___flmul@b+2
 18350     0A87  0022               	movlb	2	; select bank2
 18351     0A88  0841               	movf	(_integraal+1)^(0+256),w
 18352     0A89  0020               	movlb	0	; select bank0
 18353     0A8A  00A1               	movwf	i1___flmul@b+1
 18354     0A8B  0022               	movlb	2	; select bank2
 18355     0A8C  0840               	movf	_integraal^(0+256),w
 18356     0A8D  0020               	movlb	0	; select bank0
 18357     0A8E  00A0               	movwf	i1___flmul@b
 18358     0A8F  3182  22CC  3189   	fcall	i1___flmul
 18359     0A92  0020               	movlb	0	; select bank0
 18360     0A93  0823               	movf	?i1___flmul+3,w
 18361     0A94  00BD               	movwf	___fltol@f1+3
 18362     0A95  0822               	movf	?i1___flmul+2,w
 18363     0A96  00BC               	movwf	___fltol@f1+2
 18364     0A97  0821               	movf	?i1___flmul+1,w
 18365     0A98  00BB               	movwf	___fltol@f1+1
 18366     0A99  0820               	movf	?i1___flmul,w
 18367     0A9A  00BA               	movwf	___fltol@f1
 18368     0A9B  3194  24F5  3189   	fcall	___fltol
 18369     0A9E  0020               	movlb	0	; select bank0
 18370     0A9F  083B               	movf	?___fltol+1,w
 18371     0AA0  00D2               	movwf	controller@I+1
 18372     0AA1  083A               	movf	?___fltol,w
 18373     0AA2  00D1               	movwf	controller@I
 18374     0AA3                     i1l5985:
 18375                           
 18376                           ;controller.c: 24:     dutycycle = P + I;
 18377     0AA3  0851               	movf	controller@I,w
 18378     0AA4  074F               	addwf	controller@P,w
 18379     0AA5  00D7               	movwf	_dutycycle
 18380     0AA6  0852               	movf	controller@I+1,w
 18381     0AA7  3D50               	addwfc	controller@P+1,w
 18382     0AA8  00D8               	movwf	_dutycycle+1
 18383     0AA9                     i1l5987:
 18384                           
 18385                           ;controller.c: 26:     if (dutycycle > 1023 && error > 0) {
 18386     0AA9  3004               	movlw	4
 18387     0AAA  0258               	subwf	_dutycycle+1,w
 18388     0AAB  3000               	movlw	0
 18389     0AAC  1903               	skipnz
 18390     0AAD  0257               	subwf	_dutycycle,w
 18391     0AAE  1C03               	skipc
 18392     0AAF  2AB1               	goto	u709_21
 18393     0AB0  2AB2               	goto	u709_20
 18394     0AB1                     u709_21:
 18395     0AB1  2AC5               	goto	i1l5993
 18396     0AB2                     u709_20:
 18397     0AB2                     i1l5989:
 18398     0AB2  0854               	movf	controller@error+1,w
 18399     0AB3  3A80               	xorlw	128
 18400     0AB4  00CE               	movwf	??_controller
 18401     0AB5  3080               	movlw	128
 18402     0AB6  024E               	subwf	??_controller,w
 18403     0AB7  1D03               	skipz
 18404     0AB8  2ABB               	goto	u710_25
 18405     0AB9  3001               	movlw	1
 18406     0ABA  0253               	subwf	controller@error,w
 18407     0ABB                     u710_25:
 18408     0ABB  1C03               	skipc
 18409     0ABC  2ABE               	goto	u710_21
 18410     0ABD  2ABF               	goto	u710_20
 18411     0ABE                     u710_21:
 18412     0ABE  2AC5               	goto	i1l5993
 18413     0ABF                     u710_20:
 18414     0ABF                     i1l5991:
 18415                           
 18416                           ;controller.c: 27:         dutycycle = 1023;
 18417     0ABF  30FF               	movlw	255
 18418     0AC0  0020               	movlb	0	; select bank0
 18419     0AC1  00D7               	movwf	_dutycycle
 18420     0AC2  3003               	movlw	3
 18421     0AC3  00D8               	movwf	_dutycycle+1
 18422                           
 18423                           ;controller.c: 28:     } else if (dutycycle > 1023 && error < 0) {
 18424     0AC4  2AD6               	goto	i1l6001
 18425     0AC5                     i1l5993:
 18426     0AC5  3004               	movlw	4
 18427     0AC6  0020               	movlb	0	; select bank0
 18428     0AC7  0258               	subwf	_dutycycle+1,w
 18429     0AC8  3000               	movlw	0
 18430     0AC9  1903               	skipnz
 18431     0ACA  0257               	subwf	_dutycycle,w
 18432     0ACB  1C03               	skipc
 18433     0ACC  2ACE               	goto	u711_21
 18434     0ACD  2ACF               	goto	u711_20
 18435     0ACE                     u711_21:
 18436     0ACE  2AD6               	goto	i1l948
 18437     0ACF                     u711_20:
 18438     0ACF                     i1l5995:
 18439     0ACF  1FD4               	btfss	controller@error+1,7
 18440     0AD0  2AD2               	goto	u712_21
 18441     0AD1  2AD3               	goto	u712_20
 18442     0AD2                     u712_21:
 18443     0AD2  2AD6               	goto	i1l948
 18444     0AD3                     u712_20:
 18445     0AD3                     i1l5997:
 18446                           
 18447                           ;controller.c: 29:         dutycycle = 0;
 18448     0AD3  01D7               	clrf	_dutycycle
 18449     0AD4  01D8               	clrf	_dutycycle+1
 18450                           
 18451                           ;controller.c: 30:     } else if (dutycycle < 0) {
 18452     0AD5  2AD6               	goto	i1l6001
 18453     0AD6                     i1l948:
 18454     0AD6                     i1l6001:
 18455                           
 18456                           ;controller.c: 34:     pwm_fan_LoadDutyValue(dutycycle);
 18457     0AD6  0858               	movf	_dutycycle+1,w
 18458     0AD7  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 18459     0AD8  0857               	movf	_dutycycle,w
 18460     0AD9  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 18461     0ADA  319E  26FB  3189   	fcall	_pwm_fan_LoadDutyValue
 18462     0ADD                     i1l950:
 18463     0ADD  0008               	return
 18464     0ADE                     __end_of_controller:
 18465                           
 18466                           	psect	text74
 18467     175C                     __ptext74:	
 18468 ;; *************** function i1___xxtofl *****************
 18469 ;; Defined at:
 18470 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 18471 ;; Parameters:    Size  Location     Type
 18472 ;;  sign            1    wreg     unsigned char 
 18473 ;;  val             4    0[COMMON] long 
 18474 ;; Auto vars:     Size  Location     Type
 18475 ;;  sign            1    8[COMMON] unsigned char 
 18476 ;;  arg             4   10[COMMON] unsigned long 
 18477 ;;  exp             1    9[COMMON] unsigned char 
 18478 ;; Return value:  Size  Location     Type
 18479 ;;                  4    0[COMMON] unsigned char 
 18480 ;; Registers used:
 18481 ;;		wreg, status,2, status,0
 18482 ;; Tracked objects:
 18483 ;;		On entry : 0/0
 18484 ;;		On exit  : 0/0
 18485 ;;		Unchanged: 0/0
 18486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18488 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18490 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18491 ;;Total ram usage:       14 bytes
 18492 ;; Hardware stack levels used: 1
 18493 ;; This function calls:
 18494 ;;		Nothing
 18495 ;; This function is called by:
 18496 ;;		_controller
 18497 ;; This function uses a non-reentrant model
 18498 ;;
 18499                           
 18500     175C                     i1___xxtofl:	
 18501                           ;psect for function i1___xxtofl
 18502                           
 18503                           
 18504                           ;incstack = 0
 18505                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 18506                           ;i1___xxtofl@sign stored from wreg
 18507     175C  00F8               	movwf	i1___xxtofl@sign
 18508     175D                     i1l5623:
 18509     175D  0878               	movf	i1___xxtofl@sign,w
 18510     175E  1903               	btfsc	3,2
 18511     175F  2F61               	goto	u677_21
 18512     1760  2F62               	goto	u677_20
 18513     1761                     u677_21:
 18514     1761  2F76               	goto	i1l5629
 18515     1762                     u677_20:
 18516     1762                     i1l5625:
 18517     1762  1FF3               	btfss	i1___xxtofl@val+3,7
 18518     1763  2F65               	goto	u678_21
 18519     1764  2F66               	goto	u678_20
 18520     1765                     u678_21:
 18521     1765  2F76               	goto	i1l5629
 18522     1766                     u678_20:
 18523     1766                     i1l5627:
 18524     1766  0970               	comf	i1___xxtofl@val,w
 18525     1767  00FA               	movwf	i1___xxtofl@arg
 18526     1768  0971               	comf	i1___xxtofl@val+1,w
 18527     1769  00FB               	movwf	i1___xxtofl@arg+1
 18528     176A  0972               	comf	i1___xxtofl@val+2,w
 18529     176B  00FC               	movwf	i1___xxtofl@arg+2
 18530     176C  0973               	comf	i1___xxtofl@val+3,w
 18531     176D  00FD               	movwf	i1___xxtofl@arg+3
 18532     176E  0AFA               	incf	i1___xxtofl@arg,f
 18533     176F  1903               	skipnz
 18534     1770  0AFB               	incf	i1___xxtofl@arg+1,f
 18535     1771  1903               	skipnz
 18536     1772  0AFC               	incf	i1___xxtofl@arg+2,f
 18537     1773  1903               	skipnz
 18538     1774  0AFD               	incf	i1___xxtofl@arg+3,f
 18539     1775  2F7E               	goto	i1l1658
 18540     1776                     i1l5629:
 18541     1776  0873               	movf	i1___xxtofl@val+3,w
 18542     1777  00FD               	movwf	i1___xxtofl@arg+3
 18543     1778  0872               	movf	i1___xxtofl@val+2,w
 18544     1779  00FC               	movwf	i1___xxtofl@arg+2
 18545     177A  0871               	movf	i1___xxtofl@val+1,w
 18546     177B  00FB               	movwf	i1___xxtofl@arg+1
 18547     177C  0870               	movf	i1___xxtofl@val,w
 18548     177D  00FA               	movwf	i1___xxtofl@arg
 18549     177E                     i1l1658:
 18550     177E  0873               	movf	i1___xxtofl@val+3,w
 18551     177F  0472               	iorwf	i1___xxtofl@val+2,w
 18552     1780  0471               	iorwf	i1___xxtofl@val+1,w
 18553     1781  0470               	iorwf	i1___xxtofl@val,w
 18554     1782  1D03               	skipz
 18555     1783  2F85               	goto	u679_21
 18556     1784  2F86               	goto	u679_20
 18557     1785                     u679_21:
 18558     1785  2F8F               	goto	i1l1659
 18559     1786                     u679_20:
 18560     1786                     i1l5631:
 18561     1786  3000               	movlw	0
 18562     1787  00F3               	movwf	?i1___xxtofl+3
 18563     1788  3000               	movlw	0
 18564     1789  00F2               	movwf	?i1___xxtofl+2
 18565     178A  3000               	movlw	0
 18566     178B  00F1               	movwf	?i1___xxtofl+1
 18567     178C  3000               	movlw	0
 18568     178D  00F0               	movwf	?i1___xxtofl
 18569     178E  2FFF               	goto	i1l1660
 18570     178F                     i1l1659:
 18571     178F  3096               	movlw	150
 18572     1790  00F9               	movwf	i1___xxtofl@exp
 18573     1791  2F9B               	goto	i1l5637
 18574     1792                     i1l5635:
 18575     1792  3001               	movlw	1
 18576     1793  07F9               	addwf	i1___xxtofl@exp,f
 18577     1794  3001               	movlw	1
 18578     1795                     u680_25:
 18579     1795  36FD               	lsrf	i1___xxtofl@arg+3,f
 18580     1796  0CFC               	rrf	i1___xxtofl@arg+2,f
 18581     1797  0CFB               	rrf	i1___xxtofl@arg+1,f
 18582     1798  0CFA               	rrf	i1___xxtofl@arg,f
 18583     1799  0B89               	decfsz	9,f
 18584     179A  2F95               	goto	u680_25
 18585     179B                     i1l5637:
 18586     179B  30FE               	movlw	254
 18587     179C  057D               	andwf	i1___xxtofl@arg+3,w
 18588     179D  1D03               	btfss	3,2
 18589     179E  2FA0               	goto	u681_21
 18590     179F  2FA1               	goto	u681_20
 18591     17A0                     u681_21:
 18592     17A0  2F92               	goto	i1l5635
 18593     17A1                     u681_20:
 18594     17A1  2FB1               	goto	i1l5641
 18595     17A2                     i1l5639:
 18596     17A2  3001               	movlw	1
 18597     17A3  07F9               	addwf	i1___xxtofl@exp,f
 18598     17A4  3001               	movlw	1
 18599     17A5  07FA               	addwf	i1___xxtofl@arg,f
 18600     17A6  3000               	movlw	0
 18601     17A7  3DFB               	addwfc	i1___xxtofl@arg+1,f
 18602     17A8  3DFC               	addwfc	i1___xxtofl@arg+2,f
 18603     17A9  3DFD               	addwfc	i1___xxtofl@arg+3,f
 18604     17AA  3001               	movlw	1
 18605     17AB                     u682_25:
 18606     17AB  36FD               	lsrf	i1___xxtofl@arg+3,f
 18607     17AC  0CFC               	rrf	i1___xxtofl@arg+2,f
 18608     17AD  0CFB               	rrf	i1___xxtofl@arg+1,f
 18609     17AE  0CFA               	rrf	i1___xxtofl@arg,f
 18610     17AF  0B89               	decfsz	9,f
 18611     17B0  2FAB               	goto	u682_25
 18612     17B1                     i1l5641:
 18613     17B1  30FF               	movlw	255
 18614     17B2  057D               	andwf	i1___xxtofl@arg+3,w
 18615     17B3  1D03               	btfss	3,2
 18616     17B4  2FB6               	goto	u683_21
 18617     17B5  2FB7               	goto	u683_20
 18618     17B6                     u683_21:
 18619     17B6  2FA2               	goto	i1l5639
 18620     17B7                     u683_20:
 18621     17B7  2FC1               	goto	i1l5645
 18622     17B8                     i1l5643:
 18623     17B8  3001               	movlw	1
 18624     17B9  02F9               	subwf	i1___xxtofl@exp,f
 18625     17BA  3001               	movlw	1
 18626     17BB                     u684_25:
 18627     17BB  35FA               	lslf	i1___xxtofl@arg,f
 18628     17BC  0DFB               	rlf	i1___xxtofl@arg+1,f
 18629     17BD  0DFC               	rlf	i1___xxtofl@arg+2,f
 18630     17BE  0DFD               	rlf	i1___xxtofl@arg+3,f
 18631     17BF  0B89               	decfsz	9,f
 18632     17C0  2FBB               	goto	u684_25
 18633     17C1                     i1l5645:
 18634     17C1  1BFC               	btfsc	i1___xxtofl@arg+2,7
 18635     17C2  2FC4               	goto	u685_21
 18636     17C3  2FC5               	goto	u685_20
 18637     17C4                     u685_21:
 18638     17C4  2FCB               	goto	i1l1671
 18639     17C5                     u685_20:
 18640     17C5                     i1l5647:
 18641     17C5  3002               	movlw	2
 18642     17C6  0279               	subwf	i1___xxtofl@exp,w
 18643     17C7  1803               	skipnc
 18644     17C8  2FCA               	goto	u686_21
 18645     17C9  2FCB               	goto	u686_20
 18646     17CA                     u686_21:
 18647     17CA  2FB8               	goto	i1l5643
 18648     17CB                     u686_20:
 18649     17CB                     i1l1671:
 18650     17CB  1879               	btfsc	i1___xxtofl@exp,0
 18651     17CC  2FCE               	goto	u687_21
 18652     17CD  2FCF               	goto	u687_20
 18653     17CE                     u687_21:
 18654     17CE  2FD7               	goto	i1l1672
 18655     17CF                     u687_20:
 18656     17CF                     i1l5649:
 18657     17CF  30FF               	movlw	255
 18658     17D0  05FA               	andwf	i1___xxtofl@arg,f
 18659     17D1  30FF               	movlw	255
 18660     17D2  05FB               	andwf	i1___xxtofl@arg+1,f
 18661     17D3  307F               	movlw	127
 18662     17D4  05FC               	andwf	i1___xxtofl@arg+2,f
 18663     17D5  30FF               	movlw	255
 18664     17D6  05FD               	andwf	i1___xxtofl@arg+3,f
 18665     17D7                     i1l1672:
 18666     17D7  1003               	clrc
 18667     17D8  0CF9               	rrf	i1___xxtofl@exp,f
 18668     17D9                     i1l5651:
 18669     17D9  0879               	movf	i1___xxtofl@exp,w
 18670     17DA  00F4               	movwf	??i1___xxtofl
 18671     17DB  01F5               	clrf	??i1___xxtofl+1
 18672     17DC  01F6               	clrf	??i1___xxtofl+2
 18673     17DD  01F7               	clrf	??i1___xxtofl+3
 18674     17DE  3018               	movlw	24
 18675     17DF                     u688_25:
 18676     17DF  35F4               	lslf	??i1___xxtofl,f
 18677     17E0  0DF5               	rlf	??i1___xxtofl+1,f
 18678     17E1  0DF6               	rlf	??i1___xxtofl+2,f
 18679     17E2  0DF7               	rlf	??i1___xxtofl+3,f
 18680     17E3                     u688_20:
 18681     17E3  0B89               	decfsz	9,f
 18682     17E4  2FDF               	goto	u688_25
 18683     17E5  0874               	movf	??i1___xxtofl,w
 18684     17E6  04FA               	iorwf	i1___xxtofl@arg,f
 18685     17E7  0875               	movf	??i1___xxtofl+1,w
 18686     17E8  04FB               	iorwf	i1___xxtofl@arg+1,f
 18687     17E9  0876               	movf	??i1___xxtofl+2,w
 18688     17EA  04FC               	iorwf	i1___xxtofl@arg+2,f
 18689     17EB  0877               	movf	??i1___xxtofl+3,w
 18690     17EC  04FD               	iorwf	i1___xxtofl@arg+3,f
 18691     17ED                     i1l5653:
 18692     17ED  0878               	movf	i1___xxtofl@sign,w
 18693     17EE  1903               	btfsc	3,2
 18694     17EF  2FF1               	goto	u689_21
 18695     17F0  2FF2               	goto	u689_20
 18696     17F1                     u689_21:
 18697     17F1  2FF7               	goto	i1l5659
 18698     17F2                     u689_20:
 18699     17F2                     i1l5655:
 18700     17F2  1FF3               	btfss	i1___xxtofl@val+3,7
 18701     17F3  2FF5               	goto	u690_21
 18702     17F4  2FF6               	goto	u690_20
 18703     17F5                     u690_21:
 18704     17F5  2FF7               	goto	i1l5659
 18705     17F6                     u690_20:
 18706     17F6                     i1l5657:
 18707     17F6  17FD               	bsf	i1___xxtofl@arg+3,7
 18708     17F7                     i1l5659:
 18709     17F7  087D               	movf	i1___xxtofl@arg+3,w
 18710     17F8  00F3               	movwf	?i1___xxtofl+3
 18711     17F9  087C               	movf	i1___xxtofl@arg+2,w
 18712     17FA  00F2               	movwf	?i1___xxtofl+2
 18713     17FB  087B               	movf	i1___xxtofl@arg+1,w
 18714     17FC  00F1               	movwf	?i1___xxtofl+1
 18715     17FD  087A               	movf	i1___xxtofl@arg,w
 18716     17FE  00F0               	movwf	?i1___xxtofl
 18717     17FF                     i1l1660:
 18718     17FF  0008               	return
 18719     1800                     __end_ofi1___xxtofl:
 18720                           
 18721                           	psect	text75
 18722     02CC                     __ptext75:	
 18723 ;; *************** function i1___flmul *****************
 18724 ;; Defined at:
 18725 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;  b               4    0[BANK0 ] unsigned char 
 18728 ;;  a               4    4[BANK0 ] unsigned char 
 18729 ;; Auto vars:     Size  Location     Type
 18730 ;;  prod            4   20[BANK0 ] struct .
 18731 ;;  grs             4   14[BANK0 ] unsigned long 
 18732 ;;  temp            2   24[BANK0 ] struct .
 18733 ;;  bexp            1   19[BANK0 ] unsigned char 
 18734 ;;  aexp            1   18[BANK0 ] unsigned char 
 18735 ;;  sign            1   13[BANK0 ] unsigned char 
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  4    0[BANK0 ] unsigned char 
 18738 ;; Registers used:
 18739 ;;		wreg, status,2, status,0, pclath, cstack
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18745 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18746 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18747 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18748 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18749 ;;Total ram usage:       26 bytes
 18750 ;; Hardware stack levels used: 1
 18751 ;; Hardware stack levels required when called: 1
 18752 ;; This function calls:
 18753 ;;		i1__Umul8_16
 18754 ;; This function is called by:
 18755 ;;		_controller
 18756 ;; This function uses a non-reentrant model
 18757 ;;
 18758                           
 18759     02CC                     i1___flmul:	
 18760                           ;psect for function i1___flmul
 18761                           
 18762     02CC                     i1l5483:	
 18763                           ;incstack = 0
 18764                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 18765                           
 18766     02CC  0020               	movlb	0	; select bank0
 18767     02CD  0823               	movf	i1___flmul@b+3,w
 18768     02CE  3980               	andlw	128
 18769     02CF  00AD               	movwf	i1___flmul@sign
 18770     02D0                     i1l5485:
 18771     02D0  3523               	lslf	i1___flmul@b+3,w
 18772     02D1  00B3               	movwf	i1___flmul@bexp
 18773     02D2                     i1l5487:
 18774     02D2  1FA2               	btfss	i1___flmul@b+2,7
 18775     02D3  2AD5               	goto	u650_21
 18776     02D4  2AD6               	goto	u650_20
 18777     02D5                     u650_21:
 18778     02D5  2AD7               	goto	i1l5491
 18779     02D6                     u650_20:
 18780     02D6                     i1l5489:
 18781     02D6  1433               	bsf	i1___flmul@bexp,0
 18782     02D7                     i1l5491:
 18783     02D7  0833               	movf	i1___flmul@bexp,w
 18784     02D8  1903               	btfsc	3,2
 18785     02D9  2ADB               	goto	u651_21
 18786     02DA  2ADC               	goto	u651_20
 18787     02DB                     u651_21:
 18788     02DB  2AEB               	goto	i1l5499
 18789     02DC                     u651_20:
 18790     02DC                     i1l5493:
 18791     02DC  0A33               	incf	i1___flmul@bexp,w
 18792     02DD  1D03               	btfss	3,2
 18793     02DE  2AE0               	goto	u652_21
 18794     02DF  2AE1               	goto	u652_20
 18795     02E0                     u652_21:
 18796     02E0  2AE9               	goto	i1l5497
 18797     02E1                     u652_20:
 18798     02E1                     i1l5495:
 18799     02E1  3000               	movlw	0
 18800     02E2  00A3               	movwf	i1___flmul@b+3
 18801     02E3  3000               	movlw	0
 18802     02E4  00A2               	movwf	i1___flmul@b+2
 18803     02E5  3000               	movlw	0
 18804     02E6  00A1               	movwf	i1___flmul@b+1
 18805     02E7  3000               	movlw	0
 18806     02E8  00A0               	movwf	i1___flmul@b
 18807     02E9                     i1l5497:
 18808     02E9  17A2               	bsf	i1___flmul@b+2,7
 18809     02EA  2AF3               	goto	i1l5501
 18810     02EB                     i1l5499:
 18811     02EB  3000               	movlw	0
 18812     02EC  00A3               	movwf	i1___flmul@b+3
 18813     02ED  3000               	movlw	0
 18814     02EE  00A2               	movwf	i1___flmul@b+2
 18815     02EF  3000               	movlw	0
 18816     02F0  00A1               	movwf	i1___flmul@b+1
 18817     02F1  3000               	movlw	0
 18818     02F2  00A0               	movwf	i1___flmul@b
 18819     02F3                     i1l5501:
 18820     02F3  0827               	movf	i1___flmul@a+3,w
 18821     02F4  3980               	andlw	128
 18822     02F5  06AD               	xorwf	i1___flmul@sign,f
 18823     02F6                     i1l5503:
 18824     02F6  3527               	lslf	i1___flmul@a+3,w
 18825     02F7  00B2               	movwf	i1___flmul@aexp
 18826     02F8                     i1l5505:
 18827     02F8  1FA6               	btfss	i1___flmul@a+2,7
 18828     02F9  2AFB               	goto	u653_21
 18829     02FA  2AFC               	goto	u653_20
 18830     02FB                     u653_21:
 18831     02FB  2AFD               	goto	i1l5509
 18832     02FC                     u653_20:
 18833     02FC                     i1l5507:
 18834     02FC  1432               	bsf	i1___flmul@aexp,0
 18835     02FD                     i1l5509:
 18836     02FD  0832               	movf	i1___flmul@aexp,w
 18837     02FE  1903               	btfsc	3,2
 18838     02FF  2B01               	goto	u654_21
 18839     0300  2B02               	goto	u654_20
 18840     0301                     u654_21:
 18841     0301  2B11               	goto	i1l5517
 18842     0302                     u654_20:
 18843     0302                     i1l5511:
 18844     0302  0A32               	incf	i1___flmul@aexp,w
 18845     0303  1D03               	btfss	3,2
 18846     0304  2B06               	goto	u655_21
 18847     0305  2B07               	goto	u655_20
 18848     0306                     u655_21:
 18849     0306  2B0F               	goto	i1l5515
 18850     0307                     u655_20:
 18851     0307                     i1l5513:
 18852     0307  3000               	movlw	0
 18853     0308  00A7               	movwf	i1___flmul@a+3
 18854     0309  3000               	movlw	0
 18855     030A  00A6               	movwf	i1___flmul@a+2
 18856     030B  3000               	movlw	0
 18857     030C  00A5               	movwf	i1___flmul@a+1
 18858     030D  3000               	movlw	0
 18859     030E  00A4               	movwf	i1___flmul@a
 18860     030F                     i1l5515:
 18861     030F  17A6               	bsf	i1___flmul@a+2,7
 18862     0310  2B19               	goto	i1l5519
 18863     0311                     i1l5517:
 18864     0311  3000               	movlw	0
 18865     0312  00A7               	movwf	i1___flmul@a+3
 18866     0313  3000               	movlw	0
 18867     0314  00A6               	movwf	i1___flmul@a+2
 18868     0315  3000               	movlw	0
 18869     0316  00A5               	movwf	i1___flmul@a+1
 18870     0317  3000               	movlw	0
 18871     0318  00A4               	movwf	i1___flmul@a
 18872     0319                     i1l5519:
 18873     0319  0832               	movf	i1___flmul@aexp,w
 18874     031A  1903               	btfsc	3,2
 18875     031B  2B1D               	goto	u656_21
 18876     031C  2B1E               	goto	u656_20
 18877     031D                     u656_21:
 18878     031D  2B23               	goto	i1l5523
 18879     031E                     u656_20:
 18880     031E                     i1l5521:
 18881     031E  0833               	movf	i1___flmul@bexp,w
 18882     031F  1D03               	btfss	3,2
 18883     0320  2B22               	goto	u657_21
 18884     0321  2B23               	goto	u657_20
 18885     0322                     u657_21:
 18886     0322  2B2C               	goto	i1l5527
 18887     0323                     u657_20:
 18888     0323                     i1l5523:
 18889     0323  3000               	movlw	0
 18890     0324  00A3               	movwf	?i1___flmul+3
 18891     0325  3000               	movlw	0
 18892     0326  00A2               	movwf	?i1___flmul+2
 18893     0327  3000               	movlw	0
 18894     0328  00A1               	movwf	?i1___flmul+1
 18895     0329  3000               	movlw	0
 18896     032A  00A0               	movwf	?i1___flmul
 18897     032B  2D06               	goto	i1l1614
 18898     032C                     i1l5527:
 18899     032C  0820               	movf	i1___flmul@b,w
 18900     032D  00F0               	movwf	i1__Umul8_16@multiplicand
 18901     032E  0826               	movf	i1___flmul@a+2,w
 18902     032F  3190  201B  3182   	fcall	i1__Umul8_16
 18903     0332  0871               	movf	?i1__Umul8_16+1,w
 18904     0333  0020               	movlb	0	; select bank0
 18905     0334  00B9               	movwf	i1___flmul@temp+1
 18906     0335  0870               	movf	?i1__Umul8_16,w
 18907     0336  00B8               	movwf	i1___flmul@temp
 18908     0337                     i1l5529:
 18909     0337  0838               	movf	i1___flmul@temp,w
 18910     0338  00A8               	movwf	??i1___flmul
 18911     0339  01A9               	clrf	??i1___flmul+1
 18912     033A  01AA               	clrf	??i1___flmul+2
 18913     033B  01AB               	clrf	??i1___flmul+3
 18914     033C  082B               	movf	??i1___flmul+3,w
 18915     033D  00B1               	movwf	i1___flmul@grs+3
 18916     033E  082A               	movf	??i1___flmul+2,w
 18917     033F  00B0               	movwf	i1___flmul@grs+2
 18918     0340  0829               	movf	??i1___flmul+1,w
 18919     0341  00AF               	movwf	i1___flmul@grs+1
 18920     0342  0828               	movf	??i1___flmul,w
 18921     0343  00AE               	movwf	i1___flmul@grs
 18922     0344                     i1l5531:
 18923     0344  0839               	movf	i1___flmul@temp+1,w
 18924     0345  00A8               	movwf	??i1___flmul
 18925     0346  01A9               	clrf	??i1___flmul+1
 18926     0347  01AA               	clrf	??i1___flmul+2
 18927     0348  01AB               	clrf	??i1___flmul+3
 18928     0349  082B               	movf	??i1___flmul+3,w
 18929     034A  00B7               	movwf	i1___flmul@prod+3
 18930     034B  082A               	movf	??i1___flmul+2,w
 18931     034C  00B6               	movwf	i1___flmul@prod+2
 18932     034D  0829               	movf	??i1___flmul+1,w
 18933     034E  00B5               	movwf	i1___flmul@prod+1
 18934     034F  0828               	movf	??i1___flmul,w
 18935     0350  00B4               	movwf	i1___flmul@prod
 18936     0351  0821               	movf	i1___flmul@b+1,w
 18937     0352  00F0               	movwf	i1__Umul8_16@multiplicand
 18938     0353  0825               	movf	i1___flmul@a+1,w
 18939     0354  3190  201B  3182   	fcall	i1__Umul8_16
 18940     0357  0871               	movf	?i1__Umul8_16+1,w
 18941     0358  0020               	movlb	0	; select bank0
 18942     0359  00B9               	movwf	i1___flmul@temp+1
 18943     035A  0870               	movf	?i1__Umul8_16,w
 18944     035B  00B8               	movwf	i1___flmul@temp
 18945     035C                     i1l5533:
 18946     035C  0838               	movf	i1___flmul@temp,w
 18947     035D  00A8               	movwf	??i1___flmul
 18948     035E  01A9               	clrf	??i1___flmul+1
 18949     035F  01AA               	clrf	??i1___flmul+2
 18950     0360  01AB               	clrf	??i1___flmul+3
 18951     0361  0828               	movf	??i1___flmul,w
 18952     0362  07AE               	addwf	i1___flmul@grs,f
 18953     0363  0829               	movf	??i1___flmul+1,w
 18954     0364  3DAF               	addwfc	i1___flmul@grs+1,f
 18955     0365  082A               	movf	??i1___flmul+2,w
 18956     0366  3DB0               	addwfc	i1___flmul@grs+2,f
 18957     0367  082B               	movf	??i1___flmul+3,w
 18958     0368  3DB1               	addwfc	i1___flmul@grs+3,f
 18959     0369                     i1l5535:
 18960     0369  0839               	movf	i1___flmul@temp+1,w
 18961     036A  00A8               	movwf	??i1___flmul
 18962     036B  01A9               	clrf	??i1___flmul+1
 18963     036C  01AA               	clrf	??i1___flmul+2
 18964     036D  01AB               	clrf	??i1___flmul+3
 18965     036E  0828               	movf	??i1___flmul,w
 18966     036F  07B4               	addwf	i1___flmul@prod,f
 18967     0370  0829               	movf	??i1___flmul+1,w
 18968     0371  3DB5               	addwfc	i1___flmul@prod+1,f
 18969     0372  082A               	movf	??i1___flmul+2,w
 18970     0373  3DB6               	addwfc	i1___flmul@prod+2,f
 18971     0374  082B               	movf	??i1___flmul+3,w
 18972     0375  3DB7               	addwfc	i1___flmul@prod+3,f
 18973     0376  0822               	movf	i1___flmul@b+2,w
 18974     0377  00F0               	movwf	i1__Umul8_16@multiplicand
 18975     0378  0824               	movf	i1___flmul@a,w
 18976     0379  3190  201B  3182   	fcall	i1__Umul8_16
 18977     037C  0871               	movf	?i1__Umul8_16+1,w
 18978     037D  0020               	movlb	0	; select bank0
 18979     037E  00B9               	movwf	i1___flmul@temp+1
 18980     037F  0870               	movf	?i1__Umul8_16,w
 18981     0380  00B8               	movwf	i1___flmul@temp
 18982     0381                     i1l5537:
 18983     0381  0838               	movf	i1___flmul@temp,w
 18984     0382  00A8               	movwf	??i1___flmul
 18985     0383  01A9               	clrf	??i1___flmul+1
 18986     0384  01AA               	clrf	??i1___flmul+2
 18987     0385  01AB               	clrf	??i1___flmul+3
 18988     0386  0828               	movf	??i1___flmul,w
 18989     0387  07AE               	addwf	i1___flmul@grs,f
 18990     0388  0829               	movf	??i1___flmul+1,w
 18991     0389  3DAF               	addwfc	i1___flmul@grs+1,f
 18992     038A  082A               	movf	??i1___flmul+2,w
 18993     038B  3DB0               	addwfc	i1___flmul@grs+2,f
 18994     038C  082B               	movf	??i1___flmul+3,w
 18995     038D  3DB1               	addwfc	i1___flmul@grs+3,f
 18996     038E                     i1l5539:
 18997     038E  0839               	movf	i1___flmul@temp+1,w
 18998     038F  00A8               	movwf	??i1___flmul
 18999     0390  01A9               	clrf	??i1___flmul+1
 19000     0391  01AA               	clrf	??i1___flmul+2
 19001     0392  01AB               	clrf	??i1___flmul+3
 19002     0393  0828               	movf	??i1___flmul,w
 19003     0394  07B4               	addwf	i1___flmul@prod,f
 19004     0395  0829               	movf	??i1___flmul+1,w
 19005     0396  3DB5               	addwfc	i1___flmul@prod+1,f
 19006     0397  082A               	movf	??i1___flmul+2,w
 19007     0398  3DB6               	addwfc	i1___flmul@prod+2,f
 19008     0399  082B               	movf	??i1___flmul+3,w
 19009     039A  3DB7               	addwfc	i1___flmul@prod+3,f
 19010     039B                     i1l5541:
 19011     039B  3008               	movlw	8
 19012     039C                     u658_25:
 19013     039C  35AE               	lslf	i1___flmul@grs,f
 19014     039D  0DAF               	rlf	i1___flmul@grs+1,f
 19015     039E  0DB0               	rlf	i1___flmul@grs+2,f
 19016     039F  0DB1               	rlf	i1___flmul@grs+3,f
 19017     03A0  0B89               	decfsz	9,f
 19018     03A1  2B9C               	goto	u658_25
 19019     03A2                     i1l5543:
 19020     03A2  0821               	movf	i1___flmul@b+1,w
 19021     03A3  00F0               	movwf	i1__Umul8_16@multiplicand
 19022     03A4  0824               	movf	i1___flmul@a,w
 19023     03A5  3190  201B  3182   	fcall	i1__Umul8_16
 19024     03A8  0871               	movf	?i1__Umul8_16+1,w
 19025     03A9  0020               	movlb	0	; select bank0
 19026     03AA  00B9               	movwf	i1___flmul@temp+1
 19027     03AB  0870               	movf	?i1__Umul8_16,w
 19028     03AC  00B8               	movwf	i1___flmul@temp
 19029     03AD                     i1l5545:
 19030     03AD  0838               	movf	i1___flmul@temp,w
 19031     03AE  07AE               	addwf	i1___flmul@grs,f
 19032     03AF  0839               	movf	i1___flmul@temp+1,w
 19033     03B0  3DAF               	addwfc	i1___flmul@grs+1,f
 19034     03B1  3000               	movlw	0
 19035     03B2  3DB0               	addwfc	i1___flmul@grs+2,f
 19036     03B3  3DB1               	addwfc	i1___flmul@grs+3,f
 19037     03B4                     i1l5547:
 19038     03B4  0820               	movf	i1___flmul@b,w
 19039     03B5  00F0               	movwf	i1__Umul8_16@multiplicand
 19040     03B6  0825               	movf	i1___flmul@a+1,w
 19041     03B7  3190  201B  3182   	fcall	i1__Umul8_16
 19042     03BA  0871               	movf	?i1__Umul8_16+1,w
 19043     03BB  0020               	movlb	0	; select bank0
 19044     03BC  00B9               	movwf	i1___flmul@temp+1
 19045     03BD  0870               	movf	?i1__Umul8_16,w
 19046     03BE  00B8               	movwf	i1___flmul@temp
 19047     03BF                     i1l5549:
 19048     03BF  0838               	movf	i1___flmul@temp,w
 19049     03C0  07AE               	addwf	i1___flmul@grs,f
 19050     03C1  0839               	movf	i1___flmul@temp+1,w
 19051     03C2  3DAF               	addwfc	i1___flmul@grs+1,f
 19052     03C3  3000               	movlw	0
 19053     03C4  3DB0               	addwfc	i1___flmul@grs+2,f
 19054     03C5  3DB1               	addwfc	i1___flmul@grs+3,f
 19055     03C6                     i1l5551:
 19056     03C6  3008               	movlw	8
 19057     03C7                     u659_25:
 19058     03C7  35AE               	lslf	i1___flmul@grs,f
 19059     03C8  0DAF               	rlf	i1___flmul@grs+1,f
 19060     03C9  0DB0               	rlf	i1___flmul@grs+2,f
 19061     03CA  0DB1               	rlf	i1___flmul@grs+3,f
 19062     03CB  0B89               	decfsz	9,f
 19063     03CC  2BC7               	goto	u659_25
 19064     03CD  0820               	movf	i1___flmul@b,w
 19065     03CE  00F0               	movwf	i1__Umul8_16@multiplicand
 19066     03CF  0824               	movf	i1___flmul@a,w
 19067     03D0  3190  201B  3182   	fcall	i1__Umul8_16
 19068     03D3  0871               	movf	?i1__Umul8_16+1,w
 19069     03D4  0020               	movlb	0	; select bank0
 19070     03D5  00B9               	movwf	i1___flmul@temp+1
 19071     03D6  0870               	movf	?i1__Umul8_16,w
 19072     03D7  00B8               	movwf	i1___flmul@temp
 19073     03D8                     i1l5553:
 19074     03D8  0838               	movf	i1___flmul@temp,w
 19075     03D9  07AE               	addwf	i1___flmul@grs,f
 19076     03DA  0839               	movf	i1___flmul@temp+1,w
 19077     03DB  3DAF               	addwfc	i1___flmul@grs+1,f
 19078     03DC  3000               	movlw	0
 19079     03DD  3DB0               	addwfc	i1___flmul@grs+2,f
 19080     03DE  3DB1               	addwfc	i1___flmul@grs+3,f
 19081     03DF                     i1l5555:
 19082     03DF  0821               	movf	i1___flmul@b+1,w
 19083     03E0  00F0               	movwf	i1__Umul8_16@multiplicand
 19084     03E1  0826               	movf	i1___flmul@a+2,w
 19085     03E2  3190  201B  3182   	fcall	i1__Umul8_16
 19086     03E5  0871               	movf	?i1__Umul8_16+1,w
 19087     03E6  0020               	movlb	0	; select bank0
 19088     03E7  00B9               	movwf	i1___flmul@temp+1
 19089     03E8  0870               	movf	?i1__Umul8_16,w
 19090     03E9  00B8               	movwf	i1___flmul@temp
 19091     03EA  0838               	movf	i1___flmul@temp,w
 19092     03EB  07B4               	addwf	i1___flmul@prod,f
 19093     03EC  0839               	movf	i1___flmul@temp+1,w
 19094     03ED  3DB5               	addwfc	i1___flmul@prod+1,f
 19095     03EE  3000               	movlw	0
 19096     03EF  3DB6               	addwfc	i1___flmul@prod+2,f
 19097     03F0  3DB7               	addwfc	i1___flmul@prod+3,f
 19098     03F1                     i1l5557:
 19099     03F1  0822               	movf	i1___flmul@b+2,w
 19100     03F2  00F0               	movwf	i1__Umul8_16@multiplicand
 19101     03F3  0825               	movf	i1___flmul@a+1,w
 19102     03F4  3190  201B  3182   	fcall	i1__Umul8_16
 19103     03F7  0871               	movf	?i1__Umul8_16+1,w
 19104     03F8  0020               	movlb	0	; select bank0
 19105     03F9  00B9               	movwf	i1___flmul@temp+1
 19106     03FA  0870               	movf	?i1__Umul8_16,w
 19107     03FB  00B8               	movwf	i1___flmul@temp
 19108     03FC                     i1l5559:
 19109     03FC  0838               	movf	i1___flmul@temp,w
 19110     03FD  07B4               	addwf	i1___flmul@prod,f
 19111     03FE  0839               	movf	i1___flmul@temp+1,w
 19112     03FF  3DB5               	addwfc	i1___flmul@prod+1,f
 19113     0400  3000               	movlw	0
 19114     0401  3DB6               	addwfc	i1___flmul@prod+2,f
 19115     0402  3DB7               	addwfc	i1___flmul@prod+3,f
 19116     0403  0822               	movf	i1___flmul@b+2,w
 19117     0404  00F0               	movwf	i1__Umul8_16@multiplicand
 19118     0405  0826               	movf	i1___flmul@a+2,w
 19119     0406  3190  201B  3182   	fcall	i1__Umul8_16
 19120     0409  0871               	movf	?i1__Umul8_16+1,w
 19121     040A  0020               	movlb	0	; select bank0
 19122     040B  00B9               	movwf	i1___flmul@temp+1
 19123     040C  0870               	movf	?i1__Umul8_16,w
 19124     040D  00B8               	movwf	i1___flmul@temp
 19125     040E                     i1l5561:
 19126     040E  0838               	movf	i1___flmul@temp,w
 19127     040F  00A8               	movwf	??i1___flmul
 19128     0410  0839               	movf	i1___flmul@temp+1,w
 19129     0411  00A9               	movwf	??i1___flmul+1
 19130     0412  01AA               	clrf	??i1___flmul+2
 19131     0413  01AB               	clrf	??i1___flmul+3
 19132     0414  3008               	movlw	8
 19133     0415                     u660_25:
 19134     0415  35A8               	lslf	??i1___flmul,f
 19135     0416  0DA9               	rlf	??i1___flmul+1,f
 19136     0417  0DAA               	rlf	??i1___flmul+2,f
 19137     0418  0DAB               	rlf	??i1___flmul+3,f
 19138     0419                     u660_20:
 19139     0419  0B89               	decfsz	9,f
 19140     041A  2C15               	goto	u660_25
 19141     041B  0828               	movf	??i1___flmul,w
 19142     041C  07B4               	addwf	i1___flmul@prod,f
 19143     041D  0829               	movf	??i1___flmul+1,w
 19144     041E  3DB5               	addwfc	i1___flmul@prod+1,f
 19145     041F  082A               	movf	??i1___flmul+2,w
 19146     0420  3DB6               	addwfc	i1___flmul@prod+2,f
 19147     0421  082B               	movf	??i1___flmul+3,w
 19148     0422  3DB7               	addwfc	i1___flmul@prod+3,f
 19149     0423                     i1l5563:
 19150     0423  082E               	movf	i1___flmul@grs,w
 19151     0424  00A8               	movwf	??i1___flmul
 19152     0425  082F               	movf	i1___flmul@grs+1,w
 19153     0426  00A9               	movwf	??i1___flmul+1
 19154     0427  0830               	movf	i1___flmul@grs+2,w
 19155     0428  00AA               	movwf	??i1___flmul+2
 19156     0429  0831               	movf	i1___flmul@grs+3,w
 19157     042A  00AB               	movwf	??i1___flmul+3
 19158     042B  3018               	movlw	24
 19159     042C                     u661_25:
 19160     042C  36AB               	lsrf	??i1___flmul+3,f
 19161     042D  0CAA               	rrf	??i1___flmul+2,f
 19162     042E  0CA9               	rrf	??i1___flmul+1,f
 19163     042F  0CA8               	rrf	??i1___flmul,f
 19164     0430                     u661_20:
 19165     0430  0B89               	decfsz	9,f
 19166     0431  2C2C               	goto	u661_25
 19167     0432  0828               	movf	??i1___flmul,w
 19168     0433  07B4               	addwf	i1___flmul@prod,f
 19169     0434  0829               	movf	??i1___flmul+1,w
 19170     0435  3DB5               	addwfc	i1___flmul@prod+1,f
 19171     0436  082A               	movf	??i1___flmul+2,w
 19172     0437  3DB6               	addwfc	i1___flmul@prod+2,f
 19173     0438  082B               	movf	??i1___flmul+3,w
 19174     0439  3DB7               	addwfc	i1___flmul@prod+3,f
 19175     043A                     i1l5565:
 19176     043A  3008               	movlw	8
 19177     043B                     u662_25:
 19178     043B  35AE               	lslf	i1___flmul@grs,f
 19179     043C  0DAF               	rlf	i1___flmul@grs+1,f
 19180     043D  0DB0               	rlf	i1___flmul@grs+2,f
 19181     043E  0DB1               	rlf	i1___flmul@grs+3,f
 19182     043F  0B89               	decfsz	9,f
 19183     0440  2C3B               	goto	u662_25
 19184     0441                     i1l5567:
 19185     0441  0833               	movf	i1___flmul@bexp,w
 19186     0442  0732               	addwf	i1___flmul@aexp,w
 19187     0443  00A8               	movwf	??i1___flmul
 19188     0444  01A9               	clrf	??i1___flmul+1
 19189     0445  0DA9               	rlf	??i1___flmul+1,f
 19190     0446  0828               	movf	??i1___flmul,w
 19191     0447  3E82               	addlw	130
 19192     0448  00B8               	movwf	i1___flmul@temp
 19193     0449  30FF               	movlw	255
 19194     044A  3D29               	addwfc	??i1___flmul+1,w
 19195     044B  00B9               	movwf	i1___flmul@temp+1
 19196     044C  2C64               	goto	i1l5579
 19197     044D                     i1l5569:
 19198     044D  3001               	movlw	1
 19199     044E                     u663_25:
 19200     044E  35B4               	lslf	i1___flmul@prod,f
 19201     044F  0DB5               	rlf	i1___flmul@prod+1,f
 19202     0450  0DB6               	rlf	i1___flmul@prod+2,f
 19203     0451  0DB7               	rlf	i1___flmul@prod+3,f
 19204     0452  0B89               	decfsz	9,f
 19205     0453  2C4E               	goto	u663_25
 19206     0454                     i1l5571:
 19207     0454  1FB1               	btfss	i1___flmul@grs+3,7
 19208     0455  2C57               	goto	u664_21
 19209     0456  2C58               	goto	u664_20
 19210     0457                     u664_21:
 19211     0457  2C59               	goto	i1l5575
 19212     0458                     u664_20:
 19213     0458                     i1l5573:
 19214     0458  1434               	bsf	i1___flmul@prod,0
 19215     0459                     i1l5575:
 19216     0459  3001               	movlw	1
 19217     045A                     u665_25:
 19218     045A  35AE               	lslf	i1___flmul@grs,f
 19219     045B  0DAF               	rlf	i1___flmul@grs+1,f
 19220     045C  0DB0               	rlf	i1___flmul@grs+2,f
 19221     045D  0DB1               	rlf	i1___flmul@grs+3,f
 19222     045E  0B89               	decfsz	9,f
 19223     045F  2C5A               	goto	u665_25
 19224     0460                     i1l5577:
 19225     0460  30FF               	movlw	255
 19226     0461  07B8               	addwf	i1___flmul@temp,f
 19227     0462  30FF               	movlw	255
 19228     0463  3DB9               	addwfc	i1___flmul@temp+1,f
 19229     0464                     i1l5579:
 19230     0464  1FB6               	btfss	i1___flmul@prod+2,7
 19231     0465  2C67               	goto	u666_21
 19232     0466  2C68               	goto	u666_20
 19233     0467                     u666_21:
 19234     0467  2C4D               	goto	i1l5569
 19235     0468                     u666_20:
 19236     0468                     i1l5581:
 19237     0468  01B2               	clrf	i1___flmul@aexp
 19238     0469                     i1l5583:
 19239     0469  1FB1               	btfss	i1___flmul@grs+3,7
 19240     046A  2C6C               	goto	u667_21
 19241     046B  2C6D               	goto	u667_20
 19242     046C                     u667_21:
 19243     046C  2C89               	goto	i1l5591
 19244     046D                     u667_20:
 19245     046D                     i1l5585:
 19246     046D  30FF               	movlw	255
 19247     046E  052E               	andwf	i1___flmul@grs,w
 19248     046F  00A8               	movwf	??i1___flmul
 19249     0470  30FF               	movlw	255
 19250     0471  052F               	andwf	i1___flmul@grs+1,w
 19251     0472  00A9               	movwf	??i1___flmul+1
 19252     0473  30FF               	movlw	255
 19253     0474  0530               	andwf	i1___flmul@grs+2,w
 19254     0475  00AA               	movwf	??i1___flmul+2
 19255     0476  307F               	movlw	127
 19256     0477  0531               	andwf	i1___flmul@grs+3,w
 19257     0478  00AB               	movwf	??i1___flmul+3
 19258     0479  082B               	movf	??i1___flmul+3,w
 19259     047A  042A               	iorwf	??i1___flmul+2,w
 19260     047B  0429               	iorwf	??i1___flmul+1,w
 19261     047C  0428               	iorwf	??i1___flmul,w
 19262     047D  1903               	skipnz
 19263     047E  2C80               	goto	u668_21
 19264     047F  2C81               	goto	u668_20
 19265     0480                     u668_21:
 19266     0480  2C84               	goto	i1l1620
 19267     0481                     u668_20:
 19268     0481                     i1l5587:
 19269     0481  3001               	movlw	1
 19270     0482  00B2               	movwf	i1___flmul@aexp
 19271     0483  2C89               	goto	i1l5591
 19272     0484                     i1l1620:
 19273     0484  1C34               	btfss	i1___flmul@prod,0
 19274     0485  2C87               	goto	u669_21
 19275     0486  2C88               	goto	u669_20
 19276     0487                     u669_21:
 19277     0487  2C89               	goto	i1l5591
 19278     0488                     u669_20:
 19279     0488  2C81               	goto	i1l5587
 19280     0489                     i1l5591:
 19281     0489  0832               	movf	i1___flmul@aexp,w
 19282     048A  1903               	btfsc	3,2
 19283     048B  2C8D               	goto	u670_21
 19284     048C  2C8E               	goto	u670_20
 19285     048D                     u670_21:
 19286     048D  2CB4               	goto	i1l5601
 19287     048E                     u670_20:
 19288     048E                     i1l5593:
 19289     048E  3001               	movlw	1
 19290     048F  07B4               	addwf	i1___flmul@prod,f
 19291     0490  3000               	movlw	0
 19292     0491  3DB5               	addwfc	i1___flmul@prod+1,f
 19293     0492  3DB6               	addwfc	i1___flmul@prod+2,f
 19294     0493  3DB7               	addwfc	i1___flmul@prod+3,f
 19295     0494                     i1l5595:
 19296     0494  1C37               	btfss	i1___flmul@prod+3,0
 19297     0495  2C97               	goto	u671_21
 19298     0496  2C98               	goto	u671_20
 19299     0497                     u671_21:
 19300     0497  2CB4               	goto	i1l5601
 19301     0498                     u671_20:
 19302     0498                     i1l5597:
 19303     0498  0834               	movf	i1___flmul@prod,w
 19304     0499  00A8               	movwf	??i1___flmul
 19305     049A  0835               	movf	i1___flmul@prod+1,w
 19306     049B  00A9               	movwf	??i1___flmul+1
 19307     049C  0836               	movf	i1___flmul@prod+2,w
 19308     049D  00AA               	movwf	??i1___flmul+2
 19309     049E  0837               	movf	i1___flmul@prod+3,w
 19310     049F  00AB               	movwf	??i1___flmul+3
 19311     04A0  3001               	movlw	1
 19312     04A1  00AC               	movwf	??i1___flmul+4
 19313     04A2                     u672_25:
 19314     04A2  37AB               	asrf	??i1___flmul+3,f
 19315     04A3  0CAA               	rrf	??i1___flmul+2,f
 19316     04A4  0CA9               	rrf	??i1___flmul+1,f
 19317     04A5  0CA8               	rrf	??i1___flmul,f
 19318     04A6                     u672_20:
 19319     04A6  0BAC               	decfsz	??i1___flmul+4,f
 19320     04A7  2CA2               	goto	u672_25
 19321     04A8  082B               	movf	??i1___flmul+3,w
 19322     04A9  00B7               	movwf	i1___flmul@prod+3
 19323     04AA  082A               	movf	??i1___flmul+2,w
 19324     04AB  00B6               	movwf	i1___flmul@prod+2
 19325     04AC  0829               	movf	??i1___flmul+1,w
 19326     04AD  00B5               	movwf	i1___flmul@prod+1
 19327     04AE  0828               	movf	??i1___flmul,w
 19328     04AF  00B4               	movwf	i1___flmul@prod
 19329     04B0                     i1l5599:
 19330     04B0  3001               	movlw	1
 19331     04B1  07B8               	addwf	i1___flmul@temp,f
 19332     04B2  3000               	movlw	0
 19333     04B3  3DB9               	addwfc	i1___flmul@temp+1,f
 19334     04B4                     i1l5601:
 19335     04B4  0839               	movf	i1___flmul@temp+1,w
 19336     04B5  3A80               	xorlw	128
 19337     04B6  00A8               	movwf	??i1___flmul
 19338     04B7  3080               	movlw	128
 19339     04B8  0228               	subwf	??i1___flmul,w
 19340     04B9  1D03               	skipz
 19341     04BA  2CBD               	goto	u673_25
 19342     04BB  30FF               	movlw	255
 19343     04BC  0238               	subwf	i1___flmul@temp,w
 19344     04BD                     u673_25:
 19345     04BD  1C03               	skipc
 19346     04BE  2CC0               	goto	u673_21
 19347     04BF  2CC1               	goto	u673_20
 19348     04C0                     u673_21:
 19349     04C0  2CCB               	goto	i1l5605
 19350     04C1                     u673_20:
 19351     04C1                     i1l5603:
 19352     04C1  307F               	movlw	127
 19353     04C2  0020               	movlb	0	; select bank0
 19354     04C3  00B7               	movwf	i1___flmul@prod+3
 19355     04C4  3080               	movlw	128
 19356     04C5  00B6               	movwf	i1___flmul@prod+2
 19357     04C6  3000               	movlw	0
 19358     04C7  00B5               	movwf	i1___flmul@prod+1
 19359     04C8  3000               	movlw	0
 19360     04C9  00B4               	movwf	i1___flmul@prod
 19361     04CA  2CFC               	goto	i1l1626
 19362     04CB                     i1l5605:
 19363     04CB  0020               	movlb	0	; select bank0
 19364     04CC  0839               	movf	i1___flmul@temp+1,w
 19365     04CD  3A80               	xorlw	128
 19366     04CE  00A8               	movwf	??i1___flmul
 19367     04CF  3080               	movlw	128
 19368     04D0  0228               	subwf	??i1___flmul,w
 19369     04D1  1D03               	skipz
 19370     04D2  2CD5               	goto	u674_25
 19371     04D3  3001               	movlw	1
 19372     04D4  0238               	subwf	i1___flmul@temp,w
 19373     04D5                     u674_25:
 19374     04D5  1803               	skipnc
 19375     04D6  2CD8               	goto	u674_21
 19376     04D7  2CD9               	goto	u674_20
 19377     04D8                     u674_21:
 19378     04D8  2CE4               	goto	i1l5611
 19379     04D9                     u674_20:
 19380     04D9                     i1l5607:
 19381     04D9  3000               	movlw	0
 19382     04DA  0020               	movlb	0	; select bank0
 19383     04DB  00B7               	movwf	i1___flmul@prod+3
 19384     04DC  3000               	movlw	0
 19385     04DD  00B6               	movwf	i1___flmul@prod+2
 19386     04DE  3000               	movlw	0
 19387     04DF  00B5               	movwf	i1___flmul@prod+1
 19388     04E0  3000               	movlw	0
 19389     04E1  00B4               	movwf	i1___flmul@prod
 19390     04E2                     i1l5609:
 19391     04E2  01AD               	clrf	i1___flmul@sign
 19392     04E3  2CFC               	goto	i1l1626
 19393     04E4                     i1l5611:
 19394     04E4  0020               	movlb	0	; select bank0
 19395     04E5  0838               	movf	i1___flmul@temp,w
 19396     04E6  00B3               	movwf	i1___flmul@bexp
 19397     04E7  30FF               	movlw	255
 19398     04E8  05B4               	andwf	i1___flmul@prod,f
 19399     04E9  30FF               	movlw	255
 19400     04EA  05B5               	andwf	i1___flmul@prod+1,f
 19401     04EB  307F               	movlw	127
 19402     04EC  05B6               	andwf	i1___flmul@prod+2,f
 19403     04ED  3000               	movlw	0
 19404     04EE  05B7               	andwf	i1___flmul@prod+3,f
 19405     04EF                     i1l5613:
 19406     04EF  1C33               	btfss	i1___flmul@bexp,0
 19407     04F0  2CF2               	goto	u675_21
 19408     04F1  2CF3               	goto	u675_20
 19409     04F2                     u675_21:
 19410     04F2  2CF4               	goto	i1l5617
 19411     04F3                     u675_20:
 19412     04F3                     i1l5615:
 19413     04F3  17B6               	bsf	i1___flmul@prod+2,7
 19414     04F4                     i1l5617:
 19415     04F4  0833               	movf	i1___flmul@bexp,w
 19416     04F5  00A8               	movwf	??i1___flmul
 19417     04F6  3001               	movlw	1
 19418     04F7                     u676_25:
 19419     04F7  36A8               	lsrf	??i1___flmul,f
 19420     04F8  0B89               	decfsz	9,f
 19421     04F9  2CF7               	goto	u676_25
 19422     04FA  0828               	movf	??i1___flmul,w
 19423     04FB  00B7               	movwf	i1___flmul@prod+3
 19424     04FC                     i1l1626:
 19425     04FC  082D               	movf	i1___flmul@sign,w
 19426     04FD  04B7               	iorwf	i1___flmul@prod+3,f
 19427     04FE                     i1l5619:
 19428     04FE  0837               	movf	i1___flmul@prod+3,w
 19429     04FF  00A3               	movwf	?i1___flmul+3
 19430     0500  0836               	movf	i1___flmul@prod+2,w
 19431     0501  00A2               	movwf	?i1___flmul+2
 19432     0502  0835               	movf	i1___flmul@prod+1,w
 19433     0503  00A1               	movwf	?i1___flmul+1
 19434     0504  0834               	movf	i1___flmul@prod,w
 19435     0505  00A0               	movwf	?i1___flmul
 19436     0506                     i1l1614:
 19437     0506  0008               	return
 19438     0507                     __end_ofi1___flmul:
 19439                           
 19440                           	psect	text76
 19441     101B                     __ptext76:	
 19442 ;; *************** function i1__Umul8_16 *****************
 19443 ;; Defined at:
 19444 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 19445 ;; Parameters:    Size  Location     Type
 19446 ;;  multiplier      1    wreg     unsigned char 
 19447 ;;  multiplicand    1    0[COMMON] unsigned char 
 19448 ;; Auto vars:     Size  Location     Type
 19449 ;;  multiplier      1    8[COMMON] unsigned char 
 19450 ;;  word_mpld       2    6[COMMON] unsigned short 
 19451 ;;  product         2    4[COMMON] unsigned short 
 19452 ;; Return value:  Size  Location     Type
 19453 ;;                  2    0[COMMON] unsigned int 
 19454 ;; Registers used:
 19455 ;;		wreg, status,2, status,0
 19456 ;; Tracked objects:
 19457 ;;		On entry : 0/0
 19458 ;;		On exit  : 0/0
 19459 ;;		Unchanged: 0/0
 19460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19462 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19464 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19465 ;;Total ram usage:        9 bytes
 19466 ;; Hardware stack levels used: 1
 19467 ;; This function calls:
 19468 ;;		Nothing
 19469 ;; This function is called by:
 19470 ;;		i1___flmul
 19471 ;; This function uses a non-reentrant model
 19472 ;;
 19473                           
 19474     101B                     i1__Umul8_16:	
 19475                           ;psect for function i1__Umul8_16
 19476                           
 19477                           
 19478                           ;incstack = 0
 19479                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 19480                           ;i1__Umul8_16@multiplier stored from wreg
 19481     101B  00F8               	movwf	i1__Umul8_16@multiplier
 19482     101C                     i1l4641:
 19483     101C  01F4               	clrf	i1__Umul8_16@product
 19484     101D  01F5               	clrf	i1__Umul8_16@product+1
 19485     101E                     i1l4643:
 19486     101E  0870               	movf	i1__Umul8_16@multiplicand,w
 19487     101F  00F2               	movwf	??i1__Umul8_16
 19488     1020  01F3               	clrf	??i1__Umul8_16+1
 19489     1021  0872               	movf	??i1__Umul8_16,w
 19490     1022  00F6               	movwf	i1__Umul8_16@word_mpld
 19491     1023  0873               	movf	??i1__Umul8_16+1,w
 19492     1024  00F7               	movwf	i1__Umul8_16@word_mpld+1
 19493     1025                     i1l4645:
 19494     1025  1C78               	btfss	i1__Umul8_16@multiplier,0
 19495     1026  2828               	goto	u466_21
 19496     1027  2829               	goto	u466_20
 19497     1028                     u466_21:
 19498     1028  282D               	goto	i1l1633
 19499     1029                     u466_20:
 19500     1029                     i1l4647:
 19501     1029  0876               	movf	i1__Umul8_16@word_mpld,w
 19502     102A  07F4               	addwf	i1__Umul8_16@product,f
 19503     102B  0877               	movf	i1__Umul8_16@word_mpld+1,w
 19504     102C  3DF5               	addwfc	i1__Umul8_16@product+1,f
 19505     102D                     i1l1633:
 19506     102D  3001               	movlw	1
 19507     102E                     u467_25:
 19508     102E  35F6               	lslf	i1__Umul8_16@word_mpld,f
 19509     102F  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 19510     1030  0B89               	decfsz	9,f
 19511     1031  282E               	goto	u467_25
 19512     1032  1003               	clrc
 19513     1033  0CF8               	rrf	i1__Umul8_16@multiplier,f
 19514     1034                     i1l4649:
 19515     1034  0878               	movf	i1__Umul8_16@multiplier,w
 19516     1035  1D03               	btfss	3,2
 19517     1036  2838               	goto	u468_21
 19518     1037  2839               	goto	u468_20
 19519     1038                     u468_21:
 19520     1038  2825               	goto	i1l4645
 19521     1039                     u468_20:
 19522     1039                     i1l4651:
 19523     1039  0875               	movf	i1__Umul8_16@product+1,w
 19524     103A  00F1               	movwf	?i1__Umul8_16+1
 19525     103B  0874               	movf	i1__Umul8_16@product,w
 19526     103C  00F0               	movwf	?i1__Umul8_16
 19527     103D                     i1l1635:
 19528     103D  0008               	return
 19529     103E                     __end_ofi1__Umul8_16:
 19530                           
 19531                           	psect	text77
 19532     0DF4                     __ptext77:	
 19533 ;; *************** function i1___fladd *****************
 19534 ;; Defined at:
 19535 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  b               4   26[BANK0 ] unsigned int 
 19538 ;;  a               4   30[BANK0 ] unsigned int 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;  grs             1   45[BANK0 ] unsigned char 
 19541 ;;  bexp            1   44[BANK0 ] unsigned char 
 19542 ;;  aexp            1   43[BANK0 ] unsigned char 
 19543 ;;  signs           1   42[BANK0 ] unsigned char 
 19544 ;; Return value:  Size  Location     Type
 19545 ;;                  4   26[BANK0 ] unsigned char 
 19546 ;; Registers used:
 19547 ;;		wreg, status,2, status,0
 19548 ;; Tracked objects:
 19549 ;;		On entry : 0/0
 19550 ;;		On exit  : 0/0
 19551 ;;		Unchanged: 0/0
 19552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19553 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19554 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19555 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19556 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19557 ;;Total ram usage:       20 bytes
 19558 ;; Hardware stack levels used: 1
 19559 ;; This function calls:
 19560 ;;		Nothing
 19561 ;; This function is called by:
 19562 ;;		_controller
 19563 ;; This function uses a non-reentrant model
 19564 ;;
 19565                           
 19566     0DF4                     i1___fladd:	
 19567                           ;psect for function i1___fladd
 19568                           
 19569     0DF4                     i1l5287:	
 19570                           ;incstack = 0
 19571                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 19572                           
 19573     0DF4  0020               	movlb	0	; select bank0
 19574     0DF5  083D               	movf	i1___fladd@b+3,w
 19575     0DF6  3980               	andlw	128
 19576     0DF7  00CA               	movwf	i1___fladd@signs
 19577     0DF8                     i1l5289:
 19578     0DF8  353D               	lslf	i1___fladd@b+3,w
 19579     0DF9  00CC               	movwf	i1___fladd@bexp
 19580     0DFA                     i1l5291:
 19581     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 19582     0DFB  2DFD               	goto	u604_21
 19583     0DFC  2DFE               	goto	u604_20
 19584     0DFD                     u604_21:
 19585     0DFD  2DFF               	goto	i1l5295
 19586     0DFE                     u604_20:
 19587     0DFE                     i1l5293:
 19588     0DFE  144C               	bsf	i1___fladd@bexp,0
 19589     0DFF                     i1l5295:
 19590     0DFF  084C               	movf	i1___fladd@bexp,w
 19591     0E00  1903               	btfsc	3,2
 19592     0E01  2E03               	goto	u605_21
 19593     0E02  2E04               	goto	u605_20
 19594     0E03                     u605_21:
 19595     0E03  2E14               	goto	i1l5305
 19596     0E04                     u605_20:
 19597     0E04                     i1l5297:
 19598     0E04  0A4C               	incf	i1___fladd@bexp,w
 19599     0E05  1D03               	btfss	3,2
 19600     0E06  2E08               	goto	u606_21
 19601     0E07  2E09               	goto	u606_20
 19602     0E08                     u606_21:
 19603     0E08  2E11               	goto	i1l5301
 19604     0E09                     u606_20:
 19605     0E09                     i1l5299:
 19606     0E09  3000               	movlw	0
 19607     0E0A  00BD               	movwf	i1___fladd@b+3
 19608     0E0B  3000               	movlw	0
 19609     0E0C  00BC               	movwf	i1___fladd@b+2
 19610     0E0D  3000               	movlw	0
 19611     0E0E  00BB               	movwf	i1___fladd@b+1
 19612     0E0F  3000               	movlw	0
 19613     0E10  00BA               	movwf	i1___fladd@b
 19614     0E11                     i1l5301:
 19615     0E11  17BC               	bsf	i1___fladd@b+2,7
 19616     0E12                     i1l5303:
 19617     0E12  01BD               	clrf	i1___fladd@b+3
 19618     0E13  2E1C               	goto	i1l5307
 19619     0E14                     i1l5305:
 19620     0E14  3000               	movlw	0
 19621     0E15  00BD               	movwf	i1___fladd@b+3
 19622     0E16  3000               	movlw	0
 19623     0E17  00BC               	movwf	i1___fladd@b+2
 19624     0E18  3000               	movlw	0
 19625     0E19  00BB               	movwf	i1___fladd@b+1
 19626     0E1A  3000               	movlw	0
 19627     0E1B  00BA               	movwf	i1___fladd@b
 19628     0E1C                     i1l5307:
 19629     0E1C  0841               	movf	i1___fladd@a+3,w
 19630     0E1D  3980               	andlw	128
 19631     0E1E  00CB               	movwf	i1___fladd@aexp
 19632     0E1F                     i1l5309:
 19633     0E1F  084B               	movf	i1___fladd@aexp,w
 19634     0E20  064A               	xorwf	i1___fladd@signs,w
 19635     0E21  1903               	skipnz
 19636     0E22  2E24               	goto	u607_21
 19637     0E23  2E25               	goto	u607_20
 19638     0E24                     u607_21:
 19639     0E24  2E26               	goto	i1l5313
 19640     0E25                     u607_20:
 19641     0E25                     i1l5311:
 19642     0E25  174A               	bsf	i1___fladd@signs,6
 19643     0E26                     i1l5313:
 19644     0E26  3541               	lslf	i1___fladd@a+3,w
 19645     0E27  00CB               	movwf	i1___fladd@aexp
 19646     0E28                     i1l5315:
 19647     0E28  1FC0               	btfss	i1___fladd@a+2,7
 19648     0E29  2E2B               	goto	u608_21
 19649     0E2A  2E2C               	goto	u608_20
 19650     0E2B                     u608_21:
 19651     0E2B  2E2D               	goto	i1l5319
 19652     0E2C                     u608_20:
 19653     0E2C                     i1l5317:
 19654     0E2C  144B               	bsf	i1___fladd@aexp,0
 19655     0E2D                     i1l5319:
 19656     0E2D  084B               	movf	i1___fladd@aexp,w
 19657     0E2E  1903               	btfsc	3,2
 19658     0E2F  2E31               	goto	u609_21
 19659     0E30  2E32               	goto	u609_20
 19660     0E31                     u609_21:
 19661     0E31  2E42               	goto	i1l5329
 19662     0E32                     u609_20:
 19663     0E32                     i1l5321:
 19664     0E32  0A4B               	incf	i1___fladd@aexp,w
 19665     0E33  1D03               	btfss	3,2
 19666     0E34  2E36               	goto	u610_21
 19667     0E35  2E37               	goto	u610_20
 19668     0E36                     u610_21:
 19669     0E36  2E3F               	goto	i1l5325
 19670     0E37                     u610_20:
 19671     0E37                     i1l5323:
 19672     0E37  3000               	movlw	0
 19673     0E38  00C1               	movwf	i1___fladd@a+3
 19674     0E39  3000               	movlw	0
 19675     0E3A  00C0               	movwf	i1___fladd@a+2
 19676     0E3B  3000               	movlw	0
 19677     0E3C  00BF               	movwf	i1___fladd@a+1
 19678     0E3D  3000               	movlw	0
 19679     0E3E  00BE               	movwf	i1___fladd@a
 19680     0E3F                     i1l5325:
 19681     0E3F  17C0               	bsf	i1___fladd@a+2,7
 19682     0E40                     i1l5327:
 19683     0E40  01C1               	clrf	i1___fladd@a+3
 19684     0E41  2E4A               	goto	i1l1518
 19685     0E42                     i1l5329:
 19686     0E42  3000               	movlw	0
 19687     0E43  00C1               	movwf	i1___fladd@a+3
 19688     0E44  3000               	movlw	0
 19689     0E45  00C0               	movwf	i1___fladd@a+2
 19690     0E46  3000               	movlw	0
 19691     0E47  00BF               	movwf	i1___fladd@a+1
 19692     0E48  3000               	movlw	0
 19693     0E49  00BE               	movwf	i1___fladd@a
 19694     0E4A                     i1l1518:
 19695     0E4A  084C               	movf	i1___fladd@bexp,w
 19696     0E4B  024B               	subwf	i1___fladd@aexp,w
 19697     0E4C  1803               	skipnc
 19698     0E4D  2E4F               	goto	u611_21
 19699     0E4E  2E50               	goto	u611_20
 19700     0E4F                     u611_21:
 19701     0E4F  2E74               	goto	i1l5365
 19702     0E50                     u611_20:
 19703     0E50                     i1l5331:
 19704     0E50  1F4A               	btfss	i1___fladd@signs,6
 19705     0E51  2E53               	goto	u612_21
 19706     0E52  2E54               	goto	u612_20
 19707     0E53                     u612_21:
 19708     0E53  2E56               	goto	i1l5335
 19709     0E54                     u612_20:
 19710     0E54                     i1l5333:
 19711     0E54  3080               	movlw	128
 19712     0E55  06CA               	xorwf	i1___fladd@signs,f
 19713     0E56                     i1l5335:
 19714     0E56  084C               	movf	i1___fladd@bexp,w
 19715     0E57  00CD               	movwf	i1___fladd@grs
 19716     0E58                     i1l5337:
 19717     0E58  084B               	movf	i1___fladd@aexp,w
 19718     0E59  00CC               	movwf	i1___fladd@bexp
 19719     0E5A                     i1l5339:
 19720     0E5A  084D               	movf	i1___fladd@grs,w
 19721     0E5B  00CB               	movwf	i1___fladd@aexp
 19722     0E5C                     i1l5341:
 19723     0E5C  083A               	movf	i1___fladd@b,w
 19724     0E5D  00CD               	movwf	i1___fladd@grs
 19725     0E5E                     i1l5343:
 19726     0E5E  083E               	movf	i1___fladd@a,w
 19727     0E5F  00BA               	movwf	i1___fladd@b
 19728     0E60                     i1l5345:
 19729     0E60  084D               	movf	i1___fladd@grs,w
 19730     0E61  00BE               	movwf	i1___fladd@a
 19731     0E62                     i1l5347:
 19732     0E62  083B               	movf	i1___fladd@b+1,w
 19733     0E63  00CD               	movwf	i1___fladd@grs
 19734     0E64                     i1l5349:
 19735     0E64  083F               	movf	i1___fladd@a+1,w
 19736     0E65  00BB               	movwf	i1___fladd@b+1
 19737     0E66                     i1l5351:
 19738     0E66  084D               	movf	i1___fladd@grs,w
 19739     0E67  00BF               	movwf	i1___fladd@a+1
 19740     0E68                     i1l5353:
 19741     0E68  083C               	movf	i1___fladd@b+2,w
 19742     0E69  00CD               	movwf	i1___fladd@grs
 19743     0E6A                     i1l5355:
 19744     0E6A  0840               	movf	i1___fladd@a+2,w
 19745     0E6B  00BC               	movwf	i1___fladd@b+2
 19746     0E6C                     i1l5357:
 19747     0E6C  084D               	movf	i1___fladd@grs,w
 19748     0E6D  00C0               	movwf	i1___fladd@a+2
 19749     0E6E                     i1l5359:
 19750     0E6E  083D               	movf	i1___fladd@b+3,w
 19751     0E6F  00CD               	movwf	i1___fladd@grs
 19752     0E70                     i1l5361:
 19753     0E70  0841               	movf	i1___fladd@a+3,w
 19754     0E71  00BD               	movwf	i1___fladd@b+3
 19755     0E72                     i1l5363:
 19756     0E72  084D               	movf	i1___fladd@grs,w
 19757     0E73  00C1               	movwf	i1___fladd@a+3
 19758     0E74                     i1l5365:
 19759     0E74  01CD               	clrf	i1___fladd@grs
 19760     0E75                     i1l5367:
 19761     0E75  084B               	movf	i1___fladd@aexp,w
 19762     0E76  00C2               	movwf	??i1___fladd
 19763     0E77  01C3               	clrf	??i1___fladd+1
 19764     0E78  0843               	movf	??i1___fladd+1,w
 19765     0E79  00C5               	movwf	??i1___fladd+3
 19766     0E7A  084C               	movf	i1___fladd@bexp,w
 19767     0E7B  0242               	subwf	??i1___fladd,w
 19768     0E7C  00C4               	movwf	??i1___fladd+2
 19769     0E7D  1C03               	skipc
 19770     0E7E  03C5               	decf	??i1___fladd+3,f
 19771     0E7F  0845               	movf	??i1___fladd+3,w
 19772     0E80  3A80               	xorlw	128
 19773     0E81  00C6               	movwf	??i1___fladd+4
 19774     0E82  3080               	movlw	128
 19775     0E83  0246               	subwf	??i1___fladd+4,w
 19776     0E84  1D03               	skipz
 19777     0E85  2E88               	goto	u613_25
 19778     0E86  301A               	movlw	26
 19779     0E87  0244               	subwf	??i1___fladd+2,w
 19780     0E88                     u613_25:
 19781     0E88  1C03               	skipc
 19782     0E89  2E8B               	goto	u613_21
 19783     0E8A  2E8C               	goto	u613_20
 19784     0E8B                     u613_21:
 19785     0E8B  2EC2               	goto	i1l5383
 19786     0E8C                     u613_20:
 19787     0E8C                     i1l5369:
 19788     0E8C  0020               	movlb	0	; select bank0
 19789     0E8D  083D               	movf	i1___fladd@b+3,w
 19790     0E8E  043C               	iorwf	i1___fladd@b+2,w
 19791     0E8F  043B               	iorwf	i1___fladd@b+1,w
 19792     0E90  043A               	iorwf	i1___fladd@b,w
 19793     0E91  1D03               	skipz
 19794     0E92  2E94               	goto	u614_21
 19795     0E93  2E96               	goto	u614_20
 19796     0E94                     u614_21:
 19797     0E94  3001               	movlw	1
 19798     0E95  2E97               	goto	u615_20
 19799     0E96                     u614_20:
 19800     0E96  3000               	movlw	0
 19801     0E97                     u615_20:
 19802     0E97  00CD               	movwf	i1___fladd@grs
 19803     0E98  3000               	movlw	0
 19804     0E99  00BD               	movwf	i1___fladd@b+3
 19805     0E9A  3000               	movlw	0
 19806     0E9B  00BC               	movwf	i1___fladd@b+2
 19807     0E9C  3000               	movlw	0
 19808     0E9D  00BB               	movwf	i1___fladd@b+1
 19809     0E9E  3000               	movlw	0
 19810     0E9F  00BA               	movwf	i1___fladd@b
 19811     0EA0  084B               	movf	i1___fladd@aexp,w
 19812     0EA1  00CC               	movwf	i1___fladd@bexp
 19813     0EA2  2EC9               	goto	i1l1522
 19814     0EA3                     i1l1524:
 19815     0EA3  1C4D               	btfss	i1___fladd@grs,0
 19816     0EA4  2EA6               	goto	u616_21
 19817     0EA5  2EA7               	goto	u616_20
 19818     0EA6                     u616_21:
 19819     0EA6  2EB1               	goto	i1l5373
 19820     0EA7                     u616_20:
 19821     0EA7                     i1l5371:
 19822     0EA7  084D               	movf	i1___fladd@grs,w
 19823     0EA8  00C2               	movwf	??i1___fladd
 19824     0EA9  3001               	movlw	1
 19825     0EAA                     u617_25:
 19826     0EAA  36C2               	lsrf	??i1___fladd,f
 19827     0EAB  0B89               	decfsz	9,f
 19828     0EAC  2EAA               	goto	u617_25
 19829     0EAD  0842               	movf	??i1___fladd,w
 19830     0EAE  3801               	iorlw	1
 19831     0EAF  00CD               	movwf	i1___fladd@grs
 19832     0EB0  2EB3               	goto	i1l5375
 19833     0EB1                     i1l5373:
 19834     0EB1  1003               	clrc
 19835     0EB2  0CCD               	rrf	i1___fladd@grs,f
 19836     0EB3                     i1l5375:
 19837     0EB3  1C3A               	btfss	i1___fladd@b,0
 19838     0EB4  2EB6               	goto	u618_21
 19839     0EB5  2EB7               	goto	u618_20
 19840     0EB6                     u618_21:
 19841     0EB6  2EB8               	goto	i1l5379
 19842     0EB7                     u618_20:
 19843     0EB7                     i1l5377:
 19844     0EB7  17CD               	bsf	i1___fladd@grs,7
 19845     0EB8                     i1l5379:
 19846     0EB8  3001               	movlw	1
 19847     0EB9  00C2               	movwf	??i1___fladd
 19848     0EBA                     u619_25:
 19849     0EBA  37BD               	asrf	i1___fladd@b+3,f
 19850     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 19851     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 19852     0EBD  0CBA               	rrf	i1___fladd@b,f
 19853     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 19854     0EBF  2EBA               	goto	u619_25
 19855     0EC0                     i1l5381:
 19856     0EC0  3001               	movlw	1
 19857     0EC1  07CC               	addwf	i1___fladd@bexp,f
 19858     0EC2                     i1l5383:
 19859     0EC2  0020               	movlb	0	; select bank0
 19860     0EC3  084B               	movf	i1___fladd@aexp,w
 19861     0EC4  024C               	subwf	i1___fladd@bexp,w
 19862     0EC5  1C03               	skipc
 19863     0EC6  2EC8               	goto	u620_21
 19864     0EC7  2EC9               	goto	u620_20
 19865     0EC8                     u620_21:
 19866     0EC8  2EA3               	goto	i1l1524
 19867     0EC9                     u620_20:
 19868     0EC9                     i1l1522:
 19869     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 19870     0ECA  2ECC               	goto	u621_21
 19871     0ECB  2ECD               	goto	u621_20
 19872     0ECC                     u621_21:
 19873     0ECC  2F07               	goto	i1l5409
 19874     0ECD                     u621_20:
 19875     0ECD                     i1l5385:
 19876     0ECD  084C               	movf	i1___fladd@bexp,w
 19877     0ECE  1D03               	btfss	3,2
 19878     0ECF  2ED1               	goto	u622_21
 19879     0ED0  2ED2               	goto	u622_20
 19880     0ED1                     u622_21:
 19881     0ED1  2EDB               	goto	i1l5391
 19882     0ED2                     u622_20:
 19883     0ED2                     i1l5387:
 19884     0ED2  3000               	movlw	0
 19885     0ED3  00BD               	movwf	?i1___fladd+3
 19886     0ED4  3000               	movlw	0
 19887     0ED5  00BC               	movwf	?i1___fladd+2
 19888     0ED6  3000               	movlw	0
 19889     0ED7  00BB               	movwf	?i1___fladd+1
 19890     0ED8  3000               	movlw	0
 19891     0ED9  00BA               	movwf	?i1___fladd
 19892     0EDA  2FFF               	goto	i1l1531
 19893     0EDB                     i1l5391:
 19894     0EDB  083E               	movf	i1___fladd@a,w
 19895     0EDC  07BA               	addwf	i1___fladd@b,f
 19896     0EDD  083F               	movf	i1___fladd@a+1,w
 19897     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 19898     0EDF  0840               	movf	i1___fladd@a+2,w
 19899     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 19900     0EE1  0841               	movf	i1___fladd@a+3,w
 19901     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 19902     0EE3                     i1l5393:
 19903     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 19904     0EE4  2EE6               	goto	u623_21
 19905     0EE5  2EE7               	goto	u623_20
 19906     0EE6                     u623_21:
 19907     0EE6  2F91               	goto	i1l5445
 19908     0EE7                     u623_20:
 19909     0EE7                     i1l5395:
 19910     0EE7  1C4D               	btfss	i1___fladd@grs,0
 19911     0EE8  2EEA               	goto	u624_21
 19912     0EE9  2EEB               	goto	u624_20
 19913     0EEA                     u624_21:
 19914     0EEA  2EF5               	goto	i1l5399
 19915     0EEB                     u624_20:
 19916     0EEB                     i1l5397:
 19917     0EEB  084D               	movf	i1___fladd@grs,w
 19918     0EEC  00C2               	movwf	??i1___fladd
 19919     0EED  3001               	movlw	1
 19920     0EEE                     u625_25:
 19921     0EEE  36C2               	lsrf	??i1___fladd,f
 19922     0EEF  0B89               	decfsz	9,f
 19923     0EF0  2EEE               	goto	u625_25
 19924     0EF1  0842               	movf	??i1___fladd,w
 19925     0EF2  3801               	iorlw	1
 19926     0EF3  00CD               	movwf	i1___fladd@grs
 19927     0EF4  2EF7               	goto	i1l5401
 19928     0EF5                     i1l5399:
 19929     0EF5  1003               	clrc
 19930     0EF6  0CCD               	rrf	i1___fladd@grs,f
 19931     0EF7                     i1l5401:
 19932     0EF7  1C3A               	btfss	i1___fladd@b,0
 19933     0EF8  2EFA               	goto	u626_21
 19934     0EF9  2EFB               	goto	u626_20
 19935     0EFA                     u626_21:
 19936     0EFA  2EFC               	goto	i1l5405
 19937     0EFB                     u626_20:
 19938     0EFB                     i1l5403:
 19939     0EFB  17CD               	bsf	i1___fladd@grs,7
 19940     0EFC                     i1l5405:
 19941     0EFC  3001               	movlw	1
 19942     0EFD  00C2               	movwf	??i1___fladd
 19943     0EFE                     u627_25:
 19944     0EFE  37BD               	asrf	i1___fladd@b+3,f
 19945     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 19946     0F00  0CBB               	rrf	i1___fladd@b+1,f
 19947     0F01  0CBA               	rrf	i1___fladd@b,f
 19948     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 19949     0F03  2EFE               	goto	u627_25
 19950     0F04                     i1l5407:
 19951     0F04  3001               	movlw	1
 19952     0F05  07CC               	addwf	i1___fladd@bexp,f
 19953     0F06  2F91               	goto	i1l5445
 19954     0F07                     i1l5409:
 19955     0F07  083D               	movf	i1___fladd@b+3,w
 19956     0F08  3A80               	xorlw	128
 19957     0F09  00C2               	movwf	??i1___fladd
 19958     0F0A  0841               	movf	i1___fladd@a+3,w
 19959     0F0B  3A80               	xorlw	128
 19960     0F0C  0242               	subwf	??i1___fladd,w
 19961     0F0D  1D03               	skipz
 19962     0F0E  2F19               	goto	u628_23
 19963     0F0F  0840               	movf	i1___fladd@a+2,w
 19964     0F10  023C               	subwf	i1___fladd@b+2,w
 19965     0F11  1D03               	skipz
 19966     0F12  2F19               	goto	u628_23
 19967     0F13  083F               	movf	i1___fladd@a+1,w
 19968     0F14  023B               	subwf	i1___fladd@b+1,w
 19969     0F15  1D03               	skipz
 19970     0F16  2F19               	goto	u628_23
 19971     0F17  083E               	movf	i1___fladd@a,w
 19972     0F18  023A               	subwf	i1___fladd@b,w
 19973     0F19                     u628_23:
 19974     0F19  1803               	skipnc
 19975     0F1A  2F1C               	goto	u628_21
 19976     0F1B  2F1D               	goto	u628_20
 19977     0F1C                     u628_21:
 19978     0F1C  2F52               	goto	i1l5421
 19979     0F1D                     u628_20:
 19980     0F1D                     i1l5411:
 19981     0F1D  30FF               	movlw	255
 19982     0F1E  00C2               	movwf	??i1___fladd
 19983     0F1F  30FF               	movlw	255
 19984     0F20  00C3               	movwf	??i1___fladd+1
 19985     0F21  30FF               	movlw	255
 19986     0F22  00C4               	movwf	??i1___fladd+2
 19987     0F23  30FF               	movlw	255
 19988     0F24  00C5               	movwf	??i1___fladd+3
 19989     0F25  083A               	movf	i1___fladd@b,w
 19990     0F26  023E               	subwf	i1___fladd@a,w
 19991     0F27  00C6               	movwf	??i1___fladd+4
 19992     0F28  083B               	movf	i1___fladd@b+1,w
 19993     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 19994     0F2A  00C7               	movwf	??i1___fladd+5
 19995     0F2B  083C               	movf	i1___fladd@b+2,w
 19996     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 19997     0F2D  00C8               	movwf	??i1___fladd+6
 19998     0F2E  083D               	movf	i1___fladd@b+3,w
 19999     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 20000     0F30  00C9               	movwf	??i1___fladd+7
 20001     0F31  0846               	movf	??i1___fladd+4,w
 20002     0F32  07C2               	addwf	??i1___fladd,f
 20003     0F33  0847               	movf	??i1___fladd+5,w
 20004     0F34  3DC3               	addwfc	??i1___fladd+1,f
 20005     0F35  0848               	movf	??i1___fladd+6,w
 20006     0F36  3DC4               	addwfc	??i1___fladd+2,f
 20007     0F37  0849               	movf	??i1___fladd+7,w
 20008     0F38  3DC5               	addwfc	??i1___fladd+3,f
 20009     0F39  0845               	movf	??i1___fladd+3,w
 20010     0F3A  00BD               	movwf	i1___fladd@b+3
 20011     0F3B  0844               	movf	??i1___fladd+2,w
 20012     0F3C  00BC               	movwf	i1___fladd@b+2
 20013     0F3D  0843               	movf	??i1___fladd+1,w
 20014     0F3E  00BB               	movwf	i1___fladd@b+1
 20015     0F3F  0842               	movf	??i1___fladd,w
 20016     0F40  00BA               	movwf	i1___fladd@b
 20017     0F41                     i1l5413:
 20018     0F41  3080               	movlw	128
 20019     0F42  06CA               	xorwf	i1___fladd@signs,f
 20020     0F43                     i1l5415:
 20021     0F43  034D               	decf	i1___fladd@grs,w
 20022     0F44  3AFF               	xorlw	255
 20023     0F45  00CD               	movwf	i1___fladd@grs
 20024     0F46                     i1l5417:
 20025     0F46  084D               	movf	i1___fladd@grs,w
 20026     0F47  1D03               	btfss	3,2
 20027     0F48  2F4A               	goto	u629_21
 20028     0F49  2F4B               	goto	u629_20
 20029     0F4A                     u629_21:
 20030     0F4A  2F5A               	goto	i1l1539
 20031     0F4B                     u629_20:
 20032     0F4B                     i1l5419:
 20033     0F4B  3001               	movlw	1
 20034     0F4C  07BA               	addwf	i1___fladd@b,f
 20035     0F4D  3000               	movlw	0
 20036     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 20037     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 20038     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 20039     0F51  2F5A               	goto	i1l1539
 20040     0F52                     i1l5421:
 20041     0F52  083E               	movf	i1___fladd@a,w
 20042     0F53  02BA               	subwf	i1___fladd@b,f
 20043     0F54  083F               	movf	i1___fladd@a+1,w
 20044     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 20045     0F56  0840               	movf	i1___fladd@a+2,w
 20046     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 20047     0F58  0841               	movf	i1___fladd@a+3,w
 20048     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 20049     0F5A                     i1l1539:
 20050     0F5A  083D               	movf	i1___fladd@b+3,w
 20051     0F5B  043C               	iorwf	i1___fladd@b+2,w
 20052     0F5C  043B               	iorwf	i1___fladd@b+1,w
 20053     0F5D  043A               	iorwf	i1___fladd@b,w
 20054     0F5E  1D03               	skipz
 20055     0F5F  2F61               	goto	u630_21
 20056     0F60  2F62               	goto	u630_20
 20057     0F61                     u630_21:
 20058     0F61  2F8D               	goto	i1l5443
 20059     0F62                     u630_20:
 20060     0F62                     i1l5423:
 20061     0F62  084D               	movf	i1___fladd@grs,w
 20062     0F63  1D03               	btfss	3,2
 20063     0F64  2F66               	goto	u631_21
 20064     0F65  2F67               	goto	u631_20
 20065     0F66                     u631_21:
 20066     0F66  2F8D               	goto	i1l5443
 20067     0F67                     u631_20:
 20068     0F67                     i1l5425:
 20069     0F67  3000               	movlw	0
 20070     0F68  00BD               	movwf	?i1___fladd+3
 20071     0F69  3000               	movlw	0
 20072     0F6A  00BC               	movwf	?i1___fladd+2
 20073     0F6B  3000               	movlw	0
 20074     0F6C  00BB               	movwf	?i1___fladd+1
 20075     0F6D  3000               	movlw	0
 20076     0F6E  00BA               	movwf	?i1___fladd
 20077     0F6F  2FFF               	goto	i1l1531
 20078     0F70                     i1l5429:
 20079     0F70  3001               	movlw	1
 20080     0F71                     u632_25:
 20081     0F71  35BA               	lslf	i1___fladd@b,f
 20082     0F72  0DBB               	rlf	i1___fladd@b+1,f
 20083     0F73  0DBC               	rlf	i1___fladd@b+2,f
 20084     0F74  0DBD               	rlf	i1___fladd@b+3,f
 20085     0F75  0B89               	decfsz	9,f
 20086     0F76  2F71               	goto	u632_25
 20087     0F77                     i1l5431:
 20088     0F77  1FCD               	btfss	i1___fladd@grs,7
 20089     0F78  2F7A               	goto	u633_21
 20090     0F79  2F7B               	goto	u633_20
 20091     0F7A                     u633_21:
 20092     0F7A  2F7C               	goto	i1l1543
 20093     0F7B                     u633_20:
 20094     0F7B                     i1l5433:
 20095     0F7B  143A               	bsf	i1___fladd@b,0
 20096     0F7C                     i1l1543:
 20097     0F7C  1C4D               	btfss	i1___fladd@grs,0
 20098     0F7D  2F7F               	goto	u634_21
 20099     0F7E  2F80               	goto	u634_20
 20100     0F7F                     u634_21:
 20101     0F7F  2F84               	goto	i1l5437
 20102     0F80                     u634_20:
 20103     0F80                     i1l5435:
 20104     0F80  1403               	setc
 20105     0F81  0D4D               	rlf	i1___fladd@grs,w
 20106     0F82  00CD               	movwf	i1___fladd@grs
 20107     0F83  2F86               	goto	i1l5439
 20108     0F84                     i1l5437:
 20109     0F84  1003               	clrc
 20110     0F85  0DCD               	rlf	i1___fladd@grs,f
 20111     0F86                     i1l5439:
 20112     0F86  084C               	movf	i1___fladd@bexp,w
 20113     0F87  1903               	btfsc	3,2
 20114     0F88  2F8A               	goto	u635_21
 20115     0F89  2F8B               	goto	u635_20
 20116     0F8A                     u635_21:
 20117     0F8A  2F8D               	goto	i1l5443
 20118     0F8B                     u635_20:
 20119     0F8B                     i1l5441:
 20120     0F8B  3001               	movlw	1
 20121     0F8C  02CC               	subwf	i1___fladd@bexp,f
 20122     0F8D                     i1l5443:
 20123     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 20124     0F8E  2F90               	goto	u636_21
 20125     0F8F  2F91               	goto	u636_20
 20126     0F90                     u636_21:
 20127     0F90  2F70               	goto	i1l5429
 20128     0F91                     u636_20:
 20129     0F91                     i1l5445:
 20130     0F91  01CB               	clrf	i1___fladd@aexp
 20131     0F92                     i1l5447:
 20132     0F92  1FCD               	btfss	i1___fladd@grs,7
 20133     0F93  2F95               	goto	u637_21
 20134     0F94  2F96               	goto	u637_20
 20135     0F95                     u637_21:
 20136     0F95  2FA4               	goto	i1l5455
 20137     0F96                     u637_20:
 20138     0F96                     i1l5449:
 20139     0F96  084D               	movf	i1___fladd@grs,w
 20140     0F97  397F               	andlw	127
 20141     0F98  1903               	btfsc	3,2
 20142     0F99  2F9B               	goto	u638_21
 20143     0F9A  2F9C               	goto	u638_20
 20144     0F9B                     u638_21:
 20145     0F9B  2F9F               	goto	i1l1549
 20146     0F9C                     u638_20:
 20147     0F9C                     i1l5451:
 20148     0F9C  3001               	movlw	1
 20149     0F9D  00CB               	movwf	i1___fladd@aexp
 20150     0F9E  2FA4               	goto	i1l5455
 20151     0F9F                     i1l1549:
 20152     0F9F  1C3A               	btfss	i1___fladd@b,0
 20153     0FA0  2FA2               	goto	u639_21
 20154     0FA1  2FA3               	goto	u639_20
 20155     0FA2                     u639_21:
 20156     0FA2  2FA4               	goto	i1l5455
 20157     0FA3                     u639_20:
 20158     0FA3  2F9C               	goto	i1l5451
 20159     0FA4                     i1l5455:
 20160     0FA4  084B               	movf	i1___fladd@aexp,w
 20161     0FA5  1903               	btfsc	3,2
 20162     0FA6  2FA8               	goto	u640_21
 20163     0FA7  2FA9               	goto	u640_20
 20164     0FA8                     u640_21:
 20165     0FA8  2FD2               	goto	i1l1552
 20166     0FA9                     u640_20:
 20167     0FA9                     i1l5457:
 20168     0FA9  3001               	movlw	1
 20169     0FAA  07BA               	addwf	i1___fladd@b,f
 20170     0FAB  3000               	movlw	0
 20171     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 20172     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 20173     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 20174     0FAF                     i1l5459:
 20175     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 20176     0FB0  2FB2               	goto	u641_21
 20177     0FB1  2FB3               	goto	u641_20
 20178     0FB2                     u641_21:
 20179     0FB2  2FD2               	goto	i1l1552
 20180     0FB3                     u641_20:
 20181     0FB3                     i1l5461:
 20182     0FB3  083A               	movf	i1___fladd@b,w
 20183     0FB4  00C2               	movwf	??i1___fladd
 20184     0FB5  083B               	movf	i1___fladd@b+1,w
 20185     0FB6  00C3               	movwf	??i1___fladd+1
 20186     0FB7  083C               	movf	i1___fladd@b+2,w
 20187     0FB8  00C4               	movwf	??i1___fladd+2
 20188     0FB9  083D               	movf	i1___fladd@b+3,w
 20189     0FBA  00C5               	movwf	??i1___fladd+3
 20190     0FBB  3001               	movlw	1
 20191     0FBC  00C6               	movwf	??i1___fladd+4
 20192     0FBD                     u642_25:
 20193     0FBD  37C5               	asrf	??i1___fladd+3,f
 20194     0FBE  0CC4               	rrf	??i1___fladd+2,f
 20195     0FBF  0CC3               	rrf	??i1___fladd+1,f
 20196     0FC0  0CC2               	rrf	??i1___fladd,f
 20197     0FC1                     u642_20:
 20198     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 20199     0FC2  2FBD               	goto	u642_25
 20200     0FC3  0845               	movf	??i1___fladd+3,w
 20201     0FC4  00BD               	movwf	i1___fladd@b+3
 20202     0FC5  0844               	movf	??i1___fladd+2,w
 20203     0FC6  00BC               	movwf	i1___fladd@b+2
 20204     0FC7  0843               	movf	??i1___fladd+1,w
 20205     0FC8  00BB               	movwf	i1___fladd@b+1
 20206     0FC9  0842               	movf	??i1___fladd,w
 20207     0FCA  00BA               	movwf	i1___fladd@b
 20208     0FCB  0A4C               	incf	i1___fladd@bexp,w
 20209     0FCC  1903               	btfsc	3,2
 20210     0FCD  2FCF               	goto	u643_21
 20211     0FCE  2FD0               	goto	u643_20
 20212     0FCF                     u643_21:
 20213     0FCF  2FD2               	goto	i1l1552
 20214     0FD0                     u643_20:
 20215     0FD0                     i1l5463:
 20216     0FD0  3001               	movlw	1
 20217     0FD1  07CC               	addwf	i1___fladd@bexp,f
 20218     0FD2                     i1l1552:
 20219     0FD2  0A4C               	incf	i1___fladd@bexp,w
 20220     0FD3  1903               	btfsc	3,2
 20221     0FD4  2FD6               	goto	u644_21
 20222     0FD5  2FD7               	goto	u644_20
 20223     0FD6                     u644_21:
 20224     0FD6  2FDC               	goto	i1l5467
 20225     0FD7                     u644_20:
 20226     0FD7                     i1l5465:
 20227     0FD7  084C               	movf	i1___fladd@bexp,w
 20228     0FD8  1D03               	btfss	3,2
 20229     0FD9  2FDB               	goto	u645_21
 20230     0FDA  2FDC               	goto	u645_20
 20231     0FDB                     u645_21:
 20232     0FDB  2FEA               	goto	i1l5473
 20233     0FDC                     u645_20:
 20234     0FDC                     i1l5467:
 20235     0FDC  3000               	movlw	0
 20236     0FDD  00BD               	movwf	i1___fladd@b+3
 20237     0FDE  3000               	movlw	0
 20238     0FDF  00BC               	movwf	i1___fladd@b+2
 20239     0FE0  3000               	movlw	0
 20240     0FE1  00BB               	movwf	i1___fladd@b+1
 20241     0FE2  3000               	movlw	0
 20242     0FE3  00BA               	movwf	i1___fladd@b
 20243     0FE4                     i1l5469:
 20244     0FE4  084C               	movf	i1___fladd@bexp,w
 20245     0FE5  1D03               	btfss	3,2
 20246     0FE6  2FE8               	goto	u646_21
 20247     0FE7  2FE9               	goto	u646_20
 20248     0FE8                     u646_21:
 20249     0FE8  2FEA               	goto	i1l5473
 20250     0FE9                     u646_20:
 20251     0FE9                     i1l5471:
 20252     0FE9  01CA               	clrf	i1___fladd@signs
 20253     0FEA                     i1l5473:
 20254     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 20255     0FEB  2FED               	goto	u647_21
 20256     0FEC  2FEE               	goto	u647_20
 20257     0FED                     u647_21:
 20258     0FED  2FF0               	goto	i1l5477
 20259     0FEE                     u647_20:
 20260     0FEE                     i1l5475:
 20261     0FEE  17BC               	bsf	i1___fladd@b+2,7
 20262     0FEF  2FF2               	goto	i1l1560
 20263     0FF0                     i1l5477:
 20264     0FF0  307F               	movlw	127
 20265     0FF1  05BC               	andwf	i1___fladd@b+2,f
 20266     0FF2                     i1l1560:
 20267     0FF2  084C               	movf	i1___fladd@bexp,w
 20268     0FF3  00C2               	movwf	??i1___fladd
 20269     0FF4  3001               	movlw	1
 20270     0FF5                     u648_25:
 20271     0FF5  36C2               	lsrf	??i1___fladd,f
 20272     0FF6  0B89               	decfsz	9,f
 20273     0FF7  2FF5               	goto	u648_25
 20274     0FF8  0842               	movf	??i1___fladd,w
 20275     0FF9  00BD               	movwf	i1___fladd@b+3
 20276     0FFA                     i1l5479:
 20277     0FFA  1FCA               	btfss	i1___fladd@signs,7
 20278     0FFB  2FFD               	goto	u649_21
 20279     0FFC  2FFE               	goto	u649_20
 20280     0FFD                     u649_21:
 20281     0FFD  2FFF               	goto	i1l1561
 20282     0FFE                     u649_20:
 20283     0FFE                     i1l5481:
 20284     0FFE  17BD               	bsf	i1___fladd@b+3,7
 20285     0FFF                     i1l1561:
 20286     0FFF                     i1l1531:
 20287     0FFF  0008               	return
 20288     1000                     __end_ofi1___fladd:
 20289                           
 20290                           	psect	text78
 20291     1EFB                     __ptext78:	
 20292 ;; *************** function _pwm_fan_LoadDutyValue *****************
 20293 ;; Defined at:
 20294 ;;		line 64 in file "mcc_generated_files/pwm/src/pwm5.c"
 20295 ;; Parameters:    Size  Location     Type
 20296 ;;  dutyValue       2    0[COMMON] unsigned short 
 20297 ;; Auto vars:     Size  Location     Type
 20298 ;;		None
 20299 ;; Return value:  Size  Location     Type
 20300 ;;                  1    wreg      void 
 20301 ;; Registers used:
 20302 ;;		wreg, status,2, status,0
 20303 ;; Tracked objects:
 20304 ;;		On entry : 0/0
 20305 ;;		On exit  : 0/0
 20306 ;;		Unchanged: 0/0
 20307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20311 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20312 ;;Total ram usage:        4 bytes
 20313 ;; Hardware stack levels used: 1
 20314 ;; This function calls:
 20315 ;;		Nothing
 20316 ;; This function is called by:
 20317 ;;		_controller
 20318 ;; This function uses a non-reentrant model
 20319 ;;
 20320                           
 20321     1EFB                     _pwm_fan_LoadDutyValue:	
 20322                           ;psect for function _pwm_fan_LoadDutyValue
 20323                           
 20324     1EFB                     i1l4661:	
 20325                           ;incstack = 0
 20326                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 20327                           
 20328                           
 20329                           ;mcc_generated_files/pwm/src/pwm5.c: 64:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 65:  {;mcc_generated_files/pwm/src/pwm5.c: 67:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 20330     1EFB  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 20331     1EFC  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 20332     1EFD  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20333     1EFE  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20334     1EFF  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20335     1F00  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20336     1F01  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20337     1F02  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20338     1F03  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20339     1F04  002C               	movlb	12	; select bank12
 20340     1F05  0098               	movwf	24	;volatile
 20341                           
 20342                           ;mcc_generated_files/pwm/src/pwm5.c: 70:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 20343     1F06  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20344     1F07  3903               	andlw	3
 20345     1F08  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20346     1F09  3006               	movlw	6
 20347     1F0A                     u469_25:
 20348     1F0A  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 20349     1F0B  0B89               	decfsz	9,f
 20350     1F0C  2F0A               	goto	u469_25
 20351     1F0D  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20352     1F0E  0097               	movwf	23	;volatile
 20353     1F0F                     i1l72:
 20354     1F0F  0008               	return
 20355     1F10                     __end_of_pwm_fan_LoadDutyValue:
 20356                           
 20357                           	psect	text79
 20358     1D39                     __ptext79:	
 20359 ;; *************** function _getHoogtesensor *****************
 20360 ;; Defined at:
 20361 ;;		line 37 in file "adcMeasurements.c"
 20362 ;; Parameters:    Size  Location     Type
 20363 ;;		None
 20364 ;; Auto vars:     Size  Location     Type
 20365 ;;		None
 20366 ;; Return value:  Size  Location     Type
 20367 ;;                  2    0[COMMON] unsigned short 
 20368 ;; Registers used:
 20369 ;;		wreg
 20370 ;; Tracked objects:
 20371 ;;		On entry : 0/0
 20372 ;;		On exit  : 0/0
 20373 ;;		Unchanged: 0/0
 20374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20379 ;;Total ram usage:        2 bytes
 20380 ;; Hardware stack levels used: 1
 20381 ;; This function calls:
 20382 ;;		Nothing
 20383 ;; This function is called by:
 20384 ;;		_controller
 20385 ;;		_position_led_strip
 20386 ;; This function uses a non-reentrant model
 20387 ;;
 20388                           
 20389     1D39                     _getHoogtesensor:	
 20390                           ;psect for function _getHoogtesensor
 20391                           
 20392     1D39                     i1l4697:	
 20393                           ;incstack = 0
 20394                           ; Regs used in _getHoogtesensor: [wreg]
 20395                           
 20396                           
 20397                           ;adcMeasurements.c: 38:     return ADC_hoogtesensor;
 20398     1D39  0020               	movlb	0	; select bank0
 20399     1D3A  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 20400     1D3B  00F1               	movwf	?_getHoogtesensor+1
 20401     1D3C  0859               	movf	_ADC_hoogtesensor,w	;volatile
 20402     1D3D  00F0               	movwf	?_getHoogtesensor
 20403     1D3E                     i1l843:
 20404     1D3E  0008               	return
 20405     1D3F                     __end_of_getHoogtesensor:
 20406                           
 20407                           	psect	text80
 20408     14F5                     __ptext80:	
 20409 ;; *************** function ___fltol *****************
 20410 ;; Defined at:
 20411 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 20412 ;; Parameters:    Size  Location     Type
 20413 ;;  f1              4   26[BANK0 ] unsigned short 
 20414 ;; Auto vars:     Size  Location     Type
 20415 ;;  exp1            1   35[BANK0 ] unsigned char 
 20416 ;;  sign1           1   34[BANK0 ] unsigned char 
 20417 ;; Return value:  Size  Location     Type
 20418 ;;                  4   26[BANK0 ] long 
 20419 ;; Registers used:
 20420 ;;		wreg, status,2, status,0
 20421 ;; Tracked objects:
 20422 ;;		On entry : 0/0
 20423 ;;		On exit  : 0/0
 20424 ;;		Unchanged: 0/0
 20425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20426 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20429 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20430 ;;Total ram usage:       10 bytes
 20431 ;; Hardware stack levels used: 1
 20432 ;; This function calls:
 20433 ;;		Nothing
 20434 ;; This function is called by:
 20435 ;;		_controller
 20436 ;;		_printFloat
 20437 ;;		_getLedNumber
 20438 ;; This function uses a non-reentrant model
 20439 ;;
 20440                           
 20441     14F5                     ___fltol:	
 20442                           ;psect for function ___fltol
 20443                           
 20444     14F5                     i1l4733:	
 20445                           ;incstack = 0
 20446                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 20447                           
 20448     14F5  1003               	clrc
 20449     14F6  0020               	movlb	0	; select bank0
 20450     14F7  0D3C               	rlf	___fltol@f1+2,w
 20451     14F8  0D3D               	rlf	___fltol@f1+3,w
 20452     14F9  00C3               	movwf	___fltol@exp1
 20453     14FA  0843               	movf	___fltol@exp1,w
 20454     14FB  1D03               	btfss	3,2
 20455     14FC  2CFE               	goto	u477_21
 20456     14FD  2CFF               	goto	u477_20
 20457     14FE                     u477_21:
 20458     14FE  2D08               	goto	i1l4739
 20459     14FF                     u477_20:
 20460     14FF                     i1l4735:
 20461     14FF  3000               	movlw	0
 20462     1500  00BD               	movwf	?___fltol+3
 20463     1501  3000               	movlw	0
 20464     1502  00BC               	movwf	?___fltol+2
 20465     1503  3000               	movlw	0
 20466     1504  00BB               	movwf	?___fltol+1
 20467     1505  3000               	movlw	0
 20468     1506  00BA               	movwf	?___fltol
 20469     1507  2D63               	goto	i1l1411
 20470     1508                     i1l4739:
 20471     1508  083A               	movf	___fltol@f1,w
 20472     1509  00BE               	movwf	??___fltol
 20473     150A  083B               	movf	___fltol@f1+1,w
 20474     150B  00BF               	movwf	??___fltol+1
 20475     150C  083C               	movf	___fltol@f1+2,w
 20476     150D  00C0               	movwf	??___fltol+2
 20477     150E  083D               	movf	___fltol@f1+3,w
 20478     150F  00C1               	movwf	??___fltol+3
 20479     1510  301F               	movlw	31
 20480     1511                     u478_25:
 20481     1511  36C1               	lsrf	??___fltol+3,f
 20482     1512  0CC0               	rrf	??___fltol+2,f
 20483     1513  0CBF               	rrf	??___fltol+1,f
 20484     1514  0CBE               	rrf	??___fltol,f
 20485     1515                     u478_20:
 20486     1515  0B89               	decfsz	9,f
 20487     1516  2D11               	goto	u478_25
 20488     1517  083E               	movf	??___fltol,w
 20489     1518  00C2               	movwf	___fltol@sign1
 20490     1519                     i1l4741:
 20491     1519  17BC               	bsf	___fltol@f1+2,7
 20492     151A                     i1l4743:
 20493     151A  30FF               	movlw	255
 20494     151B  05BA               	andwf	___fltol@f1,f
 20495     151C  30FF               	movlw	255
 20496     151D  05BB               	andwf	___fltol@f1+1,f
 20497     151E  30FF               	movlw	255
 20498     151F  05BC               	andwf	___fltol@f1+2,f
 20499     1520  3000               	movlw	0
 20500     1521  05BD               	andwf	___fltol@f1+3,f
 20501     1522                     i1l4745:
 20502     1522  3096               	movlw	150
 20503     1523  02C3               	subwf	___fltol@exp1,f
 20504     1524                     i1l4747:
 20505     1524  1FC3               	btfss	___fltol@exp1,7
 20506     1525  2D27               	goto	u479_21
 20507     1526  2D28               	goto	u479_20
 20508     1527                     u479_21:
 20509     1527  2D3E               	goto	i1l4757
 20510     1528                     u479_20:
 20511     1528                     i1l4749:
 20512     1528  0843               	movf	___fltol@exp1,w
 20513     1529  3A80               	xorlw	128
 20514     152A  3E97               	addlw	151
 20515     152B  1803               	skipnc
 20516     152C  2D2E               	goto	u480_21
 20517     152D  2D2F               	goto	u480_20
 20518     152E                     u480_21:
 20519     152E  2D30               	goto	i1l4755
 20520     152F                     u480_20:
 20521     152F  2CFF               	goto	i1l4735
 20522     1530                     i1l4755:
 20523     1530  3001               	movlw	1
 20524     1531                     u481_25:
 20525     1531  36BD               	lsrf	___fltol@f1+3,f
 20526     1532  0CBC               	rrf	___fltol@f1+2,f
 20527     1533  0CBB               	rrf	___fltol@f1+1,f
 20528     1534  0CBA               	rrf	___fltol@f1,f
 20529     1535  0B89               	decfsz	9,f
 20530     1536  2D31               	goto	u481_25
 20531     1537  3001               	movlw	1
 20532     1538  07C3               	addwf	___fltol@exp1,f
 20533     1539  1D03               	btfss	3,2
 20534     153A  2D3C               	goto	u482_21
 20535     153B  2D3D               	goto	u482_20
 20536     153C                     u482_21:
 20537     153C  2D30               	goto	i1l4755
 20538     153D                     u482_20:
 20539     153D  2D53               	goto	i1l4765
 20540     153E                     i1l4757:
 20541     153E  3020               	movlw	32
 20542     153F  0243               	subwf	___fltol@exp1,w
 20543     1540  1C03               	skipc
 20544     1541  2D43               	goto	u483_21
 20545     1542  2D44               	goto	u483_20
 20546     1543                     u483_21:
 20547     1543  2D4E               	goto	i1l1418
 20548     1544                     u483_20:
 20549     1544  2CFF               	goto	i1l4735
 20550     1545                     i1l4763:
 20551     1545  3001               	movlw	1
 20552     1546                     u484_25:
 20553     1546  35BA               	lslf	___fltol@f1,f
 20554     1547  0DBB               	rlf	___fltol@f1+1,f
 20555     1548  0DBC               	rlf	___fltol@f1+2,f
 20556     1549  0DBD               	rlf	___fltol@f1+3,f
 20557     154A  0B89               	decfsz	9,f
 20558     154B  2D46               	goto	u484_25
 20559     154C  3001               	movlw	1
 20560     154D  02C3               	subwf	___fltol@exp1,f
 20561     154E                     i1l1418:
 20562     154E  0843               	movf	___fltol@exp1,w
 20563     154F  1D03               	btfss	3,2
 20564     1550  2D52               	goto	u485_21
 20565     1551  2D53               	goto	u485_20
 20566     1552                     u485_21:
 20567     1552  2D45               	goto	i1l4763
 20568     1553                     u485_20:
 20569     1553                     i1l4765:
 20570     1553  0842               	movf	___fltol@sign1,w
 20571     1554  1903               	btfsc	3,2
 20572     1555  2D57               	goto	u486_21
 20573     1556  2D58               	goto	u486_20
 20574     1557                     u486_21:
 20575     1557  2D63               	goto	i1l1421
 20576     1558                     u486_20:
 20577     1558                     i1l4767:
 20578     1558  09BA               	comf	___fltol@f1,f
 20579     1559  09BB               	comf	___fltol@f1+1,f
 20580     155A  09BC               	comf	___fltol@f1+2,f
 20581     155B  09BD               	comf	___fltol@f1+3,f
 20582     155C  0ABA               	incf	___fltol@f1,f
 20583     155D  1903               	skipnz
 20584     155E  0ABB               	incf	___fltol@f1+1,f
 20585     155F  1903               	skipnz
 20586     1560  0ABC               	incf	___fltol@f1+2,f
 20587     1561  1903               	skipnz
 20588     1562  0ABD               	incf	___fltol@f1+3,f
 20589     1563                     i1l1421:
 20590     1563                     i1l1411:
 20591     1563  0008               	return
 20592     1564                     __end_of___fltol:
 20593                           
 20594                           	psect	text81
 20595     1E25                     __ptext81:	
 20596 ;; *************** function _TMR2_ISR *****************
 20597 ;; Defined at:
 20598 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 20599 ;; Parameters:    Size  Location     Type
 20600 ;;		None
 20601 ;; Auto vars:     Size  Location     Type
 20602 ;;		None
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1    wreg      void 
 20605 ;; Registers used:
 20606 ;;		wreg, status,2, status,0, pclath, cstack
 20607 ;; Tracked objects:
 20608 ;;		On entry : 0/0
 20609 ;;		On exit  : 0/0
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20616 ;;Total ram usage:        0 bytes
 20617 ;; Hardware stack levels used: 1
 20618 ;; Hardware stack levels required when called: 1
 20619 ;; This function calls:
 20620 ;;		NULL
 20621 ;;		_TMR2_DefaultPeriodMatchCallback
 20622 ;; This function is called by:
 20623 ;;		_INTERRUPT_InterruptManager
 20624 ;; This function uses a non-reentrant model
 20625 ;;
 20626                           
 20627     1E25                     _TMR2_ISR:	
 20628                           ;psect for function _TMR2_ISR
 20629                           
 20630     1E25                     i1l6017:	
 20631                           ;incstack = 0
 20632                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20633                           
 20634                           
 20635                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 20636     1E25  0022               	movlb	2	; select bank2
 20637     1E26  0858               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20638     1E27  0459               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20639     1E28  1903               	btfsc	3,2
 20640     1E29  2E2B               	goto	u715_21
 20641     1E2A  2E2C               	goto	u715_20
 20642     1E2B                     u715_21:
 20643     1E2B  2E31               	goto	i1l6021
 20644     1E2C                     u715_20:
 20645     1E2C                     i1l6019:
 20646                           
 20647                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 20648     1E2C  0859               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20649     1E2D  008A               	movwf	10
 20650     1E2E  0858               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20651     1E2F  000A               	callw
 20652     1E30  319E               	pagesel	$
 20653     1E31                     i1l6021:
 20654                           
 20655                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 20656     1E31  0020               	movlb	0	; select bank0
 20657     1E32  1091               	bcf	17,1	;volatile
 20658     1E33                     i1l432:
 20659     1E33  0008               	return
 20660     1E34                     __end_of_TMR2_ISR:
 20661                           
 20662                           	psect	text82
 20663     0002                     __ptext82:	
 20664 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 20665 ;; Defined at:
 20666 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 20667 ;; Parameters:    Size  Location     Type
 20668 ;;		None
 20669 ;; Auto vars:     Size  Location     Type
 20670 ;;		None
 20671 ;; Return value:  Size  Location     Type
 20672 ;;                  1    wreg      void 
 20673 ;; Registers used:
 20674 ;;		None
 20675 ;; Tracked objects:
 20676 ;;		On entry : 0/0
 20677 ;;		On exit  : 0/0
 20678 ;;		Unchanged: 0/0
 20679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20684 ;;Total ram usage:        0 bytes
 20685 ;; Hardware stack levels used: 1
 20686 ;; This function calls:
 20687 ;;		Nothing
 20688 ;; This function is called by:
 20689 ;;		_TMR2_Initialize
 20690 ;;		_TMR2_ISR
 20691 ;; This function uses a non-reentrant model
 20692 ;;
 20693                           
 20694     0002                     _TMR2_DefaultPeriodMatchCallback:	
 20695                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 20696                           
 20697     0002                     i1l438:	
 20698                           ;incstack = 0
 20699                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 20700                           
 20701     0002  0008               	return
 20702     0003                     __end_of_TMR2_DefaultPeriodMatchCallback:
 20703                           
 20704                           	psect	text83
 20705     1F82                     __ptext83:	
 20706 ;; *************** function _EUSART_TransmitISR *****************
 20707 ;; Defined at:
 20708 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 20709 ;; Parameters:    Size  Location     Type
 20710 ;;		None
 20711 ;; Auto vars:     Size  Location     Type
 20712 ;;  tempTxTail      1    0[COMMON] unsigned char 
 20713 ;; Return value:  Size  Location     Type
 20714 ;;                  1    wreg      void 
 20715 ;; Registers used:
 20716 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20717 ;; Tracked objects:
 20718 ;;		On entry : 0/0
 20719 ;;		On exit  : 0/0
 20720 ;;		Unchanged: 0/0
 20721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20726 ;;Total ram usage:        1 bytes
 20727 ;; Hardware stack levels used: 1
 20728 ;; This function calls:
 20729 ;;		Nothing
 20730 ;; This function is called by:
 20731 ;;		_EUSART_Initialize
 20732 ;;		_INTERRUPT_InterruptManager
 20733 ;; This function uses a non-reentrant model
 20734 ;;
 20735                           
 20736     1F82                     _EUSART_TransmitISR:	
 20737                           ;psect for function _EUSART_TransmitISR
 20738                           
 20739     1F82                     i1l6085:	
 20740                           ;incstack = 0
 20741                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 20742                           
 20743                           
 20744                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 20745     1F82  3008               	movlw	8
 20746     1F83  0020               	movlb	0	; select bank0
 20747     1F84  0268               	subwf	_eusartTxBufferRemaining,w	;volatile
 20748     1F85  1803               	skipnc
 20749     1F86  2F88               	goto	u723_21
 20750     1F87  2F89               	goto	u723_20
 20751     1F88                     u723_21:
 20752     1F88  2F9B               	goto	i1l745
 20753     1F89                     u723_20:
 20754     1F89                     i1l6087:
 20755                           
 20756                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 20757     1F89  0869               	movf	_eusartTxTail,w
 20758     1F8A  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 20759     1F8B  0086               	movwf	6
 20760     1F8C  3001               	movlw	1	; select bank2/3
 20761     1F8D  0087               	movwf	7
 20762     1F8E  0801               	movf	1,w
 20763     1F8F  0023               	movlb	3	; select bank3
 20764     1F90  009A               	movwf	26	;volatile
 20765     1F91                     i1l6089:
 20766                           
 20767                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 20768     1F91  0020               	movlb	0	; select bank0
 20769     1F92  0869               	movf	_eusartTxTail,w	;volatile
 20770     1F93  3E01               	addlw	1
 20771     1F94  3907               	andlw	7
 20772     1F95  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 20773     1F96                     i1l6091:
 20774                           
 20775                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 20776     1F96  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 20777     1F97  00E9               	movwf	_eusartTxTail	;volatile
 20778     1F98                     i1l6093:
 20779                           
 20780                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 20781     1F98  3001               	movlw	1
 20782     1F99  07E8               	addwf	_eusartTxBufferRemaining,f	;volatile
 20783                           
 20784                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 20785     1F9A  2F9D               	goto	i1l748
 20786     1F9B                     i1l745:	
 20787                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 20788                           
 20789                           
 20790                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 20791     1F9B  0021               	movlb	1	; select bank1
 20792     1F9C  1211               	bcf	17,4	;volatile
 20793     1F9D                     i1l748:
 20794     1F9D  0008               	return
 20795     1F9E                     __end_of_EUSART_TransmitISR:
 20796                           
 20797                           	psect	text84
 20798     1237                     __ptext84:	
 20799 ;; *************** function _EUSART_ReceiveISR *****************
 20800 ;; Defined at:
 20801 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 20802 ;; Parameters:    Size  Location     Type
 20803 ;;		None
 20804 ;; Auto vars:     Size  Location     Type
 20805 ;;  tempRxHead      1    1[COMMON] unsigned char 
 20806 ;;  regValue        1    0[COMMON] unsigned char 
 20807 ;; Return value:  Size  Location     Type
 20808 ;;                  1    wreg      void 
 20809 ;; Registers used:
 20810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20811 ;; Tracked objects:
 20812 ;;		On entry : 0/0
 20813 ;;		On exit  : 0/0
 20814 ;;		Unchanged: 0/0
 20815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20820 ;;Total ram usage:        2 bytes
 20821 ;; Hardware stack levels used: 1
 20822 ;; Hardware stack levels required when called: 1
 20823 ;; This function calls:
 20824 ;;		NULL
 20825 ;;		_EUSART_DefaultFramingErrorCallback
 20826 ;;		_EUSART_DefaultOverrunErrorCallback
 20827 ;; This function is called by:
 20828 ;;		_EUSART_Initialize
 20829 ;;		_INTERRUPT_InterruptManager
 20830 ;; This function uses a non-reentrant model
 20831 ;;
 20832                           
 20833     1237                     _EUSART_ReceiveISR:	
 20834                           ;psect for function _EUSART_ReceiveISR
 20835                           
 20836     1237                     i1l6051:	
 20837                           ;incstack = 0
 20838                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20839                           
 20840                           
 20841                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 20842     1237  0020               	movlb	0	; select bank0
 20843     1238  3567               	lslf	_eusartRxHead,w	;volatile
 20844     1239  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20845     123A  0086               	movwf	6
 20846     123B  3001               	movlw	1	; select bank2/3
 20847     123C  0087               	movwf	7
 20848     123D  3000               	movlw	0
 20849     123E  3FC0               	movwi [0]fsr1
 20850     123F  3FC1               	movwi [1]fsr1
 20851     1240                     i1l6053:
 20852                           
 20853                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 20854     1240  0023               	movlb	3	; select bank3
 20855     1241  1C9D               	btfss	29,1	;volatile
 20856     1242  2A44               	goto	u718_21
 20857     1243  2A45               	goto	u718_20
 20858     1244                     u718_21:
 20859     1244  2A57               	goto	i1l6061
 20860     1245                     u718_20:
 20861     1245                     i1l6055:
 20862                           
 20863                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 20864     1245  0020               	movlb	0	; select bank0
 20865     1246  3567               	lslf	_eusartRxHead,w	;volatile
 20866     1247  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20867     1248  0086               	movwf	6
 20868     1249  3001               	movlw	1	; select bank2/3
 20869     124A  0087               	movwf	7
 20870     124B  1501               	bsf	1,2
 20871     124C                     i1l6057:
 20872                           
 20873                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 20874     124C  085B               	movf	_EUSART_OverrunErrorHandler,w
 20875     124D  045C               	iorwf	_EUSART_OverrunErrorHandler+1,w
 20876     124E  1903               	btfsc	3,2
 20877     124F  2A51               	goto	u719_21
 20878     1250  2A52               	goto	u719_20
 20879     1251                     u719_21:
 20880     1251  2A57               	goto	i1l6061
 20881     1252                     u719_20:
 20882     1252                     i1l6059:
 20883                           
 20884                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 20885     1252  085C               	movf	_EUSART_OverrunErrorHandler+1,w
 20886     1253  008A               	movwf	10
 20887     1254  085B               	movf	_EUSART_OverrunErrorHandler,w
 20888     1255  000A               	callw
 20889     1256  3192               	pagesel	$
 20890     1257                     i1l6061:
 20891                           
 20892                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 20893     1257  0023               	movlb	3	; select bank3
 20894     1258  1D1D               	btfss	29,2	;volatile
 20895     1259  2A5B               	goto	u720_21
 20896     125A  2A5C               	goto	u720_20
 20897     125B                     u720_21:
 20898     125B  2A6E               	goto	i1l6069
 20899     125C                     u720_20:
 20900     125C                     i1l6063:
 20901                           
 20902                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 20903     125C  0020               	movlb	0	; select bank0
 20904     125D  3567               	lslf	_eusartRxHead,w	;volatile
 20905     125E  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20906     125F  0086               	movwf	6
 20907     1260  3001               	movlw	1	; select bank2/3
 20908     1261  0087               	movwf	7
 20909     1262  1481               	bsf	1,1
 20910     1263                     i1l6065:
 20911                           
 20912                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 20913     1263  085D               	movf	_EUSART_FramingErrorHandler,w
 20914     1264  045E               	iorwf	_EUSART_FramingErrorHandler+1,w
 20915     1265  1903               	btfsc	3,2
 20916     1266  2A68               	goto	u721_21
 20917     1267  2A69               	goto	u721_20
 20918     1268                     u721_21:
 20919     1268  2A6E               	goto	i1l6069
 20920     1269                     u721_20:
 20921     1269                     i1l6067:
 20922                           
 20923                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 20924     1269  085E               	movf	_EUSART_FramingErrorHandler+1,w
 20925     126A  008A               	movwf	10
 20926     126B  085D               	movf	_EUSART_FramingErrorHandler,w
 20927     126C  000A               	callw
 20928     126D  3192               	pagesel	$
 20929     126E                     i1l6069:
 20930                           
 20931                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 20932     126E  0023               	movlb	3	; select bank3
 20933     126F  0819               	movf	25,w	;volatile
 20934     1270  00F0               	movwf	EUSART_ReceiveISR@regValue
 20935     1271                     i1l6071:
 20936                           
 20937                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 20938     1271  0020               	movlb	0	; select bank0
 20939     1272  0867               	movf	_eusartRxHead,w	;volatile
 20940     1273  3E01               	addlw	1
 20941     1274  3907               	andlw	7
 20942     1275  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 20943     1276                     i1l6073:
 20944                           
 20945                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 20946     1276  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20947     1277  0666               	xorwf	_eusartRxTail,w	;volatile
 20948     1278  1D03               	skipz
 20949     1279  2A7B               	goto	u722_21
 20950     127A  2A7C               	goto	u722_20
 20951     127B                     u722_21:
 20952     127B  2A7D               	goto	i1l6077
 20953     127C                     u722_20:
 20954     127C  2A88               	goto	i1l735
 20955     127D                     i1l6077:
 20956                           
 20957                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 20958     127D  0867               	movf	_eusartRxHead,w
 20959     127E  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 20960     127F  0086               	movwf	6
 20961     1280  3001               	movlw	1	; select bank2/3
 20962     1281  0087               	movwf	7
 20963     1282  0870               	movf	EUSART_ReceiveISR@regValue,w
 20964     1283  0081               	movwf	1
 20965     1284                     i1l6079:
 20966                           
 20967                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 20968     1284  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20969     1285  00E7               	movwf	_eusartRxHead	;volatile
 20970     1286                     i1l6081:
 20971                           
 20972                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 20973     1286  3001               	movlw	1
 20974     1287  07E5               	addwf	_eusartRxCount,f	;volatile
 20975     1288                     i1l735:
 20976     1288  0008               	return
 20977     1289                     __end_of_EUSART_ReceiveISR:
 20978                           
 20979                           	psect	text85
 20980     1D27                     __ptext85:	
 20981 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 20982 ;; Defined at:
 20983 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 20984 ;; Parameters:    Size  Location     Type
 20985 ;;		None
 20986 ;; Auto vars:     Size  Location     Type
 20987 ;;		None
 20988 ;; Return value:  Size  Location     Type
 20989 ;;                  1    wreg      void 
 20990 ;; Registers used:
 20991 ;;		None
 20992 ;; Tracked objects:
 20993 ;;		On entry : 0/0
 20994 ;;		On exit  : 0/0
 20995 ;;		Unchanged: 0/0
 20996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21001 ;;Total ram usage:        0 bytes
 21002 ;; Hardware stack levels used: 1
 21003 ;; This function calls:
 21004 ;;		Nothing
 21005 ;; This function is called by:
 21006 ;;		_EUSART_Initialize
 21007 ;;		_EUSART_ReceiveISR
 21008 ;; This function uses a non-reentrant model
 21009 ;;
 21010                           
 21011     1D27                     _EUSART_DefaultOverrunErrorCallback:	
 21012                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 21013                           
 21014     1D27                     i1l5827:	
 21015                           ;incstack = 0
 21016                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 21017                           
 21018                           
 21019                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 21020     1D27  0023               	movlb	3	; select bank3
 21021     1D28  121D               	bcf	29,4	;volatile
 21022                           
 21023                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 21024     1D29  161D               	bsf	29,4	;volatile
 21025     1D2A                     i1l766:
 21026     1D2A  0008               	return
 21027     1D2B                     __end_of_EUSART_DefaultOverrunErrorCallback:
 21028                           
 21029                           	psect	text86
 21030     1D26                     __ptext86:	
 21031 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 21032 ;; Defined at:
 21033 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 21034 ;; Parameters:    Size  Location     Type
 21035 ;;		None
 21036 ;; Auto vars:     Size  Location     Type
 21037 ;;		None
 21038 ;; Return value:  Size  Location     Type
 21039 ;;                  1    wreg      void 
 21040 ;; Registers used:
 21041 ;;		None
 21042 ;; Tracked objects:
 21043 ;;		On entry : 0/0
 21044 ;;		On exit  : 0/0
 21045 ;;		Unchanged: 0/0
 21046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21051 ;;Total ram usage:        0 bytes
 21052 ;; Hardware stack levels used: 1
 21053 ;; This function calls:
 21054 ;;		Nothing
 21055 ;; This function is called by:
 21056 ;;		_EUSART_Initialize
 21057 ;;		_EUSART_ReceiveISR
 21058 ;; This function uses a non-reentrant model
 21059 ;;
 21060                           
 21061     1D26                     _EUSART_DefaultFramingErrorCallback:	
 21062                           ;psect for function _EUSART_DefaultFramingErrorCallback
 21063                           
 21064     1D26                     i1l763:	
 21065                           ;incstack = 0
 21066                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 21067                           
 21068     1D26  0008               	return
 21069     1D27                     __end_of_EUSART_DefaultFramingErrorCallback:
 21070                           
 21071                           	psect	text87
 21072     1E16                     __ptext87:	
 21073 ;; *************** function _ADC_ISR *****************
 21074 ;; Defined at:
 21075 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 21076 ;; Parameters:    Size  Location     Type
 21077 ;;		None
 21078 ;; Auto vars:     Size  Location     Type
 21079 ;;		None
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  1    wreg      void 
 21082 ;; Registers used:
 21083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/0
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21093 ;;Total ram usage:        0 bytes
 21094 ;; Hardware stack levels used: 1
 21095 ;; Hardware stack levels required when called: 2
 21096 ;; This function calls:
 21097 ;;		NULL
 21098 ;;		_ADC_DefaultInterruptHandler
 21099 ;;		_adcConversionDoneHandler
 21100 ;; This function is called by:
 21101 ;;		_INTERRUPT_InterruptManager
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105     1E16                     _ADC_ISR:	
 21106                           ;psect for function _ADC_ISR
 21107                           
 21108     1E16                     i1l6005:	
 21109                           ;incstack = 0
 21110                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21111                           
 21112                           
 21113                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 21114     1E16  0020               	movlb	0	; select bank0
 21115     1E17  1311               	bcf	17,6	;volatile
 21116     1E18                     i1l6007:
 21117                           
 21118                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 21119     1E18  0022               	movlb	2	; select bank2
 21120     1E19  085E               	movf	_ADC_InterruptHandler^(0+256),w
 21121     1E1A  045F               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 21122     1E1B  1903               	btfsc	3,2
 21123     1E1C  2E1E               	goto	u713_21
 21124     1E1D  2E1F               	goto	u713_20
 21125     1E1E                     u713_21:
 21126     1E1E  2E24               	goto	i1l52
 21127     1E1F                     u713_20:
 21128     1E1F                     i1l6009:
 21129                           
 21130                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 21131     1E1F  085F               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 21132     1E20  008A               	movwf	10
 21133     1E21  085E               	movf	_ADC_InterruptHandler^(0+256),w
 21134     1E22  000A               	callw
 21135     1E23  319E               	pagesel	$
 21136     1E24                     i1l52:
 21137     1E24  0008               	return
 21138     1E25                     __end_of_ADC_ISR:
 21139                           
 21140                           	psect	text88
 21141     1D25                     __ptext88:	
 21142 ;; *************** function _ADC_DefaultInterruptHandler *****************
 21143 ;; Defined at:
 21144 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 21145 ;; Parameters:    Size  Location     Type
 21146 ;;		None
 21147 ;; Auto vars:     Size  Location     Type
 21148 ;;		None
 21149 ;; Return value:  Size  Location     Type
 21150 ;;                  1    wreg      void 
 21151 ;; Registers used:
 21152 ;;		None
 21153 ;; Tracked objects:
 21154 ;;		On entry : 0/0
 21155 ;;		On exit  : 0/0
 21156 ;;		Unchanged: 0/0
 21157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21162 ;;Total ram usage:        0 bytes
 21163 ;; Hardware stack levels used: 1
 21164 ;; This function calls:
 21165 ;;		Nothing
 21166 ;; This function is called by:
 21167 ;;		_ADC_Initialize
 21168 ;;		_ADC_ISR
 21169 ;; This function uses a non-reentrant model
 21170 ;;
 21171                           
 21172     1D25                     _ADC_DefaultInterruptHandler:	
 21173                           ;psect for function _ADC_DefaultInterruptHandler
 21174                           
 21175     1D25                     i1l58:	
 21176                           ;incstack = 0
 21177                           ; Regs used in _ADC_DefaultInterruptHandler: []
 21178                           
 21179     1D25  0008               	return
 21180     1D26                     __end_of_ADC_DefaultInterruptHandler:
 21181                           
 21182                           	psect	text89
 21183     1175                     __ptext89:	
 21184 ;; *************** function _adcConversionDoneHandler *****************
 21185 ;; Defined at:
 21186 ;;		line 5 in file "adcMeasurements.c"
 21187 ;; Parameters:    Size  Location     Type
 21188 ;;		None
 21189 ;; Auto vars:     Size  Location     Type
 21190 ;;		None
 21191 ;; Return value:  Size  Location     Type
 21192 ;;                  1    wreg      void 
 21193 ;; Registers used:
 21194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21195 ;; Tracked objects:
 21196 ;;		On entry : 0/0
 21197 ;;		On exit  : 0/0
 21198 ;;		Unchanged: 0/0
 21199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21204 ;;Total ram usage:        2 bytes
 21205 ;; Hardware stack levels used: 1
 21206 ;; Hardware stack levels required when called: 1
 21207 ;; This function calls:
 21208 ;;		_ADC_GetConversionResult
 21209 ;;		i1_ADC_SelectChannel
 21210 ;; This function is called by:
 21211 ;;		_initAdcMultiplexer
 21212 ;;		_ADC_ISR
 21213 ;; This function uses a non-reentrant model
 21214 ;;
 21215                           
 21216     1175                     _adcConversionDoneHandler:	
 21217                           ;psect for function _adcConversionDoneHandler
 21218                           
 21219     1175                     i1l5829:	
 21220                           ;incstack = 0
 21221                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21222                           
 21223                           
 21224                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 21225     1175  2999               	goto	i1l5845
 21226     1176                     i1l5831:
 21227                           
 21228                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 21229     1176  319D  2533  3191   	fcall	_ADC_GetConversionResult
 21230     1179  0871               	movf	?_ADC_GetConversionResult+1,w
 21231     117A  0022               	movlb	2	; select bank2
 21232     117B  00CD               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 21233     117C  0870               	movf	?_ADC_GetConversionResult,w
 21234     117D  00CC               	movwf	_ADC_potentiometer^(0+256)	;volatile
 21235     117E                     i1l5833:
 21236                           
 21237                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 21238     117E  3012               	movlw	18
 21239     117F  0020               	movlb	0	; select bank0
 21240     1180  00EE               	movwf	adcConversionDoneHandler@new_channel
 21241                           
 21242                           ;adcMeasurements.c: 15:             break;
 21243     1181  29AD               	goto	i1l5847
 21244     1182                     i1l5835:
 21245                           
 21246                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 21247     1182  319D  2533  3191   	fcall	_ADC_GetConversionResult
 21248     1185  0871               	movf	?_ADC_GetConversionResult+1,w
 21249     1186  0020               	movlb	0	; select bank0
 21250     1187  00DA               	movwf	_ADC_hoogtesensor+1	;volatile
 21251     1188  0870               	movf	?_ADC_GetConversionResult,w
 21252     1189  00D9               	movwf	_ADC_hoogtesensor	;volatile
 21253     118A                     i1l5837:
 21254                           
 21255                           ;adcMeasurements.c: 18:             new_channel = pomphoogte;
 21256     118A  3013               	movlw	19
 21257     118B  00EE               	movwf	adcConversionDoneHandler@new_channel
 21258                           
 21259                           ;adcMeasurements.c: 19:             break;
 21260     118C  29AD               	goto	i1l5847
 21261     118D                     i1l5839:
 21262                           
 21263                           ;adcMeasurements.c: 21:             ADC_pomphoogte = ADC_GetConversionResult();
 21264     118D  319D  2533  3191   	fcall	_ADC_GetConversionResult
 21265     1190  0871               	movf	?_ADC_GetConversionResult+1,w
 21266     1191  0021               	movlb	1	; select bank1
 21267     1192  00EE               	movwf	(_ADC_pomphoogte+1)^(0+128)	;volatile
 21268     1193  0870               	movf	?_ADC_GetConversionResult,w
 21269     1194  00ED               	movwf	_ADC_pomphoogte^(0+128)	;volatile
 21270     1195                     i1l5841:
 21271                           
 21272                           ;adcMeasurements.c: 22:             new_channel = potentiometer;
 21273     1195  3010               	movlw	16
 21274     1196  0020               	movlb	0	; select bank0
 21275     1197  00EE               	movwf	adcConversionDoneHandler@new_channel
 21276                           
 21277                           ;adcMeasurements.c: 23:             break;
 21278     1198  29AD               	goto	i1l5847
 21279     1199                     i1l5845:
 21280     1199  0020               	movlb	0	; select bank0
 21281     119A  086E               	movf	adcConversionDoneHandler@new_channel,w
 21282     119B  00F2               	movwf	??_adcConversionDoneHandler
 21283     119C  01F3               	clrf	??_adcConversionDoneHandler+1
 21284                           
 21285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21286                           ; Switch size 1, requested type "simple"
 21287                           ; Number of cases is 1, Range of values is 0 to 0
 21288                           ; switch strategies available:
 21289                           ; Name         Instructions Cycles
 21290                           ; simple_byte            4     3 (average)
 21291                           ; direct_byte            8     6 (fixed)
 21292                           ; jumptable            260     6 (fixed)
 21293                           ;	Chosen strategy is simple_byte
 21294     119D  0873               	movf	??_adcConversionDoneHandler+1,w
 21295     119E  3A00               	xorlw	0	; case 0
 21296     119F  1903               	skipnz
 21297     11A0  29A2               	goto	i1l6335
 21298     11A1  29AD               	goto	i1l5847
 21299     11A2                     i1l6335:
 21300                           
 21301                           ; Switch size 1, requested type "simple"
 21302                           ; Number of cases is 3, Range of values is 16 to 19
 21303                           ; switch strategies available:
 21304                           ; Name         Instructions Cycles
 21305                           ; simple_byte           10     6 (average)
 21306                           ; direct_byte           17     9 (fixed)
 21307                           ; jumptable            263     9 (fixed)
 21308                           ;	Chosen strategy is simple_byte
 21309     11A2  0872               	movf	??_adcConversionDoneHandler,w
 21310     11A3  3A10               	xorlw	16	; case 16
 21311     11A4  1903               	skipnz
 21312     11A5  2976               	goto	i1l5831
 21313     11A6  3A02               	xorlw	2	; case 18
 21314     11A7  1903               	skipnz
 21315     11A8  2982               	goto	i1l5835
 21316     11A9  3A01               	xorlw	1	; case 19
 21317     11AA  1903               	skipnz
 21318     11AB  298D               	goto	i1l5839
 21319     11AC  29AD               	goto	i1l5847
 21320     11AD                     i1l5847:
 21321                           
 21322                           ;adcMeasurements.c: 25:     ADC_SelectChannel(new_channel);
 21323     11AD  086E               	movf	adcConversionDoneHandler@new_channel,w
 21324     11AE  319D  25BF  3191   	fcall	i1_ADC_SelectChannel
 21325     11B1                     i1l834:
 21326     11B1  0008               	return
 21327     11B2                     __end_of_adcConversionDoneHandler:
 21328                           
 21329                           	psect	text90
 21330     1DBF                     __ptext90:	
 21331 ;; *************** function i1_ADC_SelectChannel *****************
 21332 ;; Defined at:
 21333 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 21334 ;; Parameters:    Size  Location     Type
 21335 ;;  channel         1    wreg     enum E6663
 21336 ;; Auto vars:     Size  Location     Type
 21337 ;;  channel         1    1[COMMON] enum E6663
 21338 ;; Return value:  Size  Location     Type
 21339 ;;                  1    wreg      void 
 21340 ;; Registers used:
 21341 ;;		wreg, status,2, status,0
 21342 ;; Tracked objects:
 21343 ;;		On entry : 0/0
 21344 ;;		On exit  : 0/0
 21345 ;;		Unchanged: 0/0
 21346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21351 ;;Total ram usage:        2 bytes
 21352 ;; Hardware stack levels used: 1
 21353 ;; This function calls:
 21354 ;;		Nothing
 21355 ;; This function is called by:
 21356 ;;		_adcConversionDoneHandler
 21357 ;; This function uses a non-reentrant model
 21358 ;;
 21359                           
 21360     1DBF                     i1_ADC_SelectChannel:	
 21361                           ;psect for function i1_ADC_SelectChannel
 21362                           
 21363                           
 21364                           ;incstack = 0
 21365                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 21366                           ;i1ADC_SelectChannel@channel stored from wreg
 21367     1DBF  00F1               	movwf	i1ADC_SelectChannel@channel
 21368     1DC0                     i1l5285:
 21369                           
 21370                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 21371     1DC0  0871               	movf	i1ADC_SelectChannel@channel,w
 21372     1DC1  00F0               	movwf	??i1_ADC_SelectChannel
 21373     1DC2  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21374     1DC3  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21375     1DC4  0021               	movlb	1	; select bank1
 21376     1DC5  081D               	movf	29,w	;volatile
 21377     1DC6  0670               	xorwf	??i1_ADC_SelectChannel,w
 21378     1DC7  3903               	andlw	-253
 21379     1DC8  0670               	xorwf	??i1_ADC_SelectChannel,w
 21380     1DC9  009D               	movwf	29	;volatile
 21381     1DCA                     i1l30:
 21382     1DCA  0008               	return
 21383     1DCB                     __end_ofi1_ADC_SelectChannel:
 21384                           
 21385                           	psect	text91
 21386     1D33                     __ptext91:	
 21387 ;; *************** function _ADC_GetConversionResult *****************
 21388 ;; Defined at:
 21389 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 21390 ;; Parameters:    Size  Location     Type
 21391 ;;		None
 21392 ;; Auto vars:     Size  Location     Type
 21393 ;;		None
 21394 ;; Return value:  Size  Location     Type
 21395 ;;                  2    0[COMMON] unsigned short 
 21396 ;; Registers used:
 21397 ;;		wreg
 21398 ;; Tracked objects:
 21399 ;;		On entry : 0/0
 21400 ;;		On exit  : 0/0
 21401 ;;		Unchanged: 0/0
 21402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21407 ;;Total ram usage:        2 bytes
 21408 ;; Hardware stack levels used: 1
 21409 ;; This function calls:
 21410 ;;		Nothing
 21411 ;; This function is called by:
 21412 ;;		_adcConversionDoneHandler
 21413 ;; This function uses a non-reentrant model
 21414 ;;
 21415                           
 21416     1D33                     _ADC_GetConversionResult:	
 21417                           ;psect for function _ADC_GetConversionResult
 21418                           
 21419     1D33                     i1l4657:	
 21420                           ;incstack = 0
 21421                           ; Regs used in _ADC_GetConversionResult: [wreg]
 21422                           
 21423                           
 21424                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 21425     1D33  0021               	movlb	1	; select bank1
 21426     1D34  081C               	movf	28,w	;volatile
 21427     1D35  00F1               	movwf	?_ADC_GetConversionResult+1
 21428     1D36  081B               	movf	27,w	;volatile
 21429     1D37  00F0               	movwf	?_ADC_GetConversionResult
 21430     1D38                     i1l39:
 21431     1D38  0008               	return
 21432     1D39                     __end_of_ADC_GetConversionResult:
 21433     0002                     ___latbits      equ	2
 21434     007E                     btemp           set	126	;btemp
 21435     007E                     int$flags       set	126
 21436     007E                     wtemp0          set	126
 21437                           
 21438                           	psect	config
 21439                           
 21440                           ;Config register CONFIG1 @ 0x8007
 21441                           ;	FEXTOSC External Oscillator mode Selection bits
 21442                           ;	FEXTOSC = OFF, Oscillator not enabled
 21443                           ;	Power-up default value for COSC bits
 21444                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 21445                           ;	Clock Out Enable bit
 21446                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 21447                           ;	Clock Switch Enable bit
 21448                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21449                           ;	Fail-Safe Clock Monitor Enable
 21450                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 21451     8007                     	org	32775
 21452     8007  3F8C               	dw	16268
 21453                           
 21454                           ;Config register CONFIG2 @ 0x8008
 21455                           ;	Master Clear Enable bit
 21456                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 21457                           ;	Power-up Timer Enable bit
 21458                           ;	PWRTE = OFF, PWRT disabled
 21459                           ;	Watchdog Timer Enable bits
 21460                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 21461                           ;	Low-power BOR enable bit
 21462                           ;	LPBOREN = OFF, ULPBOR disabled
 21463                           ;	Brown-out Reset Enable bits
 21464                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 21465                           ;	Brown-out Reset Voltage selection bit
 21466                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 21467                           ;	PPSLOCK bit One-Way Set Enable bit
 21468                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 21469                           ;	Stack Overflow/Underflow Reset Enable bit
 21470                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 21471                           ;	Debugger enable bit
 21472                           ;	DEBUG = 0x1, unprogrammed default
 21473     8008                     	org	32776
 21474     8008  3FF3               	dw	16371
 21475                           
 21476                           ;Config register CONFIG3 @ 0x8009
 21477                           ;	User NVM self-write protection bits
 21478                           ;	WRT = OFF, Write protection off
 21479                           ;	Low Voltage Programming Enable bit
 21480                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 21481     8009                     	org	32777
 21482     8009  3FFF               	dw	16383
 21483                           
 21484                           ;Config register CONFIG4 @ 0x800A
 21485                           ;	User NVM Program Memory Code Protection bit
 21486                           ;	CP = OFF, User NVM code protection disabled
 21487                           ;	Data NVM Memory Code Protection bit
 21488                           ;	CPD = OFF, Data NVM code protection disabled
 21489     800A                     	org	32778
 21490     800A  3FFF               	dw	16383

Data Sizes:
    Strings     152
    Constant    86
    Data        14
    BSS         128
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      79
    BANK1            80     77      79
    BANK2            80      0      74
    BANK3            80      0      52
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[15]), STR_11(CODE[17]), STR_2(CODE[24]), 
		 -> STR_3(CODE[16]), STR_4(CODE[10]), STR_5(CODE[11]), STR_6(CODE[3]), 
		 -> STR_7(CODE[25]), STR_8(CODE[13]), STR_9(CODE[13]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2074$buffer	PTR unsigned char  size(2) Largest target is 0

    S2074$source	PTR const unsigned char  size(2) Largest target is 0

    S242$4$0	PTR void  size(2) Largest target is 0

    S242$5$0	PTR void  size(2) Largest target is 0

    S242$6$0	PTR void  size(2) Largest target is 0

    S242SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S242SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S242SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S242SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S242SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S242SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S242SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S242SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S242SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S242SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S242SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S242SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S242SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S242SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$17$0	PTR FTN()void  size(2) Largest target is 0

    S997$18$0	PTR FTN()void  size(2) Largest target is 0

    S997$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S997$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S997$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S997$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S997$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S997$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S997$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S997$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S997$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S997$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S997$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S997$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S997$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S997$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S997$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S997$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S997$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S997$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S997$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[15]), STR_11(CODE[17]), STR_2(CODE[24]), 
		 -> STR_3(CODE[16]), STR_4(CODE[10]), STR_5(CODE[11]), STR_6(CODE[3]), 
		 -> STR_7(CODE[25]), STR_8(CODE[13]), STR_9(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[15]), STR_11(CODE[17]), STR_2(CODE[24]), 
		 -> STR_3(CODE[16]), STR_4(CODE[10]), STR_5(CODE[11]), STR_6(CODE[3]), 
		 -> STR_7(CODE[25]), STR_8(CODE[13]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[15]), STR_11(CODE[17]), STR_2(CODE[24]), 
		 -> STR_3(CODE[16]), STR_4(CODE[10]), STR_5(CODE[11]), STR_6(CODE[3]), 
		 -> STR_7(CODE[25]), STR_8(CODE[13]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    ___fltol->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fladd->i1___flmul
    ___fltol->i1___flmul

Critical Paths under _main in BANK1

    _main->_uartHandler
    _uartHandler->_readLine
    _str2float->___flmul
    ___flmul->__Umul8_16
    ___fladd->___xxtofl
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _printLogs->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _check_push_up->_setSetpoint
    _setSetpoint->_atoi
    _updateLedstripAnimation->_counter_led
    _counter_led->___lwdiv
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   23246
                                             76 BANK1      1     1      0
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                      _check_push_up
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   16711
                                             75 BANK1      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5361
                                             35 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                              9 BANK1     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1988
                                             14 BANK1     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                             47 BANK1      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    5439
                                             72 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     338
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0    5392
                         _getCounter
                      _getPomphoogte
                        _getSetpoint
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    5392
                                             65 BANK1      7     1      6
                               _atoi (ARG)
                         _getCounter (ARG)
                      _getPomphoogte (ARG)
                        _getSetpoint (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    5320
                                             57 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           17    12      5    5179
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1663
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   8     6      2     290
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2161
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1083
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     432
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     331
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     229
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     206
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _check_push_up                                        1     1      0      70
                                             15 BANK1      1     1      0
           _PWM_buzzer_LoadDutyValue
                      _getPomphoogte
                        _getSetpoint
                        _setSetpoint
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      24
                                             13 BANK1      2     0      2
                               _atoi (ARG)
                        _getSetpoint (ARG)
 ---------------------------------------------------------------------------------
 (2) _getSetpoint                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getPomphoogte                                        2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM_buzzer_LoadDutyValue                             4     2      2      46
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0     631
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0     631
                        _counter_led
 ---------------------------------------------------------------------------------
 (3) _counter_led                                          6     6      0     631
                                              7 BANK1      6     6      0
                            ___lwdiv
                             ___wmul
                         _getCounter
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     150
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getCounter                                           2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     108
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     168
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM_buzzer_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_buzzer_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4469
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4349
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4349
                                             46 BANK0      7     7      0
                            ___fltol
                    _getHoogtesensor
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (15) _getHoogtesensor                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) ___fltol                                            10     6      4     234
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM_buzzer_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _counter_led
         ___lwdiv
         ___wmul
         _getCounter
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   _check_push_up
     _PWM_buzzer_LoadDutyValue
     _getPomphoogte
     _getSetpoint
     _setSetpoint
       _atoi (ARG)
         ___wmul
       _getSetpoint (ARG)
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getCounter
     _getPomphoogte
     _getSetpoint
     _printf
       _atoi (ARG)
       _getCounter (ARG)
       _getPomphoogte (ARG)
       _getSetpoint (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_IsTxReady
                   _EUSART_Write
               _fputs
                 _fputc
               _strlen
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
           ___xxtofl (ARG)
         ___fldiv
         ___flmul
           __Umul8_16
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       ___fltol
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       _getHoogtesensor
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___xxtofl

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      79     98.8%
BANK1               80     77      79     98.8%
BANK2               80      0      74     92.5%
BANK3               80      0      52     65.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     298      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 19 09:11:34 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0004                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 0003  
                                 _SPI1_ByteExchange 1DFB                          __end_of_pwm_fan_Initialize 1DEF  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1DFA  
                                                l27 1F3A                                                  l55 1D59  
                                                l83 1DE2                                                  l69 1DEE  
                                                l86 1F68                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5                             ??_PWM_buzzer_Initialize 00A0  
       __end_of_EUSART_OverrunErrorCallbackRegister 1E61               ??_EUSART_OverrunErrorCallbackRegister 00A2  
              ?_EUSART_OverrunErrorCallbackRegister 00A0                 _EUSART_OverrunErrorCallbackRegister 1E52  
                                       i1___flmul@a 0024                                                  _ki 0160  
                                       i1___flmul@b 0020                                                  _kp 0164  
                               ___wmul@multiplicand 00A2                                 __Umul8_16@word_mpld 00A6  
                                   ??_getPomphoogte 00A2                                          i1___xxtofl 175C  
                                               l133 1DB4                                                 l141 15D3  
                                               l227 1DD6                                                 l254 1D6B  
                                               l174 1DFF                                                 l351 1236  
                                               l272 1D62                                                 l176 1E04  
                                               l177 1E07                                                 l516 1E6F  
                                               l543 1D98                                                 l712 1DAA  
                                               l457 1EA1                                                 l546 07FF  
                                               l379 1FFF                                                 l715 1DA1  
                                               l557 1EFA                                                 l725 1FDD  
                                               l398 1E90                                                 l494 1D74  
                                               l742 10AD                                                 l656 1139  
                                               l760 1EB2                                                 l770 1E51  
                                               l739 10AB                                                 l908 11F0  
                                               l837 080C                                                 l774 1E60  
                                               l846 1D44                                                 l926 175B  
                                               l953 1D86                                                 l881 099E  
                                               l890 09D5                                                 l971 1ED4  
                                               l965 1D8F                                                 l974 1EC3  
                                               l991 1F24                                                 l895 1386  
                                               l897 13DE                                                 l994 1F81  
                                               l997 101A                                                 _PR2 001E  
                                               _PR4 0416                                                 _PR6 041D  
                                               _abs 1ED5                                                 _pad 12DB  
                                   __end_of_ADC_ISR 1E25                     __end_of_ADC_SetInterruptHandler 1D5A  
                               ??_SPI1_ByteExchange 00A1                                        ___awmod@sign 00A5  
                                   _TMR2_Initialize 1E80                        __end_of_sendLedstripEndFrame 1F82  
                                               wreg 0009                                       i1___fladd@grs 004D  
                                      ___flmul@aexp 00BB                                        ___flmul@bexp 00BC  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 00B6  
                                      ___flmul@temp 00C1                                        ___flmul@prod 00BD  
                               i1_ADC_SelectChannel 1DBF                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 0043  
                                              l1030 1385                                                l1033 1D2E  
                                              ?_abs 00A6                                                l1036 1E15  
                                              l1062 1648                                                l1217 1FA9  
                                              l1065 1D7D                                                l1219 1FBD  
                                              l1370 143A                                                l1522 05DC  
                                              l1507 07FE                                                l1531 0712  
                                              l1524 05B6                                                l1620 0249  
                                              l1518 055D                                                l1614 02CB  
                                              l1383 12DA                                                l1543 068F  
                                              l1720 12F1                                                l1560 0705  
                                              l1552 06E5                                                l4201 10A8  
                                              l1561 0712                                                l5001 0C95  
                                              l1633 1075                                                l1626 02C1  
                                              l4203 1EA4                                                l4211 1497  
                                              l1723 1313                                                l1539 066D  
                                              l5003 0C97                                                l1635 1085  
                                              l1732 073C                                                l1660 092A  
                                              l4205 1EA4                                                l4221 14D4  
                                              l4213 149E                                                l1821 1F50  
                                              l1725 132F                                                l1741 07CB  
                                              l1549 06B2                                                l5021 0CDC  
                                              l5005 0CA7                                                l5013 0CBE  
                                              l1590 0D79                                                l1574 0C9F  
                                              l4311 1296                                                l4303 1289  
                                              l4207 1EAC                                                l4223 14EA  
                                              l1807 14F4                                                l4215 14A4  
                                              l1815 1061                                                l4231 1050  
                                              l1751 16C1                                                l5031 0CFB  
                                              l5023 0CE4                                                l5015 0CC3  
                                              l5007 0CB3                                                l5111 009B  
                                              l1671 08F6                                                l1728 073E  
                                              l1576 0DF3                                                l1672 0902  
                                              l1497 1174                                                l4321 12AD  
                                              l4313 129A                                                l4305 128B  
                                              l4217 14A9                                                l4233 1055  
                                              l4241 1F4A                                                l4401 1305  
                                              l5041 0D27                                                l5033 0D09  
                                              l5025 0CEC                                                l5009 0CB5  
                                              l5201 0229                                                l5121 00B0  
                                              l5113 009C                                                l5105 0091  
                                              l1658 08A9                                                l4251 1FAE  
                                              l6003 1D2B                                                l4331 12C6  
                                              l4323 12AF                                                l4315 129F  
                                              l4307 128F                                                l4411 1EDA  
                                              l4219 14B4                                                l4227 103E  
                                              l4235 1F3B                                                l4403 1318  
                                              l1595 0DC3                                                l5051 0D40  
                                              l5043 0D28                                                l5035 0D0D  
                                              l5027 0CF4                                                l5019 0CCC  
                                              l5203 022D                                                l5131 00C2  
                                              l5123 00B8                                                l5115 00A1  
                                              l5107 0095                                                l1659 08BA  
                                              l1596 0DDD                                                l4341 113A  
                                              l4253 1FB3                                                l4245 1F9E  
                                              l6101 1E0D                                                l4261 13E1  
                                              l4325 12B3                                                l4317 12A5  
                                              l4333 12CC                                                l4309 1294  
                                              l4413 1EDB                                                l4229 1042  
                                              l4237 1F3F                                                l4405 1322  
                                              l4421 0725                                                l4501 1464  
                                              l5061 0D55                                                l5053 0D42  
                                              l5045 0D30                                                l5037 0D0E  
                                              l5029 0CF6                                                l5221 0275  
                                              l5213 024E                                                l5205 022E  
                                              l5141 00DE                                                l5133 00C7  
                                              l5125 00BB                                                l5117 00A6  
                                              l5109 0097                                                l1774 0C4F  
                                              l1766 0B05                                                l1598 0DE8  
                                              l6031 1FED                                                l6023 1FDE  
                                              l4351 114D                                                l4343 113D  
                                              l4255 1FB9                                                l4247 1FA1  
                                              l4511 1DFB                                                l4271 13F5  
                                              l4263 13E5                                                l4335 12D1  
                                              l4327 12BD                                                l4319 12A8  
                                              l4183 1D99                                                l4191 108F  
                                              l4239 1F41                                                l4431 0742  
                                              l4423 072A                                                l1759 1496  
                                              l4503 1476                                                l5071 0D76  
                                              l5055 0D49                                                l5063 0D59  
                                              l5039 0D15                                                l5047 0D32  
                                              l5231 02A7                                                l5215 0253  
                                              l5223 0279                                                l5207 0232  
                                              l5151 00FC                                                l5143 00E3  
                                              l5135 00CC                                                l5127 00BD  
                                              l5119 00AE                                                l6111 16FC  
                                              l6103 16C2                                                l1768 0B11  
                                              l1696 1E7F                                                l6033 1FF0  
                                              l6025 1FE4                                                l6041 1D6C  
                                              l4361 116A                                                l4353 1151  
                                              l4345 1143                                                l4249 1FA5  
                                              l4513 1E05                                                l4281 1407  
                                              l4273 13F7                                                l4265 13EA  
                                              l4337 12D6                                                l4329 12C1  
                                              l4409 1ED5                                                l4193 1095  
                                              l4441 076B                                                l4433 0745  
                                              l4425 072E                                                l4417 0713  
                                              l4505 147E                                                l4521 0AF8  
                                              l1689 0885                                                l5081 0D8D  
                                              l5065 0D5D                                                l5057 0D4D  
                                              l5049 0D38                                                l5241 02C3  
                                              l5233 02A9                                                l5225 0286  
                                              l5217 0259                                                l5209 0246  
                                              l5161 0153                                                l5153 0109  
                                              l5145 00E8                                                l5137 00D4  
                                              l5129 00C1                                                l6121 1732  
                                              l6113 1705                                                l6105 16C8  
                                              l6035 1FF3                                                l6027 1FE7  
                                              l4355 1160                                                l4347 1146  
                                              l4363 1170                                                l4611 1F69  
                                              l6043 1EE7                                                l6131 15EE  
                                              l4291 1421                                                l4283 1409  
                                              l4275 13F9                                                l4267 13EC  
                                              l4259 13DF                                                l1795 1EE6  
                                              l4195 109D                                                l4187 1086  
                                              l4451 07A2                                                l4435 074A  
                                              l4443 077B                                                l4427 0733  
                                              l4419 0716                                                l4507 1492  
                                              l4371 07D6                                                l4531 0B14  
                                              l4523 0AFD                                                l5091 0DD4  
                                              l5083 0DA5                                                l5075 0D7E  
                                              l5067 0D5E                                                l5059 0D4E  
                                              l5235 02B4                                                l5227 0290  
                                              l5219 025D                                                l5171 0184  
                                              l5163 0160                                                l5155 0121  
                                              l5139 00D6                                                l5251 08A1  
                                              l6115 1717                                                l6107 16D6  
                                              l6123 173A                                                l1788 10D7  
                                              l6037 1FF6                                                l6029 1FEA  
                                              l4357 1164                                                l4349 114B  
                                              l4605 1D75                                                l4613 1002  
                                              l6045 1EEC                                                l6141 1623  
                                              l6133 15F1                                                l6125 15D4  
                                              l4293 1426                                                l4285 140D  
                                              l4277 13FF                                                l4269 13F0  
                                              l4197 10A3                                                l4189 108B  
                                              l4445 0789                                                l4453 07A7  
                                              l4437 0766                                                l4429 0738  
                                              l4381 07EF                                                l4373 07DB  
                                              l4541 0B3D                                                l4533 0B24  
                                              l4525 0B02                                                l4517 0ADE  
                                              l4701 1E70                                                l5093 0DDC  
                                              l5077 0D83                                                l5085 0DA9  
                                              l5069 0D62                                                l4621 1071  
                                              l5237 02B8                                                l5229 029E  
                                              l5181 01C1                                                l5173 018B  
                                              l5165 0167                                                l5157 012E  
                                              l5149 00F1                                                l5261 08CD  
                                              l5253 08B1                                                l5245 0888  
                                              l6117 1720                                                l6109 16EA  
                                              l6221 10DC                                                ?_pad 00B4  
                                              l6039 1FF9                                                l4359 1165  
                                              l4711 1348                                                l6047 1EF3  
                                              l6135 15F6                                                l6127 15DA  
                                              l4287 141C                                                l4279 1402  
                                              l4295 142C                                                l4199 10A6  
                                              l4391 12E0                                                l4455 07AD  
                                              l4447 0790                                                l4439 0767  
                                              l4383 07F4                                                l4375 07DD  
                                              l4367 07CC                                                l4471 1660  
                                              l4463 1649                                                l4551 0B6B  
                                              l4543 0B42                                                l4535 0B29  
                                              l4527 0B07                                                l4519 0AF0  
                                              l4631 10B3                                                l4703 1E73  
                                              l6151 11B2                                                l5095 0DE0  
                                              l5087 0DB6                                                l5079 0D89  
                                              l4623 107C                                                l4615 1064  
                                              l5239 02B9                                                l5191 0212  
                                              l5183 01D3                                                l5175 019D  
                                              l5167 0172                                                l5159 0146  
                                              l5271 08FA                                                l5263 08DC  
                                              l5247 088D                                                l6119 1729  
                                              l6231 10FA                                                l6223 10E8  
                                              l4609 1F10                                                l4721 135D  
                                              l4713 1358                                                l6049 1EF8  
                                              l6137 160F                                                l6129 15E7  
                                              l6145 1631                                                l4297 1431  
                                              l4289 1420                                                l4393 12EA  
                                              l4457 07B1                                                l4449 0795  
                                              l4377 07E1                                                l4369 07D3  
                                              l4385 07FA                                                l4481 1690  
                                              l4473 1674                                                l4465 164C  
                                              l4561 0BA0                                                l4553 0B78  
                                              l4545 0B4A                                                l4537 0B38  
                                              l4633 10B7                                                l6153 11B8  
                                              l4801 0540                                                l5097 0DE4  
                                              l5089 0DD1                                                l4625 1081  
                                              l4617 1066                                                l5193 0219  
                                              l5185 01E8                                                l5177 01A4  
                                              l5169 0179                                                l5281 0922  
                                              l5273 0904                                                l5265 08E3  
                                              l5257 08BD                                                l5249 0891  
                                              l6233 10FD                                                l6225 10EB  
                                              l6217 10D8                                                l4731 1382  
                                              l4723 1368                                                l4715 135B  
                                              l4707 1330                                                l6139 161C  
                                              l6147 1639                                                l4299 1436  
                                              l4395 12EF                                                l4459 07B8  
                                              l4379 07EB                                                l4483 1696  
                                              l4475 1675                                                l4467 1658  
                                              l4563 0BAE                                                l4571 0BC8  
                                              l4547 0B54                                                l4539 0B3C  
                                              l4635 10CB                                                l4803 0545  
                                              l4811 0555                                                l5099 0DE6  
                                              l4619 106D                                                l5195 021D  
                                              l5187 01FF                                                l5179 01B6  
                                              l5275 0918                                                l5267 08EC  
                                              l5259 08C6                                                l6227 10EE  
                                              l6219 10DB                                                l4725 1371  
                                              l4709 1338                                                l6149 1646  
                                              l5701 15D2                                                l4397 12F4  
                                              l4389 12DB                                                l4493 143B  
                                              l4485 169B                                                l4477 1679  
                                              l4469 165B                                                l4573 0BD2  
                                              l4581 0BF9                                                l4557 0B89  
                                              l4549 0B5E                                                l4637 10D5  
                                              l4629 10AE                                                l4901 065E  
                                              l4821 056D                                                l4813 0563  
                                              l4805 054A                                                l5197 021E  
                                              l5189 0206                                                l5277 091D  
                                              l5269 08F0                                                l6229 10F1  
                                              l4655 1D51                                                l5711 1D5A  
                                              l4671 1E59                                                l4663 1D63  
                                              l4727 1379                                                l5703 15D3  
                                              l4399 1300                                                l4495 143E  
                                              l4487 16A8                                                l4479 1689  
                                              l4583 0C0A                                                l4591 0C23  
                                              l4575 0BE8                                                l4559 0B93  
                                              l4911 0683                                                l4903 0665  
                                              l4831 0577                                                l4823 056F  
                                              l4815 0567                                                l4807 0552  
                                              l5199 0225                                                l5279 0921  
                                              l5713 1D5E                                                l4665 1E43  
                                              l5801 1118                                                l5721 11FA  
                                              l4729 137C                                                l6097 0800  
                                              l4497 144F                                                l4489 16AD  
                                              l4585 0C12                                                l4577 0BF6  
                                              l4569 0BBF                                                l4673 1DA2  
                                              l4681 1FC7                                                l4921 0699  
                                              l4913 068A                                                l4905 0675  
                                              l4841 0581                                                l4833 0579  
                                              l4825 0571                                                l4817 0569  
                                              l4809 0553                                                l4667 1E4A  
                                              l5811 112F                                                l5803 111A  
                                              l5707 1DCB                                                l5731 120E  
                                              l5723 11FC                                                l5715 11F1  
                                              l6099 1E08                                                l4499 1457  
                                              l4587 0C1D                                                l4691 1FDA  
                                              l4683 1FCD                                                l4931 06A9  
                                              l4923 069E                                                l4915 068E  
                                              l4907 067A                                                l4851 059F  
                                              l4843 0583                                                l4835 057B  
                                              l4827 0573                                                l4819 056B  
                                              l4771 050B                                                l4669 1E52  
                                              l5821 1136                                                l5813 1131  
                                              l5805 111C                                                l5709 1DCE  
                                              l5741 121B                                                l5733 1210  
                                              l5725 11FF                                                l5717 11F5  
                                              l4597 0C2C                                                l4693 1FDC  
                                              l4685 1FD0                                                l4677 1FBE  
                                              l5901 1398                                                l4941 06C2  
                                              l4933 06AF                                                l4917 0693  
                                              l4925 06A0                                                l4861 05CB  
                                              l4853 05BA                                                l4845 0585  
                                              l4837 057D                                                l4829 0575  
                                              l4781 051C                                                l4773 050D  
                                              l5671 1F2E                                                l5663 1F25  
                                              l5823 1137                                                l5815 1132  
                                              l5807 1124                                                l5751 1226  
                                              l5743 121D                                                l5735 1212  
                                              l5727 1201                                                l5719 11F8  
                                              l4599 0C45                                                l4687 1FD2  
                                              l4679 1FBE                                                l5911 13B3  
                                              l4951 06F7                                                l4943 06C6  
                                              l4919 0697                                                l4927 06A4  
                                              l4863 05D3                                                l4855 05C4  
                                              l4839 057F                                                l4847 0587  
                                              l4791 0532                                                l4783 0524  
                                              l4775 0511                                                l5673 1F30  
                                              l5665 1F28                                                l5817 1134  
                                              l5809 112C                                                l5753 1229  
                                              l5745 1220                                                l5737 1215  
                                              l5729 120B                                                l5761 1E89  
                                              l5681 1DEA                                                l5825 1D90  
                                              l4689 1FD8                                                l5921 13C7  
                                              l5913 13B5                                                l5905 13A0  
                                              l4961 070D                                                l4953 06FC  
                                              l4945 06E3                                                l4937 06B7  
                                              l4929 06A5                                                l4881 0608  
                                              l4873 05EE                                                l4857 05C6  
                                              l4865 05D5                                                l4849 0588  
                                              l4793 0538                                                l4785 0525  
                                              l4777 0512                                                l4769 0507  
                                              l5675 1F38                                                l5667 1F2A  
                                              l5819 1135                                                l5747 1222  
                                              l5739 1217                                                l5683 1DD7  
                                              l5691 1DAF                                                l5763 1E8B  
                                              l5755 1E80                                                l5771 1E95  
                                              l5923 13D3                                                l5931 13DB  
                                              l5915 13B7                                                l5907 13A3  
                                              l4963 0711                                                l4955 06FD  
                                              l4947 06EA                                                l4939 06BC  
                                              l4883 060A                                                l4875 05F6  
                                              l4867 05E0                                                l4891 061A  
                                              l4859 05CA                                                l4795 0539  
                                              l4779 0517                                                l4787 0527  
                                              l4971 0C5A                                                l5669 1F2C  
                                              l5749 1224                                                l5685 1DDE  
                                              l5765 1E8D                                                l5757 1E83  
                                              l5773 1E9A                                                l5781 1E64  
                                              l5853 1D3F                                                l5933 1D7E  
                                              l5677 1DF1                                                l5693 1564  
                                              l5941 0814                                                l5925 13D9  
                                              l5909 13AB                                                l4957 0701  
                                              l4949 06EF                                                l4893 0630  
                                              l4885 060E                                                l4877 05FA  
                                              l4869 05E5                                                l4797 053B  
                                              l4789 052F                                                l4981 0C6E  
                                              l4973 0C5B                                                l4965 0C50  
                                              l5861 0935                                                l5791 1105  
                                              l5759 1E84                                                l5775 1E9C  
                                              l5767 1E91                                                l5783 1E65  
                                              l5679 1DE3                                                l5687 1F51  
                                              l5695 1564                                                l5951 083A  
                                              l5943 081E                                                l5919 13B9  
                                              l4959 0703                                                l4895 0654  
                                              l4887 060F                                                l4879 05FE  
                                              l4799 053F                                                l4991 0C81  
                                              l4975 0C60                                                l4983 0C70  
                                              l4967 0C54                                                l5871 098F  
                                              l5863 093B                                                l5793 110A  
                                              l5689 1DAB                                                l5777 1E9E  
                                              l5769 1E94                                                l5785 1E6A  
                                              l5697 1569                                                l5961 0870  
                                              l5945 082B                                                l5937 080D  
                                              l4897 0656                                                l4889 0617  
                                              l4993 0C82                                                l4985 0C78  
                                              l4977 0C65                                                l4969 0C56  
                                              l5881 09A4                                                l5873 0992  
                                              l5865 093D                                                l5857 092B  
                                              l5795 1111                                                l5787 1E6C  
                                              l5779 1E61                                                l5699 15D1  
                                              l5963 0875                                                l5955 0845  
                                              l5947 0835                                                l5939 0812  
                                              l5971 1EC4                                                l4899 0659  
                                              l4995 0C87                                                l4987 0C7B  
                                              l4979 0C6D                                                l5883 09C0  
                                              l5875 0998                                                l5867 0943  
                                              l5859 0934                                                l5797 1114  
                                              l5789 1103                                                l5965 0881  
                                              l5949 0837                                                l5893 1386  
                                              l5973 1EB3                                                l4997 0C8C  
                                              l4989 0C7D                                                l5885 09C2  
                                              l5877 09A0                                                l5869 0949  
                                              l5799 1116                                                l5959 0863  
                                              l5895 138E                                                l4999 0C94  
                                              l5887 09C7                                                l5879 09A2  
                                              l5969 1D87                                                l5897 1395  
                                              l5889 09CD                                                STR_1 18E6  
                                              STR_2 1865                                                STR_3 188E  
                                              STR_4 18DC                                                STR_5 18C7  
                                              STR_6 18AA                                                STR_7 184C  
                                              STR_8 18BA                                                STR_9 18AD  
                                              _LATA 010C                                                _LATB 010D  
                                              _LATC 010E                                                u4000 13F0  
                                              u4001 13EF                                                u4010 13FF  
                                              u4011 13FE                                                u4100 129A  
                                              u4101 1299                                                u4030 140D  
                                              u4110 12A5                                                u4031 140C  
                                              u4111 12A4                                                u4200 1151  
                                              u4201 1150                                                u4025 1403  
                                              u4050 141C                                                u4130 12B3  
                                              u5010 05CA                                                u4051 141B  
                                              u4131 12B2                                                u5011 05C9  
                                              u4220 1160                                                u4140 12BD  
                                              u4300 07FA                                                u4221 115F  
                                              u4045 140E                                                u4141 12BC  
                                              u4125 12A9                                                u4301 07F9  
                                              u5005 05BD                                                u4070 142C  
                                              u4310 12E0                                                u5110 0630  
                                              u5030 05DC                                                u4215 1152  
                                              u4071 142B                                                u4055 1418  
                                              u4311 12DF                                                u5111 062F  
                                              u5031 05DB                                                u4240 1170  
                                              u4080 1431                                                u4160 12CC  
                                              u4320 12EF                                                u4400 0789  
                                              u5200 06A9                                                u5120 065E  
                                              u5040 05E0                                                u6000 08FA  
                                              u4241 116F                                                u4225 115C  
                                              u4081 1430                                                u4065 1422  
                                              u4161 12CB                                                u4145 12B9  
                                              u4321 12EE                                                u4401 0788  
                                              u5201 06A8                                                u5121 065D  
                                              u5113 062C                                                u5105 0611  
                                              u5041 05DF                                                u5025 05CD  
                                              u6001 08F9                                                u4170 12D1  
                                              u4090 128F                                                u4330 1313  
                                              u4410 0790                                                u4250 07D3  
                                              u5210 06AF                                                u5130 0675  
                                              u5050 05E5                                                u6010 090E  
                                              u4235 1166                                                u4171 12D0  
                                              u4155 12C2                                                u4091 128E  
                                              u4331 1312                                                u4411 078F  
                                              u4251 07D2                                                u5211 06AE  
                                              u5131 0674                                                u5051 05E4  
                                              u4180 1143                                                u4340 1318  
                                              u4420 0795                                                u4500 16AD  
                                              u5300 0701                                                u5220 06B6  
                                              u5140 067A                                                u5060 05FA  
                                              u6020 091D                                                u4181 1142  
                                              u4341 1317                                                u4421 0794  
                                              u4405 0785                                                u4501 16AC  
                                              u5301 0700                                                u5221 06B5  
                                              u5141 0679                                                u5061 05F9  
                                              u6021 091C                                                u4350 1EDA  
                                              u4430 07A2                                                u4510 144F  
                                              u4270 07E1                                                u5230 06BC  
                                              u5070 05FE                                                u6030 0921  
                                              u4351 1ED9                                                u4335 130F  
                                              u4431 07A1                                                u4511 144E  
                                              u4271 07E0                                                u5231 06BB  
                                              u5071 05FD                                                u6031 0920  
                                              u6015 090A                                                u4440 07A7  
                                              u4360 071B                                                u4520 1492  
                                              u4280 07EB                                                u4600 0BD2  
                                              u7000 139F                                                u5320 0711  
                                              u5240 06C6                                                u5160 068E  
                                              u5400 0CC3                                                u4441 07A6  
                                              u4361 0719                                                u4521 1491  
                                              u4281 07EA                                                u4265 07D7  
                                              u4601 0BD1                                                u7001 139E  
                                              u5321 0710                                                u5241 06C5  
                                              u5161 068D                                                u5401 0CC2  
                                              u4530 1E04                                                u4450 07AD  
                                              u4370 071C                                                u4610 0C0A  
                                              u7010 13AB                                                u5250 06D4  
                                              u5170 0693                                                u5090 060E  
                                              u5410 0CFB                                                u5330 0C5A  
                                              u4195 1147                                                u4531 1E03  
                                              u4451 07AC                                                u4435 079E  
                                              u4611 0C09                                                u7011 13AA  
                                              u5315 0708                                                u5171 0692  
                                              u5155 0684                                                u5091 060D  
                                              u5411 0CFA                                                u5331 0C59  
                                              u4700 1E4A                                                u3900 14A4  
                                              u4380 072A                                                u4460 1690  
                                              u4540 0AF0                                                u7020 13D3  
                                              u5260 06E3                                                u5180 069E  
                                              u5500 0D4D                                                u5340 0C60  
                                              u4620 1071                                                u4701 1E49  
                                              u3901 14A3                                                u4381 0729  
                                              u4285 07E7                                                u4461 168F  
                                              u4541 0AEF                                                u7021 13D2  
                                              u5261 06E2                                                u5181 069D  
                                              u5085 0601                                                u5501 0D4C  
                                              u5341 0C5F                                                u4621 1070  
                                              i1l30 1DCA                                                u4710 1E59  
                                              u3910 14B4                                                u4390 0733  
                                              u4470 1696                                                u4550 0B29  
                                              u7030 081E                                                u5270 06EA  
                                              u5190 06A4                                                u5350 0C65  
                                              u4711 1E58                                                u3911 14B3  
                                              u4391 0732                                                u4295 07F0  
                                              u4471 1695                                                u4551 0B28  
                                              u7031 081D                                                u5271 06E9  
                                              u5255 06D0                                                u5191 06A3  
                                              u5351 0C64                                                u3840 1DA0  
                                              u3920 14D4                                                u4480 169B  
                                              u4560 0B3C                                                u7040 082B  
                                              u4720 1DA9                                                u5280 06EF  
                                              u5600 0DD1                                                u5520 0D5D  
                                              u5440 0D0D                                                u5360 0C81  
                                              u4640 1081                                                u3841 1D9E  
                                              u3921 14D3                                                u4481 169A  
                                              u4561 0B3B                                                u7041 082A  
                                              u4721 1DA7                                                u5281 06EE  
                                              u5601 0DD0                                                u5521 0D5C  
                                              u5441 0D0C                                                u5425 0CFC  
                                              u5361 0C80                                                u4641 1080  
                                              u3850 1DA1                                                u3930 1061  
                                              u4490 16A8                                                u4570 0B54  
                                              u4650 10D5                                                u7050 0835  
                                              u4730 1DAA                                                u5290 06FC  
                                              u5610 0DE4                                                u5530 0D62  
                                              u5370 0C87                                                u3931 1060  
                                              u4491 16A7                                                u4571 0B53  
                                              u4651 10D4                                                u7051 0834  
                                              u5291 06FB                                                u5611 0DE3  
                                              u5531 0D61                                                u5515 0D4F  
                                              u5435 0D03                                                u5371 0C86  
                                              u4635 1076                                                i1l52 1E24  
                                              u7300 1646                                                u3860 108B  
                                              u3940 1F4A                                                u4580 0B5E  
                                              u7060 0844                                                u4740 1FD8  
                                              u4900 0538                                                u5540 0D76  
                                              u5460 0D27                                                u5380 0C8C  
                                              u5700 00E8                                                u7301 1645  
                                              u3861 108A                                                u3925 14D0  
                                              u3941 1F49                                                u4581 0B5D  
                                              u7061 0843                                                u4741 1FD7  
                                              u4901 0537                                                u5605 0DCD  
                                              u5541 0D75                                                u5461 0D26  
                                              u5381 0C8B                                                u5701 00E7  
                                              u3950 1FA5                                                u4750 1368  
                                              u3870 1095                                                u4590 0B93  
                                              u7310 11B8                                                u7070 0870  
                                              u4910 053F                                                u5550 0D7D  
                                              u5470 0D38                                                u5390 0CA7  
                                              u5630 009B                                                i1l39 1D38  
                                              u3951 1FA4                                                u4751 1367  
                                              u3871 1094                                                u4495 16A4  
                                              u4591 0B92                                                u7311 11B7  
                                              u7071 086F                                                u4911 053E  
                                              u5551 0D7C                                                u5471 0D37  
                                              u5455 0D0F                                                u5391 0CA6  
                                              u5631 009A                                                i1l72 1F0F  
                                              u4760 1382                                                u7160 1EEC  
                                              u3880 1EAC                                                u7080 0875  
                                              u4920 0545                                                u5560 0D83  
                                              u5480 0D40                                                u5800 0232  
                                              u5640 00A1                                                u7240 1727  
                                              u4761 1381                                                u7161 1EEB  
                                              u3881 1EAB                                                u7081 0874  
                                              u4921 0544                                                u5625 0DEB  
                                              u5561 0D82                                                u5481 0D3F  
                                              u5465 0D23                                                u5801 0231  
                                              u5641 00A0                                                u7241 1725  
                                              i1l58 1D25                                                u7170 1EF3  
                                              u3890 149E                                                u4930 054A  
                                              u5570 0D8D                                                u5810 0246  
                                              u5730 01DE                                                u5650 00A6  
                                              u7250 1728                                                u4755 1364  
                                              u7171 1EF2                                                u3891 149D  
                                              u4931 0549                                                u5571 0D8C  
                                              u5811 0245                                                u5715 0161  
                                              u5651 00A5                                                u3980 1FB9  
                                              u7260 15DA                                                u4940 0563  
                                              u5580 0D9B                                                u5820 024D  
                                              u5740 01F5                                                u5660 00C1  
                                              u5900 088D                                                u3981 1FB8  
                                              u3965 1FAA                                                u7261 15D9  
                                              u4941 0562                                                u5821 024C  
                                              u5725 018C                                                u5661 00C0  
                                              u5901 088C                                                u7270 15E7  
                                              u3990 13E5                                                u4950 0567  
                                              u4870 0511                                                u5590 0DB6  
                                              u5830 0253                                                u5670 00C7  
                                              u5910 0891                                                u3975 1FAF  
                                              u7271 15E6                                                u3991 13E4  
                                              u4951 0566                                                u4871 0510  
                                              u5591 0DB5                                                u5495 0D43  
                                              u5831 0252                                                u5735 01DA  
                                              u5671 00C6                                                u5911 0890  
                                              u7280 161C                                                u4960 059F  
                                              u4880 0517                                                u5840 025D  
                                              u5680 00CC                                                u5920 08B1  
                                              u7281 161B                                                u4961 059E  
                                              u4881 0516                                                u5585 0D97  
                                              u5841 025C                                                u5745 01F1  
                                              u5681 00CB                                                u5921 08B0  
                                              u7290 1630                                                u4970 05A9  
                                              u4890 051C                                                u5850 026B  
                                              u5770 021D                                                u5690 00E3  
                                              u7291 162F                                                u4971 05A7  
                                              u4891 051B                                                u5595 0DB2  
                                              u5771 021C                                                u5755 0200  
                                              u5691 00E2                                                u4980 05AA  
                                              u5860 0286                                                u5940 08CC  
                                              u4965 059B                                                u5861 0285  
                                              u5765 0213                                                u5941 08CB  
                                              u4990 05BA                                                u5870 029E  
                                              u5790 022D                                                u4991 05B9  
                                              u5871 029D                                                u5855 0267  
                                              u5791 022C                                                u5935 08C0  
                                              u6920 1569                                                u5880 02B8  
                                              u5960 08E2                                                u6921 1568  
                                              u5881 02B7                                                u5865 0282  
                                              u5785 021F                                                u5961 08E1  
                                              u6930 0943                                                u6915 1F62  
                                              u5875 029A                                                u5955 08D6  
                                              u6931 0942                                                u5980 08F0  
                                              u6940 0949                                                u5981 08EF  
                                              u6941 0948                                                u5990 08F6  
                                              u6950 0998                                                u5895 02BC  
                                              u5991 08F5                                                u5975 08E6  
                                              u6951 0997                                                u7567 10F5  
                                              u6960 099E                                                u7577 160A  
                                              u6961 099D                                                u6970 09C7  
                                              u6971 09C6                                                u6980 09CD  
                                              u6981 09CC                                                u6990 138E  
                                              u6991 138D                                                _TMR2 001D  
                                              _TMR4 0415                                                _TMR6 041C  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 0070  
                                   _getHoogtesensor 1D39                                  _increment_setpoint 006B  
                                              abs@a 00A6                                                _dbuf 01A0  
                                              _atoi 080D                                                _main 10D8  
                                              _dtoa 0713                                                _line 01C0  
                                     i1___flmul@grs 002E                                                _prec 0146  
                                              _nout 0144                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 1649                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 11B2                                        ?_counter_led 0070  
                             __end_of_check_push_up 1649                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0058  
        __end_of_EUSART_DefaultOverrunErrorCallback 1D2B                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1D27  
                                   ___fldiv@new_exp 00B2                           __end_of_SPI1_ByteExchange 1E08  
                   __end_of_INT_SetInterruptHandler 1D6C                                ?i1_ADC_SelectChannel 0070  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 0042  
                                             _ADACT 009F                                               ?_atoi 00A6  
                                   __end_of___fladd 0713                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___fldiv 0DF4  
                                   __end_of___awdiv 143B                                               STR_10 189E  
                                             STR_11 187D                                     __end_of___awmod 12DB  
                                   __end_of___flmul 02CC                                     __end_of___fltol 1564  
                                             ?_utoa 00BC                                     ___awdiv@divisor 00A0  
                                             _T2CON 001F                                               _T4CON 0417  
                                             _IOCAF 0393                                               _IOCBF 0396  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCBN 0395  
                                             _T6CON 041E                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                   __end_of___lwdiv 1175                                               i1l233 001B  
                                             i1l235 002C                                               i1l244 0056  
                                             i1l237 003A                                               i1l238 0056  
                                             i1l239 0048                                               i1l432 1E33  
                                   __end_of___lwmod 07FF                                               i1l438 0002  
                                             i1l491 1E42                                               i1l735 1288  
                                             i1l745 1F9B                                               i1l497 0003  
                                             i1l834 11B1                                               i1l763 1D26  
                                             i1l843 1D3E                                               i1l748 1F9D  
                                             i1l766 1D2A                                               i1l950 0ADD  
                                             i1l948 0AD6                                     ___awdiv@counter 00A4  
                                             _OSCEN 091D                                               _UART1 1800  
                                      vfpfcnvrt@fmt 00CB                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             _RXPPS 0E24                                     _TMR4_Initialize 1E91  
                                  __end_of_TMR2_ISR 1E34                                    __end_of_TMR4_ISR 1E43  
                                             _flags 0061                                  _EUSART_TransmitISR 1F82  
                                    i1___flmul@aexp 0032                                 read_prec_or_width@c 00AB  
                                    i1___flmul@bexp 0033                                 read_prec_or_width@n 00AC  
                                             _fputc 1497                                               _fputs 103E  
                                             _setKi 1EB3                                               _setKp 1EC4  
                                       ?_TMR6_Tasks 0070                                      i1___flmul@sign 002D  
                                    i1___flmul@temp 0038                                      i1___flmul@prod 0034  
                                             atoi@n 00AB                                               pad@fp 00B4  
                                             atoi@s 00A6                                               _width 0055  
                                             _putch 1EA2                                               dtoa@d 00BE  
                                             dtoa@i 00C7                                               dtoa@p 00C3  
                                             dtoa@s 00C6                                               dtoa@w 00C4  
                                             pclath 000A                                               utoa@d 00BE  
                                             utoa@i 00C4                                               utoa@p 00C1  
                                             utoa@w 00C2                                               status 0003  
                                             wtemp0 007E                                 ?_EUSART_TransmitISR 0070  
                                   i1___fladd@signs 004A                                         controller@I 0051  
                                       controller@P 004F                               ??i1_ADC_SelectChannel 0070  
                                   __initialization 005A                                        __end_of_atoi 0886  
                                      __end_of_main 1103                                        __end_of_dtoa 07CC  
                                      __end_of_utoa 16C2                                       ?_initLedstrip 0070  
                        ??_PWM_buzzer_LoadDutyValue 00A2                                      ??_EUSART_Write 00A1  
                 _EUSART_TxCompleteInterruptHandler 0150                             __end_of_TMR2_Initialize 1E91  
                                         ??_ADC_ISR 0074                         ?_INTERRUPT_InterruptManager 0070  
                                            ??_atoi 00A8                                ??_EUSART_TransmitISR 0070  
                                            ??_main 00EC                                              ??_dtoa 00C0  
                                       ?i1___xxtofl 0070                                              ??_utoa 00C0  
                           setSetpoint@new_setpoint 00AD                          __end_of_read_prec_or_width 1497  
                 PWM_buzzer_LoadDutyValue@dutyValue 00A0                                     _TMR6_Initialize 1E61  
EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  EUSART_FramingErrorCallbackRegister@callbackHandler 00A0  
                           __end_of_getHoogtesensor 1D3F                                              _ADCON0 009D  
                                            _ADCON1 009E                          _EUSART_OverrunErrorHandler 005B  
                                            ?_fputc 00A3                                              ?_fputs 00AC  
                                            _ADRESH 009C                                              _ADRESL 009B  
                                            ?_setKi 00CF                                              ?_setKp 00CF  
                                  ___awdiv@dividend 00A2                                              _ANSELA 018C  
                                            ?_putch 0070                                              _ANSELB 018D  
                                            _ANSELC 018E                                        ?_setSetpoint 00AD  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RB4PPS 0E9C                                              _RB6PPS 0E9E  
                                            i1l1411 1563                                              _RC5PPS 0EA5  
                                            _RB7PPS 0E9F                                              i1l1421 1563  
                                            _ODCONA 028C                                              i1l1418 154E  
                                            i1l1522 0EC9                                              _ODCONB 028D  
                                            i1l1531 0FFF                                              _ODCONC 028E  
                                            i1l1524 0EA3                                              i1l1620 0484  
                                            i1l1518 0E4A                                              i1l1614 0506  
                                            i1l1543 0F7C                                              i1l1560 0FF2  
                                            i1l1552 0FD2                                              i1l1561 0FFF  
                                            i1l1633 102D                                              i1l1626 04FC  
                                            i1l1539 0F5A                                              i1l1635 103D  
                                            _RC7PPS 0EA7                                              i1l1660 17FF  
                                            i1l1549 0F9F                                              i1l1671 17CB  
                                            i1l1672 17D7                                              i1l6001 0AD6  
                                            i1l1658 177E                                              i1l1659 178F  
                                            i1l6011 1E34                                              i1l6005 1E16  
                                            i1l6021 1E31                                              i1l5301 0E11  
                                            i1l6013 1E3B                                              i1l6007 1E18  
                                            i1l5311 0E25                                              i1l5303 0E12  
                                            i1l6015 1E40                                              i1l6009 1E1F  
                                            i1l6017 1E25                                              i1l5401 0EF7  
                                            i1l5321 0E32                                              i1l5313 0E26  
                                            i1l5305 0E14                                              i1l6051 1237  
                                            i1l6019 1E2C                                              i1l5411 0F1D  
                                            i1l5403 0EFB                                              i1l5331 0E50  
                                            i1l5323 0E37                                              i1l5315 0E28  
                                            i1l5307 0E1C                                              i1l6061 1257  
                                            i1l6053 1240                                              i1l5413 0F41  
                                            i1l5421 0F52                                              i1l5405 0EFC  
                                            i1l5341 0E5C                                              i1l5333 0E54  
                                            i1l5325 0E3F                                              i1l5317 0E2C  
                                            i1l5309 0E1F                                              i1l5501 02F3  
                                            i1l6071 1271                                              i1l6063 125C  
                                            i1l6055 1245                                              i1l5431 0F77  
                                            i1l5423 0F62                                              i1l5415 0F43  
                                            i1l5407 0F04                                              i1l5351 0E66  
                                            i1l5343 0E5E                                              i1l5335 0E56  
                                            i1l5327 0E40                                              i1l5319 0E2D  
                                            i1l5511 0302                                              i1l5503 02F6  
                                            i1l6081 1286                                              i1l6073 1276  
                                            i1l6065 1263                                              i1l6057 124C  
                                            i1l5441 0F8B                                              i1l5433 0F7B  
                                            i1l5425 0F67                                              i1l5417 0F46  
                                            i1l5409 0F07                                              i1l5361 0E70  
                                            i1l5353 0E68                                              i1l5345 0E60  
                                            i1l5337 0E58                                              i1l5329 0E42  
                                            i1l4641 101C                                              i1l5601 04B4  
                                            i1l5521 031E                                              i1l5513 0307  
                                            i1l5505 02F8                                              i1l6067 1269  
                                            i1l6059 1252                                              i1l6091 1F96  
                                            i1l5451 0F9C                                              i1l5435 0F80  
                                            i1l5443 0F8D                                              i1l5419 0F4B  
                                            i1l5371 0EA7                                              i1l5363 0E72  
                                            i1l5355 0E6A                                              i1l5347 0E62  
                                            i1l5339 0E5A                                              i1l5291 0DFA  
                                            i1l4651 1039                                              i1l4643 101E  
                                            i1l5611 04E4                                              i1l5603 04C1  
                                            i1l5531 0344                                              i1l5523 0323  
                                            i1l5515 030F                                              i1l5507 02FC  
                                            i1l6171 0020                                              i1l6163 0006  
                                            i1l5285 1DC0                                              i1l6077 127D  
                                            i1l6069 126E                                              i1l6093 1F98  
                                            i1l6085 1F82                                              i1l4741 1519  
                                            i1l4733 14F5                                              i1l4661 1EFB  
                                            i1l5461 0FB3                                              i1l5437 0F84  
                                            i1l5429 0F70                                              i1l5445 0F91  
                                            i1l5381 0EC0                                              i1l5373 0EB1  
                                            i1l5357 0E6C                                              i1l5349 0E64  
                                            i1l5365 0E74                                              i1l5293 0DFE  
                                            i1l4645 1025                                              i1l5613 04EF  
                                            i1l5605 04CB                                              i1l5541 039B  
                                            i1l5533 035C                                              i1l5517 0311  
                                            i1l5509 02FD                                              i1l6181 0044  
                                            i1l6173 0025                                              i1l6165 000A  
                                            i1l6335 11A2                                              i1l6079 1284  
                                            i1l6087 1F89                                              i1l4743 151A  
                                            i1l4735 14FF                                              i1l5471 0FE9  
                                            i1l5463 0FD0                                              i1l5455 0FA4  
                                            i1l5447 0F92                                              i1l5439 0F86  
                                            i1l5391 0EDB                                              i1l5375 0EB3  
                                            i1l5383 0EC2                                              i1l5367 0E75  
                                            i1l5359 0E6E                                              i1l5295 0DFF  
                                            i1l5287 0DF4                                              i1l4647 1029  
                                            i1l5615 04F3                                              i1l5607 04D9  
                                            i1l5551 03C6                                              i1l5543 03A2  
                                            i1l5535 0369                                              i1l5527 032C  
                                            i1l5519 0319                                              i1l5631 1786  
                                            i1l5623 175D                                              i1l6183 004D  
                                            i1l6175 0031                                              i1l6167 000F  
                                            i1l4657 1D33                                              i1l6089 1F91  
                                            i1l4745 1522                                              i1l5481 0FFE  
                                            i1l5473 0FEA                                              i1l5465 0FD7  
                                            i1l5457 0FA9                                              i1l5449 0F96  
                                            i1l5393 0EE3                                              i1l5385 0ECD  
                                            i1l5377 0EB7                                              i1l5369 0E8C  
                                            i1l5297 0E04                                              i1l5289 0DF8  
                                            i1l4649 1034                                              i1l5617 04F4  
                                            i1l5609 04E2                                              i1l5561 040E  
                                            i1l5553 03D8                                              i1l5545 03AD  
                                            i1l5537 0381                                              i1l5529 0337  
                                            i1l5641 17B1                                              i1l5625 1762  
                                            i1l6185 0052                                              i1l6177 0036  
                                            i1l6169 0014                                              i1l4763 1545  
                                            i1l4755 1530                                              i1l4747 1524  
                                            i1l4739 1508                                              i1l5475 0FEE  
                                            i1l5467 0FDC                                              i1l5459 0FAF  
                                            i1l5395 0EE7                                              i1l5387 0ED2  
                                            i1l5379 0EB8                                              i1l5299 0E09  
                                            i1l5619 04FE                                              i1l5571 0454  
                                            i1l5563 0423                                              i1l5555 03DF  
                                            i1l5547 03B4                                              i1l5539 038E  
                                            i1l5491 02D7                                              i1l5483 02CC  
                                            i1l5651 17D9                                              i1l5643 17B8  
                                            i1l5635 1792                                              i1l5627 1766  
                                            i1l6179 003F                                              i1l4765 1553  
                                            i1l4749 1528                                              i1l4757 153E  
                                            i1l5477 0FF0                                              i1l5469 0FE4  
                                            i1l5397 0EEB                                              i1l5581 0468  
                                            i1l5573 0458                                              i1l5565 043A  
                                            i1l5557 03F1                                              i1l5549 03BF  
                                            i1l5493 02DC                                              i1l5485 02D0  
                                            i1l5653 17ED                                              i1l5645 17C1  
                                            i1l5637 179B                                              i1l5629 1776  
                                            i1l5831 1176                                              i1l4767 1558  
                                            i1l5479 0FFA                                              i1l5399 0EF5  
                                            i1l5591 0489                                              i1l5583 0469  
                                            i1l5575 0459                                              i1l5567 0441  
                                            i1l5559 03FC                                              i1l5495 02E1  
                                            i1l5487 02D2                                              i1l5655 17F2  
                                            i1l5647 17C5                                              i1l5639 17A2  
                                            i1l5841 1195                                              i1l5833 117E  
                                            i1l4697 1D39                                              i1l5593 048E  
                                            i1l5585 046D                                              i1l5577 0460  
                                            i1l5569 044D                                              i1l5497 02E9  
                                            i1l5489 02D6                                              i1l5657 17F6  
                                            i1l5649 17CF                                              i1l5835 1182  
                                            i1l5827 1D27                                              i1l5595 0494  
                                            i1l5587 0481                                              i1l5579 0464  
                                            i1l5499 02EB                                              i1l5659 17F7  
                                            i1l5837 118A                                              i1l5845 1199  
                                            i1l5829 1175                                              i1l5597 0498  
                                            i1l5839 118D                                              i1l5847 11AD  
                                            i1l5599 04B0                                              i1l5981 0A34  
                                            i1l5991 0ABF                                              i1l5983 0A6F  
                                            i1l5975 09D6                                              i1l5993 0AC5  
                                            i1l5985 0AA3                                              i1l5977 09DE  
                                            _INLVLA 038C                                              _INLVLB 038D  
                                            i1l5995 0ACF                                              i1l5987 0AA9  
                                            i1l5979 09E7                                              _INLVLC 038E  
                                            i1l5997 0AD3                                              i1l5989 0AB2  
                                            u610_20 0E37                                              u610_21 0E36  
                                            u611_20 0E50                                              u611_21 0E4F  
                                            u620_20 0EC9                                              u612_20 0E54  
                                            u604_20 0DFE                                              u620_21 0EC8  
                                            u612_21 0E53                                              u604_21 0DFD  
                                            u621_20 0ECD                                              u613_20 0E8C  
                                            u605_20 0E04                                              u621_21 0ECC  
                                            u613_21 0E8B                                              u605_21 0E03  
                                            u613_25 0E88                                              u630_20 0F62  
                                            u622_20 0ED2                                              u614_20 0E96  
                                            u606_20 0E09                                              u710_20 0ABF  
                                            u630_21 0F61                                              u622_21 0ED1  
                                            u614_21 0E94                                              u606_21 0E08  
                                            u710_21 0ABE                                              u710_25 0ABB  
                                            u631_20 0F67                                              u623_20 0EE7  
                                            u615_20 0E97                                              u607_20 0E25  
                                            u711_20 0ACF                                              u631_21 0F66  
                                            u623_21 0EE6                                              u607_21 0E24  
                                            u711_21 0ACE                                              u720_20 125C  
                                            u480_20 152F                                              u640_20 0FA9  
                                            u624_20 0EEB                                              u616_20 0EA7  
                                            u608_20 0E2C                                              u712_20 0AD3  
                                            u720_21 125B                                              u480_21 152E  
                                            u640_21 0FA8                                              u624_21 0EEA  
                                            u616_21 0EA6                                              u608_21 0E2B  
                                            u712_21 0AD2                                              u632_25 0F71  
                                            u713_20 1E1F                                              u721_20 1269  
                                            u641_20 0FB3                                              u633_20 0F7B  
                                            u609_20 0E32                                              u713_21 1E1E  
                                            u721_21 1268                                              u641_21 0FB2  
                                            u633_21 0F7A                                              u609_21 0E31  
                                            u481_25 1531                                              u625_25 0EEE  
                                            u617_25 0EAA                                              u722_20 127C  
                                            u482_20 153D                                              u642_20 0FC1  
                                            u634_20 0F80                                              u626_20 0EFB  
                                            u618_20 0EB7                                              u466_20 1029  
                                            u650_20 02D6                                              u714_20 1E3B  
                                            u722_21 127B                                              u482_21 153C  
                                            u634_21 0F7F                                              u626_21 0EFA  
                                            u618_21 0EB6                                              u466_21 1028  
                                            u650_21 02D5                                              u714_21 1E3A  
                                            u642_25 0FBD                                              u723_20 1F89  
                                            u715_20 1E2C                                              u483_20 1544  
                                            u643_20 0FD0                                              u635_20 0F8B  
                                            u651_20 02DC                                              u723_21 1F88  
                                            u715_21 1E2B                                              u483_21 1543  
                                            u643_21 0FCF                                              u635_21 0F8A  
                                            u651_21 02DB                                              u627_25 0EFE  
                                            u619_25 0EBA                                              u467_25 102E  
                                            u644_20 0FD7                                              u636_20 0F91  
                                            u628_20 0F1D                                              u468_20 1039  
                                            u660_20 0419                                              u652_20 02E1  
                                            u740_20 0044                                              u732_20 000A  
                                            u644_21 0FD6                                              u636_21 0F90  
                                            u628_21 0F1C                                              u468_21 1038  
                                            u652_21 02E0                                              u740_21 0043  
                                            u732_21 0009                                              u628_23 0F19  
                                            u484_25 1546                                              u660_25 0415  
                                            _OSCFRQ 091F                                              u485_20 1553  
                                            u477_20 14FF                                              u645_20 0FDC  
                                            u637_20 0F96                                              u629_20 0F4B  
                                            u661_20 0430                                              u653_20 02FC  
                                            u709_20 0AB2                                              u741_20 004D  
                                            u733_20 000F                                              u485_21 1552  
                                            u477_21 14FE                                              u645_21 0FDB  
                                            u637_21 0F95                                              u629_21 0F4A  
                                            u653_21 02FB                                              u709_21 0AB1  
                                            u741_21 004C                                              u733_21 000E  
                                            u469_25 1F0A                                              u661_25 042C  
                                            u718_20 1245                                              u486_20 1558  
                                            u478_20 1515                                              u646_20 0FE9  
                                            u638_20 0F9C                                              u670_20 048E  
                                            u654_20 0302                                              u742_20 0052  
                                            u734_20 0014                                              u718_21 1244  
                                            u486_21 1557                                              u646_21 0FE8  
                                            u638_21 0F9B                                              u670_21 048D  
                                            u654_21 0301                                              u742_21 0051  
                                            u734_21 0013                                              u478_25 1511  
                                            u662_25 043B                                              u719_20 1252  
                                            u479_20 1528                                              u647_20 0FEE  
                                            u639_20 0FA3                                              u671_20 0498  
                                            u655_20 0307                                              u735_20 0020  
                                            u719_21 1251                                              u479_21 1527  
                                            u647_21 0FED                                              u639_21 0FA2  
                                            u671_21 0497                                              u655_21 0306  
                                            u735_21 001F                                              u663_25 044E  
                                            u672_20 04A6                                              u664_20 0458  
                                            u656_20 031E                                              u736_20 0025  
                                            u664_21 0457                                              u656_21 031D  
                                            u736_21 0024                                              u648_25 0FF5  
                                            u672_25 04A2                                              u680_25 1795  
                                     vfpfcnvrt@done 00D2                                              u649_20 0FFE  
                                            u673_20 04C1                                              u657_20 0323  
                                            u681_20 17A1                                              u737_20 0031  
                                            u649_21 0FFD                                              u673_21 04C0  
                                            u657_21 0322                                              u681_21 17A0  
                                            u737_21 0030                                              u673_25 04BD  
                                            u665_25 045A                                              u674_20 04D9  
                                            u666_20 0468                                              u690_20 17F6  
                                            u738_20 0036                                              u674_21 04D8  
                                            u666_21 0467                                              u690_21 17F5  
                                            u738_21 0035                                              u674_25 04D5  
                                            u658_25 039C                                              u682_25 17AB  
                                            u675_20 04F3                                              u667_20 046D  
                                            u683_20 17B7                                              u739_20 003F  
                                            u675_21 04F2                                              u667_21 046C  
                                            u683_21 17B6                                              u739_21 003E  
                                            u659_25 03C7                                              u668_20 0481  
                                            u668_21 0480                                              u676_25 04F7  
                                            u684_25 17BB                                              u669_20 0488  
                                            u685_20 17C5                                              u677_20 1762  
                                            u669_21 0487                                              u685_21 17C4  
                                            u677_21 1761                                              u686_20 17CB  
                                            u678_20 1766                                              u686_21 17CA  
                                            u678_21 1765                                              u687_20 17CF  
                                            u679_20 1786                                              u687_21 17CE  
                                            u679_21 1785                                              u688_20 17E3  
                                            u688_25 17DF                                              u689_20 17F2  
                                            u689_21 17F1                                              _TX1REG 019A  
                                            _TX1STA 019E                                    __end_of___xxtofl 092B  
                                      ?_uartHandler 0070                                   __end_of_SPI1_Open 15D4  
                              _sendLedstripEndFrame 1F69                                   _ADC_potentiometer 014C  
                                      vfprintf@cfmt 00DF                                      ??_initLedstrip 00A9  
                                         ??___fladd 00B6                                              ___wmul 1F9E  
                           _updateLedstripAnimation 1D2B                                           ??___fldiv 00A8  
                                         ??___awdiv 00A4                                           ??___awmod 00A4  
                                         ??___flmul 00B1                                           ??___fltol 003E  
                                    counter_led@led 00AC                                           ??___lwdiv 00A4  
                                         ??___lwmod 00A4                                    __end_of_ledstrip 184C  
                                  __end_of_readLine 13DF                                read_prec_or_width@ap 00A7  
                           __end_of_TMR4_Initialize 1EA2                                    ___awdiv@quotient 00A6  
                                 ?_EUSART_IsRxReady 0070                                     ___awmod@divisor 00A0  
                                 ?_EUSART_IsTxReady 0070                                     ___awmod@counter 00A4  
                                            _printf 1E70                                              pad@buf 00B6  
                                 ?_CLOCK_Initialize 0070                                              dtoa@fp 00BC  
                                            _strlen 1F3B                                   __end_ofi1___fladd 1000  
                                ??_EUSART_IsRxReady 00A0                                   __end_ofi1___flmul 0507  
                                            fputc@c 00A3                                  ??_EUSART_IsTxReady 00A0  
                                            fputs@c 00B1                                              fputs@i 00B2  
                                            fputs@s 00AC                           ?_adcConversionDoneHandler 0070  
                                ??_CLOCK_Initialize 00A0                          str2float@decimal_separator 00C7  
                           ?_sendLedstripStartFrame 0070                         EUSART_ReceiveISR@tempRxHead 0071  
                                  __end_of_vfprintf 10D8                               _pwm_fan_LoadDutyValue 1EFB  
                                            utoa@fp 00BC             INT_SetInterruptHandler@InterruptHandler 00A0  
           ADC_SetInterruptHandler@InterruptHandler 00A0                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 00AA  
                                      ___xxtofl@exp 00A9                                   _SYSTEM_Initialize 1FDE  
                                      ___xxtofl@val 00A0                             __end_of__initialization 008D  
                                    _SPI1_ByteWrite 0000                                  ?_SYSTEM_Initialize 0070  
                                        ___fltol@f1 003A                                        ?i1__Umul8_16 0070  
                                     __end_of_UART1 1830                               ?_sendLedstripEndFrame 0070  
                                    __pcstackCOMMON 0070                                        __pidataBANK0 1D2F  
                                      __pidataBANK2 1DB5                                 ??_SYSTEM_Initialize 00A2  
                                         ?_TMR2_ISR 0070                                           ?_TMR4_ISR 0070  
                                     __end_of_fputc 14F5                                       __end_of_fputs 1062  
                                 ??_SPI1_Initialize 00A0                                       __end_of_setKi 1EC4  
                                     __end_of_setKp 1ED5                                       __end_of_putch 1EB3  
                                  ?_TMR2_Initialize 0070                             __end_of_TMR6_Initialize 1E70  
                     __end_of_PWM_buzzer_Initialize 1DE3                             _ADC_GetConversionResult 1D33  
                                _spi1_configuration 18D2                      __end_of_sendLedstripStartFrame 1F25  
                              _eusartRxStatusBuffer 0120                                    _ADC_hoogtesensor 0059  
                                _pwm_fan_Initialize 1DE3                                    ?_getHoogtesensor 0070  
                                       setKi@new_ki 00CF                                             ??_fputc 00A7  
                         __end_of_SYSTEM_Initialize 2000                                             ??_fputs 00AF  
                                           ??_setKi 00D3                                             ??_setKp 00D3  
                                           ??_putch 00A2                                          __pbssBANK0 0055  
                                        __pbssBANK1 00ED                                          __pbssBANK2 0120  
                                        __pbssBANK3 01A0                                 ?_pwm_fan_Initialize 0070  
                              __end_of_EUSART_Write 10AE                                         setKp@new_kp 00CF  
                                    i1___xxtofl@arg 007A                                      i1___xxtofl@exp 0079  
                                    i1___xxtofl@val 0070                           ??_updateLedstripAnimation 00AD  
                                 __end_of__Umul8_16 1086                            _TMR6_PeriodMatchCallback 0154  
                                        __pmaintext 10D8                                             ?___wmul 00A0  
                                        ??_TMR2_ISR 0070                                          ??_TMR4_ISR 007E  
                                        _getCounter 1D75                                          __pintentry 0004  
                              _EUSART_AutoBaudQuery 0000                                ??_pwm_fan_Initialize 00A0  
                                           _ADC_ISR 1E16                                    ?_TMR4_Initialize 0070  
                                           ?_printf 00E1                                  counter_led@counter 00AA  
                                           ?_strlen 00A0                                     _EUSART_IsTxDone 0000  
                                     _eusartRxCount 0065                   _EUSART_RxCompleteCallbackRegister 0000  
                             __end_of_getPomphoogte 1D45                                           ?___xxtofl 00A0  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                                             _OSCCON1 0919  
                                           _OSCCON3 091B                                 i1__Umul8_16@product 0074  
                            ?_pwm_fan_LoadDutyValue 0070                                             _OSCTUNE 091E  
                                           _PWM5DCH 0618                                             _PWM5DCL 0617  
                                           _PWM6DCH 061B                                             _PWM6DCL 061A  
                                           _PWM5CON 0619                                             _PWM6CON 061C  
                        sendLedstripFrame@intensity 00A3                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                                      ??_TMR6_Tasks 00AD                                __end_of_initLedstrip 1E16  
                                         ?_readLine 00E8                                          _controller 09D6  
                             EUSART_Read@tempRxTail 00A0                              ??_sendLedstripEndFrame 00A1  
                              _ADC_InterruptHandler 015E                             _ADC_SetInterruptHandler 1D51  
                                           ___fladd 0507                                             ___fldiv 0C50  
                                           ___awdiv 13DF                                             ___awmod 1289  
                                           ___flmul 0091                                             ___fltol 14F5  
               adcConversionDoneHandler@new_channel 006E                                      uartHandler@str 00EB  
                                           ___lwdiv 113A                                             ___lwmod 07CC  
                                         ?_vfprintf 00D9                           ??_ADC_GetConversionResult 0072  
                                        _hoogte_bal 014A                                    ?_TMR6_Initialize 0070  
                                __end_of_TMR6_Tasks 1EFB                                        ??i1___xxtofl 0074  
                                           __ptext1 16C2                                             __ptext2 092B  
                                           __ptext3 0886                                             __ptext4 0091  
                                           __ptext5 1062                                             __ptext6 0C50  
                                           __ptext7 0507                                             __ptext8 1EC4  
                                           __ptext9 1EB3                                             _counter 0148  
                                         _T2CONbits 001F                               read_prec_or_width@fmt 00A6  
                   __end_of_updateLedstripAnimation 1D2F                                          ??___xxtofl 00A4  
                                  ___awmod@dividend 00A2                                             _buzzing 0062  
                                         _T4CONbits 0417                            ??_PIN_MANAGER_Initialize 00A0  
                           _INT_SetInterruptHandler 1D63                                           _T6CONbits 041E  
                                           atoi@neg 00AA                                             clrloop0 1D46  
                              end_of_initialization 008D                                             fputc@fp 00A5  
                       __end_ofi1_ADC_SelectChannel 1DCB                                          ??_readLine 00EA  
                                           init_ram 1D4B                                             fputs@fp 00AD  
                                           initloop 1D4C                                  _read_prec_or_width 143B  
                                 _EUSART_Initialize 1103                                   __end_of_str2float 09D6  
                                __end_ofi1___xxtofl 1800                                   __end_of_printLogs 11F1  
           __end_of_TMR6_DefaultPeriodMatchCallback 0800                    ?_TMR6_DefaultPeriodMatchCallback 0070  
                 ??_TMR6_DefaultPeriodMatchCallback 00A0                     _TMR6_DefaultPeriodMatchCallback 07FF  
                                ?_EUSART_Initialize 0070                                   __end_of_vfpfcnvrt 0C50  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 1237  
                               ?_read_prec_or_width 00A6                                    vfpfcnvrt@convarg 00D3  
                                       ?_getCounter 00A0                                          ??_vfprintf 00DE  
                                ?_EUSART_ReceiveISR 0070                                           _SPI1_Open 1564  
                                           strlen@a 00A2                                             strlen@s 00A0  
                               ??_EUSART_Initialize 00A2                               i1__Umul8_16@word_mpld 0076  
                               _SPI1_BufferExchange 0000                                         ___fladd@grs 00C1  
                               ??_EUSART_ReceiveISR 0070                 __end_of_ADC_DefaultInterruptHandler 1D26  
                       _ADC_DefaultInterruptHandler 1D25                                       ___xxtofl@sign 00A8  
   TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0     TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0  
          __end_of_TMR6_PeriodMatchCallbackRegister 1D99                  ??_TMR6_PeriodMatchCallbackRegister 00A2  
                 ?_TMR6_PeriodMatchCallbackRegister 00A0                    _TMR6_PeriodMatchCallbackRegister 1D90  
                                         i1___fladd 0DF4                                ??_read_prec_or_width 00A8  
                                         i1___flmul 02CC                                         ___fldiv@grs 00B4  
                                       ___fldiv@rem 00AD                                 _EUSART_Deinitialize 0000  
                                     ??_getSetpoint 00A2                          __end_of_initAdcMultiplexer 080D  
                         ?_PWM_buzzer_LoadDutyValue 00A0                                         ___flmul@grs 00B7  
                         __end_of_EUSART_Initialize 113A                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                     _SPI1_Initialize 1DAB  
                                       ?_controller 0070                           __end_of_EUSART_ReceiveISR 1289  
                                     _check_push_up 15D4             __end_of_TMR2_DefaultPeriodMatchCallback 0003  
                 ??_TMR2_DefaultPeriodMatchCallback 0070                    ?_TMR2_DefaultPeriodMatchCallback 0070  
                   _TMR2_DefaultPeriodMatchCallback 0002                        __end_of_INTERRUPT_Initialize 1DD7  
                                        ?_SPI1_Open 00A6                                         vfpfcnvrt@ap 00CC  
                                       vfpfcnvrt@cp 00D7                                         vfpfcnvrt@fp 00C9  
                                    __end_of___wmul 1FBE                                 str2float@multiplier 00C8  
                                      _EUSART_Write 1086                                      _ADC_Initialize 1F25  
                         ??_INT_SetInterruptHandler 00A2                                      __end_of_printf 1E80  
                                    __end_of_strlen 1F51                                 start_initialization 005A  
                                       __end_of_abs 1EE7                                          ?i1___fladd 003A  
                                       __end_of_pad 1330                                          ?i1___flmul 0020  
                                     ??_EUSART_Read 00A0            __end_of_TMR4_PeriodMatchCallbackRegister 1D75  
                ??_TMR4_PeriodMatchCallbackRegister 00A2                   ?_TMR4_PeriodMatchCallbackRegister 00A0  
                  _TMR4_PeriodMatchCallbackRegister 1D6C                                         putch@txData 00A2  
                         _EUSART_RxInterruptHandler 015A                                       ??_counter_led 00A7  
                               __end_of_getSetpoint 1D87                                      ?_check_push_up 0070  
                                   str2float@number 00CA                                         vfprintf@fmt 00DB  
                        _EUSART_FramingErrorHandler 005D                                            ??___wmul 00A4  
                            __end_of_ADC_Initialize 1F3B                                           __Umul8_16 1062  
                                      _initLedstrip 1E08                                         __pdataBANK0 006B  
                                       __pdataBANK2 0160                                            ?_ADC_ISR 0070  
                          _adcConversionDoneHandler 1175                                            ??_printf 00E7  
                                          ??_strlen 00A2                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 00B2                                           ___fladd@b 00AE  
                                     _SPI1_ByteRead 0000                                           ___fldiv@a 00A0  
                                         ___fldiv@b 00A4                                           ___flmul@a 00AD  
                                         ___flmul@b 00A9                               _PWM_buzzer_Initialize 1DD7  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                             __end_of_SPI1_Initialize 1DB5  
                                   i1___xxtofl@sign 0078                                   _sendLedstripFrame 1000  
                               __end_of_EUSART_Read 1FDE                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0063                                           __pnvBANK2 0154  
                                ?_sendLedstripFrame 00A1                                    ___lwdiv@dividend 00A2  
                            _PIN_MANAGER_Initialize 11F1                                           _dtoa$2145 00C1  
                          _TMR4_PeriodMatchCallback 0156                                EUSART_Read@readValue 00A1  
                                 _ADC_SelectChannel 1DEF                            i1__Umul8_16@multiplicand 0070  
                                          ?___fladd 00AE                                            ?___fldiv 00A0  
                                          ?___awdiv 00A0                                            ?___awmod 00A0  
                                          ?___flmul 00A9                                 __end_of_counter_led 1386  
                                          ?___fltol 003A                                 ??_sendLedstripFrame 00A4  
                                        ?__Umul8_16 00A0                                            ?___lwdiv 00A0  
                                       ??_SPI1_Open 00A7                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 0067  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006A  
                                      _eusartRxTail 0066                                        _eusartTxTail 0069  
                      ??_INTERRUPT_InterruptManager 007E                        EUSART_TransmitISR@tempTxTail 0070  
                           _eusartTxBufferRemaining 0068                                            _BAUD1CON 019F  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                                       ??i1___fladd 0042                                         ??i1___flmul 0028  
                                  ___lwdiv@quotient 00A4                                         _getSetpoint 1D7E  
                                     ??_setSetpoint 00AF                           __end_of_sendLedstripFrame 101B  
                                  _EUSART_IsRxReady 1DA2                                _INTERRUPT_Initialize 1DCB  
                                         _integraal 0140                                    _EUSART_IsTxReady 1D99  
                                    _eusartRxBuffer 0130                                    _CLOCK_Initialize 1D5A  
                                         _dutycycle 0057                            ?_updateLedstripAnimation 0070  
                                   ??_check_push_up 00AF                                      _eusartTxBuffer 0138  
                                    ___wmul@product 00A4                                           clear_ram0 1D45  
                                          _PIE1bits 0091                   _EUSART_TxCompleteCallbackRegister 0000  
                                          _PIE2bits 0092                                   _eusartRxLastError 0152  
                                     ??_uartHandler 00EB                           __end_of_ADC_SelectChannel 1DFB  
                                          _PIR0bits 0010                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                            _OSCSTAT1 091C  
                                        str2float@i 00C9                                           _str2float 092B  
                                          _SSP1CON1 0215                                            _SSP1CON3 0217  
                                          _TMR2_ISR 1E25                                        ??_getCounter 00A2  
                                          _TMR4_ISR 1E34                                            _SSP1STAT 0214  
                                         _printLogs 11B2                            ??_sendLedstripStartFrame 00A1  
                                         _vfpfcnvrt 0ADE                    __end_of_PWM_buzzer_LoadDutyValue 1F69  
                                        _ADCON0bits 009D                                   _SPI1_Deinitialize 0000  
                                 ___wmul@multiplier 00A0                            ADC_SelectChannel@channel 00A1  
                            ?_PWM_buzzer_Initialize 0070                                       readLine@index 0064  
                                       _EUSART_Read 1FBE                                    ?_SPI1_Initialize 0070  
                             ?_INTERRUPT_Initialize 0070                   _EUSART_RxCompleteInterruptHandler 014E  
                                __end_of_getCounter 1D7E                                   ??_TMR2_Initialize 00A0  
                                      ??_controller 004E                                       ??i1__Umul8_16 0072  
                                       _counter_led 1330                                 __end_of_setSetpoint 1D90  
                                    str2float@digit 00CE                                  _initAdcMultiplexer 0800  
                                        vfprintf@ap 00DD                                          vfprintf@fp 00D9  
                          ?_ADC_GetConversionResult 0070                                          ?_str2float 00C3  
                        i1ADC_SelectChannel@channel 0071                                   ??_getHoogtesensor 0072  
                                       ??__Umul8_16 00A2                                          ?_printLogs 0070  
                               __end_of_uartHandler 175C                          __end_of_EUSART_TransmitISR 1F9E  
                               ?_initAdcMultiplexer 0070                                          ?_vfpfcnvrt 00C9  
                                          ___xxtofl 0886                                  __end_of_controller 0ADE  
                                     _getPomphoogte 1D3F                                     ___lwdiv@divisor 00A0  
                                _EUSART_AutoBaudSet 0000                                     ___lwdiv@counter 00A6  
                                          __ptext10 1386                                            __ptext11 1FBE  
                                          __ptext20 143B                                            __ptext12 1DA2  
                                          __ptext21 0713                                            __ptext13 080D  
                                          __ptext30 1289                                            __ptext22 12DB  
                                          __ptext14 11B2                                            __ptext31 13DF  
                                          __ptext23 1F3B                                            __ptext15 1E70  
                                          __ptext40 1D3F                                            __ptext32 1E08  
                                          __ptext24 103E                                            __ptext16 10AE  
                                          __ptext41 1F51                                            __ptext33 1D90  
                                          __ptext25 1497                                            __ptext17 0ADE  
                                          __ptext50 1D75                                            __ptext42 1EE7  
                                          __ptext34 1564                                            __ptext26 1EA2  
                                          __ptext18 1649                                            __ptext51 1F9E  
                                          __ptext43 07FF                                            __ptext35 0800  
                                          __ptext27 1086                                            __ptext19 07CC  
                                          __ptext60 1DD7                                            __ptext52 113A  
                                          __ptext44 1D2B                                            __ptext36 1DEF  
                                          __ptext28 1D99                                            __ptext61 11F1  
                                          __ptext53 1D6C                                            __ptext45 1330  
                                          __ptext37 15D4                                            __ptext29 1ED5  
                                          __ptext62 1DCB                                            __ptext54 1FDE  
                                          __ptext46 1F10                                            __ptext38 1D87  
                                          __ptext71 1E34                                            __ptext63 1D63  
                                          __ptext55 1DE3                                            __ptext47 1000  
                                          __ptext39 1D7E                                            __ptext80 14F5  
                                          __ptext72 0003                                            __ptext64 1103  
                                          __ptext56 1E61                                            __ptext48 1F69  
                                          __ptext81 1E25                                            __ptext73 09D6  
                                          __ptext65 1E52                                            __ptext57 1E91  
                                          __ptext49 1DFB                                            __ptext90 1DBF  
                                          __ptext82 0002                                            __ptext74 175C  
                                          __ptext66 1E43                                            __ptext58 1E80  
                                          __ptext91 1D33                                            __ptext83 1F82  
                                          __ptext75 02CC                                            __ptext67 1D5A  
                                          __ptext59 1DAB                                            __ptext84 1237  
                                          __ptext76 101B                                            __ptext68 1F25  
                                          __ptext85 1D27                                            __ptext77 0DF4  
                                          __ptext69 1D51                                            __ptext86 1D26  
                                          __ptext78 1EFB                                            __ptext87 1E16  
                                          __ptext79 1D39                                            __ptext88 1D25  
                                          __ptext89 1175                                        _SSP1CON1bits 0215  
                                  counter_led@loops 00A8                                ??_initAdcMultiplexer 00A2  
                             _EUSART_TransmitEnable 0000                                            _ledstrip 1830  
                                          _readLine 1386                                   ??_TMR4_Initialize 00A0  
                        ??_adcConversionDoneHandler 0072                                          _RC1STAbits 019D  
                                          _setpoint 0168                                            int$flags 007E  
                               __end_ofi1__Umul8_16 103E                                            _vfprintf 10AE  
                __end_of_INTERRUPT_InterruptManager 0058                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1E52               ??_EUSART_FramingErrorCallbackRegister 00A2  
              ?_EUSART_FramingErrorCallbackRegister 00A0                 _EUSART_FramingErrorCallbackRegister 1E43  
                                         printf@fmt 00E1                      pwm_fan_LoadDutyValue@dutyValue 0070  
                                    _ADC_pomphoogte 00ED                                      ?_getPomphoogte 00A0  
                                        _INTCONbits 000B                       __end_of_pwm_fan_LoadDutyValue 1F10  
                          _PWM_buzzer_LoadDutyValue 1F51                                _INT_InterruptHandler 005F  
                                    __pstringtext10 18BA                                      __pstringtext11 18C7  
                                    __pstringtext12 18DC                                      __pstringtext13 18E6  
                                    __pstringtext14 0000                              ??_INTERRUPT_Initialize 00A2  
                          ?_ADC_SetInterruptHandler 00A0                                         _setSetpoint 1D87  
                                          intlevel1 0000                              i1__Umul8_16@multiplier 0078  
                                  ___lwmod@dividend 00A2                           _EUSART_TxInterruptHandler 015C  
                           ?_PIN_MANAGER_Initialize 0070                                   ??_TMR6_Initialize 00A0  
                         SPI1_ByteExchange@byteData 00A0          __end_of_EUSART_DefaultFramingErrorCallback 1D27  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 1D26                     __end_of_ADC_GetConversionResult 1D39  
                                  ??_ADC_Initialize 00A2                                         _uartHandler 16C2  
                                       ??_str2float 00C7                                       _mustPrintLogs 006D  
                                          printf@ap 00E7                                    _SPI1_BufferWrite 0000  
                                       ??_printLogs 00E8                            ?_INT_SetInterruptHandler 00A0  
                          __end_of_EUSART_IsRxReady 1DAB                                         ??_vfpfcnvrt 00CE  
                          __end_of_EUSART_IsTxReady 1DA2                                        str2float@str 00C3  
                          __end_of_CLOCK_Initialize 1D63                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 18D2  
                                     __pstringtext4 184C                                       __pstringtext5 1865  
                                     __pstringtext6 187D                                       __pstringtext7 188E  
                                     __pstringtext8 189E                                       __pstringtext9 18AD  
                                        _SPI1_Close 0000                              __Umul8_16@multiplicand 00A0  
                                        _SSP1DATPPS 0E21                                          _SSP1CLKPPS 0E20  
                                   ___lwmod@divisor 00A0                                     ___lwmod@counter 00A4  
                                        _TX1STAbits 019E                                        ?_getSetpoint 00A0  
                            sendLedstripFrame@green 00A1                                       ___fladd@signs 00BE  
                                   controller@error 0053                                          _TMR6_Tasks 1EE7  
                                EUSART_Write@txData 00A0                              _sendLedstripStartFrame 1F10  
                    __end_of_PIN_MANAGER_Initialize 1237                                         _PWMTMRSbits 061F  
                                      ___fladd@aexp 00BF                                        ___fladd@bexp 00C0  
                             sendLedstripFrame@blue 00A2                                __Umul8_16@multiplier 00A8  
                           SPI1_Open@spiConfigIndex 00A6                                sendLedstripFrame@red 00A4  
                                       i1__Umul8_16 101B                            _TMR2_PeriodMatchCallback 0158  
                        __end_of_spi1_configuration 18DC                                   __Umul8_16@product 00A4  
