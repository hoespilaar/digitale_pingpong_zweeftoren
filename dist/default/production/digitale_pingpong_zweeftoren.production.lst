

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 05 16:41:15 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,space=0,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,space=0,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,space=0,delta=2,noexec
    27                           	psect	stringtext20,global,class=STRCODE,space=0,delta=2,noexec
    28                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    29                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    34                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    35                           	psect	inittext,global,class=CODE,space=0,delta=2
    36                           	psect	clrtext,global,class=CODE,space=0,delta=2
    37                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    38                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    39                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    40                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    41                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    42                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    53                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    54                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    58                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    59                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    60                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    61                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    62                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    63                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=1
    64                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=1
    65                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=1
    66                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=3
    67                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=3
    68                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=3
    69                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=3
    73                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=2
    74                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2,group=2
    75                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=2
    76                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2,group=2
    85                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2,group=2
    98                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2,group=2
    99                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2,group=2
   100                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2,group=2
   101                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2,group=2
   102                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   110                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text73,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	intentry,global,class=CODE,space=0,delta=2
   122                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   132                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   133                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   134                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   135                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   136                           	psect	text95,local,class=CODE,space=0,merge=1,delta=2
   137                           	psect	text96,local,class=CODE,space=0,merge=1,delta=2
   138                           	psect	text97,local,class=CODE,space=0,merge=1,delta=2
   139                           	psect	text98,local,class=CODE,space=0,merge=1,delta=2
   140                           	psect	text99,local,class=CODE,space=0,merge=1,delta=2
   141                           	psect	text100,local,class=CODE,space=0,merge=1,delta=2
   142                           	psect	text101,local,class=CODE,space=0,merge=1,delta=2
   143                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   144                           	dabs	1,0x7E,2
   145     0000                     
   146                           ; Generated 11/01/2024 GMT
   147                           ; 
   148                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   149                           ; All rights reserved.
   150                           ; 
   151                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   152                           ; 
   153                           ; Redistribution and use in source and binary forms, with or without modification, are
   154                           ; permitted provided that the following conditions are met:
   155                           ; 
   156                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   157                           ;        conditions and the following disclaimer.
   158                           ; 
   159                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   160                           ;        of conditions and the following disclaimer in the documentation and/or other
   161                           ;        materials provided with the distribution. Publication is not required when
   162                           ;        this file is used in an embedded application.
   163                           ; 
   164                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   165                           ;        software without specific prior written permission.
   166                           ; 
   167                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   168                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   169                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   170                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   171                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   172                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   173                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   174                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   175                           ; 
   176                           ; 
   177                           ; Code-generator required, PIC16F18345 Definitions
   178                           ; 
   179                           ; SFR Addresses
   180     0008                     bsr             equ	8
   181     0005                     fsr0h           equ	5
   182     0004                     fsr0l           equ	4
   183     0007                     fsr1h           equ	7
   184     0006                     fsr1l           equ	6
   185     0000                     indf            equ	0
   186     0000                     indf0           equ	0
   187     0001                     indf1           equ	1
   188     000B                     intcon          equ	11
   189     0002                     pc              equ	2
   190     0002                     pcl             equ	2
   191     000A                     pclath          equ	10
   192     0003                     status          equ	3
   193     0009                     wreg            equ	9
   194     0000                     INDF0           equ	0	;# 
   195     0001                     INDF1           equ	1	;# 
   196     0002                     PCL             equ	2	;# 
   197     0003                     STATUS          equ	3	;# 
   198     0004                     FSR0L           equ	4	;# 
   199     0005                     FSR0H           equ	5	;# 
   200     0006                     FSR1L           equ	6	;# 
   201     0007                     FSR1H           equ	7	;# 
   202     0008                     BSR             equ	8	;# 
   203     0009                     WREG            equ	9	;# 
   204     000A                     PCLATH          equ	10	;# 
   205     000B                     INTCON          equ	11	;# 
   206     000C                     PORTA           equ	12	;# 
   207     000D                     PORTB           equ	13	;# 
   208     000E                     PORTC           equ	14	;# 
   209     0010                     PIR0            equ	16	;# 
   210     0011                     PIR1            equ	17	;# 
   211     0012                     PIR2            equ	18	;# 
   212     0013                     PIR3            equ	19	;# 
   213     0014                     PIR4            equ	20	;# 
   214     0015                     TMR0L           equ	21	;# 
   215     0015                     TMR0            equ	21	;# 
   216     0016                     TMR0H           equ	22	;# 
   217     0016                     PR0             equ	22	;# 
   218     0017                     T0CON0          equ	23	;# 
   219     0018                     T0CON1          equ	24	;# 
   220     0019                     TMR1            equ	25	;# 
   221     0019                     TMR1L           equ	25	;# 
   222     001A                     TMR1H           equ	26	;# 
   223     001B                     T1CON           equ	27	;# 
   224     001C                     T1GCON          equ	28	;# 
   225     001D                     TMR2            equ	29	;# 
   226     001E                     PR2             equ	30	;# 
   227     001F                     T2CON           equ	31	;# 
   228     008C                     TRISA           equ	140	;# 
   229     008D                     TRISB           equ	141	;# 
   230     008E                     TRISC           equ	142	;# 
   231     0090                     PIE0            equ	144	;# 
   232     0091                     PIE1            equ	145	;# 
   233     0092                     PIE2            equ	146	;# 
   234     0093                     PIE3            equ	147	;# 
   235     0094                     PIE4            equ	148	;# 
   236     0097                     WDTCON          equ	151	;# 
   237     009B                     ADRES           equ	155	;# 
   238     009B                     ADRESL          equ	155	;# 
   239     009C                     ADRESH          equ	156	;# 
   240     009D                     ADCON0          equ	157	;# 
   241     009E                     ADCON1          equ	158	;# 
   242     009F                     ADACT           equ	159	;# 
   243     010C                     LATA            equ	268	;# 
   244     010D                     LATB            equ	269	;# 
   245     010E                     LATC            equ	270	;# 
   246     0111                     CM1CON0         equ	273	;# 
   247     0112                     CM1CON1         equ	274	;# 
   248     0113                     CM2CON0         equ	275	;# 
   249     0114                     CM2CON1         equ	276	;# 
   250     0115                     CMOUT           equ	277	;# 
   251     0116                     BORCON          equ	278	;# 
   252     0117                     FVRCON          equ	279	;# 
   253     0118                     DACCON0         equ	280	;# 
   254     0119                     DACCON1         equ	281	;# 
   255     018C                     ANSELA          equ	396	;# 
   256     018D                     ANSELB          equ	397	;# 
   257     018E                     ANSELC          equ	398	;# 
   258     0197                     VREGCON         equ	407	;# 
   259     0199                     RC1REG          equ	409	;# 
   260     0199                     RCREG           equ	409	;# 
   261     0199                     RCREG1          equ	409	;# 
   262     019A                     TX1REG          equ	410	;# 
   263     019A                     TXREG1          equ	410	;# 
   264     019A                     TXREG           equ	410	;# 
   265     019B                     SP1BRG          equ	411	;# 
   266     019B                     SPBRG           equ	411	;# 
   267     019B                     SP1BRGL         equ	411	;# 
   268     019B                     SPBRG1          equ	411	;# 
   269     019B                     SPBRGL          equ	411	;# 
   270     019C                     SP1BRGH         equ	412	;# 
   271     019C                     SPBRGH          equ	412	;# 
   272     019C                     SPBRGH1         equ	412	;# 
   273     019D                     RC1STA          equ	413	;# 
   274     019D                     RCSTA1          equ	413	;# 
   275     019D                     RCSTA           equ	413	;# 
   276     019E                     TX1STA          equ	414	;# 
   277     019E                     TXSTA1          equ	414	;# 
   278     019E                     TXSTA           equ	414	;# 
   279     019F                     BAUD1CON        equ	415	;# 
   280     019F                     BAUDCON1        equ	415	;# 
   281     019F                     BAUDCTL1        equ	415	;# 
   282     019F                     BAUDCON         equ	415	;# 
   283     019F                     BAUDCTL         equ	415	;# 
   284     020C                     WPUA            equ	524	;# 
   285     020D                     WPUB            equ	525	;# 
   286     020E                     WPUC            equ	526	;# 
   287     0211                     SSP1BUF         equ	529	;# 
   288     0211                     SSPBUF          equ	529	;# 
   289     0212                     SSP1ADD         equ	530	;# 
   290     0212                     SSPADD          equ	530	;# 
   291     0213                     SSP1MSK         equ	531	;# 
   292     0213                     SSPMSK          equ	531	;# 
   293     0214                     SSP1STAT        equ	532	;# 
   294     0214                     SSPSTAT         equ	532	;# 
   295     0215                     SSP1CON1        equ	533	;# 
   296     0215                     SSPCON          equ	533	;# 
   297     0215                     SSPCON1         equ	533	;# 
   298     0215                     SSP1CON         equ	533	;# 
   299     0216                     SSP1CON2        equ	534	;# 
   300     0216                     SSPCON2         equ	534	;# 
   301     0217                     SSP1CON3        equ	535	;# 
   302     0217                     SSPCON3         equ	535	;# 
   303     0219                     SSP2BUF         equ	537	;# 
   304     021A                     SSP2ADD         equ	538	;# 
   305     021B                     SSP2MSK         equ	539	;# 
   306     021C                     SSP2STAT        equ	540	;# 
   307     021D                     SSP2CON1        equ	541	;# 
   308     021D                     SSP2CON         equ	541	;# 
   309     021E                     SSP2CON2        equ	542	;# 
   310     021F                     SSP2CON3        equ	543	;# 
   311     028C                     ODCONA          equ	652	;# 
   312     028D                     ODCONB          equ	653	;# 
   313     028E                     ODCONC          equ	654	;# 
   314     0291                     CCPR1           equ	657	;# 
   315     0291                     CCPR1L          equ	657	;# 
   316     0292                     CCPR1H          equ	658	;# 
   317     0293                     CCP1CON         equ	659	;# 
   318     0294                     CCP1CAP         equ	660	;# 
   319     0295                     CCPR2           equ	661	;# 
   320     0295                     CCPR2L          equ	661	;# 
   321     0296                     CCPR2H          equ	662	;# 
   322     0297                     CCP2CON         equ	663	;# 
   323     0298                     CCP2CAP         equ	664	;# 
   324     029F                     CCPTMRS         equ	671	;# 
   325     030C                     SLRCONA         equ	780	;# 
   326     030D                     SLRCONB         equ	781	;# 
   327     030E                     SLRCONC         equ	782	;# 
   328     0311                     CCPR3           equ	785	;# 
   329     0311                     CCPR3L          equ	785	;# 
   330     0312                     CCPR3H          equ	786	;# 
   331     0313                     CCP3CON         equ	787	;# 
   332     0314                     CCP3CAP         equ	788	;# 
   333     0315                     CCPR4           equ	789	;# 
   334     0315                     CCPR4L          equ	789	;# 
   335     0316                     CCPR4H          equ	790	;# 
   336     0317                     CCP4CON         equ	791	;# 
   337     0318                     CCP4CAP         equ	792	;# 
   338     038C                     INLVLA          equ	908	;# 
   339     038D                     INLVLB          equ	909	;# 
   340     038E                     INLVLC          equ	910	;# 
   341     0391                     IOCAP           equ	913	;# 
   342     0392                     IOCAN           equ	914	;# 
   343     0393                     IOCAF           equ	915	;# 
   344     0394                     IOCBP           equ	916	;# 
   345     0395                     IOCBN           equ	917	;# 
   346     0396                     IOCBF           equ	918	;# 
   347     0397                     IOCCP           equ	919	;# 
   348     0398                     IOCCN           equ	920	;# 
   349     0399                     IOCCF           equ	921	;# 
   350     039A                     CLKRCON         equ	922	;# 
   351     039C                     MDCON           equ	924	;# 
   352     039D                     MDSRC           equ	925	;# 
   353     039E                     MDCARH          equ	926	;# 
   354     039F                     MDCARL          equ	927	;# 
   355     0411                     TMR3            equ	1041	;# 
   356     0411                     TMR3L           equ	1041	;# 
   357     0412                     TMR3H           equ	1042	;# 
   358     0413                     T3CON           equ	1043	;# 
   359     0414                     T3GCON          equ	1044	;# 
   360     0415                     TMR4            equ	1045	;# 
   361     0416                     PR4             equ	1046	;# 
   362     0417                     T4CON           equ	1047	;# 
   363     0418                     TMR5            equ	1048	;# 
   364     0418                     TMR5L           equ	1048	;# 
   365     0419                     TMR5H           equ	1049	;# 
   366     041A                     T5CON           equ	1050	;# 
   367     041B                     T5GCON          equ	1051	;# 
   368     041C                     TMR6            equ	1052	;# 
   369     041D                     PR6             equ	1053	;# 
   370     041E                     T6CON           equ	1054	;# 
   371     041F                     CCDCON          equ	1055	;# 
   372     0498                     NCO1ACC         equ	1176	;# 
   373     0498                     NCO1ACCL        equ	1176	;# 
   374     0499                     NCO1ACCH        equ	1177	;# 
   375     049A                     NCO1ACCU        equ	1178	;# 
   376     049B                     NCO1INC         equ	1179	;# 
   377     049B                     NCO1INCL        equ	1179	;# 
   378     049C                     NCO1INCH        equ	1180	;# 
   379     049D                     NCO1INCU        equ	1181	;# 
   380     049E                     NCO1CON         equ	1182	;# 
   381     049F                     NCO1CLK         equ	1183	;# 
   382     0617                     PWM5DCL         equ	1559	;# 
   383     0618                     PWM5DCH         equ	1560	;# 
   384     0619                     PWM5CON         equ	1561	;# 
   385     0619                     PWM5CON0        equ	1561	;# 
   386     061A                     PWM6DCL         equ	1562	;# 
   387     061B                     PWM6DCH         equ	1563	;# 
   388     061C                     PWM6CON         equ	1564	;# 
   389     061C                     PWM6CON0        equ	1564	;# 
   390     061F                     PWMTMRS         equ	1567	;# 
   391     0691                     CWG1CLKCON      equ	1681	;# 
   392     0692                     CWG1DAT         equ	1682	;# 
   393     0693                     CWG1DBR         equ	1683	;# 
   394     0694                     CWG1DBF         equ	1684	;# 
   395     0695                     CWG1CON0        equ	1685	;# 
   396     0696                     CWG1CON1        equ	1686	;# 
   397     0697                     CWG1AS0         equ	1687	;# 
   398     0698                     CWG1AS1         equ	1688	;# 
   399     0699                     CWG1STR         equ	1689	;# 
   400     0711                     CWG2CLKCON      equ	1809	;# 
   401     0712                     CWG2DAT         equ	1810	;# 
   402     0713                     CWG2DBR         equ	1811	;# 
   403     0714                     CWG2DBF         equ	1812	;# 
   404     0715                     CWG2CON0        equ	1813	;# 
   405     0716                     CWG2CON1        equ	1814	;# 
   406     0717                     CWG2AS0         equ	1815	;# 
   407     0718                     CWG2AS1         equ	1816	;# 
   408     0719                     CWG2STR         equ	1817	;# 
   409     0891                     NVMADR          equ	2193	;# 
   410     0891                     EEADR           equ	2193	;# 
   411     0891                     PMADR           equ	2193	;# 
   412     0891                     NVMADRL         equ	2193	;# 
   413     0891                     EEADRL          equ	2193	;# 
   414     0891                     PMADRL          equ	2193	;# 
   415     0892                     NVMADRH         equ	2194	;# 
   416     0892                     EEADRH          equ	2194	;# 
   417     0892                     PMADRH          equ	2194	;# 
   418     0893                     NVMDAT          equ	2195	;# 
   419     0893                     EEDAT           equ	2195	;# 
   420     0893                     PMDAT           equ	2195	;# 
   421     0893                     NVMDATL         equ	2195	;# 
   422     0893                     EEDATL          equ	2195	;# 
   423     0893                     PMDATL          equ	2195	;# 
   424     0894                     NVMDATH         equ	2196	;# 
   425     0894                     EEDATH          equ	2196	;# 
   426     0894                     PMDATH          equ	2196	;# 
   427     0895                     NVMCON1         equ	2197	;# 
   428     0895                     EECON1          equ	2197	;# 
   429     0895                     PMCON1          equ	2197	;# 
   430     0896                     NVMCON2         equ	2198	;# 
   431     0896                     EECON2          equ	2198	;# 
   432     0896                     PMCON2          equ	2198	;# 
   433     089B                     PCON0           equ	2203	;# 
   434     0911                     PMD0            equ	2321	;# 
   435     0912                     PMD1            equ	2322	;# 
   436     0913                     PMD2            equ	2323	;# 
   437     0914                     PMD3            equ	2324	;# 
   438     0915                     PMD4            equ	2325	;# 
   439     0916                     PMD5            equ	2326	;# 
   440     0918                     CPUDOZE         equ	2328	;# 
   441     0919                     OSCCON1         equ	2329	;# 
   442     091A                     OSCCON2         equ	2330	;# 
   443     091B                     OSCCON3         equ	2331	;# 
   444     091C                     OSCSTAT1        equ	2332	;# 
   445     091D                     OSCEN           equ	2333	;# 
   446     091E                     OSCTUNE         equ	2334	;# 
   447     091F                     OSCFRQ          equ	2335	;# 
   448     0E0F                     PPSLOCK         equ	3599	;# 
   449     0E10                     INTPPS          equ	3600	;# 
   450     0E11                     T0CKIPPS        equ	3601	;# 
   451     0E12                     T1CKIPPS        equ	3602	;# 
   452     0E13                     T1GPPS          equ	3603	;# 
   453     0E14                     CCP1PPS         equ	3604	;# 
   454     0E15                     CCP2PPS         equ	3605	;# 
   455     0E16                     CCP3PPS         equ	3606	;# 
   456     0E17                     CCP4PPS         equ	3607	;# 
   457     0E18                     CWG1PPS         equ	3608	;# 
   458     0E19                     CWG2PPS         equ	3609	;# 
   459     0E1A                     MDCIN1PPS       equ	3610	;# 
   460     0E1B                     MDCIN2PPS       equ	3611	;# 
   461     0E1C                     MDMINPPS        equ	3612	;# 
   462     0E1D                     SSP2CLKPPS      equ	3613	;# 
   463     0E1E                     SSP2DATPPS      equ	3614	;# 
   464     0E1F                     SSP2SSPPS       equ	3615	;# 
   465     0E20                     SSP1CLKPPS      equ	3616	;# 
   466     0E21                     SSP1DATPPS      equ	3617	;# 
   467     0E22                     SSP1SSPPS       equ	3618	;# 
   468     0E24                     RXPPS           equ	3620	;# 
   469     0E25                     TXPPS           equ	3621	;# 
   470     0E28                     CLCIN0PPS       equ	3624	;# 
   471     0E29                     CLCIN1PPS       equ	3625	;# 
   472     0E2A                     CLCIN2PPS       equ	3626	;# 
   473     0E2B                     CLCIN3PPS       equ	3627	;# 
   474     0E2C                     T3CKIPPS        equ	3628	;# 
   475     0E2D                     T3GPPS          equ	3629	;# 
   476     0E2E                     T5CKIPPS        equ	3630	;# 
   477     0E2F                     T5GPPS          equ	3631	;# 
   478     0E90                     RA0PPS          equ	3728	;# 
   479     0E91                     RA1PPS          equ	3729	;# 
   480     0E92                     RA2PPS          equ	3730	;# 
   481     0E94                     RA4PPS          equ	3732	;# 
   482     0E95                     RA5PPS          equ	3733	;# 
   483     0E9C                     RB4PPS          equ	3740	;# 
   484     0E9D                     RB5PPS          equ	3741	;# 
   485     0E9E                     RB6PPS          equ	3742	;# 
   486     0E9F                     RB7PPS          equ	3743	;# 
   487     0EA0                     RC0PPS          equ	3744	;# 
   488     0EA1                     RC1PPS          equ	3745	;# 
   489     0EA2                     RC2PPS          equ	3746	;# 
   490     0EA3                     RC3PPS          equ	3747	;# 
   491     0EA4                     RC4PPS          equ	3748	;# 
   492     0EA5                     RC5PPS          equ	3749	;# 
   493     0EA6                     RC6PPS          equ	3750	;# 
   494     0EA7                     RC7PPS          equ	3751	;# 
   495     0F0F                     CLCDATA         equ	3855	;# 
   496     0F10                     CLC1CON         equ	3856	;# 
   497     0F11                     CLC1POL         equ	3857	;# 
   498     0F12                     CLC1SEL0        equ	3858	;# 
   499     0F13                     CLC1SEL1        equ	3859	;# 
   500     0F14                     CLC1SEL2        equ	3860	;# 
   501     0F15                     CLC1SEL3        equ	3861	;# 
   502     0F16                     CLC1GLS0        equ	3862	;# 
   503     0F17                     CLC1GLS1        equ	3863	;# 
   504     0F18                     CLC1GLS2        equ	3864	;# 
   505     0F19                     CLC1GLS3        equ	3865	;# 
   506     0F1A                     CLC2CON         equ	3866	;# 
   507     0F1B                     CLC2POL         equ	3867	;# 
   508     0F1C                     CLC2SEL0        equ	3868	;# 
   509     0F1D                     CLC2SEL1        equ	3869	;# 
   510     0F1E                     CLC2SEL2        equ	3870	;# 
   511     0F1F                     CLC2SEL3        equ	3871	;# 
   512     0F20                     CLC2GLS0        equ	3872	;# 
   513     0F21                     CLC2GLS1        equ	3873	;# 
   514     0F22                     CLC2GLS2        equ	3874	;# 
   515     0F23                     CLC2GLS3        equ	3875	;# 
   516     0F24                     CLC3CON         equ	3876	;# 
   517     0F25                     CLC3POL         equ	3877	;# 
   518     0F26                     CLC3SEL0        equ	3878	;# 
   519     0F27                     CLC3SEL1        equ	3879	;# 
   520     0F28                     CLC3SEL2        equ	3880	;# 
   521     0F29                     CLC3SEL3        equ	3881	;# 
   522     0F2A                     CLC3GLS0        equ	3882	;# 
   523     0F2B                     CLC3GLS1        equ	3883	;# 
   524     0F2C                     CLC3GLS2        equ	3884	;# 
   525     0F2D                     CLC3GLS3        equ	3885	;# 
   526     0F2E                     CLC4CON         equ	3886	;# 
   527     0F2F                     CLC4POL         equ	3887	;# 
   528     0F30                     CLC4SEL0        equ	3888	;# 
   529     0F31                     CLC4SEL1        equ	3889	;# 
   530     0F32                     CLC4SEL2        equ	3890	;# 
   531     0F33                     CLC4SEL3        equ	3891	;# 
   532     0F34                     CLC4GLS0        equ	3892	;# 
   533     0F35                     CLC4GLS1        equ	3893	;# 
   534     0F36                     CLC4GLS2        equ	3894	;# 
   535     0F37                     CLC4GLS3        equ	3895	;# 
   536     0FE4                     STATUS_SHAD     equ	4068	;# 
   537     0FE5                     WREG_SHAD       equ	4069	;# 
   538     0FE6                     BSR_SHAD        equ	4070	;# 
   539     0FE7                     PCLATH_SHAD     equ	4071	;# 
   540     0FE8                     FSR0L_SHAD      equ	4072	;# 
   541     0FE9                     FSR0H_SHAD      equ	4073	;# 
   542     0FEA                     FSR1L_SHAD      equ	4074	;# 
   543     0FEB                     FSR1H_SHAD      equ	4075	;# 
   544     0FED                     STKPTR          equ	4077	;# 
   545     0FEE                     TOSL            equ	4078	;# 
   546     0FEF                     TOSH            equ	4079	;# 
   547     0000                     INDF0           equ	0	;# 
   548     0001                     INDF1           equ	1	;# 
   549     0002                     PCL             equ	2	;# 
   550     0003                     STATUS          equ	3	;# 
   551     0004                     FSR0L           equ	4	;# 
   552     0005                     FSR0H           equ	5	;# 
   553     0006                     FSR1L           equ	6	;# 
   554     0007                     FSR1H           equ	7	;# 
   555     0008                     BSR             equ	8	;# 
   556     0009                     WREG            equ	9	;# 
   557     000A                     PCLATH          equ	10	;# 
   558     000B                     INTCON          equ	11	;# 
   559     000C                     PORTA           equ	12	;# 
   560     000D                     PORTB           equ	13	;# 
   561     000E                     PORTC           equ	14	;# 
   562     0010                     PIR0            equ	16	;# 
   563     0011                     PIR1            equ	17	;# 
   564     0012                     PIR2            equ	18	;# 
   565     0013                     PIR3            equ	19	;# 
   566     0014                     PIR4            equ	20	;# 
   567     0015                     TMR0L           equ	21	;# 
   568     0015                     TMR0            equ	21	;# 
   569     0016                     TMR0H           equ	22	;# 
   570     0016                     PR0             equ	22	;# 
   571     0017                     T0CON0          equ	23	;# 
   572     0018                     T0CON1          equ	24	;# 
   573     0019                     TMR1            equ	25	;# 
   574     0019                     TMR1L           equ	25	;# 
   575     001A                     TMR1H           equ	26	;# 
   576     001B                     T1CON           equ	27	;# 
   577     001C                     T1GCON          equ	28	;# 
   578     001D                     TMR2            equ	29	;# 
   579     001E                     PR2             equ	30	;# 
   580     001F                     T2CON           equ	31	;# 
   581     008C                     TRISA           equ	140	;# 
   582     008D                     TRISB           equ	141	;# 
   583     008E                     TRISC           equ	142	;# 
   584     0090                     PIE0            equ	144	;# 
   585     0091                     PIE1            equ	145	;# 
   586     0092                     PIE2            equ	146	;# 
   587     0093                     PIE3            equ	147	;# 
   588     0094                     PIE4            equ	148	;# 
   589     0097                     WDTCON          equ	151	;# 
   590     009B                     ADRES           equ	155	;# 
   591     009B                     ADRESL          equ	155	;# 
   592     009C                     ADRESH          equ	156	;# 
   593     009D                     ADCON0          equ	157	;# 
   594     009E                     ADCON1          equ	158	;# 
   595     009F                     ADACT           equ	159	;# 
   596     010C                     LATA            equ	268	;# 
   597     010D                     LATB            equ	269	;# 
   598     010E                     LATC            equ	270	;# 
   599     0111                     CM1CON0         equ	273	;# 
   600     0112                     CM1CON1         equ	274	;# 
   601     0113                     CM2CON0         equ	275	;# 
   602     0114                     CM2CON1         equ	276	;# 
   603     0115                     CMOUT           equ	277	;# 
   604     0116                     BORCON          equ	278	;# 
   605     0117                     FVRCON          equ	279	;# 
   606     0118                     DACCON0         equ	280	;# 
   607     0119                     DACCON1         equ	281	;# 
   608     018C                     ANSELA          equ	396	;# 
   609     018D                     ANSELB          equ	397	;# 
   610     018E                     ANSELC          equ	398	;# 
   611     0197                     VREGCON         equ	407	;# 
   612     0199                     RC1REG          equ	409	;# 
   613     0199                     RCREG           equ	409	;# 
   614     0199                     RCREG1          equ	409	;# 
   615     019A                     TX1REG          equ	410	;# 
   616     019A                     TXREG1          equ	410	;# 
   617     019A                     TXREG           equ	410	;# 
   618     019B                     SP1BRG          equ	411	;# 
   619     019B                     SPBRG           equ	411	;# 
   620     019B                     SP1BRGL         equ	411	;# 
   621     019B                     SPBRG1          equ	411	;# 
   622     019B                     SPBRGL          equ	411	;# 
   623     019C                     SP1BRGH         equ	412	;# 
   624     019C                     SPBRGH          equ	412	;# 
   625     019C                     SPBRGH1         equ	412	;# 
   626     019D                     RC1STA          equ	413	;# 
   627     019D                     RCSTA1          equ	413	;# 
   628     019D                     RCSTA           equ	413	;# 
   629     019E                     TX1STA          equ	414	;# 
   630     019E                     TXSTA1          equ	414	;# 
   631     019E                     TXSTA           equ	414	;# 
   632     019F                     BAUD1CON        equ	415	;# 
   633     019F                     BAUDCON1        equ	415	;# 
   634     019F                     BAUDCTL1        equ	415	;# 
   635     019F                     BAUDCON         equ	415	;# 
   636     019F                     BAUDCTL         equ	415	;# 
   637     020C                     WPUA            equ	524	;# 
   638     020D                     WPUB            equ	525	;# 
   639     020E                     WPUC            equ	526	;# 
   640     0211                     SSP1BUF         equ	529	;# 
   641     0211                     SSPBUF          equ	529	;# 
   642     0212                     SSP1ADD         equ	530	;# 
   643     0212                     SSPADD          equ	530	;# 
   644     0213                     SSP1MSK         equ	531	;# 
   645     0213                     SSPMSK          equ	531	;# 
   646     0214                     SSP1STAT        equ	532	;# 
   647     0214                     SSPSTAT         equ	532	;# 
   648     0215                     SSP1CON1        equ	533	;# 
   649     0215                     SSPCON          equ	533	;# 
   650     0215                     SSPCON1         equ	533	;# 
   651     0215                     SSP1CON         equ	533	;# 
   652     0216                     SSP1CON2        equ	534	;# 
   653     0216                     SSPCON2         equ	534	;# 
   654     0217                     SSP1CON3        equ	535	;# 
   655     0217                     SSPCON3         equ	535	;# 
   656     0219                     SSP2BUF         equ	537	;# 
   657     021A                     SSP2ADD         equ	538	;# 
   658     021B                     SSP2MSK         equ	539	;# 
   659     021C                     SSP2STAT        equ	540	;# 
   660     021D                     SSP2CON1        equ	541	;# 
   661     021D                     SSP2CON         equ	541	;# 
   662     021E                     SSP2CON2        equ	542	;# 
   663     021F                     SSP2CON3        equ	543	;# 
   664     028C                     ODCONA          equ	652	;# 
   665     028D                     ODCONB          equ	653	;# 
   666     028E                     ODCONC          equ	654	;# 
   667     0291                     CCPR1           equ	657	;# 
   668     0291                     CCPR1L          equ	657	;# 
   669     0292                     CCPR1H          equ	658	;# 
   670     0293                     CCP1CON         equ	659	;# 
   671     0294                     CCP1CAP         equ	660	;# 
   672     0295                     CCPR2           equ	661	;# 
   673     0295                     CCPR2L          equ	661	;# 
   674     0296                     CCPR2H          equ	662	;# 
   675     0297                     CCP2CON         equ	663	;# 
   676     0298                     CCP2CAP         equ	664	;# 
   677     029F                     CCPTMRS         equ	671	;# 
   678     030C                     SLRCONA         equ	780	;# 
   679     030D                     SLRCONB         equ	781	;# 
   680     030E                     SLRCONC         equ	782	;# 
   681     0311                     CCPR3           equ	785	;# 
   682     0311                     CCPR3L          equ	785	;# 
   683     0312                     CCPR3H          equ	786	;# 
   684     0313                     CCP3CON         equ	787	;# 
   685     0314                     CCP3CAP         equ	788	;# 
   686     0315                     CCPR4           equ	789	;# 
   687     0315                     CCPR4L          equ	789	;# 
   688     0316                     CCPR4H          equ	790	;# 
   689     0317                     CCP4CON         equ	791	;# 
   690     0318                     CCP4CAP         equ	792	;# 
   691     038C                     INLVLA          equ	908	;# 
   692     038D                     INLVLB          equ	909	;# 
   693     038E                     INLVLC          equ	910	;# 
   694     0391                     IOCAP           equ	913	;# 
   695     0392                     IOCAN           equ	914	;# 
   696     0393                     IOCAF           equ	915	;# 
   697     0394                     IOCBP           equ	916	;# 
   698     0395                     IOCBN           equ	917	;# 
   699     0396                     IOCBF           equ	918	;# 
   700     0397                     IOCCP           equ	919	;# 
   701     0398                     IOCCN           equ	920	;# 
   702     0399                     IOCCF           equ	921	;# 
   703     039A                     CLKRCON         equ	922	;# 
   704     039C                     MDCON           equ	924	;# 
   705     039D                     MDSRC           equ	925	;# 
   706     039E                     MDCARH          equ	926	;# 
   707     039F                     MDCARL          equ	927	;# 
   708     0411                     TMR3            equ	1041	;# 
   709     0411                     TMR3L           equ	1041	;# 
   710     0412                     TMR3H           equ	1042	;# 
   711     0413                     T3CON           equ	1043	;# 
   712     0414                     T3GCON          equ	1044	;# 
   713     0415                     TMR4            equ	1045	;# 
   714     0416                     PR4             equ	1046	;# 
   715     0417                     T4CON           equ	1047	;# 
   716     0418                     TMR5            equ	1048	;# 
   717     0418                     TMR5L           equ	1048	;# 
   718     0419                     TMR5H           equ	1049	;# 
   719     041A                     T5CON           equ	1050	;# 
   720     041B                     T5GCON          equ	1051	;# 
   721     041C                     TMR6            equ	1052	;# 
   722     041D                     PR6             equ	1053	;# 
   723     041E                     T6CON           equ	1054	;# 
   724     041F                     CCDCON          equ	1055	;# 
   725     0498                     NCO1ACC         equ	1176	;# 
   726     0498                     NCO1ACCL        equ	1176	;# 
   727     0499                     NCO1ACCH        equ	1177	;# 
   728     049A                     NCO1ACCU        equ	1178	;# 
   729     049B                     NCO1INC         equ	1179	;# 
   730     049B                     NCO1INCL        equ	1179	;# 
   731     049C                     NCO1INCH        equ	1180	;# 
   732     049D                     NCO1INCU        equ	1181	;# 
   733     049E                     NCO1CON         equ	1182	;# 
   734     049F                     NCO1CLK         equ	1183	;# 
   735     0617                     PWM5DCL         equ	1559	;# 
   736     0618                     PWM5DCH         equ	1560	;# 
   737     0619                     PWM5CON         equ	1561	;# 
   738     0619                     PWM5CON0        equ	1561	;# 
   739     061A                     PWM6DCL         equ	1562	;# 
   740     061B                     PWM6DCH         equ	1563	;# 
   741     061C                     PWM6CON         equ	1564	;# 
   742     061C                     PWM6CON0        equ	1564	;# 
   743     061F                     PWMTMRS         equ	1567	;# 
   744     0691                     CWG1CLKCON      equ	1681	;# 
   745     0692                     CWG1DAT         equ	1682	;# 
   746     0693                     CWG1DBR         equ	1683	;# 
   747     0694                     CWG1DBF         equ	1684	;# 
   748     0695                     CWG1CON0        equ	1685	;# 
   749     0696                     CWG1CON1        equ	1686	;# 
   750     0697                     CWG1AS0         equ	1687	;# 
   751     0698                     CWG1AS1         equ	1688	;# 
   752     0699                     CWG1STR         equ	1689	;# 
   753     0711                     CWG2CLKCON      equ	1809	;# 
   754     0712                     CWG2DAT         equ	1810	;# 
   755     0713                     CWG2DBR         equ	1811	;# 
   756     0714                     CWG2DBF         equ	1812	;# 
   757     0715                     CWG2CON0        equ	1813	;# 
   758     0716                     CWG2CON1        equ	1814	;# 
   759     0717                     CWG2AS0         equ	1815	;# 
   760     0718                     CWG2AS1         equ	1816	;# 
   761     0719                     CWG2STR         equ	1817	;# 
   762     0891                     NVMADR          equ	2193	;# 
   763     0891                     EEADR           equ	2193	;# 
   764     0891                     PMADR           equ	2193	;# 
   765     0891                     NVMADRL         equ	2193	;# 
   766     0891                     EEADRL          equ	2193	;# 
   767     0891                     PMADRL          equ	2193	;# 
   768     0892                     NVMADRH         equ	2194	;# 
   769     0892                     EEADRH          equ	2194	;# 
   770     0892                     PMADRH          equ	2194	;# 
   771     0893                     NVMDAT          equ	2195	;# 
   772     0893                     EEDAT           equ	2195	;# 
   773     0893                     PMDAT           equ	2195	;# 
   774     0893                     NVMDATL         equ	2195	;# 
   775     0893                     EEDATL          equ	2195	;# 
   776     0893                     PMDATL          equ	2195	;# 
   777     0894                     NVMDATH         equ	2196	;# 
   778     0894                     EEDATH          equ	2196	;# 
   779     0894                     PMDATH          equ	2196	;# 
   780     0895                     NVMCON1         equ	2197	;# 
   781     0895                     EECON1          equ	2197	;# 
   782     0895                     PMCON1          equ	2197	;# 
   783     0896                     NVMCON2         equ	2198	;# 
   784     0896                     EECON2          equ	2198	;# 
   785     0896                     PMCON2          equ	2198	;# 
   786     089B                     PCON0           equ	2203	;# 
   787     0911                     PMD0            equ	2321	;# 
   788     0912                     PMD1            equ	2322	;# 
   789     0913                     PMD2            equ	2323	;# 
   790     0914                     PMD3            equ	2324	;# 
   791     0915                     PMD4            equ	2325	;# 
   792     0916                     PMD5            equ	2326	;# 
   793     0918                     CPUDOZE         equ	2328	;# 
   794     0919                     OSCCON1         equ	2329	;# 
   795     091A                     OSCCON2         equ	2330	;# 
   796     091B                     OSCCON3         equ	2331	;# 
   797     091C                     OSCSTAT1        equ	2332	;# 
   798     091D                     OSCEN           equ	2333	;# 
   799     091E                     OSCTUNE         equ	2334	;# 
   800     091F                     OSCFRQ          equ	2335	;# 
   801     0E0F                     PPSLOCK         equ	3599	;# 
   802     0E10                     INTPPS          equ	3600	;# 
   803     0E11                     T0CKIPPS        equ	3601	;# 
   804     0E12                     T1CKIPPS        equ	3602	;# 
   805     0E13                     T1GPPS          equ	3603	;# 
   806     0E14                     CCP1PPS         equ	3604	;# 
   807     0E15                     CCP2PPS         equ	3605	;# 
   808     0E16                     CCP3PPS         equ	3606	;# 
   809     0E17                     CCP4PPS         equ	3607	;# 
   810     0E18                     CWG1PPS         equ	3608	;# 
   811     0E19                     CWG2PPS         equ	3609	;# 
   812     0E1A                     MDCIN1PPS       equ	3610	;# 
   813     0E1B                     MDCIN2PPS       equ	3611	;# 
   814     0E1C                     MDMINPPS        equ	3612	;# 
   815     0E1D                     SSP2CLKPPS      equ	3613	;# 
   816     0E1E                     SSP2DATPPS      equ	3614	;# 
   817     0E1F                     SSP2SSPPS       equ	3615	;# 
   818     0E20                     SSP1CLKPPS      equ	3616	;# 
   819     0E21                     SSP1DATPPS      equ	3617	;# 
   820     0E22                     SSP1SSPPS       equ	3618	;# 
   821     0E24                     RXPPS           equ	3620	;# 
   822     0E25                     TXPPS           equ	3621	;# 
   823     0E28                     CLCIN0PPS       equ	3624	;# 
   824     0E29                     CLCIN1PPS       equ	3625	;# 
   825     0E2A                     CLCIN2PPS       equ	3626	;# 
   826     0E2B                     CLCIN3PPS       equ	3627	;# 
   827     0E2C                     T3CKIPPS        equ	3628	;# 
   828     0E2D                     T3GPPS          equ	3629	;# 
   829     0E2E                     T5CKIPPS        equ	3630	;# 
   830     0E2F                     T5GPPS          equ	3631	;# 
   831     0E90                     RA0PPS          equ	3728	;# 
   832     0E91                     RA1PPS          equ	3729	;# 
   833     0E92                     RA2PPS          equ	3730	;# 
   834     0E94                     RA4PPS          equ	3732	;# 
   835     0E95                     RA5PPS          equ	3733	;# 
   836     0E9C                     RB4PPS          equ	3740	;# 
   837     0E9D                     RB5PPS          equ	3741	;# 
   838     0E9E                     RB6PPS          equ	3742	;# 
   839     0E9F                     RB7PPS          equ	3743	;# 
   840     0EA0                     RC0PPS          equ	3744	;# 
   841     0EA1                     RC1PPS          equ	3745	;# 
   842     0EA2                     RC2PPS          equ	3746	;# 
   843     0EA3                     RC3PPS          equ	3747	;# 
   844     0EA4                     RC4PPS          equ	3748	;# 
   845     0EA5                     RC5PPS          equ	3749	;# 
   846     0EA6                     RC6PPS          equ	3750	;# 
   847     0EA7                     RC7PPS          equ	3751	;# 
   848     0F0F                     CLCDATA         equ	3855	;# 
   849     0F10                     CLC1CON         equ	3856	;# 
   850     0F11                     CLC1POL         equ	3857	;# 
   851     0F12                     CLC1SEL0        equ	3858	;# 
   852     0F13                     CLC1SEL1        equ	3859	;# 
   853     0F14                     CLC1SEL2        equ	3860	;# 
   854     0F15                     CLC1SEL3        equ	3861	;# 
   855     0F16                     CLC1GLS0        equ	3862	;# 
   856     0F17                     CLC1GLS1        equ	3863	;# 
   857     0F18                     CLC1GLS2        equ	3864	;# 
   858     0F19                     CLC1GLS3        equ	3865	;# 
   859     0F1A                     CLC2CON         equ	3866	;# 
   860     0F1B                     CLC2POL         equ	3867	;# 
   861     0F1C                     CLC2SEL0        equ	3868	;# 
   862     0F1D                     CLC2SEL1        equ	3869	;# 
   863     0F1E                     CLC2SEL2        equ	3870	;# 
   864     0F1F                     CLC2SEL3        equ	3871	;# 
   865     0F20                     CLC2GLS0        equ	3872	;# 
   866     0F21                     CLC2GLS1        equ	3873	;# 
   867     0F22                     CLC2GLS2        equ	3874	;# 
   868     0F23                     CLC2GLS3        equ	3875	;# 
   869     0F24                     CLC3CON         equ	3876	;# 
   870     0F25                     CLC3POL         equ	3877	;# 
   871     0F26                     CLC3SEL0        equ	3878	;# 
   872     0F27                     CLC3SEL1        equ	3879	;# 
   873     0F28                     CLC3SEL2        equ	3880	;# 
   874     0F29                     CLC3SEL3        equ	3881	;# 
   875     0F2A                     CLC3GLS0        equ	3882	;# 
   876     0F2B                     CLC3GLS1        equ	3883	;# 
   877     0F2C                     CLC3GLS2        equ	3884	;# 
   878     0F2D                     CLC3GLS3        equ	3885	;# 
   879     0F2E                     CLC4CON         equ	3886	;# 
   880     0F2F                     CLC4POL         equ	3887	;# 
   881     0F30                     CLC4SEL0        equ	3888	;# 
   882     0F31                     CLC4SEL1        equ	3889	;# 
   883     0F32                     CLC4SEL2        equ	3890	;# 
   884     0F33                     CLC4SEL3        equ	3891	;# 
   885     0F34                     CLC4GLS0        equ	3892	;# 
   886     0F35                     CLC4GLS1        equ	3893	;# 
   887     0F36                     CLC4GLS2        equ	3894	;# 
   888     0F37                     CLC4GLS3        equ	3895	;# 
   889     0FE4                     STATUS_SHAD     equ	4068	;# 
   890     0FE5                     WREG_SHAD       equ	4069	;# 
   891     0FE6                     BSR_SHAD        equ	4070	;# 
   892     0FE7                     PCLATH_SHAD     equ	4071	;# 
   893     0FE8                     FSR0L_SHAD      equ	4072	;# 
   894     0FE9                     FSR0H_SHAD      equ	4073	;# 
   895     0FEA                     FSR1L_SHAD      equ	4074	;# 
   896     0FEB                     FSR1H_SHAD      equ	4075	;# 
   897     0FED                     STKPTR          equ	4077	;# 
   898     0FEE                     TOSL            equ	4078	;# 
   899     0FEF                     TOSH            equ	4079	;# 
   900     0000                     INDF0           equ	0	;# 
   901     0001                     INDF1           equ	1	;# 
   902     0002                     PCL             equ	2	;# 
   903     0003                     STATUS          equ	3	;# 
   904     0004                     FSR0L           equ	4	;# 
   905     0005                     FSR0H           equ	5	;# 
   906     0006                     FSR1L           equ	6	;# 
   907     0007                     FSR1H           equ	7	;# 
   908     0008                     BSR             equ	8	;# 
   909     0009                     WREG            equ	9	;# 
   910     000A                     PCLATH          equ	10	;# 
   911     000B                     INTCON          equ	11	;# 
   912     000C                     PORTA           equ	12	;# 
   913     000D                     PORTB           equ	13	;# 
   914     000E                     PORTC           equ	14	;# 
   915     0010                     PIR0            equ	16	;# 
   916     0011                     PIR1            equ	17	;# 
   917     0012                     PIR2            equ	18	;# 
   918     0013                     PIR3            equ	19	;# 
   919     0014                     PIR4            equ	20	;# 
   920     0015                     TMR0L           equ	21	;# 
   921     0015                     TMR0            equ	21	;# 
   922     0016                     TMR0H           equ	22	;# 
   923     0016                     PR0             equ	22	;# 
   924     0017                     T0CON0          equ	23	;# 
   925     0018                     T0CON1          equ	24	;# 
   926     0019                     TMR1            equ	25	;# 
   927     0019                     TMR1L           equ	25	;# 
   928     001A                     TMR1H           equ	26	;# 
   929     001B                     T1CON           equ	27	;# 
   930     001C                     T1GCON          equ	28	;# 
   931     001D                     TMR2            equ	29	;# 
   932     001E                     PR2             equ	30	;# 
   933     001F                     T2CON           equ	31	;# 
   934     008C                     TRISA           equ	140	;# 
   935     008D                     TRISB           equ	141	;# 
   936     008E                     TRISC           equ	142	;# 
   937     0090                     PIE0            equ	144	;# 
   938     0091                     PIE1            equ	145	;# 
   939     0092                     PIE2            equ	146	;# 
   940     0093                     PIE3            equ	147	;# 
   941     0094                     PIE4            equ	148	;# 
   942     0097                     WDTCON          equ	151	;# 
   943     009B                     ADRES           equ	155	;# 
   944     009B                     ADRESL          equ	155	;# 
   945     009C                     ADRESH          equ	156	;# 
   946     009D                     ADCON0          equ	157	;# 
   947     009E                     ADCON1          equ	158	;# 
   948     009F                     ADACT           equ	159	;# 
   949     010C                     LATA            equ	268	;# 
   950     010D                     LATB            equ	269	;# 
   951     010E                     LATC            equ	270	;# 
   952     0111                     CM1CON0         equ	273	;# 
   953     0112                     CM1CON1         equ	274	;# 
   954     0113                     CM2CON0         equ	275	;# 
   955     0114                     CM2CON1         equ	276	;# 
   956     0115                     CMOUT           equ	277	;# 
   957     0116                     BORCON          equ	278	;# 
   958     0117                     FVRCON          equ	279	;# 
   959     0118                     DACCON0         equ	280	;# 
   960     0119                     DACCON1         equ	281	;# 
   961     018C                     ANSELA          equ	396	;# 
   962     018D                     ANSELB          equ	397	;# 
   963     018E                     ANSELC          equ	398	;# 
   964     0197                     VREGCON         equ	407	;# 
   965     0199                     RC1REG          equ	409	;# 
   966     0199                     RCREG           equ	409	;# 
   967     0199                     RCREG1          equ	409	;# 
   968     019A                     TX1REG          equ	410	;# 
   969     019A                     TXREG1          equ	410	;# 
   970     019A                     TXREG           equ	410	;# 
   971     019B                     SP1BRG          equ	411	;# 
   972     019B                     SPBRG           equ	411	;# 
   973     019B                     SP1BRGL         equ	411	;# 
   974     019B                     SPBRG1          equ	411	;# 
   975     019B                     SPBRGL          equ	411	;# 
   976     019C                     SP1BRGH         equ	412	;# 
   977     019C                     SPBRGH          equ	412	;# 
   978     019C                     SPBRGH1         equ	412	;# 
   979     019D                     RC1STA          equ	413	;# 
   980     019D                     RCSTA1          equ	413	;# 
   981     019D                     RCSTA           equ	413	;# 
   982     019E                     TX1STA          equ	414	;# 
   983     019E                     TXSTA1          equ	414	;# 
   984     019E                     TXSTA           equ	414	;# 
   985     019F                     BAUD1CON        equ	415	;# 
   986     019F                     BAUDCON1        equ	415	;# 
   987     019F                     BAUDCTL1        equ	415	;# 
   988     019F                     BAUDCON         equ	415	;# 
   989     019F                     BAUDCTL         equ	415	;# 
   990     020C                     WPUA            equ	524	;# 
   991     020D                     WPUB            equ	525	;# 
   992     020E                     WPUC            equ	526	;# 
   993     0211                     SSP1BUF         equ	529	;# 
   994     0211                     SSPBUF          equ	529	;# 
   995     0212                     SSP1ADD         equ	530	;# 
   996     0212                     SSPADD          equ	530	;# 
   997     0213                     SSP1MSK         equ	531	;# 
   998     0213                     SSPMSK          equ	531	;# 
   999     0214                     SSP1STAT        equ	532	;# 
  1000     0214                     SSPSTAT         equ	532	;# 
  1001     0215                     SSP1CON1        equ	533	;# 
  1002     0215                     SSPCON          equ	533	;# 
  1003     0215                     SSPCON1         equ	533	;# 
  1004     0215                     SSP1CON         equ	533	;# 
  1005     0216                     SSP1CON2        equ	534	;# 
  1006     0216                     SSPCON2         equ	534	;# 
  1007     0217                     SSP1CON3        equ	535	;# 
  1008     0217                     SSPCON3         equ	535	;# 
  1009     0219                     SSP2BUF         equ	537	;# 
  1010     021A                     SSP2ADD         equ	538	;# 
  1011     021B                     SSP2MSK         equ	539	;# 
  1012     021C                     SSP2STAT        equ	540	;# 
  1013     021D                     SSP2CON1        equ	541	;# 
  1014     021D                     SSP2CON         equ	541	;# 
  1015     021E                     SSP2CON2        equ	542	;# 
  1016     021F                     SSP2CON3        equ	543	;# 
  1017     028C                     ODCONA          equ	652	;# 
  1018     028D                     ODCONB          equ	653	;# 
  1019     028E                     ODCONC          equ	654	;# 
  1020     0291                     CCPR1           equ	657	;# 
  1021     0291                     CCPR1L          equ	657	;# 
  1022     0292                     CCPR1H          equ	658	;# 
  1023     0293                     CCP1CON         equ	659	;# 
  1024     0294                     CCP1CAP         equ	660	;# 
  1025     0295                     CCPR2           equ	661	;# 
  1026     0295                     CCPR2L          equ	661	;# 
  1027     0296                     CCPR2H          equ	662	;# 
  1028     0297                     CCP2CON         equ	663	;# 
  1029     0298                     CCP2CAP         equ	664	;# 
  1030     029F                     CCPTMRS         equ	671	;# 
  1031     030C                     SLRCONA         equ	780	;# 
  1032     030D                     SLRCONB         equ	781	;# 
  1033     030E                     SLRCONC         equ	782	;# 
  1034     0311                     CCPR3           equ	785	;# 
  1035     0311                     CCPR3L          equ	785	;# 
  1036     0312                     CCPR3H          equ	786	;# 
  1037     0313                     CCP3CON         equ	787	;# 
  1038     0314                     CCP3CAP         equ	788	;# 
  1039     0315                     CCPR4           equ	789	;# 
  1040     0315                     CCPR4L          equ	789	;# 
  1041     0316                     CCPR4H          equ	790	;# 
  1042     0317                     CCP4CON         equ	791	;# 
  1043     0318                     CCP4CAP         equ	792	;# 
  1044     038C                     INLVLA          equ	908	;# 
  1045     038D                     INLVLB          equ	909	;# 
  1046     038E                     INLVLC          equ	910	;# 
  1047     0391                     IOCAP           equ	913	;# 
  1048     0392                     IOCAN           equ	914	;# 
  1049     0393                     IOCAF           equ	915	;# 
  1050     0394                     IOCBP           equ	916	;# 
  1051     0395                     IOCBN           equ	917	;# 
  1052     0396                     IOCBF           equ	918	;# 
  1053     0397                     IOCCP           equ	919	;# 
  1054     0398                     IOCCN           equ	920	;# 
  1055     0399                     IOCCF           equ	921	;# 
  1056     039A                     CLKRCON         equ	922	;# 
  1057     039C                     MDCON           equ	924	;# 
  1058     039D                     MDSRC           equ	925	;# 
  1059     039E                     MDCARH          equ	926	;# 
  1060     039F                     MDCARL          equ	927	;# 
  1061     0411                     TMR3            equ	1041	;# 
  1062     0411                     TMR3L           equ	1041	;# 
  1063     0412                     TMR3H           equ	1042	;# 
  1064     0413                     T3CON           equ	1043	;# 
  1065     0414                     T3GCON          equ	1044	;# 
  1066     0415                     TMR4            equ	1045	;# 
  1067     0416                     PR4             equ	1046	;# 
  1068     0417                     T4CON           equ	1047	;# 
  1069     0418                     TMR5            equ	1048	;# 
  1070     0418                     TMR5L           equ	1048	;# 
  1071     0419                     TMR5H           equ	1049	;# 
  1072     041A                     T5CON           equ	1050	;# 
  1073     041B                     T5GCON          equ	1051	;# 
  1074     041C                     TMR6            equ	1052	;# 
  1075     041D                     PR6             equ	1053	;# 
  1076     041E                     T6CON           equ	1054	;# 
  1077     041F                     CCDCON          equ	1055	;# 
  1078     0498                     NCO1ACC         equ	1176	;# 
  1079     0498                     NCO1ACCL        equ	1176	;# 
  1080     0499                     NCO1ACCH        equ	1177	;# 
  1081     049A                     NCO1ACCU        equ	1178	;# 
  1082     049B                     NCO1INC         equ	1179	;# 
  1083     049B                     NCO1INCL        equ	1179	;# 
  1084     049C                     NCO1INCH        equ	1180	;# 
  1085     049D                     NCO1INCU        equ	1181	;# 
  1086     049E                     NCO1CON         equ	1182	;# 
  1087     049F                     NCO1CLK         equ	1183	;# 
  1088     0617                     PWM5DCL         equ	1559	;# 
  1089     0618                     PWM5DCH         equ	1560	;# 
  1090     0619                     PWM5CON         equ	1561	;# 
  1091     0619                     PWM5CON0        equ	1561	;# 
  1092     061A                     PWM6DCL         equ	1562	;# 
  1093     061B                     PWM6DCH         equ	1563	;# 
  1094     061C                     PWM6CON         equ	1564	;# 
  1095     061C                     PWM6CON0        equ	1564	;# 
  1096     061F                     PWMTMRS         equ	1567	;# 
  1097     0691                     CWG1CLKCON      equ	1681	;# 
  1098     0692                     CWG1DAT         equ	1682	;# 
  1099     0693                     CWG1DBR         equ	1683	;# 
  1100     0694                     CWG1DBF         equ	1684	;# 
  1101     0695                     CWG1CON0        equ	1685	;# 
  1102     0696                     CWG1CON1        equ	1686	;# 
  1103     0697                     CWG1AS0         equ	1687	;# 
  1104     0698                     CWG1AS1         equ	1688	;# 
  1105     0699                     CWG1STR         equ	1689	;# 
  1106     0711                     CWG2CLKCON      equ	1809	;# 
  1107     0712                     CWG2DAT         equ	1810	;# 
  1108     0713                     CWG2DBR         equ	1811	;# 
  1109     0714                     CWG2DBF         equ	1812	;# 
  1110     0715                     CWG2CON0        equ	1813	;# 
  1111     0716                     CWG2CON1        equ	1814	;# 
  1112     0717                     CWG2AS0         equ	1815	;# 
  1113     0718                     CWG2AS1         equ	1816	;# 
  1114     0719                     CWG2STR         equ	1817	;# 
  1115     0891                     NVMADR          equ	2193	;# 
  1116     0891                     EEADR           equ	2193	;# 
  1117     0891                     PMADR           equ	2193	;# 
  1118     0891                     NVMADRL         equ	2193	;# 
  1119     0891                     EEADRL          equ	2193	;# 
  1120     0891                     PMADRL          equ	2193	;# 
  1121     0892                     NVMADRH         equ	2194	;# 
  1122     0892                     EEADRH          equ	2194	;# 
  1123     0892                     PMADRH          equ	2194	;# 
  1124     0893                     NVMDAT          equ	2195	;# 
  1125     0893                     EEDAT           equ	2195	;# 
  1126     0893                     PMDAT           equ	2195	;# 
  1127     0893                     NVMDATL         equ	2195	;# 
  1128     0893                     EEDATL          equ	2195	;# 
  1129     0893                     PMDATL          equ	2195	;# 
  1130     0894                     NVMDATH         equ	2196	;# 
  1131     0894                     EEDATH          equ	2196	;# 
  1132     0894                     PMDATH          equ	2196	;# 
  1133     0895                     NVMCON1         equ	2197	;# 
  1134     0895                     EECON1          equ	2197	;# 
  1135     0895                     PMCON1          equ	2197	;# 
  1136     0896                     NVMCON2         equ	2198	;# 
  1137     0896                     EECON2          equ	2198	;# 
  1138     0896                     PMCON2          equ	2198	;# 
  1139     089B                     PCON0           equ	2203	;# 
  1140     0911                     PMD0            equ	2321	;# 
  1141     0912                     PMD1            equ	2322	;# 
  1142     0913                     PMD2            equ	2323	;# 
  1143     0914                     PMD3            equ	2324	;# 
  1144     0915                     PMD4            equ	2325	;# 
  1145     0916                     PMD5            equ	2326	;# 
  1146     0918                     CPUDOZE         equ	2328	;# 
  1147     0919                     OSCCON1         equ	2329	;# 
  1148     091A                     OSCCON2         equ	2330	;# 
  1149     091B                     OSCCON3         equ	2331	;# 
  1150     091C                     OSCSTAT1        equ	2332	;# 
  1151     091D                     OSCEN           equ	2333	;# 
  1152     091E                     OSCTUNE         equ	2334	;# 
  1153     091F                     OSCFRQ          equ	2335	;# 
  1154     0E0F                     PPSLOCK         equ	3599	;# 
  1155     0E10                     INTPPS          equ	3600	;# 
  1156     0E11                     T0CKIPPS        equ	3601	;# 
  1157     0E12                     T1CKIPPS        equ	3602	;# 
  1158     0E13                     T1GPPS          equ	3603	;# 
  1159     0E14                     CCP1PPS         equ	3604	;# 
  1160     0E15                     CCP2PPS         equ	3605	;# 
  1161     0E16                     CCP3PPS         equ	3606	;# 
  1162     0E17                     CCP4PPS         equ	3607	;# 
  1163     0E18                     CWG1PPS         equ	3608	;# 
  1164     0E19                     CWG2PPS         equ	3609	;# 
  1165     0E1A                     MDCIN1PPS       equ	3610	;# 
  1166     0E1B                     MDCIN2PPS       equ	3611	;# 
  1167     0E1C                     MDMINPPS        equ	3612	;# 
  1168     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1169     0E1E                     SSP2DATPPS      equ	3614	;# 
  1170     0E1F                     SSP2SSPPS       equ	3615	;# 
  1171     0E20                     SSP1CLKPPS      equ	3616	;# 
  1172     0E21                     SSP1DATPPS      equ	3617	;# 
  1173     0E22                     SSP1SSPPS       equ	3618	;# 
  1174     0E24                     RXPPS           equ	3620	;# 
  1175     0E25                     TXPPS           equ	3621	;# 
  1176     0E28                     CLCIN0PPS       equ	3624	;# 
  1177     0E29                     CLCIN1PPS       equ	3625	;# 
  1178     0E2A                     CLCIN2PPS       equ	3626	;# 
  1179     0E2B                     CLCIN3PPS       equ	3627	;# 
  1180     0E2C                     T3CKIPPS        equ	3628	;# 
  1181     0E2D                     T3GPPS          equ	3629	;# 
  1182     0E2E                     T5CKIPPS        equ	3630	;# 
  1183     0E2F                     T5GPPS          equ	3631	;# 
  1184     0E90                     RA0PPS          equ	3728	;# 
  1185     0E91                     RA1PPS          equ	3729	;# 
  1186     0E92                     RA2PPS          equ	3730	;# 
  1187     0E94                     RA4PPS          equ	3732	;# 
  1188     0E95                     RA5PPS          equ	3733	;# 
  1189     0E9C                     RB4PPS          equ	3740	;# 
  1190     0E9D                     RB5PPS          equ	3741	;# 
  1191     0E9E                     RB6PPS          equ	3742	;# 
  1192     0E9F                     RB7PPS          equ	3743	;# 
  1193     0EA0                     RC0PPS          equ	3744	;# 
  1194     0EA1                     RC1PPS          equ	3745	;# 
  1195     0EA2                     RC2PPS          equ	3746	;# 
  1196     0EA3                     RC3PPS          equ	3747	;# 
  1197     0EA4                     RC4PPS          equ	3748	;# 
  1198     0EA5                     RC5PPS          equ	3749	;# 
  1199     0EA6                     RC6PPS          equ	3750	;# 
  1200     0EA7                     RC7PPS          equ	3751	;# 
  1201     0F0F                     CLCDATA         equ	3855	;# 
  1202     0F10                     CLC1CON         equ	3856	;# 
  1203     0F11                     CLC1POL         equ	3857	;# 
  1204     0F12                     CLC1SEL0        equ	3858	;# 
  1205     0F13                     CLC1SEL1        equ	3859	;# 
  1206     0F14                     CLC1SEL2        equ	3860	;# 
  1207     0F15                     CLC1SEL3        equ	3861	;# 
  1208     0F16                     CLC1GLS0        equ	3862	;# 
  1209     0F17                     CLC1GLS1        equ	3863	;# 
  1210     0F18                     CLC1GLS2        equ	3864	;# 
  1211     0F19                     CLC1GLS3        equ	3865	;# 
  1212     0F1A                     CLC2CON         equ	3866	;# 
  1213     0F1B                     CLC2POL         equ	3867	;# 
  1214     0F1C                     CLC2SEL0        equ	3868	;# 
  1215     0F1D                     CLC2SEL1        equ	3869	;# 
  1216     0F1E                     CLC2SEL2        equ	3870	;# 
  1217     0F1F                     CLC2SEL3        equ	3871	;# 
  1218     0F20                     CLC2GLS0        equ	3872	;# 
  1219     0F21                     CLC2GLS1        equ	3873	;# 
  1220     0F22                     CLC2GLS2        equ	3874	;# 
  1221     0F23                     CLC2GLS3        equ	3875	;# 
  1222     0F24                     CLC3CON         equ	3876	;# 
  1223     0F25                     CLC3POL         equ	3877	;# 
  1224     0F26                     CLC3SEL0        equ	3878	;# 
  1225     0F27                     CLC3SEL1        equ	3879	;# 
  1226     0F28                     CLC3SEL2        equ	3880	;# 
  1227     0F29                     CLC3SEL3        equ	3881	;# 
  1228     0F2A                     CLC3GLS0        equ	3882	;# 
  1229     0F2B                     CLC3GLS1        equ	3883	;# 
  1230     0F2C                     CLC3GLS2        equ	3884	;# 
  1231     0F2D                     CLC3GLS3        equ	3885	;# 
  1232     0F2E                     CLC4CON         equ	3886	;# 
  1233     0F2F                     CLC4POL         equ	3887	;# 
  1234     0F30                     CLC4SEL0        equ	3888	;# 
  1235     0F31                     CLC4SEL1        equ	3889	;# 
  1236     0F32                     CLC4SEL2        equ	3890	;# 
  1237     0F33                     CLC4SEL3        equ	3891	;# 
  1238     0F34                     CLC4GLS0        equ	3892	;# 
  1239     0F35                     CLC4GLS1        equ	3893	;# 
  1240     0F36                     CLC4GLS2        equ	3894	;# 
  1241     0F37                     CLC4GLS3        equ	3895	;# 
  1242     0FE4                     STATUS_SHAD     equ	4068	;# 
  1243     0FE5                     WREG_SHAD       equ	4069	;# 
  1244     0FE6                     BSR_SHAD        equ	4070	;# 
  1245     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1246     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1247     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1248     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1249     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1250     0FED                     STKPTR          equ	4077	;# 
  1251     0FEE                     TOSL            equ	4078	;# 
  1252     0FEF                     TOSH            equ	4079	;# 
  1253     0000                     INDF0           equ	0	;# 
  1254     0001                     INDF1           equ	1	;# 
  1255     0002                     PCL             equ	2	;# 
  1256     0003                     STATUS          equ	3	;# 
  1257     0004                     FSR0L           equ	4	;# 
  1258     0005                     FSR0H           equ	5	;# 
  1259     0006                     FSR1L           equ	6	;# 
  1260     0007                     FSR1H           equ	7	;# 
  1261     0008                     BSR             equ	8	;# 
  1262     0009                     WREG            equ	9	;# 
  1263     000A                     PCLATH          equ	10	;# 
  1264     000B                     INTCON          equ	11	;# 
  1265     000C                     PORTA           equ	12	;# 
  1266     000D                     PORTB           equ	13	;# 
  1267     000E                     PORTC           equ	14	;# 
  1268     0010                     PIR0            equ	16	;# 
  1269     0011                     PIR1            equ	17	;# 
  1270     0012                     PIR2            equ	18	;# 
  1271     0013                     PIR3            equ	19	;# 
  1272     0014                     PIR4            equ	20	;# 
  1273     0015                     TMR0L           equ	21	;# 
  1274     0015                     TMR0            equ	21	;# 
  1275     0016                     TMR0H           equ	22	;# 
  1276     0016                     PR0             equ	22	;# 
  1277     0017                     T0CON0          equ	23	;# 
  1278     0018                     T0CON1          equ	24	;# 
  1279     0019                     TMR1            equ	25	;# 
  1280     0019                     TMR1L           equ	25	;# 
  1281     001A                     TMR1H           equ	26	;# 
  1282     001B                     T1CON           equ	27	;# 
  1283     001C                     T1GCON          equ	28	;# 
  1284     001D                     TMR2            equ	29	;# 
  1285     001E                     PR2             equ	30	;# 
  1286     001F                     T2CON           equ	31	;# 
  1287     008C                     TRISA           equ	140	;# 
  1288     008D                     TRISB           equ	141	;# 
  1289     008E                     TRISC           equ	142	;# 
  1290     0090                     PIE0            equ	144	;# 
  1291     0091                     PIE1            equ	145	;# 
  1292     0092                     PIE2            equ	146	;# 
  1293     0093                     PIE3            equ	147	;# 
  1294     0094                     PIE4            equ	148	;# 
  1295     0097                     WDTCON          equ	151	;# 
  1296     009B                     ADRES           equ	155	;# 
  1297     009B                     ADRESL          equ	155	;# 
  1298     009C                     ADRESH          equ	156	;# 
  1299     009D                     ADCON0          equ	157	;# 
  1300     009E                     ADCON1          equ	158	;# 
  1301     009F                     ADACT           equ	159	;# 
  1302     010C                     LATA            equ	268	;# 
  1303     010D                     LATB            equ	269	;# 
  1304     010E                     LATC            equ	270	;# 
  1305     0111                     CM1CON0         equ	273	;# 
  1306     0112                     CM1CON1         equ	274	;# 
  1307     0113                     CM2CON0         equ	275	;# 
  1308     0114                     CM2CON1         equ	276	;# 
  1309     0115                     CMOUT           equ	277	;# 
  1310     0116                     BORCON          equ	278	;# 
  1311     0117                     FVRCON          equ	279	;# 
  1312     0118                     DACCON0         equ	280	;# 
  1313     0119                     DACCON1         equ	281	;# 
  1314     018C                     ANSELA          equ	396	;# 
  1315     018D                     ANSELB          equ	397	;# 
  1316     018E                     ANSELC          equ	398	;# 
  1317     0197                     VREGCON         equ	407	;# 
  1318     0199                     RC1REG          equ	409	;# 
  1319     0199                     RCREG           equ	409	;# 
  1320     0199                     RCREG1          equ	409	;# 
  1321     019A                     TX1REG          equ	410	;# 
  1322     019A                     TXREG1          equ	410	;# 
  1323     019A                     TXREG           equ	410	;# 
  1324     019B                     SP1BRG          equ	411	;# 
  1325     019B                     SPBRG           equ	411	;# 
  1326     019B                     SP1BRGL         equ	411	;# 
  1327     019B                     SPBRG1          equ	411	;# 
  1328     019B                     SPBRGL          equ	411	;# 
  1329     019C                     SP1BRGH         equ	412	;# 
  1330     019C                     SPBRGH          equ	412	;# 
  1331     019C                     SPBRGH1         equ	412	;# 
  1332     019D                     RC1STA          equ	413	;# 
  1333     019D                     RCSTA1          equ	413	;# 
  1334     019D                     RCSTA           equ	413	;# 
  1335     019E                     TX1STA          equ	414	;# 
  1336     019E                     TXSTA1          equ	414	;# 
  1337     019E                     TXSTA           equ	414	;# 
  1338     019F                     BAUD1CON        equ	415	;# 
  1339     019F                     BAUDCON1        equ	415	;# 
  1340     019F                     BAUDCTL1        equ	415	;# 
  1341     019F                     BAUDCON         equ	415	;# 
  1342     019F                     BAUDCTL         equ	415	;# 
  1343     020C                     WPUA            equ	524	;# 
  1344     020D                     WPUB            equ	525	;# 
  1345     020E                     WPUC            equ	526	;# 
  1346     0211                     SSP1BUF         equ	529	;# 
  1347     0211                     SSPBUF          equ	529	;# 
  1348     0212                     SSP1ADD         equ	530	;# 
  1349     0212                     SSPADD          equ	530	;# 
  1350     0213                     SSP1MSK         equ	531	;# 
  1351     0213                     SSPMSK          equ	531	;# 
  1352     0214                     SSP1STAT        equ	532	;# 
  1353     0214                     SSPSTAT         equ	532	;# 
  1354     0215                     SSP1CON1        equ	533	;# 
  1355     0215                     SSPCON          equ	533	;# 
  1356     0215                     SSPCON1         equ	533	;# 
  1357     0215                     SSP1CON         equ	533	;# 
  1358     0216                     SSP1CON2        equ	534	;# 
  1359     0216                     SSPCON2         equ	534	;# 
  1360     0217                     SSP1CON3        equ	535	;# 
  1361     0217                     SSPCON3         equ	535	;# 
  1362     0219                     SSP2BUF         equ	537	;# 
  1363     021A                     SSP2ADD         equ	538	;# 
  1364     021B                     SSP2MSK         equ	539	;# 
  1365     021C                     SSP2STAT        equ	540	;# 
  1366     021D                     SSP2CON1        equ	541	;# 
  1367     021D                     SSP2CON         equ	541	;# 
  1368     021E                     SSP2CON2        equ	542	;# 
  1369     021F                     SSP2CON3        equ	543	;# 
  1370     028C                     ODCONA          equ	652	;# 
  1371     028D                     ODCONB          equ	653	;# 
  1372     028E                     ODCONC          equ	654	;# 
  1373     0291                     CCPR1           equ	657	;# 
  1374     0291                     CCPR1L          equ	657	;# 
  1375     0292                     CCPR1H          equ	658	;# 
  1376     0293                     CCP1CON         equ	659	;# 
  1377     0294                     CCP1CAP         equ	660	;# 
  1378     0295                     CCPR2           equ	661	;# 
  1379     0295                     CCPR2L          equ	661	;# 
  1380     0296                     CCPR2H          equ	662	;# 
  1381     0297                     CCP2CON         equ	663	;# 
  1382     0298                     CCP2CAP         equ	664	;# 
  1383     029F                     CCPTMRS         equ	671	;# 
  1384     030C                     SLRCONA         equ	780	;# 
  1385     030D                     SLRCONB         equ	781	;# 
  1386     030E                     SLRCONC         equ	782	;# 
  1387     0311                     CCPR3           equ	785	;# 
  1388     0311                     CCPR3L          equ	785	;# 
  1389     0312                     CCPR3H          equ	786	;# 
  1390     0313                     CCP3CON         equ	787	;# 
  1391     0314                     CCP3CAP         equ	788	;# 
  1392     0315                     CCPR4           equ	789	;# 
  1393     0315                     CCPR4L          equ	789	;# 
  1394     0316                     CCPR4H          equ	790	;# 
  1395     0317                     CCP4CON         equ	791	;# 
  1396     0318                     CCP4CAP         equ	792	;# 
  1397     038C                     INLVLA          equ	908	;# 
  1398     038D                     INLVLB          equ	909	;# 
  1399     038E                     INLVLC          equ	910	;# 
  1400     0391                     IOCAP           equ	913	;# 
  1401     0392                     IOCAN           equ	914	;# 
  1402     0393                     IOCAF           equ	915	;# 
  1403     0394                     IOCBP           equ	916	;# 
  1404     0395                     IOCBN           equ	917	;# 
  1405     0396                     IOCBF           equ	918	;# 
  1406     0397                     IOCCP           equ	919	;# 
  1407     0398                     IOCCN           equ	920	;# 
  1408     0399                     IOCCF           equ	921	;# 
  1409     039A                     CLKRCON         equ	922	;# 
  1410     039C                     MDCON           equ	924	;# 
  1411     039D                     MDSRC           equ	925	;# 
  1412     039E                     MDCARH          equ	926	;# 
  1413     039F                     MDCARL          equ	927	;# 
  1414     0411                     TMR3            equ	1041	;# 
  1415     0411                     TMR3L           equ	1041	;# 
  1416     0412                     TMR3H           equ	1042	;# 
  1417     0413                     T3CON           equ	1043	;# 
  1418     0414                     T3GCON          equ	1044	;# 
  1419     0415                     TMR4            equ	1045	;# 
  1420     0416                     PR4             equ	1046	;# 
  1421     0417                     T4CON           equ	1047	;# 
  1422     0418                     TMR5            equ	1048	;# 
  1423     0418                     TMR5L           equ	1048	;# 
  1424     0419                     TMR5H           equ	1049	;# 
  1425     041A                     T5CON           equ	1050	;# 
  1426     041B                     T5GCON          equ	1051	;# 
  1427     041C                     TMR6            equ	1052	;# 
  1428     041D                     PR6             equ	1053	;# 
  1429     041E                     T6CON           equ	1054	;# 
  1430     041F                     CCDCON          equ	1055	;# 
  1431     0498                     NCO1ACC         equ	1176	;# 
  1432     0498                     NCO1ACCL        equ	1176	;# 
  1433     0499                     NCO1ACCH        equ	1177	;# 
  1434     049A                     NCO1ACCU        equ	1178	;# 
  1435     049B                     NCO1INC         equ	1179	;# 
  1436     049B                     NCO1INCL        equ	1179	;# 
  1437     049C                     NCO1INCH        equ	1180	;# 
  1438     049D                     NCO1INCU        equ	1181	;# 
  1439     049E                     NCO1CON         equ	1182	;# 
  1440     049F                     NCO1CLK         equ	1183	;# 
  1441     0617                     PWM5DCL         equ	1559	;# 
  1442     0618                     PWM5DCH         equ	1560	;# 
  1443     0619                     PWM5CON         equ	1561	;# 
  1444     0619                     PWM5CON0        equ	1561	;# 
  1445     061A                     PWM6DCL         equ	1562	;# 
  1446     061B                     PWM6DCH         equ	1563	;# 
  1447     061C                     PWM6CON         equ	1564	;# 
  1448     061C                     PWM6CON0        equ	1564	;# 
  1449     061F                     PWMTMRS         equ	1567	;# 
  1450     0691                     CWG1CLKCON      equ	1681	;# 
  1451     0692                     CWG1DAT         equ	1682	;# 
  1452     0693                     CWG1DBR         equ	1683	;# 
  1453     0694                     CWG1DBF         equ	1684	;# 
  1454     0695                     CWG1CON0        equ	1685	;# 
  1455     0696                     CWG1CON1        equ	1686	;# 
  1456     0697                     CWG1AS0         equ	1687	;# 
  1457     0698                     CWG1AS1         equ	1688	;# 
  1458     0699                     CWG1STR         equ	1689	;# 
  1459     0711                     CWG2CLKCON      equ	1809	;# 
  1460     0712                     CWG2DAT         equ	1810	;# 
  1461     0713                     CWG2DBR         equ	1811	;# 
  1462     0714                     CWG2DBF         equ	1812	;# 
  1463     0715                     CWG2CON0        equ	1813	;# 
  1464     0716                     CWG2CON1        equ	1814	;# 
  1465     0717                     CWG2AS0         equ	1815	;# 
  1466     0718                     CWG2AS1         equ	1816	;# 
  1467     0719                     CWG2STR         equ	1817	;# 
  1468     0891                     NVMADR          equ	2193	;# 
  1469     0891                     EEADR           equ	2193	;# 
  1470     0891                     PMADR           equ	2193	;# 
  1471     0891                     NVMADRL         equ	2193	;# 
  1472     0891                     EEADRL          equ	2193	;# 
  1473     0891                     PMADRL          equ	2193	;# 
  1474     0892                     NVMADRH         equ	2194	;# 
  1475     0892                     EEADRH          equ	2194	;# 
  1476     0892                     PMADRH          equ	2194	;# 
  1477     0893                     NVMDAT          equ	2195	;# 
  1478     0893                     EEDAT           equ	2195	;# 
  1479     0893                     PMDAT           equ	2195	;# 
  1480     0893                     NVMDATL         equ	2195	;# 
  1481     0893                     EEDATL          equ	2195	;# 
  1482     0893                     PMDATL          equ	2195	;# 
  1483     0894                     NVMDATH         equ	2196	;# 
  1484     0894                     EEDATH          equ	2196	;# 
  1485     0894                     PMDATH          equ	2196	;# 
  1486     0895                     NVMCON1         equ	2197	;# 
  1487     0895                     EECON1          equ	2197	;# 
  1488     0895                     PMCON1          equ	2197	;# 
  1489     0896                     NVMCON2         equ	2198	;# 
  1490     0896                     EECON2          equ	2198	;# 
  1491     0896                     PMCON2          equ	2198	;# 
  1492     089B                     PCON0           equ	2203	;# 
  1493     0911                     PMD0            equ	2321	;# 
  1494     0912                     PMD1            equ	2322	;# 
  1495     0913                     PMD2            equ	2323	;# 
  1496     0914                     PMD3            equ	2324	;# 
  1497     0915                     PMD4            equ	2325	;# 
  1498     0916                     PMD5            equ	2326	;# 
  1499     0918                     CPUDOZE         equ	2328	;# 
  1500     0919                     OSCCON1         equ	2329	;# 
  1501     091A                     OSCCON2         equ	2330	;# 
  1502     091B                     OSCCON3         equ	2331	;# 
  1503     091C                     OSCSTAT1        equ	2332	;# 
  1504     091D                     OSCEN           equ	2333	;# 
  1505     091E                     OSCTUNE         equ	2334	;# 
  1506     091F                     OSCFRQ          equ	2335	;# 
  1507     0E0F                     PPSLOCK         equ	3599	;# 
  1508     0E10                     INTPPS          equ	3600	;# 
  1509     0E11                     T0CKIPPS        equ	3601	;# 
  1510     0E12                     T1CKIPPS        equ	3602	;# 
  1511     0E13                     T1GPPS          equ	3603	;# 
  1512     0E14                     CCP1PPS         equ	3604	;# 
  1513     0E15                     CCP2PPS         equ	3605	;# 
  1514     0E16                     CCP3PPS         equ	3606	;# 
  1515     0E17                     CCP4PPS         equ	3607	;# 
  1516     0E18                     CWG1PPS         equ	3608	;# 
  1517     0E19                     CWG2PPS         equ	3609	;# 
  1518     0E1A                     MDCIN1PPS       equ	3610	;# 
  1519     0E1B                     MDCIN2PPS       equ	3611	;# 
  1520     0E1C                     MDMINPPS        equ	3612	;# 
  1521     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1522     0E1E                     SSP2DATPPS      equ	3614	;# 
  1523     0E1F                     SSP2SSPPS       equ	3615	;# 
  1524     0E20                     SSP1CLKPPS      equ	3616	;# 
  1525     0E21                     SSP1DATPPS      equ	3617	;# 
  1526     0E22                     SSP1SSPPS       equ	3618	;# 
  1527     0E24                     RXPPS           equ	3620	;# 
  1528     0E25                     TXPPS           equ	3621	;# 
  1529     0E28                     CLCIN0PPS       equ	3624	;# 
  1530     0E29                     CLCIN1PPS       equ	3625	;# 
  1531     0E2A                     CLCIN2PPS       equ	3626	;# 
  1532     0E2B                     CLCIN3PPS       equ	3627	;# 
  1533     0E2C                     T3CKIPPS        equ	3628	;# 
  1534     0E2D                     T3GPPS          equ	3629	;# 
  1535     0E2E                     T5CKIPPS        equ	3630	;# 
  1536     0E2F                     T5GPPS          equ	3631	;# 
  1537     0E90                     RA0PPS          equ	3728	;# 
  1538     0E91                     RA1PPS          equ	3729	;# 
  1539     0E92                     RA2PPS          equ	3730	;# 
  1540     0E94                     RA4PPS          equ	3732	;# 
  1541     0E95                     RA5PPS          equ	3733	;# 
  1542     0E9C                     RB4PPS          equ	3740	;# 
  1543     0E9D                     RB5PPS          equ	3741	;# 
  1544     0E9E                     RB6PPS          equ	3742	;# 
  1545     0E9F                     RB7PPS          equ	3743	;# 
  1546     0EA0                     RC0PPS          equ	3744	;# 
  1547     0EA1                     RC1PPS          equ	3745	;# 
  1548     0EA2                     RC2PPS          equ	3746	;# 
  1549     0EA3                     RC3PPS          equ	3747	;# 
  1550     0EA4                     RC4PPS          equ	3748	;# 
  1551     0EA5                     RC5PPS          equ	3749	;# 
  1552     0EA6                     RC6PPS          equ	3750	;# 
  1553     0EA7                     RC7PPS          equ	3751	;# 
  1554     0F0F                     CLCDATA         equ	3855	;# 
  1555     0F10                     CLC1CON         equ	3856	;# 
  1556     0F11                     CLC1POL         equ	3857	;# 
  1557     0F12                     CLC1SEL0        equ	3858	;# 
  1558     0F13                     CLC1SEL1        equ	3859	;# 
  1559     0F14                     CLC1SEL2        equ	3860	;# 
  1560     0F15                     CLC1SEL3        equ	3861	;# 
  1561     0F16                     CLC1GLS0        equ	3862	;# 
  1562     0F17                     CLC1GLS1        equ	3863	;# 
  1563     0F18                     CLC1GLS2        equ	3864	;# 
  1564     0F19                     CLC1GLS3        equ	3865	;# 
  1565     0F1A                     CLC2CON         equ	3866	;# 
  1566     0F1B                     CLC2POL         equ	3867	;# 
  1567     0F1C                     CLC2SEL0        equ	3868	;# 
  1568     0F1D                     CLC2SEL1        equ	3869	;# 
  1569     0F1E                     CLC2SEL2        equ	3870	;# 
  1570     0F1F                     CLC2SEL3        equ	3871	;# 
  1571     0F20                     CLC2GLS0        equ	3872	;# 
  1572     0F21                     CLC2GLS1        equ	3873	;# 
  1573     0F22                     CLC2GLS2        equ	3874	;# 
  1574     0F23                     CLC2GLS3        equ	3875	;# 
  1575     0F24                     CLC3CON         equ	3876	;# 
  1576     0F25                     CLC3POL         equ	3877	;# 
  1577     0F26                     CLC3SEL0        equ	3878	;# 
  1578     0F27                     CLC3SEL1        equ	3879	;# 
  1579     0F28                     CLC3SEL2        equ	3880	;# 
  1580     0F29                     CLC3SEL3        equ	3881	;# 
  1581     0F2A                     CLC3GLS0        equ	3882	;# 
  1582     0F2B                     CLC3GLS1        equ	3883	;# 
  1583     0F2C                     CLC3GLS2        equ	3884	;# 
  1584     0F2D                     CLC3GLS3        equ	3885	;# 
  1585     0F2E                     CLC4CON         equ	3886	;# 
  1586     0F2F                     CLC4POL         equ	3887	;# 
  1587     0F30                     CLC4SEL0        equ	3888	;# 
  1588     0F31                     CLC4SEL1        equ	3889	;# 
  1589     0F32                     CLC4SEL2        equ	3890	;# 
  1590     0F33                     CLC4SEL3        equ	3891	;# 
  1591     0F34                     CLC4GLS0        equ	3892	;# 
  1592     0F35                     CLC4GLS1        equ	3893	;# 
  1593     0F36                     CLC4GLS2        equ	3894	;# 
  1594     0F37                     CLC4GLS3        equ	3895	;# 
  1595     0FE4                     STATUS_SHAD     equ	4068	;# 
  1596     0FE5                     WREG_SHAD       equ	4069	;# 
  1597     0FE6                     BSR_SHAD        equ	4070	;# 
  1598     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1599     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1600     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1601     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1602     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1603     0FED                     STKPTR          equ	4077	;# 
  1604     0FEE                     TOSL            equ	4078	;# 
  1605     0FEF                     TOSH            equ	4079	;# 
  1606     0000                     INDF0           equ	0	;# 
  1607     0001                     INDF1           equ	1	;# 
  1608     0002                     PCL             equ	2	;# 
  1609     0003                     STATUS          equ	3	;# 
  1610     0004                     FSR0L           equ	4	;# 
  1611     0005                     FSR0H           equ	5	;# 
  1612     0006                     FSR1L           equ	6	;# 
  1613     0007                     FSR1H           equ	7	;# 
  1614     0008                     BSR             equ	8	;# 
  1615     0009                     WREG            equ	9	;# 
  1616     000A                     PCLATH          equ	10	;# 
  1617     000B                     INTCON          equ	11	;# 
  1618     000C                     PORTA           equ	12	;# 
  1619     000D                     PORTB           equ	13	;# 
  1620     000E                     PORTC           equ	14	;# 
  1621     0010                     PIR0            equ	16	;# 
  1622     0011                     PIR1            equ	17	;# 
  1623     0012                     PIR2            equ	18	;# 
  1624     0013                     PIR3            equ	19	;# 
  1625     0014                     PIR4            equ	20	;# 
  1626     0015                     TMR0L           equ	21	;# 
  1627     0015                     TMR0            equ	21	;# 
  1628     0016                     TMR0H           equ	22	;# 
  1629     0016                     PR0             equ	22	;# 
  1630     0017                     T0CON0          equ	23	;# 
  1631     0018                     T0CON1          equ	24	;# 
  1632     0019                     TMR1            equ	25	;# 
  1633     0019                     TMR1L           equ	25	;# 
  1634     001A                     TMR1H           equ	26	;# 
  1635     001B                     T1CON           equ	27	;# 
  1636     001C                     T1GCON          equ	28	;# 
  1637     001D                     TMR2            equ	29	;# 
  1638     001E                     PR2             equ	30	;# 
  1639     001F                     T2CON           equ	31	;# 
  1640     008C                     TRISA           equ	140	;# 
  1641     008D                     TRISB           equ	141	;# 
  1642     008E                     TRISC           equ	142	;# 
  1643     0090                     PIE0            equ	144	;# 
  1644     0091                     PIE1            equ	145	;# 
  1645     0092                     PIE2            equ	146	;# 
  1646     0093                     PIE3            equ	147	;# 
  1647     0094                     PIE4            equ	148	;# 
  1648     0097                     WDTCON          equ	151	;# 
  1649     009B                     ADRES           equ	155	;# 
  1650     009B                     ADRESL          equ	155	;# 
  1651     009C                     ADRESH          equ	156	;# 
  1652     009D                     ADCON0          equ	157	;# 
  1653     009E                     ADCON1          equ	158	;# 
  1654     009F                     ADACT           equ	159	;# 
  1655     010C                     LATA            equ	268	;# 
  1656     010D                     LATB            equ	269	;# 
  1657     010E                     LATC            equ	270	;# 
  1658     0111                     CM1CON0         equ	273	;# 
  1659     0112                     CM1CON1         equ	274	;# 
  1660     0113                     CM2CON0         equ	275	;# 
  1661     0114                     CM2CON1         equ	276	;# 
  1662     0115                     CMOUT           equ	277	;# 
  1663     0116                     BORCON          equ	278	;# 
  1664     0117                     FVRCON          equ	279	;# 
  1665     0118                     DACCON0         equ	280	;# 
  1666     0119                     DACCON1         equ	281	;# 
  1667     018C                     ANSELA          equ	396	;# 
  1668     018D                     ANSELB          equ	397	;# 
  1669     018E                     ANSELC          equ	398	;# 
  1670     0197                     VREGCON         equ	407	;# 
  1671     0199                     RC1REG          equ	409	;# 
  1672     0199                     RCREG           equ	409	;# 
  1673     0199                     RCREG1          equ	409	;# 
  1674     019A                     TX1REG          equ	410	;# 
  1675     019A                     TXREG1          equ	410	;# 
  1676     019A                     TXREG           equ	410	;# 
  1677     019B                     SP1BRG          equ	411	;# 
  1678     019B                     SPBRG           equ	411	;# 
  1679     019B                     SP1BRGL         equ	411	;# 
  1680     019B                     SPBRG1          equ	411	;# 
  1681     019B                     SPBRGL          equ	411	;# 
  1682     019C                     SP1BRGH         equ	412	;# 
  1683     019C                     SPBRGH          equ	412	;# 
  1684     019C                     SPBRGH1         equ	412	;# 
  1685     019D                     RC1STA          equ	413	;# 
  1686     019D                     RCSTA1          equ	413	;# 
  1687     019D                     RCSTA           equ	413	;# 
  1688     019E                     TX1STA          equ	414	;# 
  1689     019E                     TXSTA1          equ	414	;# 
  1690     019E                     TXSTA           equ	414	;# 
  1691     019F                     BAUD1CON        equ	415	;# 
  1692     019F                     BAUDCON1        equ	415	;# 
  1693     019F                     BAUDCTL1        equ	415	;# 
  1694     019F                     BAUDCON         equ	415	;# 
  1695     019F                     BAUDCTL         equ	415	;# 
  1696     020C                     WPUA            equ	524	;# 
  1697     020D                     WPUB            equ	525	;# 
  1698     020E                     WPUC            equ	526	;# 
  1699     0211                     SSP1BUF         equ	529	;# 
  1700     0211                     SSPBUF          equ	529	;# 
  1701     0212                     SSP1ADD         equ	530	;# 
  1702     0212                     SSPADD          equ	530	;# 
  1703     0213                     SSP1MSK         equ	531	;# 
  1704     0213                     SSPMSK          equ	531	;# 
  1705     0214                     SSP1STAT        equ	532	;# 
  1706     0214                     SSPSTAT         equ	532	;# 
  1707     0215                     SSP1CON1        equ	533	;# 
  1708     0215                     SSPCON          equ	533	;# 
  1709     0215                     SSPCON1         equ	533	;# 
  1710     0215                     SSP1CON         equ	533	;# 
  1711     0216                     SSP1CON2        equ	534	;# 
  1712     0216                     SSPCON2         equ	534	;# 
  1713     0217                     SSP1CON3        equ	535	;# 
  1714     0217                     SSPCON3         equ	535	;# 
  1715     0219                     SSP2BUF         equ	537	;# 
  1716     021A                     SSP2ADD         equ	538	;# 
  1717     021B                     SSP2MSK         equ	539	;# 
  1718     021C                     SSP2STAT        equ	540	;# 
  1719     021D                     SSP2CON1        equ	541	;# 
  1720     021D                     SSP2CON         equ	541	;# 
  1721     021E                     SSP2CON2        equ	542	;# 
  1722     021F                     SSP2CON3        equ	543	;# 
  1723     028C                     ODCONA          equ	652	;# 
  1724     028D                     ODCONB          equ	653	;# 
  1725     028E                     ODCONC          equ	654	;# 
  1726     0291                     CCPR1           equ	657	;# 
  1727     0291                     CCPR1L          equ	657	;# 
  1728     0292                     CCPR1H          equ	658	;# 
  1729     0293                     CCP1CON         equ	659	;# 
  1730     0294                     CCP1CAP         equ	660	;# 
  1731     0295                     CCPR2           equ	661	;# 
  1732     0295                     CCPR2L          equ	661	;# 
  1733     0296                     CCPR2H          equ	662	;# 
  1734     0297                     CCP2CON         equ	663	;# 
  1735     0298                     CCP2CAP         equ	664	;# 
  1736     029F                     CCPTMRS         equ	671	;# 
  1737     030C                     SLRCONA         equ	780	;# 
  1738     030D                     SLRCONB         equ	781	;# 
  1739     030E                     SLRCONC         equ	782	;# 
  1740     0311                     CCPR3           equ	785	;# 
  1741     0311                     CCPR3L          equ	785	;# 
  1742     0312                     CCPR3H          equ	786	;# 
  1743     0313                     CCP3CON         equ	787	;# 
  1744     0314                     CCP3CAP         equ	788	;# 
  1745     0315                     CCPR4           equ	789	;# 
  1746     0315                     CCPR4L          equ	789	;# 
  1747     0316                     CCPR4H          equ	790	;# 
  1748     0317                     CCP4CON         equ	791	;# 
  1749     0318                     CCP4CAP         equ	792	;# 
  1750     038C                     INLVLA          equ	908	;# 
  1751     038D                     INLVLB          equ	909	;# 
  1752     038E                     INLVLC          equ	910	;# 
  1753     0391                     IOCAP           equ	913	;# 
  1754     0392                     IOCAN           equ	914	;# 
  1755     0393                     IOCAF           equ	915	;# 
  1756     0394                     IOCBP           equ	916	;# 
  1757     0395                     IOCBN           equ	917	;# 
  1758     0396                     IOCBF           equ	918	;# 
  1759     0397                     IOCCP           equ	919	;# 
  1760     0398                     IOCCN           equ	920	;# 
  1761     0399                     IOCCF           equ	921	;# 
  1762     039A                     CLKRCON         equ	922	;# 
  1763     039C                     MDCON           equ	924	;# 
  1764     039D                     MDSRC           equ	925	;# 
  1765     039E                     MDCARH          equ	926	;# 
  1766     039F                     MDCARL          equ	927	;# 
  1767     0411                     TMR3            equ	1041	;# 
  1768     0411                     TMR3L           equ	1041	;# 
  1769     0412                     TMR3H           equ	1042	;# 
  1770     0413                     T3CON           equ	1043	;# 
  1771     0414                     T3GCON          equ	1044	;# 
  1772     0415                     TMR4            equ	1045	;# 
  1773     0416                     PR4             equ	1046	;# 
  1774     0417                     T4CON           equ	1047	;# 
  1775     0418                     TMR5            equ	1048	;# 
  1776     0418                     TMR5L           equ	1048	;# 
  1777     0419                     TMR5H           equ	1049	;# 
  1778     041A                     T5CON           equ	1050	;# 
  1779     041B                     T5GCON          equ	1051	;# 
  1780     041C                     TMR6            equ	1052	;# 
  1781     041D                     PR6             equ	1053	;# 
  1782     041E                     T6CON           equ	1054	;# 
  1783     041F                     CCDCON          equ	1055	;# 
  1784     0498                     NCO1ACC         equ	1176	;# 
  1785     0498                     NCO1ACCL        equ	1176	;# 
  1786     0499                     NCO1ACCH        equ	1177	;# 
  1787     049A                     NCO1ACCU        equ	1178	;# 
  1788     049B                     NCO1INC         equ	1179	;# 
  1789     049B                     NCO1INCL        equ	1179	;# 
  1790     049C                     NCO1INCH        equ	1180	;# 
  1791     049D                     NCO1INCU        equ	1181	;# 
  1792     049E                     NCO1CON         equ	1182	;# 
  1793     049F                     NCO1CLK         equ	1183	;# 
  1794     0617                     PWM5DCL         equ	1559	;# 
  1795     0618                     PWM5DCH         equ	1560	;# 
  1796     0619                     PWM5CON         equ	1561	;# 
  1797     0619                     PWM5CON0        equ	1561	;# 
  1798     061A                     PWM6DCL         equ	1562	;# 
  1799     061B                     PWM6DCH         equ	1563	;# 
  1800     061C                     PWM6CON         equ	1564	;# 
  1801     061C                     PWM6CON0        equ	1564	;# 
  1802     061F                     PWMTMRS         equ	1567	;# 
  1803     0691                     CWG1CLKCON      equ	1681	;# 
  1804     0692                     CWG1DAT         equ	1682	;# 
  1805     0693                     CWG1DBR         equ	1683	;# 
  1806     0694                     CWG1DBF         equ	1684	;# 
  1807     0695                     CWG1CON0        equ	1685	;# 
  1808     0696                     CWG1CON1        equ	1686	;# 
  1809     0697                     CWG1AS0         equ	1687	;# 
  1810     0698                     CWG1AS1         equ	1688	;# 
  1811     0699                     CWG1STR         equ	1689	;# 
  1812     0711                     CWG2CLKCON      equ	1809	;# 
  1813     0712                     CWG2DAT         equ	1810	;# 
  1814     0713                     CWG2DBR         equ	1811	;# 
  1815     0714                     CWG2DBF         equ	1812	;# 
  1816     0715                     CWG2CON0        equ	1813	;# 
  1817     0716                     CWG2CON1        equ	1814	;# 
  1818     0717                     CWG2AS0         equ	1815	;# 
  1819     0718                     CWG2AS1         equ	1816	;# 
  1820     0719                     CWG2STR         equ	1817	;# 
  1821     0891                     NVMADR          equ	2193	;# 
  1822     0891                     EEADR           equ	2193	;# 
  1823     0891                     PMADR           equ	2193	;# 
  1824     0891                     NVMADRL         equ	2193	;# 
  1825     0891                     EEADRL          equ	2193	;# 
  1826     0891                     PMADRL          equ	2193	;# 
  1827     0892                     NVMADRH         equ	2194	;# 
  1828     0892                     EEADRH          equ	2194	;# 
  1829     0892                     PMADRH          equ	2194	;# 
  1830     0893                     NVMDAT          equ	2195	;# 
  1831     0893                     EEDAT           equ	2195	;# 
  1832     0893                     PMDAT           equ	2195	;# 
  1833     0893                     NVMDATL         equ	2195	;# 
  1834     0893                     EEDATL          equ	2195	;# 
  1835     0893                     PMDATL          equ	2195	;# 
  1836     0894                     NVMDATH         equ	2196	;# 
  1837     0894                     EEDATH          equ	2196	;# 
  1838     0894                     PMDATH          equ	2196	;# 
  1839     0895                     NVMCON1         equ	2197	;# 
  1840     0895                     EECON1          equ	2197	;# 
  1841     0895                     PMCON1          equ	2197	;# 
  1842     0896                     NVMCON2         equ	2198	;# 
  1843     0896                     EECON2          equ	2198	;# 
  1844     0896                     PMCON2          equ	2198	;# 
  1845     089B                     PCON0           equ	2203	;# 
  1846     0911                     PMD0            equ	2321	;# 
  1847     0912                     PMD1            equ	2322	;# 
  1848     0913                     PMD2            equ	2323	;# 
  1849     0914                     PMD3            equ	2324	;# 
  1850     0915                     PMD4            equ	2325	;# 
  1851     0916                     PMD5            equ	2326	;# 
  1852     0918                     CPUDOZE         equ	2328	;# 
  1853     0919                     OSCCON1         equ	2329	;# 
  1854     091A                     OSCCON2         equ	2330	;# 
  1855     091B                     OSCCON3         equ	2331	;# 
  1856     091C                     OSCSTAT1        equ	2332	;# 
  1857     091D                     OSCEN           equ	2333	;# 
  1858     091E                     OSCTUNE         equ	2334	;# 
  1859     091F                     OSCFRQ          equ	2335	;# 
  1860     0E0F                     PPSLOCK         equ	3599	;# 
  1861     0E10                     INTPPS          equ	3600	;# 
  1862     0E11                     T0CKIPPS        equ	3601	;# 
  1863     0E12                     T1CKIPPS        equ	3602	;# 
  1864     0E13                     T1GPPS          equ	3603	;# 
  1865     0E14                     CCP1PPS         equ	3604	;# 
  1866     0E15                     CCP2PPS         equ	3605	;# 
  1867     0E16                     CCP3PPS         equ	3606	;# 
  1868     0E17                     CCP4PPS         equ	3607	;# 
  1869     0E18                     CWG1PPS         equ	3608	;# 
  1870     0E19                     CWG2PPS         equ	3609	;# 
  1871     0E1A                     MDCIN1PPS       equ	3610	;# 
  1872     0E1B                     MDCIN2PPS       equ	3611	;# 
  1873     0E1C                     MDMINPPS        equ	3612	;# 
  1874     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1875     0E1E                     SSP2DATPPS      equ	3614	;# 
  1876     0E1F                     SSP2SSPPS       equ	3615	;# 
  1877     0E20                     SSP1CLKPPS      equ	3616	;# 
  1878     0E21                     SSP1DATPPS      equ	3617	;# 
  1879     0E22                     SSP1SSPPS       equ	3618	;# 
  1880     0E24                     RXPPS           equ	3620	;# 
  1881     0E25                     TXPPS           equ	3621	;# 
  1882     0E28                     CLCIN0PPS       equ	3624	;# 
  1883     0E29                     CLCIN1PPS       equ	3625	;# 
  1884     0E2A                     CLCIN2PPS       equ	3626	;# 
  1885     0E2B                     CLCIN3PPS       equ	3627	;# 
  1886     0E2C                     T3CKIPPS        equ	3628	;# 
  1887     0E2D                     T3GPPS          equ	3629	;# 
  1888     0E2E                     T5CKIPPS        equ	3630	;# 
  1889     0E2F                     T5GPPS          equ	3631	;# 
  1890     0E90                     RA0PPS          equ	3728	;# 
  1891     0E91                     RA1PPS          equ	3729	;# 
  1892     0E92                     RA2PPS          equ	3730	;# 
  1893     0E94                     RA4PPS          equ	3732	;# 
  1894     0E95                     RA5PPS          equ	3733	;# 
  1895     0E9C                     RB4PPS          equ	3740	;# 
  1896     0E9D                     RB5PPS          equ	3741	;# 
  1897     0E9E                     RB6PPS          equ	3742	;# 
  1898     0E9F                     RB7PPS          equ	3743	;# 
  1899     0EA0                     RC0PPS          equ	3744	;# 
  1900     0EA1                     RC1PPS          equ	3745	;# 
  1901     0EA2                     RC2PPS          equ	3746	;# 
  1902     0EA3                     RC3PPS          equ	3747	;# 
  1903     0EA4                     RC4PPS          equ	3748	;# 
  1904     0EA5                     RC5PPS          equ	3749	;# 
  1905     0EA6                     RC6PPS          equ	3750	;# 
  1906     0EA7                     RC7PPS          equ	3751	;# 
  1907     0F0F                     CLCDATA         equ	3855	;# 
  1908     0F10                     CLC1CON         equ	3856	;# 
  1909     0F11                     CLC1POL         equ	3857	;# 
  1910     0F12                     CLC1SEL0        equ	3858	;# 
  1911     0F13                     CLC1SEL1        equ	3859	;# 
  1912     0F14                     CLC1SEL2        equ	3860	;# 
  1913     0F15                     CLC1SEL3        equ	3861	;# 
  1914     0F16                     CLC1GLS0        equ	3862	;# 
  1915     0F17                     CLC1GLS1        equ	3863	;# 
  1916     0F18                     CLC1GLS2        equ	3864	;# 
  1917     0F19                     CLC1GLS3        equ	3865	;# 
  1918     0F1A                     CLC2CON         equ	3866	;# 
  1919     0F1B                     CLC2POL         equ	3867	;# 
  1920     0F1C                     CLC2SEL0        equ	3868	;# 
  1921     0F1D                     CLC2SEL1        equ	3869	;# 
  1922     0F1E                     CLC2SEL2        equ	3870	;# 
  1923     0F1F                     CLC2SEL3        equ	3871	;# 
  1924     0F20                     CLC2GLS0        equ	3872	;# 
  1925     0F21                     CLC2GLS1        equ	3873	;# 
  1926     0F22                     CLC2GLS2        equ	3874	;# 
  1927     0F23                     CLC2GLS3        equ	3875	;# 
  1928     0F24                     CLC3CON         equ	3876	;# 
  1929     0F25                     CLC3POL         equ	3877	;# 
  1930     0F26                     CLC3SEL0        equ	3878	;# 
  1931     0F27                     CLC3SEL1        equ	3879	;# 
  1932     0F28                     CLC3SEL2        equ	3880	;# 
  1933     0F29                     CLC3SEL3        equ	3881	;# 
  1934     0F2A                     CLC3GLS0        equ	3882	;# 
  1935     0F2B                     CLC3GLS1        equ	3883	;# 
  1936     0F2C                     CLC3GLS2        equ	3884	;# 
  1937     0F2D                     CLC3GLS3        equ	3885	;# 
  1938     0F2E                     CLC4CON         equ	3886	;# 
  1939     0F2F                     CLC4POL         equ	3887	;# 
  1940     0F30                     CLC4SEL0        equ	3888	;# 
  1941     0F31                     CLC4SEL1        equ	3889	;# 
  1942     0F32                     CLC4SEL2        equ	3890	;# 
  1943     0F33                     CLC4SEL3        equ	3891	;# 
  1944     0F34                     CLC4GLS0        equ	3892	;# 
  1945     0F35                     CLC4GLS1        equ	3893	;# 
  1946     0F36                     CLC4GLS2        equ	3894	;# 
  1947     0F37                     CLC4GLS3        equ	3895	;# 
  1948     0FE4                     STATUS_SHAD     equ	4068	;# 
  1949     0FE5                     WREG_SHAD       equ	4069	;# 
  1950     0FE6                     BSR_SHAD        equ	4070	;# 
  1951     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1952     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1953     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1954     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1955     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1956     0FED                     STKPTR          equ	4077	;# 
  1957     0FEE                     TOSL            equ	4078	;# 
  1958     0FEF                     TOSH            equ	4079	;# 
  1959     0000                     INDF0           equ	0	;# 
  1960     0001                     INDF1           equ	1	;# 
  1961     0002                     PCL             equ	2	;# 
  1962     0003                     STATUS          equ	3	;# 
  1963     0004                     FSR0L           equ	4	;# 
  1964     0005                     FSR0H           equ	5	;# 
  1965     0006                     FSR1L           equ	6	;# 
  1966     0007                     FSR1H           equ	7	;# 
  1967     0008                     BSR             equ	8	;# 
  1968     0009                     WREG            equ	9	;# 
  1969     000A                     PCLATH          equ	10	;# 
  1970     000B                     INTCON          equ	11	;# 
  1971     000C                     PORTA           equ	12	;# 
  1972     000D                     PORTB           equ	13	;# 
  1973     000E                     PORTC           equ	14	;# 
  1974     0010                     PIR0            equ	16	;# 
  1975     0011                     PIR1            equ	17	;# 
  1976     0012                     PIR2            equ	18	;# 
  1977     0013                     PIR3            equ	19	;# 
  1978     0014                     PIR4            equ	20	;# 
  1979     0015                     TMR0L           equ	21	;# 
  1980     0015                     TMR0            equ	21	;# 
  1981     0016                     TMR0H           equ	22	;# 
  1982     0016                     PR0             equ	22	;# 
  1983     0017                     T0CON0          equ	23	;# 
  1984     0018                     T0CON1          equ	24	;# 
  1985     0019                     TMR1            equ	25	;# 
  1986     0019                     TMR1L           equ	25	;# 
  1987     001A                     TMR1H           equ	26	;# 
  1988     001B                     T1CON           equ	27	;# 
  1989     001C                     T1GCON          equ	28	;# 
  1990     001D                     TMR2            equ	29	;# 
  1991     001E                     PR2             equ	30	;# 
  1992     001F                     T2CON           equ	31	;# 
  1993     008C                     TRISA           equ	140	;# 
  1994     008D                     TRISB           equ	141	;# 
  1995     008E                     TRISC           equ	142	;# 
  1996     0090                     PIE0            equ	144	;# 
  1997     0091                     PIE1            equ	145	;# 
  1998     0092                     PIE2            equ	146	;# 
  1999     0093                     PIE3            equ	147	;# 
  2000     0094                     PIE4            equ	148	;# 
  2001     0097                     WDTCON          equ	151	;# 
  2002     009B                     ADRES           equ	155	;# 
  2003     009B                     ADRESL          equ	155	;# 
  2004     009C                     ADRESH          equ	156	;# 
  2005     009D                     ADCON0          equ	157	;# 
  2006     009E                     ADCON1          equ	158	;# 
  2007     009F                     ADACT           equ	159	;# 
  2008     010C                     LATA            equ	268	;# 
  2009     010D                     LATB            equ	269	;# 
  2010     010E                     LATC            equ	270	;# 
  2011     0111                     CM1CON0         equ	273	;# 
  2012     0112                     CM1CON1         equ	274	;# 
  2013     0113                     CM2CON0         equ	275	;# 
  2014     0114                     CM2CON1         equ	276	;# 
  2015     0115                     CMOUT           equ	277	;# 
  2016     0116                     BORCON          equ	278	;# 
  2017     0117                     FVRCON          equ	279	;# 
  2018     0118                     DACCON0         equ	280	;# 
  2019     0119                     DACCON1         equ	281	;# 
  2020     018C                     ANSELA          equ	396	;# 
  2021     018D                     ANSELB          equ	397	;# 
  2022     018E                     ANSELC          equ	398	;# 
  2023     0197                     VREGCON         equ	407	;# 
  2024     0199                     RC1REG          equ	409	;# 
  2025     0199                     RCREG           equ	409	;# 
  2026     0199                     RCREG1          equ	409	;# 
  2027     019A                     TX1REG          equ	410	;# 
  2028     019A                     TXREG1          equ	410	;# 
  2029     019A                     TXREG           equ	410	;# 
  2030     019B                     SP1BRG          equ	411	;# 
  2031     019B                     SPBRG           equ	411	;# 
  2032     019B                     SP1BRGL         equ	411	;# 
  2033     019B                     SPBRG1          equ	411	;# 
  2034     019B                     SPBRGL          equ	411	;# 
  2035     019C                     SP1BRGH         equ	412	;# 
  2036     019C                     SPBRGH          equ	412	;# 
  2037     019C                     SPBRGH1         equ	412	;# 
  2038     019D                     RC1STA          equ	413	;# 
  2039     019D                     RCSTA1          equ	413	;# 
  2040     019D                     RCSTA           equ	413	;# 
  2041     019E                     TX1STA          equ	414	;# 
  2042     019E                     TXSTA1          equ	414	;# 
  2043     019E                     TXSTA           equ	414	;# 
  2044     019F                     BAUD1CON        equ	415	;# 
  2045     019F                     BAUDCON1        equ	415	;# 
  2046     019F                     BAUDCTL1        equ	415	;# 
  2047     019F                     BAUDCON         equ	415	;# 
  2048     019F                     BAUDCTL         equ	415	;# 
  2049     020C                     WPUA            equ	524	;# 
  2050     020D                     WPUB            equ	525	;# 
  2051     020E                     WPUC            equ	526	;# 
  2052     0211                     SSP1BUF         equ	529	;# 
  2053     0211                     SSPBUF          equ	529	;# 
  2054     0212                     SSP1ADD         equ	530	;# 
  2055     0212                     SSPADD          equ	530	;# 
  2056     0213                     SSP1MSK         equ	531	;# 
  2057     0213                     SSPMSK          equ	531	;# 
  2058     0214                     SSP1STAT        equ	532	;# 
  2059     0214                     SSPSTAT         equ	532	;# 
  2060     0215                     SSP1CON1        equ	533	;# 
  2061     0215                     SSPCON          equ	533	;# 
  2062     0215                     SSPCON1         equ	533	;# 
  2063     0215                     SSP1CON         equ	533	;# 
  2064     0216                     SSP1CON2        equ	534	;# 
  2065     0216                     SSPCON2         equ	534	;# 
  2066     0217                     SSP1CON3        equ	535	;# 
  2067     0217                     SSPCON3         equ	535	;# 
  2068     0219                     SSP2BUF         equ	537	;# 
  2069     021A                     SSP2ADD         equ	538	;# 
  2070     021B                     SSP2MSK         equ	539	;# 
  2071     021C                     SSP2STAT        equ	540	;# 
  2072     021D                     SSP2CON1        equ	541	;# 
  2073     021D                     SSP2CON         equ	541	;# 
  2074     021E                     SSP2CON2        equ	542	;# 
  2075     021F                     SSP2CON3        equ	543	;# 
  2076     028C                     ODCONA          equ	652	;# 
  2077     028D                     ODCONB          equ	653	;# 
  2078     028E                     ODCONC          equ	654	;# 
  2079     0291                     CCPR1           equ	657	;# 
  2080     0291                     CCPR1L          equ	657	;# 
  2081     0292                     CCPR1H          equ	658	;# 
  2082     0293                     CCP1CON         equ	659	;# 
  2083     0294                     CCP1CAP         equ	660	;# 
  2084     0295                     CCPR2           equ	661	;# 
  2085     0295                     CCPR2L          equ	661	;# 
  2086     0296                     CCPR2H          equ	662	;# 
  2087     0297                     CCP2CON         equ	663	;# 
  2088     0298                     CCP2CAP         equ	664	;# 
  2089     029F                     CCPTMRS         equ	671	;# 
  2090     030C                     SLRCONA         equ	780	;# 
  2091     030D                     SLRCONB         equ	781	;# 
  2092     030E                     SLRCONC         equ	782	;# 
  2093     0311                     CCPR3           equ	785	;# 
  2094     0311                     CCPR3L          equ	785	;# 
  2095     0312                     CCPR3H          equ	786	;# 
  2096     0313                     CCP3CON         equ	787	;# 
  2097     0314                     CCP3CAP         equ	788	;# 
  2098     0315                     CCPR4           equ	789	;# 
  2099     0315                     CCPR4L          equ	789	;# 
  2100     0316                     CCPR4H          equ	790	;# 
  2101     0317                     CCP4CON         equ	791	;# 
  2102     0318                     CCP4CAP         equ	792	;# 
  2103     038C                     INLVLA          equ	908	;# 
  2104     038D                     INLVLB          equ	909	;# 
  2105     038E                     INLVLC          equ	910	;# 
  2106     0391                     IOCAP           equ	913	;# 
  2107     0392                     IOCAN           equ	914	;# 
  2108     0393                     IOCAF           equ	915	;# 
  2109     0394                     IOCBP           equ	916	;# 
  2110     0395                     IOCBN           equ	917	;# 
  2111     0396                     IOCBF           equ	918	;# 
  2112     0397                     IOCCP           equ	919	;# 
  2113     0398                     IOCCN           equ	920	;# 
  2114     0399                     IOCCF           equ	921	;# 
  2115     039A                     CLKRCON         equ	922	;# 
  2116     039C                     MDCON           equ	924	;# 
  2117     039D                     MDSRC           equ	925	;# 
  2118     039E                     MDCARH          equ	926	;# 
  2119     039F                     MDCARL          equ	927	;# 
  2120     0411                     TMR3            equ	1041	;# 
  2121     0411                     TMR3L           equ	1041	;# 
  2122     0412                     TMR3H           equ	1042	;# 
  2123     0413                     T3CON           equ	1043	;# 
  2124     0414                     T3GCON          equ	1044	;# 
  2125     0415                     TMR4            equ	1045	;# 
  2126     0416                     PR4             equ	1046	;# 
  2127     0417                     T4CON           equ	1047	;# 
  2128     0418                     TMR5            equ	1048	;# 
  2129     0418                     TMR5L           equ	1048	;# 
  2130     0419                     TMR5H           equ	1049	;# 
  2131     041A                     T5CON           equ	1050	;# 
  2132     041B                     T5GCON          equ	1051	;# 
  2133     041C                     TMR6            equ	1052	;# 
  2134     041D                     PR6             equ	1053	;# 
  2135     041E                     T6CON           equ	1054	;# 
  2136     041F                     CCDCON          equ	1055	;# 
  2137     0498                     NCO1ACC         equ	1176	;# 
  2138     0498                     NCO1ACCL        equ	1176	;# 
  2139     0499                     NCO1ACCH        equ	1177	;# 
  2140     049A                     NCO1ACCU        equ	1178	;# 
  2141     049B                     NCO1INC         equ	1179	;# 
  2142     049B                     NCO1INCL        equ	1179	;# 
  2143     049C                     NCO1INCH        equ	1180	;# 
  2144     049D                     NCO1INCU        equ	1181	;# 
  2145     049E                     NCO1CON         equ	1182	;# 
  2146     049F                     NCO1CLK         equ	1183	;# 
  2147     0617                     PWM5DCL         equ	1559	;# 
  2148     0618                     PWM5DCH         equ	1560	;# 
  2149     0619                     PWM5CON         equ	1561	;# 
  2150     0619                     PWM5CON0        equ	1561	;# 
  2151     061A                     PWM6DCL         equ	1562	;# 
  2152     061B                     PWM6DCH         equ	1563	;# 
  2153     061C                     PWM6CON         equ	1564	;# 
  2154     061C                     PWM6CON0        equ	1564	;# 
  2155     061F                     PWMTMRS         equ	1567	;# 
  2156     0691                     CWG1CLKCON      equ	1681	;# 
  2157     0692                     CWG1DAT         equ	1682	;# 
  2158     0693                     CWG1DBR         equ	1683	;# 
  2159     0694                     CWG1DBF         equ	1684	;# 
  2160     0695                     CWG1CON0        equ	1685	;# 
  2161     0696                     CWG1CON1        equ	1686	;# 
  2162     0697                     CWG1AS0         equ	1687	;# 
  2163     0698                     CWG1AS1         equ	1688	;# 
  2164     0699                     CWG1STR         equ	1689	;# 
  2165     0711                     CWG2CLKCON      equ	1809	;# 
  2166     0712                     CWG2DAT         equ	1810	;# 
  2167     0713                     CWG2DBR         equ	1811	;# 
  2168     0714                     CWG2DBF         equ	1812	;# 
  2169     0715                     CWG2CON0        equ	1813	;# 
  2170     0716                     CWG2CON1        equ	1814	;# 
  2171     0717                     CWG2AS0         equ	1815	;# 
  2172     0718                     CWG2AS1         equ	1816	;# 
  2173     0719                     CWG2STR         equ	1817	;# 
  2174     0891                     NVMADR          equ	2193	;# 
  2175     0891                     EEADR           equ	2193	;# 
  2176     0891                     PMADR           equ	2193	;# 
  2177     0891                     NVMADRL         equ	2193	;# 
  2178     0891                     EEADRL          equ	2193	;# 
  2179     0891                     PMADRL          equ	2193	;# 
  2180     0892                     NVMADRH         equ	2194	;# 
  2181     0892                     EEADRH          equ	2194	;# 
  2182     0892                     PMADRH          equ	2194	;# 
  2183     0893                     NVMDAT          equ	2195	;# 
  2184     0893                     EEDAT           equ	2195	;# 
  2185     0893                     PMDAT           equ	2195	;# 
  2186     0893                     NVMDATL         equ	2195	;# 
  2187     0893                     EEDATL          equ	2195	;# 
  2188     0893                     PMDATL          equ	2195	;# 
  2189     0894                     NVMDATH         equ	2196	;# 
  2190     0894                     EEDATH          equ	2196	;# 
  2191     0894                     PMDATH          equ	2196	;# 
  2192     0895                     NVMCON1         equ	2197	;# 
  2193     0895                     EECON1          equ	2197	;# 
  2194     0895                     PMCON1          equ	2197	;# 
  2195     0896                     NVMCON2         equ	2198	;# 
  2196     0896                     EECON2          equ	2198	;# 
  2197     0896                     PMCON2          equ	2198	;# 
  2198     089B                     PCON0           equ	2203	;# 
  2199     0911                     PMD0            equ	2321	;# 
  2200     0912                     PMD1            equ	2322	;# 
  2201     0913                     PMD2            equ	2323	;# 
  2202     0914                     PMD3            equ	2324	;# 
  2203     0915                     PMD4            equ	2325	;# 
  2204     0916                     PMD5            equ	2326	;# 
  2205     0918                     CPUDOZE         equ	2328	;# 
  2206     0919                     OSCCON1         equ	2329	;# 
  2207     091A                     OSCCON2         equ	2330	;# 
  2208     091B                     OSCCON3         equ	2331	;# 
  2209     091C                     OSCSTAT1        equ	2332	;# 
  2210     091D                     OSCEN           equ	2333	;# 
  2211     091E                     OSCTUNE         equ	2334	;# 
  2212     091F                     OSCFRQ          equ	2335	;# 
  2213     0E0F                     PPSLOCK         equ	3599	;# 
  2214     0E10                     INTPPS          equ	3600	;# 
  2215     0E11                     T0CKIPPS        equ	3601	;# 
  2216     0E12                     T1CKIPPS        equ	3602	;# 
  2217     0E13                     T1GPPS          equ	3603	;# 
  2218     0E14                     CCP1PPS         equ	3604	;# 
  2219     0E15                     CCP2PPS         equ	3605	;# 
  2220     0E16                     CCP3PPS         equ	3606	;# 
  2221     0E17                     CCP4PPS         equ	3607	;# 
  2222     0E18                     CWG1PPS         equ	3608	;# 
  2223     0E19                     CWG2PPS         equ	3609	;# 
  2224     0E1A                     MDCIN1PPS       equ	3610	;# 
  2225     0E1B                     MDCIN2PPS       equ	3611	;# 
  2226     0E1C                     MDMINPPS        equ	3612	;# 
  2227     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2228     0E1E                     SSP2DATPPS      equ	3614	;# 
  2229     0E1F                     SSP2SSPPS       equ	3615	;# 
  2230     0E20                     SSP1CLKPPS      equ	3616	;# 
  2231     0E21                     SSP1DATPPS      equ	3617	;# 
  2232     0E22                     SSP1SSPPS       equ	3618	;# 
  2233     0E24                     RXPPS           equ	3620	;# 
  2234     0E25                     TXPPS           equ	3621	;# 
  2235     0E28                     CLCIN0PPS       equ	3624	;# 
  2236     0E29                     CLCIN1PPS       equ	3625	;# 
  2237     0E2A                     CLCIN2PPS       equ	3626	;# 
  2238     0E2B                     CLCIN3PPS       equ	3627	;# 
  2239     0E2C                     T3CKIPPS        equ	3628	;# 
  2240     0E2D                     T3GPPS          equ	3629	;# 
  2241     0E2E                     T5CKIPPS        equ	3630	;# 
  2242     0E2F                     T5GPPS          equ	3631	;# 
  2243     0E90                     RA0PPS          equ	3728	;# 
  2244     0E91                     RA1PPS          equ	3729	;# 
  2245     0E92                     RA2PPS          equ	3730	;# 
  2246     0E94                     RA4PPS          equ	3732	;# 
  2247     0E95                     RA5PPS          equ	3733	;# 
  2248     0E9C                     RB4PPS          equ	3740	;# 
  2249     0E9D                     RB5PPS          equ	3741	;# 
  2250     0E9E                     RB6PPS          equ	3742	;# 
  2251     0E9F                     RB7PPS          equ	3743	;# 
  2252     0EA0                     RC0PPS          equ	3744	;# 
  2253     0EA1                     RC1PPS          equ	3745	;# 
  2254     0EA2                     RC2PPS          equ	3746	;# 
  2255     0EA3                     RC3PPS          equ	3747	;# 
  2256     0EA4                     RC4PPS          equ	3748	;# 
  2257     0EA5                     RC5PPS          equ	3749	;# 
  2258     0EA6                     RC6PPS          equ	3750	;# 
  2259     0EA7                     RC7PPS          equ	3751	;# 
  2260     0F0F                     CLCDATA         equ	3855	;# 
  2261     0F10                     CLC1CON         equ	3856	;# 
  2262     0F11                     CLC1POL         equ	3857	;# 
  2263     0F12                     CLC1SEL0        equ	3858	;# 
  2264     0F13                     CLC1SEL1        equ	3859	;# 
  2265     0F14                     CLC1SEL2        equ	3860	;# 
  2266     0F15                     CLC1SEL3        equ	3861	;# 
  2267     0F16                     CLC1GLS0        equ	3862	;# 
  2268     0F17                     CLC1GLS1        equ	3863	;# 
  2269     0F18                     CLC1GLS2        equ	3864	;# 
  2270     0F19                     CLC1GLS3        equ	3865	;# 
  2271     0F1A                     CLC2CON         equ	3866	;# 
  2272     0F1B                     CLC2POL         equ	3867	;# 
  2273     0F1C                     CLC2SEL0        equ	3868	;# 
  2274     0F1D                     CLC2SEL1        equ	3869	;# 
  2275     0F1E                     CLC2SEL2        equ	3870	;# 
  2276     0F1F                     CLC2SEL3        equ	3871	;# 
  2277     0F20                     CLC2GLS0        equ	3872	;# 
  2278     0F21                     CLC2GLS1        equ	3873	;# 
  2279     0F22                     CLC2GLS2        equ	3874	;# 
  2280     0F23                     CLC2GLS3        equ	3875	;# 
  2281     0F24                     CLC3CON         equ	3876	;# 
  2282     0F25                     CLC3POL         equ	3877	;# 
  2283     0F26                     CLC3SEL0        equ	3878	;# 
  2284     0F27                     CLC3SEL1        equ	3879	;# 
  2285     0F28                     CLC3SEL2        equ	3880	;# 
  2286     0F29                     CLC3SEL3        equ	3881	;# 
  2287     0F2A                     CLC3GLS0        equ	3882	;# 
  2288     0F2B                     CLC3GLS1        equ	3883	;# 
  2289     0F2C                     CLC3GLS2        equ	3884	;# 
  2290     0F2D                     CLC3GLS3        equ	3885	;# 
  2291     0F2E                     CLC4CON         equ	3886	;# 
  2292     0F2F                     CLC4POL         equ	3887	;# 
  2293     0F30                     CLC4SEL0        equ	3888	;# 
  2294     0F31                     CLC4SEL1        equ	3889	;# 
  2295     0F32                     CLC4SEL2        equ	3890	;# 
  2296     0F33                     CLC4SEL3        equ	3891	;# 
  2297     0F34                     CLC4GLS0        equ	3892	;# 
  2298     0F35                     CLC4GLS1        equ	3893	;# 
  2299     0F36                     CLC4GLS2        equ	3894	;# 
  2300     0F37                     CLC4GLS3        equ	3895	;# 
  2301     0FE4                     STATUS_SHAD     equ	4068	;# 
  2302     0FE5                     WREG_SHAD       equ	4069	;# 
  2303     0FE6                     BSR_SHAD        equ	4070	;# 
  2304     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2305     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2306     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2307     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2308     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2309     0FED                     STKPTR          equ	4077	;# 
  2310     0FEE                     TOSL            equ	4078	;# 
  2311     0FEF                     TOSH            equ	4079	;# 
  2312     0000                     INDF0           equ	0	;# 
  2313     0001                     INDF1           equ	1	;# 
  2314     0002                     PCL             equ	2	;# 
  2315     0003                     STATUS          equ	3	;# 
  2316     0004                     FSR0L           equ	4	;# 
  2317     0005                     FSR0H           equ	5	;# 
  2318     0006                     FSR1L           equ	6	;# 
  2319     0007                     FSR1H           equ	7	;# 
  2320     0008                     BSR             equ	8	;# 
  2321     0009                     WREG            equ	9	;# 
  2322     000A                     PCLATH          equ	10	;# 
  2323     000B                     INTCON          equ	11	;# 
  2324     000C                     PORTA           equ	12	;# 
  2325     000D                     PORTB           equ	13	;# 
  2326     000E                     PORTC           equ	14	;# 
  2327     0010                     PIR0            equ	16	;# 
  2328     0011                     PIR1            equ	17	;# 
  2329     0012                     PIR2            equ	18	;# 
  2330     0013                     PIR3            equ	19	;# 
  2331     0014                     PIR4            equ	20	;# 
  2332     0015                     TMR0L           equ	21	;# 
  2333     0015                     TMR0            equ	21	;# 
  2334     0016                     TMR0H           equ	22	;# 
  2335     0016                     PR0             equ	22	;# 
  2336     0017                     T0CON0          equ	23	;# 
  2337     0018                     T0CON1          equ	24	;# 
  2338     0019                     TMR1            equ	25	;# 
  2339     0019                     TMR1L           equ	25	;# 
  2340     001A                     TMR1H           equ	26	;# 
  2341     001B                     T1CON           equ	27	;# 
  2342     001C                     T1GCON          equ	28	;# 
  2343     001D                     TMR2            equ	29	;# 
  2344     001E                     PR2             equ	30	;# 
  2345     001F                     T2CON           equ	31	;# 
  2346     008C                     TRISA           equ	140	;# 
  2347     008D                     TRISB           equ	141	;# 
  2348     008E                     TRISC           equ	142	;# 
  2349     0090                     PIE0            equ	144	;# 
  2350     0091                     PIE1            equ	145	;# 
  2351     0092                     PIE2            equ	146	;# 
  2352     0093                     PIE3            equ	147	;# 
  2353     0094                     PIE4            equ	148	;# 
  2354     0097                     WDTCON          equ	151	;# 
  2355     009B                     ADRES           equ	155	;# 
  2356     009B                     ADRESL          equ	155	;# 
  2357     009C                     ADRESH          equ	156	;# 
  2358     009D                     ADCON0          equ	157	;# 
  2359     009E                     ADCON1          equ	158	;# 
  2360     009F                     ADACT           equ	159	;# 
  2361     010C                     LATA            equ	268	;# 
  2362     010D                     LATB            equ	269	;# 
  2363     010E                     LATC            equ	270	;# 
  2364     0111                     CM1CON0         equ	273	;# 
  2365     0112                     CM1CON1         equ	274	;# 
  2366     0113                     CM2CON0         equ	275	;# 
  2367     0114                     CM2CON1         equ	276	;# 
  2368     0115                     CMOUT           equ	277	;# 
  2369     0116                     BORCON          equ	278	;# 
  2370     0117                     FVRCON          equ	279	;# 
  2371     0118                     DACCON0         equ	280	;# 
  2372     0119                     DACCON1         equ	281	;# 
  2373     018C                     ANSELA          equ	396	;# 
  2374     018D                     ANSELB          equ	397	;# 
  2375     018E                     ANSELC          equ	398	;# 
  2376     0197                     VREGCON         equ	407	;# 
  2377     0199                     RC1REG          equ	409	;# 
  2378     0199                     RCREG           equ	409	;# 
  2379     0199                     RCREG1          equ	409	;# 
  2380     019A                     TX1REG          equ	410	;# 
  2381     019A                     TXREG1          equ	410	;# 
  2382     019A                     TXREG           equ	410	;# 
  2383     019B                     SP1BRG          equ	411	;# 
  2384     019B                     SPBRG           equ	411	;# 
  2385     019B                     SP1BRGL         equ	411	;# 
  2386     019B                     SPBRG1          equ	411	;# 
  2387     019B                     SPBRGL          equ	411	;# 
  2388     019C                     SP1BRGH         equ	412	;# 
  2389     019C                     SPBRGH          equ	412	;# 
  2390     019C                     SPBRGH1         equ	412	;# 
  2391     019D                     RC1STA          equ	413	;# 
  2392     019D                     RCSTA1          equ	413	;# 
  2393     019D                     RCSTA           equ	413	;# 
  2394     019E                     TX1STA          equ	414	;# 
  2395     019E                     TXSTA1          equ	414	;# 
  2396     019E                     TXSTA           equ	414	;# 
  2397     019F                     BAUD1CON        equ	415	;# 
  2398     019F                     BAUDCON1        equ	415	;# 
  2399     019F                     BAUDCTL1        equ	415	;# 
  2400     019F                     BAUDCON         equ	415	;# 
  2401     019F                     BAUDCTL         equ	415	;# 
  2402     020C                     WPUA            equ	524	;# 
  2403     020D                     WPUB            equ	525	;# 
  2404     020E                     WPUC            equ	526	;# 
  2405     0211                     SSP1BUF         equ	529	;# 
  2406     0211                     SSPBUF          equ	529	;# 
  2407     0212                     SSP1ADD         equ	530	;# 
  2408     0212                     SSPADD          equ	530	;# 
  2409     0213                     SSP1MSK         equ	531	;# 
  2410     0213                     SSPMSK          equ	531	;# 
  2411     0214                     SSP1STAT        equ	532	;# 
  2412     0214                     SSPSTAT         equ	532	;# 
  2413     0215                     SSP1CON1        equ	533	;# 
  2414     0215                     SSPCON          equ	533	;# 
  2415     0215                     SSPCON1         equ	533	;# 
  2416     0215                     SSP1CON         equ	533	;# 
  2417     0216                     SSP1CON2        equ	534	;# 
  2418     0216                     SSPCON2         equ	534	;# 
  2419     0217                     SSP1CON3        equ	535	;# 
  2420     0217                     SSPCON3         equ	535	;# 
  2421     0219                     SSP2BUF         equ	537	;# 
  2422     021A                     SSP2ADD         equ	538	;# 
  2423     021B                     SSP2MSK         equ	539	;# 
  2424     021C                     SSP2STAT        equ	540	;# 
  2425     021D                     SSP2CON1        equ	541	;# 
  2426     021D                     SSP2CON         equ	541	;# 
  2427     021E                     SSP2CON2        equ	542	;# 
  2428     021F                     SSP2CON3        equ	543	;# 
  2429     028C                     ODCONA          equ	652	;# 
  2430     028D                     ODCONB          equ	653	;# 
  2431     028E                     ODCONC          equ	654	;# 
  2432     0291                     CCPR1           equ	657	;# 
  2433     0291                     CCPR1L          equ	657	;# 
  2434     0292                     CCPR1H          equ	658	;# 
  2435     0293                     CCP1CON         equ	659	;# 
  2436     0294                     CCP1CAP         equ	660	;# 
  2437     0295                     CCPR2           equ	661	;# 
  2438     0295                     CCPR2L          equ	661	;# 
  2439     0296                     CCPR2H          equ	662	;# 
  2440     0297                     CCP2CON         equ	663	;# 
  2441     0298                     CCP2CAP         equ	664	;# 
  2442     029F                     CCPTMRS         equ	671	;# 
  2443     030C                     SLRCONA         equ	780	;# 
  2444     030D                     SLRCONB         equ	781	;# 
  2445     030E                     SLRCONC         equ	782	;# 
  2446     0311                     CCPR3           equ	785	;# 
  2447     0311                     CCPR3L          equ	785	;# 
  2448     0312                     CCPR3H          equ	786	;# 
  2449     0313                     CCP3CON         equ	787	;# 
  2450     0314                     CCP3CAP         equ	788	;# 
  2451     0315                     CCPR4           equ	789	;# 
  2452     0315                     CCPR4L          equ	789	;# 
  2453     0316                     CCPR4H          equ	790	;# 
  2454     0317                     CCP4CON         equ	791	;# 
  2455     0318                     CCP4CAP         equ	792	;# 
  2456     038C                     INLVLA          equ	908	;# 
  2457     038D                     INLVLB          equ	909	;# 
  2458     038E                     INLVLC          equ	910	;# 
  2459     0391                     IOCAP           equ	913	;# 
  2460     0392                     IOCAN           equ	914	;# 
  2461     0393                     IOCAF           equ	915	;# 
  2462     0394                     IOCBP           equ	916	;# 
  2463     0395                     IOCBN           equ	917	;# 
  2464     0396                     IOCBF           equ	918	;# 
  2465     0397                     IOCCP           equ	919	;# 
  2466     0398                     IOCCN           equ	920	;# 
  2467     0399                     IOCCF           equ	921	;# 
  2468     039A                     CLKRCON         equ	922	;# 
  2469     039C                     MDCON           equ	924	;# 
  2470     039D                     MDSRC           equ	925	;# 
  2471     039E                     MDCARH          equ	926	;# 
  2472     039F                     MDCARL          equ	927	;# 
  2473     0411                     TMR3            equ	1041	;# 
  2474     0411                     TMR3L           equ	1041	;# 
  2475     0412                     TMR3H           equ	1042	;# 
  2476     0413                     T3CON           equ	1043	;# 
  2477     0414                     T3GCON          equ	1044	;# 
  2478     0415                     TMR4            equ	1045	;# 
  2479     0416                     PR4             equ	1046	;# 
  2480     0417                     T4CON           equ	1047	;# 
  2481     0418                     TMR5            equ	1048	;# 
  2482     0418                     TMR5L           equ	1048	;# 
  2483     0419                     TMR5H           equ	1049	;# 
  2484     041A                     T5CON           equ	1050	;# 
  2485     041B                     T5GCON          equ	1051	;# 
  2486     041C                     TMR6            equ	1052	;# 
  2487     041D                     PR6             equ	1053	;# 
  2488     041E                     T6CON           equ	1054	;# 
  2489     041F                     CCDCON          equ	1055	;# 
  2490     0498                     NCO1ACC         equ	1176	;# 
  2491     0498                     NCO1ACCL        equ	1176	;# 
  2492     0499                     NCO1ACCH        equ	1177	;# 
  2493     049A                     NCO1ACCU        equ	1178	;# 
  2494     049B                     NCO1INC         equ	1179	;# 
  2495     049B                     NCO1INCL        equ	1179	;# 
  2496     049C                     NCO1INCH        equ	1180	;# 
  2497     049D                     NCO1INCU        equ	1181	;# 
  2498     049E                     NCO1CON         equ	1182	;# 
  2499     049F                     NCO1CLK         equ	1183	;# 
  2500     0617                     PWM5DCL         equ	1559	;# 
  2501     0618                     PWM5DCH         equ	1560	;# 
  2502     0619                     PWM5CON         equ	1561	;# 
  2503     0619                     PWM5CON0        equ	1561	;# 
  2504     061A                     PWM6DCL         equ	1562	;# 
  2505     061B                     PWM6DCH         equ	1563	;# 
  2506     061C                     PWM6CON         equ	1564	;# 
  2507     061C                     PWM6CON0        equ	1564	;# 
  2508     061F                     PWMTMRS         equ	1567	;# 
  2509     0691                     CWG1CLKCON      equ	1681	;# 
  2510     0692                     CWG1DAT         equ	1682	;# 
  2511     0693                     CWG1DBR         equ	1683	;# 
  2512     0694                     CWG1DBF         equ	1684	;# 
  2513     0695                     CWG1CON0        equ	1685	;# 
  2514     0696                     CWG1CON1        equ	1686	;# 
  2515     0697                     CWG1AS0         equ	1687	;# 
  2516     0698                     CWG1AS1         equ	1688	;# 
  2517     0699                     CWG1STR         equ	1689	;# 
  2518     0711                     CWG2CLKCON      equ	1809	;# 
  2519     0712                     CWG2DAT         equ	1810	;# 
  2520     0713                     CWG2DBR         equ	1811	;# 
  2521     0714                     CWG2DBF         equ	1812	;# 
  2522     0715                     CWG2CON0        equ	1813	;# 
  2523     0716                     CWG2CON1        equ	1814	;# 
  2524     0717                     CWG2AS0         equ	1815	;# 
  2525     0718                     CWG2AS1         equ	1816	;# 
  2526     0719                     CWG2STR         equ	1817	;# 
  2527     0891                     NVMADR          equ	2193	;# 
  2528     0891                     EEADR           equ	2193	;# 
  2529     0891                     PMADR           equ	2193	;# 
  2530     0891                     NVMADRL         equ	2193	;# 
  2531     0891                     EEADRL          equ	2193	;# 
  2532     0891                     PMADRL          equ	2193	;# 
  2533     0892                     NVMADRH         equ	2194	;# 
  2534     0892                     EEADRH          equ	2194	;# 
  2535     0892                     PMADRH          equ	2194	;# 
  2536     0893                     NVMDAT          equ	2195	;# 
  2537     0893                     EEDAT           equ	2195	;# 
  2538     0893                     PMDAT           equ	2195	;# 
  2539     0893                     NVMDATL         equ	2195	;# 
  2540     0893                     EEDATL          equ	2195	;# 
  2541     0893                     PMDATL          equ	2195	;# 
  2542     0894                     NVMDATH         equ	2196	;# 
  2543     0894                     EEDATH          equ	2196	;# 
  2544     0894                     PMDATH          equ	2196	;# 
  2545     0895                     NVMCON1         equ	2197	;# 
  2546     0895                     EECON1          equ	2197	;# 
  2547     0895                     PMCON1          equ	2197	;# 
  2548     0896                     NVMCON2         equ	2198	;# 
  2549     0896                     EECON2          equ	2198	;# 
  2550     0896                     PMCON2          equ	2198	;# 
  2551     089B                     PCON0           equ	2203	;# 
  2552     0911                     PMD0            equ	2321	;# 
  2553     0912                     PMD1            equ	2322	;# 
  2554     0913                     PMD2            equ	2323	;# 
  2555     0914                     PMD3            equ	2324	;# 
  2556     0915                     PMD4            equ	2325	;# 
  2557     0916                     PMD5            equ	2326	;# 
  2558     0918                     CPUDOZE         equ	2328	;# 
  2559     0919                     OSCCON1         equ	2329	;# 
  2560     091A                     OSCCON2         equ	2330	;# 
  2561     091B                     OSCCON3         equ	2331	;# 
  2562     091C                     OSCSTAT1        equ	2332	;# 
  2563     091D                     OSCEN           equ	2333	;# 
  2564     091E                     OSCTUNE         equ	2334	;# 
  2565     091F                     OSCFRQ          equ	2335	;# 
  2566     0E0F                     PPSLOCK         equ	3599	;# 
  2567     0E10                     INTPPS          equ	3600	;# 
  2568     0E11                     T0CKIPPS        equ	3601	;# 
  2569     0E12                     T1CKIPPS        equ	3602	;# 
  2570     0E13                     T1GPPS          equ	3603	;# 
  2571     0E14                     CCP1PPS         equ	3604	;# 
  2572     0E15                     CCP2PPS         equ	3605	;# 
  2573     0E16                     CCP3PPS         equ	3606	;# 
  2574     0E17                     CCP4PPS         equ	3607	;# 
  2575     0E18                     CWG1PPS         equ	3608	;# 
  2576     0E19                     CWG2PPS         equ	3609	;# 
  2577     0E1A                     MDCIN1PPS       equ	3610	;# 
  2578     0E1B                     MDCIN2PPS       equ	3611	;# 
  2579     0E1C                     MDMINPPS        equ	3612	;# 
  2580     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2581     0E1E                     SSP2DATPPS      equ	3614	;# 
  2582     0E1F                     SSP2SSPPS       equ	3615	;# 
  2583     0E20                     SSP1CLKPPS      equ	3616	;# 
  2584     0E21                     SSP1DATPPS      equ	3617	;# 
  2585     0E22                     SSP1SSPPS       equ	3618	;# 
  2586     0E24                     RXPPS           equ	3620	;# 
  2587     0E25                     TXPPS           equ	3621	;# 
  2588     0E28                     CLCIN0PPS       equ	3624	;# 
  2589     0E29                     CLCIN1PPS       equ	3625	;# 
  2590     0E2A                     CLCIN2PPS       equ	3626	;# 
  2591     0E2B                     CLCIN3PPS       equ	3627	;# 
  2592     0E2C                     T3CKIPPS        equ	3628	;# 
  2593     0E2D                     T3GPPS          equ	3629	;# 
  2594     0E2E                     T5CKIPPS        equ	3630	;# 
  2595     0E2F                     T5GPPS          equ	3631	;# 
  2596     0E90                     RA0PPS          equ	3728	;# 
  2597     0E91                     RA1PPS          equ	3729	;# 
  2598     0E92                     RA2PPS          equ	3730	;# 
  2599     0E94                     RA4PPS          equ	3732	;# 
  2600     0E95                     RA5PPS          equ	3733	;# 
  2601     0E9C                     RB4PPS          equ	3740	;# 
  2602     0E9D                     RB5PPS          equ	3741	;# 
  2603     0E9E                     RB6PPS          equ	3742	;# 
  2604     0E9F                     RB7PPS          equ	3743	;# 
  2605     0EA0                     RC0PPS          equ	3744	;# 
  2606     0EA1                     RC1PPS          equ	3745	;# 
  2607     0EA2                     RC2PPS          equ	3746	;# 
  2608     0EA3                     RC3PPS          equ	3747	;# 
  2609     0EA4                     RC4PPS          equ	3748	;# 
  2610     0EA5                     RC5PPS          equ	3749	;# 
  2611     0EA6                     RC6PPS          equ	3750	;# 
  2612     0EA7                     RC7PPS          equ	3751	;# 
  2613     0F0F                     CLCDATA         equ	3855	;# 
  2614     0F10                     CLC1CON         equ	3856	;# 
  2615     0F11                     CLC1POL         equ	3857	;# 
  2616     0F12                     CLC1SEL0        equ	3858	;# 
  2617     0F13                     CLC1SEL1        equ	3859	;# 
  2618     0F14                     CLC1SEL2        equ	3860	;# 
  2619     0F15                     CLC1SEL3        equ	3861	;# 
  2620     0F16                     CLC1GLS0        equ	3862	;# 
  2621     0F17                     CLC1GLS1        equ	3863	;# 
  2622     0F18                     CLC1GLS2        equ	3864	;# 
  2623     0F19                     CLC1GLS3        equ	3865	;# 
  2624     0F1A                     CLC2CON         equ	3866	;# 
  2625     0F1B                     CLC2POL         equ	3867	;# 
  2626     0F1C                     CLC2SEL0        equ	3868	;# 
  2627     0F1D                     CLC2SEL1        equ	3869	;# 
  2628     0F1E                     CLC2SEL2        equ	3870	;# 
  2629     0F1F                     CLC2SEL3        equ	3871	;# 
  2630     0F20                     CLC2GLS0        equ	3872	;# 
  2631     0F21                     CLC2GLS1        equ	3873	;# 
  2632     0F22                     CLC2GLS2        equ	3874	;# 
  2633     0F23                     CLC2GLS3        equ	3875	;# 
  2634     0F24                     CLC3CON         equ	3876	;# 
  2635     0F25                     CLC3POL         equ	3877	;# 
  2636     0F26                     CLC3SEL0        equ	3878	;# 
  2637     0F27                     CLC3SEL1        equ	3879	;# 
  2638     0F28                     CLC3SEL2        equ	3880	;# 
  2639     0F29                     CLC3SEL3        equ	3881	;# 
  2640     0F2A                     CLC3GLS0        equ	3882	;# 
  2641     0F2B                     CLC3GLS1        equ	3883	;# 
  2642     0F2C                     CLC3GLS2        equ	3884	;# 
  2643     0F2D                     CLC3GLS3        equ	3885	;# 
  2644     0F2E                     CLC4CON         equ	3886	;# 
  2645     0F2F                     CLC4POL         equ	3887	;# 
  2646     0F30                     CLC4SEL0        equ	3888	;# 
  2647     0F31                     CLC4SEL1        equ	3889	;# 
  2648     0F32                     CLC4SEL2        equ	3890	;# 
  2649     0F33                     CLC4SEL3        equ	3891	;# 
  2650     0F34                     CLC4GLS0        equ	3892	;# 
  2651     0F35                     CLC4GLS1        equ	3893	;# 
  2652     0F36                     CLC4GLS2        equ	3894	;# 
  2653     0F37                     CLC4GLS3        equ	3895	;# 
  2654     0FE4                     STATUS_SHAD     equ	4068	;# 
  2655     0FE5                     WREG_SHAD       equ	4069	;# 
  2656     0FE6                     BSR_SHAD        equ	4070	;# 
  2657     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2658     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2659     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2660     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2661     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2662     0FED                     STKPTR          equ	4077	;# 
  2663     0FEE                     TOSL            equ	4078	;# 
  2664     0FEF                     TOSH            equ	4079	;# 
  2665     0000                     INDF0           equ	0	;# 
  2666     0001                     INDF1           equ	1	;# 
  2667     0002                     PCL             equ	2	;# 
  2668     0003                     STATUS          equ	3	;# 
  2669     0004                     FSR0L           equ	4	;# 
  2670     0005                     FSR0H           equ	5	;# 
  2671     0006                     FSR1L           equ	6	;# 
  2672     0007                     FSR1H           equ	7	;# 
  2673     0008                     BSR             equ	8	;# 
  2674     0009                     WREG            equ	9	;# 
  2675     000A                     PCLATH          equ	10	;# 
  2676     000B                     INTCON          equ	11	;# 
  2677     000C                     PORTA           equ	12	;# 
  2678     000D                     PORTB           equ	13	;# 
  2679     000E                     PORTC           equ	14	;# 
  2680     0010                     PIR0            equ	16	;# 
  2681     0011                     PIR1            equ	17	;# 
  2682     0012                     PIR2            equ	18	;# 
  2683     0013                     PIR3            equ	19	;# 
  2684     0014                     PIR4            equ	20	;# 
  2685     0015                     TMR0L           equ	21	;# 
  2686     0015                     TMR0            equ	21	;# 
  2687     0016                     TMR0H           equ	22	;# 
  2688     0016                     PR0             equ	22	;# 
  2689     0017                     T0CON0          equ	23	;# 
  2690     0018                     T0CON1          equ	24	;# 
  2691     0019                     TMR1            equ	25	;# 
  2692     0019                     TMR1L           equ	25	;# 
  2693     001A                     TMR1H           equ	26	;# 
  2694     001B                     T1CON           equ	27	;# 
  2695     001C                     T1GCON          equ	28	;# 
  2696     001D                     TMR2            equ	29	;# 
  2697     001E                     PR2             equ	30	;# 
  2698     001F                     T2CON           equ	31	;# 
  2699     008C                     TRISA           equ	140	;# 
  2700     008D                     TRISB           equ	141	;# 
  2701     008E                     TRISC           equ	142	;# 
  2702     0090                     PIE0            equ	144	;# 
  2703     0091                     PIE1            equ	145	;# 
  2704     0092                     PIE2            equ	146	;# 
  2705     0093                     PIE3            equ	147	;# 
  2706     0094                     PIE4            equ	148	;# 
  2707     0097                     WDTCON          equ	151	;# 
  2708     009B                     ADRES           equ	155	;# 
  2709     009B                     ADRESL          equ	155	;# 
  2710     009C                     ADRESH          equ	156	;# 
  2711     009D                     ADCON0          equ	157	;# 
  2712     009E                     ADCON1          equ	158	;# 
  2713     009F                     ADACT           equ	159	;# 
  2714     010C                     LATA            equ	268	;# 
  2715     010D                     LATB            equ	269	;# 
  2716     010E                     LATC            equ	270	;# 
  2717     0111                     CM1CON0         equ	273	;# 
  2718     0112                     CM1CON1         equ	274	;# 
  2719     0113                     CM2CON0         equ	275	;# 
  2720     0114                     CM2CON1         equ	276	;# 
  2721     0115                     CMOUT           equ	277	;# 
  2722     0116                     BORCON          equ	278	;# 
  2723     0117                     FVRCON          equ	279	;# 
  2724     0118                     DACCON0         equ	280	;# 
  2725     0119                     DACCON1         equ	281	;# 
  2726     018C                     ANSELA          equ	396	;# 
  2727     018D                     ANSELB          equ	397	;# 
  2728     018E                     ANSELC          equ	398	;# 
  2729     0197                     VREGCON         equ	407	;# 
  2730     0199                     RC1REG          equ	409	;# 
  2731     0199                     RCREG           equ	409	;# 
  2732     0199                     RCREG1          equ	409	;# 
  2733     019A                     TX1REG          equ	410	;# 
  2734     019A                     TXREG1          equ	410	;# 
  2735     019A                     TXREG           equ	410	;# 
  2736     019B                     SP1BRG          equ	411	;# 
  2737     019B                     SPBRG           equ	411	;# 
  2738     019B                     SP1BRGL         equ	411	;# 
  2739     019B                     SPBRG1          equ	411	;# 
  2740     019B                     SPBRGL          equ	411	;# 
  2741     019C                     SP1BRGH         equ	412	;# 
  2742     019C                     SPBRGH          equ	412	;# 
  2743     019C                     SPBRGH1         equ	412	;# 
  2744     019D                     RC1STA          equ	413	;# 
  2745     019D                     RCSTA1          equ	413	;# 
  2746     019D                     RCSTA           equ	413	;# 
  2747     019E                     TX1STA          equ	414	;# 
  2748     019E                     TXSTA1          equ	414	;# 
  2749     019E                     TXSTA           equ	414	;# 
  2750     019F                     BAUD1CON        equ	415	;# 
  2751     019F                     BAUDCON1        equ	415	;# 
  2752     019F                     BAUDCTL1        equ	415	;# 
  2753     019F                     BAUDCON         equ	415	;# 
  2754     019F                     BAUDCTL         equ	415	;# 
  2755     020C                     WPUA            equ	524	;# 
  2756     020D                     WPUB            equ	525	;# 
  2757     020E                     WPUC            equ	526	;# 
  2758     0211                     SSP1BUF         equ	529	;# 
  2759     0211                     SSPBUF          equ	529	;# 
  2760     0212                     SSP1ADD         equ	530	;# 
  2761     0212                     SSPADD          equ	530	;# 
  2762     0213                     SSP1MSK         equ	531	;# 
  2763     0213                     SSPMSK          equ	531	;# 
  2764     0214                     SSP1STAT        equ	532	;# 
  2765     0214                     SSPSTAT         equ	532	;# 
  2766     0215                     SSP1CON1        equ	533	;# 
  2767     0215                     SSPCON          equ	533	;# 
  2768     0215                     SSPCON1         equ	533	;# 
  2769     0215                     SSP1CON         equ	533	;# 
  2770     0216                     SSP1CON2        equ	534	;# 
  2771     0216                     SSPCON2         equ	534	;# 
  2772     0217                     SSP1CON3        equ	535	;# 
  2773     0217                     SSPCON3         equ	535	;# 
  2774     0219                     SSP2BUF         equ	537	;# 
  2775     021A                     SSP2ADD         equ	538	;# 
  2776     021B                     SSP2MSK         equ	539	;# 
  2777     021C                     SSP2STAT        equ	540	;# 
  2778     021D                     SSP2CON1        equ	541	;# 
  2779     021D                     SSP2CON         equ	541	;# 
  2780     021E                     SSP2CON2        equ	542	;# 
  2781     021F                     SSP2CON3        equ	543	;# 
  2782     028C                     ODCONA          equ	652	;# 
  2783     028D                     ODCONB          equ	653	;# 
  2784     028E                     ODCONC          equ	654	;# 
  2785     0291                     CCPR1           equ	657	;# 
  2786     0291                     CCPR1L          equ	657	;# 
  2787     0292                     CCPR1H          equ	658	;# 
  2788     0293                     CCP1CON         equ	659	;# 
  2789     0294                     CCP1CAP         equ	660	;# 
  2790     0295                     CCPR2           equ	661	;# 
  2791     0295                     CCPR2L          equ	661	;# 
  2792     0296                     CCPR2H          equ	662	;# 
  2793     0297                     CCP2CON         equ	663	;# 
  2794     0298                     CCP2CAP         equ	664	;# 
  2795     029F                     CCPTMRS         equ	671	;# 
  2796     030C                     SLRCONA         equ	780	;# 
  2797     030D                     SLRCONB         equ	781	;# 
  2798     030E                     SLRCONC         equ	782	;# 
  2799     0311                     CCPR3           equ	785	;# 
  2800     0311                     CCPR3L          equ	785	;# 
  2801     0312                     CCPR3H          equ	786	;# 
  2802     0313                     CCP3CON         equ	787	;# 
  2803     0314                     CCP3CAP         equ	788	;# 
  2804     0315                     CCPR4           equ	789	;# 
  2805     0315                     CCPR4L          equ	789	;# 
  2806     0316                     CCPR4H          equ	790	;# 
  2807     0317                     CCP4CON         equ	791	;# 
  2808     0318                     CCP4CAP         equ	792	;# 
  2809     038C                     INLVLA          equ	908	;# 
  2810     038D                     INLVLB          equ	909	;# 
  2811     038E                     INLVLC          equ	910	;# 
  2812     0391                     IOCAP           equ	913	;# 
  2813     0392                     IOCAN           equ	914	;# 
  2814     0393                     IOCAF           equ	915	;# 
  2815     0394                     IOCBP           equ	916	;# 
  2816     0395                     IOCBN           equ	917	;# 
  2817     0396                     IOCBF           equ	918	;# 
  2818     0397                     IOCCP           equ	919	;# 
  2819     0398                     IOCCN           equ	920	;# 
  2820     0399                     IOCCF           equ	921	;# 
  2821     039A                     CLKRCON         equ	922	;# 
  2822     039C                     MDCON           equ	924	;# 
  2823     039D                     MDSRC           equ	925	;# 
  2824     039E                     MDCARH          equ	926	;# 
  2825     039F                     MDCARL          equ	927	;# 
  2826     0411                     TMR3            equ	1041	;# 
  2827     0411                     TMR3L           equ	1041	;# 
  2828     0412                     TMR3H           equ	1042	;# 
  2829     0413                     T3CON           equ	1043	;# 
  2830     0414                     T3GCON          equ	1044	;# 
  2831     0415                     TMR4            equ	1045	;# 
  2832     0416                     PR4             equ	1046	;# 
  2833     0417                     T4CON           equ	1047	;# 
  2834     0418                     TMR5            equ	1048	;# 
  2835     0418                     TMR5L           equ	1048	;# 
  2836     0419                     TMR5H           equ	1049	;# 
  2837     041A                     T5CON           equ	1050	;# 
  2838     041B                     T5GCON          equ	1051	;# 
  2839     041C                     TMR6            equ	1052	;# 
  2840     041D                     PR6             equ	1053	;# 
  2841     041E                     T6CON           equ	1054	;# 
  2842     041F                     CCDCON          equ	1055	;# 
  2843     0498                     NCO1ACC         equ	1176	;# 
  2844     0498                     NCO1ACCL        equ	1176	;# 
  2845     0499                     NCO1ACCH        equ	1177	;# 
  2846     049A                     NCO1ACCU        equ	1178	;# 
  2847     049B                     NCO1INC         equ	1179	;# 
  2848     049B                     NCO1INCL        equ	1179	;# 
  2849     049C                     NCO1INCH        equ	1180	;# 
  2850     049D                     NCO1INCU        equ	1181	;# 
  2851     049E                     NCO1CON         equ	1182	;# 
  2852     049F                     NCO1CLK         equ	1183	;# 
  2853     0617                     PWM5DCL         equ	1559	;# 
  2854     0618                     PWM5DCH         equ	1560	;# 
  2855     0619                     PWM5CON         equ	1561	;# 
  2856     0619                     PWM5CON0        equ	1561	;# 
  2857     061A                     PWM6DCL         equ	1562	;# 
  2858     061B                     PWM6DCH         equ	1563	;# 
  2859     061C                     PWM6CON         equ	1564	;# 
  2860     061C                     PWM6CON0        equ	1564	;# 
  2861     061F                     PWMTMRS         equ	1567	;# 
  2862     0691                     CWG1CLKCON      equ	1681	;# 
  2863     0692                     CWG1DAT         equ	1682	;# 
  2864     0693                     CWG1DBR         equ	1683	;# 
  2865     0694                     CWG1DBF         equ	1684	;# 
  2866     0695                     CWG1CON0        equ	1685	;# 
  2867     0696                     CWG1CON1        equ	1686	;# 
  2868     0697                     CWG1AS0         equ	1687	;# 
  2869     0698                     CWG1AS1         equ	1688	;# 
  2870     0699                     CWG1STR         equ	1689	;# 
  2871     0711                     CWG2CLKCON      equ	1809	;# 
  2872     0712                     CWG2DAT         equ	1810	;# 
  2873     0713                     CWG2DBR         equ	1811	;# 
  2874     0714                     CWG2DBF         equ	1812	;# 
  2875     0715                     CWG2CON0        equ	1813	;# 
  2876     0716                     CWG2CON1        equ	1814	;# 
  2877     0717                     CWG2AS0         equ	1815	;# 
  2878     0718                     CWG2AS1         equ	1816	;# 
  2879     0719                     CWG2STR         equ	1817	;# 
  2880     0891                     NVMADR          equ	2193	;# 
  2881     0891                     EEADR           equ	2193	;# 
  2882     0891                     PMADR           equ	2193	;# 
  2883     0891                     NVMADRL         equ	2193	;# 
  2884     0891                     EEADRL          equ	2193	;# 
  2885     0891                     PMADRL          equ	2193	;# 
  2886     0892                     NVMADRH         equ	2194	;# 
  2887     0892                     EEADRH          equ	2194	;# 
  2888     0892                     PMADRH          equ	2194	;# 
  2889     0893                     NVMDAT          equ	2195	;# 
  2890     0893                     EEDAT           equ	2195	;# 
  2891     0893                     PMDAT           equ	2195	;# 
  2892     0893                     NVMDATL         equ	2195	;# 
  2893     0893                     EEDATL          equ	2195	;# 
  2894     0893                     PMDATL          equ	2195	;# 
  2895     0894                     NVMDATH         equ	2196	;# 
  2896     0894                     EEDATH          equ	2196	;# 
  2897     0894                     PMDATH          equ	2196	;# 
  2898     0895                     NVMCON1         equ	2197	;# 
  2899     0895                     EECON1          equ	2197	;# 
  2900     0895                     PMCON1          equ	2197	;# 
  2901     0896                     NVMCON2         equ	2198	;# 
  2902     0896                     EECON2          equ	2198	;# 
  2903     0896                     PMCON2          equ	2198	;# 
  2904     089B                     PCON0           equ	2203	;# 
  2905     0911                     PMD0            equ	2321	;# 
  2906     0912                     PMD1            equ	2322	;# 
  2907     0913                     PMD2            equ	2323	;# 
  2908     0914                     PMD3            equ	2324	;# 
  2909     0915                     PMD4            equ	2325	;# 
  2910     0916                     PMD5            equ	2326	;# 
  2911     0918                     CPUDOZE         equ	2328	;# 
  2912     0919                     OSCCON1         equ	2329	;# 
  2913     091A                     OSCCON2         equ	2330	;# 
  2914     091B                     OSCCON3         equ	2331	;# 
  2915     091C                     OSCSTAT1        equ	2332	;# 
  2916     091D                     OSCEN           equ	2333	;# 
  2917     091E                     OSCTUNE         equ	2334	;# 
  2918     091F                     OSCFRQ          equ	2335	;# 
  2919     0E0F                     PPSLOCK         equ	3599	;# 
  2920     0E10                     INTPPS          equ	3600	;# 
  2921     0E11                     T0CKIPPS        equ	3601	;# 
  2922     0E12                     T1CKIPPS        equ	3602	;# 
  2923     0E13                     T1GPPS          equ	3603	;# 
  2924     0E14                     CCP1PPS         equ	3604	;# 
  2925     0E15                     CCP2PPS         equ	3605	;# 
  2926     0E16                     CCP3PPS         equ	3606	;# 
  2927     0E17                     CCP4PPS         equ	3607	;# 
  2928     0E18                     CWG1PPS         equ	3608	;# 
  2929     0E19                     CWG2PPS         equ	3609	;# 
  2930     0E1A                     MDCIN1PPS       equ	3610	;# 
  2931     0E1B                     MDCIN2PPS       equ	3611	;# 
  2932     0E1C                     MDMINPPS        equ	3612	;# 
  2933     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2934     0E1E                     SSP2DATPPS      equ	3614	;# 
  2935     0E1F                     SSP2SSPPS       equ	3615	;# 
  2936     0E20                     SSP1CLKPPS      equ	3616	;# 
  2937     0E21                     SSP1DATPPS      equ	3617	;# 
  2938     0E22                     SSP1SSPPS       equ	3618	;# 
  2939     0E24                     RXPPS           equ	3620	;# 
  2940     0E25                     TXPPS           equ	3621	;# 
  2941     0E28                     CLCIN0PPS       equ	3624	;# 
  2942     0E29                     CLCIN1PPS       equ	3625	;# 
  2943     0E2A                     CLCIN2PPS       equ	3626	;# 
  2944     0E2B                     CLCIN3PPS       equ	3627	;# 
  2945     0E2C                     T3CKIPPS        equ	3628	;# 
  2946     0E2D                     T3GPPS          equ	3629	;# 
  2947     0E2E                     T5CKIPPS        equ	3630	;# 
  2948     0E2F                     T5GPPS          equ	3631	;# 
  2949     0E90                     RA0PPS          equ	3728	;# 
  2950     0E91                     RA1PPS          equ	3729	;# 
  2951     0E92                     RA2PPS          equ	3730	;# 
  2952     0E94                     RA4PPS          equ	3732	;# 
  2953     0E95                     RA5PPS          equ	3733	;# 
  2954     0E9C                     RB4PPS          equ	3740	;# 
  2955     0E9D                     RB5PPS          equ	3741	;# 
  2956     0E9E                     RB6PPS          equ	3742	;# 
  2957     0E9F                     RB7PPS          equ	3743	;# 
  2958     0EA0                     RC0PPS          equ	3744	;# 
  2959     0EA1                     RC1PPS          equ	3745	;# 
  2960     0EA2                     RC2PPS          equ	3746	;# 
  2961     0EA3                     RC3PPS          equ	3747	;# 
  2962     0EA4                     RC4PPS          equ	3748	;# 
  2963     0EA5                     RC5PPS          equ	3749	;# 
  2964     0EA6                     RC6PPS          equ	3750	;# 
  2965     0EA7                     RC7PPS          equ	3751	;# 
  2966     0F0F                     CLCDATA         equ	3855	;# 
  2967     0F10                     CLC1CON         equ	3856	;# 
  2968     0F11                     CLC1POL         equ	3857	;# 
  2969     0F12                     CLC1SEL0        equ	3858	;# 
  2970     0F13                     CLC1SEL1        equ	3859	;# 
  2971     0F14                     CLC1SEL2        equ	3860	;# 
  2972     0F15                     CLC1SEL3        equ	3861	;# 
  2973     0F16                     CLC1GLS0        equ	3862	;# 
  2974     0F17                     CLC1GLS1        equ	3863	;# 
  2975     0F18                     CLC1GLS2        equ	3864	;# 
  2976     0F19                     CLC1GLS3        equ	3865	;# 
  2977     0F1A                     CLC2CON         equ	3866	;# 
  2978     0F1B                     CLC2POL         equ	3867	;# 
  2979     0F1C                     CLC2SEL0        equ	3868	;# 
  2980     0F1D                     CLC2SEL1        equ	3869	;# 
  2981     0F1E                     CLC2SEL2        equ	3870	;# 
  2982     0F1F                     CLC2SEL3        equ	3871	;# 
  2983     0F20                     CLC2GLS0        equ	3872	;# 
  2984     0F21                     CLC2GLS1        equ	3873	;# 
  2985     0F22                     CLC2GLS2        equ	3874	;# 
  2986     0F23                     CLC2GLS3        equ	3875	;# 
  2987     0F24                     CLC3CON         equ	3876	;# 
  2988     0F25                     CLC3POL         equ	3877	;# 
  2989     0F26                     CLC3SEL0        equ	3878	;# 
  2990     0F27                     CLC3SEL1        equ	3879	;# 
  2991     0F28                     CLC3SEL2        equ	3880	;# 
  2992     0F29                     CLC3SEL3        equ	3881	;# 
  2993     0F2A                     CLC3GLS0        equ	3882	;# 
  2994     0F2B                     CLC3GLS1        equ	3883	;# 
  2995     0F2C                     CLC3GLS2        equ	3884	;# 
  2996     0F2D                     CLC3GLS3        equ	3885	;# 
  2997     0F2E                     CLC4CON         equ	3886	;# 
  2998     0F2F                     CLC4POL         equ	3887	;# 
  2999     0F30                     CLC4SEL0        equ	3888	;# 
  3000     0F31                     CLC4SEL1        equ	3889	;# 
  3001     0F32                     CLC4SEL2        equ	3890	;# 
  3002     0F33                     CLC4SEL3        equ	3891	;# 
  3003     0F34                     CLC4GLS0        equ	3892	;# 
  3004     0F35                     CLC4GLS1        equ	3893	;# 
  3005     0F36                     CLC4GLS2        equ	3894	;# 
  3006     0F37                     CLC4GLS3        equ	3895	;# 
  3007     0FE4                     STATUS_SHAD     equ	4068	;# 
  3008     0FE5                     WREG_SHAD       equ	4069	;# 
  3009     0FE6                     BSR_SHAD        equ	4070	;# 
  3010     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3011     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3012     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3013     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3014     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3015     0FED                     STKPTR          equ	4077	;# 
  3016     0FEE                     TOSL            equ	4078	;# 
  3017     0FEF                     TOSH            equ	4079	;# 
  3018     0000                     INDF0           equ	0	;# 
  3019     0001                     INDF1           equ	1	;# 
  3020     0002                     PCL             equ	2	;# 
  3021     0003                     STATUS          equ	3	;# 
  3022     0004                     FSR0L           equ	4	;# 
  3023     0005                     FSR0H           equ	5	;# 
  3024     0006                     FSR1L           equ	6	;# 
  3025     0007                     FSR1H           equ	7	;# 
  3026     0008                     BSR             equ	8	;# 
  3027     0009                     WREG            equ	9	;# 
  3028     000A                     PCLATH          equ	10	;# 
  3029     000B                     INTCON          equ	11	;# 
  3030     000C                     PORTA           equ	12	;# 
  3031     000D                     PORTB           equ	13	;# 
  3032     000E                     PORTC           equ	14	;# 
  3033     0010                     PIR0            equ	16	;# 
  3034     0011                     PIR1            equ	17	;# 
  3035     0012                     PIR2            equ	18	;# 
  3036     0013                     PIR3            equ	19	;# 
  3037     0014                     PIR4            equ	20	;# 
  3038     0015                     TMR0L           equ	21	;# 
  3039     0015                     TMR0            equ	21	;# 
  3040     0016                     TMR0H           equ	22	;# 
  3041     0016                     PR0             equ	22	;# 
  3042     0017                     T0CON0          equ	23	;# 
  3043     0018                     T0CON1          equ	24	;# 
  3044     0019                     TMR1            equ	25	;# 
  3045     0019                     TMR1L           equ	25	;# 
  3046     001A                     TMR1H           equ	26	;# 
  3047     001B                     T1CON           equ	27	;# 
  3048     001C                     T1GCON          equ	28	;# 
  3049     001D                     TMR2            equ	29	;# 
  3050     001E                     PR2             equ	30	;# 
  3051     001F                     T2CON           equ	31	;# 
  3052     008C                     TRISA           equ	140	;# 
  3053     008D                     TRISB           equ	141	;# 
  3054     008E                     TRISC           equ	142	;# 
  3055     0090                     PIE0            equ	144	;# 
  3056     0091                     PIE1            equ	145	;# 
  3057     0092                     PIE2            equ	146	;# 
  3058     0093                     PIE3            equ	147	;# 
  3059     0094                     PIE4            equ	148	;# 
  3060     0097                     WDTCON          equ	151	;# 
  3061     009B                     ADRES           equ	155	;# 
  3062     009B                     ADRESL          equ	155	;# 
  3063     009C                     ADRESH          equ	156	;# 
  3064     009D                     ADCON0          equ	157	;# 
  3065     009E                     ADCON1          equ	158	;# 
  3066     009F                     ADACT           equ	159	;# 
  3067     010C                     LATA            equ	268	;# 
  3068     010D                     LATB            equ	269	;# 
  3069     010E                     LATC            equ	270	;# 
  3070     0111                     CM1CON0         equ	273	;# 
  3071     0112                     CM1CON1         equ	274	;# 
  3072     0113                     CM2CON0         equ	275	;# 
  3073     0114                     CM2CON1         equ	276	;# 
  3074     0115                     CMOUT           equ	277	;# 
  3075     0116                     BORCON          equ	278	;# 
  3076     0117                     FVRCON          equ	279	;# 
  3077     0118                     DACCON0         equ	280	;# 
  3078     0119                     DACCON1         equ	281	;# 
  3079     018C                     ANSELA          equ	396	;# 
  3080     018D                     ANSELB          equ	397	;# 
  3081     018E                     ANSELC          equ	398	;# 
  3082     0197                     VREGCON         equ	407	;# 
  3083     0199                     RC1REG          equ	409	;# 
  3084     0199                     RCREG           equ	409	;# 
  3085     0199                     RCREG1          equ	409	;# 
  3086     019A                     TX1REG          equ	410	;# 
  3087     019A                     TXREG1          equ	410	;# 
  3088     019A                     TXREG           equ	410	;# 
  3089     019B                     SP1BRG          equ	411	;# 
  3090     019B                     SPBRG           equ	411	;# 
  3091     019B                     SP1BRGL         equ	411	;# 
  3092     019B                     SPBRG1          equ	411	;# 
  3093     019B                     SPBRGL          equ	411	;# 
  3094     019C                     SP1BRGH         equ	412	;# 
  3095     019C                     SPBRGH          equ	412	;# 
  3096     019C                     SPBRGH1         equ	412	;# 
  3097     019D                     RC1STA          equ	413	;# 
  3098     019D                     RCSTA1          equ	413	;# 
  3099     019D                     RCSTA           equ	413	;# 
  3100     019E                     TX1STA          equ	414	;# 
  3101     019E                     TXSTA1          equ	414	;# 
  3102     019E                     TXSTA           equ	414	;# 
  3103     019F                     BAUD1CON        equ	415	;# 
  3104     019F                     BAUDCON1        equ	415	;# 
  3105     019F                     BAUDCTL1        equ	415	;# 
  3106     019F                     BAUDCON         equ	415	;# 
  3107     019F                     BAUDCTL         equ	415	;# 
  3108     020C                     WPUA            equ	524	;# 
  3109     020D                     WPUB            equ	525	;# 
  3110     020E                     WPUC            equ	526	;# 
  3111     0211                     SSP1BUF         equ	529	;# 
  3112     0211                     SSPBUF          equ	529	;# 
  3113     0212                     SSP1ADD         equ	530	;# 
  3114     0212                     SSPADD          equ	530	;# 
  3115     0213                     SSP1MSK         equ	531	;# 
  3116     0213                     SSPMSK          equ	531	;# 
  3117     0214                     SSP1STAT        equ	532	;# 
  3118     0214                     SSPSTAT         equ	532	;# 
  3119     0215                     SSP1CON1        equ	533	;# 
  3120     0215                     SSPCON          equ	533	;# 
  3121     0215                     SSPCON1         equ	533	;# 
  3122     0215                     SSP1CON         equ	533	;# 
  3123     0216                     SSP1CON2        equ	534	;# 
  3124     0216                     SSPCON2         equ	534	;# 
  3125     0217                     SSP1CON3        equ	535	;# 
  3126     0217                     SSPCON3         equ	535	;# 
  3127     0219                     SSP2BUF         equ	537	;# 
  3128     021A                     SSP2ADD         equ	538	;# 
  3129     021B                     SSP2MSK         equ	539	;# 
  3130     021C                     SSP2STAT        equ	540	;# 
  3131     021D                     SSP2CON1        equ	541	;# 
  3132     021D                     SSP2CON         equ	541	;# 
  3133     021E                     SSP2CON2        equ	542	;# 
  3134     021F                     SSP2CON3        equ	543	;# 
  3135     028C                     ODCONA          equ	652	;# 
  3136     028D                     ODCONB          equ	653	;# 
  3137     028E                     ODCONC          equ	654	;# 
  3138     0291                     CCPR1           equ	657	;# 
  3139     0291                     CCPR1L          equ	657	;# 
  3140     0292                     CCPR1H          equ	658	;# 
  3141     0293                     CCP1CON         equ	659	;# 
  3142     0294                     CCP1CAP         equ	660	;# 
  3143     0295                     CCPR2           equ	661	;# 
  3144     0295                     CCPR2L          equ	661	;# 
  3145     0296                     CCPR2H          equ	662	;# 
  3146     0297                     CCP2CON         equ	663	;# 
  3147     0298                     CCP2CAP         equ	664	;# 
  3148     029F                     CCPTMRS         equ	671	;# 
  3149     030C                     SLRCONA         equ	780	;# 
  3150     030D                     SLRCONB         equ	781	;# 
  3151     030E                     SLRCONC         equ	782	;# 
  3152     0311                     CCPR3           equ	785	;# 
  3153     0311                     CCPR3L          equ	785	;# 
  3154     0312                     CCPR3H          equ	786	;# 
  3155     0313                     CCP3CON         equ	787	;# 
  3156     0314                     CCP3CAP         equ	788	;# 
  3157     0315                     CCPR4           equ	789	;# 
  3158     0315                     CCPR4L          equ	789	;# 
  3159     0316                     CCPR4H          equ	790	;# 
  3160     0317                     CCP4CON         equ	791	;# 
  3161     0318                     CCP4CAP         equ	792	;# 
  3162     038C                     INLVLA          equ	908	;# 
  3163     038D                     INLVLB          equ	909	;# 
  3164     038E                     INLVLC          equ	910	;# 
  3165     0391                     IOCAP           equ	913	;# 
  3166     0392                     IOCAN           equ	914	;# 
  3167     0393                     IOCAF           equ	915	;# 
  3168     0394                     IOCBP           equ	916	;# 
  3169     0395                     IOCBN           equ	917	;# 
  3170     0396                     IOCBF           equ	918	;# 
  3171     0397                     IOCCP           equ	919	;# 
  3172     0398                     IOCCN           equ	920	;# 
  3173     0399                     IOCCF           equ	921	;# 
  3174     039A                     CLKRCON         equ	922	;# 
  3175     039C                     MDCON           equ	924	;# 
  3176     039D                     MDSRC           equ	925	;# 
  3177     039E                     MDCARH          equ	926	;# 
  3178     039F                     MDCARL          equ	927	;# 
  3179     0411                     TMR3            equ	1041	;# 
  3180     0411                     TMR3L           equ	1041	;# 
  3181     0412                     TMR3H           equ	1042	;# 
  3182     0413                     T3CON           equ	1043	;# 
  3183     0414                     T3GCON          equ	1044	;# 
  3184     0415                     TMR4            equ	1045	;# 
  3185     0416                     PR4             equ	1046	;# 
  3186     0417                     T4CON           equ	1047	;# 
  3187     0418                     TMR5            equ	1048	;# 
  3188     0418                     TMR5L           equ	1048	;# 
  3189     0419                     TMR5H           equ	1049	;# 
  3190     041A                     T5CON           equ	1050	;# 
  3191     041B                     T5GCON          equ	1051	;# 
  3192     041C                     TMR6            equ	1052	;# 
  3193     041D                     PR6             equ	1053	;# 
  3194     041E                     T6CON           equ	1054	;# 
  3195     041F                     CCDCON          equ	1055	;# 
  3196     0498                     NCO1ACC         equ	1176	;# 
  3197     0498                     NCO1ACCL        equ	1176	;# 
  3198     0499                     NCO1ACCH        equ	1177	;# 
  3199     049A                     NCO1ACCU        equ	1178	;# 
  3200     049B                     NCO1INC         equ	1179	;# 
  3201     049B                     NCO1INCL        equ	1179	;# 
  3202     049C                     NCO1INCH        equ	1180	;# 
  3203     049D                     NCO1INCU        equ	1181	;# 
  3204     049E                     NCO1CON         equ	1182	;# 
  3205     049F                     NCO1CLK         equ	1183	;# 
  3206     0617                     PWM5DCL         equ	1559	;# 
  3207     0618                     PWM5DCH         equ	1560	;# 
  3208     0619                     PWM5CON         equ	1561	;# 
  3209     0619                     PWM5CON0        equ	1561	;# 
  3210     061A                     PWM6DCL         equ	1562	;# 
  3211     061B                     PWM6DCH         equ	1563	;# 
  3212     061C                     PWM6CON         equ	1564	;# 
  3213     061C                     PWM6CON0        equ	1564	;# 
  3214     061F                     PWMTMRS         equ	1567	;# 
  3215     0691                     CWG1CLKCON      equ	1681	;# 
  3216     0692                     CWG1DAT         equ	1682	;# 
  3217     0693                     CWG1DBR         equ	1683	;# 
  3218     0694                     CWG1DBF         equ	1684	;# 
  3219     0695                     CWG1CON0        equ	1685	;# 
  3220     0696                     CWG1CON1        equ	1686	;# 
  3221     0697                     CWG1AS0         equ	1687	;# 
  3222     0698                     CWG1AS1         equ	1688	;# 
  3223     0699                     CWG1STR         equ	1689	;# 
  3224     0711                     CWG2CLKCON      equ	1809	;# 
  3225     0712                     CWG2DAT         equ	1810	;# 
  3226     0713                     CWG2DBR         equ	1811	;# 
  3227     0714                     CWG2DBF         equ	1812	;# 
  3228     0715                     CWG2CON0        equ	1813	;# 
  3229     0716                     CWG2CON1        equ	1814	;# 
  3230     0717                     CWG2AS0         equ	1815	;# 
  3231     0718                     CWG2AS1         equ	1816	;# 
  3232     0719                     CWG2STR         equ	1817	;# 
  3233     0891                     NVMADR          equ	2193	;# 
  3234     0891                     EEADR           equ	2193	;# 
  3235     0891                     PMADR           equ	2193	;# 
  3236     0891                     NVMADRL         equ	2193	;# 
  3237     0891                     EEADRL          equ	2193	;# 
  3238     0891                     PMADRL          equ	2193	;# 
  3239     0892                     NVMADRH         equ	2194	;# 
  3240     0892                     EEADRH          equ	2194	;# 
  3241     0892                     PMADRH          equ	2194	;# 
  3242     0893                     NVMDAT          equ	2195	;# 
  3243     0893                     EEDAT           equ	2195	;# 
  3244     0893                     PMDAT           equ	2195	;# 
  3245     0893                     NVMDATL         equ	2195	;# 
  3246     0893                     EEDATL          equ	2195	;# 
  3247     0893                     PMDATL          equ	2195	;# 
  3248     0894                     NVMDATH         equ	2196	;# 
  3249     0894                     EEDATH          equ	2196	;# 
  3250     0894                     PMDATH          equ	2196	;# 
  3251     0895                     NVMCON1         equ	2197	;# 
  3252     0895                     EECON1          equ	2197	;# 
  3253     0895                     PMCON1          equ	2197	;# 
  3254     0896                     NVMCON2         equ	2198	;# 
  3255     0896                     EECON2          equ	2198	;# 
  3256     0896                     PMCON2          equ	2198	;# 
  3257     089B                     PCON0           equ	2203	;# 
  3258     0911                     PMD0            equ	2321	;# 
  3259     0912                     PMD1            equ	2322	;# 
  3260     0913                     PMD2            equ	2323	;# 
  3261     0914                     PMD3            equ	2324	;# 
  3262     0915                     PMD4            equ	2325	;# 
  3263     0916                     PMD5            equ	2326	;# 
  3264     0918                     CPUDOZE         equ	2328	;# 
  3265     0919                     OSCCON1         equ	2329	;# 
  3266     091A                     OSCCON2         equ	2330	;# 
  3267     091B                     OSCCON3         equ	2331	;# 
  3268     091C                     OSCSTAT1        equ	2332	;# 
  3269     091D                     OSCEN           equ	2333	;# 
  3270     091E                     OSCTUNE         equ	2334	;# 
  3271     091F                     OSCFRQ          equ	2335	;# 
  3272     0E0F                     PPSLOCK         equ	3599	;# 
  3273     0E10                     INTPPS          equ	3600	;# 
  3274     0E11                     T0CKIPPS        equ	3601	;# 
  3275     0E12                     T1CKIPPS        equ	3602	;# 
  3276     0E13                     T1GPPS          equ	3603	;# 
  3277     0E14                     CCP1PPS         equ	3604	;# 
  3278     0E15                     CCP2PPS         equ	3605	;# 
  3279     0E16                     CCP3PPS         equ	3606	;# 
  3280     0E17                     CCP4PPS         equ	3607	;# 
  3281     0E18                     CWG1PPS         equ	3608	;# 
  3282     0E19                     CWG2PPS         equ	3609	;# 
  3283     0E1A                     MDCIN1PPS       equ	3610	;# 
  3284     0E1B                     MDCIN2PPS       equ	3611	;# 
  3285     0E1C                     MDMINPPS        equ	3612	;# 
  3286     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3287     0E1E                     SSP2DATPPS      equ	3614	;# 
  3288     0E1F                     SSP2SSPPS       equ	3615	;# 
  3289     0E20                     SSP1CLKPPS      equ	3616	;# 
  3290     0E21                     SSP1DATPPS      equ	3617	;# 
  3291     0E22                     SSP1SSPPS       equ	3618	;# 
  3292     0E24                     RXPPS           equ	3620	;# 
  3293     0E25                     TXPPS           equ	3621	;# 
  3294     0E28                     CLCIN0PPS       equ	3624	;# 
  3295     0E29                     CLCIN1PPS       equ	3625	;# 
  3296     0E2A                     CLCIN2PPS       equ	3626	;# 
  3297     0E2B                     CLCIN3PPS       equ	3627	;# 
  3298     0E2C                     T3CKIPPS        equ	3628	;# 
  3299     0E2D                     T3GPPS          equ	3629	;# 
  3300     0E2E                     T5CKIPPS        equ	3630	;# 
  3301     0E2F                     T5GPPS          equ	3631	;# 
  3302     0E90                     RA0PPS          equ	3728	;# 
  3303     0E91                     RA1PPS          equ	3729	;# 
  3304     0E92                     RA2PPS          equ	3730	;# 
  3305     0E94                     RA4PPS          equ	3732	;# 
  3306     0E95                     RA5PPS          equ	3733	;# 
  3307     0E9C                     RB4PPS          equ	3740	;# 
  3308     0E9D                     RB5PPS          equ	3741	;# 
  3309     0E9E                     RB6PPS          equ	3742	;# 
  3310     0E9F                     RB7PPS          equ	3743	;# 
  3311     0EA0                     RC0PPS          equ	3744	;# 
  3312     0EA1                     RC1PPS          equ	3745	;# 
  3313     0EA2                     RC2PPS          equ	3746	;# 
  3314     0EA3                     RC3PPS          equ	3747	;# 
  3315     0EA4                     RC4PPS          equ	3748	;# 
  3316     0EA5                     RC5PPS          equ	3749	;# 
  3317     0EA6                     RC6PPS          equ	3750	;# 
  3318     0EA7                     RC7PPS          equ	3751	;# 
  3319     0F0F                     CLCDATA         equ	3855	;# 
  3320     0F10                     CLC1CON         equ	3856	;# 
  3321     0F11                     CLC1POL         equ	3857	;# 
  3322     0F12                     CLC1SEL0        equ	3858	;# 
  3323     0F13                     CLC1SEL1        equ	3859	;# 
  3324     0F14                     CLC1SEL2        equ	3860	;# 
  3325     0F15                     CLC1SEL3        equ	3861	;# 
  3326     0F16                     CLC1GLS0        equ	3862	;# 
  3327     0F17                     CLC1GLS1        equ	3863	;# 
  3328     0F18                     CLC1GLS2        equ	3864	;# 
  3329     0F19                     CLC1GLS3        equ	3865	;# 
  3330     0F1A                     CLC2CON         equ	3866	;# 
  3331     0F1B                     CLC2POL         equ	3867	;# 
  3332     0F1C                     CLC2SEL0        equ	3868	;# 
  3333     0F1D                     CLC2SEL1        equ	3869	;# 
  3334     0F1E                     CLC2SEL2        equ	3870	;# 
  3335     0F1F                     CLC2SEL3        equ	3871	;# 
  3336     0F20                     CLC2GLS0        equ	3872	;# 
  3337     0F21                     CLC2GLS1        equ	3873	;# 
  3338     0F22                     CLC2GLS2        equ	3874	;# 
  3339     0F23                     CLC2GLS3        equ	3875	;# 
  3340     0F24                     CLC3CON         equ	3876	;# 
  3341     0F25                     CLC3POL         equ	3877	;# 
  3342     0F26                     CLC3SEL0        equ	3878	;# 
  3343     0F27                     CLC3SEL1        equ	3879	;# 
  3344     0F28                     CLC3SEL2        equ	3880	;# 
  3345     0F29                     CLC3SEL3        equ	3881	;# 
  3346     0F2A                     CLC3GLS0        equ	3882	;# 
  3347     0F2B                     CLC3GLS1        equ	3883	;# 
  3348     0F2C                     CLC3GLS2        equ	3884	;# 
  3349     0F2D                     CLC3GLS3        equ	3885	;# 
  3350     0F2E                     CLC4CON         equ	3886	;# 
  3351     0F2F                     CLC4POL         equ	3887	;# 
  3352     0F30                     CLC4SEL0        equ	3888	;# 
  3353     0F31                     CLC4SEL1        equ	3889	;# 
  3354     0F32                     CLC4SEL2        equ	3890	;# 
  3355     0F33                     CLC4SEL3        equ	3891	;# 
  3356     0F34                     CLC4GLS0        equ	3892	;# 
  3357     0F35                     CLC4GLS1        equ	3893	;# 
  3358     0F36                     CLC4GLS2        equ	3894	;# 
  3359     0F37                     CLC4GLS3        equ	3895	;# 
  3360     0FE4                     STATUS_SHAD     equ	4068	;# 
  3361     0FE5                     WREG_SHAD       equ	4069	;# 
  3362     0FE6                     BSR_SHAD        equ	4070	;# 
  3363     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3364     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3365     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3366     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3367     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3368     0FED                     STKPTR          equ	4077	;# 
  3369     0FEE                     TOSL            equ	4078	;# 
  3370     0FEF                     TOSH            equ	4079	;# 
  3371     0000                     INDF0           equ	0	;# 
  3372     0001                     INDF1           equ	1	;# 
  3373     0002                     PCL             equ	2	;# 
  3374     0003                     STATUS          equ	3	;# 
  3375     0004                     FSR0L           equ	4	;# 
  3376     0005                     FSR0H           equ	5	;# 
  3377     0006                     FSR1L           equ	6	;# 
  3378     0007                     FSR1H           equ	7	;# 
  3379     0008                     BSR             equ	8	;# 
  3380     0009                     WREG            equ	9	;# 
  3381     000A                     PCLATH          equ	10	;# 
  3382     000B                     INTCON          equ	11	;# 
  3383     000C                     PORTA           equ	12	;# 
  3384     000D                     PORTB           equ	13	;# 
  3385     000E                     PORTC           equ	14	;# 
  3386     0010                     PIR0            equ	16	;# 
  3387     0011                     PIR1            equ	17	;# 
  3388     0012                     PIR2            equ	18	;# 
  3389     0013                     PIR3            equ	19	;# 
  3390     0014                     PIR4            equ	20	;# 
  3391     0015                     TMR0L           equ	21	;# 
  3392     0015                     TMR0            equ	21	;# 
  3393     0016                     TMR0H           equ	22	;# 
  3394     0016                     PR0             equ	22	;# 
  3395     0017                     T0CON0          equ	23	;# 
  3396     0018                     T0CON1          equ	24	;# 
  3397     0019                     TMR1            equ	25	;# 
  3398     0019                     TMR1L           equ	25	;# 
  3399     001A                     TMR1H           equ	26	;# 
  3400     001B                     T1CON           equ	27	;# 
  3401     001C                     T1GCON          equ	28	;# 
  3402     001D                     TMR2            equ	29	;# 
  3403     001E                     PR2             equ	30	;# 
  3404     001F                     T2CON           equ	31	;# 
  3405     008C                     TRISA           equ	140	;# 
  3406     008D                     TRISB           equ	141	;# 
  3407     008E                     TRISC           equ	142	;# 
  3408     0090                     PIE0            equ	144	;# 
  3409     0091                     PIE1            equ	145	;# 
  3410     0092                     PIE2            equ	146	;# 
  3411     0093                     PIE3            equ	147	;# 
  3412     0094                     PIE4            equ	148	;# 
  3413     0097                     WDTCON          equ	151	;# 
  3414     009B                     ADRES           equ	155	;# 
  3415     009B                     ADRESL          equ	155	;# 
  3416     009C                     ADRESH          equ	156	;# 
  3417     009D                     ADCON0          equ	157	;# 
  3418     009E                     ADCON1          equ	158	;# 
  3419     009F                     ADACT           equ	159	;# 
  3420     010C                     LATA            equ	268	;# 
  3421     010D                     LATB            equ	269	;# 
  3422     010E                     LATC            equ	270	;# 
  3423     0111                     CM1CON0         equ	273	;# 
  3424     0112                     CM1CON1         equ	274	;# 
  3425     0113                     CM2CON0         equ	275	;# 
  3426     0114                     CM2CON1         equ	276	;# 
  3427     0115                     CMOUT           equ	277	;# 
  3428     0116                     BORCON          equ	278	;# 
  3429     0117                     FVRCON          equ	279	;# 
  3430     0118                     DACCON0         equ	280	;# 
  3431     0119                     DACCON1         equ	281	;# 
  3432     018C                     ANSELA          equ	396	;# 
  3433     018D                     ANSELB          equ	397	;# 
  3434     018E                     ANSELC          equ	398	;# 
  3435     0197                     VREGCON         equ	407	;# 
  3436     0199                     RC1REG          equ	409	;# 
  3437     0199                     RCREG           equ	409	;# 
  3438     0199                     RCREG1          equ	409	;# 
  3439     019A                     TX1REG          equ	410	;# 
  3440     019A                     TXREG1          equ	410	;# 
  3441     019A                     TXREG           equ	410	;# 
  3442     019B                     SP1BRG          equ	411	;# 
  3443     019B                     SPBRG           equ	411	;# 
  3444     019B                     SP1BRGL         equ	411	;# 
  3445     019B                     SPBRG1          equ	411	;# 
  3446     019B                     SPBRGL          equ	411	;# 
  3447     019C                     SP1BRGH         equ	412	;# 
  3448     019C                     SPBRGH          equ	412	;# 
  3449     019C                     SPBRGH1         equ	412	;# 
  3450     019D                     RC1STA          equ	413	;# 
  3451     019D                     RCSTA1          equ	413	;# 
  3452     019D                     RCSTA           equ	413	;# 
  3453     019E                     TX1STA          equ	414	;# 
  3454     019E                     TXSTA1          equ	414	;# 
  3455     019E                     TXSTA           equ	414	;# 
  3456     019F                     BAUD1CON        equ	415	;# 
  3457     019F                     BAUDCON1        equ	415	;# 
  3458     019F                     BAUDCTL1        equ	415	;# 
  3459     019F                     BAUDCON         equ	415	;# 
  3460     019F                     BAUDCTL         equ	415	;# 
  3461     020C                     WPUA            equ	524	;# 
  3462     020D                     WPUB            equ	525	;# 
  3463     020E                     WPUC            equ	526	;# 
  3464     0211                     SSP1BUF         equ	529	;# 
  3465     0211                     SSPBUF          equ	529	;# 
  3466     0212                     SSP1ADD         equ	530	;# 
  3467     0212                     SSPADD          equ	530	;# 
  3468     0213                     SSP1MSK         equ	531	;# 
  3469     0213                     SSPMSK          equ	531	;# 
  3470     0214                     SSP1STAT        equ	532	;# 
  3471     0214                     SSPSTAT         equ	532	;# 
  3472     0215                     SSP1CON1        equ	533	;# 
  3473     0215                     SSPCON          equ	533	;# 
  3474     0215                     SSPCON1         equ	533	;# 
  3475     0215                     SSP1CON         equ	533	;# 
  3476     0216                     SSP1CON2        equ	534	;# 
  3477     0216                     SSPCON2         equ	534	;# 
  3478     0217                     SSP1CON3        equ	535	;# 
  3479     0217                     SSPCON3         equ	535	;# 
  3480     0219                     SSP2BUF         equ	537	;# 
  3481     021A                     SSP2ADD         equ	538	;# 
  3482     021B                     SSP2MSK         equ	539	;# 
  3483     021C                     SSP2STAT        equ	540	;# 
  3484     021D                     SSP2CON1        equ	541	;# 
  3485     021D                     SSP2CON         equ	541	;# 
  3486     021E                     SSP2CON2        equ	542	;# 
  3487     021F                     SSP2CON3        equ	543	;# 
  3488     028C                     ODCONA          equ	652	;# 
  3489     028D                     ODCONB          equ	653	;# 
  3490     028E                     ODCONC          equ	654	;# 
  3491     0291                     CCPR1           equ	657	;# 
  3492     0291                     CCPR1L          equ	657	;# 
  3493     0292                     CCPR1H          equ	658	;# 
  3494     0293                     CCP1CON         equ	659	;# 
  3495     0294                     CCP1CAP         equ	660	;# 
  3496     0295                     CCPR2           equ	661	;# 
  3497     0295                     CCPR2L          equ	661	;# 
  3498     0296                     CCPR2H          equ	662	;# 
  3499     0297                     CCP2CON         equ	663	;# 
  3500     0298                     CCP2CAP         equ	664	;# 
  3501     029F                     CCPTMRS         equ	671	;# 
  3502     030C                     SLRCONA         equ	780	;# 
  3503     030D                     SLRCONB         equ	781	;# 
  3504     030E                     SLRCONC         equ	782	;# 
  3505     0311                     CCPR3           equ	785	;# 
  3506     0311                     CCPR3L          equ	785	;# 
  3507     0312                     CCPR3H          equ	786	;# 
  3508     0313                     CCP3CON         equ	787	;# 
  3509     0314                     CCP3CAP         equ	788	;# 
  3510     0315                     CCPR4           equ	789	;# 
  3511     0315                     CCPR4L          equ	789	;# 
  3512     0316                     CCPR4H          equ	790	;# 
  3513     0317                     CCP4CON         equ	791	;# 
  3514     0318                     CCP4CAP         equ	792	;# 
  3515     038C                     INLVLA          equ	908	;# 
  3516     038D                     INLVLB          equ	909	;# 
  3517     038E                     INLVLC          equ	910	;# 
  3518     0391                     IOCAP           equ	913	;# 
  3519     0392                     IOCAN           equ	914	;# 
  3520     0393                     IOCAF           equ	915	;# 
  3521     0394                     IOCBP           equ	916	;# 
  3522     0395                     IOCBN           equ	917	;# 
  3523     0396                     IOCBF           equ	918	;# 
  3524     0397                     IOCCP           equ	919	;# 
  3525     0398                     IOCCN           equ	920	;# 
  3526     0399                     IOCCF           equ	921	;# 
  3527     039A                     CLKRCON         equ	922	;# 
  3528     039C                     MDCON           equ	924	;# 
  3529     039D                     MDSRC           equ	925	;# 
  3530     039E                     MDCARH          equ	926	;# 
  3531     039F                     MDCARL          equ	927	;# 
  3532     0411                     TMR3            equ	1041	;# 
  3533     0411                     TMR3L           equ	1041	;# 
  3534     0412                     TMR3H           equ	1042	;# 
  3535     0413                     T3CON           equ	1043	;# 
  3536     0414                     T3GCON          equ	1044	;# 
  3537     0415                     TMR4            equ	1045	;# 
  3538     0416                     PR4             equ	1046	;# 
  3539     0417                     T4CON           equ	1047	;# 
  3540     0418                     TMR5            equ	1048	;# 
  3541     0418                     TMR5L           equ	1048	;# 
  3542     0419                     TMR5H           equ	1049	;# 
  3543     041A                     T5CON           equ	1050	;# 
  3544     041B                     T5GCON          equ	1051	;# 
  3545     041C                     TMR6            equ	1052	;# 
  3546     041D                     PR6             equ	1053	;# 
  3547     041E                     T6CON           equ	1054	;# 
  3548     041F                     CCDCON          equ	1055	;# 
  3549     0498                     NCO1ACC         equ	1176	;# 
  3550     0498                     NCO1ACCL        equ	1176	;# 
  3551     0499                     NCO1ACCH        equ	1177	;# 
  3552     049A                     NCO1ACCU        equ	1178	;# 
  3553     049B                     NCO1INC         equ	1179	;# 
  3554     049B                     NCO1INCL        equ	1179	;# 
  3555     049C                     NCO1INCH        equ	1180	;# 
  3556     049D                     NCO1INCU        equ	1181	;# 
  3557     049E                     NCO1CON         equ	1182	;# 
  3558     049F                     NCO1CLK         equ	1183	;# 
  3559     0617                     PWM5DCL         equ	1559	;# 
  3560     0618                     PWM5DCH         equ	1560	;# 
  3561     0619                     PWM5CON         equ	1561	;# 
  3562     0619                     PWM5CON0        equ	1561	;# 
  3563     061A                     PWM6DCL         equ	1562	;# 
  3564     061B                     PWM6DCH         equ	1563	;# 
  3565     061C                     PWM6CON         equ	1564	;# 
  3566     061C                     PWM6CON0        equ	1564	;# 
  3567     061F                     PWMTMRS         equ	1567	;# 
  3568     0691                     CWG1CLKCON      equ	1681	;# 
  3569     0692                     CWG1DAT         equ	1682	;# 
  3570     0693                     CWG1DBR         equ	1683	;# 
  3571     0694                     CWG1DBF         equ	1684	;# 
  3572     0695                     CWG1CON0        equ	1685	;# 
  3573     0696                     CWG1CON1        equ	1686	;# 
  3574     0697                     CWG1AS0         equ	1687	;# 
  3575     0698                     CWG1AS1         equ	1688	;# 
  3576     0699                     CWG1STR         equ	1689	;# 
  3577     0711                     CWG2CLKCON      equ	1809	;# 
  3578     0712                     CWG2DAT         equ	1810	;# 
  3579     0713                     CWG2DBR         equ	1811	;# 
  3580     0714                     CWG2DBF         equ	1812	;# 
  3581     0715                     CWG2CON0        equ	1813	;# 
  3582     0716                     CWG2CON1        equ	1814	;# 
  3583     0717                     CWG2AS0         equ	1815	;# 
  3584     0718                     CWG2AS1         equ	1816	;# 
  3585     0719                     CWG2STR         equ	1817	;# 
  3586     0891                     NVMADR          equ	2193	;# 
  3587     0891                     EEADR           equ	2193	;# 
  3588     0891                     PMADR           equ	2193	;# 
  3589     0891                     NVMADRL         equ	2193	;# 
  3590     0891                     EEADRL          equ	2193	;# 
  3591     0891                     PMADRL          equ	2193	;# 
  3592     0892                     NVMADRH         equ	2194	;# 
  3593     0892                     EEADRH          equ	2194	;# 
  3594     0892                     PMADRH          equ	2194	;# 
  3595     0893                     NVMDAT          equ	2195	;# 
  3596     0893                     EEDAT           equ	2195	;# 
  3597     0893                     PMDAT           equ	2195	;# 
  3598     0893                     NVMDATL         equ	2195	;# 
  3599     0893                     EEDATL          equ	2195	;# 
  3600     0893                     PMDATL          equ	2195	;# 
  3601     0894                     NVMDATH         equ	2196	;# 
  3602     0894                     EEDATH          equ	2196	;# 
  3603     0894                     PMDATH          equ	2196	;# 
  3604     0895                     NVMCON1         equ	2197	;# 
  3605     0895                     EECON1          equ	2197	;# 
  3606     0895                     PMCON1          equ	2197	;# 
  3607     0896                     NVMCON2         equ	2198	;# 
  3608     0896                     EECON2          equ	2198	;# 
  3609     0896                     PMCON2          equ	2198	;# 
  3610     089B                     PCON0           equ	2203	;# 
  3611     0911                     PMD0            equ	2321	;# 
  3612     0912                     PMD1            equ	2322	;# 
  3613     0913                     PMD2            equ	2323	;# 
  3614     0914                     PMD3            equ	2324	;# 
  3615     0915                     PMD4            equ	2325	;# 
  3616     0916                     PMD5            equ	2326	;# 
  3617     0918                     CPUDOZE         equ	2328	;# 
  3618     0919                     OSCCON1         equ	2329	;# 
  3619     091A                     OSCCON2         equ	2330	;# 
  3620     091B                     OSCCON3         equ	2331	;# 
  3621     091C                     OSCSTAT1        equ	2332	;# 
  3622     091D                     OSCEN           equ	2333	;# 
  3623     091E                     OSCTUNE         equ	2334	;# 
  3624     091F                     OSCFRQ          equ	2335	;# 
  3625     0E0F                     PPSLOCK         equ	3599	;# 
  3626     0E10                     INTPPS          equ	3600	;# 
  3627     0E11                     T0CKIPPS        equ	3601	;# 
  3628     0E12                     T1CKIPPS        equ	3602	;# 
  3629     0E13                     T1GPPS          equ	3603	;# 
  3630     0E14                     CCP1PPS         equ	3604	;# 
  3631     0E15                     CCP2PPS         equ	3605	;# 
  3632     0E16                     CCP3PPS         equ	3606	;# 
  3633     0E17                     CCP4PPS         equ	3607	;# 
  3634     0E18                     CWG1PPS         equ	3608	;# 
  3635     0E19                     CWG2PPS         equ	3609	;# 
  3636     0E1A                     MDCIN1PPS       equ	3610	;# 
  3637     0E1B                     MDCIN2PPS       equ	3611	;# 
  3638     0E1C                     MDMINPPS        equ	3612	;# 
  3639     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3640     0E1E                     SSP2DATPPS      equ	3614	;# 
  3641     0E1F                     SSP2SSPPS       equ	3615	;# 
  3642     0E20                     SSP1CLKPPS      equ	3616	;# 
  3643     0E21                     SSP1DATPPS      equ	3617	;# 
  3644     0E22                     SSP1SSPPS       equ	3618	;# 
  3645     0E24                     RXPPS           equ	3620	;# 
  3646     0E25                     TXPPS           equ	3621	;# 
  3647     0E28                     CLCIN0PPS       equ	3624	;# 
  3648     0E29                     CLCIN1PPS       equ	3625	;# 
  3649     0E2A                     CLCIN2PPS       equ	3626	;# 
  3650     0E2B                     CLCIN3PPS       equ	3627	;# 
  3651     0E2C                     T3CKIPPS        equ	3628	;# 
  3652     0E2D                     T3GPPS          equ	3629	;# 
  3653     0E2E                     T5CKIPPS        equ	3630	;# 
  3654     0E2F                     T5GPPS          equ	3631	;# 
  3655     0E90                     RA0PPS          equ	3728	;# 
  3656     0E91                     RA1PPS          equ	3729	;# 
  3657     0E92                     RA2PPS          equ	3730	;# 
  3658     0E94                     RA4PPS          equ	3732	;# 
  3659     0E95                     RA5PPS          equ	3733	;# 
  3660     0E9C                     RB4PPS          equ	3740	;# 
  3661     0E9D                     RB5PPS          equ	3741	;# 
  3662     0E9E                     RB6PPS          equ	3742	;# 
  3663     0E9F                     RB7PPS          equ	3743	;# 
  3664     0EA0                     RC0PPS          equ	3744	;# 
  3665     0EA1                     RC1PPS          equ	3745	;# 
  3666     0EA2                     RC2PPS          equ	3746	;# 
  3667     0EA3                     RC3PPS          equ	3747	;# 
  3668     0EA4                     RC4PPS          equ	3748	;# 
  3669     0EA5                     RC5PPS          equ	3749	;# 
  3670     0EA6                     RC6PPS          equ	3750	;# 
  3671     0EA7                     RC7PPS          equ	3751	;# 
  3672     0F0F                     CLCDATA         equ	3855	;# 
  3673     0F10                     CLC1CON         equ	3856	;# 
  3674     0F11                     CLC1POL         equ	3857	;# 
  3675     0F12                     CLC1SEL0        equ	3858	;# 
  3676     0F13                     CLC1SEL1        equ	3859	;# 
  3677     0F14                     CLC1SEL2        equ	3860	;# 
  3678     0F15                     CLC1SEL3        equ	3861	;# 
  3679     0F16                     CLC1GLS0        equ	3862	;# 
  3680     0F17                     CLC1GLS1        equ	3863	;# 
  3681     0F18                     CLC1GLS2        equ	3864	;# 
  3682     0F19                     CLC1GLS3        equ	3865	;# 
  3683     0F1A                     CLC2CON         equ	3866	;# 
  3684     0F1B                     CLC2POL         equ	3867	;# 
  3685     0F1C                     CLC2SEL0        equ	3868	;# 
  3686     0F1D                     CLC2SEL1        equ	3869	;# 
  3687     0F1E                     CLC2SEL2        equ	3870	;# 
  3688     0F1F                     CLC2SEL3        equ	3871	;# 
  3689     0F20                     CLC2GLS0        equ	3872	;# 
  3690     0F21                     CLC2GLS1        equ	3873	;# 
  3691     0F22                     CLC2GLS2        equ	3874	;# 
  3692     0F23                     CLC2GLS3        equ	3875	;# 
  3693     0F24                     CLC3CON         equ	3876	;# 
  3694     0F25                     CLC3POL         equ	3877	;# 
  3695     0F26                     CLC3SEL0        equ	3878	;# 
  3696     0F27                     CLC3SEL1        equ	3879	;# 
  3697     0F28                     CLC3SEL2        equ	3880	;# 
  3698     0F29                     CLC3SEL3        equ	3881	;# 
  3699     0F2A                     CLC3GLS0        equ	3882	;# 
  3700     0F2B                     CLC3GLS1        equ	3883	;# 
  3701     0F2C                     CLC3GLS2        equ	3884	;# 
  3702     0F2D                     CLC3GLS3        equ	3885	;# 
  3703     0F2E                     CLC4CON         equ	3886	;# 
  3704     0F2F                     CLC4POL         equ	3887	;# 
  3705     0F30                     CLC4SEL0        equ	3888	;# 
  3706     0F31                     CLC4SEL1        equ	3889	;# 
  3707     0F32                     CLC4SEL2        equ	3890	;# 
  3708     0F33                     CLC4SEL3        equ	3891	;# 
  3709     0F34                     CLC4GLS0        equ	3892	;# 
  3710     0F35                     CLC4GLS1        equ	3893	;# 
  3711     0F36                     CLC4GLS2        equ	3894	;# 
  3712     0F37                     CLC4GLS3        equ	3895	;# 
  3713     0FE4                     STATUS_SHAD     equ	4068	;# 
  3714     0FE5                     WREG_SHAD       equ	4069	;# 
  3715     0FE6                     BSR_SHAD        equ	4070	;# 
  3716     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3717     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3718     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3719     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3720     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3721     0FED                     STKPTR          equ	4077	;# 
  3722     0FEE                     TOSL            equ	4078	;# 
  3723     0FEF                     TOSH            equ	4079	;# 
  3724     0000                     INDF0           equ	0	;# 
  3725     0001                     INDF1           equ	1	;# 
  3726     0002                     PCL             equ	2	;# 
  3727     0003                     STATUS          equ	3	;# 
  3728     0004                     FSR0L           equ	4	;# 
  3729     0005                     FSR0H           equ	5	;# 
  3730     0006                     FSR1L           equ	6	;# 
  3731     0007                     FSR1H           equ	7	;# 
  3732     0008                     BSR             equ	8	;# 
  3733     0009                     WREG            equ	9	;# 
  3734     000A                     PCLATH          equ	10	;# 
  3735     000B                     INTCON          equ	11	;# 
  3736     000C                     PORTA           equ	12	;# 
  3737     000D                     PORTB           equ	13	;# 
  3738     000E                     PORTC           equ	14	;# 
  3739     0010                     PIR0            equ	16	;# 
  3740     0011                     PIR1            equ	17	;# 
  3741     0012                     PIR2            equ	18	;# 
  3742     0013                     PIR3            equ	19	;# 
  3743     0014                     PIR4            equ	20	;# 
  3744     0015                     TMR0L           equ	21	;# 
  3745     0015                     TMR0            equ	21	;# 
  3746     0016                     TMR0H           equ	22	;# 
  3747     0016                     PR0             equ	22	;# 
  3748     0017                     T0CON0          equ	23	;# 
  3749     0018                     T0CON1          equ	24	;# 
  3750     0019                     TMR1            equ	25	;# 
  3751     0019                     TMR1L           equ	25	;# 
  3752     001A                     TMR1H           equ	26	;# 
  3753     001B                     T1CON           equ	27	;# 
  3754     001C                     T1GCON          equ	28	;# 
  3755     001D                     TMR2            equ	29	;# 
  3756     001E                     PR2             equ	30	;# 
  3757     001F                     T2CON           equ	31	;# 
  3758     008C                     TRISA           equ	140	;# 
  3759     008D                     TRISB           equ	141	;# 
  3760     008E                     TRISC           equ	142	;# 
  3761     0090                     PIE0            equ	144	;# 
  3762     0091                     PIE1            equ	145	;# 
  3763     0092                     PIE2            equ	146	;# 
  3764     0093                     PIE3            equ	147	;# 
  3765     0094                     PIE4            equ	148	;# 
  3766     0097                     WDTCON          equ	151	;# 
  3767     009B                     ADRES           equ	155	;# 
  3768     009B                     ADRESL          equ	155	;# 
  3769     009C                     ADRESH          equ	156	;# 
  3770     009D                     ADCON0          equ	157	;# 
  3771     009E                     ADCON1          equ	158	;# 
  3772     009F                     ADACT           equ	159	;# 
  3773     010C                     LATA            equ	268	;# 
  3774     010D                     LATB            equ	269	;# 
  3775     010E                     LATC            equ	270	;# 
  3776     0111                     CM1CON0         equ	273	;# 
  3777     0112                     CM1CON1         equ	274	;# 
  3778     0113                     CM2CON0         equ	275	;# 
  3779     0114                     CM2CON1         equ	276	;# 
  3780     0115                     CMOUT           equ	277	;# 
  3781     0116                     BORCON          equ	278	;# 
  3782     0117                     FVRCON          equ	279	;# 
  3783     0118                     DACCON0         equ	280	;# 
  3784     0119                     DACCON1         equ	281	;# 
  3785     018C                     ANSELA          equ	396	;# 
  3786     018D                     ANSELB          equ	397	;# 
  3787     018E                     ANSELC          equ	398	;# 
  3788     0197                     VREGCON         equ	407	;# 
  3789     0199                     RC1REG          equ	409	;# 
  3790     0199                     RCREG           equ	409	;# 
  3791     0199                     RCREG1          equ	409	;# 
  3792     019A                     TX1REG          equ	410	;# 
  3793     019A                     TXREG1          equ	410	;# 
  3794     019A                     TXREG           equ	410	;# 
  3795     019B                     SP1BRG          equ	411	;# 
  3796     019B                     SPBRG           equ	411	;# 
  3797     019B                     SP1BRGL         equ	411	;# 
  3798     019B                     SPBRG1          equ	411	;# 
  3799     019B                     SPBRGL          equ	411	;# 
  3800     019C                     SP1BRGH         equ	412	;# 
  3801     019C                     SPBRGH          equ	412	;# 
  3802     019C                     SPBRGH1         equ	412	;# 
  3803     019D                     RC1STA          equ	413	;# 
  3804     019D                     RCSTA1          equ	413	;# 
  3805     019D                     RCSTA           equ	413	;# 
  3806     019E                     TX1STA          equ	414	;# 
  3807     019E                     TXSTA1          equ	414	;# 
  3808     019E                     TXSTA           equ	414	;# 
  3809     019F                     BAUD1CON        equ	415	;# 
  3810     019F                     BAUDCON1        equ	415	;# 
  3811     019F                     BAUDCTL1        equ	415	;# 
  3812     019F                     BAUDCON         equ	415	;# 
  3813     019F                     BAUDCTL         equ	415	;# 
  3814     020C                     WPUA            equ	524	;# 
  3815     020D                     WPUB            equ	525	;# 
  3816     020E                     WPUC            equ	526	;# 
  3817     0211                     SSP1BUF         equ	529	;# 
  3818     0211                     SSPBUF          equ	529	;# 
  3819     0212                     SSP1ADD         equ	530	;# 
  3820     0212                     SSPADD          equ	530	;# 
  3821     0213                     SSP1MSK         equ	531	;# 
  3822     0213                     SSPMSK          equ	531	;# 
  3823     0214                     SSP1STAT        equ	532	;# 
  3824     0214                     SSPSTAT         equ	532	;# 
  3825     0215                     SSP1CON1        equ	533	;# 
  3826     0215                     SSPCON          equ	533	;# 
  3827     0215                     SSPCON1         equ	533	;# 
  3828     0215                     SSP1CON         equ	533	;# 
  3829     0216                     SSP1CON2        equ	534	;# 
  3830     0216                     SSPCON2         equ	534	;# 
  3831     0217                     SSP1CON3        equ	535	;# 
  3832     0217                     SSPCON3         equ	535	;# 
  3833     0219                     SSP2BUF         equ	537	;# 
  3834     021A                     SSP2ADD         equ	538	;# 
  3835     021B                     SSP2MSK         equ	539	;# 
  3836     021C                     SSP2STAT        equ	540	;# 
  3837     021D                     SSP2CON1        equ	541	;# 
  3838     021D                     SSP2CON         equ	541	;# 
  3839     021E                     SSP2CON2        equ	542	;# 
  3840     021F                     SSP2CON3        equ	543	;# 
  3841     028C                     ODCONA          equ	652	;# 
  3842     028D                     ODCONB          equ	653	;# 
  3843     028E                     ODCONC          equ	654	;# 
  3844     0291                     CCPR1           equ	657	;# 
  3845     0291                     CCPR1L          equ	657	;# 
  3846     0292                     CCPR1H          equ	658	;# 
  3847     0293                     CCP1CON         equ	659	;# 
  3848     0294                     CCP1CAP         equ	660	;# 
  3849     0295                     CCPR2           equ	661	;# 
  3850     0295                     CCPR2L          equ	661	;# 
  3851     0296                     CCPR2H          equ	662	;# 
  3852     0297                     CCP2CON         equ	663	;# 
  3853     0298                     CCP2CAP         equ	664	;# 
  3854     029F                     CCPTMRS         equ	671	;# 
  3855     030C                     SLRCONA         equ	780	;# 
  3856     030D                     SLRCONB         equ	781	;# 
  3857     030E                     SLRCONC         equ	782	;# 
  3858     0311                     CCPR3           equ	785	;# 
  3859     0311                     CCPR3L          equ	785	;# 
  3860     0312                     CCPR3H          equ	786	;# 
  3861     0313                     CCP3CON         equ	787	;# 
  3862     0314                     CCP3CAP         equ	788	;# 
  3863     0315                     CCPR4           equ	789	;# 
  3864     0315                     CCPR4L          equ	789	;# 
  3865     0316                     CCPR4H          equ	790	;# 
  3866     0317                     CCP4CON         equ	791	;# 
  3867     0318                     CCP4CAP         equ	792	;# 
  3868     038C                     INLVLA          equ	908	;# 
  3869     038D                     INLVLB          equ	909	;# 
  3870     038E                     INLVLC          equ	910	;# 
  3871     0391                     IOCAP           equ	913	;# 
  3872     0392                     IOCAN           equ	914	;# 
  3873     0393                     IOCAF           equ	915	;# 
  3874     0394                     IOCBP           equ	916	;# 
  3875     0395                     IOCBN           equ	917	;# 
  3876     0396                     IOCBF           equ	918	;# 
  3877     0397                     IOCCP           equ	919	;# 
  3878     0398                     IOCCN           equ	920	;# 
  3879     0399                     IOCCF           equ	921	;# 
  3880     039A                     CLKRCON         equ	922	;# 
  3881     039C                     MDCON           equ	924	;# 
  3882     039D                     MDSRC           equ	925	;# 
  3883     039E                     MDCARH          equ	926	;# 
  3884     039F                     MDCARL          equ	927	;# 
  3885     0411                     TMR3            equ	1041	;# 
  3886     0411                     TMR3L           equ	1041	;# 
  3887     0412                     TMR3H           equ	1042	;# 
  3888     0413                     T3CON           equ	1043	;# 
  3889     0414                     T3GCON          equ	1044	;# 
  3890     0415                     TMR4            equ	1045	;# 
  3891     0416                     PR4             equ	1046	;# 
  3892     0417                     T4CON           equ	1047	;# 
  3893     0418                     TMR5            equ	1048	;# 
  3894     0418                     TMR5L           equ	1048	;# 
  3895     0419                     TMR5H           equ	1049	;# 
  3896     041A                     T5CON           equ	1050	;# 
  3897     041B                     T5GCON          equ	1051	;# 
  3898     041C                     TMR6            equ	1052	;# 
  3899     041D                     PR6             equ	1053	;# 
  3900     041E                     T6CON           equ	1054	;# 
  3901     041F                     CCDCON          equ	1055	;# 
  3902     0498                     NCO1ACC         equ	1176	;# 
  3903     0498                     NCO1ACCL        equ	1176	;# 
  3904     0499                     NCO1ACCH        equ	1177	;# 
  3905     049A                     NCO1ACCU        equ	1178	;# 
  3906     049B                     NCO1INC         equ	1179	;# 
  3907     049B                     NCO1INCL        equ	1179	;# 
  3908     049C                     NCO1INCH        equ	1180	;# 
  3909     049D                     NCO1INCU        equ	1181	;# 
  3910     049E                     NCO1CON         equ	1182	;# 
  3911     049F                     NCO1CLK         equ	1183	;# 
  3912     0617                     PWM5DCL         equ	1559	;# 
  3913     0618                     PWM5DCH         equ	1560	;# 
  3914     0619                     PWM5CON         equ	1561	;# 
  3915     0619                     PWM5CON0        equ	1561	;# 
  3916     061A                     PWM6DCL         equ	1562	;# 
  3917     061B                     PWM6DCH         equ	1563	;# 
  3918     061C                     PWM6CON         equ	1564	;# 
  3919     061C                     PWM6CON0        equ	1564	;# 
  3920     061F                     PWMTMRS         equ	1567	;# 
  3921     0691                     CWG1CLKCON      equ	1681	;# 
  3922     0692                     CWG1DAT         equ	1682	;# 
  3923     0693                     CWG1DBR         equ	1683	;# 
  3924     0694                     CWG1DBF         equ	1684	;# 
  3925     0695                     CWG1CON0        equ	1685	;# 
  3926     0696                     CWG1CON1        equ	1686	;# 
  3927     0697                     CWG1AS0         equ	1687	;# 
  3928     0698                     CWG1AS1         equ	1688	;# 
  3929     0699                     CWG1STR         equ	1689	;# 
  3930     0711                     CWG2CLKCON      equ	1809	;# 
  3931     0712                     CWG2DAT         equ	1810	;# 
  3932     0713                     CWG2DBR         equ	1811	;# 
  3933     0714                     CWG2DBF         equ	1812	;# 
  3934     0715                     CWG2CON0        equ	1813	;# 
  3935     0716                     CWG2CON1        equ	1814	;# 
  3936     0717                     CWG2AS0         equ	1815	;# 
  3937     0718                     CWG2AS1         equ	1816	;# 
  3938     0719                     CWG2STR         equ	1817	;# 
  3939     0891                     NVMADR          equ	2193	;# 
  3940     0891                     EEADR           equ	2193	;# 
  3941     0891                     PMADR           equ	2193	;# 
  3942     0891                     NVMADRL         equ	2193	;# 
  3943     0891                     EEADRL          equ	2193	;# 
  3944     0891                     PMADRL          equ	2193	;# 
  3945     0892                     NVMADRH         equ	2194	;# 
  3946     0892                     EEADRH          equ	2194	;# 
  3947     0892                     PMADRH          equ	2194	;# 
  3948     0893                     NVMDAT          equ	2195	;# 
  3949     0893                     EEDAT           equ	2195	;# 
  3950     0893                     PMDAT           equ	2195	;# 
  3951     0893                     NVMDATL         equ	2195	;# 
  3952     0893                     EEDATL          equ	2195	;# 
  3953     0893                     PMDATL          equ	2195	;# 
  3954     0894                     NVMDATH         equ	2196	;# 
  3955     0894                     EEDATH          equ	2196	;# 
  3956     0894                     PMDATH          equ	2196	;# 
  3957     0895                     NVMCON1         equ	2197	;# 
  3958     0895                     EECON1          equ	2197	;# 
  3959     0895                     PMCON1          equ	2197	;# 
  3960     0896                     NVMCON2         equ	2198	;# 
  3961     0896                     EECON2          equ	2198	;# 
  3962     0896                     PMCON2          equ	2198	;# 
  3963     089B                     PCON0           equ	2203	;# 
  3964     0911                     PMD0            equ	2321	;# 
  3965     0912                     PMD1            equ	2322	;# 
  3966     0913                     PMD2            equ	2323	;# 
  3967     0914                     PMD3            equ	2324	;# 
  3968     0915                     PMD4            equ	2325	;# 
  3969     0916                     PMD5            equ	2326	;# 
  3970     0918                     CPUDOZE         equ	2328	;# 
  3971     0919                     OSCCON1         equ	2329	;# 
  3972     091A                     OSCCON2         equ	2330	;# 
  3973     091B                     OSCCON3         equ	2331	;# 
  3974     091C                     OSCSTAT1        equ	2332	;# 
  3975     091D                     OSCEN           equ	2333	;# 
  3976     091E                     OSCTUNE         equ	2334	;# 
  3977     091F                     OSCFRQ          equ	2335	;# 
  3978     0E0F                     PPSLOCK         equ	3599	;# 
  3979     0E10                     INTPPS          equ	3600	;# 
  3980     0E11                     T0CKIPPS        equ	3601	;# 
  3981     0E12                     T1CKIPPS        equ	3602	;# 
  3982     0E13                     T1GPPS          equ	3603	;# 
  3983     0E14                     CCP1PPS         equ	3604	;# 
  3984     0E15                     CCP2PPS         equ	3605	;# 
  3985     0E16                     CCP3PPS         equ	3606	;# 
  3986     0E17                     CCP4PPS         equ	3607	;# 
  3987     0E18                     CWG1PPS         equ	3608	;# 
  3988     0E19                     CWG2PPS         equ	3609	;# 
  3989     0E1A                     MDCIN1PPS       equ	3610	;# 
  3990     0E1B                     MDCIN2PPS       equ	3611	;# 
  3991     0E1C                     MDMINPPS        equ	3612	;# 
  3992     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3993     0E1E                     SSP2DATPPS      equ	3614	;# 
  3994     0E1F                     SSP2SSPPS       equ	3615	;# 
  3995     0E20                     SSP1CLKPPS      equ	3616	;# 
  3996     0E21                     SSP1DATPPS      equ	3617	;# 
  3997     0E22                     SSP1SSPPS       equ	3618	;# 
  3998     0E24                     RXPPS           equ	3620	;# 
  3999     0E25                     TXPPS           equ	3621	;# 
  4000     0E28                     CLCIN0PPS       equ	3624	;# 
  4001     0E29                     CLCIN1PPS       equ	3625	;# 
  4002     0E2A                     CLCIN2PPS       equ	3626	;# 
  4003     0E2B                     CLCIN3PPS       equ	3627	;# 
  4004     0E2C                     T3CKIPPS        equ	3628	;# 
  4005     0E2D                     T3GPPS          equ	3629	;# 
  4006     0E2E                     T5CKIPPS        equ	3630	;# 
  4007     0E2F                     T5GPPS          equ	3631	;# 
  4008     0E90                     RA0PPS          equ	3728	;# 
  4009     0E91                     RA1PPS          equ	3729	;# 
  4010     0E92                     RA2PPS          equ	3730	;# 
  4011     0E94                     RA4PPS          equ	3732	;# 
  4012     0E95                     RA5PPS          equ	3733	;# 
  4013     0E9C                     RB4PPS          equ	3740	;# 
  4014     0E9D                     RB5PPS          equ	3741	;# 
  4015     0E9E                     RB6PPS          equ	3742	;# 
  4016     0E9F                     RB7PPS          equ	3743	;# 
  4017     0EA0                     RC0PPS          equ	3744	;# 
  4018     0EA1                     RC1PPS          equ	3745	;# 
  4019     0EA2                     RC2PPS          equ	3746	;# 
  4020     0EA3                     RC3PPS          equ	3747	;# 
  4021     0EA4                     RC4PPS          equ	3748	;# 
  4022     0EA5                     RC5PPS          equ	3749	;# 
  4023     0EA6                     RC6PPS          equ	3750	;# 
  4024     0EA7                     RC7PPS          equ	3751	;# 
  4025     0F0F                     CLCDATA         equ	3855	;# 
  4026     0F10                     CLC1CON         equ	3856	;# 
  4027     0F11                     CLC1POL         equ	3857	;# 
  4028     0F12                     CLC1SEL0        equ	3858	;# 
  4029     0F13                     CLC1SEL1        equ	3859	;# 
  4030     0F14                     CLC1SEL2        equ	3860	;# 
  4031     0F15                     CLC1SEL3        equ	3861	;# 
  4032     0F16                     CLC1GLS0        equ	3862	;# 
  4033     0F17                     CLC1GLS1        equ	3863	;# 
  4034     0F18                     CLC1GLS2        equ	3864	;# 
  4035     0F19                     CLC1GLS3        equ	3865	;# 
  4036     0F1A                     CLC2CON         equ	3866	;# 
  4037     0F1B                     CLC2POL         equ	3867	;# 
  4038     0F1C                     CLC2SEL0        equ	3868	;# 
  4039     0F1D                     CLC2SEL1        equ	3869	;# 
  4040     0F1E                     CLC2SEL2        equ	3870	;# 
  4041     0F1F                     CLC2SEL3        equ	3871	;# 
  4042     0F20                     CLC2GLS0        equ	3872	;# 
  4043     0F21                     CLC2GLS1        equ	3873	;# 
  4044     0F22                     CLC2GLS2        equ	3874	;# 
  4045     0F23                     CLC2GLS3        equ	3875	;# 
  4046     0F24                     CLC3CON         equ	3876	;# 
  4047     0F25                     CLC3POL         equ	3877	;# 
  4048     0F26                     CLC3SEL0        equ	3878	;# 
  4049     0F27                     CLC3SEL1        equ	3879	;# 
  4050     0F28                     CLC3SEL2        equ	3880	;# 
  4051     0F29                     CLC3SEL3        equ	3881	;# 
  4052     0F2A                     CLC3GLS0        equ	3882	;# 
  4053     0F2B                     CLC3GLS1        equ	3883	;# 
  4054     0F2C                     CLC3GLS2        equ	3884	;# 
  4055     0F2D                     CLC3GLS3        equ	3885	;# 
  4056     0F2E                     CLC4CON         equ	3886	;# 
  4057     0F2F                     CLC4POL         equ	3887	;# 
  4058     0F30                     CLC4SEL0        equ	3888	;# 
  4059     0F31                     CLC4SEL1        equ	3889	;# 
  4060     0F32                     CLC4SEL2        equ	3890	;# 
  4061     0F33                     CLC4SEL3        equ	3891	;# 
  4062     0F34                     CLC4GLS0        equ	3892	;# 
  4063     0F35                     CLC4GLS1        equ	3893	;# 
  4064     0F36                     CLC4GLS2        equ	3894	;# 
  4065     0F37                     CLC4GLS3        equ	3895	;# 
  4066     0FE4                     STATUS_SHAD     equ	4068	;# 
  4067     0FE5                     WREG_SHAD       equ	4069	;# 
  4068     0FE6                     BSR_SHAD        equ	4070	;# 
  4069     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4070     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4071     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4072     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4073     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4074     0FED                     STKPTR          equ	4077	;# 
  4075     0FEE                     TOSL            equ	4078	;# 
  4076     0FEF                     TOSH            equ	4079	;# 
  4077     0000                     INDF0           equ	0	;# 
  4078     0001                     INDF1           equ	1	;# 
  4079     0002                     PCL             equ	2	;# 
  4080     0003                     STATUS          equ	3	;# 
  4081     0004                     FSR0L           equ	4	;# 
  4082     0005                     FSR0H           equ	5	;# 
  4083     0006                     FSR1L           equ	6	;# 
  4084     0007                     FSR1H           equ	7	;# 
  4085     0008                     BSR             equ	8	;# 
  4086     0009                     WREG            equ	9	;# 
  4087     000A                     PCLATH          equ	10	;# 
  4088     000B                     INTCON          equ	11	;# 
  4089     000C                     PORTA           equ	12	;# 
  4090     000D                     PORTB           equ	13	;# 
  4091     000E                     PORTC           equ	14	;# 
  4092     0010                     PIR0            equ	16	;# 
  4093     0011                     PIR1            equ	17	;# 
  4094     0012                     PIR2            equ	18	;# 
  4095     0013                     PIR3            equ	19	;# 
  4096     0014                     PIR4            equ	20	;# 
  4097     0015                     TMR0L           equ	21	;# 
  4098     0015                     TMR0            equ	21	;# 
  4099     0016                     TMR0H           equ	22	;# 
  4100     0016                     PR0             equ	22	;# 
  4101     0017                     T0CON0          equ	23	;# 
  4102     0018                     T0CON1          equ	24	;# 
  4103     0019                     TMR1            equ	25	;# 
  4104     0019                     TMR1L           equ	25	;# 
  4105     001A                     TMR1H           equ	26	;# 
  4106     001B                     T1CON           equ	27	;# 
  4107     001C                     T1GCON          equ	28	;# 
  4108     001D                     TMR2            equ	29	;# 
  4109     001E                     PR2             equ	30	;# 
  4110     001F                     T2CON           equ	31	;# 
  4111     008C                     TRISA           equ	140	;# 
  4112     008D                     TRISB           equ	141	;# 
  4113     008E                     TRISC           equ	142	;# 
  4114     0090                     PIE0            equ	144	;# 
  4115     0091                     PIE1            equ	145	;# 
  4116     0092                     PIE2            equ	146	;# 
  4117     0093                     PIE3            equ	147	;# 
  4118     0094                     PIE4            equ	148	;# 
  4119     0097                     WDTCON          equ	151	;# 
  4120     009B                     ADRES           equ	155	;# 
  4121     009B                     ADRESL          equ	155	;# 
  4122     009C                     ADRESH          equ	156	;# 
  4123     009D                     ADCON0          equ	157	;# 
  4124     009E                     ADCON1          equ	158	;# 
  4125     009F                     ADACT           equ	159	;# 
  4126     010C                     LATA            equ	268	;# 
  4127     010D                     LATB            equ	269	;# 
  4128     010E                     LATC            equ	270	;# 
  4129     0111                     CM1CON0         equ	273	;# 
  4130     0112                     CM1CON1         equ	274	;# 
  4131     0113                     CM2CON0         equ	275	;# 
  4132     0114                     CM2CON1         equ	276	;# 
  4133     0115                     CMOUT           equ	277	;# 
  4134     0116                     BORCON          equ	278	;# 
  4135     0117                     FVRCON          equ	279	;# 
  4136     0118                     DACCON0         equ	280	;# 
  4137     0119                     DACCON1         equ	281	;# 
  4138     018C                     ANSELA          equ	396	;# 
  4139     018D                     ANSELB          equ	397	;# 
  4140     018E                     ANSELC          equ	398	;# 
  4141     0197                     VREGCON         equ	407	;# 
  4142     0199                     RC1REG          equ	409	;# 
  4143     0199                     RCREG           equ	409	;# 
  4144     0199                     RCREG1          equ	409	;# 
  4145     019A                     TX1REG          equ	410	;# 
  4146     019A                     TXREG1          equ	410	;# 
  4147     019A                     TXREG           equ	410	;# 
  4148     019B                     SP1BRG          equ	411	;# 
  4149     019B                     SPBRG           equ	411	;# 
  4150     019B                     SP1BRGL         equ	411	;# 
  4151     019B                     SPBRG1          equ	411	;# 
  4152     019B                     SPBRGL          equ	411	;# 
  4153     019C                     SP1BRGH         equ	412	;# 
  4154     019C                     SPBRGH          equ	412	;# 
  4155     019C                     SPBRGH1         equ	412	;# 
  4156     019D                     RC1STA          equ	413	;# 
  4157     019D                     RCSTA1          equ	413	;# 
  4158     019D                     RCSTA           equ	413	;# 
  4159     019E                     TX1STA          equ	414	;# 
  4160     019E                     TXSTA1          equ	414	;# 
  4161     019E                     TXSTA           equ	414	;# 
  4162     019F                     BAUD1CON        equ	415	;# 
  4163     019F                     BAUDCON1        equ	415	;# 
  4164     019F                     BAUDCTL1        equ	415	;# 
  4165     019F                     BAUDCON         equ	415	;# 
  4166     019F                     BAUDCTL         equ	415	;# 
  4167     020C                     WPUA            equ	524	;# 
  4168     020D                     WPUB            equ	525	;# 
  4169     020E                     WPUC            equ	526	;# 
  4170     0211                     SSP1BUF         equ	529	;# 
  4171     0211                     SSPBUF          equ	529	;# 
  4172     0212                     SSP1ADD         equ	530	;# 
  4173     0212                     SSPADD          equ	530	;# 
  4174     0213                     SSP1MSK         equ	531	;# 
  4175     0213                     SSPMSK          equ	531	;# 
  4176     0214                     SSP1STAT        equ	532	;# 
  4177     0214                     SSPSTAT         equ	532	;# 
  4178     0215                     SSP1CON1        equ	533	;# 
  4179     0215                     SSPCON          equ	533	;# 
  4180     0215                     SSPCON1         equ	533	;# 
  4181     0215                     SSP1CON         equ	533	;# 
  4182     0216                     SSP1CON2        equ	534	;# 
  4183     0216                     SSPCON2         equ	534	;# 
  4184     0217                     SSP1CON3        equ	535	;# 
  4185     0217                     SSPCON3         equ	535	;# 
  4186     0219                     SSP2BUF         equ	537	;# 
  4187     021A                     SSP2ADD         equ	538	;# 
  4188     021B                     SSP2MSK         equ	539	;# 
  4189     021C                     SSP2STAT        equ	540	;# 
  4190     021D                     SSP2CON1        equ	541	;# 
  4191     021D                     SSP2CON         equ	541	;# 
  4192     021E                     SSP2CON2        equ	542	;# 
  4193     021F                     SSP2CON3        equ	543	;# 
  4194     028C                     ODCONA          equ	652	;# 
  4195     028D                     ODCONB          equ	653	;# 
  4196     028E                     ODCONC          equ	654	;# 
  4197     0291                     CCPR1           equ	657	;# 
  4198     0291                     CCPR1L          equ	657	;# 
  4199     0292                     CCPR1H          equ	658	;# 
  4200     0293                     CCP1CON         equ	659	;# 
  4201     0294                     CCP1CAP         equ	660	;# 
  4202     0295                     CCPR2           equ	661	;# 
  4203     0295                     CCPR2L          equ	661	;# 
  4204     0296                     CCPR2H          equ	662	;# 
  4205     0297                     CCP2CON         equ	663	;# 
  4206     0298                     CCP2CAP         equ	664	;# 
  4207     029F                     CCPTMRS         equ	671	;# 
  4208     030C                     SLRCONA         equ	780	;# 
  4209     030D                     SLRCONB         equ	781	;# 
  4210     030E                     SLRCONC         equ	782	;# 
  4211     0311                     CCPR3           equ	785	;# 
  4212     0311                     CCPR3L          equ	785	;# 
  4213     0312                     CCPR3H          equ	786	;# 
  4214     0313                     CCP3CON         equ	787	;# 
  4215     0314                     CCP3CAP         equ	788	;# 
  4216     0315                     CCPR4           equ	789	;# 
  4217     0315                     CCPR4L          equ	789	;# 
  4218     0316                     CCPR4H          equ	790	;# 
  4219     0317                     CCP4CON         equ	791	;# 
  4220     0318                     CCP4CAP         equ	792	;# 
  4221     038C                     INLVLA          equ	908	;# 
  4222     038D                     INLVLB          equ	909	;# 
  4223     038E                     INLVLC          equ	910	;# 
  4224     0391                     IOCAP           equ	913	;# 
  4225     0392                     IOCAN           equ	914	;# 
  4226     0393                     IOCAF           equ	915	;# 
  4227     0394                     IOCBP           equ	916	;# 
  4228     0395                     IOCBN           equ	917	;# 
  4229     0396                     IOCBF           equ	918	;# 
  4230     0397                     IOCCP           equ	919	;# 
  4231     0398                     IOCCN           equ	920	;# 
  4232     0399                     IOCCF           equ	921	;# 
  4233     039A                     CLKRCON         equ	922	;# 
  4234     039C                     MDCON           equ	924	;# 
  4235     039D                     MDSRC           equ	925	;# 
  4236     039E                     MDCARH          equ	926	;# 
  4237     039F                     MDCARL          equ	927	;# 
  4238     0411                     TMR3            equ	1041	;# 
  4239     0411                     TMR3L           equ	1041	;# 
  4240     0412                     TMR3H           equ	1042	;# 
  4241     0413                     T3CON           equ	1043	;# 
  4242     0414                     T3GCON          equ	1044	;# 
  4243     0415                     TMR4            equ	1045	;# 
  4244     0416                     PR4             equ	1046	;# 
  4245     0417                     T4CON           equ	1047	;# 
  4246     0418                     TMR5            equ	1048	;# 
  4247     0418                     TMR5L           equ	1048	;# 
  4248     0419                     TMR5H           equ	1049	;# 
  4249     041A                     T5CON           equ	1050	;# 
  4250     041B                     T5GCON          equ	1051	;# 
  4251     041C                     TMR6            equ	1052	;# 
  4252     041D                     PR6             equ	1053	;# 
  4253     041E                     T6CON           equ	1054	;# 
  4254     041F                     CCDCON          equ	1055	;# 
  4255     0498                     NCO1ACC         equ	1176	;# 
  4256     0498                     NCO1ACCL        equ	1176	;# 
  4257     0499                     NCO1ACCH        equ	1177	;# 
  4258     049A                     NCO1ACCU        equ	1178	;# 
  4259     049B                     NCO1INC         equ	1179	;# 
  4260     049B                     NCO1INCL        equ	1179	;# 
  4261     049C                     NCO1INCH        equ	1180	;# 
  4262     049D                     NCO1INCU        equ	1181	;# 
  4263     049E                     NCO1CON         equ	1182	;# 
  4264     049F                     NCO1CLK         equ	1183	;# 
  4265     0617                     PWM5DCL         equ	1559	;# 
  4266     0618                     PWM5DCH         equ	1560	;# 
  4267     0619                     PWM5CON         equ	1561	;# 
  4268     0619                     PWM5CON0        equ	1561	;# 
  4269     061A                     PWM6DCL         equ	1562	;# 
  4270     061B                     PWM6DCH         equ	1563	;# 
  4271     061C                     PWM6CON         equ	1564	;# 
  4272     061C                     PWM6CON0        equ	1564	;# 
  4273     061F                     PWMTMRS         equ	1567	;# 
  4274     0691                     CWG1CLKCON      equ	1681	;# 
  4275     0692                     CWG1DAT         equ	1682	;# 
  4276     0693                     CWG1DBR         equ	1683	;# 
  4277     0694                     CWG1DBF         equ	1684	;# 
  4278     0695                     CWG1CON0        equ	1685	;# 
  4279     0696                     CWG1CON1        equ	1686	;# 
  4280     0697                     CWG1AS0         equ	1687	;# 
  4281     0698                     CWG1AS1         equ	1688	;# 
  4282     0699                     CWG1STR         equ	1689	;# 
  4283     0711                     CWG2CLKCON      equ	1809	;# 
  4284     0712                     CWG2DAT         equ	1810	;# 
  4285     0713                     CWG2DBR         equ	1811	;# 
  4286     0714                     CWG2DBF         equ	1812	;# 
  4287     0715                     CWG2CON0        equ	1813	;# 
  4288     0716                     CWG2CON1        equ	1814	;# 
  4289     0717                     CWG2AS0         equ	1815	;# 
  4290     0718                     CWG2AS1         equ	1816	;# 
  4291     0719                     CWG2STR         equ	1817	;# 
  4292     0891                     NVMADR          equ	2193	;# 
  4293     0891                     EEADR           equ	2193	;# 
  4294     0891                     PMADR           equ	2193	;# 
  4295     0891                     NVMADRL         equ	2193	;# 
  4296     0891                     EEADRL          equ	2193	;# 
  4297     0891                     PMADRL          equ	2193	;# 
  4298     0892                     NVMADRH         equ	2194	;# 
  4299     0892                     EEADRH          equ	2194	;# 
  4300     0892                     PMADRH          equ	2194	;# 
  4301     0893                     NVMDAT          equ	2195	;# 
  4302     0893                     EEDAT           equ	2195	;# 
  4303     0893                     PMDAT           equ	2195	;# 
  4304     0893                     NVMDATL         equ	2195	;# 
  4305     0893                     EEDATL          equ	2195	;# 
  4306     0893                     PMDATL          equ	2195	;# 
  4307     0894                     NVMDATH         equ	2196	;# 
  4308     0894                     EEDATH          equ	2196	;# 
  4309     0894                     PMDATH          equ	2196	;# 
  4310     0895                     NVMCON1         equ	2197	;# 
  4311     0895                     EECON1          equ	2197	;# 
  4312     0895                     PMCON1          equ	2197	;# 
  4313     0896                     NVMCON2         equ	2198	;# 
  4314     0896                     EECON2          equ	2198	;# 
  4315     0896                     PMCON2          equ	2198	;# 
  4316     089B                     PCON0           equ	2203	;# 
  4317     0911                     PMD0            equ	2321	;# 
  4318     0912                     PMD1            equ	2322	;# 
  4319     0913                     PMD2            equ	2323	;# 
  4320     0914                     PMD3            equ	2324	;# 
  4321     0915                     PMD4            equ	2325	;# 
  4322     0916                     PMD5            equ	2326	;# 
  4323     0918                     CPUDOZE         equ	2328	;# 
  4324     0919                     OSCCON1         equ	2329	;# 
  4325     091A                     OSCCON2         equ	2330	;# 
  4326     091B                     OSCCON3         equ	2331	;# 
  4327     091C                     OSCSTAT1        equ	2332	;# 
  4328     091D                     OSCEN           equ	2333	;# 
  4329     091E                     OSCTUNE         equ	2334	;# 
  4330     091F                     OSCFRQ          equ	2335	;# 
  4331     0E0F                     PPSLOCK         equ	3599	;# 
  4332     0E10                     INTPPS          equ	3600	;# 
  4333     0E11                     T0CKIPPS        equ	3601	;# 
  4334     0E12                     T1CKIPPS        equ	3602	;# 
  4335     0E13                     T1GPPS          equ	3603	;# 
  4336     0E14                     CCP1PPS         equ	3604	;# 
  4337     0E15                     CCP2PPS         equ	3605	;# 
  4338     0E16                     CCP3PPS         equ	3606	;# 
  4339     0E17                     CCP4PPS         equ	3607	;# 
  4340     0E18                     CWG1PPS         equ	3608	;# 
  4341     0E19                     CWG2PPS         equ	3609	;# 
  4342     0E1A                     MDCIN1PPS       equ	3610	;# 
  4343     0E1B                     MDCIN2PPS       equ	3611	;# 
  4344     0E1C                     MDMINPPS        equ	3612	;# 
  4345     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4346     0E1E                     SSP2DATPPS      equ	3614	;# 
  4347     0E1F                     SSP2SSPPS       equ	3615	;# 
  4348     0E20                     SSP1CLKPPS      equ	3616	;# 
  4349     0E21                     SSP1DATPPS      equ	3617	;# 
  4350     0E22                     SSP1SSPPS       equ	3618	;# 
  4351     0E24                     RXPPS           equ	3620	;# 
  4352     0E25                     TXPPS           equ	3621	;# 
  4353     0E28                     CLCIN0PPS       equ	3624	;# 
  4354     0E29                     CLCIN1PPS       equ	3625	;# 
  4355     0E2A                     CLCIN2PPS       equ	3626	;# 
  4356     0E2B                     CLCIN3PPS       equ	3627	;# 
  4357     0E2C                     T3CKIPPS        equ	3628	;# 
  4358     0E2D                     T3GPPS          equ	3629	;# 
  4359     0E2E                     T5CKIPPS        equ	3630	;# 
  4360     0E2F                     T5GPPS          equ	3631	;# 
  4361     0E90                     RA0PPS          equ	3728	;# 
  4362     0E91                     RA1PPS          equ	3729	;# 
  4363     0E92                     RA2PPS          equ	3730	;# 
  4364     0E94                     RA4PPS          equ	3732	;# 
  4365     0E95                     RA5PPS          equ	3733	;# 
  4366     0E9C                     RB4PPS          equ	3740	;# 
  4367     0E9D                     RB5PPS          equ	3741	;# 
  4368     0E9E                     RB6PPS          equ	3742	;# 
  4369     0E9F                     RB7PPS          equ	3743	;# 
  4370     0EA0                     RC0PPS          equ	3744	;# 
  4371     0EA1                     RC1PPS          equ	3745	;# 
  4372     0EA2                     RC2PPS          equ	3746	;# 
  4373     0EA3                     RC3PPS          equ	3747	;# 
  4374     0EA4                     RC4PPS          equ	3748	;# 
  4375     0EA5                     RC5PPS          equ	3749	;# 
  4376     0EA6                     RC6PPS          equ	3750	;# 
  4377     0EA7                     RC7PPS          equ	3751	;# 
  4378     0F0F                     CLCDATA         equ	3855	;# 
  4379     0F10                     CLC1CON         equ	3856	;# 
  4380     0F11                     CLC1POL         equ	3857	;# 
  4381     0F12                     CLC1SEL0        equ	3858	;# 
  4382     0F13                     CLC1SEL1        equ	3859	;# 
  4383     0F14                     CLC1SEL2        equ	3860	;# 
  4384     0F15                     CLC1SEL3        equ	3861	;# 
  4385     0F16                     CLC1GLS0        equ	3862	;# 
  4386     0F17                     CLC1GLS1        equ	3863	;# 
  4387     0F18                     CLC1GLS2        equ	3864	;# 
  4388     0F19                     CLC1GLS3        equ	3865	;# 
  4389     0F1A                     CLC2CON         equ	3866	;# 
  4390     0F1B                     CLC2POL         equ	3867	;# 
  4391     0F1C                     CLC2SEL0        equ	3868	;# 
  4392     0F1D                     CLC2SEL1        equ	3869	;# 
  4393     0F1E                     CLC2SEL2        equ	3870	;# 
  4394     0F1F                     CLC2SEL3        equ	3871	;# 
  4395     0F20                     CLC2GLS0        equ	3872	;# 
  4396     0F21                     CLC2GLS1        equ	3873	;# 
  4397     0F22                     CLC2GLS2        equ	3874	;# 
  4398     0F23                     CLC2GLS3        equ	3875	;# 
  4399     0F24                     CLC3CON         equ	3876	;# 
  4400     0F25                     CLC3POL         equ	3877	;# 
  4401     0F26                     CLC3SEL0        equ	3878	;# 
  4402     0F27                     CLC3SEL1        equ	3879	;# 
  4403     0F28                     CLC3SEL2        equ	3880	;# 
  4404     0F29                     CLC3SEL3        equ	3881	;# 
  4405     0F2A                     CLC3GLS0        equ	3882	;# 
  4406     0F2B                     CLC3GLS1        equ	3883	;# 
  4407     0F2C                     CLC3GLS2        equ	3884	;# 
  4408     0F2D                     CLC3GLS3        equ	3885	;# 
  4409     0F2E                     CLC4CON         equ	3886	;# 
  4410     0F2F                     CLC4POL         equ	3887	;# 
  4411     0F30                     CLC4SEL0        equ	3888	;# 
  4412     0F31                     CLC4SEL1        equ	3889	;# 
  4413     0F32                     CLC4SEL2        equ	3890	;# 
  4414     0F33                     CLC4SEL3        equ	3891	;# 
  4415     0F34                     CLC4GLS0        equ	3892	;# 
  4416     0F35                     CLC4GLS1        equ	3893	;# 
  4417     0F36                     CLC4GLS2        equ	3894	;# 
  4418     0F37                     CLC4GLS3        equ	3895	;# 
  4419     0FE4                     STATUS_SHAD     equ	4068	;# 
  4420     0FE5                     WREG_SHAD       equ	4069	;# 
  4421     0FE6                     BSR_SHAD        equ	4070	;# 
  4422     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4423     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4424     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4425     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4426     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4427     0FED                     STKPTR          equ	4077	;# 
  4428     0FEE                     TOSL            equ	4078	;# 
  4429     0FEF                     TOSH            equ	4079	;# 
  4430     0000                     INDF0           equ	0	;# 
  4431     0001                     INDF1           equ	1	;# 
  4432     0002                     PCL             equ	2	;# 
  4433     0003                     STATUS          equ	3	;# 
  4434     0004                     FSR0L           equ	4	;# 
  4435     0005                     FSR0H           equ	5	;# 
  4436     0006                     FSR1L           equ	6	;# 
  4437     0007                     FSR1H           equ	7	;# 
  4438     0008                     BSR             equ	8	;# 
  4439     0009                     WREG            equ	9	;# 
  4440     000A                     PCLATH          equ	10	;# 
  4441     000B                     INTCON          equ	11	;# 
  4442     000C                     PORTA           equ	12	;# 
  4443     000D                     PORTB           equ	13	;# 
  4444     000E                     PORTC           equ	14	;# 
  4445     0010                     PIR0            equ	16	;# 
  4446     0011                     PIR1            equ	17	;# 
  4447     0012                     PIR2            equ	18	;# 
  4448     0013                     PIR3            equ	19	;# 
  4449     0014                     PIR4            equ	20	;# 
  4450     0015                     TMR0L           equ	21	;# 
  4451     0015                     TMR0            equ	21	;# 
  4452     0016                     TMR0H           equ	22	;# 
  4453     0016                     PR0             equ	22	;# 
  4454     0017                     T0CON0          equ	23	;# 
  4455     0018                     T0CON1          equ	24	;# 
  4456     0019                     TMR1            equ	25	;# 
  4457     0019                     TMR1L           equ	25	;# 
  4458     001A                     TMR1H           equ	26	;# 
  4459     001B                     T1CON           equ	27	;# 
  4460     001C                     T1GCON          equ	28	;# 
  4461     001D                     TMR2            equ	29	;# 
  4462     001E                     PR2             equ	30	;# 
  4463     001F                     T2CON           equ	31	;# 
  4464     008C                     TRISA           equ	140	;# 
  4465     008D                     TRISB           equ	141	;# 
  4466     008E                     TRISC           equ	142	;# 
  4467     0090                     PIE0            equ	144	;# 
  4468     0091                     PIE1            equ	145	;# 
  4469     0092                     PIE2            equ	146	;# 
  4470     0093                     PIE3            equ	147	;# 
  4471     0094                     PIE4            equ	148	;# 
  4472     0097                     WDTCON          equ	151	;# 
  4473     009B                     ADRES           equ	155	;# 
  4474     009B                     ADRESL          equ	155	;# 
  4475     009C                     ADRESH          equ	156	;# 
  4476     009D                     ADCON0          equ	157	;# 
  4477     009E                     ADCON1          equ	158	;# 
  4478     009F                     ADACT           equ	159	;# 
  4479     010C                     LATA            equ	268	;# 
  4480     010D                     LATB            equ	269	;# 
  4481     010E                     LATC            equ	270	;# 
  4482     0111                     CM1CON0         equ	273	;# 
  4483     0112                     CM1CON1         equ	274	;# 
  4484     0113                     CM2CON0         equ	275	;# 
  4485     0114                     CM2CON1         equ	276	;# 
  4486     0115                     CMOUT           equ	277	;# 
  4487     0116                     BORCON          equ	278	;# 
  4488     0117                     FVRCON          equ	279	;# 
  4489     0118                     DACCON0         equ	280	;# 
  4490     0119                     DACCON1         equ	281	;# 
  4491     018C                     ANSELA          equ	396	;# 
  4492     018D                     ANSELB          equ	397	;# 
  4493     018E                     ANSELC          equ	398	;# 
  4494     0197                     VREGCON         equ	407	;# 
  4495     0199                     RC1REG          equ	409	;# 
  4496     0199                     RCREG           equ	409	;# 
  4497     0199                     RCREG1          equ	409	;# 
  4498     019A                     TX1REG          equ	410	;# 
  4499     019A                     TXREG1          equ	410	;# 
  4500     019A                     TXREG           equ	410	;# 
  4501     019B                     SP1BRG          equ	411	;# 
  4502     019B                     SPBRG           equ	411	;# 
  4503     019B                     SP1BRGL         equ	411	;# 
  4504     019B                     SPBRG1          equ	411	;# 
  4505     019B                     SPBRGL          equ	411	;# 
  4506     019C                     SP1BRGH         equ	412	;# 
  4507     019C                     SPBRGH          equ	412	;# 
  4508     019C                     SPBRGH1         equ	412	;# 
  4509     019D                     RC1STA          equ	413	;# 
  4510     019D                     RCSTA1          equ	413	;# 
  4511     019D                     RCSTA           equ	413	;# 
  4512     019E                     TX1STA          equ	414	;# 
  4513     019E                     TXSTA1          equ	414	;# 
  4514     019E                     TXSTA           equ	414	;# 
  4515     019F                     BAUD1CON        equ	415	;# 
  4516     019F                     BAUDCON1        equ	415	;# 
  4517     019F                     BAUDCTL1        equ	415	;# 
  4518     019F                     BAUDCON         equ	415	;# 
  4519     019F                     BAUDCTL         equ	415	;# 
  4520     020C                     WPUA            equ	524	;# 
  4521     020D                     WPUB            equ	525	;# 
  4522     020E                     WPUC            equ	526	;# 
  4523     0211                     SSP1BUF         equ	529	;# 
  4524     0211                     SSPBUF          equ	529	;# 
  4525     0212                     SSP1ADD         equ	530	;# 
  4526     0212                     SSPADD          equ	530	;# 
  4527     0213                     SSP1MSK         equ	531	;# 
  4528     0213                     SSPMSK          equ	531	;# 
  4529     0214                     SSP1STAT        equ	532	;# 
  4530     0214                     SSPSTAT         equ	532	;# 
  4531     0215                     SSP1CON1        equ	533	;# 
  4532     0215                     SSPCON          equ	533	;# 
  4533     0215                     SSPCON1         equ	533	;# 
  4534     0215                     SSP1CON         equ	533	;# 
  4535     0216                     SSP1CON2        equ	534	;# 
  4536     0216                     SSPCON2         equ	534	;# 
  4537     0217                     SSP1CON3        equ	535	;# 
  4538     0217                     SSPCON3         equ	535	;# 
  4539     0219                     SSP2BUF         equ	537	;# 
  4540     021A                     SSP2ADD         equ	538	;# 
  4541     021B                     SSP2MSK         equ	539	;# 
  4542     021C                     SSP2STAT        equ	540	;# 
  4543     021D                     SSP2CON1        equ	541	;# 
  4544     021D                     SSP2CON         equ	541	;# 
  4545     021E                     SSP2CON2        equ	542	;# 
  4546     021F                     SSP2CON3        equ	543	;# 
  4547     028C                     ODCONA          equ	652	;# 
  4548     028D                     ODCONB          equ	653	;# 
  4549     028E                     ODCONC          equ	654	;# 
  4550     0291                     CCPR1           equ	657	;# 
  4551     0291                     CCPR1L          equ	657	;# 
  4552     0292                     CCPR1H          equ	658	;# 
  4553     0293                     CCP1CON         equ	659	;# 
  4554     0294                     CCP1CAP         equ	660	;# 
  4555     0295                     CCPR2           equ	661	;# 
  4556     0295                     CCPR2L          equ	661	;# 
  4557     0296                     CCPR2H          equ	662	;# 
  4558     0297                     CCP2CON         equ	663	;# 
  4559     0298                     CCP2CAP         equ	664	;# 
  4560     029F                     CCPTMRS         equ	671	;# 
  4561     030C                     SLRCONA         equ	780	;# 
  4562     030D                     SLRCONB         equ	781	;# 
  4563     030E                     SLRCONC         equ	782	;# 
  4564     0311                     CCPR3           equ	785	;# 
  4565     0311                     CCPR3L          equ	785	;# 
  4566     0312                     CCPR3H          equ	786	;# 
  4567     0313                     CCP3CON         equ	787	;# 
  4568     0314                     CCP3CAP         equ	788	;# 
  4569     0315                     CCPR4           equ	789	;# 
  4570     0315                     CCPR4L          equ	789	;# 
  4571     0316                     CCPR4H          equ	790	;# 
  4572     0317                     CCP4CON         equ	791	;# 
  4573     0318                     CCP4CAP         equ	792	;# 
  4574     038C                     INLVLA          equ	908	;# 
  4575     038D                     INLVLB          equ	909	;# 
  4576     038E                     INLVLC          equ	910	;# 
  4577     0391                     IOCAP           equ	913	;# 
  4578     0392                     IOCAN           equ	914	;# 
  4579     0393                     IOCAF           equ	915	;# 
  4580     0394                     IOCBP           equ	916	;# 
  4581     0395                     IOCBN           equ	917	;# 
  4582     0396                     IOCBF           equ	918	;# 
  4583     0397                     IOCCP           equ	919	;# 
  4584     0398                     IOCCN           equ	920	;# 
  4585     0399                     IOCCF           equ	921	;# 
  4586     039A                     CLKRCON         equ	922	;# 
  4587     039C                     MDCON           equ	924	;# 
  4588     039D                     MDSRC           equ	925	;# 
  4589     039E                     MDCARH          equ	926	;# 
  4590     039F                     MDCARL          equ	927	;# 
  4591     0411                     TMR3            equ	1041	;# 
  4592     0411                     TMR3L           equ	1041	;# 
  4593     0412                     TMR3H           equ	1042	;# 
  4594     0413                     T3CON           equ	1043	;# 
  4595     0414                     T3GCON          equ	1044	;# 
  4596     0415                     TMR4            equ	1045	;# 
  4597     0416                     PR4             equ	1046	;# 
  4598     0417                     T4CON           equ	1047	;# 
  4599     0418                     TMR5            equ	1048	;# 
  4600     0418                     TMR5L           equ	1048	;# 
  4601     0419                     TMR5H           equ	1049	;# 
  4602     041A                     T5CON           equ	1050	;# 
  4603     041B                     T5GCON          equ	1051	;# 
  4604     041C                     TMR6            equ	1052	;# 
  4605     041D                     PR6             equ	1053	;# 
  4606     041E                     T6CON           equ	1054	;# 
  4607     041F                     CCDCON          equ	1055	;# 
  4608     0498                     NCO1ACC         equ	1176	;# 
  4609     0498                     NCO1ACCL        equ	1176	;# 
  4610     0499                     NCO1ACCH        equ	1177	;# 
  4611     049A                     NCO1ACCU        equ	1178	;# 
  4612     049B                     NCO1INC         equ	1179	;# 
  4613     049B                     NCO1INCL        equ	1179	;# 
  4614     049C                     NCO1INCH        equ	1180	;# 
  4615     049D                     NCO1INCU        equ	1181	;# 
  4616     049E                     NCO1CON         equ	1182	;# 
  4617     049F                     NCO1CLK         equ	1183	;# 
  4618     0617                     PWM5DCL         equ	1559	;# 
  4619     0618                     PWM5DCH         equ	1560	;# 
  4620     0619                     PWM5CON         equ	1561	;# 
  4621     0619                     PWM5CON0        equ	1561	;# 
  4622     061A                     PWM6DCL         equ	1562	;# 
  4623     061B                     PWM6DCH         equ	1563	;# 
  4624     061C                     PWM6CON         equ	1564	;# 
  4625     061C                     PWM6CON0        equ	1564	;# 
  4626     061F                     PWMTMRS         equ	1567	;# 
  4627     0691                     CWG1CLKCON      equ	1681	;# 
  4628     0692                     CWG1DAT         equ	1682	;# 
  4629     0693                     CWG1DBR         equ	1683	;# 
  4630     0694                     CWG1DBF         equ	1684	;# 
  4631     0695                     CWG1CON0        equ	1685	;# 
  4632     0696                     CWG1CON1        equ	1686	;# 
  4633     0697                     CWG1AS0         equ	1687	;# 
  4634     0698                     CWG1AS1         equ	1688	;# 
  4635     0699                     CWG1STR         equ	1689	;# 
  4636     0711                     CWG2CLKCON      equ	1809	;# 
  4637     0712                     CWG2DAT         equ	1810	;# 
  4638     0713                     CWG2DBR         equ	1811	;# 
  4639     0714                     CWG2DBF         equ	1812	;# 
  4640     0715                     CWG2CON0        equ	1813	;# 
  4641     0716                     CWG2CON1        equ	1814	;# 
  4642     0717                     CWG2AS0         equ	1815	;# 
  4643     0718                     CWG2AS1         equ	1816	;# 
  4644     0719                     CWG2STR         equ	1817	;# 
  4645     0891                     NVMADR          equ	2193	;# 
  4646     0891                     EEADR           equ	2193	;# 
  4647     0891                     PMADR           equ	2193	;# 
  4648     0891                     NVMADRL         equ	2193	;# 
  4649     0891                     EEADRL          equ	2193	;# 
  4650     0891                     PMADRL          equ	2193	;# 
  4651     0892                     NVMADRH         equ	2194	;# 
  4652     0892                     EEADRH          equ	2194	;# 
  4653     0892                     PMADRH          equ	2194	;# 
  4654     0893                     NVMDAT          equ	2195	;# 
  4655     0893                     EEDAT           equ	2195	;# 
  4656     0893                     PMDAT           equ	2195	;# 
  4657     0893                     NVMDATL         equ	2195	;# 
  4658     0893                     EEDATL          equ	2195	;# 
  4659     0893                     PMDATL          equ	2195	;# 
  4660     0894                     NVMDATH         equ	2196	;# 
  4661     0894                     EEDATH          equ	2196	;# 
  4662     0894                     PMDATH          equ	2196	;# 
  4663     0895                     NVMCON1         equ	2197	;# 
  4664     0895                     EECON1          equ	2197	;# 
  4665     0895                     PMCON1          equ	2197	;# 
  4666     0896                     NVMCON2         equ	2198	;# 
  4667     0896                     EECON2          equ	2198	;# 
  4668     0896                     PMCON2          equ	2198	;# 
  4669     089B                     PCON0           equ	2203	;# 
  4670     0911                     PMD0            equ	2321	;# 
  4671     0912                     PMD1            equ	2322	;# 
  4672     0913                     PMD2            equ	2323	;# 
  4673     0914                     PMD3            equ	2324	;# 
  4674     0915                     PMD4            equ	2325	;# 
  4675     0916                     PMD5            equ	2326	;# 
  4676     0918                     CPUDOZE         equ	2328	;# 
  4677     0919                     OSCCON1         equ	2329	;# 
  4678     091A                     OSCCON2         equ	2330	;# 
  4679     091B                     OSCCON3         equ	2331	;# 
  4680     091C                     OSCSTAT1        equ	2332	;# 
  4681     091D                     OSCEN           equ	2333	;# 
  4682     091E                     OSCTUNE         equ	2334	;# 
  4683     091F                     OSCFRQ          equ	2335	;# 
  4684     0E0F                     PPSLOCK         equ	3599	;# 
  4685     0E10                     INTPPS          equ	3600	;# 
  4686     0E11                     T0CKIPPS        equ	3601	;# 
  4687     0E12                     T1CKIPPS        equ	3602	;# 
  4688     0E13                     T1GPPS          equ	3603	;# 
  4689     0E14                     CCP1PPS         equ	3604	;# 
  4690     0E15                     CCP2PPS         equ	3605	;# 
  4691     0E16                     CCP3PPS         equ	3606	;# 
  4692     0E17                     CCP4PPS         equ	3607	;# 
  4693     0E18                     CWG1PPS         equ	3608	;# 
  4694     0E19                     CWG2PPS         equ	3609	;# 
  4695     0E1A                     MDCIN1PPS       equ	3610	;# 
  4696     0E1B                     MDCIN2PPS       equ	3611	;# 
  4697     0E1C                     MDMINPPS        equ	3612	;# 
  4698     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4699     0E1E                     SSP2DATPPS      equ	3614	;# 
  4700     0E1F                     SSP2SSPPS       equ	3615	;# 
  4701     0E20                     SSP1CLKPPS      equ	3616	;# 
  4702     0E21                     SSP1DATPPS      equ	3617	;# 
  4703     0E22                     SSP1SSPPS       equ	3618	;# 
  4704     0E24                     RXPPS           equ	3620	;# 
  4705     0E25                     TXPPS           equ	3621	;# 
  4706     0E28                     CLCIN0PPS       equ	3624	;# 
  4707     0E29                     CLCIN1PPS       equ	3625	;# 
  4708     0E2A                     CLCIN2PPS       equ	3626	;# 
  4709     0E2B                     CLCIN3PPS       equ	3627	;# 
  4710     0E2C                     T3CKIPPS        equ	3628	;# 
  4711     0E2D                     T3GPPS          equ	3629	;# 
  4712     0E2E                     T5CKIPPS        equ	3630	;# 
  4713     0E2F                     T5GPPS          equ	3631	;# 
  4714     0E90                     RA0PPS          equ	3728	;# 
  4715     0E91                     RA1PPS          equ	3729	;# 
  4716     0E92                     RA2PPS          equ	3730	;# 
  4717     0E94                     RA4PPS          equ	3732	;# 
  4718     0E95                     RA5PPS          equ	3733	;# 
  4719     0E9C                     RB4PPS          equ	3740	;# 
  4720     0E9D                     RB5PPS          equ	3741	;# 
  4721     0E9E                     RB6PPS          equ	3742	;# 
  4722     0E9F                     RB7PPS          equ	3743	;# 
  4723     0EA0                     RC0PPS          equ	3744	;# 
  4724     0EA1                     RC1PPS          equ	3745	;# 
  4725     0EA2                     RC2PPS          equ	3746	;# 
  4726     0EA3                     RC3PPS          equ	3747	;# 
  4727     0EA4                     RC4PPS          equ	3748	;# 
  4728     0EA5                     RC5PPS          equ	3749	;# 
  4729     0EA6                     RC6PPS          equ	3750	;# 
  4730     0EA7                     RC7PPS          equ	3751	;# 
  4731     0F0F                     CLCDATA         equ	3855	;# 
  4732     0F10                     CLC1CON         equ	3856	;# 
  4733     0F11                     CLC1POL         equ	3857	;# 
  4734     0F12                     CLC1SEL0        equ	3858	;# 
  4735     0F13                     CLC1SEL1        equ	3859	;# 
  4736     0F14                     CLC1SEL2        equ	3860	;# 
  4737     0F15                     CLC1SEL3        equ	3861	;# 
  4738     0F16                     CLC1GLS0        equ	3862	;# 
  4739     0F17                     CLC1GLS1        equ	3863	;# 
  4740     0F18                     CLC1GLS2        equ	3864	;# 
  4741     0F19                     CLC1GLS3        equ	3865	;# 
  4742     0F1A                     CLC2CON         equ	3866	;# 
  4743     0F1B                     CLC2POL         equ	3867	;# 
  4744     0F1C                     CLC2SEL0        equ	3868	;# 
  4745     0F1D                     CLC2SEL1        equ	3869	;# 
  4746     0F1E                     CLC2SEL2        equ	3870	;# 
  4747     0F1F                     CLC2SEL3        equ	3871	;# 
  4748     0F20                     CLC2GLS0        equ	3872	;# 
  4749     0F21                     CLC2GLS1        equ	3873	;# 
  4750     0F22                     CLC2GLS2        equ	3874	;# 
  4751     0F23                     CLC2GLS3        equ	3875	;# 
  4752     0F24                     CLC3CON         equ	3876	;# 
  4753     0F25                     CLC3POL         equ	3877	;# 
  4754     0F26                     CLC3SEL0        equ	3878	;# 
  4755     0F27                     CLC3SEL1        equ	3879	;# 
  4756     0F28                     CLC3SEL2        equ	3880	;# 
  4757     0F29                     CLC3SEL3        equ	3881	;# 
  4758     0F2A                     CLC3GLS0        equ	3882	;# 
  4759     0F2B                     CLC3GLS1        equ	3883	;# 
  4760     0F2C                     CLC3GLS2        equ	3884	;# 
  4761     0F2D                     CLC3GLS3        equ	3885	;# 
  4762     0F2E                     CLC4CON         equ	3886	;# 
  4763     0F2F                     CLC4POL         equ	3887	;# 
  4764     0F30                     CLC4SEL0        equ	3888	;# 
  4765     0F31                     CLC4SEL1        equ	3889	;# 
  4766     0F32                     CLC4SEL2        equ	3890	;# 
  4767     0F33                     CLC4SEL3        equ	3891	;# 
  4768     0F34                     CLC4GLS0        equ	3892	;# 
  4769     0F35                     CLC4GLS1        equ	3893	;# 
  4770     0F36                     CLC4GLS2        equ	3894	;# 
  4771     0F37                     CLC4GLS3        equ	3895	;# 
  4772     0FE4                     STATUS_SHAD     equ	4068	;# 
  4773     0FE5                     WREG_SHAD       equ	4069	;# 
  4774     0FE6                     BSR_SHAD        equ	4070	;# 
  4775     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4776     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4777     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4778     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4779     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4780     0FED                     STKPTR          equ	4077	;# 
  4781     0FEE                     TOSL            equ	4078	;# 
  4782     0FEF                     TOSH            equ	4079	;# 
  4783     0000                     INDF0           equ	0	;# 
  4784     0001                     INDF1           equ	1	;# 
  4785     0002                     PCL             equ	2	;# 
  4786     0003                     STATUS          equ	3	;# 
  4787     0004                     FSR0L           equ	4	;# 
  4788     0005                     FSR0H           equ	5	;# 
  4789     0006                     FSR1L           equ	6	;# 
  4790     0007                     FSR1H           equ	7	;# 
  4791     0008                     BSR             equ	8	;# 
  4792     0009                     WREG            equ	9	;# 
  4793     000A                     PCLATH          equ	10	;# 
  4794     000B                     INTCON          equ	11	;# 
  4795     000C                     PORTA           equ	12	;# 
  4796     000D                     PORTB           equ	13	;# 
  4797     000E                     PORTC           equ	14	;# 
  4798     0010                     PIR0            equ	16	;# 
  4799     0011                     PIR1            equ	17	;# 
  4800     0012                     PIR2            equ	18	;# 
  4801     0013                     PIR3            equ	19	;# 
  4802     0014                     PIR4            equ	20	;# 
  4803     0015                     TMR0L           equ	21	;# 
  4804     0015                     TMR0            equ	21	;# 
  4805     0016                     TMR0H           equ	22	;# 
  4806     0016                     PR0             equ	22	;# 
  4807     0017                     T0CON0          equ	23	;# 
  4808     0018                     T0CON1          equ	24	;# 
  4809     0019                     TMR1            equ	25	;# 
  4810     0019                     TMR1L           equ	25	;# 
  4811     001A                     TMR1H           equ	26	;# 
  4812     001B                     T1CON           equ	27	;# 
  4813     001C                     T1GCON          equ	28	;# 
  4814     001D                     TMR2            equ	29	;# 
  4815     001E                     PR2             equ	30	;# 
  4816     001F                     T2CON           equ	31	;# 
  4817     008C                     TRISA           equ	140	;# 
  4818     008D                     TRISB           equ	141	;# 
  4819     008E                     TRISC           equ	142	;# 
  4820     0090                     PIE0            equ	144	;# 
  4821     0091                     PIE1            equ	145	;# 
  4822     0092                     PIE2            equ	146	;# 
  4823     0093                     PIE3            equ	147	;# 
  4824     0094                     PIE4            equ	148	;# 
  4825     0097                     WDTCON          equ	151	;# 
  4826     009B                     ADRES           equ	155	;# 
  4827     009B                     ADRESL          equ	155	;# 
  4828     009C                     ADRESH          equ	156	;# 
  4829     009D                     ADCON0          equ	157	;# 
  4830     009E                     ADCON1          equ	158	;# 
  4831     009F                     ADACT           equ	159	;# 
  4832     010C                     LATA            equ	268	;# 
  4833     010D                     LATB            equ	269	;# 
  4834     010E                     LATC            equ	270	;# 
  4835     0111                     CM1CON0         equ	273	;# 
  4836     0112                     CM1CON1         equ	274	;# 
  4837     0113                     CM2CON0         equ	275	;# 
  4838     0114                     CM2CON1         equ	276	;# 
  4839     0115                     CMOUT           equ	277	;# 
  4840     0116                     BORCON          equ	278	;# 
  4841     0117                     FVRCON          equ	279	;# 
  4842     0118                     DACCON0         equ	280	;# 
  4843     0119                     DACCON1         equ	281	;# 
  4844     018C                     ANSELA          equ	396	;# 
  4845     018D                     ANSELB          equ	397	;# 
  4846     018E                     ANSELC          equ	398	;# 
  4847     0197                     VREGCON         equ	407	;# 
  4848     0199                     RC1REG          equ	409	;# 
  4849     0199                     RCREG           equ	409	;# 
  4850     0199                     RCREG1          equ	409	;# 
  4851     019A                     TX1REG          equ	410	;# 
  4852     019A                     TXREG1          equ	410	;# 
  4853     019A                     TXREG           equ	410	;# 
  4854     019B                     SP1BRG          equ	411	;# 
  4855     019B                     SPBRG           equ	411	;# 
  4856     019B                     SP1BRGL         equ	411	;# 
  4857     019B                     SPBRG1          equ	411	;# 
  4858     019B                     SPBRGL          equ	411	;# 
  4859     019C                     SP1BRGH         equ	412	;# 
  4860     019C                     SPBRGH          equ	412	;# 
  4861     019C                     SPBRGH1         equ	412	;# 
  4862     019D                     RC1STA          equ	413	;# 
  4863     019D                     RCSTA1          equ	413	;# 
  4864     019D                     RCSTA           equ	413	;# 
  4865     019E                     TX1STA          equ	414	;# 
  4866     019E                     TXSTA1          equ	414	;# 
  4867     019E                     TXSTA           equ	414	;# 
  4868     019F                     BAUD1CON        equ	415	;# 
  4869     019F                     BAUDCON1        equ	415	;# 
  4870     019F                     BAUDCTL1        equ	415	;# 
  4871     019F                     BAUDCON         equ	415	;# 
  4872     019F                     BAUDCTL         equ	415	;# 
  4873     020C                     WPUA            equ	524	;# 
  4874     020D                     WPUB            equ	525	;# 
  4875     020E                     WPUC            equ	526	;# 
  4876     0211                     SSP1BUF         equ	529	;# 
  4877     0211                     SSPBUF          equ	529	;# 
  4878     0212                     SSP1ADD         equ	530	;# 
  4879     0212                     SSPADD          equ	530	;# 
  4880     0213                     SSP1MSK         equ	531	;# 
  4881     0213                     SSPMSK          equ	531	;# 
  4882     0214                     SSP1STAT        equ	532	;# 
  4883     0214                     SSPSTAT         equ	532	;# 
  4884     0215                     SSP1CON1        equ	533	;# 
  4885     0215                     SSPCON          equ	533	;# 
  4886     0215                     SSPCON1         equ	533	;# 
  4887     0215                     SSP1CON         equ	533	;# 
  4888     0216                     SSP1CON2        equ	534	;# 
  4889     0216                     SSPCON2         equ	534	;# 
  4890     0217                     SSP1CON3        equ	535	;# 
  4891     0217                     SSPCON3         equ	535	;# 
  4892     0219                     SSP2BUF         equ	537	;# 
  4893     021A                     SSP2ADD         equ	538	;# 
  4894     021B                     SSP2MSK         equ	539	;# 
  4895     021C                     SSP2STAT        equ	540	;# 
  4896     021D                     SSP2CON1        equ	541	;# 
  4897     021D                     SSP2CON         equ	541	;# 
  4898     021E                     SSP2CON2        equ	542	;# 
  4899     021F                     SSP2CON3        equ	543	;# 
  4900     028C                     ODCONA          equ	652	;# 
  4901     028D                     ODCONB          equ	653	;# 
  4902     028E                     ODCONC          equ	654	;# 
  4903     0291                     CCPR1           equ	657	;# 
  4904     0291                     CCPR1L          equ	657	;# 
  4905     0292                     CCPR1H          equ	658	;# 
  4906     0293                     CCP1CON         equ	659	;# 
  4907     0294                     CCP1CAP         equ	660	;# 
  4908     0295                     CCPR2           equ	661	;# 
  4909     0295                     CCPR2L          equ	661	;# 
  4910     0296                     CCPR2H          equ	662	;# 
  4911     0297                     CCP2CON         equ	663	;# 
  4912     0298                     CCP2CAP         equ	664	;# 
  4913     029F                     CCPTMRS         equ	671	;# 
  4914     030C                     SLRCONA         equ	780	;# 
  4915     030D                     SLRCONB         equ	781	;# 
  4916     030E                     SLRCONC         equ	782	;# 
  4917     0311                     CCPR3           equ	785	;# 
  4918     0311                     CCPR3L          equ	785	;# 
  4919     0312                     CCPR3H          equ	786	;# 
  4920     0313                     CCP3CON         equ	787	;# 
  4921     0314                     CCP3CAP         equ	788	;# 
  4922     0315                     CCPR4           equ	789	;# 
  4923     0315                     CCPR4L          equ	789	;# 
  4924     0316                     CCPR4H          equ	790	;# 
  4925     0317                     CCP4CON         equ	791	;# 
  4926     0318                     CCP4CAP         equ	792	;# 
  4927     038C                     INLVLA          equ	908	;# 
  4928     038D                     INLVLB          equ	909	;# 
  4929     038E                     INLVLC          equ	910	;# 
  4930     0391                     IOCAP           equ	913	;# 
  4931     0392                     IOCAN           equ	914	;# 
  4932     0393                     IOCAF           equ	915	;# 
  4933     0394                     IOCBP           equ	916	;# 
  4934     0395                     IOCBN           equ	917	;# 
  4935     0396                     IOCBF           equ	918	;# 
  4936     0397                     IOCCP           equ	919	;# 
  4937     0398                     IOCCN           equ	920	;# 
  4938     0399                     IOCCF           equ	921	;# 
  4939     039A                     CLKRCON         equ	922	;# 
  4940     039C                     MDCON           equ	924	;# 
  4941     039D                     MDSRC           equ	925	;# 
  4942     039E                     MDCARH          equ	926	;# 
  4943     039F                     MDCARL          equ	927	;# 
  4944     0411                     TMR3            equ	1041	;# 
  4945     0411                     TMR3L           equ	1041	;# 
  4946     0412                     TMR3H           equ	1042	;# 
  4947     0413                     T3CON           equ	1043	;# 
  4948     0414                     T3GCON          equ	1044	;# 
  4949     0415                     TMR4            equ	1045	;# 
  4950     0416                     PR4             equ	1046	;# 
  4951     0417                     T4CON           equ	1047	;# 
  4952     0418                     TMR5            equ	1048	;# 
  4953     0418                     TMR5L           equ	1048	;# 
  4954     0419                     TMR5H           equ	1049	;# 
  4955     041A                     T5CON           equ	1050	;# 
  4956     041B                     T5GCON          equ	1051	;# 
  4957     041C                     TMR6            equ	1052	;# 
  4958     041D                     PR6             equ	1053	;# 
  4959     041E                     T6CON           equ	1054	;# 
  4960     041F                     CCDCON          equ	1055	;# 
  4961     0498                     NCO1ACC         equ	1176	;# 
  4962     0498                     NCO1ACCL        equ	1176	;# 
  4963     0499                     NCO1ACCH        equ	1177	;# 
  4964     049A                     NCO1ACCU        equ	1178	;# 
  4965     049B                     NCO1INC         equ	1179	;# 
  4966     049B                     NCO1INCL        equ	1179	;# 
  4967     049C                     NCO1INCH        equ	1180	;# 
  4968     049D                     NCO1INCU        equ	1181	;# 
  4969     049E                     NCO1CON         equ	1182	;# 
  4970     049F                     NCO1CLK         equ	1183	;# 
  4971     0617                     PWM5DCL         equ	1559	;# 
  4972     0618                     PWM5DCH         equ	1560	;# 
  4973     0619                     PWM5CON         equ	1561	;# 
  4974     0619                     PWM5CON0        equ	1561	;# 
  4975     061A                     PWM6DCL         equ	1562	;# 
  4976     061B                     PWM6DCH         equ	1563	;# 
  4977     061C                     PWM6CON         equ	1564	;# 
  4978     061C                     PWM6CON0        equ	1564	;# 
  4979     061F                     PWMTMRS         equ	1567	;# 
  4980     0691                     CWG1CLKCON      equ	1681	;# 
  4981     0692                     CWG1DAT         equ	1682	;# 
  4982     0693                     CWG1DBR         equ	1683	;# 
  4983     0694                     CWG1DBF         equ	1684	;# 
  4984     0695                     CWG1CON0        equ	1685	;# 
  4985     0696                     CWG1CON1        equ	1686	;# 
  4986     0697                     CWG1AS0         equ	1687	;# 
  4987     0698                     CWG1AS1         equ	1688	;# 
  4988     0699                     CWG1STR         equ	1689	;# 
  4989     0711                     CWG2CLKCON      equ	1809	;# 
  4990     0712                     CWG2DAT         equ	1810	;# 
  4991     0713                     CWG2DBR         equ	1811	;# 
  4992     0714                     CWG2DBF         equ	1812	;# 
  4993     0715                     CWG2CON0        equ	1813	;# 
  4994     0716                     CWG2CON1        equ	1814	;# 
  4995     0717                     CWG2AS0         equ	1815	;# 
  4996     0718                     CWG2AS1         equ	1816	;# 
  4997     0719                     CWG2STR         equ	1817	;# 
  4998     0891                     NVMADR          equ	2193	;# 
  4999     0891                     EEADR           equ	2193	;# 
  5000     0891                     PMADR           equ	2193	;# 
  5001     0891                     NVMADRL         equ	2193	;# 
  5002     0891                     EEADRL          equ	2193	;# 
  5003     0891                     PMADRL          equ	2193	;# 
  5004     0892                     NVMADRH         equ	2194	;# 
  5005     0892                     EEADRH          equ	2194	;# 
  5006     0892                     PMADRH          equ	2194	;# 
  5007     0893                     NVMDAT          equ	2195	;# 
  5008     0893                     EEDAT           equ	2195	;# 
  5009     0893                     PMDAT           equ	2195	;# 
  5010     0893                     NVMDATL         equ	2195	;# 
  5011     0893                     EEDATL          equ	2195	;# 
  5012     0893                     PMDATL          equ	2195	;# 
  5013     0894                     NVMDATH         equ	2196	;# 
  5014     0894                     EEDATH          equ	2196	;# 
  5015     0894                     PMDATH          equ	2196	;# 
  5016     0895                     NVMCON1         equ	2197	;# 
  5017     0895                     EECON1          equ	2197	;# 
  5018     0895                     PMCON1          equ	2197	;# 
  5019     0896                     NVMCON2         equ	2198	;# 
  5020     0896                     EECON2          equ	2198	;# 
  5021     0896                     PMCON2          equ	2198	;# 
  5022     089B                     PCON0           equ	2203	;# 
  5023     0911                     PMD0            equ	2321	;# 
  5024     0912                     PMD1            equ	2322	;# 
  5025     0913                     PMD2            equ	2323	;# 
  5026     0914                     PMD3            equ	2324	;# 
  5027     0915                     PMD4            equ	2325	;# 
  5028     0916                     PMD5            equ	2326	;# 
  5029     0918                     CPUDOZE         equ	2328	;# 
  5030     0919                     OSCCON1         equ	2329	;# 
  5031     091A                     OSCCON2         equ	2330	;# 
  5032     091B                     OSCCON3         equ	2331	;# 
  5033     091C                     OSCSTAT1        equ	2332	;# 
  5034     091D                     OSCEN           equ	2333	;# 
  5035     091E                     OSCTUNE         equ	2334	;# 
  5036     091F                     OSCFRQ          equ	2335	;# 
  5037     0E0F                     PPSLOCK         equ	3599	;# 
  5038     0E10                     INTPPS          equ	3600	;# 
  5039     0E11                     T0CKIPPS        equ	3601	;# 
  5040     0E12                     T1CKIPPS        equ	3602	;# 
  5041     0E13                     T1GPPS          equ	3603	;# 
  5042     0E14                     CCP1PPS         equ	3604	;# 
  5043     0E15                     CCP2PPS         equ	3605	;# 
  5044     0E16                     CCP3PPS         equ	3606	;# 
  5045     0E17                     CCP4PPS         equ	3607	;# 
  5046     0E18                     CWG1PPS         equ	3608	;# 
  5047     0E19                     CWG2PPS         equ	3609	;# 
  5048     0E1A                     MDCIN1PPS       equ	3610	;# 
  5049     0E1B                     MDCIN2PPS       equ	3611	;# 
  5050     0E1C                     MDMINPPS        equ	3612	;# 
  5051     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5052     0E1E                     SSP2DATPPS      equ	3614	;# 
  5053     0E1F                     SSP2SSPPS       equ	3615	;# 
  5054     0E20                     SSP1CLKPPS      equ	3616	;# 
  5055     0E21                     SSP1DATPPS      equ	3617	;# 
  5056     0E22                     SSP1SSPPS       equ	3618	;# 
  5057     0E24                     RXPPS           equ	3620	;# 
  5058     0E25                     TXPPS           equ	3621	;# 
  5059     0E28                     CLCIN0PPS       equ	3624	;# 
  5060     0E29                     CLCIN1PPS       equ	3625	;# 
  5061     0E2A                     CLCIN2PPS       equ	3626	;# 
  5062     0E2B                     CLCIN3PPS       equ	3627	;# 
  5063     0E2C                     T3CKIPPS        equ	3628	;# 
  5064     0E2D                     T3GPPS          equ	3629	;# 
  5065     0E2E                     T5CKIPPS        equ	3630	;# 
  5066     0E2F                     T5GPPS          equ	3631	;# 
  5067     0E90                     RA0PPS          equ	3728	;# 
  5068     0E91                     RA1PPS          equ	3729	;# 
  5069     0E92                     RA2PPS          equ	3730	;# 
  5070     0E94                     RA4PPS          equ	3732	;# 
  5071     0E95                     RA5PPS          equ	3733	;# 
  5072     0E9C                     RB4PPS          equ	3740	;# 
  5073     0E9D                     RB5PPS          equ	3741	;# 
  5074     0E9E                     RB6PPS          equ	3742	;# 
  5075     0E9F                     RB7PPS          equ	3743	;# 
  5076     0EA0                     RC0PPS          equ	3744	;# 
  5077     0EA1                     RC1PPS          equ	3745	;# 
  5078     0EA2                     RC2PPS          equ	3746	;# 
  5079     0EA3                     RC3PPS          equ	3747	;# 
  5080     0EA4                     RC4PPS          equ	3748	;# 
  5081     0EA5                     RC5PPS          equ	3749	;# 
  5082     0EA6                     RC6PPS          equ	3750	;# 
  5083     0EA7                     RC7PPS          equ	3751	;# 
  5084     0F0F                     CLCDATA         equ	3855	;# 
  5085     0F10                     CLC1CON         equ	3856	;# 
  5086     0F11                     CLC1POL         equ	3857	;# 
  5087     0F12                     CLC1SEL0        equ	3858	;# 
  5088     0F13                     CLC1SEL1        equ	3859	;# 
  5089     0F14                     CLC1SEL2        equ	3860	;# 
  5090     0F15                     CLC1SEL3        equ	3861	;# 
  5091     0F16                     CLC1GLS0        equ	3862	;# 
  5092     0F17                     CLC1GLS1        equ	3863	;# 
  5093     0F18                     CLC1GLS2        equ	3864	;# 
  5094     0F19                     CLC1GLS3        equ	3865	;# 
  5095     0F1A                     CLC2CON         equ	3866	;# 
  5096     0F1B                     CLC2POL         equ	3867	;# 
  5097     0F1C                     CLC2SEL0        equ	3868	;# 
  5098     0F1D                     CLC2SEL1        equ	3869	;# 
  5099     0F1E                     CLC2SEL2        equ	3870	;# 
  5100     0F1F                     CLC2SEL3        equ	3871	;# 
  5101     0F20                     CLC2GLS0        equ	3872	;# 
  5102     0F21                     CLC2GLS1        equ	3873	;# 
  5103     0F22                     CLC2GLS2        equ	3874	;# 
  5104     0F23                     CLC2GLS3        equ	3875	;# 
  5105     0F24                     CLC3CON         equ	3876	;# 
  5106     0F25                     CLC3POL         equ	3877	;# 
  5107     0F26                     CLC3SEL0        equ	3878	;# 
  5108     0F27                     CLC3SEL1        equ	3879	;# 
  5109     0F28                     CLC3SEL2        equ	3880	;# 
  5110     0F29                     CLC3SEL3        equ	3881	;# 
  5111     0F2A                     CLC3GLS0        equ	3882	;# 
  5112     0F2B                     CLC3GLS1        equ	3883	;# 
  5113     0F2C                     CLC3GLS2        equ	3884	;# 
  5114     0F2D                     CLC3GLS3        equ	3885	;# 
  5115     0F2E                     CLC4CON         equ	3886	;# 
  5116     0F2F                     CLC4POL         equ	3887	;# 
  5117     0F30                     CLC4SEL0        equ	3888	;# 
  5118     0F31                     CLC4SEL1        equ	3889	;# 
  5119     0F32                     CLC4SEL2        equ	3890	;# 
  5120     0F33                     CLC4SEL3        equ	3891	;# 
  5121     0F34                     CLC4GLS0        equ	3892	;# 
  5122     0F35                     CLC4GLS1        equ	3893	;# 
  5123     0F36                     CLC4GLS2        equ	3894	;# 
  5124     0F37                     CLC4GLS3        equ	3895	;# 
  5125     0FE4                     STATUS_SHAD     equ	4068	;# 
  5126     0FE5                     WREG_SHAD       equ	4069	;# 
  5127     0FE6                     BSR_SHAD        equ	4070	;# 
  5128     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5129     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5130     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5131     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5132     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5133     0FED                     STKPTR          equ	4077	;# 
  5134     0FEE                     TOSL            equ	4078	;# 
  5135     0FEF                     TOSH            equ	4079	;# 
  5136     0000                     INDF0           equ	0	;# 
  5137     0001                     INDF1           equ	1	;# 
  5138     0002                     PCL             equ	2	;# 
  5139     0003                     STATUS          equ	3	;# 
  5140     0004                     FSR0L           equ	4	;# 
  5141     0005                     FSR0H           equ	5	;# 
  5142     0006                     FSR1L           equ	6	;# 
  5143     0007                     FSR1H           equ	7	;# 
  5144     0008                     BSR             equ	8	;# 
  5145     0009                     WREG            equ	9	;# 
  5146     000A                     PCLATH          equ	10	;# 
  5147     000B                     INTCON          equ	11	;# 
  5148     000C                     PORTA           equ	12	;# 
  5149     000D                     PORTB           equ	13	;# 
  5150     000E                     PORTC           equ	14	;# 
  5151     0010                     PIR0            equ	16	;# 
  5152     0011                     PIR1            equ	17	;# 
  5153     0012                     PIR2            equ	18	;# 
  5154     0013                     PIR3            equ	19	;# 
  5155     0014                     PIR4            equ	20	;# 
  5156     0015                     TMR0L           equ	21	;# 
  5157     0015                     TMR0            equ	21	;# 
  5158     0016                     TMR0H           equ	22	;# 
  5159     0016                     PR0             equ	22	;# 
  5160     0017                     T0CON0          equ	23	;# 
  5161     0018                     T0CON1          equ	24	;# 
  5162     0019                     TMR1            equ	25	;# 
  5163     0019                     TMR1L           equ	25	;# 
  5164     001A                     TMR1H           equ	26	;# 
  5165     001B                     T1CON           equ	27	;# 
  5166     001C                     T1GCON          equ	28	;# 
  5167     001D                     TMR2            equ	29	;# 
  5168     001E                     PR2             equ	30	;# 
  5169     001F                     T2CON           equ	31	;# 
  5170     008C                     TRISA           equ	140	;# 
  5171     008D                     TRISB           equ	141	;# 
  5172     008E                     TRISC           equ	142	;# 
  5173     0090                     PIE0            equ	144	;# 
  5174     0091                     PIE1            equ	145	;# 
  5175     0092                     PIE2            equ	146	;# 
  5176     0093                     PIE3            equ	147	;# 
  5177     0094                     PIE4            equ	148	;# 
  5178     0097                     WDTCON          equ	151	;# 
  5179     009B                     ADRES           equ	155	;# 
  5180     009B                     ADRESL          equ	155	;# 
  5181     009C                     ADRESH          equ	156	;# 
  5182     009D                     ADCON0          equ	157	;# 
  5183     009E                     ADCON1          equ	158	;# 
  5184     009F                     ADACT           equ	159	;# 
  5185     010C                     LATA            equ	268	;# 
  5186     010D                     LATB            equ	269	;# 
  5187     010E                     LATC            equ	270	;# 
  5188     0111                     CM1CON0         equ	273	;# 
  5189     0112                     CM1CON1         equ	274	;# 
  5190     0113                     CM2CON0         equ	275	;# 
  5191     0114                     CM2CON1         equ	276	;# 
  5192     0115                     CMOUT           equ	277	;# 
  5193     0116                     BORCON          equ	278	;# 
  5194     0117                     FVRCON          equ	279	;# 
  5195     0118                     DACCON0         equ	280	;# 
  5196     0119                     DACCON1         equ	281	;# 
  5197     018C                     ANSELA          equ	396	;# 
  5198     018D                     ANSELB          equ	397	;# 
  5199     018E                     ANSELC          equ	398	;# 
  5200     0197                     VREGCON         equ	407	;# 
  5201     0199                     RC1REG          equ	409	;# 
  5202     0199                     RCREG           equ	409	;# 
  5203     0199                     RCREG1          equ	409	;# 
  5204     019A                     TX1REG          equ	410	;# 
  5205     019A                     TXREG1          equ	410	;# 
  5206     019A                     TXREG           equ	410	;# 
  5207     019B                     SP1BRG          equ	411	;# 
  5208     019B                     SPBRG           equ	411	;# 
  5209     019B                     SP1BRGL         equ	411	;# 
  5210     019B                     SPBRG1          equ	411	;# 
  5211     019B                     SPBRGL          equ	411	;# 
  5212     019C                     SP1BRGH         equ	412	;# 
  5213     019C                     SPBRGH          equ	412	;# 
  5214     019C                     SPBRGH1         equ	412	;# 
  5215     019D                     RC1STA          equ	413	;# 
  5216     019D                     RCSTA1          equ	413	;# 
  5217     019D                     RCSTA           equ	413	;# 
  5218     019E                     TX1STA          equ	414	;# 
  5219     019E                     TXSTA1          equ	414	;# 
  5220     019E                     TXSTA           equ	414	;# 
  5221     019F                     BAUD1CON        equ	415	;# 
  5222     019F                     BAUDCON1        equ	415	;# 
  5223     019F                     BAUDCTL1        equ	415	;# 
  5224     019F                     BAUDCON         equ	415	;# 
  5225     019F                     BAUDCTL         equ	415	;# 
  5226     020C                     WPUA            equ	524	;# 
  5227     020D                     WPUB            equ	525	;# 
  5228     020E                     WPUC            equ	526	;# 
  5229     0211                     SSP1BUF         equ	529	;# 
  5230     0211                     SSPBUF          equ	529	;# 
  5231     0212                     SSP1ADD         equ	530	;# 
  5232     0212                     SSPADD          equ	530	;# 
  5233     0213                     SSP1MSK         equ	531	;# 
  5234     0213                     SSPMSK          equ	531	;# 
  5235     0214                     SSP1STAT        equ	532	;# 
  5236     0214                     SSPSTAT         equ	532	;# 
  5237     0215                     SSP1CON1        equ	533	;# 
  5238     0215                     SSPCON          equ	533	;# 
  5239     0215                     SSPCON1         equ	533	;# 
  5240     0215                     SSP1CON         equ	533	;# 
  5241     0216                     SSP1CON2        equ	534	;# 
  5242     0216                     SSPCON2         equ	534	;# 
  5243     0217                     SSP1CON3        equ	535	;# 
  5244     0217                     SSPCON3         equ	535	;# 
  5245     0219                     SSP2BUF         equ	537	;# 
  5246     021A                     SSP2ADD         equ	538	;# 
  5247     021B                     SSP2MSK         equ	539	;# 
  5248     021C                     SSP2STAT        equ	540	;# 
  5249     021D                     SSP2CON1        equ	541	;# 
  5250     021D                     SSP2CON         equ	541	;# 
  5251     021E                     SSP2CON2        equ	542	;# 
  5252     021F                     SSP2CON3        equ	543	;# 
  5253     028C                     ODCONA          equ	652	;# 
  5254     028D                     ODCONB          equ	653	;# 
  5255     028E                     ODCONC          equ	654	;# 
  5256     0291                     CCPR1           equ	657	;# 
  5257     0291                     CCPR1L          equ	657	;# 
  5258     0292                     CCPR1H          equ	658	;# 
  5259     0293                     CCP1CON         equ	659	;# 
  5260     0294                     CCP1CAP         equ	660	;# 
  5261     0295                     CCPR2           equ	661	;# 
  5262     0295                     CCPR2L          equ	661	;# 
  5263     0296                     CCPR2H          equ	662	;# 
  5264     0297                     CCP2CON         equ	663	;# 
  5265     0298                     CCP2CAP         equ	664	;# 
  5266     029F                     CCPTMRS         equ	671	;# 
  5267     030C                     SLRCONA         equ	780	;# 
  5268     030D                     SLRCONB         equ	781	;# 
  5269     030E                     SLRCONC         equ	782	;# 
  5270     0311                     CCPR3           equ	785	;# 
  5271     0311                     CCPR3L          equ	785	;# 
  5272     0312                     CCPR3H          equ	786	;# 
  5273     0313                     CCP3CON         equ	787	;# 
  5274     0314                     CCP3CAP         equ	788	;# 
  5275     0315                     CCPR4           equ	789	;# 
  5276     0315                     CCPR4L          equ	789	;# 
  5277     0316                     CCPR4H          equ	790	;# 
  5278     0317                     CCP4CON         equ	791	;# 
  5279     0318                     CCP4CAP         equ	792	;# 
  5280     038C                     INLVLA          equ	908	;# 
  5281     038D                     INLVLB          equ	909	;# 
  5282     038E                     INLVLC          equ	910	;# 
  5283     0391                     IOCAP           equ	913	;# 
  5284     0392                     IOCAN           equ	914	;# 
  5285     0393                     IOCAF           equ	915	;# 
  5286     0394                     IOCBP           equ	916	;# 
  5287     0395                     IOCBN           equ	917	;# 
  5288     0396                     IOCBF           equ	918	;# 
  5289     0397                     IOCCP           equ	919	;# 
  5290     0398                     IOCCN           equ	920	;# 
  5291     0399                     IOCCF           equ	921	;# 
  5292     039A                     CLKRCON         equ	922	;# 
  5293     039C                     MDCON           equ	924	;# 
  5294     039D                     MDSRC           equ	925	;# 
  5295     039E                     MDCARH          equ	926	;# 
  5296     039F                     MDCARL          equ	927	;# 
  5297     0411                     TMR3            equ	1041	;# 
  5298     0411                     TMR3L           equ	1041	;# 
  5299     0412                     TMR3H           equ	1042	;# 
  5300     0413                     T3CON           equ	1043	;# 
  5301     0414                     T3GCON          equ	1044	;# 
  5302     0415                     TMR4            equ	1045	;# 
  5303     0416                     PR4             equ	1046	;# 
  5304     0417                     T4CON           equ	1047	;# 
  5305     0418                     TMR5            equ	1048	;# 
  5306     0418                     TMR5L           equ	1048	;# 
  5307     0419                     TMR5H           equ	1049	;# 
  5308     041A                     T5CON           equ	1050	;# 
  5309     041B                     T5GCON          equ	1051	;# 
  5310     041C                     TMR6            equ	1052	;# 
  5311     041D                     PR6             equ	1053	;# 
  5312     041E                     T6CON           equ	1054	;# 
  5313     041F                     CCDCON          equ	1055	;# 
  5314     0498                     NCO1ACC         equ	1176	;# 
  5315     0498                     NCO1ACCL        equ	1176	;# 
  5316     0499                     NCO1ACCH        equ	1177	;# 
  5317     049A                     NCO1ACCU        equ	1178	;# 
  5318     049B                     NCO1INC         equ	1179	;# 
  5319     049B                     NCO1INCL        equ	1179	;# 
  5320     049C                     NCO1INCH        equ	1180	;# 
  5321     049D                     NCO1INCU        equ	1181	;# 
  5322     049E                     NCO1CON         equ	1182	;# 
  5323     049F                     NCO1CLK         equ	1183	;# 
  5324     0617                     PWM5DCL         equ	1559	;# 
  5325     0618                     PWM5DCH         equ	1560	;# 
  5326     0619                     PWM5CON         equ	1561	;# 
  5327     0619                     PWM5CON0        equ	1561	;# 
  5328     061A                     PWM6DCL         equ	1562	;# 
  5329     061B                     PWM6DCH         equ	1563	;# 
  5330     061C                     PWM6CON         equ	1564	;# 
  5331     061C                     PWM6CON0        equ	1564	;# 
  5332     061F                     PWMTMRS         equ	1567	;# 
  5333     0691                     CWG1CLKCON      equ	1681	;# 
  5334     0692                     CWG1DAT         equ	1682	;# 
  5335     0693                     CWG1DBR         equ	1683	;# 
  5336     0694                     CWG1DBF         equ	1684	;# 
  5337     0695                     CWG1CON0        equ	1685	;# 
  5338     0696                     CWG1CON1        equ	1686	;# 
  5339     0697                     CWG1AS0         equ	1687	;# 
  5340     0698                     CWG1AS1         equ	1688	;# 
  5341     0699                     CWG1STR         equ	1689	;# 
  5342     0711                     CWG2CLKCON      equ	1809	;# 
  5343     0712                     CWG2DAT         equ	1810	;# 
  5344     0713                     CWG2DBR         equ	1811	;# 
  5345     0714                     CWG2DBF         equ	1812	;# 
  5346     0715                     CWG2CON0        equ	1813	;# 
  5347     0716                     CWG2CON1        equ	1814	;# 
  5348     0717                     CWG2AS0         equ	1815	;# 
  5349     0718                     CWG2AS1         equ	1816	;# 
  5350     0719                     CWG2STR         equ	1817	;# 
  5351     0891                     NVMADR          equ	2193	;# 
  5352     0891                     EEADR           equ	2193	;# 
  5353     0891                     PMADR           equ	2193	;# 
  5354     0891                     NVMADRL         equ	2193	;# 
  5355     0891                     EEADRL          equ	2193	;# 
  5356     0891                     PMADRL          equ	2193	;# 
  5357     0892                     NVMADRH         equ	2194	;# 
  5358     0892                     EEADRH          equ	2194	;# 
  5359     0892                     PMADRH          equ	2194	;# 
  5360     0893                     NVMDAT          equ	2195	;# 
  5361     0893                     EEDAT           equ	2195	;# 
  5362     0893                     PMDAT           equ	2195	;# 
  5363     0893                     NVMDATL         equ	2195	;# 
  5364     0893                     EEDATL          equ	2195	;# 
  5365     0893                     PMDATL          equ	2195	;# 
  5366     0894                     NVMDATH         equ	2196	;# 
  5367     0894                     EEDATH          equ	2196	;# 
  5368     0894                     PMDATH          equ	2196	;# 
  5369     0895                     NVMCON1         equ	2197	;# 
  5370     0895                     EECON1          equ	2197	;# 
  5371     0895                     PMCON1          equ	2197	;# 
  5372     0896                     NVMCON2         equ	2198	;# 
  5373     0896                     EECON2          equ	2198	;# 
  5374     0896                     PMCON2          equ	2198	;# 
  5375     089B                     PCON0           equ	2203	;# 
  5376     0911                     PMD0            equ	2321	;# 
  5377     0912                     PMD1            equ	2322	;# 
  5378     0913                     PMD2            equ	2323	;# 
  5379     0914                     PMD3            equ	2324	;# 
  5380     0915                     PMD4            equ	2325	;# 
  5381     0916                     PMD5            equ	2326	;# 
  5382     0918                     CPUDOZE         equ	2328	;# 
  5383     0919                     OSCCON1         equ	2329	;# 
  5384     091A                     OSCCON2         equ	2330	;# 
  5385     091B                     OSCCON3         equ	2331	;# 
  5386     091C                     OSCSTAT1        equ	2332	;# 
  5387     091D                     OSCEN           equ	2333	;# 
  5388     091E                     OSCTUNE         equ	2334	;# 
  5389     091F                     OSCFRQ          equ	2335	;# 
  5390     0E0F                     PPSLOCK         equ	3599	;# 
  5391     0E10                     INTPPS          equ	3600	;# 
  5392     0E11                     T0CKIPPS        equ	3601	;# 
  5393     0E12                     T1CKIPPS        equ	3602	;# 
  5394     0E13                     T1GPPS          equ	3603	;# 
  5395     0E14                     CCP1PPS         equ	3604	;# 
  5396     0E15                     CCP2PPS         equ	3605	;# 
  5397     0E16                     CCP3PPS         equ	3606	;# 
  5398     0E17                     CCP4PPS         equ	3607	;# 
  5399     0E18                     CWG1PPS         equ	3608	;# 
  5400     0E19                     CWG2PPS         equ	3609	;# 
  5401     0E1A                     MDCIN1PPS       equ	3610	;# 
  5402     0E1B                     MDCIN2PPS       equ	3611	;# 
  5403     0E1C                     MDMINPPS        equ	3612	;# 
  5404     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5405     0E1E                     SSP2DATPPS      equ	3614	;# 
  5406     0E1F                     SSP2SSPPS       equ	3615	;# 
  5407     0E20                     SSP1CLKPPS      equ	3616	;# 
  5408     0E21                     SSP1DATPPS      equ	3617	;# 
  5409     0E22                     SSP1SSPPS       equ	3618	;# 
  5410     0E24                     RXPPS           equ	3620	;# 
  5411     0E25                     TXPPS           equ	3621	;# 
  5412     0E28                     CLCIN0PPS       equ	3624	;# 
  5413     0E29                     CLCIN1PPS       equ	3625	;# 
  5414     0E2A                     CLCIN2PPS       equ	3626	;# 
  5415     0E2B                     CLCIN3PPS       equ	3627	;# 
  5416     0E2C                     T3CKIPPS        equ	3628	;# 
  5417     0E2D                     T3GPPS          equ	3629	;# 
  5418     0E2E                     T5CKIPPS        equ	3630	;# 
  5419     0E2F                     T5GPPS          equ	3631	;# 
  5420     0E90                     RA0PPS          equ	3728	;# 
  5421     0E91                     RA1PPS          equ	3729	;# 
  5422     0E92                     RA2PPS          equ	3730	;# 
  5423     0E94                     RA4PPS          equ	3732	;# 
  5424     0E95                     RA5PPS          equ	3733	;# 
  5425     0E9C                     RB4PPS          equ	3740	;# 
  5426     0E9D                     RB5PPS          equ	3741	;# 
  5427     0E9E                     RB6PPS          equ	3742	;# 
  5428     0E9F                     RB7PPS          equ	3743	;# 
  5429     0EA0                     RC0PPS          equ	3744	;# 
  5430     0EA1                     RC1PPS          equ	3745	;# 
  5431     0EA2                     RC2PPS          equ	3746	;# 
  5432     0EA3                     RC3PPS          equ	3747	;# 
  5433     0EA4                     RC4PPS          equ	3748	;# 
  5434     0EA5                     RC5PPS          equ	3749	;# 
  5435     0EA6                     RC6PPS          equ	3750	;# 
  5436     0EA7                     RC7PPS          equ	3751	;# 
  5437     0F0F                     CLCDATA         equ	3855	;# 
  5438     0F10                     CLC1CON         equ	3856	;# 
  5439     0F11                     CLC1POL         equ	3857	;# 
  5440     0F12                     CLC1SEL0        equ	3858	;# 
  5441     0F13                     CLC1SEL1        equ	3859	;# 
  5442     0F14                     CLC1SEL2        equ	3860	;# 
  5443     0F15                     CLC1SEL3        equ	3861	;# 
  5444     0F16                     CLC1GLS0        equ	3862	;# 
  5445     0F17                     CLC1GLS1        equ	3863	;# 
  5446     0F18                     CLC1GLS2        equ	3864	;# 
  5447     0F19                     CLC1GLS3        equ	3865	;# 
  5448     0F1A                     CLC2CON         equ	3866	;# 
  5449     0F1B                     CLC2POL         equ	3867	;# 
  5450     0F1C                     CLC2SEL0        equ	3868	;# 
  5451     0F1D                     CLC2SEL1        equ	3869	;# 
  5452     0F1E                     CLC2SEL2        equ	3870	;# 
  5453     0F1F                     CLC2SEL3        equ	3871	;# 
  5454     0F20                     CLC2GLS0        equ	3872	;# 
  5455     0F21                     CLC2GLS1        equ	3873	;# 
  5456     0F22                     CLC2GLS2        equ	3874	;# 
  5457     0F23                     CLC2GLS3        equ	3875	;# 
  5458     0F24                     CLC3CON         equ	3876	;# 
  5459     0F25                     CLC3POL         equ	3877	;# 
  5460     0F26                     CLC3SEL0        equ	3878	;# 
  5461     0F27                     CLC3SEL1        equ	3879	;# 
  5462     0F28                     CLC3SEL2        equ	3880	;# 
  5463     0F29                     CLC3SEL3        equ	3881	;# 
  5464     0F2A                     CLC3GLS0        equ	3882	;# 
  5465     0F2B                     CLC3GLS1        equ	3883	;# 
  5466     0F2C                     CLC3GLS2        equ	3884	;# 
  5467     0F2D                     CLC3GLS3        equ	3885	;# 
  5468     0F2E                     CLC4CON         equ	3886	;# 
  5469     0F2F                     CLC4POL         equ	3887	;# 
  5470     0F30                     CLC4SEL0        equ	3888	;# 
  5471     0F31                     CLC4SEL1        equ	3889	;# 
  5472     0F32                     CLC4SEL2        equ	3890	;# 
  5473     0F33                     CLC4SEL3        equ	3891	;# 
  5474     0F34                     CLC4GLS0        equ	3892	;# 
  5475     0F35                     CLC4GLS1        equ	3893	;# 
  5476     0F36                     CLC4GLS2        equ	3894	;# 
  5477     0F37                     CLC4GLS3        equ	3895	;# 
  5478     0FE4                     STATUS_SHAD     equ	4068	;# 
  5479     0FE5                     WREG_SHAD       equ	4069	;# 
  5480     0FE6                     BSR_SHAD        equ	4070	;# 
  5481     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5482     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5483     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5484     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5485     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5486     0FED                     STKPTR          equ	4077	;# 
  5487     0FEE                     TOSL            equ	4078	;# 
  5488     0FEF                     TOSH            equ	4079	;# 
  5489     0000                     INDF0           equ	0	;# 
  5490     0001                     INDF1           equ	1	;# 
  5491     0002                     PCL             equ	2	;# 
  5492     0003                     STATUS          equ	3	;# 
  5493     0004                     FSR0L           equ	4	;# 
  5494     0005                     FSR0H           equ	5	;# 
  5495     0006                     FSR1L           equ	6	;# 
  5496     0007                     FSR1H           equ	7	;# 
  5497     0008                     BSR             equ	8	;# 
  5498     0009                     WREG            equ	9	;# 
  5499     000A                     PCLATH          equ	10	;# 
  5500     000B                     INTCON          equ	11	;# 
  5501     000C                     PORTA           equ	12	;# 
  5502     000D                     PORTB           equ	13	;# 
  5503     000E                     PORTC           equ	14	;# 
  5504     0010                     PIR0            equ	16	;# 
  5505     0011                     PIR1            equ	17	;# 
  5506     0012                     PIR2            equ	18	;# 
  5507     0013                     PIR3            equ	19	;# 
  5508     0014                     PIR4            equ	20	;# 
  5509     0015                     TMR0L           equ	21	;# 
  5510     0015                     TMR0            equ	21	;# 
  5511     0016                     TMR0H           equ	22	;# 
  5512     0016                     PR0             equ	22	;# 
  5513     0017                     T0CON0          equ	23	;# 
  5514     0018                     T0CON1          equ	24	;# 
  5515     0019                     TMR1            equ	25	;# 
  5516     0019                     TMR1L           equ	25	;# 
  5517     001A                     TMR1H           equ	26	;# 
  5518     001B                     T1CON           equ	27	;# 
  5519     001C                     T1GCON          equ	28	;# 
  5520     001D                     TMR2            equ	29	;# 
  5521     001E                     PR2             equ	30	;# 
  5522     001F                     T2CON           equ	31	;# 
  5523     008C                     TRISA           equ	140	;# 
  5524     008D                     TRISB           equ	141	;# 
  5525     008E                     TRISC           equ	142	;# 
  5526     0090                     PIE0            equ	144	;# 
  5527     0091                     PIE1            equ	145	;# 
  5528     0092                     PIE2            equ	146	;# 
  5529     0093                     PIE3            equ	147	;# 
  5530     0094                     PIE4            equ	148	;# 
  5531     0097                     WDTCON          equ	151	;# 
  5532     009B                     ADRES           equ	155	;# 
  5533     009B                     ADRESL          equ	155	;# 
  5534     009C                     ADRESH          equ	156	;# 
  5535     009D                     ADCON0          equ	157	;# 
  5536     009E                     ADCON1          equ	158	;# 
  5537     009F                     ADACT           equ	159	;# 
  5538     010C                     LATA            equ	268	;# 
  5539     010D                     LATB            equ	269	;# 
  5540     010E                     LATC            equ	270	;# 
  5541     0111                     CM1CON0         equ	273	;# 
  5542     0112                     CM1CON1         equ	274	;# 
  5543     0113                     CM2CON0         equ	275	;# 
  5544     0114                     CM2CON1         equ	276	;# 
  5545     0115                     CMOUT           equ	277	;# 
  5546     0116                     BORCON          equ	278	;# 
  5547     0117                     FVRCON          equ	279	;# 
  5548     0118                     DACCON0         equ	280	;# 
  5549     0119                     DACCON1         equ	281	;# 
  5550     018C                     ANSELA          equ	396	;# 
  5551     018D                     ANSELB          equ	397	;# 
  5552     018E                     ANSELC          equ	398	;# 
  5553     0197                     VREGCON         equ	407	;# 
  5554     0199                     RC1REG          equ	409	;# 
  5555     0199                     RCREG           equ	409	;# 
  5556     0199                     RCREG1          equ	409	;# 
  5557     019A                     TX1REG          equ	410	;# 
  5558     019A                     TXREG1          equ	410	;# 
  5559     019A                     TXREG           equ	410	;# 
  5560     019B                     SP1BRG          equ	411	;# 
  5561     019B                     SPBRG           equ	411	;# 
  5562     019B                     SP1BRGL         equ	411	;# 
  5563     019B                     SPBRG1          equ	411	;# 
  5564     019B                     SPBRGL          equ	411	;# 
  5565     019C                     SP1BRGH         equ	412	;# 
  5566     019C                     SPBRGH          equ	412	;# 
  5567     019C                     SPBRGH1         equ	412	;# 
  5568     019D                     RC1STA          equ	413	;# 
  5569     019D                     RCSTA1          equ	413	;# 
  5570     019D                     RCSTA           equ	413	;# 
  5571     019E                     TX1STA          equ	414	;# 
  5572     019E                     TXSTA1          equ	414	;# 
  5573     019E                     TXSTA           equ	414	;# 
  5574     019F                     BAUD1CON        equ	415	;# 
  5575     019F                     BAUDCON1        equ	415	;# 
  5576     019F                     BAUDCTL1        equ	415	;# 
  5577     019F                     BAUDCON         equ	415	;# 
  5578     019F                     BAUDCTL         equ	415	;# 
  5579     020C                     WPUA            equ	524	;# 
  5580     020D                     WPUB            equ	525	;# 
  5581     020E                     WPUC            equ	526	;# 
  5582     0211                     SSP1BUF         equ	529	;# 
  5583     0211                     SSPBUF          equ	529	;# 
  5584     0212                     SSP1ADD         equ	530	;# 
  5585     0212                     SSPADD          equ	530	;# 
  5586     0213                     SSP1MSK         equ	531	;# 
  5587     0213                     SSPMSK          equ	531	;# 
  5588     0214                     SSP1STAT        equ	532	;# 
  5589     0214                     SSPSTAT         equ	532	;# 
  5590     0215                     SSP1CON1        equ	533	;# 
  5591     0215                     SSPCON          equ	533	;# 
  5592     0215                     SSPCON1         equ	533	;# 
  5593     0215                     SSP1CON         equ	533	;# 
  5594     0216                     SSP1CON2        equ	534	;# 
  5595     0216                     SSPCON2         equ	534	;# 
  5596     0217                     SSP1CON3        equ	535	;# 
  5597     0217                     SSPCON3         equ	535	;# 
  5598     0219                     SSP2BUF         equ	537	;# 
  5599     021A                     SSP2ADD         equ	538	;# 
  5600     021B                     SSP2MSK         equ	539	;# 
  5601     021C                     SSP2STAT        equ	540	;# 
  5602     021D                     SSP2CON1        equ	541	;# 
  5603     021D                     SSP2CON         equ	541	;# 
  5604     021E                     SSP2CON2        equ	542	;# 
  5605     021F                     SSP2CON3        equ	543	;# 
  5606     028C                     ODCONA          equ	652	;# 
  5607     028D                     ODCONB          equ	653	;# 
  5608     028E                     ODCONC          equ	654	;# 
  5609     0291                     CCPR1           equ	657	;# 
  5610     0291                     CCPR1L          equ	657	;# 
  5611     0292                     CCPR1H          equ	658	;# 
  5612     0293                     CCP1CON         equ	659	;# 
  5613     0294                     CCP1CAP         equ	660	;# 
  5614     0295                     CCPR2           equ	661	;# 
  5615     0295                     CCPR2L          equ	661	;# 
  5616     0296                     CCPR2H          equ	662	;# 
  5617     0297                     CCP2CON         equ	663	;# 
  5618     0298                     CCP2CAP         equ	664	;# 
  5619     029F                     CCPTMRS         equ	671	;# 
  5620     030C                     SLRCONA         equ	780	;# 
  5621     030D                     SLRCONB         equ	781	;# 
  5622     030E                     SLRCONC         equ	782	;# 
  5623     0311                     CCPR3           equ	785	;# 
  5624     0311                     CCPR3L          equ	785	;# 
  5625     0312                     CCPR3H          equ	786	;# 
  5626     0313                     CCP3CON         equ	787	;# 
  5627     0314                     CCP3CAP         equ	788	;# 
  5628     0315                     CCPR4           equ	789	;# 
  5629     0315                     CCPR4L          equ	789	;# 
  5630     0316                     CCPR4H          equ	790	;# 
  5631     0317                     CCP4CON         equ	791	;# 
  5632     0318                     CCP4CAP         equ	792	;# 
  5633     038C                     INLVLA          equ	908	;# 
  5634     038D                     INLVLB          equ	909	;# 
  5635     038E                     INLVLC          equ	910	;# 
  5636     0391                     IOCAP           equ	913	;# 
  5637     0392                     IOCAN           equ	914	;# 
  5638     0393                     IOCAF           equ	915	;# 
  5639     0394                     IOCBP           equ	916	;# 
  5640     0395                     IOCBN           equ	917	;# 
  5641     0396                     IOCBF           equ	918	;# 
  5642     0397                     IOCCP           equ	919	;# 
  5643     0398                     IOCCN           equ	920	;# 
  5644     0399                     IOCCF           equ	921	;# 
  5645     039A                     CLKRCON         equ	922	;# 
  5646     039C                     MDCON           equ	924	;# 
  5647     039D                     MDSRC           equ	925	;# 
  5648     039E                     MDCARH          equ	926	;# 
  5649     039F                     MDCARL          equ	927	;# 
  5650     0411                     TMR3            equ	1041	;# 
  5651     0411                     TMR3L           equ	1041	;# 
  5652     0412                     TMR3H           equ	1042	;# 
  5653     0413                     T3CON           equ	1043	;# 
  5654     0414                     T3GCON          equ	1044	;# 
  5655     0415                     TMR4            equ	1045	;# 
  5656     0416                     PR4             equ	1046	;# 
  5657     0417                     T4CON           equ	1047	;# 
  5658     0418                     TMR5            equ	1048	;# 
  5659     0418                     TMR5L           equ	1048	;# 
  5660     0419                     TMR5H           equ	1049	;# 
  5661     041A                     T5CON           equ	1050	;# 
  5662     041B                     T5GCON          equ	1051	;# 
  5663     041C                     TMR6            equ	1052	;# 
  5664     041D                     PR6             equ	1053	;# 
  5665     041E                     T6CON           equ	1054	;# 
  5666     041F                     CCDCON          equ	1055	;# 
  5667     0498                     NCO1ACC         equ	1176	;# 
  5668     0498                     NCO1ACCL        equ	1176	;# 
  5669     0499                     NCO1ACCH        equ	1177	;# 
  5670     049A                     NCO1ACCU        equ	1178	;# 
  5671     049B                     NCO1INC         equ	1179	;# 
  5672     049B                     NCO1INCL        equ	1179	;# 
  5673     049C                     NCO1INCH        equ	1180	;# 
  5674     049D                     NCO1INCU        equ	1181	;# 
  5675     049E                     NCO1CON         equ	1182	;# 
  5676     049F                     NCO1CLK         equ	1183	;# 
  5677     0617                     PWM5DCL         equ	1559	;# 
  5678     0618                     PWM5DCH         equ	1560	;# 
  5679     0619                     PWM5CON         equ	1561	;# 
  5680     0619                     PWM5CON0        equ	1561	;# 
  5681     061A                     PWM6DCL         equ	1562	;# 
  5682     061B                     PWM6DCH         equ	1563	;# 
  5683     061C                     PWM6CON         equ	1564	;# 
  5684     061C                     PWM6CON0        equ	1564	;# 
  5685     061F                     PWMTMRS         equ	1567	;# 
  5686     0691                     CWG1CLKCON      equ	1681	;# 
  5687     0692                     CWG1DAT         equ	1682	;# 
  5688     0693                     CWG1DBR         equ	1683	;# 
  5689     0694                     CWG1DBF         equ	1684	;# 
  5690     0695                     CWG1CON0        equ	1685	;# 
  5691     0696                     CWG1CON1        equ	1686	;# 
  5692     0697                     CWG1AS0         equ	1687	;# 
  5693     0698                     CWG1AS1         equ	1688	;# 
  5694     0699                     CWG1STR         equ	1689	;# 
  5695     0711                     CWG2CLKCON      equ	1809	;# 
  5696     0712                     CWG2DAT         equ	1810	;# 
  5697     0713                     CWG2DBR         equ	1811	;# 
  5698     0714                     CWG2DBF         equ	1812	;# 
  5699     0715                     CWG2CON0        equ	1813	;# 
  5700     0716                     CWG2CON1        equ	1814	;# 
  5701     0717                     CWG2AS0         equ	1815	;# 
  5702     0718                     CWG2AS1         equ	1816	;# 
  5703     0719                     CWG2STR         equ	1817	;# 
  5704     0891                     NVMADR          equ	2193	;# 
  5705     0891                     EEADR           equ	2193	;# 
  5706     0891                     PMADR           equ	2193	;# 
  5707     0891                     NVMADRL         equ	2193	;# 
  5708     0891                     EEADRL          equ	2193	;# 
  5709     0891                     PMADRL          equ	2193	;# 
  5710     0892                     NVMADRH         equ	2194	;# 
  5711     0892                     EEADRH          equ	2194	;# 
  5712     0892                     PMADRH          equ	2194	;# 
  5713     0893                     NVMDAT          equ	2195	;# 
  5714     0893                     EEDAT           equ	2195	;# 
  5715     0893                     PMDAT           equ	2195	;# 
  5716     0893                     NVMDATL         equ	2195	;# 
  5717     0893                     EEDATL          equ	2195	;# 
  5718     0893                     PMDATL          equ	2195	;# 
  5719     0894                     NVMDATH         equ	2196	;# 
  5720     0894                     EEDATH          equ	2196	;# 
  5721     0894                     PMDATH          equ	2196	;# 
  5722     0895                     NVMCON1         equ	2197	;# 
  5723     0895                     EECON1          equ	2197	;# 
  5724     0895                     PMCON1          equ	2197	;# 
  5725     0896                     NVMCON2         equ	2198	;# 
  5726     0896                     EECON2          equ	2198	;# 
  5727     0896                     PMCON2          equ	2198	;# 
  5728     089B                     PCON0           equ	2203	;# 
  5729     0911                     PMD0            equ	2321	;# 
  5730     0912                     PMD1            equ	2322	;# 
  5731     0913                     PMD2            equ	2323	;# 
  5732     0914                     PMD3            equ	2324	;# 
  5733     0915                     PMD4            equ	2325	;# 
  5734     0916                     PMD5            equ	2326	;# 
  5735     0918                     CPUDOZE         equ	2328	;# 
  5736     0919                     OSCCON1         equ	2329	;# 
  5737     091A                     OSCCON2         equ	2330	;# 
  5738     091B                     OSCCON3         equ	2331	;# 
  5739     091C                     OSCSTAT1        equ	2332	;# 
  5740     091D                     OSCEN           equ	2333	;# 
  5741     091E                     OSCTUNE         equ	2334	;# 
  5742     091F                     OSCFRQ          equ	2335	;# 
  5743     0E0F                     PPSLOCK         equ	3599	;# 
  5744     0E10                     INTPPS          equ	3600	;# 
  5745     0E11                     T0CKIPPS        equ	3601	;# 
  5746     0E12                     T1CKIPPS        equ	3602	;# 
  5747     0E13                     T1GPPS          equ	3603	;# 
  5748     0E14                     CCP1PPS         equ	3604	;# 
  5749     0E15                     CCP2PPS         equ	3605	;# 
  5750     0E16                     CCP3PPS         equ	3606	;# 
  5751     0E17                     CCP4PPS         equ	3607	;# 
  5752     0E18                     CWG1PPS         equ	3608	;# 
  5753     0E19                     CWG2PPS         equ	3609	;# 
  5754     0E1A                     MDCIN1PPS       equ	3610	;# 
  5755     0E1B                     MDCIN2PPS       equ	3611	;# 
  5756     0E1C                     MDMINPPS        equ	3612	;# 
  5757     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5758     0E1E                     SSP2DATPPS      equ	3614	;# 
  5759     0E1F                     SSP2SSPPS       equ	3615	;# 
  5760     0E20                     SSP1CLKPPS      equ	3616	;# 
  5761     0E21                     SSP1DATPPS      equ	3617	;# 
  5762     0E22                     SSP1SSPPS       equ	3618	;# 
  5763     0E24                     RXPPS           equ	3620	;# 
  5764     0E25                     TXPPS           equ	3621	;# 
  5765     0E28                     CLCIN0PPS       equ	3624	;# 
  5766     0E29                     CLCIN1PPS       equ	3625	;# 
  5767     0E2A                     CLCIN2PPS       equ	3626	;# 
  5768     0E2B                     CLCIN3PPS       equ	3627	;# 
  5769     0E2C                     T3CKIPPS        equ	3628	;# 
  5770     0E2D                     T3GPPS          equ	3629	;# 
  5771     0E2E                     T5CKIPPS        equ	3630	;# 
  5772     0E2F                     T5GPPS          equ	3631	;# 
  5773     0E90                     RA0PPS          equ	3728	;# 
  5774     0E91                     RA1PPS          equ	3729	;# 
  5775     0E92                     RA2PPS          equ	3730	;# 
  5776     0E94                     RA4PPS          equ	3732	;# 
  5777     0E95                     RA5PPS          equ	3733	;# 
  5778     0E9C                     RB4PPS          equ	3740	;# 
  5779     0E9D                     RB5PPS          equ	3741	;# 
  5780     0E9E                     RB6PPS          equ	3742	;# 
  5781     0E9F                     RB7PPS          equ	3743	;# 
  5782     0EA0                     RC0PPS          equ	3744	;# 
  5783     0EA1                     RC1PPS          equ	3745	;# 
  5784     0EA2                     RC2PPS          equ	3746	;# 
  5785     0EA3                     RC3PPS          equ	3747	;# 
  5786     0EA4                     RC4PPS          equ	3748	;# 
  5787     0EA5                     RC5PPS          equ	3749	;# 
  5788     0EA6                     RC6PPS          equ	3750	;# 
  5789     0EA7                     RC7PPS          equ	3751	;# 
  5790     0F0F                     CLCDATA         equ	3855	;# 
  5791     0F10                     CLC1CON         equ	3856	;# 
  5792     0F11                     CLC1POL         equ	3857	;# 
  5793     0F12                     CLC1SEL0        equ	3858	;# 
  5794     0F13                     CLC1SEL1        equ	3859	;# 
  5795     0F14                     CLC1SEL2        equ	3860	;# 
  5796     0F15                     CLC1SEL3        equ	3861	;# 
  5797     0F16                     CLC1GLS0        equ	3862	;# 
  5798     0F17                     CLC1GLS1        equ	3863	;# 
  5799     0F18                     CLC1GLS2        equ	3864	;# 
  5800     0F19                     CLC1GLS3        equ	3865	;# 
  5801     0F1A                     CLC2CON         equ	3866	;# 
  5802     0F1B                     CLC2POL         equ	3867	;# 
  5803     0F1C                     CLC2SEL0        equ	3868	;# 
  5804     0F1D                     CLC2SEL1        equ	3869	;# 
  5805     0F1E                     CLC2SEL2        equ	3870	;# 
  5806     0F1F                     CLC2SEL3        equ	3871	;# 
  5807     0F20                     CLC2GLS0        equ	3872	;# 
  5808     0F21                     CLC2GLS1        equ	3873	;# 
  5809     0F22                     CLC2GLS2        equ	3874	;# 
  5810     0F23                     CLC2GLS3        equ	3875	;# 
  5811     0F24                     CLC3CON         equ	3876	;# 
  5812     0F25                     CLC3POL         equ	3877	;# 
  5813     0F26                     CLC3SEL0        equ	3878	;# 
  5814     0F27                     CLC3SEL1        equ	3879	;# 
  5815     0F28                     CLC3SEL2        equ	3880	;# 
  5816     0F29                     CLC3SEL3        equ	3881	;# 
  5817     0F2A                     CLC3GLS0        equ	3882	;# 
  5818     0F2B                     CLC3GLS1        equ	3883	;# 
  5819     0F2C                     CLC3GLS2        equ	3884	;# 
  5820     0F2D                     CLC3GLS3        equ	3885	;# 
  5821     0F2E                     CLC4CON         equ	3886	;# 
  5822     0F2F                     CLC4POL         equ	3887	;# 
  5823     0F30                     CLC4SEL0        equ	3888	;# 
  5824     0F31                     CLC4SEL1        equ	3889	;# 
  5825     0F32                     CLC4SEL2        equ	3890	;# 
  5826     0F33                     CLC4SEL3        equ	3891	;# 
  5827     0F34                     CLC4GLS0        equ	3892	;# 
  5828     0F35                     CLC4GLS1        equ	3893	;# 
  5829     0F36                     CLC4GLS2        equ	3894	;# 
  5830     0F37                     CLC4GLS3        equ	3895	;# 
  5831     0FE4                     STATUS_SHAD     equ	4068	;# 
  5832     0FE5                     WREG_SHAD       equ	4069	;# 
  5833     0FE6                     BSR_SHAD        equ	4070	;# 
  5834     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5835     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5836     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5837     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5838     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5839     0FED                     STKPTR          equ	4077	;# 
  5840     0FEE                     TOSL            equ	4078	;# 
  5841     0FEF                     TOSH            equ	4079	;# 
  5842     0000                     INDF0           equ	0	;# 
  5843     0001                     INDF1           equ	1	;# 
  5844     0002                     PCL             equ	2	;# 
  5845     0003                     STATUS          equ	3	;# 
  5846     0004                     FSR0L           equ	4	;# 
  5847     0005                     FSR0H           equ	5	;# 
  5848     0006                     FSR1L           equ	6	;# 
  5849     0007                     FSR1H           equ	7	;# 
  5850     0008                     BSR             equ	8	;# 
  5851     0009                     WREG            equ	9	;# 
  5852     000A                     PCLATH          equ	10	;# 
  5853     000B                     INTCON          equ	11	;# 
  5854     000C                     PORTA           equ	12	;# 
  5855     000D                     PORTB           equ	13	;# 
  5856     000E                     PORTC           equ	14	;# 
  5857     0010                     PIR0            equ	16	;# 
  5858     0011                     PIR1            equ	17	;# 
  5859     0012                     PIR2            equ	18	;# 
  5860     0013                     PIR3            equ	19	;# 
  5861     0014                     PIR4            equ	20	;# 
  5862     0015                     TMR0L           equ	21	;# 
  5863     0015                     TMR0            equ	21	;# 
  5864     0016                     TMR0H           equ	22	;# 
  5865     0016                     PR0             equ	22	;# 
  5866     0017                     T0CON0          equ	23	;# 
  5867     0018                     T0CON1          equ	24	;# 
  5868     0019                     TMR1            equ	25	;# 
  5869     0019                     TMR1L           equ	25	;# 
  5870     001A                     TMR1H           equ	26	;# 
  5871     001B                     T1CON           equ	27	;# 
  5872     001C                     T1GCON          equ	28	;# 
  5873     001D                     TMR2            equ	29	;# 
  5874     001E                     PR2             equ	30	;# 
  5875     001F                     T2CON           equ	31	;# 
  5876     008C                     TRISA           equ	140	;# 
  5877     008D                     TRISB           equ	141	;# 
  5878     008E                     TRISC           equ	142	;# 
  5879     0090                     PIE0            equ	144	;# 
  5880     0091                     PIE1            equ	145	;# 
  5881     0092                     PIE2            equ	146	;# 
  5882     0093                     PIE3            equ	147	;# 
  5883     0094                     PIE4            equ	148	;# 
  5884     0097                     WDTCON          equ	151	;# 
  5885     009B                     ADRES           equ	155	;# 
  5886     009B                     ADRESL          equ	155	;# 
  5887     009C                     ADRESH          equ	156	;# 
  5888     009D                     ADCON0          equ	157	;# 
  5889     009E                     ADCON1          equ	158	;# 
  5890     009F                     ADACT           equ	159	;# 
  5891     010C                     LATA            equ	268	;# 
  5892     010D                     LATB            equ	269	;# 
  5893     010E                     LATC            equ	270	;# 
  5894     0111                     CM1CON0         equ	273	;# 
  5895     0112                     CM1CON1         equ	274	;# 
  5896     0113                     CM2CON0         equ	275	;# 
  5897     0114                     CM2CON1         equ	276	;# 
  5898     0115                     CMOUT           equ	277	;# 
  5899     0116                     BORCON          equ	278	;# 
  5900     0117                     FVRCON          equ	279	;# 
  5901     0118                     DACCON0         equ	280	;# 
  5902     0119                     DACCON1         equ	281	;# 
  5903     018C                     ANSELA          equ	396	;# 
  5904     018D                     ANSELB          equ	397	;# 
  5905     018E                     ANSELC          equ	398	;# 
  5906     0197                     VREGCON         equ	407	;# 
  5907     0199                     RC1REG          equ	409	;# 
  5908     0199                     RCREG           equ	409	;# 
  5909     0199                     RCREG1          equ	409	;# 
  5910     019A                     TX1REG          equ	410	;# 
  5911     019A                     TXREG1          equ	410	;# 
  5912     019A                     TXREG           equ	410	;# 
  5913     019B                     SP1BRG          equ	411	;# 
  5914     019B                     SPBRG           equ	411	;# 
  5915     019B                     SP1BRGL         equ	411	;# 
  5916     019B                     SPBRG1          equ	411	;# 
  5917     019B                     SPBRGL          equ	411	;# 
  5918     019C                     SP1BRGH         equ	412	;# 
  5919     019C                     SPBRGH          equ	412	;# 
  5920     019C                     SPBRGH1         equ	412	;# 
  5921     019D                     RC1STA          equ	413	;# 
  5922     019D                     RCSTA1          equ	413	;# 
  5923     019D                     RCSTA           equ	413	;# 
  5924     019E                     TX1STA          equ	414	;# 
  5925     019E                     TXSTA1          equ	414	;# 
  5926     019E                     TXSTA           equ	414	;# 
  5927     019F                     BAUD1CON        equ	415	;# 
  5928     019F                     BAUDCON1        equ	415	;# 
  5929     019F                     BAUDCTL1        equ	415	;# 
  5930     019F                     BAUDCON         equ	415	;# 
  5931     019F                     BAUDCTL         equ	415	;# 
  5932     020C                     WPUA            equ	524	;# 
  5933     020D                     WPUB            equ	525	;# 
  5934     020E                     WPUC            equ	526	;# 
  5935     0211                     SSP1BUF         equ	529	;# 
  5936     0211                     SSPBUF          equ	529	;# 
  5937     0212                     SSP1ADD         equ	530	;# 
  5938     0212                     SSPADD          equ	530	;# 
  5939     0213                     SSP1MSK         equ	531	;# 
  5940     0213                     SSPMSK          equ	531	;# 
  5941     0214                     SSP1STAT        equ	532	;# 
  5942     0214                     SSPSTAT         equ	532	;# 
  5943     0215                     SSP1CON1        equ	533	;# 
  5944     0215                     SSPCON          equ	533	;# 
  5945     0215                     SSPCON1         equ	533	;# 
  5946     0215                     SSP1CON         equ	533	;# 
  5947     0216                     SSP1CON2        equ	534	;# 
  5948     0216                     SSPCON2         equ	534	;# 
  5949     0217                     SSP1CON3        equ	535	;# 
  5950     0217                     SSPCON3         equ	535	;# 
  5951     0219                     SSP2BUF         equ	537	;# 
  5952     021A                     SSP2ADD         equ	538	;# 
  5953     021B                     SSP2MSK         equ	539	;# 
  5954     021C                     SSP2STAT        equ	540	;# 
  5955     021D                     SSP2CON1        equ	541	;# 
  5956     021D                     SSP2CON         equ	541	;# 
  5957     021E                     SSP2CON2        equ	542	;# 
  5958     021F                     SSP2CON3        equ	543	;# 
  5959     028C                     ODCONA          equ	652	;# 
  5960     028D                     ODCONB          equ	653	;# 
  5961     028E                     ODCONC          equ	654	;# 
  5962     0291                     CCPR1           equ	657	;# 
  5963     0291                     CCPR1L          equ	657	;# 
  5964     0292                     CCPR1H          equ	658	;# 
  5965     0293                     CCP1CON         equ	659	;# 
  5966     0294                     CCP1CAP         equ	660	;# 
  5967     0295                     CCPR2           equ	661	;# 
  5968     0295                     CCPR2L          equ	661	;# 
  5969     0296                     CCPR2H          equ	662	;# 
  5970     0297                     CCP2CON         equ	663	;# 
  5971     0298                     CCP2CAP         equ	664	;# 
  5972     029F                     CCPTMRS         equ	671	;# 
  5973     030C                     SLRCONA         equ	780	;# 
  5974     030D                     SLRCONB         equ	781	;# 
  5975     030E                     SLRCONC         equ	782	;# 
  5976     0311                     CCPR3           equ	785	;# 
  5977     0311                     CCPR3L          equ	785	;# 
  5978     0312                     CCPR3H          equ	786	;# 
  5979     0313                     CCP3CON         equ	787	;# 
  5980     0314                     CCP3CAP         equ	788	;# 
  5981     0315                     CCPR4           equ	789	;# 
  5982     0315                     CCPR4L          equ	789	;# 
  5983     0316                     CCPR4H          equ	790	;# 
  5984     0317                     CCP4CON         equ	791	;# 
  5985     0318                     CCP4CAP         equ	792	;# 
  5986     038C                     INLVLA          equ	908	;# 
  5987     038D                     INLVLB          equ	909	;# 
  5988     038E                     INLVLC          equ	910	;# 
  5989     0391                     IOCAP           equ	913	;# 
  5990     0392                     IOCAN           equ	914	;# 
  5991     0393                     IOCAF           equ	915	;# 
  5992     0394                     IOCBP           equ	916	;# 
  5993     0395                     IOCBN           equ	917	;# 
  5994     0396                     IOCBF           equ	918	;# 
  5995     0397                     IOCCP           equ	919	;# 
  5996     0398                     IOCCN           equ	920	;# 
  5997     0399                     IOCCF           equ	921	;# 
  5998     039A                     CLKRCON         equ	922	;# 
  5999     039C                     MDCON           equ	924	;# 
  6000     039D                     MDSRC           equ	925	;# 
  6001     039E                     MDCARH          equ	926	;# 
  6002     039F                     MDCARL          equ	927	;# 
  6003     0411                     TMR3            equ	1041	;# 
  6004     0411                     TMR3L           equ	1041	;# 
  6005     0412                     TMR3H           equ	1042	;# 
  6006     0413                     T3CON           equ	1043	;# 
  6007     0414                     T3GCON          equ	1044	;# 
  6008     0415                     TMR4            equ	1045	;# 
  6009     0416                     PR4             equ	1046	;# 
  6010     0417                     T4CON           equ	1047	;# 
  6011     0418                     TMR5            equ	1048	;# 
  6012     0418                     TMR5L           equ	1048	;# 
  6013     0419                     TMR5H           equ	1049	;# 
  6014     041A                     T5CON           equ	1050	;# 
  6015     041B                     T5GCON          equ	1051	;# 
  6016     041C                     TMR6            equ	1052	;# 
  6017     041D                     PR6             equ	1053	;# 
  6018     041E                     T6CON           equ	1054	;# 
  6019     041F                     CCDCON          equ	1055	;# 
  6020     0498                     NCO1ACC         equ	1176	;# 
  6021     0498                     NCO1ACCL        equ	1176	;# 
  6022     0499                     NCO1ACCH        equ	1177	;# 
  6023     049A                     NCO1ACCU        equ	1178	;# 
  6024     049B                     NCO1INC         equ	1179	;# 
  6025     049B                     NCO1INCL        equ	1179	;# 
  6026     049C                     NCO1INCH        equ	1180	;# 
  6027     049D                     NCO1INCU        equ	1181	;# 
  6028     049E                     NCO1CON         equ	1182	;# 
  6029     049F                     NCO1CLK         equ	1183	;# 
  6030     0617                     PWM5DCL         equ	1559	;# 
  6031     0618                     PWM5DCH         equ	1560	;# 
  6032     0619                     PWM5CON         equ	1561	;# 
  6033     0619                     PWM5CON0        equ	1561	;# 
  6034     061A                     PWM6DCL         equ	1562	;# 
  6035     061B                     PWM6DCH         equ	1563	;# 
  6036     061C                     PWM6CON         equ	1564	;# 
  6037     061C                     PWM6CON0        equ	1564	;# 
  6038     061F                     PWMTMRS         equ	1567	;# 
  6039     0691                     CWG1CLKCON      equ	1681	;# 
  6040     0692                     CWG1DAT         equ	1682	;# 
  6041     0693                     CWG1DBR         equ	1683	;# 
  6042     0694                     CWG1DBF         equ	1684	;# 
  6043     0695                     CWG1CON0        equ	1685	;# 
  6044     0696                     CWG1CON1        equ	1686	;# 
  6045     0697                     CWG1AS0         equ	1687	;# 
  6046     0698                     CWG1AS1         equ	1688	;# 
  6047     0699                     CWG1STR         equ	1689	;# 
  6048     0711                     CWG2CLKCON      equ	1809	;# 
  6049     0712                     CWG2DAT         equ	1810	;# 
  6050     0713                     CWG2DBR         equ	1811	;# 
  6051     0714                     CWG2DBF         equ	1812	;# 
  6052     0715                     CWG2CON0        equ	1813	;# 
  6053     0716                     CWG2CON1        equ	1814	;# 
  6054     0717                     CWG2AS0         equ	1815	;# 
  6055     0718                     CWG2AS1         equ	1816	;# 
  6056     0719                     CWG2STR         equ	1817	;# 
  6057     0891                     NVMADR          equ	2193	;# 
  6058     0891                     EEADR           equ	2193	;# 
  6059     0891                     PMADR           equ	2193	;# 
  6060     0891                     NVMADRL         equ	2193	;# 
  6061     0891                     EEADRL          equ	2193	;# 
  6062     0891                     PMADRL          equ	2193	;# 
  6063     0892                     NVMADRH         equ	2194	;# 
  6064     0892                     EEADRH          equ	2194	;# 
  6065     0892                     PMADRH          equ	2194	;# 
  6066     0893                     NVMDAT          equ	2195	;# 
  6067     0893                     EEDAT           equ	2195	;# 
  6068     0893                     PMDAT           equ	2195	;# 
  6069     0893                     NVMDATL         equ	2195	;# 
  6070     0893                     EEDATL          equ	2195	;# 
  6071     0893                     PMDATL          equ	2195	;# 
  6072     0894                     NVMDATH         equ	2196	;# 
  6073     0894                     EEDATH          equ	2196	;# 
  6074     0894                     PMDATH          equ	2196	;# 
  6075     0895                     NVMCON1         equ	2197	;# 
  6076     0895                     EECON1          equ	2197	;# 
  6077     0895                     PMCON1          equ	2197	;# 
  6078     0896                     NVMCON2         equ	2198	;# 
  6079     0896                     EECON2          equ	2198	;# 
  6080     0896                     PMCON2          equ	2198	;# 
  6081     089B                     PCON0           equ	2203	;# 
  6082     0911                     PMD0            equ	2321	;# 
  6083     0912                     PMD1            equ	2322	;# 
  6084     0913                     PMD2            equ	2323	;# 
  6085     0914                     PMD3            equ	2324	;# 
  6086     0915                     PMD4            equ	2325	;# 
  6087     0916                     PMD5            equ	2326	;# 
  6088     0918                     CPUDOZE         equ	2328	;# 
  6089     0919                     OSCCON1         equ	2329	;# 
  6090     091A                     OSCCON2         equ	2330	;# 
  6091     091B                     OSCCON3         equ	2331	;# 
  6092     091C                     OSCSTAT1        equ	2332	;# 
  6093     091D                     OSCEN           equ	2333	;# 
  6094     091E                     OSCTUNE         equ	2334	;# 
  6095     091F                     OSCFRQ          equ	2335	;# 
  6096     0E0F                     PPSLOCK         equ	3599	;# 
  6097     0E10                     INTPPS          equ	3600	;# 
  6098     0E11                     T0CKIPPS        equ	3601	;# 
  6099     0E12                     T1CKIPPS        equ	3602	;# 
  6100     0E13                     T1GPPS          equ	3603	;# 
  6101     0E14                     CCP1PPS         equ	3604	;# 
  6102     0E15                     CCP2PPS         equ	3605	;# 
  6103     0E16                     CCP3PPS         equ	3606	;# 
  6104     0E17                     CCP4PPS         equ	3607	;# 
  6105     0E18                     CWG1PPS         equ	3608	;# 
  6106     0E19                     CWG2PPS         equ	3609	;# 
  6107     0E1A                     MDCIN1PPS       equ	3610	;# 
  6108     0E1B                     MDCIN2PPS       equ	3611	;# 
  6109     0E1C                     MDMINPPS        equ	3612	;# 
  6110     0E1D                     SSP2CLKPPS      equ	3613	;# 
  6111     0E1E                     SSP2DATPPS      equ	3614	;# 
  6112     0E1F                     SSP2SSPPS       equ	3615	;# 
  6113     0E20                     SSP1CLKPPS      equ	3616	;# 
  6114     0E21                     SSP1DATPPS      equ	3617	;# 
  6115     0E22                     SSP1SSPPS       equ	3618	;# 
  6116     0E24                     RXPPS           equ	3620	;# 
  6117     0E25                     TXPPS           equ	3621	;# 
  6118     0E28                     CLCIN0PPS       equ	3624	;# 
  6119     0E29                     CLCIN1PPS       equ	3625	;# 
  6120     0E2A                     CLCIN2PPS       equ	3626	;# 
  6121     0E2B                     CLCIN3PPS       equ	3627	;# 
  6122     0E2C                     T3CKIPPS        equ	3628	;# 
  6123     0E2D                     T3GPPS          equ	3629	;# 
  6124     0E2E                     T5CKIPPS        equ	3630	;# 
  6125     0E2F                     T5GPPS          equ	3631	;# 
  6126     0E90                     RA0PPS          equ	3728	;# 
  6127     0E91                     RA1PPS          equ	3729	;# 
  6128     0E92                     RA2PPS          equ	3730	;# 
  6129     0E94                     RA4PPS          equ	3732	;# 
  6130     0E95                     RA5PPS          equ	3733	;# 
  6131     0E9C                     RB4PPS          equ	3740	;# 
  6132     0E9D                     RB5PPS          equ	3741	;# 
  6133     0E9E                     RB6PPS          equ	3742	;# 
  6134     0E9F                     RB7PPS          equ	3743	;# 
  6135     0EA0                     RC0PPS          equ	3744	;# 
  6136     0EA1                     RC1PPS          equ	3745	;# 
  6137     0EA2                     RC2PPS          equ	3746	;# 
  6138     0EA3                     RC3PPS          equ	3747	;# 
  6139     0EA4                     RC4PPS          equ	3748	;# 
  6140     0EA5                     RC5PPS          equ	3749	;# 
  6141     0EA6                     RC6PPS          equ	3750	;# 
  6142     0EA7                     RC7PPS          equ	3751	;# 
  6143     0F0F                     CLCDATA         equ	3855	;# 
  6144     0F10                     CLC1CON         equ	3856	;# 
  6145     0F11                     CLC1POL         equ	3857	;# 
  6146     0F12                     CLC1SEL0        equ	3858	;# 
  6147     0F13                     CLC1SEL1        equ	3859	;# 
  6148     0F14                     CLC1SEL2        equ	3860	;# 
  6149     0F15                     CLC1SEL3        equ	3861	;# 
  6150     0F16                     CLC1GLS0        equ	3862	;# 
  6151     0F17                     CLC1GLS1        equ	3863	;# 
  6152     0F18                     CLC1GLS2        equ	3864	;# 
  6153     0F19                     CLC1GLS3        equ	3865	;# 
  6154     0F1A                     CLC2CON         equ	3866	;# 
  6155     0F1B                     CLC2POL         equ	3867	;# 
  6156     0F1C                     CLC2SEL0        equ	3868	;# 
  6157     0F1D                     CLC2SEL1        equ	3869	;# 
  6158     0F1E                     CLC2SEL2        equ	3870	;# 
  6159     0F1F                     CLC2SEL3        equ	3871	;# 
  6160     0F20                     CLC2GLS0        equ	3872	;# 
  6161     0F21                     CLC2GLS1        equ	3873	;# 
  6162     0F22                     CLC2GLS2        equ	3874	;# 
  6163     0F23                     CLC2GLS3        equ	3875	;# 
  6164     0F24                     CLC3CON         equ	3876	;# 
  6165     0F25                     CLC3POL         equ	3877	;# 
  6166     0F26                     CLC3SEL0        equ	3878	;# 
  6167     0F27                     CLC3SEL1        equ	3879	;# 
  6168     0F28                     CLC3SEL2        equ	3880	;# 
  6169     0F29                     CLC3SEL3        equ	3881	;# 
  6170     0F2A                     CLC3GLS0        equ	3882	;# 
  6171     0F2B                     CLC3GLS1        equ	3883	;# 
  6172     0F2C                     CLC3GLS2        equ	3884	;# 
  6173     0F2D                     CLC3GLS3        equ	3885	;# 
  6174     0F2E                     CLC4CON         equ	3886	;# 
  6175     0F2F                     CLC4POL         equ	3887	;# 
  6176     0F30                     CLC4SEL0        equ	3888	;# 
  6177     0F31                     CLC4SEL1        equ	3889	;# 
  6178     0F32                     CLC4SEL2        equ	3890	;# 
  6179     0F33                     CLC4SEL3        equ	3891	;# 
  6180     0F34                     CLC4GLS0        equ	3892	;# 
  6181     0F35                     CLC4GLS1        equ	3893	;# 
  6182     0F36                     CLC4GLS2        equ	3894	;# 
  6183     0F37                     CLC4GLS3        equ	3895	;# 
  6184     0FE4                     STATUS_SHAD     equ	4068	;# 
  6185     0FE5                     WREG_SHAD       equ	4069	;# 
  6186     0FE6                     BSR_SHAD        equ	4070	;# 
  6187     0FE7                     PCLATH_SHAD     equ	4071	;# 
  6188     0FE8                     FSR0L_SHAD      equ	4072	;# 
  6189     0FE9                     FSR0H_SHAD      equ	4073	;# 
  6190     0FEA                     FSR1L_SHAD      equ	4074	;# 
  6191     0FEB                     FSR1H_SHAD      equ	4075	;# 
  6192     0FED                     STKPTR          equ	4077	;# 
  6193     0FEE                     TOSL            equ	4078	;# 
  6194     0FEF                     TOSH            equ	4079	;# 
  6195                           
  6196 ;; Function _SPI1_Deinitialize is unused but had its address taken
  6197     0000                     _SPI1_Deinitialize equ	0
  6198                           
  6199 ;; Function _SPI1_Close is unused but had its address taken
  6200     0000                     _SPI1_Close     equ	0
  6201                           
  6202 ;; Function _SPI1_BufferExchange is unused but had its address taken
  6203     0000                     _SPI1_BufferExchange equ	0
  6204                           
  6205 ;; Function _SPI1_BufferWrite is unused but had its address taken
  6206     0000                     _SPI1_BufferWrite equ	0
  6207                           
  6208 ;; Function _SPI1_BufferRead is unused but had its address taken
  6209     0000                     _SPI1_BufferRead equ	0
  6210                           
  6211 ;; Function _SPI1_ByteWrite is unused but had its address taken
  6212     0000                     _SPI1_ByteWrite equ	0
  6213                           
  6214 ;; Function _SPI1_ByteRead is unused but had its address taken
  6215     0000                     _SPI1_ByteRead  equ	0
  6216                           
  6217 ;; Function _SPI1_IsRxReady is unused but had its address taken
  6218     0000                     _SPI1_IsRxReady equ	0
  6219                           
  6220 ;; Function _SPI1_IsTxReady is unused but had its address taken
  6221     0000                     _SPI1_IsTxReady equ	0
  6222                           
  6223 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6224     0000                     _INT_DefaultInterruptHandler equ	0
  6225                           
  6226 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6227     0000                     _EUSART_Deinitialize equ	0
  6228                           
  6229 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6230     0000                     _EUSART_TransmitEnable equ	0
  6231                           
  6232 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6233     0000                     _EUSART_TransmitDisable equ	0
  6234                           
  6235 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6236     0000                     _EUSART_AutoBaudSet equ	0
  6237                           
  6238 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6239     0000                     _EUSART_AutoBaudQuery equ	0
  6240                           
  6241 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6242     0000                     _EUSART_IsTxDone equ	0
  6243                           
  6244 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6245     0000                     _EUSART_ErrorGet equ	0
  6246                           
  6247 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  6248     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  6249                           
  6250 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  6251     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  6252                           
  6253                           	psect	idataBANK0
  6254     0002                     __pidataBANK0:
  6255                           
  6256                           ;initializer for _mustPrintLogs
  6257     0002  3401               	retlw	1
  6258                           
  6259                           ;initializer for adcConversionDoneHandler@new_channel
  6260     0003  3410               	retlw	16
  6261                           
  6262                           	psect	idataBANK2
  6263     1AC1                     __pidataBANK2:
  6264                           
  6265                           ;initializer for _ki
  6266     1AC1  3400               	retlw	0
  6267     1AC2  3400               	retlw	0
  6268     1AC3  3490               	retlw	144
  6269     1AC4  3440               	retlw	64
  6270                           
  6271                           ;initializer for _kp
  6272     1AC5  3466               	retlw	102
  6273     1AC6  3466               	retlw	102
  6274     1AC7  3466               	retlw	102
  6275     1AC8  343F               	retlw	63
  6276                           
  6277                           ;initializer for _setpoint
  6278     1AC9  3432               	retlw	50
  6279     1ACA  3400               	retlw	0
  6280                           
  6281                           	psect	stringtext1
  6282     1800                     __pstringtext1:
  6283     1800                     _UART1:
  6284     1800  344D               	retlw	low _EUSART_Initialize
  6285     1801  341E               	retlw	high _EUSART_Initialize
  6286     1802  3400               	retlw	0
  6287     1803  3400               	retlw	0
  6288     1804  34F4               	retlw	low _EUSART_Read
  6289     1805  341C               	retlw	high _EUSART_Read
  6290     1806  34C7               	retlw	low _EUSART_Write
  6291     1807  341D               	retlw	high _EUSART_Write
  6292     1808  3487               	retlw	low _EUSART_IsRxReady
  6293     1809  341A               	retlw	high _EUSART_IsRxReady
  6294     180A  3475               	retlw	low _EUSART_IsTxReady
  6295     180B  341A               	retlw	high _EUSART_IsTxReady
  6296     180C  3400               	retlw	0
  6297     180D  3400               	retlw	0
  6298     180E  3400               	retlw	0
  6299     180F  3400               	retlw	0
  6300     1810  3400               	retlw	0
  6301     1811  3400               	retlw	0
  6302     1812  3400               	retlw	0
  6303     1813  3400               	retlw	0
  6304     1814  3400               	retlw	0
  6305     1815  3400               	retlw	0
  6306     1816  3400               	retlw	0
  6307     1817  3400               	retlw	0
  6308     1818  3400               	retlw	0
  6309     1819  3400               	retlw	0
  6310     181A  3400               	retlw	0
  6311     181B  3400               	retlw	0
  6312     181C  3400               	retlw	0
  6313     181D  3400               	retlw	0
  6314     181E  3400               	retlw	0
  6315     181F  3400               	retlw	0
  6316     1820  3400               	retlw	0
  6317     1821  3400               	retlw	0
  6318     1822  3400               	retlw	0
  6319     1823  3400               	retlw	0
  6320     1824  3400               	retlw	0
  6321     1825  3400               	retlw	0
  6322     1826  3400               	retlw	0
  6323     1827  3400               	retlw	0
  6324     1828  345C               	retlw	low _EUSART_FramingErrorCallbackRegister
  6325     1829  341B               	retlw	high _EUSART_FramingErrorCallbackRegister
  6326     182A  346B               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6327     182B  341B               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6328     182C  3400               	retlw	0
  6329     182D  3400               	retlw	0
  6330     182E  3400               	retlw	0
  6331     182F  3400               	retlw	0
  6332     1830                     __end_of_UART1:
  6333                           
  6334                           	psect	stringtext2
  6335     1830                     __pstringtext2:
  6336     1830                     _ledstrip:
  6337     1830  3499               	retlw	low _SPI1_Initialize
  6338     1831  341A               	retlw	high _SPI1_Initialize
  6339     1832  3400               	retlw	0
  6340     1833  3400               	retlw	0
  6341     1834  34E4               	retlw	low _SPI1_Open
  6342     1835  3412               	retlw	high _SPI1_Open
  6343     1836  3400               	retlw	0
  6344     1837  3400               	retlw	0
  6345     1838  3400               	retlw	0
  6346     1839  3400               	retlw	0
  6347     183A  3400               	retlw	0
  6348     183B  3400               	retlw	0
  6349     183C  3400               	retlw	0
  6350     183D  3400               	retlw	0
  6351     183E  3407               	retlw	low _SPI1_ByteExchange
  6352     183F  341B               	retlw	high _SPI1_ByteExchange
  6353     1840  3400               	retlw	0
  6354     1841  3400               	retlw	0
  6355     1842  3400               	retlw	0
  6356     1843  3400               	retlw	0
  6357     1844  3400               	retlw	0
  6358     1845  3400               	retlw	0
  6359     1846  3400               	retlw	0
  6360     1847  3400               	retlw	0
  6361     1848  3400               	retlw	0
  6362     1849  3400               	retlw	0
  6363     184A  3400               	retlw	0
  6364     184B  3400               	retlw	0
  6365     184C                     __end_of_ledstrip:
  6366                           
  6367                           	psect	stringtext3
  6368     1908                     __pstringtext3:
  6369     1908                     _spi1_configuration:
  6370     1908  3440               	retlw	64
  6371     1909  340A               	retlw	10
  6372     190A  3410               	retlw	16
  6373     190B  3407               	retlw	7
  6374     190C  3400               	retlw	0
  6375     190D  3464               	retlw	100
  6376     190E  3400               	retlw	0
  6377     190F  3410               	retlw	16
  6378     1910  3401               	retlw	1
  6379     1911  3400               	retlw	0
  6380     1912                     __end_of_spi1_configuration:
  6381                           
  6382                           	psect	nvBANK2
  6383     0169                     __pnvBANK2:
  6384     0169                     _TMR4_PeriodMatchCallback:
  6385     0169                     	ds	2
  6386     016B                     _TMR2_PeriodMatchCallback:
  6387     016B                     	ds	2
  6388     016D                     _ADC_InterruptHandler:
  6389     016D                     	ds	2
  6390                           
  6391                           	psect	nvBANK3
  6392     01D4                     __pnvBANK3:
  6393     01D4                     _TMR6_PeriodMatchCallback:
  6394     01D4                     	ds	2
  6395     01D6                     _EUSART_RxInterruptHandler:
  6396     01D6                     	ds	2
  6397     01D8                     _EUSART_TxInterruptHandler:
  6398     01D8                     	ds	2
  6399     001F                     _T2CONbits      set	31
  6400     001F                     _T2CON          set	31
  6401     001D                     _TMR2           set	29
  6402     001E                     _PR2            set	30
  6403     0012                     _PIR2bits       set	18
  6404     000B                     _INTCONbits     set	11
  6405     0010                     _PIR0bits       set	16
  6406     0011                     _PIR1bits       set	17
  6407     008E                     _TRISC          set	142
  6408     008D                     _TRISB          set	141
  6409     008C                     _TRISA          set	140
  6410     0092                     _PIE2bits       set	146
  6411     009D                     _ADCON0bits     set	157
  6412     0091                     _PIE1bits       set	145
  6413     009D                     _ADCON0         set	157
  6414     009F                     _ADACT          set	159
  6415     009C                     _ADRESH         set	156
  6416     009B                     _ADRESL         set	155
  6417     009E                     _ADCON1         set	158
  6418     010E                     _LATC           set	270
  6419     010D                     _LATB           set	269
  6420     010C                     _LATA           set	268
  6421     019A                     _TX1REG         set	410
  6422     0199                     _RC1REG         set	409
  6423     019F                     _BAUD1CONbits   set	415
  6424     019E                     _TX1STAbits     set	414
  6425     019D                     _RC1STAbits     set	413
  6426     019C                     _SP1BRGH        set	412
  6427     019B                     _SP1BRGL        set	411
  6428     019E                     _TX1STA         set	414
  6429     019D                     _RC1STA         set	413
  6430     019F                     _BAUD1CON       set	415
  6431     018E                     _ANSELC         set	398
  6432     018D                     _ANSELB         set	397
  6433     018C                     _ANSELA         set	396
  6434     020E                     _WPUC           set	526
  6435     020D                     _WPUB           set	525
  6436     020C                     _WPUA           set	524
  6437     0211                     _SSP1BUF        set	529
  6438     0215                     _SSP1CON1bits   set	533
  6439     0212                     _SSP1ADD        set	530
  6440     0217                     _SSP1CON3       set	535
  6441     0215                     _SSP1CON1       set	533
  6442     0214                     _SSP1STAT       set	532
  6443     028E                     _ODCONC         set	654
  6444     028D                     _ODCONB         set	653
  6445     028C                     _ODCONA         set	652
  6446     030E                     _SLRCONC        set	782
  6447     030D                     _SLRCONB        set	781
  6448     030C                     _SLRCONA        set	780
  6449     0399                     _IOCCF          set	921
  6450     0398                     _IOCCN          set	920
  6451     0397                     _IOCCP          set	919
  6452     0396                     _IOCBF          set	918
  6453     0395                     _IOCBN          set	917
  6454     0394                     _IOCBP          set	916
  6455     0393                     _IOCAF          set	915
  6456     0392                     _IOCAN          set	914
  6457     0391                     _IOCAP          set	913
  6458     038E                     _INLVLC         set	910
  6459     038D                     _INLVLB         set	909
  6460     038C                     _INLVLA         set	908
  6461     041E                     _T6CONbits      set	1054
  6462     041E                     _T6CON          set	1054
  6463     041C                     _TMR6           set	1052
  6464     041D                     _PR6            set	1053
  6465     0417                     _T4CONbits      set	1047
  6466     0417                     _T4CON          set	1047
  6467     0415                     _TMR4           set	1045
  6468     0416                     _PR4            set	1046
  6469     061A                     _PWM6DCL        set	1562
  6470     061B                     _PWM6DCH        set	1563
  6471     061C                     _PWM6CON        set	1564
  6472     061F                     _PWMTMRSbits    set	1567
  6473     0617                     _PWM5DCL        set	1559
  6474     0618                     _PWM5DCH        set	1560
  6475     0619                     _PWM5CON        set	1561
  6476     091E                     _OSCTUNE        set	2334
  6477     091C                     _OSCSTAT1       set	2332
  6478     091F                     _OSCFRQ         set	2335
  6479     091D                     _OSCEN          set	2333
  6480     091B                     _OSCCON3        set	2331
  6481     0919                     _OSCCON1        set	2329
  6482     0E20                     _SSP1CLKPPS     set	3616
  6483     0E24                     _RXPPS          set	3620
  6484     0E21                     _SSP1DATPPS     set	3617
  6485     0E9E                     _RB6PPS         set	3742
  6486     0E9F                     _RB7PPS         set	3743
  6487     0EA7                     _RC7PPS         set	3751
  6488     0EA5                     _RC5PPS         set	3749
  6489     0E9C                     _RB4PPS         set	3740
  6490                           
  6491                           	psect	stringtext4
  6492     184C                     __pstringtext4:
  6493     184C                     STR_12:
  6494     184C  3463               	retlw	99	;'c'
  6495     184D  3468               	retlw	104	;'h'
  6496     184E  3461               	retlw	97	;'a'
  6497     184F  346E               	retlw	110	;'n'
  6498     1850  3467               	retlw	103	;'g'
  6499     1851  3465               	retlw	101	;'e'
  6500     1852  3464               	retlw	100	;'d'
  6501     1853  3420               	retlw	32	;' '
  6502     1854  3473               	retlw	115	;'s'
  6503     1855  3465               	retlw	101	;'e'
  6504     1856  3474               	retlw	116	;'t'
  6505     1857  3470               	retlw	112	;'p'
  6506     1858  346F               	retlw	111	;'o'
  6507     1859  3469               	retlw	105	;'i'
  6508     185A  346E               	retlw	110	;'n'
  6509     185B  3474               	retlw	116	;'t'
  6510     185C  3420               	retlw	32	;' '
  6511     185D  3474               	retlw	116	;'t'
  6512     185E  346F               	retlw	111	;'o'
  6513     185F  3420               	retlw	32	;' '
  6514     1860  3425               	retlw	37	;'%'
  6515     1861  3475               	retlw	117	;'u'
  6516     1862  340D               	retlw	13
  6517     1863  340A               	retlw	10
  6518     1864  3400               	retlw	0
  6519                           
  6520                           	psect	stringtext5
  6521     1865                     __pstringtext5:
  6522     1865                     STR_3:
  6523     1865  3469               	retlw	105	;'i'
  6524     1866  346E               	retlw	110	;'n'
  6525     1867  3470               	retlw	112	;'p'
  6526     1868  3475               	retlw	117	;'u'
  6527     1869  3474               	retlw	116	;'t'
  6528     186A  3420               	retlw	32	;' '
  6529     186B  3462               	retlw	98	;'b'
  6530     186C  3475               	retlw	117	;'u'
  6531     186D  3466               	retlw	102	;'f'
  6532     186E  3466               	retlw	102	;'f'
  6533     186F  3465               	retlw	101	;'e'
  6534     1870  3472               	retlw	114	;'r'
  6535     1871  3420               	retlw	32	;' '
  6536     1872  346F               	retlw	111	;'o'
  6537     1873  3476               	retlw	118	;'v'
  6538     1874  3465               	retlw	101	;'e'
  6539     1875  3472               	retlw	114	;'r'
  6540     1876  3466               	retlw	102	;'f'
  6541     1877  346C               	retlw	108	;'l'
  6542     1878  346F               	retlw	111	;'o'
  6543     1879  3477               	retlw	119	;'w'
  6544     187A  340D               	retlw	13
  6545     187B  340A               	retlw	10
  6546     187C  3400               	retlw	0
  6547                           
  6548                           	psect	stringtext6
  6549     187D                     __pstringtext6:
  6550     187D                     STR_17:
  6551     187D  3455               	retlw	85	;'U'
  6552     187E  346E               	retlw	110	;'n'
  6553     187F  346B               	retlw	107	;'k'
  6554     1880  346F               	retlw	111	;'o'
  6555     1881  3477               	retlw	119	;'w'
  6556     1882  346E               	retlw	110	;'n'
  6557     1883  3420               	retlw	32	;' '
  6558     1884  3463               	retlw	99	;'c'
  6559     1885  346F               	retlw	111	;'o'
  6560     1886  346D               	retlw	109	;'m'
  6561     1887  346D               	retlw	109	;'m'
  6562     1888  3461               	retlw	97	;'a'
  6563     1889  346E               	retlw	110	;'n'
  6564     188A  3464               	retlw	100	;'d'
  6565     188B  340D               	retlw	13
  6566     188C  340A               	retlw	10
  6567     188D  3400               	retlw	0
  6568                           
  6569                           	psect	stringtext7
  6570     188E                     __pstringtext7:
  6571     188E                     STR_6:
  6572     188E  342C               	retlw	44	;','
  6573     188F  3420               	retlw	32	;' '
  6574     1890  3464               	retlw	100	;'d'
  6575     1891  3475               	retlw	117	;'u'
  6576     1892  3474               	retlw	116	;'t'
  6577     1893  3479               	retlw	121	;'y'
  6578     1894  3420               	retlw	32	;' '
  6579     1895  3463               	retlw	99	;'c'
  6580     1896  3479               	retlw	121	;'y'
  6581     1897  3463               	retlw	99	;'c'
  6582     1898  346C               	retlw	108	;'l'
  6583     1899  3465               	retlw	101	;'e'
  6584     189A  343A               	retlw	58	;':'
  6585     189B  3420               	retlw	32	;' '
  6586     189C  3425               	retlw	37	;'%'
  6587     189D  3475               	retlw	117	;'u'
  6588     189E  3400               	retlw	0
  6589                           
  6590                           	psect	stringtext8
  6591     189F                     __pstringtext8:
  6592     189F                     STR_16:
  6593     189F  346C               	retlw	108	;'l'
  6594     18A0  346F               	retlw	111	;'o'
  6595     18A1  3467               	retlw	103	;'g'
  6596     18A2  3473               	retlw	115	;'s'
  6597     18A3  3420               	retlw	32	;' '
  6598     18A4  3474               	retlw	116	;'t'
  6599     18A5  346F               	retlw	111	;'o'
  6600     18A6  3467               	retlw	103	;'g'
  6601     18A7  3467               	retlw	103	;'g'
  6602     18A8  346C               	retlw	108	;'l'
  6603     18A9  3465               	retlw	101	;'e'
  6604     18AA  3464               	retlw	100	;'d'
  6605     18AB  340D               	retlw	13
  6606     18AC  340A               	retlw	10
  6607     18AD  3400               	retlw	0
  6608                           
  6609                           	psect	stringtext9
  6610     18AE                     __pstringtext9:
  6611     18AE                     STR_5:
  6612     18AE  342C               	retlw	44	;','
  6613     18AF  3420               	retlw	32	;' '
  6614     18B0  3473               	retlw	115	;'s'
  6615     18B1  3465               	retlw	101	;'e'
  6616     18B2  3474               	retlw	116	;'t'
  6617     18B3  3470               	retlw	112	;'p'
  6618     18B4  346F               	retlw	111	;'o'
  6619     18B5  3469               	retlw	105	;'i'
  6620     18B6  346E               	retlw	110	;'n'
  6621     18B7  3474               	retlw	116	;'t'
  6622     18B8  343A               	retlw	58	;':'
  6623     18B9  3420               	retlw	32	;' '
  6624     18BA  3425               	retlw	37	;'%'
  6625     18BB  3475               	retlw	117	;'u'
  6626     18BC  3400               	retlw	0
  6627                           
  6628                           	psect	stringtext10
  6629     18BD                     __pstringtext10:
  6630     18BD                     STR_1:
  6631     18BD  3463               	retlw	99	;'c'
  6632     18BE  346F               	retlw	111	;'o'
  6633     18BF  3475               	retlw	117	;'u'
  6634     18C0  346E               	retlw	110	;'n'
  6635     18C1  3474               	retlw	116	;'t'
  6636     18C2  3465               	retlw	101	;'e'
  6637     18C3  3472               	retlw	114	;'r'
  6638     18C4  343A               	retlw	58	;':'
  6639     18C5  3420               	retlw	32	;' '
  6640     18C6  3425               	retlw	37	;'%'
  6641     18C7  3475               	retlw	117	;'u'
  6642     18C8  340A               	retlw	10
  6643     18C9  340D               	retlw	13
  6644     18CA  3400               	retlw	0
  6645                           
  6646                           	psect	stringtext11
  6647     18CB                     __pstringtext11:
  6648     18CB                     STR_15:
  6649     18CB  3463               	retlw	99	;'c'
  6650     18CC  3468               	retlw	104	;'h'
  6651     18CD  3461               	retlw	97	;'a'
  6652     18CE  346E               	retlw	110	;'n'
  6653     18CF  3467               	retlw	103	;'g'
  6654     18D0  3465               	retlw	101	;'e'
  6655     18D1  3464               	retlw	100	;'d'
  6656     18D2  3420               	retlw	32	;' '
  6657     18D3  346B               	retlw	107	;'k'
  6658     18D4  3464               	retlw	100	;'d'
  6659     18D5  340D               	retlw	13
  6660     18D6  340A               	retlw	10
  6661     18D7  3400               	retlw	0
  6662                           
  6663                           	psect	stringtext12
  6664     18D8                     __pstringtext12:
  6665     18D8                     STR_14:
  6666     18D8  3463               	retlw	99	;'c'
  6667     18D9  3468               	retlw	104	;'h'
  6668     18DA  3461               	retlw	97	;'a'
  6669     18DB  346E               	retlw	110	;'n'
  6670     18DC  3467               	retlw	103	;'g'
  6671     18DD  3465               	retlw	101	;'e'
  6672     18DE  3464               	retlw	100	;'d'
  6673     18DF  3420               	retlw	32	;' '
  6674     18E0  346B               	retlw	107	;'k'
  6675     18E1  3469               	retlw	105	;'i'
  6676     18E2  340D               	retlw	13
  6677     18E3  340A               	retlw	10
  6678     18E4  3400               	retlw	0
  6679                           
  6680                           	psect	stringtext13
  6681     18E5                     __pstringtext13:
  6682     18E5                     STR_13:
  6683     18E5  3463               	retlw	99	;'c'
  6684     18E6  3468               	retlw	104	;'h'
  6685     18E7  3461               	retlw	97	;'a'
  6686     18E8  346E               	retlw	110	;'n'
  6687     18E9  3467               	retlw	103	;'g'
  6688     18EA  3465               	retlw	101	;'e'
  6689     18EB  3464               	retlw	100	;'d'
  6690     18EC  3420               	retlw	32	;' '
  6691     18ED  346B               	retlw	107	;'k'
  6692     18EE  3470               	retlw	112	;'p'
  6693     18EF  340D               	retlw	13
  6694     18F0  340A               	retlw	10
  6695     18F1  3400               	retlw	0
  6696                           
  6697                           	psect	stringtext14
  6698     18F2                     __pstringtext14:
  6699     18F2                     STR_4:
  6700     18F2  3468               	retlw	104	;'h'
  6701     18F3  346F               	retlw	111	;'o'
  6702     18F4  346F               	retlw	111	;'o'
  6703     18F5  3467               	retlw	103	;'g'
  6704     18F6  3474               	retlw	116	;'t'
  6705     18F7  3465               	retlw	101	;'e'
  6706     18F8  343A               	retlw	58	;':'
  6707     18F9  3420               	retlw	32	;' '
  6708     18FA  3425               	retlw	37	;'%'
  6709     18FB  3475               	retlw	117	;'u'
  6710     18FC  3400               	retlw	0
  6711                           
  6712                           	psect	stringtext15
  6713     18FD                     __pstringtext15:
  6714     18FD                     STR_10:
  6715     18FD  342C               	retlw	44	;','
  6716     18FE  3420               	retlw	32	;' '
  6717     18FF  3470               	retlw	112	;'p'
  6718     1900  346F               	retlw	111	;'o'
  6719     1901  346D               	retlw	109	;'m'
  6720     1902  3470               	retlw	112	;'p'
  6721     1903  343A               	retlw	58	;':'
  6722     1904  3420               	retlw	32	;' '
  6723     1905  3425               	retlw	37	;'%'
  6724     1906  3475               	retlw	117	;'u'
  6725     1907  3400               	retlw	0
  6726                           
  6727                           	psect	stringtext16
  6728     1912                     __pstringtext16:
  6729     1912                     STR_2:
  6730     1912  3425               	retlw	37	;'%'
  6731     1913  3469               	retlw	105	;'i'
  6732     1914  342E               	retlw	46	;'.'
  6733     1915  3425               	retlw	37	;'%'
  6734     1916  3430               	retlw	48	;'0'
  6735     1917  3433               	retlw	51	;'3'
  6736     1918  3475               	retlw	117	;'u'
  6737     1919  3400               	retlw	0
  6738                           
  6739                           	psect	stringtext17
  6740     191A                     __pstringtext17:
  6741     191A                     STR_9:
  6742     191A  342C               	retlw	44	;','
  6743     191B  3420               	retlw	32	;' '
  6744     191C  346B               	retlw	107	;'k'
  6745     191D  3464               	retlw	100	;'d'
  6746     191E  343A               	retlw	58	;':'
  6747     191F  3420               	retlw	32	;' '
  6748     1920  3400               	retlw	0
  6749                           
  6750                           	psect	stringtext18
  6751     1921                     __pstringtext18:
  6752     1921                     STR_8:
  6753     1921  342C               	retlw	44	;','
  6754     1922  3420               	retlw	32	;' '
  6755     1923  346B               	retlw	107	;'k'
  6756     1924  3469               	retlw	105	;'i'
  6757     1925  343A               	retlw	58	;':'
  6758     1926  3420               	retlw	32	;' '
  6759     1927  3400               	retlw	0
  6760                           
  6761                           	psect	stringtext19
  6762     1928                     __pstringtext19:
  6763     1928                     STR_7:
  6764     1928  342C               	retlw	44	;','
  6765     1929  3420               	retlw	32	;' '
  6766     192A  346B               	retlw	107	;'k'
  6767     192B  3470               	retlw	112	;'p'
  6768     192C  343A               	retlw	58	;':'
  6769     192D  3420               	retlw	32	;' '
  6770     192E  3400               	retlw	0
  6771                           
  6772                           	psect	stringtext20
  6773     0000                     __pstringtext20:
  6774     18AB                     STR_11          equ	STR_16+12
  6775                           
  6776                           	psect	cinit
  6777     005A                     start_initialization:	
  6778                           ; #config settings
  6779                           
  6780     005A                     __initialization:
  6781                           
  6782                           ; Initialize objects allocated to BANK0
  6783     005A  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  6784     005D  00EE               	movwf	__pdataBANK0& (0+127)
  6785     005E  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6786     0061  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  6787                           
  6788                           ; Initialize objects allocated to BANK2
  6789     0062  30C1               	movlw	low __pidataBANK2
  6790     0063  0084               	movwf	4
  6791     0064  309A               	movlw	(high __pidataBANK2)| (0+128)
  6792     0065  0085               	movwf	5
  6793     0066  305F               	movlw	low __pdataBANK2
  6794     0067  0086               	movwf	6
  6795     0068  3001               	movlw	high __pdataBANK2
  6796     0069  0087               	movwf	7
  6797     006A  300A               	movlw	10
  6798     006B  319A  221E  3180   	fcall	init_ram
  6799                           
  6800                           ; Clear objects allocated to BANK0
  6801     006E  305A               	movlw	low __pbssBANK0
  6802     006F  0084               	movwf	4
  6803     0070  3000               	movlw	high __pbssBANK0
  6804     0071  0085               	movwf	5
  6805     0072  3014               	movlw	20
  6806     0073  319A  2218  3180   	fcall	clear_ram0
  6807                           
  6808                           ; Clear objects allocated to BANK2
  6809     0076  3043               	movlw	low __pbssBANK2
  6810     0077  0084               	movwf	4
  6811     0078  3001               	movlw	high __pbssBANK2
  6812     0079  0085               	movwf	5
  6813     007A  301C               	movlw	28
  6814     007B  319A  2218  3180   	fcall	clear_ram0
  6815                           
  6816                           ; Clear objects allocated to BANK3
  6817     007E  30A0               	movlw	low __pbssBANK3
  6818     007F  0084               	movwf	4
  6819     0080  3001               	movlw	high __pbssBANK3
  6820     0081  0085               	movwf	5
  6821     0082  3034               	movlw	52
  6822     0083  319A  2218  3180   	fcall	clear_ram0
  6823                           
  6824                           ; Clear objects allocated to BANK4
  6825     0086  3020               	movlw	low __pbssBANK4
  6826     0087  0084               	movwf	4
  6827     0088  3002               	movlw	high __pbssBANK4
  6828     0089  0085               	movwf	5
  6829     008A  3020               	movlw	32
  6830     008B  319A  2218  3180   	fcall	clear_ram0
  6831     008E                     end_of_initialization:	
  6832                           ;End of C runtime variable initialization code
  6833                           
  6834     008E                     __end_of__initialization:
  6835     008E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6836     008F  0020               	movlb	0
  6837     0090  3195  2D6D         	ljmp	_main	;jump to C main() function
  6838                           
  6839                           	psect	bssBANK0
  6840     005A                     __pbssBANK0:
  6841     005A                     _width:
  6842     005A                     	ds	2
  6843     005C                     _dutycycle:
  6844     005C                     	ds	2
  6845     005E                     _ADC_hoogtesensor:
  6846     005E                     	ds	2
  6847     0060                     _EUSART_FramingErrorHandler:
  6848     0060                     	ds	2
  6849     0062                     _INT_InterruptHandler:
  6850     0062                     	ds	2
  6851     0064                     _flags:
  6852     0064                     	ds	1
  6853     0065                     _is_on_target:
  6854     0065                     	ds	1
  6855     0066                     readLine@index:
  6856     0066                     	ds	1
  6857     0067                     _buzzing:
  6858     0067                     	ds	1
  6859     0068                     _eusartRxCount:
  6860     0068                     	ds	1
  6861     0069                     _eusartRxTail:
  6862     0069                     	ds	1
  6863     006A                     _eusartRxHead:
  6864     006A                     	ds	1
  6865     006B                     _eusartTxBufferRemaining:
  6866     006B                     	ds	1
  6867     006C                     _eusartTxTail:
  6868     006C                     	ds	1
  6869     006D                     _eusartTxHead:
  6870     006D                     	ds	1
  6871                           
  6872                           	psect	dataBANK0
  6873     006E                     __pdataBANK0:
  6874     006E                     _mustPrintLogs:
  6875     006E                     	ds	1
  6876     006F                     adcConversionDoneHandler@new_channel:
  6877     006F                     	ds	1
  6878                           
  6879                           	psect	bssBANK2
  6880     0143                     __pbssBANK2:
  6881     0143                     _kd:
  6882     0143                     	ds	4
  6883     0147                     _integraal:
  6884     0147                     	ds	4
  6885     014B                     _nout:
  6886     014B                     	ds	2
  6887     014D                     _prec:
  6888     014D                     	ds	2
  6889     014F                     _lasterror:
  6890     014F                     	ds	2
  6891     0151                     _hoogte_bal:
  6892     0151                     	ds	2
  6893     0153                     _ADC_pomphoogte:
  6894     0153                     	ds	2
  6895     0155                     _ADC_potentiometer:
  6896     0155                     	ds	2
  6897     0157                     _EUSART_OverrunErrorHandler:
  6898     0157                     	ds	2
  6899     0159                     _EUSART_RxCompleteInterruptHandler:
  6900     0159                     	ds	2
  6901     015B                     _EUSART_TxCompleteInterruptHandler:
  6902     015B                     	ds	2
  6903     015D                     _eusartRxLastError:
  6904     015D                     	ds	2
  6905                           
  6906                           	psect	dataBANK2
  6907     015F                     __pdataBANK2:
  6908     015F                     _ki:
  6909     015F                     	ds	4
  6910     0163                     _kp:
  6911     0163                     	ds	4
  6912     0167                     _setpoint:
  6913     0167                     	ds	2
  6914                           
  6915                           	psect	bssBANK3
  6916     01A0                     __pbssBANK3:
  6917     01A0                     _eusartRxStatusBuffer:
  6918     01A0                     	ds	16
  6919     01B0                     _eusartRxBuffer:
  6920     01B0                     	ds	8
  6921     01B8                     _eusartTxBuffer:
  6922     01B8                     	ds	8
  6923     01C0                     _line:
  6924     01C0                     	ds	20
  6925                           
  6926                           	psect	bssBANK4
  6927     0220                     __pbssBANK4:
  6928     0220                     _dbuf:
  6929     0220                     	ds	32
  6930                           
  6931                           	psect	inittext
  6932     1A1E                     init_ram:
  6933     1A1E  00FE               	movwf	btemp
  6934     1A1F                     initloop:
  6935     1A1F  0012               	moviw fsr0++
  6936     1A20  001E               	movwi fsr1++
  6937     1A21  0BFE               	decfsz	btemp,f
  6938     1A22  2A1F               	goto	initloop
  6939     1A23  3400               	retlw	0
  6940                           
  6941                           	psect	clrtext
  6942     1A18                     clear_ram0:	
  6943                           ;	Called with FSR0 containing the base address, and
  6944                           ;	WREG with the size to clear
  6945                           
  6946     1A18  0064               	clrwdt	;clear the watchdog before getting into this loop
  6947     1A19                     clrloop0:
  6948     1A19  0180               	clrf	0	;clear RAM location pointed to by FSR
  6949     1A1A  3101               	addfsr 0,1
  6950     1A1B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6951     1A1C  2A19               	goto	clrloop0	;have we reached the end yet?
  6952     1A1D  3400               	retlw	0	;all done for this memory range, return
  6953                           
  6954                           	psect	cstackBANK2
  6955     0120                     __pcstackBANK2:
  6956     0120                     ?_setKp:
  6957     0120                     ?_setKi:	
  6958                           ; 1 bytes @ 0x0
  6959                           
  6960     0120                     ?_setKd:	
  6961                           ; 1 bytes @ 0x0
  6962                           
  6963     0120                     ?_printFloat:	
  6964                           ; 1 bytes @ 0x0
  6965                           
  6966     0120                     sprintf@ap:	
  6967                           ; 1 bytes @ 0x0
  6968                           
  6969     0120                     printFloat@number:	
  6970                           ; 1 bytes @ 0x0
  6971                           
  6972     0120                     setKp@new_kp:	
  6973                           ; 4 bytes @ 0x0
  6974                           
  6975     0120                     setKi@new_ki:	
  6976                           ; 4 bytes @ 0x0
  6977                           
  6978     0120                     setKd@new_kd:	
  6979                           ; 4 bytes @ 0x0
  6980                           
  6981     0120                     getLedNumber@result:	
  6982                           ; 4 bytes @ 0x0
  6983                           
  6984                           
  6985                           ; 4 bytes @ 0x0
  6986     0120                     	ds	1
  6987     0121                     sprintf@f:
  6988                           
  6989                           ; 11 bytes @ 0x1
  6990     0121                     	ds	3
  6991     0124                     uartHandler@str:
  6992     0124                     printFloat@fractional_part:	
  6993                           ; 1 bytes @ 0x4
  6994                           
  6995     0124                     ??_position_led_strip:	
  6996                           ; 2 bytes @ 0x4
  6997                           
  6998                           
  6999                           ; 1 bytes @ 0x4
  7000     0124                     	ds	2
  7001     0126                     printFloat@integer_part:
  7002     0126                     position_led_strip@target:	
  7003                           ; 1 bytes @ 0x6
  7004                           
  7005                           
  7006                           ; 2 bytes @ 0x6
  7007     0126                     	ds	2
  7008     0128                     position_led_strip@led_on:
  7009                           
  7010                           ; 2 bytes @ 0x8
  7011     0128                     	ds	2
  7012     012A                     position_led_strip@led:
  7013                           
  7014                           ; 1 bytes @ 0xA
  7015     012A                     	ds	2
  7016     012C                     ??_main:
  7017                           
  7018                           ; 1 bytes @ 0xC
  7019     012C                     	ds	2
  7020     012E                     main@str:
  7021                           
  7022                           ; 20 bytes @ 0xE
  7023     012E                     	ds	20
  7024     0142                     main@counter:
  7025                           
  7026                           ; 1 bytes @ 0x22
  7027     0142                     	ds	1
  7028                           
  7029                           	psect	cstackBANK1
  7030     00A0                     __pcstackBANK1:
  7031     00A0                     ?_ADC_SetInterruptHandler:
  7032     00A0                     ?_SPI1_ByteExchange:	
  7033                           ; 1 bytes @ 0x0
  7034                           
  7035     00A0                     ?_INT_SetInterruptHandler:	
  7036                           ; 1 bytes @ 0x0
  7037                           
  7038     00A0                     ?_EUSART_Write:	
  7039                           ; 1 bytes @ 0x0
  7040                           
  7041     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  7042                           ; 1 bytes @ 0x0
  7043                           
  7044     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  7045                           ; 1 bytes @ 0x0
  7046                           
  7047     00A0                     ?_PWM_buzzer_LoadDutyValue:	
  7048                           ; 1 bytes @ 0x0
  7049                           
  7050     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  7051                           ; 1 bytes @ 0x0
  7052                           
  7053     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  7054                           ; 1 bytes @ 0x0
  7055                           
  7056     00A0                     ?_getPomphoogte:	
  7057                           ; 1 bytes @ 0x0
  7058                           
  7059     00A0                     ?_getSetpoint:	
  7060                           ; 2 bytes @ 0x0
  7061                           
  7062     00A0                     ?_getDutycycle:	
  7063                           ; 2 bytes @ 0x0
  7064                           
  7065     00A0                     ?__Umul8_16:	
  7066                           ; 2 bytes @ 0x0
  7067                           
  7068     00A0                     ?_strlen:	
  7069                           ; 2 bytes @ 0x0
  7070                           
  7071     00A0                     ?_getHoogtesensor:	
  7072                           ; 2 bytes @ 0x0
  7073                           
  7074     00A0                     ?___wmul:	
  7075                           ; 2 bytes @ 0x0
  7076                           
  7077     00A0                     ?___awdiv:	
  7078                           ; 2 bytes @ 0x0
  7079                           
  7080     00A0                     ?___awmod:	
  7081                           ; 2 bytes @ 0x0
  7082                           
  7083     00A0                     ?___lwdiv:	
  7084                           ; 2 bytes @ 0x0
  7085                           
  7086     00A0                     ?___lwmod:	
  7087                           ; 2 bytes @ 0x0
  7088                           
  7089     00A0                     ?_getKp:	
  7090                           ; 2 bytes @ 0x0
  7091                           
  7092     00A0                     ?_getKi:	
  7093                           ; 4 bytes @ 0x0
  7094                           
  7095     00A0                     ?_getKd:	
  7096                           ; 4 bytes @ 0x0
  7097                           
  7098     00A0                     ?___fldiv:	
  7099                           ; 4 bytes @ 0x0
  7100                           
  7101     00A0                     ?___xxtofl:	
  7102                           ; 4 bytes @ 0x0
  7103                           
  7104     00A0                     SPI1_ByteExchange@byteData:	
  7105                           ; 4 bytes @ 0x0
  7106                           
  7107     00A0                     EUSART_Read@tempRxTail:	
  7108                           ; 1 bytes @ 0x0
  7109                           
  7110     00A0                     EUSART_Write@txData:	
  7111                           ; 1 bytes @ 0x0
  7112                           
  7113     00A0                     __Umul8_16@multiplicand:	
  7114                           ; 1 bytes @ 0x0
  7115                           
  7116     00A0                     strlen@s:	
  7117                           ; 1 bytes @ 0x0
  7118                           
  7119     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  7120                           ; 1 bytes @ 0x0
  7121                           
  7122     00A0                     PWM_buzzer_LoadDutyValue@dutyValue:	
  7123                           ; 2 bytes @ 0x0
  7124                           
  7125     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  7126                           ; 2 bytes @ 0x0
  7127                           
  7128     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  7129                           ; 2 bytes @ 0x0
  7130                           
  7131     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  7132                           ; 2 bytes @ 0x0
  7133                           
  7134     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7135                           ; 2 bytes @ 0x0
  7136                           
  7137     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7138                           ; 2 bytes @ 0x0
  7139                           
  7140     00A0                     ___wmul@multiplier:	
  7141                           ; 2 bytes @ 0x0
  7142                           
  7143     00A0                     ___awdiv@divisor:	
  7144                           ; 2 bytes @ 0x0
  7145                           
  7146     00A0                     ___awmod@divisor:	
  7147                           ; 2 bytes @ 0x0
  7148                           
  7149     00A0                     ___lwdiv@divisor:	
  7150                           ; 2 bytes @ 0x0
  7151                           
  7152     00A0                     ___lwmod@divisor:	
  7153                           ; 2 bytes @ 0x0
  7154                           
  7155     00A0                     ___fldiv@a:	
  7156                           ; 2 bytes @ 0x0
  7157                           
  7158     00A0                     ___xxtofl@val:	
  7159                           ; 4 bytes @ 0x0
  7160                           
  7161     00A0                     ??_SPI1_Initialize:	
  7162                           ; 4 bytes @ 0x0
  7163                           
  7164     00A0                     ??_TMR2_Initialize:	
  7165                           ; 1 bytes @ 0x0
  7166                           
  7167     00A0                     ??_TMR4_Initialize:	
  7168                           ; 1 bytes @ 0x0
  7169                           
  7170     00A0                     ??_TMR6_Initialize:	
  7171                           ; 1 bytes @ 0x0
  7172                           
  7173     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  7174                           ; 1 bytes @ 0x0
  7175                           
  7176     00A0                     ??_EUSART_Read:	
  7177                           ; 1 bytes @ 0x0
  7178                           
  7179     00A0                     ??_EUSART_IsRxReady:	
  7180                           ; 1 bytes @ 0x0
  7181                           
  7182     00A0                     ??_EUSART_IsTxReady:	
  7183                           ; 1 bytes @ 0x0
  7184                           
  7185     00A0                     ??_ADC_SelectChannel:	
  7186                           ; 1 bytes @ 0x0
  7187                           
  7188     00A0                     ??_pwm_fan_Initialize:	
  7189                           ; 1 bytes @ 0x0
  7190                           
  7191     00A0                     ??_PWM_buzzer_Initialize:	
  7192                           ; 1 bytes @ 0x0
  7193                           
  7194     00A0                     ??_CLOCK_Initialize:	
  7195                           ; 1 bytes @ 0x0
  7196                           
  7197     00A0                     ??_PIN_MANAGER_Initialize:	
  7198                           ; 1 bytes @ 0x0
  7199                           
  7200                           
  7201                           ; 1 bytes @ 0x0
  7202     00A0                     	ds	1
  7203     00A1                     ?_sendLedstripFrame:
  7204     00A1                     ADC_SelectChannel@channel:	
  7205                           ; 1 bytes @ 0x1
  7206                           
  7207     00A1                     EUSART_Read@readValue:	
  7208                           ; 1 bytes @ 0x1
  7209                           
  7210     00A1                     EUSART_Write@tempTxHead:	
  7211                           ; 1 bytes @ 0x1
  7212                           
  7213     00A1                     sendLedstripFrame@green:	
  7214                           ; 1 bytes @ 0x1
  7215                           
  7216     00A1                     ??_SPI1_ByteExchange:	
  7217                           ; 1 bytes @ 0x1
  7218                           
  7219     00A1                     ??_EUSART_Write:	
  7220                           ; 1 bytes @ 0x1
  7221                           
  7222     00A1                     ??_sendLedstripStartFrame:	
  7223                           ; 1 bytes @ 0x1
  7224                           
  7225     00A1                     ??_sendLedstripEndFrame:	
  7226                           ; 1 bytes @ 0x1
  7227                           
  7228                           
  7229                           ; 1 bytes @ 0x1
  7230     00A1                     	ds	1
  7231     00A2                     putch@txData:
  7232     00A2                     sendLedstripFrame@blue:	
  7233                           ; 1 bytes @ 0x2
  7234                           
  7235     00A2                     strlen@a:	
  7236                           ; 1 bytes @ 0x2
  7237                           
  7238     00A2                     ___wmul@multiplicand:	
  7239                           ; 1 bytes @ 0x2
  7240                           
  7241     00A2                     ___awdiv@dividend:	
  7242                           ; 2 bytes @ 0x2
  7243                           
  7244     00A2                     ___awmod@dividend:	
  7245                           ; 2 bytes @ 0x2
  7246                           
  7247     00A2                     ___lwdiv@dividend:	
  7248                           ; 2 bytes @ 0x2
  7249                           
  7250     00A2                     ___lwmod@dividend:	
  7251                           ; 2 bytes @ 0x2
  7252                           
  7253     00A2                     ??_ADC_SetInterruptHandler:	
  7254                           ; 2 bytes @ 0x2
  7255                           
  7256     00A2                     ??_INT_SetInterruptHandler:	
  7257                           ; 1 bytes @ 0x2
  7258                           
  7259     00A2                     ??_EUSART_Initialize:	
  7260                           ; 1 bytes @ 0x2
  7261                           
  7262     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  7263                           ; 1 bytes @ 0x2
  7264                           
  7265     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  7266                           ; 1 bytes @ 0x2
  7267                           
  7268     00A2                     ??_initAdcMultiplexer:	
  7269                           ; 1 bytes @ 0x2
  7270                           
  7271     00A2                     ??_getPomphoogte:	
  7272                           ; 1 bytes @ 0x2
  7273                           
  7274     00A2                     ??_getSetpoint:	
  7275                           ; 1 bytes @ 0x2
  7276                           
  7277     00A2                     ??_getDutycycle:	
  7278                           ; 1 bytes @ 0x2
  7279                           
  7280     00A2                     ??__Umul8_16:	
  7281                           ; 1 bytes @ 0x2
  7282                           
  7283     00A2                     ??_strlen:	
  7284                           ; 1 bytes @ 0x2
  7285                           
  7286     00A2                     ??_ADC_Initialize:	
  7287                           ; 1 bytes @ 0x2
  7288                           
  7289     00A2                     ??_PWM_buzzer_LoadDutyValue:	
  7290                           ; 1 bytes @ 0x2
  7291                           
  7292     00A2                     ??_INTERRUPT_Initialize:	
  7293                           ; 1 bytes @ 0x2
  7294                           
  7295     00A2                     ??_SYSTEM_Initialize:	
  7296                           ; 1 bytes @ 0x2
  7297                           
  7298     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  7299                           ; 1 bytes @ 0x2
  7300                           
  7301     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  7302                           ; 1 bytes @ 0x2
  7303                           
  7304     00A2                     ??_putch:	
  7305                           ; 1 bytes @ 0x2
  7306                           
  7307     00A2                     ??_getHoogtesensor:	
  7308                           ; 1 bytes @ 0x2
  7309                           
  7310                           
  7311                           ; 1 bytes @ 0x2
  7312     00A2                     	ds	1
  7313     00A3                     ?_fputc:
  7314     00A3                     sendLedstripFrame@intensity:	
  7315                           ; 2 bytes @ 0x3
  7316                           
  7317     00A3                     fputc@c:	
  7318                           ; 1 bytes @ 0x3
  7319                           
  7320                           
  7321                           ; 2 bytes @ 0x3
  7322     00A3                     	ds	1
  7323     00A4                     sendLedstripFrame@red:
  7324     00A4                     ___awdiv@counter:	
  7325                           ; 1 bytes @ 0x4
  7326                           
  7327     00A4                     ___awmod@counter:	
  7328                           ; 1 bytes @ 0x4
  7329                           
  7330     00A4                     ___lwmod@counter:	
  7331                           ; 1 bytes @ 0x4
  7332                           
  7333     00A4                     ___wmul@product:	
  7334                           ; 1 bytes @ 0x4
  7335                           
  7336     00A4                     ___lwdiv@quotient:	
  7337                           ; 2 bytes @ 0x4
  7338                           
  7339     00A4                     __Umul8_16@product:	
  7340                           ; 2 bytes @ 0x4
  7341                           
  7342     00A4                     ___fldiv@b:	
  7343                           ; 2 bytes @ 0x4
  7344                           
  7345     00A4                     ??_getKp:	
  7346                           ; 4 bytes @ 0x4
  7347                           
  7348     00A4                     ??_getKi:	
  7349                           ; 1 bytes @ 0x4
  7350                           
  7351     00A4                     ??_getKd:	
  7352                           ; 1 bytes @ 0x4
  7353                           
  7354     00A4                     ??_sendLedstripFrame:	
  7355                           ; 1 bytes @ 0x4
  7356                           
  7357     00A4                     ??___wmul:	
  7358                           ; 1 bytes @ 0x4
  7359                           
  7360     00A4                     ??___awdiv:	
  7361                           ; 1 bytes @ 0x4
  7362                           
  7363     00A4                     ??___awmod:	
  7364                           ; 1 bytes @ 0x4
  7365                           
  7366     00A4                     ??___lwdiv:	
  7367                           ; 1 bytes @ 0x4
  7368                           
  7369     00A4                     ??___lwmod:	
  7370                           ; 1 bytes @ 0x4
  7371                           
  7372     00A4                     ??___xxtofl:	
  7373                           ; 1 bytes @ 0x4
  7374                           
  7375                           
  7376                           ; 1 bytes @ 0x4
  7377     00A4                     	ds	1
  7378     00A5                     ___awdiv@sign:
  7379     00A5                     ___awmod@sign:	
  7380                           ; 1 bytes @ 0x5
  7381                           
  7382     00A5                     fputc@fp:	
  7383                           ; 1 bytes @ 0x5
  7384                           
  7385                           
  7386                           ; 2 bytes @ 0x5
  7387     00A5                     	ds	1
  7388     00A6                     ?_SPI1_Open:
  7389     00A6                     ?_atoi:	
  7390                           ; 1 bytes @ 0x6
  7391                           
  7392     00A6                     ?_abs:	
  7393                           ; 2 bytes @ 0x6
  7394                           
  7395     00A6                     ?_read_prec_or_width:	
  7396                           ; 2 bytes @ 0x6
  7397                           
  7398     00A6                     SPI1_Open@spiConfigIndex:	
  7399                           ; 2 bytes @ 0x6
  7400                           
  7401     00A6                     ___lwdiv@counter:	
  7402                           ; 1 bytes @ 0x6
  7403                           
  7404     00A6                     atoi@s:	
  7405                           ; 1 bytes @ 0x6
  7406                           
  7407     00A6                     read_prec_or_width@fmt:	
  7408                           ; 1 bytes @ 0x6
  7409                           
  7410     00A6                     ___awdiv@quotient:	
  7411                           ; 1 bytes @ 0x6
  7412                           
  7413     00A6                     __Umul8_16@word_mpld:	
  7414                           ; 2 bytes @ 0x6
  7415                           
  7416     00A6                     abs@a:	
  7417                           ; 2 bytes @ 0x6
  7418                           
  7419                           
  7420                           ; 2 bytes @ 0x6
  7421     00A6                     	ds	1
  7422     00A7                     read_prec_or_width@ap:
  7423     00A7                     ??_SPI1_Open:	
  7424                           ; 2 bytes @ 0x7
  7425                           
  7426     00A7                     ??_fputc:	
  7427                           ; 1 bytes @ 0x7
  7428                           
  7429                           
  7430                           ; 1 bytes @ 0x7
  7431     00A7                     	ds	1
  7432     00A8                     __Umul8_16@multiplier:
  7433     00A8                     ___xxtofl@sign:	
  7434                           ; 1 bytes @ 0x8
  7435                           
  7436     00A8                     ??_atoi:	
  7437                           ; 1 bytes @ 0x8
  7438                           
  7439     00A8                     ??_abs:	
  7440                           ; 1 bytes @ 0x8
  7441                           
  7442     00A8                     ??___fldiv:	
  7443                           ; 1 bytes @ 0x8
  7444                           
  7445                           
  7446                           ; 1 bytes @ 0x8
  7447     00A8                     	ds	1
  7448     00A9                     ___xxtofl@exp:
  7449     00A9                     ??_initLedstrip:	
  7450                           ; 1 bytes @ 0x9
  7451                           
  7452     00A9                     ??_read_prec_or_width:	
  7453                           ; 1 bytes @ 0x9
  7454                           
  7455                           
  7456                           ; 1 bytes @ 0x9
  7457     00A9                     	ds	1
  7458     00AA                     atoi@neg:
  7459     00AA                     ___xxtofl@arg:	
  7460                           ; 1 bytes @ 0xA
  7461                           
  7462                           
  7463                           ; 4 bytes @ 0xA
  7464     00AA                     	ds	1
  7465     00AB                     atoi@n:
  7466                           
  7467                           ; 2 bytes @ 0xB
  7468     00AB                     	ds	1
  7469     00AC                     ?_fputs:
  7470     00AC                     read_prec_or_width@c:	
  7471                           ; 2 bytes @ 0xC
  7472                           
  7473     00AC                     fputs@s:	
  7474                           ; 1 bytes @ 0xC
  7475                           
  7476                           
  7477                           ; 1 bytes @ 0xC
  7478     00AC                     	ds	1
  7479     00AD                     ?_setSetpoint:
  7480     00AD                     setSetpoint@new_setpoint:	
  7481                           ; 1 bytes @ 0xD
  7482                           
  7483     00AD                     read_prec_or_width@n:	
  7484                           ; 2 bytes @ 0xD
  7485                           
  7486     00AD                     fputs@fp:	
  7487                           ; 2 bytes @ 0xD
  7488                           
  7489     00AD                     ___fldiv@rem:	
  7490                           ; 2 bytes @ 0xD
  7491                           
  7492                           
  7493                           ; 4 bytes @ 0xD
  7494     00AD                     	ds	1
  7495     00AE                     ?___fladd:
  7496     00AE                     ___fladd@b:	
  7497                           ; 4 bytes @ 0xE
  7498                           
  7499                           
  7500                           ; 4 bytes @ 0xE
  7501     00AE                     	ds	1
  7502     00AF                     ??_setSetpoint:
  7503     00AF                     ??_fputs:	
  7504                           ; 1 bytes @ 0xF
  7505                           
  7506                           
  7507                           ; 1 bytes @ 0xF
  7508     00AF                     	ds	2
  7509     00B1                     ___fldiv@sign:
  7510     00B1                     fputs@c:	
  7511                           ; 1 bytes @ 0x11
  7512                           
  7513                           
  7514                           ; 1 bytes @ 0x11
  7515     00B1                     	ds	1
  7516     00B2                     ___fldiv@new_exp:
  7517     00B2                     fputs@i:	
  7518                           ; 2 bytes @ 0x12
  7519                           
  7520     00B2                     ___fladd@a:	
  7521                           ; 2 bytes @ 0x12
  7522                           
  7523                           
  7524                           ; 4 bytes @ 0x12
  7525     00B2                     	ds	2
  7526     00B4                     ?_pad:
  7527     00B4                     pad@fp:	
  7528                           ; 2 bytes @ 0x14
  7529                           
  7530     00B4                     ___fldiv@grs:	
  7531                           ; 2 bytes @ 0x14
  7532                           
  7533                           
  7534                           ; 4 bytes @ 0x14
  7535     00B4                     	ds	2
  7536     00B6                     pad@buf:
  7537     00B6                     ??___fladd:	
  7538                           ; 1 bytes @ 0x16
  7539                           
  7540                           
  7541                           ; 1 bytes @ 0x16
  7542     00B6                     	ds	1
  7543     00B7                     pad@p:
  7544                           
  7545                           ; 2 bytes @ 0x17
  7546     00B7                     	ds	1
  7547     00B8                     ___fldiv@bexp:
  7548                           
  7549                           ; 1 bytes @ 0x18
  7550     00B8                     	ds	1
  7551     00B9                     ___fldiv@aexp:
  7552     00B9                     ??_pad:	
  7553                           ; 1 bytes @ 0x19
  7554                           
  7555                           
  7556                           ; 1 bytes @ 0x19
  7557     00B9                     	ds	1
  7558     00BA                     pad@i:
  7559                           
  7560                           ; 2 bytes @ 0x1A
  7561     00BA                     	ds	2
  7562     00BC                     ?_dtoa:
  7563     00BC                     ?_utoa:	
  7564                           ; 2 bytes @ 0x1C
  7565                           
  7566     00BC                     dtoa@fp:	
  7567                           ; 2 bytes @ 0x1C
  7568                           
  7569     00BC                     utoa@fp:	
  7570                           ; 2 bytes @ 0x1C
  7571                           
  7572                           
  7573                           ; 2 bytes @ 0x1C
  7574     00BC                     	ds	2
  7575     00BE                     ___fladd@signs:
  7576     00BE                     dtoa@d:	
  7577                           ; 1 bytes @ 0x1E
  7578                           
  7579     00BE                     utoa@d:	
  7580                           ; 2 bytes @ 0x1E
  7581                           
  7582                           
  7583                           ; 2 bytes @ 0x1E
  7584     00BE                     	ds	1
  7585     00BF                     ___fladd@aexp:
  7586                           
  7587                           ; 1 bytes @ 0x1F
  7588     00BF                     	ds	1
  7589     00C0                     ___fladd@bexp:
  7590     00C0                     ??_dtoa:	
  7591                           ; 1 bytes @ 0x20
  7592                           
  7593     00C0                     ??_utoa:	
  7594                           ; 1 bytes @ 0x20
  7595                           
  7596                           
  7597                           ; 1 bytes @ 0x20
  7598     00C0                     	ds	1
  7599     00C1                     ___fladd@grs:
  7600     00C1                     utoa@p:	
  7601                           ; 1 bytes @ 0x21
  7602                           
  7603     00C1                     _dtoa$2185:	
  7604                           ; 1 bytes @ 0x21
  7605                           
  7606                           
  7607                           ; 2 bytes @ 0x21
  7608     00C1                     	ds	1
  7609     00C2                     ?___flsub:
  7610     00C2                     utoa@w:	
  7611                           ; 4 bytes @ 0x22
  7612                           
  7613     00C2                     ___flsub@a:	
  7614                           ; 2 bytes @ 0x22
  7615                           
  7616                           
  7617                           ; 4 bytes @ 0x22
  7618     00C2                     	ds	1
  7619     00C3                     dtoa@p:
  7620                           
  7621                           ; 1 bytes @ 0x23
  7622     00C3                     	ds	1
  7623     00C4                     dtoa@w:
  7624     00C4                     utoa@i:	
  7625                           ; 2 bytes @ 0x24
  7626                           
  7627                           
  7628                           ; 2 bytes @ 0x24
  7629     00C4                     	ds	2
  7630     00C6                     dtoa@s:
  7631     00C6                     ___flsub@b:	
  7632                           ; 1 bytes @ 0x26
  7633                           
  7634                           
  7635                           ; 4 bytes @ 0x26
  7636     00C6                     	ds	1
  7637     00C7                     dtoa@i:
  7638                           
  7639                           ; 2 bytes @ 0x27
  7640     00C7                     	ds	2
  7641     00C9                     ?_vfpfcnvrt:
  7642     00C9                     vfpfcnvrt@fp:	
  7643                           ; 2 bytes @ 0x29
  7644                           
  7645                           
  7646                           ; 2 bytes @ 0x29
  7647     00C9                     	ds	1
  7648     00CA                     ?___flmul:
  7649     00CA                     ___flmul@b:	
  7650                           ; 4 bytes @ 0x2A
  7651                           
  7652     00CA                     ??___flsub:	
  7653                           ; 4 bytes @ 0x2A
  7654                           
  7655                           
  7656                           ; 1 bytes @ 0x2A
  7657     00CA                     	ds	1
  7658     00CB                     vfpfcnvrt@fmt:
  7659                           
  7660                           ; 1 bytes @ 0x2B
  7661     00CB                     	ds	1
  7662     00CC                     vfpfcnvrt@ap:
  7663                           
  7664                           ; 2 bytes @ 0x2C
  7665     00CC                     	ds	2
  7666     00CE                     ___flmul@a:
  7667     00CE                     ??_vfpfcnvrt:	
  7668                           ; 4 bytes @ 0x2E
  7669                           
  7670                           
  7671                           ; 1 bytes @ 0x2E
  7672     00CE                     	ds	4
  7673     00D2                     vfpfcnvrt@done:
  7674     00D2                     ??___flmul:	
  7675                           ; 1 bytes @ 0x32
  7676                           
  7677                           
  7678                           ; 1 bytes @ 0x32
  7679     00D2                     	ds	1
  7680     00D3                     vfpfcnvrt@convarg:
  7681                           
  7682                           ; 4 bytes @ 0x33
  7683     00D3                     	ds	4
  7684     00D7                     ___flmul@sign:
  7685     00D7                     vfpfcnvrt@cp:	
  7686                           ; 1 bytes @ 0x37
  7687                           
  7688                           
  7689                           ; 2 bytes @ 0x37
  7690     00D7                     	ds	1
  7691     00D8                     ___flmul@grs:
  7692                           
  7693                           ; 4 bytes @ 0x38
  7694     00D8                     	ds	1
  7695     00D9                     ?_vfprintf:
  7696     00D9                     vfprintf@fp:	
  7697                           ; 2 bytes @ 0x39
  7698                           
  7699                           
  7700                           ; 2 bytes @ 0x39
  7701     00D9                     	ds	2
  7702     00DB                     vfprintf@fmt:
  7703                           
  7704                           ; 2 bytes @ 0x3B
  7705     00DB                     	ds	1
  7706     00DC                     ___flmul@aexp:
  7707                           
  7708                           ; 1 bytes @ 0x3C
  7709     00DC                     	ds	1
  7710     00DD                     ___flmul@bexp:
  7711     00DD                     vfprintf@ap:	
  7712                           ; 1 bytes @ 0x3D
  7713                           
  7714                           
  7715                           ; 2 bytes @ 0x3D
  7716     00DD                     	ds	1
  7717     00DE                     ___flmul@prod:
  7718                           
  7719                           ; 4 bytes @ 0x3E
  7720     00DE                     	ds	1
  7721     00DF                     ??_vfprintf:
  7722                           
  7723                           ; 1 bytes @ 0x3F
  7724     00DF                     	ds	1
  7725     00E0                     vfprintf@cfmt:
  7726                           
  7727                           ; 2 bytes @ 0x40
  7728     00E0                     	ds	2
  7729     00E2                     ?_sprintf:
  7730     00E2                     ?_printf:	
  7731                           ; 2 bytes @ 0x42
  7732                           
  7733     00E2                     sprintf@s:	
  7734                           ; 2 bytes @ 0x42
  7735                           
  7736     00E2                     ___flmul@temp:	
  7737                           ; 1 bytes @ 0x42
  7738                           
  7739     00E2                     printf@fmt:	
  7740                           ; 2 bytes @ 0x42
  7741                           
  7742                           
  7743                           ; 2 bytes @ 0x42
  7744     00E2                     	ds	1
  7745     00E3                     sprintf@fmt:
  7746                           
  7747                           ; 2 bytes @ 0x43
  7748     00E3                     	ds	1
  7749     00E4                     ?_str2float:
  7750     00E4                     ?___fltol:	
  7751                           ; 4 bytes @ 0x44
  7752                           
  7753     00E4                     str2float@str:	
  7754                           ; 4 bytes @ 0x44
  7755                           
  7756     00E4                     ___fltol@f1:	
  7757                           ; 1 bytes @ 0x44
  7758                           
  7759                           
  7760                           ; 4 bytes @ 0x44
  7761     00E4                     	ds	3
  7762     00E7                     ??_sprintf:
  7763                           
  7764                           ; 1 bytes @ 0x47
  7765     00E7                     	ds	1
  7766     00E8                     str2float@decimal_separator:
  7767     00E8                     printf@ap:	
  7768                           ; 1 bytes @ 0x48
  7769                           
  7770     00E8                     ??_printf:	
  7771                           ; 1 bytes @ 0x48
  7772                           
  7773     00E8                     ??_str2float:	
  7774                           ; 1 bytes @ 0x48
  7775                           
  7776     00E8                     ??___fltol:	
  7777                           ; 1 bytes @ 0x48
  7778                           
  7779                           
  7780                           ; 1 bytes @ 0x48
  7781     00E8                     	ds	1
  7782     00E9                     ?_printOut:
  7783     00E9                     ?_readLine:	
  7784                           ; 1 bytes @ 0x49
  7785                           
  7786     00E9                     str2float@multiplier:	
  7787                           ; 1 bytes @ 0x49
  7788                           
  7789     00E9                     printOut@str:	
  7790                           ; 1 bytes @ 0x49
  7791                           
  7792                           
  7793                           ; 1 bytes @ 0x49
  7794     00E9                     	ds	1
  7795     00EA                     str2float@i:
  7796     00EA                     ??_printOut:	
  7797                           ; 1 bytes @ 0x4A
  7798                           
  7799                           
  7800                           ; 1 bytes @ 0x4A
  7801     00EA                     	ds	1
  7802     00EB                     str2float@number:
  7803     00EB                     ??_readLine:	
  7804                           ; 4 bytes @ 0x4B
  7805                           
  7806                           
  7807                           ; 1 bytes @ 0x4B
  7808     00EB                     	ds	1
  7809     00EC                     ___fltol@sign1:
  7810                           
  7811                           ; 1 bytes @ 0x4C
  7812     00EC                     	ds	1
  7813     00ED                     ___fltol@exp1:
  7814                           
  7815                           ; 1 bytes @ 0x4D
  7816     00ED                     	ds	1
  7817     00EE                     ?_getLedNumber:
  7818     00EE                     getLedNumber@height:	
  7819                           ; 2 bytes @ 0x4E
  7820                           
  7821     00EE                     ??_printFloat:	
  7822                           ; 2 bytes @ 0x4E
  7823                           
  7824                           
  7825                           ; 1 bytes @ 0x4E
  7826     00EE                     	ds	1
  7827     00EF                     str2float@digit:
  7828                           
  7829                           ; 1 bytes @ 0x4F
  7830     00EF                     	ds	1
  7831     00F0                     ??_uartHandler:
  7832     00F0                     ??_printLogs:	
  7833                           ; 1 bytes @ 0x50
  7834                           
  7835     00F0                     ??_setKp:	
  7836                           ; 1 bytes @ 0x50
  7837                           
  7838     00F0                     ??_setKi:	
  7839                           ; 1 bytes @ 0x50
  7840                           
  7841     00F0                     ??_setKd:	
  7842                           ; 1 bytes @ 0x50
  7843                           
  7844     00F0                     ??_TMR6_Tasks:	
  7845                           ; 1 bytes @ 0x50
  7846                           
  7847     00F0                     ??_getLedNumber:	
  7848                           ; 1 bytes @ 0x50
  7849                           
  7850     00F0                     ??_updateLedstripAnimation:	
  7851                           ; 1 bytes @ 0x50
  7852                           
  7853                           
  7854                           	psect	cstackCOMMON
  7855     0070                     __pcstackCOMMON:	
  7856                           ; 1 bytes @ 0x50
  7857                           
  7858     0070                     ?_ADC_DefaultInterruptHandler:
  7859     0070                     ?_SPI1_Initialize:	
  7860                           ; 1 bytes @ 0x0
  7861                           
  7862     0070                     ?_TMR4_ISR:	
  7863                           ; 1 bytes @ 0x0
  7864                           
  7865     0070                     ?_TMR2_ISR:	
  7866                           ; 1 bytes @ 0x0
  7867                           
  7868     0070                     ?_TMR2_Initialize:	
  7869                           ; 1 bytes @ 0x0
  7870                           
  7871     0070                     ?_TMR4_Initialize:	
  7872                           ; 1 bytes @ 0x0
  7873                           
  7874     0070                     ?_TMR6_Initialize:	
  7875                           ; 1 bytes @ 0x0
  7876                           
  7877     0070                     ?_EUSART_Initialize:	
  7878                           ; 1 bytes @ 0x0
  7879                           
  7880     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7881                           ; 1 bytes @ 0x0
  7882                           
  7883     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7884                           ; 1 bytes @ 0x0
  7885                           
  7886     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7887                           ; 1 bytes @ 0x0
  7888                           
  7889     0070                     ?_EUSART_Read:	
  7890                           ; 1 bytes @ 0x0
  7891                           
  7892     0070                     ?_EUSART_IsRxReady:	
  7893                           ; 1 bytes @ 0x0
  7894                           
  7895     0070                     ?_EUSART_IsTxReady:	
  7896                           ; 1 bytes @ 0x0
  7897                           
  7898     0070                     ?_EUSART_ReceiveISR:	
  7899                           ; 1 bytes @ 0x0
  7900                           
  7901     0070                     ?_EUSART_TransmitISR:	
  7902                           ; 1 bytes @ 0x0
  7903                           
  7904     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7905                           ; 1 bytes @ 0x0
  7906                           
  7907     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7908                           ; 1 bytes @ 0x0
  7909                           
  7910     0070                     ?_initAdcMultiplexer:	
  7911                           ; 1 bytes @ 0x0
  7912                           
  7913     0070                     ?_controller:	
  7914                           ; 1 bytes @ 0x0
  7915                           
  7916     0070                     ?_initLedstrip:	
  7917                           ; 1 bytes @ 0x0
  7918                           
  7919     0070                     ?_uartHandler:	
  7920                           ; 1 bytes @ 0x0
  7921                           
  7922     0070                     ?_printLogs:	
  7923                           ; 1 bytes @ 0x0
  7924                           
  7925     0070                     ?_ADC_Initialize:	
  7926                           ; 1 bytes @ 0x0
  7927                           
  7928     0070                     ?_ADC_SelectChannel:	
  7929                           ; 1 bytes @ 0x0
  7930                           
  7931     0070                     ?_ADC_ISR:	
  7932                           ; 1 bytes @ 0x0
  7933                           
  7934     0070                     ?_pwm_fan_Initialize:	
  7935                           ; 1 bytes @ 0x0
  7936                           
  7937     0070                     ?_pwm_fan_LoadDutyValue:	
  7938                           ; 1 bytes @ 0x0
  7939                           
  7940     0070                     ?_PWM_buzzer_Initialize:	
  7941                           ; 1 bytes @ 0x0
  7942                           
  7943     0070                     ?_INTERRUPT_Initialize:	
  7944                           ; 1 bytes @ 0x0
  7945                           
  7946     0070                     ?_INTERRUPT_InterruptManager:	
  7947                           ; 1 bytes @ 0x0
  7948                           
  7949     0070                     ?_CLOCK_Initialize:	
  7950                           ; 1 bytes @ 0x0
  7951                           
  7952     0070                     ?_PIN_MANAGER_Initialize:	
  7953                           ; 1 bytes @ 0x0
  7954                           
  7955     0070                     ?_SYSTEM_Initialize:	
  7956                           ; 1 bytes @ 0x0
  7957                           
  7958     0070                     ?_TMR6_Tasks:	
  7959                           ; 1 bytes @ 0x0
  7960                           
  7961     0070                     ?_putch:	
  7962                           ; 1 bytes @ 0x0
  7963                           
  7964     0070                     ?_adcConversionDoneHandler:	
  7965                           ; 1 bytes @ 0x0
  7966                           
  7967     0070                     ?_sendLedstripStartFrame:	
  7968                           ; 1 bytes @ 0x0
  7969                           
  7970     0070                     ?_sendLedstripEndFrame:	
  7971                           ; 1 bytes @ 0x0
  7972                           
  7973     0070                     ?_position_led_strip:	
  7974                           ; 1 bytes @ 0x0
  7975                           
  7976     0070                     ?_updateLedstripAnimation:	
  7977                           ; 1 bytes @ 0x0
  7978                           
  7979     0070                     ?i1_ADC_SelectChannel:	
  7980                           ; 1 bytes @ 0x0
  7981                           
  7982     0070                     ?_ADC_GetConversionResult:	
  7983                           ; 1 bytes @ 0x0
  7984                           
  7985     0070                     ?_main:	
  7986                           ; 2 bytes @ 0x0
  7987                           
  7988     0070                     ?i1_getHoogtesensor:	
  7989                           ; 2 bytes @ 0x0
  7990                           
  7991     0070                     ?i1__Umul8_16:	
  7992                           ; 2 bytes @ 0x0
  7993                           
  7994     0070                     ?i1___xxtofl:	
  7995                           ; 2 bytes @ 0x0
  7996                           
  7997     0070                     EUSART_ReceiveISR@regValue:	
  7998                           ; 4 bytes @ 0x0
  7999                           
  8000     0070                     EUSART_TransmitISR@tempTxTail:	
  8001                           ; 1 bytes @ 0x0
  8002                           
  8003     0070                     i1__Umul8_16@multiplicand:	
  8004                           ; 1 bytes @ 0x0
  8005                           
  8006     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  8007                           ; 1 bytes @ 0x0
  8008                           
  8009     0070                     i1___xxtofl@val:	
  8010                           ; 2 bytes @ 0x0
  8011                           
  8012     0070                     ??_ADC_DefaultInterruptHandler:	
  8013                           ; 4 bytes @ 0x0
  8014                           
  8015     0070                     ??_TMR2_ISR:	
  8016                           ; 1 bytes @ 0x0
  8017                           
  8018     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  8019                           ; 1 bytes @ 0x0
  8020                           
  8021     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  8022                           ; 1 bytes @ 0x0
  8023                           
  8024     0070                     ??_EUSART_ReceiveISR:	
  8025                           ; 1 bytes @ 0x0
  8026                           
  8027     0070                     ??_EUSART_TransmitISR:	
  8028                           ; 1 bytes @ 0x0
  8029                           
  8030     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  8031                           ; 1 bytes @ 0x0
  8032                           
  8033     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  8034                           ; 1 bytes @ 0x0
  8035                           
  8036     0070                     ??i1_ADC_SelectChannel:	
  8037                           ; 1 bytes @ 0x0
  8038                           
  8039                           
  8040                           ; 1 bytes @ 0x0
  8041     0070                     	ds	1
  8042     0071                     EUSART_ReceiveISR@tempRxHead:
  8043     0071                     i1ADC_SelectChannel@channel:	
  8044                           ; 1 bytes @ 0x1
  8045                           
  8046                           
  8047                           ; 1 bytes @ 0x1
  8048     0071                     	ds	1
  8049     0072                     ??_ADC_GetConversionResult:
  8050     0072                     ??_pwm_fan_LoadDutyValue:	
  8051                           ; 1 bytes @ 0x2
  8052                           
  8053     0072                     ??_adcConversionDoneHandler:	
  8054                           ; 1 bytes @ 0x2
  8055                           
  8056     0072                     ??i1_getHoogtesensor:	
  8057                           ; 1 bytes @ 0x2
  8058                           
  8059     0072                     ??i1__Umul8_16:	
  8060                           ; 1 bytes @ 0x2
  8061                           
  8062                           
  8063                           ; 1 bytes @ 0x2
  8064     0072                     	ds	2
  8065     0074                     i1__Umul8_16@product:
  8066     0074                     ??_ADC_ISR:	
  8067                           ; 2 bytes @ 0x4
  8068                           
  8069     0074                     ??i1___xxtofl:	
  8070                           ; 1 bytes @ 0x4
  8071                           
  8072                           
  8073                           ; 1 bytes @ 0x4
  8074     0074                     	ds	2
  8075     0076                     i1__Umul8_16@word_mpld:
  8076                           
  8077                           ; 2 bytes @ 0x6
  8078     0076                     	ds	2
  8079     0078                     i1__Umul8_16@multiplier:
  8080     0078                     i1___xxtofl@sign:	
  8081                           ; 1 bytes @ 0x8
  8082                           
  8083                           
  8084                           ; 1 bytes @ 0x8
  8085     0078                     	ds	1
  8086     0079                     i1___xxtofl@exp:
  8087                           
  8088                           ; 1 bytes @ 0x9
  8089     0079                     	ds	1
  8090     007A                     i1___xxtofl@arg:
  8091                           
  8092                           ; 4 bytes @ 0xA
  8093     007A                     	ds	4
  8094     007E                     ??_TMR4_ISR:
  8095     007E                     ??_INTERRUPT_InterruptManager:	
  8096                           ; 1 bytes @ 0xE
  8097                           
  8098                           
  8099                           	psect	cstackBANK0
  8100     0020                     __pcstackBANK0:	
  8101                           ; 1 bytes @ 0xE
  8102                           
  8103     0020                     ?i1___flmul:
  8104     0020                     i1___flmul@b:	
  8105                           ; 4 bytes @ 0x0
  8106                           
  8107                           
  8108                           ; 4 bytes @ 0x0
  8109     0020                     	ds	4
  8110     0024                     i1___flmul@a:
  8111                           
  8112                           ; 4 bytes @ 0x4
  8113     0024                     	ds	4
  8114     0028                     ??i1___flmul:
  8115                           
  8116                           ; 1 bytes @ 0x8
  8117     0028                     	ds	5
  8118     002D                     i1___flmul@sign:
  8119                           
  8120                           ; 1 bytes @ 0xD
  8121     002D                     	ds	1
  8122     002E                     i1___flmul@grs:
  8123                           
  8124                           ; 4 bytes @ 0xE
  8125     002E                     	ds	4
  8126     0032                     i1___flmul@aexp:
  8127                           
  8128                           ; 1 bytes @ 0x12
  8129     0032                     	ds	1
  8130     0033                     i1___flmul@bexp:
  8131                           
  8132                           ; 1 bytes @ 0x13
  8133     0033                     	ds	1
  8134     0034                     i1___flmul@prod:
  8135                           
  8136                           ; 4 bytes @ 0x14
  8137     0034                     	ds	4
  8138     0038                     i1___flmul@temp:
  8139                           
  8140                           ; 2 bytes @ 0x18
  8141     0038                     	ds	2
  8142     003A                     ?i1___fltol:
  8143     003A                     ?i1___fladd:	
  8144                           ; 4 bytes @ 0x1A
  8145                           
  8146     003A                     i1___fltol@f1:	
  8147                           ; 4 bytes @ 0x1A
  8148                           
  8149     003A                     i1___fladd@b:	
  8150                           ; 4 bytes @ 0x1A
  8151                           
  8152                           
  8153                           ; 4 bytes @ 0x1A
  8154     003A                     	ds	4
  8155     003E                     i1___fladd@a:
  8156     003E                     ??i1___fltol:	
  8157                           ; 4 bytes @ 0x1E
  8158                           
  8159                           
  8160                           ; 1 bytes @ 0x1E
  8161     003E                     	ds	4
  8162     0042                     i1___fltol@sign1:
  8163     0042                     ??i1___fladd:	
  8164                           ; 1 bytes @ 0x22
  8165                           
  8166                           
  8167                           ; 1 bytes @ 0x22
  8168     0042                     	ds	1
  8169     0043                     i1___fltol@exp1:
  8170                           
  8171                           ; 1 bytes @ 0x23
  8172     0043                     	ds	7
  8173     004A                     i1___fladd@signs:
  8174                           
  8175                           ; 1 bytes @ 0x2A
  8176     004A                     	ds	1
  8177     004B                     i1___fladd@aexp:
  8178                           
  8179                           ; 1 bytes @ 0x2B
  8180     004B                     	ds	1
  8181     004C                     i1___fladd@bexp:
  8182                           
  8183                           ; 1 bytes @ 0x2C
  8184     004C                     	ds	1
  8185     004D                     i1___fladd@grs:
  8186                           
  8187                           ; 1 bytes @ 0x2D
  8188     004D                     	ds	1
  8189     004E                     ??_controller:
  8190                           
  8191                           ; 1 bytes @ 0x2E
  8192     004E                     	ds	2
  8193     0050                     controller@difference:
  8194                           
  8195                           ; 2 bytes @ 0x30
  8196     0050                     	ds	2
  8197     0052                     controller@P:
  8198                           
  8199                           ; 2 bytes @ 0x32
  8200     0052                     	ds	2
  8201     0054                     controller@I:
  8202                           
  8203                           ; 2 bytes @ 0x34
  8204     0054                     	ds	2
  8205     0056                     controller@D:
  8206                           
  8207                           ; 2 bytes @ 0x36
  8208     0056                     	ds	2
  8209     0058                     controller@error:
  8210                           
  8211                           ; 2 bytes @ 0x38
  8212     0058                     	ds	2
  8213                           
  8214                           	psect	maintext
  8215     156D                     __pmaintext:	
  8216 ;;
  8217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8218 ;;
  8219 ;; *************** function _main *****************
  8220 ;; Defined at:
  8221 ;;		line 52 in file "main.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  str            20   14[BANK2 ] unsigned char [20]
  8226 ;;  counter         1   34[BANK2 ] unsigned char 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  2  818[None  ] int 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : B1F/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;      Totals:         0       0       0      23       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;Total ram usage:       23 bytes
  8241 ;; Hardware stack levels required when called: 16
  8242 ;; This function calls:
  8243 ;;		_PWM_buzzer_LoadDutyValue
  8244 ;;		_SYSTEM_Initialize
  8245 ;;		_TMR4_PeriodMatchCallbackRegister
  8246 ;;		_TMR6_Tasks
  8247 ;;		___wmul
  8248 ;;		_getPomphoogte
  8249 ;;		_initAdcMultiplexer
  8250 ;;		_initLedstrip
  8251 ;;		_printLogs
  8252 ;;		_printOut
  8253 ;;		_setSetpoint
  8254 ;;		_sprintf
  8255 ;;		_uartHandler
  8256 ;; This function is called by:
  8257 ;;		Startup code after reset
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261     156D                     _main:	
  8262                           ;psect for function _main
  8263                           
  8264     156D                     l6348:	
  8265                           ;incstack = 0
  8266                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8267                           
  8268                           
  8269                           ;main.c: 54:     SYSTEM_Initialize();
  8270     156D  319D  2514  3195   	fcall	_SYSTEM_Initialize
  8271     1570                     l6350:
  8272                           
  8273                           ;main.c: 60:     (INTCONbits.GIE = 1);
  8274     1570  178B               	bsf	11,7	;volatile
  8275     1571                     l6352:
  8276                           
  8277                           ;main.c: 66:     (INTCONbits.PEIE = 1);
  8278     1571  170B               	bsf	11,6	;volatile
  8279                           
  8280                           ;main.c: 71:     initAdcMultiplexer();
  8281     1572  319B  2314  3195   	fcall	_initAdcMultiplexer
  8282                           
  8283                           ;main.c: 72:     TMR4_PeriodMatchCallbackRegister(controller);
  8284     1575  3082               	movlw	low _controller
  8285     1576  0021               	movlb	1	; select bank1
  8286     1577  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  8287     1578  3009               	movlw	high _controller
  8288     1579  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  8289     157A  319A  223F  3195   	fcall	_TMR4_PeriodMatchCallbackRegister
  8290     157D                     l6354:
  8291                           
  8292                           ;main.c: 73:     initLedstrip();
  8293     157D  319B  2321  3195   	fcall	_initLedstrip
  8294     1580                     l6356:
  8295                           
  8296                           ;main.c: 75:     uint8_t counter = 0;
  8297     1580  0022               	movlb	2	; select bank2
  8298     1581  01C2               	clrf	main@counter^(0+256)
  8299     1582                     l6358:
  8300                           
  8301                           ;main.c: 78:     {;main.c: 79:         uartHandler();
  8302     1582  3187  2714  3195   	fcall	_uartHandler
  8303     1585                     l6360:
  8304                           
  8305                           ;main.c: 81:         if (buzzing == 0){
  8306     1585  0020               	movlb	0	; select bank0
  8307     1586  0867               	movf	_buzzing,w
  8308     1587  1D03               	btfss	3,2
  8309     1588  2D8A               	goto	u7631
  8310     1589  2D8B               	goto	u7630
  8311     158A                     u7631:
  8312     158A  2DB6               	goto	l6374
  8313     158B                     u7630:
  8314     158B                     l6362:
  8315                           
  8316                           ;main.c: 83:            if (getPomphoogte() >= 450) {
  8317     158B  319A  226C  3195   	fcall	_getPomphoogte
  8318     158E  3001               	movlw	1
  8319     158F  0021               	movlb	1	; select bank1
  8320     1590  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
  8321     1591  30C2               	movlw	194
  8322     1592  1903               	skipnz
  8323     1593  0220               	subwf	?_getPomphoogte^(0+128),w
  8324     1594  1C03               	skipc
  8325     1595  2D97               	goto	u7641
  8326     1596  2D98               	goto	u7640
  8327     1597                     u7641:
  8328     1597  2DAE               	goto	l6372
  8329     1598                     u7640:
  8330     1598                     l6364:
  8331                           
  8332                           ;main.c: 84:             PWM_buzzer_LoadDutyValue(50);
  8333     1598  3032               	movlw	50
  8334     1599  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
  8335     159A  3000               	movlw	0
  8336     159B  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue^(0+128)+1)
  8337     159C  319C  2468  3195   	fcall	_PWM_buzzer_LoadDutyValue
  8338     159F                     l6366:
  8339                           
  8340                           ;main.c: 85:             buzzing = 1;
  8341     159F  3001               	movlw	1
  8342     15A0  0020               	movlb	0	; select bank0
  8343     15A1  00E7               	movwf	_buzzing
  8344     15A2                     l6368:
  8345                           
  8346                           ;main.c: 86:             counter += 1;
  8347     15A2  3001               	movlw	1
  8348     15A3  0022               	movlb	2	; select bank2
  8349     15A4  07C2               	addwf	main@counter^(0+256),f
  8350     15A5                     l6370:
  8351                           
  8352                           ;main.c: 87:             _delay((unsigned long)((20)*(32000000U/4000.0)));
  8353     15A5  30D0               	movlw	208
  8354     15A6  0022               	movlb	2	; select bank2
  8355     15A7  00AC               	movwf	??_main^(0+256)
  8356     15A8  30C9               	movlw	201
  8357     15A9                     u7687:
  8358     15A9  0B89               	decfsz	9,f
  8359     15AA  2DA9               	goto	u7687
  8360     15AB  0BAC               	decfsz	??_main^(0+256),f
  8361     15AC  2DA9               	goto	u7687
  8362     15AD  3200               	nop2
  8363     15AE                     l6372:
  8364                           
  8365                           ;main.c: 90:            PWM_buzzer_LoadDutyValue(0);
  8366     15AE  3000               	movlw	0
  8367     15AF  0021               	movlb	1	; select bank1
  8368     15B0  00A0               	movwf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128)
  8369     15B1  00A1               	movwf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128)
  8370     15B2  319C  2468  3195   	fcall	_PWM_buzzer_LoadDutyValue
  8371                           
  8372                           ;main.c: 91:         } else {
  8373     15B5  2DC5               	goto	l6378
  8374     15B6                     l6374:
  8375                           
  8376                           ;main.c: 92:             if (getPomphoogte() <= 350) {
  8377     15B6  319A  226C  3195   	fcall	_getPomphoogte
  8378     15B9  3001               	movlw	1
  8379     15BA  0021               	movlb	1	; select bank1
  8380     15BB  0221               	subwf	(?_getPomphoogte+1)^(0+128),w
  8381     15BC  305F               	movlw	95
  8382     15BD  1903               	skipnz
  8383     15BE  0220               	subwf	?_getPomphoogte^(0+128),w
  8384     15BF  1803               	skipnc
  8385     15C0  2DC2               	goto	u7651
  8386     15C1  2DC3               	goto	u7650
  8387     15C2                     u7651:
  8388     15C2  2DC5               	goto	l6378
  8389     15C3                     u7650:
  8390     15C3                     l6376:
  8391                           
  8392                           ;main.c: 93:                 buzzing = 0;
  8393     15C3  0020               	movlb	0	; select bank0
  8394     15C4  01E7               	clrf	_buzzing
  8395     15C5                     l6378:
  8396                           
  8397                           ;main.c: 97:         _delay((unsigned long)((1)*(32000000U/4000.0)));
  8398     15C5  300B               	movlw	11
  8399     15C6  0022               	movlb	2	; select bank2
  8400     15C7  00AC               	movwf	??_main^(0+256)
  8401     15C8  3062               	movlw	98
  8402     15C9                     u7697:
  8403     15C9  0B89               	decfsz	9,f
  8404     15CA  2DC9               	goto	u7697
  8405     15CB  0BAC               	decfsz	??_main^(0+256),f
  8406     15CC  2DC9               	goto	u7697
  8407     15CD  0000               	nop
  8408     15CE                     l6380:
  8409                           
  8410                           ;main.c: 100:         printLogs();
  8411     15CE  3197  2757  3195   	fcall	_printLogs
  8412     15D1                     l6382:
  8413                           
  8414                           ;main.c: 102:         setSetpoint(45 + counter * 50);
  8415     15D1  0022               	movlb	2	; select bank2
  8416     15D2  0842               	movf	main@counter^(0+256),w
  8417     15D3  00AC               	movwf	??_main^(0+256)
  8418     15D4  01AD               	clrf	(??_main^(0+256)+1)
  8419     15D5  082C               	movf	??_main^(0+256),w
  8420     15D6  0021               	movlb	1	; select bank1
  8421     15D7  00A0               	movwf	___wmul@multiplier^(0+128)
  8422     15D8  0022               	movlb	2	; select bank2
  8423     15D9  082D               	movf	(??_main+1)^(0+256),w
  8424     15DA  0021               	movlb	1	; select bank1
  8425     15DB  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  8426     15DC  3032               	movlw	50
  8427     15DD  00A2               	movwf	___wmul@multiplicand^(0+128)
  8428     15DE  3000               	movlw	0
  8429     15DF  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  8430     15E0  319C  24B4  3195   	fcall	___wmul
  8431     15E3  0021               	movlb	1	; select bank1
  8432     15E4  0820               	movf	?___wmul^(0+128),w
  8433     15E5  3E2D               	addlw	45
  8434     15E6  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  8435     15E7  3000               	movlw	0
  8436     15E8  3D21               	addwfc	(?___wmul+1)^(0+128),w
  8437     15E9  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8438     15EA  319A  2290  3195   	fcall	_setSetpoint
  8439     15ED                     l6384:
  8440                           
  8441                           ;main.c: 103:         char str[20];;main.c: 104:         sprintf(str, "counter: %u\n\r",
      +                           counter);
  8442     15ED  302E               	movlw	(low (main@str| (0+256)))& (0+255)
  8443     15EE  0021               	movlb	1	; select bank1
  8444     15EF  00E2               	movwf	sprintf@s^(0+128)
  8445     15F0  30BD               	movlw	low (STR_1| (0+32768))
  8446     15F1  00E3               	movwf	sprintf@fmt^(0+128)
  8447     15F2  3098               	movlw	high (STR_1| (0+32768))
  8448     15F3  00E4               	movwf	(sprintf@fmt^(0+128)+1)
  8449     15F4  0022               	movlb	2	; select bank2
  8450     15F5  0842               	movf	main@counter^(0+256),w
  8451     15F6  00AC               	movwf	??_main^(0+256)
  8452     15F7  01AD               	clrf	(??_main^(0+256)+1)
  8453     15F8  082C               	movf	??_main^(0+256),w
  8454     15F9  0021               	movlb	1	; select bank1
  8455     15FA  00E5               	movwf	(?_sprintf^(0+128)+3)
  8456     15FB  0022               	movlb	2	; select bank2
  8457     15FC  082D               	movf	(??_main+1)^(0+256),w
  8458     15FD  0021               	movlb	1	; select bank1
  8459     15FE  00E6               	movwf	((?_sprintf+1)^(0+128)+3)
  8460     15FF  319D  25A1  3195   	fcall	_sprintf
  8461     1602                     l6386:
  8462                           
  8463                           ;main.c: 105:         printOut(str);
  8464     1602  302E               	movlw	(low (main@str| (0+256)))& (0+255)
  8465     1603  0021               	movlb	1	; select bank1
  8466     1604  00E9               	movwf	printOut@str^(0+128)
  8467     1605  319A  227E  3195   	fcall	_printOut
  8468     1608                     l6388:
  8469                           
  8470                           ;main.c: 107:         TMR6_Tasks();
  8471     1608  319C  2413  3195   	fcall	_TMR6_Tasks
  8472     160B  2D82               	goto	l6358
  8473     160C  3180  2858         	ljmp	start
  8474     160E                     __end_of_main:
  8475                           
  8476                           	psect	text1
  8477     0714                     __ptext1:	
  8478 ;; *************** function _uartHandler *****************
  8479 ;; Defined at:
  8480 ;;		line 96 in file "UART.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  str             1    4[BANK2 ] PTR unsigned char 
  8485 ;;		 -> line(20), 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;Total ram usage:        1 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 15
  8502 ;; This function calls:
  8503 ;;		_atoi
  8504 ;;		_printf
  8505 ;;		_readLine
  8506 ;;		_setKd
  8507 ;;		_setKi
  8508 ;;		_setKp
  8509 ;;		_setSetpoint
  8510 ;;		_str2float
  8511 ;; This function is called by:
  8512 ;;		_main
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516     0714                     _uartHandler:	
  8517                           ;psect for function _uartHandler
  8518                           
  8519     0714                     l6250:	
  8520                           ;incstack = 0
  8521                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8522                           
  8523                           
  8524                           ;UART.c: 97:     char *str = readLine();
  8525     0714  3190  203B  3187   	fcall	_readLine
  8526     0717  0022               	movlb	2	; select bank2
  8527     0718  00A4               	movwf	uartHandler@str^(0+256)
  8528                           
  8529                           ;UART.c: 98:     switch (*str) {
  8530     0719  2FC3               	goto	l6274
  8531     071A                     l6252:
  8532                           
  8533                           ;UART.c: 104:             setSetpoint((uint16_t) atoi(str + 1));
  8534     071A  0824               	movf	uartHandler@str^(0+256),w
  8535     071B  3E01               	addlw	1
  8536     071C  0021               	movlb	1	; select bank1
  8537     071D  00A6               	movwf	atoi@s^(0+128)
  8538     071E  3193  23CD  3187   	fcall	_atoi
  8539     0721  0021               	movlb	1	; select bank1
  8540     0722  0827               	movf	(?_atoi+1)^(0+128),w
  8541     0723  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  8542     0724  0826               	movf	?_atoi^(0+128),w
  8543     0725  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  8544     0726  319A  2290  3187   	fcall	_setSetpoint
  8545     0729                     l6254:
  8546                           
  8547                           ;UART.c: 105:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  8548     0729  304C               	movlw	low (STR_12| (0+32768))
  8549     072A  0021               	movlb	1	; select bank1
  8550     072B  00E2               	movwf	printf@fmt^(0+128)
  8551     072C  3098               	movlw	high (STR_12| (0+32768))
  8552     072D  00E3               	movwf	(printf@fmt^(0+128)+1)
  8553     072E  0022               	movlb	2	; select bank2
  8554     072F  0824               	movf	uartHandler@str^(0+256),w
  8555     0730  3E01               	addlw	1
  8556     0731  0021               	movlb	1	; select bank1
  8557     0732  00A6               	movwf	atoi@s^(0+128)
  8558     0733  3193  23CD  3187   	fcall	_atoi
  8559     0736  0021               	movlb	1	; select bank1
  8560     0737  0827               	movf	(?_atoi+1)^(0+128),w
  8561     0738  00E5               	movwf	((?_printf+1)^(0+128)+2)
  8562     0739  0826               	movf	?_atoi^(0+128),w
  8563     073A  00E4               	movwf	(?_printf^(0+128)+2)
  8564     073B  319C  2401  3187   	fcall	_printf
  8565                           
  8566                           ;UART.c: 106:             break;
  8567     073E  2FEA               	goto	l952
  8568     073F                     l6256:
  8569                           
  8570                           ;UART.c: 110:             setKp(str2float(str + 1));
  8571     073F  0824               	movf	uartHandler@str^(0+256),w
  8572     0740  3E01               	addlw	1
  8573     0741  0021               	movlb	1	; select bank1
  8574     0742  00E4               	movwf	str2float@str^(0+128)
  8575     0743  3188  201E  3187   	fcall	_str2float
  8576     0746  0021               	movlb	1	; select bank1
  8577     0747  0867               	movf	(?_str2float+3)^(0+128),w
  8578     0748  0022               	movlb	2	; select bank2
  8579     0749  00A3               	movwf	(setKp@new_kp+3)^(0+256)
  8580     074A  0021               	movlb	1	; select bank1
  8581     074B  0866               	movf	(?_str2float+2)^(0+128),w
  8582     074C  0022               	movlb	2	; select bank2
  8583     074D  00A2               	movwf	(setKp@new_kp+2)^(0+256)
  8584     074E  0021               	movlb	1	; select bank1
  8585     074F  0865               	movf	(?_str2float+1)^(0+128),w
  8586     0750  0022               	movlb	2	; select bank2
  8587     0751  00A1               	movwf	(setKp@new_kp+1)^(0+256)
  8588     0752  0021               	movlb	1	; select bank1
  8589     0753  0864               	movf	?_str2float^(0+128),w
  8590     0754  0022               	movlb	2	; select bank2
  8591     0755  00A0               	movwf	setKp@new_kp^(0+256)
  8592     0756  319A  22B7  3187   	fcall	_setKp
  8593     0759                     l6258:
  8594                           
  8595                           ;UART.c: 111:             printf("changed kp\r\n");
  8596     0759  30E5               	movlw	low (STR_13| (0+32768))
  8597     075A  0021               	movlb	1	; select bank1
  8598     075B  00E2               	movwf	printf@fmt^(0+128)
  8599     075C  3098               	movlw	high (STR_13| (0+32768))
  8600     075D  00E3               	movwf	(printf@fmt^(0+128)+1)
  8601     075E  319C  2401  3187   	fcall	_printf
  8602                           
  8603                           ;UART.c: 112:             break;
  8604     0761  2FEA               	goto	l952
  8605     0762                     l6260:
  8606                           
  8607                           ;UART.c: 115:             setKi(str2float(str + 1));
  8608     0762  0824               	movf	uartHandler@str^(0+256),w
  8609     0763  3E01               	addlw	1
  8610     0764  0021               	movlb	1	; select bank1
  8611     0765  00E4               	movwf	str2float@str^(0+128)
  8612     0766  3188  201E  3187   	fcall	_str2float
  8613     0769  0021               	movlb	1	; select bank1
  8614     076A  0867               	movf	(?_str2float+3)^(0+128),w
  8615     076B  0022               	movlb	2	; select bank2
  8616     076C  00A3               	movwf	(setKi@new_ki+3)^(0+256)
  8617     076D  0021               	movlb	1	; select bank1
  8618     076E  0866               	movf	(?_str2float+2)^(0+128),w
  8619     076F  0022               	movlb	2	; select bank2
  8620     0770  00A2               	movwf	(setKi@new_ki+2)^(0+256)
  8621     0771  0021               	movlb	1	; select bank1
  8622     0772  0865               	movf	(?_str2float+1)^(0+128),w
  8623     0773  0022               	movlb	2	; select bank2
  8624     0774  00A1               	movwf	(setKi@new_ki+1)^(0+256)
  8625     0775  0021               	movlb	1	; select bank1
  8626     0776  0864               	movf	?_str2float^(0+128),w
  8627     0777  0022               	movlb	2	; select bank2
  8628     0778  00A0               	movwf	setKi@new_ki^(0+256)
  8629     0779  319A  22AD  3187   	fcall	_setKi
  8630     077C                     l6262:
  8631                           
  8632                           ;UART.c: 116:             printf("changed ki\r\n");
  8633     077C  30D8               	movlw	low (STR_14| (0+32768))
  8634     077D  0021               	movlb	1	; select bank1
  8635     077E  00E2               	movwf	printf@fmt^(0+128)
  8636     077F  3098               	movlw	high (STR_14| (0+32768))
  8637     0780  00E3               	movwf	(printf@fmt^(0+128)+1)
  8638     0781  319C  2401  3187   	fcall	_printf
  8639                           
  8640                           ;UART.c: 117:             break;
  8641     0784  2FEA               	goto	l952
  8642     0785                     l6264:
  8643                           
  8644                           ;UART.c: 120:             setKd(str2float(str + 1));
  8645     0785  0824               	movf	uartHandler@str^(0+256),w
  8646     0786  3E01               	addlw	1
  8647     0787  0021               	movlb	1	; select bank1
  8648     0788  00E4               	movwf	str2float@str^(0+128)
  8649     0789  3188  201E  3187   	fcall	_str2float
  8650     078C  0021               	movlb	1	; select bank1
  8651     078D  0867               	movf	(?_str2float+3)^(0+128),w
  8652     078E  0022               	movlb	2	; select bank2
  8653     078F  00A3               	movwf	(setKd@new_kd+3)^(0+256)
  8654     0790  0021               	movlb	1	; select bank1
  8655     0791  0866               	movf	(?_str2float+2)^(0+128),w
  8656     0792  0022               	movlb	2	; select bank2
  8657     0793  00A2               	movwf	(setKd@new_kd+2)^(0+256)
  8658     0794  0021               	movlb	1	; select bank1
  8659     0795  0865               	movf	(?_str2float+1)^(0+128),w
  8660     0796  0022               	movlb	2	; select bank2
  8661     0797  00A1               	movwf	(setKd@new_kd+1)^(0+256)
  8662     0798  0021               	movlb	1	; select bank1
  8663     0799  0864               	movf	?_str2float^(0+128),w
  8664     079A  0022               	movlb	2	; select bank2
  8665     079B  00A0               	movwf	setKd@new_kd^(0+256)
  8666     079C  319A  22A3  3187   	fcall	_setKd
  8667     079F                     l6266:
  8668                           
  8669                           ;UART.c: 121:             printf("changed kd\r\n");
  8670     079F  30CB               	movlw	low (STR_15| (0+32768))
  8671     07A0  0021               	movlb	1	; select bank1
  8672     07A1  00E2               	movwf	printf@fmt^(0+128)
  8673     07A2  3098               	movlw	high (STR_15| (0+32768))
  8674     07A3  00E3               	movwf	(printf@fmt^(0+128)+1)
  8675     07A4  319C  2401  3187   	fcall	_printf
  8676                           
  8677                           ;UART.c: 122:             break;
  8678     07A7  2FEA               	goto	l952
  8679     07A8                     l6268:
  8680                           
  8681                           ;UART.c: 125:             mustPrintLogs = !mustPrintLogs;
  8682     07A8  0020               	movlb	0	; select bank0
  8683     07A9  086E               	movf	_mustPrintLogs,w
  8684     07AA  1903               	btfsc	3,2
  8685     07AB  2FAD               	goto	u7451
  8686     07AC  2FAF               	goto	u7450
  8687     07AD                     u7451:
  8688     07AD  3001               	movlw	1
  8689     07AE  2FB0               	goto	u7460
  8690     07AF                     u7450:
  8691     07AF  3000               	movlw	0
  8692     07B0                     u7460:
  8693     07B0  00EE               	movwf	_mustPrintLogs
  8694     07B1                     l6270:
  8695                           
  8696                           ;UART.c: 126:             printf("logs toggled\r\n");
  8697     07B1  309F               	movlw	low (STR_16| (0+32768))
  8698     07B2  0021               	movlb	1	; select bank1
  8699     07B3  00E2               	movwf	printf@fmt^(0+128)
  8700     07B4  3098               	movlw	high (STR_16| (0+32768))
  8701     07B5  00E3               	movwf	(printf@fmt^(0+128)+1)
  8702     07B6  319C  2401  3187   	fcall	_printf
  8703                           
  8704                           ;UART.c: 127:             break;
  8705     07B9  2FEA               	goto	l952
  8706     07BA                     l6272:
  8707                           
  8708                           ;UART.c: 131:             printf("Unkown command\r\n");
  8709     07BA  307D               	movlw	low (STR_17| (0+32768))
  8710     07BB  0021               	movlb	1	; select bank1
  8711     07BC  00E2               	movwf	printf@fmt^(0+128)
  8712     07BD  3098               	movlw	high (STR_17| (0+32768))
  8713     07BE  00E3               	movwf	(printf@fmt^(0+128)+1)
  8714     07BF  319C  2401  3187   	fcall	_printf
  8715                           
  8716                           ;UART.c: 132:     };
  8717     07C2  2FEA               	goto	l952
  8718     07C3                     l6274:
  8719     07C3  0824               	movf	uartHandler@str^(0+256),w
  8720     07C4  0086               	movwf	6
  8721     07C5  3001               	movlw	1	; select bank2/3
  8722     07C6  0087               	movwf	7
  8723     07C7  0801               	movf	1,w
  8724                           
  8725                           ; Switch size 1, requested type "simple"
  8726                           ; Number of cases is 11, Range of values is 0 to 115
  8727                           ; switch strategies available:
  8728                           ; Name         Instructions Cycles
  8729                           ; simple_byte           34    18 (average)
  8730                           ; direct_byte          238     6 (fixed)
  8731                           ; jumptable            260     6 (fixed)
  8732                           ;	Chosen strategy is simple_byte
  8733     07C8  3A00               	xorlw	0	; case 0
  8734     07C9  1903               	skipnz
  8735     07CA  2FEA               	goto	l952
  8736     07CB  3A44               	xorlw	68	; case 68
  8737     07CC  1903               	skipnz
  8738     07CD  2F85               	goto	l6264
  8739     07CE  3A0D               	xorlw	13	; case 73
  8740     07CF  1903               	skipnz
  8741     07D0  2F62               	goto	l6260
  8742     07D1  3A05               	xorlw	5	; case 76
  8743     07D2  1903               	skipnz
  8744     07D3  2FA8               	goto	l6268
  8745     07D4  3A1C               	xorlw	28	; case 80
  8746     07D5  1903               	skipnz
  8747     07D6  2F3F               	goto	l6256
  8748     07D7  3A03               	xorlw	3	; case 83
  8749     07D8  1903               	skipnz
  8750     07D9  2F1A               	goto	l6252
  8751     07DA  3A37               	xorlw	55	; case 100
  8752     07DB  1903               	skipnz
  8753     07DC  2F85               	goto	l6264
  8754     07DD  3A0D               	xorlw	13	; case 105
  8755     07DE  1903               	skipnz
  8756     07DF  2F62               	goto	l6260
  8757     07E0  3A05               	xorlw	5	; case 108
  8758     07E1  1903               	skipnz
  8759     07E2  2FA8               	goto	l6268
  8760     07E3  3A1C               	xorlw	28	; case 112
  8761     07E4  1903               	skipnz
  8762     07E5  2F3F               	goto	l6256
  8763     07E6  3A03               	xorlw	3	; case 115
  8764     07E7  1903               	skipnz
  8765     07E8  2F1A               	goto	l6252
  8766     07E9  2FBA               	goto	l6272
  8767     07EA                     l952:
  8768     07EA  0008               	return
  8769     07EB                     __end_of_uartHandler:
  8770                           
  8771                           	psect	text2
  8772     081E                     __ptext2:	
  8773 ;; *************** function _str2float *****************
  8774 ;; Defined at:
  8775 ;;		line 24 in file "UART.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  str             1   68[BANK1 ] PTR unsigned char 
  8778 ;;		 -> line(20), 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  i               1   74[BANK1 ] unsigned char 
  8781 ;;  digit           1   79[BANK1 ] unsigned char 
  8782 ;;  number          4   75[BANK1 ] float 
  8783 ;;  multiplier      1   73[BANK1 ] unsigned char 
  8784 ;;  decimal_sepa    1   72[BANK1 ] _Bool 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  4   68[BANK1 ] float 
  8787 ;; Registers used:
  8788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8794 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;Total ram usage:       12 bytes
  8799 ;; Hardware stack levels used: 1
  8800 ;; Hardware stack levels required when called: 7
  8801 ;; This function calls:
  8802 ;;		___fladd
  8803 ;;		___fldiv
  8804 ;;		___flmul
  8805 ;;		___xxtofl
  8806 ;; This function is called by:
  8807 ;;		_uartHandler
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811     081E                     _str2float:	
  8812                           ;psect for function _str2float
  8813                           
  8814     081E                     l5984:	
  8815                           ;incstack = 0
  8816                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8817                           
  8818                           
  8819                           ;UART.c: 25:     float number = 0;
  8820     081E  3000               	movlw	0
  8821     081F  0021               	movlb	1	; select bank1
  8822     0820  00EE               	movwf	(str2float@number+3)^(0+128)
  8823     0821  3000               	movlw	0
  8824     0822  00ED               	movwf	(str2float@number+2)^(0+128)
  8825     0823  3000               	movlw	0
  8826     0824  00EC               	movwf	(str2float@number+1)^(0+128)
  8827     0825  3000               	movlw	0
  8828     0826  00EB               	movwf	str2float@number^(0+128)
  8829     0827                     l5986:
  8830                           
  8831                           ;UART.c: 26:     _Bool decimal_separator = 0;
  8832     0827  01E8               	clrf	str2float@decimal_separator^(0+128)
  8833     0828                     l5988:
  8834                           
  8835                           ;UART.c: 29:         char digit = *str++;
  8836     0828  0864               	movf	str2float@str^(0+128),w
  8837     0829  0086               	movwf	6
  8838     082A  3001               	movlw	1	; select bank2/3
  8839     082B  0087               	movwf	7
  8840     082C  0801               	movf	1,w
  8841     082D  00EF               	movwf	str2float@digit^(0+128)
  8842     082E                     l5990:
  8843     082E  3001               	movlw	1
  8844     082F  07E4               	addwf	str2float@str^(0+128),f
  8845     0830                     l5992:
  8846                           
  8847                           ;UART.c: 30:         if ('0' <= digit && digit <= '9') {
  8848     0830  3030               	movlw	48
  8849     0831  026F               	subwf	str2float@digit^(0+128),w
  8850     0832  1C03               	skipc
  8851     0833  2835               	goto	u7131
  8852     0834  2836               	goto	u7130
  8853     0835                     u7131:
  8854     0835  2885               	goto	l6000
  8855     0836                     u7130:
  8856     0836                     l5994:
  8857     0836  303A               	movlw	58
  8858     0837  026F               	subwf	str2float@digit^(0+128),w
  8859     0838  1803               	skipnc
  8860     0839  283B               	goto	u7141
  8861     083A  283C               	goto	u7140
  8862     083B                     u7141:
  8863     083B  2885               	goto	l6000
  8864     083C                     u7140:
  8865     083C                     l5996:
  8866                           
  8867                           ;UART.c: 31:             number *= 10;
  8868     083C  3041               	movlw	65
  8869     083D  00CD               	movwf	(___flmul@b+3)^(0+128)
  8870     083E  3020               	movlw	32
  8871     083F  00CC               	movwf	(___flmul@b+2)^(0+128)
  8872     0840  3000               	movlw	0
  8873     0841  00CB               	movwf	(___flmul@b+1)^(0+128)
  8874     0842  3000               	movlw	0
  8875     0843  00CA               	movwf	___flmul@b^(0+128)
  8876     0844  086E               	movf	(str2float@number+3)^(0+128),w
  8877     0845  00D1               	movwf	(___flmul@a+3)^(0+128)
  8878     0846  086D               	movf	(str2float@number+2)^(0+128),w
  8879     0847  00D0               	movwf	(___flmul@a+2)^(0+128)
  8880     0848  086C               	movf	(str2float@number+1)^(0+128),w
  8881     0849  00CF               	movwf	(___flmul@a+1)^(0+128)
  8882     084A  086B               	movf	str2float@number^(0+128),w
  8883     084B  00CE               	movwf	___flmul@a^(0+128)
  8884     084C  3180  2092  3188   	fcall	___flmul
  8885     084F  0021               	movlb	1	; select bank1
  8886     0850  084D               	movf	(?___flmul+3)^(0+128),w
  8887     0851  00EE               	movwf	(str2float@number+3)^(0+128)
  8888     0852  084C               	movf	(?___flmul+2)^(0+128),w
  8889     0853  00ED               	movwf	(str2float@number+2)^(0+128)
  8890     0854  084B               	movf	(?___flmul+1)^(0+128),w
  8891     0855  00EC               	movwf	(str2float@number+1)^(0+128)
  8892     0856  084A               	movf	?___flmul^(0+128),w
  8893     0857  00EB               	movwf	str2float@number^(0+128)
  8894                           
  8895                           ;UART.c: 32:             number += digit - '0';
  8896     0858  086F               	movf	str2float@digit^(0+128),w
  8897     0859  3ED0               	addlw	208
  8898     085A  00A0               	movwf	___xxtofl@val^(0+128)
  8899     085B  30FF               	movlw	255
  8900     085C  1803               	skipnc
  8901     085D  3000               	movlw	0
  8902     085E  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8903     085F  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8904     0860  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8905     0861  3000               	movlw	0
  8906     0862  3196  26B2  3188   	fcall	___xxtofl
  8907     0865  0021               	movlb	1	; select bank1
  8908     0866  0823               	movf	(?___xxtofl+3)^(0+128),w
  8909     0867  00B1               	movwf	(___fladd@b+3)^(0+128)
  8910     0868  0822               	movf	(?___xxtofl+2)^(0+128),w
  8911     0869  00B0               	movwf	(___fladd@b+2)^(0+128)
  8912     086A  0821               	movf	(?___xxtofl+1)^(0+128),w
  8913     086B  00AF               	movwf	(___fladd@b+1)^(0+128)
  8914     086C  0820               	movf	?___xxtofl^(0+128),w
  8915     086D  00AE               	movwf	___fladd@b^(0+128)
  8916     086E  086E               	movf	(str2float@number+3)^(0+128),w
  8917     086F  00B5               	movwf	(___fladd@a+3)^(0+128)
  8918     0870  086D               	movf	(str2float@number+2)^(0+128),w
  8919     0871  00B4               	movwf	(___fladd@a+2)^(0+128)
  8920     0872  086C               	movf	(str2float@number+1)^(0+128),w
  8921     0873  00B3               	movwf	(___fladd@a+1)^(0+128)
  8922     0874  086B               	movf	str2float@number^(0+128),w
  8923     0875  00B2               	movwf	___fladd@a^(0+128)
  8924     0876  3185  2508  3188   	fcall	___fladd
  8925     0879  0021               	movlb	1	; select bank1
  8926     087A  0831               	movf	(?___fladd+3)^(0+128),w
  8927     087B  00EE               	movwf	(str2float@number+3)^(0+128)
  8928     087C  0830               	movf	(?___fladd+2)^(0+128),w
  8929     087D  00ED               	movwf	(str2float@number+2)^(0+128)
  8930     087E  082F               	movf	(?___fladd+1)^(0+128),w
  8931     087F  00EC               	movwf	(str2float@number+1)^(0+128)
  8932     0880  082E               	movf	?___fladd^(0+128),w
  8933     0881  00EB               	movwf	str2float@number^(0+128)
  8934     0882                     l5998:
  8935                           
  8936                           ;UART.c: 33:             multiplier++;
  8937     0882  3001               	movlw	1
  8938     0883  07E9               	addwf	str2float@multiplier^(0+128),f
  8939                           
  8940                           ;UART.c: 34:         } else if (digit == ',' || digit == '.') {
  8941     0884  2828               	goto	l5988
  8942     0885                     l6000:
  8943     0885  302C               	movlw	44
  8944     0886  066F               	xorwf	str2float@digit^(0+128),w
  8945     0887  1903               	btfsc	3,2
  8946     0888  288A               	goto	u7151
  8947     0889  288B               	goto	u7150
  8948     088A                     u7151:
  8949     088A  2891               	goto	l905
  8950     088B                     u7150:
  8951     088B                     l6002:
  8952     088B  302E               	movlw	46
  8953     088C  066F               	xorwf	str2float@digit^(0+128),w
  8954     088D  1D03               	btfss	3,2
  8955     088E  2890               	goto	u7161
  8956     088F  2891               	goto	u7160
  8957     0890                     u7161:
  8958     0890  2895               	goto	l6006
  8959     0891                     u7160:
  8960     0891                     l905:
  8961                           
  8962                           ;UART.c: 35:             decimal_separator = 1;
  8963     0891  3001               	movlw	1
  8964     0892  00E8               	movwf	str2float@decimal_separator^(0+128)
  8965     0893                     l6004:
  8966                           
  8967                           ;UART.c: 36:             multiplier = 0;
  8968     0893  01E9               	clrf	str2float@multiplier^(0+128)
  8969                           
  8970                           ;UART.c: 37:         } else {
  8971     0894  2828               	goto	l5988
  8972     0895                     l6006:
  8973                           
  8974                           ;UART.c: 42:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8975     0895  01EA               	clrf	str2float@i^(0+128)
  8976     0896  28B5               	goto	l6012
  8977     0897                     l6008:
  8978                           
  8979                           ;UART.c: 43:         number /= 10;
  8980     0897  3041               	movlw	65
  8981     0898  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8982     0899  3020               	movlw	32
  8983     089A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8984     089B  3000               	movlw	0
  8985     089C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8986     089D  3000               	movlw	0
  8987     089E  00A0               	movwf	___fldiv@a^(0+128)
  8988     089F  086E               	movf	(str2float@number+3)^(0+128),w
  8989     08A0  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8990     08A1  086D               	movf	(str2float@number+2)^(0+128),w
  8991     08A2  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8992     08A3  086C               	movf	(str2float@number+1)^(0+128),w
  8993     08A4  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8994     08A5  086B               	movf	str2float@number^(0+128),w
  8995     08A6  00A4               	movwf	___fldiv@b^(0+128)
  8996     08A7  318C  2450  3188   	fcall	___fldiv
  8997     08AA  0021               	movlb	1	; select bank1
  8998     08AB  0823               	movf	(?___fldiv+3)^(0+128),w
  8999     08AC  00EE               	movwf	(str2float@number+3)^(0+128)
  9000     08AD  0822               	movf	(?___fldiv+2)^(0+128),w
  9001     08AE  00ED               	movwf	(str2float@number+2)^(0+128)
  9002     08AF  0821               	movf	(?___fldiv+1)^(0+128),w
  9003     08B0  00EC               	movwf	(str2float@number+1)^(0+128)
  9004     08B1  0820               	movf	?___fldiv^(0+128),w
  9005     08B2  00EB               	movwf	str2float@number^(0+128)
  9006     08B3                     l6010:
  9007                           
  9008                           ;UART.c: 44:     }
  9009     08B3  3001               	movlw	1
  9010     08B4  07EA               	addwf	str2float@i^(0+128),f
  9011     08B5                     l6012:
  9012     08B5  0868               	movf	str2float@decimal_separator^(0+128),w
  9013     08B6  1903               	btfsc	3,2
  9014     08B7  28B9               	goto	u7171
  9015     08B8  28BA               	goto	u7170
  9016     08B9                     u7171:
  9017     08B9  28C0               	goto	l6016
  9018     08BA                     u7170:
  9019     08BA                     l6014:
  9020     08BA  0869               	movf	str2float@multiplier^(0+128),w
  9021     08BB  026A               	subwf	str2float@i^(0+128),w
  9022     08BC  1C03               	skipc
  9023     08BD  28BF               	goto	u7181
  9024     08BE  28C0               	goto	u7180
  9025     08BF                     u7181:
  9026     08BF  2897               	goto	l6008
  9027     08C0                     u7180:
  9028     08C0                     l6016:
  9029                           
  9030                           ;UART.c: 45:     return number;
  9031     08C0  086E               	movf	(str2float@number+3)^(0+128),w
  9032     08C1  00E7               	movwf	(?_str2float+3)^(0+128)
  9033     08C2  086D               	movf	(str2float@number+2)^(0+128),w
  9034     08C3  00E6               	movwf	(?_str2float+2)^(0+128)
  9035     08C4  086C               	movf	(str2float@number+1)^(0+128),w
  9036     08C5  00E5               	movwf	(?_str2float+1)^(0+128)
  9037     08C6  086B               	movf	str2float@number^(0+128),w
  9038     08C7  00E4               	movwf	?_str2float^(0+128)
  9039     08C8                     l914:
  9040     08C8  0008               	return
  9041     08C9                     __end_of_str2float:
  9042                           
  9043                           	psect	text3
  9044     0C50                     __ptext3:	
  9045 ;; *************** function ___fldiv *****************
  9046 ;; Defined at:
  9047 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;  a               4    0[BANK1 ] float 
  9050 ;;  b               4    4[BANK1 ] float 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  grs             4   20[BANK1 ] unsigned long 
  9053 ;;  rem             4   13[BANK1 ] unsigned long 
  9054 ;;  new_exp         2   18[BANK1 ] short 
  9055 ;;  aexp            1   25[BANK1 ] unsigned char 
  9056 ;;  bexp            1   24[BANK1 ] unsigned char 
  9057 ;;  sign            1   17[BANK1 ] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  4    0[BANK1 ] unsigned char 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9067 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;Total ram usage:       26 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 5
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		_str2float
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081     0C50                     ___fldiv:	
  9082                           ;psect for function ___fldiv
  9083                           
  9084     0C50                     l5228:	
  9085                           ;incstack = 0
  9086                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9087                           
  9088     0C50  0021               	movlb	1	; select bank1
  9089     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
  9090     0C52  3980               	andlw	128
  9091     0C53  00B1               	movwf	___fldiv@sign^(0+128)
  9092     0C54                     l5230:
  9093     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
  9094     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
  9095     0C56                     l5232:
  9096     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  9097     0C57  2C59               	goto	u5851
  9098     0C58  2C5A               	goto	u5850
  9099     0C59                     u5851:
  9100     0C59  2C5B               	goto	l5236
  9101     0C5A                     u5850:
  9102     0C5A                     l5234:
  9103     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
  9104     0C5B                     l5236:
  9105     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
  9106     0C5C  1903               	btfsc	3,2
  9107     0C5D  2C5F               	goto	u5861
  9108     0C5E  2C60               	goto	u5860
  9109     0C5F                     u5861:
  9110     0C5F  2C70               	goto	l5246
  9111     0C60                     u5860:
  9112     0C60                     l5238:
  9113     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
  9114     0C61  1D03               	btfss	3,2
  9115     0C62  2C64               	goto	u5871
  9116     0C63  2C65               	goto	u5870
  9117     0C64                     u5871:
  9118     0C64  2C6D               	goto	l5242
  9119     0C65                     u5870:
  9120     0C65                     l5240:
  9121     0C65  3000               	movlw	0
  9122     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9123     0C67  3000               	movlw	0
  9124     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9125     0C69  3000               	movlw	0
  9126     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9127     0C6B  3000               	movlw	0
  9128     0C6C  00A4               	movwf	___fldiv@b^(0+128)
  9129     0C6D                     l5242:
  9130     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9131     0C6E                     l5244:
  9132     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
  9133     0C6F  2C78               	goto	l5248
  9134     0C70                     l5246:
  9135     0C70  3000               	movlw	0
  9136     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9137     0C72  3000               	movlw	0
  9138     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9139     0C74  3000               	movlw	0
  9140     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9141     0C76  3000               	movlw	0
  9142     0C77  00A4               	movwf	___fldiv@b^(0+128)
  9143     0C78                     l5248:
  9144     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
  9145     0C79  3980               	andlw	128
  9146     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
  9147     0C7B                     l5250:
  9148     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
  9149     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
  9150     0C7D                     l5252:
  9151     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  9152     0C7E  2C80               	goto	u5881
  9153     0C7F  2C81               	goto	u5880
  9154     0C80                     u5881:
  9155     0C80  2C82               	goto	l5256
  9156     0C81                     u5880:
  9157     0C81                     l5254:
  9158     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
  9159     0C82                     l5256:
  9160     0C82  0839               	movf	___fldiv@aexp^(0+128),w
  9161     0C83  1903               	btfsc	3,2
  9162     0C84  2C86               	goto	u5891
  9163     0C85  2C87               	goto	u5890
  9164     0C86                     u5891:
  9165     0C86  2C97               	goto	l5266
  9166     0C87                     u5890:
  9167     0C87                     l5258:
  9168     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
  9169     0C88  1D03               	btfss	3,2
  9170     0C89  2C8B               	goto	u5901
  9171     0C8A  2C8C               	goto	u5900
  9172     0C8B                     u5901:
  9173     0C8B  2C94               	goto	l5262
  9174     0C8C                     u5900:
  9175     0C8C                     l5260:
  9176     0C8C  3000               	movlw	0
  9177     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9178     0C8E  3000               	movlw	0
  9179     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9180     0C90  3000               	movlw	0
  9181     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9182     0C92  3000               	movlw	0
  9183     0C93  00A0               	movwf	___fldiv@a^(0+128)
  9184     0C94                     l5262:
  9185     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  9186     0C95                     l5264:
  9187     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
  9188     0C96  2C9F               	goto	l1572
  9189     0C97                     l5266:
  9190     0C97  3000               	movlw	0
  9191     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9192     0C99  3000               	movlw	0
  9193     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9194     0C9B  3000               	movlw	0
  9195     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  9196     0C9D  3000               	movlw	0
  9197     0C9E  00A0               	movwf	___fldiv@a^(0+128)
  9198     0C9F                     l1572:
  9199     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
  9200     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  9201     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  9202     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
  9203     0CA3  1D03               	skipz
  9204     0CA4  2CA6               	goto	u5911
  9205     0CA5  2CA7               	goto	u5910
  9206     0CA6                     u5911:
  9207     0CA6  2CBE               	goto	l5276
  9208     0CA7                     u5910:
  9209     0CA7                     l5268:
  9210     0CA7  3000               	movlw	0
  9211     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9212     0CA9  3000               	movlw	0
  9213     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9214     0CAB  3000               	movlw	0
  9215     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9216     0CAD  3000               	movlw	0
  9217     0CAE  00A4               	movwf	___fldiv@b^(0+128)
  9218     0CAF  3080               	movlw	128
  9219     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  9220     0CB1  307F               	movlw	127
  9221     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  9222     0CB3                     l5270:
  9223     0CB3  0831               	movf	___fldiv@sign^(0+128),w
  9224     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  9225     0CB5                     l5272:
  9226     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
  9227     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
  9228     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
  9229     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
  9230     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
  9231     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
  9232     0CBB  0824               	movf	___fldiv@b^(0+128),w
  9233     0CBC  00A0               	movwf	?___fldiv^(0+128)
  9234     0CBD  2DF3               	goto	l1574
  9235     0CBE                     l5276:
  9236     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
  9237     0CBF  1D03               	btfss	3,2
  9238     0CC0  2CC2               	goto	u5921
  9239     0CC1  2CC3               	goto	u5920
  9240     0CC2                     u5921:
  9241     0CC2  2CCC               	goto	l5282
  9242     0CC3                     u5920:
  9243     0CC3                     l5278:
  9244     0CC3  3000               	movlw	0
  9245     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
  9246     0CC5  3000               	movlw	0
  9247     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
  9248     0CC7  3000               	movlw	0
  9249     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
  9250     0CC9  3000               	movlw	0
  9251     0CCA  00A0               	movwf	?___fldiv^(0+128)
  9252     0CCB  2DF3               	goto	l1574
  9253     0CCC                     l5282:
  9254     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
  9255     0CCD  00A8               	movwf	??___fldiv^(0+128)
  9256     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
  9257     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
  9258     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  9259     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
  9260     0CD2  0228               	subwf	??___fldiv^(0+128),w
  9261     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
  9262     0CD4  1C03               	skipc
  9263     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  9264     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
  9265     0CD7  3E7F               	addlw	127
  9266     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
  9267     0CD9  3000               	movlw	0
  9268     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
  9269     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  9270     0CDC                     l5284:
  9271     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
  9272     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  9273     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
  9274     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  9275     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
  9276     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  9277     0CE2  0824               	movf	___fldiv@b^(0+128),w
  9278     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
  9279     0CE4                     l5286:
  9280     0CE4  3000               	movlw	0
  9281     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9282     0CE6  3000               	movlw	0
  9283     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9284     0CE8  3000               	movlw	0
  9285     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9286     0CEA  3000               	movlw	0
  9287     0CEB  00A4               	movwf	___fldiv@b^(0+128)
  9288     0CEC                     l5288:
  9289     0CEC  3000               	movlw	0
  9290     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  9291     0CEE  3000               	movlw	0
  9292     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  9293     0CF0  3000               	movlw	0
  9294     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  9295     0CF2  3000               	movlw	0
  9296     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
  9297     0CF4                     l5290:
  9298     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
  9299     0CF5  2D32               	goto	l5310
  9300     0CF6                     l5292:
  9301     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
  9302     0CF7  1903               	btfsc	3,2
  9303     0CF8  2CFA               	goto	u5931
  9304     0CF9  2CFB               	goto	u5930
  9305     0CFA                     u5931:
  9306     0CFA  2D15               	goto	l5302
  9307     0CFB                     u5930:
  9308     0CFB                     l5294:
  9309     0CFB  3001               	movlw	1
  9310     0CFC                     u5945:
  9311     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
  9312     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  9313     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  9314     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  9315     0D00  0B89               	decfsz	9,f
  9316     0D01  2CFC               	goto	u5945
  9317     0D02  3001               	movlw	1
  9318     0D03                     u5955:
  9319     0D03  35A4               	lslf	___fldiv@b^(0+128),f
  9320     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  9321     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  9322     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  9323     0D07  0B89               	decfsz	9,f
  9324     0D08  2D03               	goto	u5955
  9325     0D09                     l5296:
  9326     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  9327     0D0A  2D0C               	goto	u5961
  9328     0D0B  2D0D               	goto	u5960
  9329     0D0C                     u5961:
  9330     0D0C  2D0E               	goto	l5300
  9331     0D0D                     u5960:
  9332     0D0D                     l5298:
  9333     0D0D  1424               	bsf	___fldiv@b^(0+128),0
  9334     0D0E                     l5300:
  9335     0D0E  3001               	movlw	1
  9336     0D0F                     u5975:
  9337     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
  9338     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  9339     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  9340     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  9341     0D13  0B89               	decfsz	9,f
  9342     0D14  2D0F               	goto	u5975
  9343     0D15                     l5302:
  9344     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
  9345     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  9346     0D17  1D03               	skipz
  9347     0D18  2D23               	goto	u5985
  9348     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
  9349     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  9350     0D1B  1D03               	skipz
  9351     0D1C  2D23               	goto	u5985
  9352     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
  9353     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  9354     0D1F  1D03               	skipz
  9355     0D20  2D23               	goto	u5985
  9356     0D21  0820               	movf	___fldiv@a^(0+128),w
  9357     0D22  022D               	subwf	___fldiv@rem^(0+128),w
  9358     0D23                     u5985:
  9359     0D23  1C03               	skipc
  9360     0D24  2D26               	goto	u5981
  9361     0D25  2D27               	goto	u5980
  9362     0D26                     u5981:
  9363     0D26  2D30               	goto	l5308
  9364     0D27                     u5980:
  9365     0D27                     l5304:
  9366     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  9367     0D28                     l5306:
  9368     0D28  0820               	movf	___fldiv@a^(0+128),w
  9369     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
  9370     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
  9371     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
  9372     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
  9373     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
  9374     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
  9375     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
  9376     0D30                     l5308:
  9377     0D30  3001               	movlw	1
  9378     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
  9379     0D32                     l5310:
  9380     0D32  301A               	movlw	26
  9381     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
  9382     0D34  1C03               	skipc
  9383     0D35  2D37               	goto	u5991
  9384     0D36  2D38               	goto	u5990
  9385     0D37                     u5991:
  9386     0D37  2CF6               	goto	l5292
  9387     0D38                     u5990:
  9388     0D38                     l5312:
  9389     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
  9390     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  9391     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  9392     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
  9393     0D3C  1903               	skipnz
  9394     0D3D  2D3F               	goto	u6001
  9395     0D3E  2D40               	goto	u6000
  9396     0D3F                     u6001:
  9397     0D3F  2D59               	goto	l5326
  9398     0D40                     u6000:
  9399     0D40                     l5314:
  9400     0D40  1434               	bsf	___fldiv@grs^(0+128),0
  9401     0D41  2D59               	goto	l5326
  9402     0D42                     l5316:
  9403     0D42  3001               	movlw	1
  9404     0D43                     u6015:
  9405     0D43  35A4               	lslf	___fldiv@b^(0+128),f
  9406     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  9407     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  9408     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  9409     0D47  0B89               	decfsz	9,f
  9410     0D48  2D43               	goto	u6015
  9411     0D49                     l5318:
  9412     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  9413     0D4A  2D4C               	goto	u6021
  9414     0D4B  2D4D               	goto	u6020
  9415     0D4C                     u6021:
  9416     0D4C  2D4E               	goto	l5322
  9417     0D4D                     u6020:
  9418     0D4D                     l5320:
  9419     0D4D  1424               	bsf	___fldiv@b^(0+128),0
  9420     0D4E                     l5322:
  9421     0D4E  3001               	movlw	1
  9422     0D4F                     u6035:
  9423     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
  9424     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  9425     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  9426     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  9427     0D53  0B89               	decfsz	9,f
  9428     0D54  2D4F               	goto	u6035
  9429     0D55                     l5324:
  9430     0D55  30FF               	movlw	255
  9431     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
  9432     0D57  30FF               	movlw	255
  9433     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  9434     0D59                     l5326:
  9435     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
  9436     0D5A  2D5C               	goto	u6041
  9437     0D5B  2D5D               	goto	u6040
  9438     0D5C                     u6041:
  9439     0D5C  2D42               	goto	l5316
  9440     0D5D                     u6040:
  9441     0D5D                     l5328:
  9442     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
  9443     0D5E                     l5330:
  9444     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  9445     0D5F  2D61               	goto	u6051
  9446     0D60  2D62               	goto	u6050
  9447     0D61                     u6051:
  9448     0D61  2D7E               	goto	l5338
  9449     0D62                     u6050:
  9450     0D62                     l5332:
  9451     0D62  30FF               	movlw	255
  9452     0D63  0534               	andwf	___fldiv@grs^(0+128),w
  9453     0D64  00A8               	movwf	??___fldiv^(0+128)
  9454     0D65  30FF               	movlw	255
  9455     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  9456     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
  9457     0D68  30FF               	movlw	255
  9458     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  9459     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
  9460     0D6B  307F               	movlw	127
  9461     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  9462     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
  9463     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
  9464     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
  9465     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
  9466     0D71  0428               	iorwf	??___fldiv^(0+128),w
  9467     0D72  1903               	skipnz
  9468     0D73  2D75               	goto	u6061
  9469     0D74  2D76               	goto	u6060
  9470     0D75                     u6061:
  9471     0D75  2D79               	goto	l1588
  9472     0D76                     u6060:
  9473     0D76                     l5334:
  9474     0D76  3001               	movlw	1
  9475     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
  9476     0D78  2D7E               	goto	l5338
  9477     0D79                     l1588:
  9478     0D79  1C24               	btfss	___fldiv@b^(0+128),0
  9479     0D7A  2D7C               	goto	u6071
  9480     0D7B  2D7D               	goto	u6070
  9481     0D7C                     u6071:
  9482     0D7C  2D7E               	goto	l5338
  9483     0D7D                     u6070:
  9484     0D7D  2D76               	goto	l5334
  9485     0D7E                     l5338:
  9486     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
  9487     0D7F  1903               	btfsc	3,2
  9488     0D80  2D82               	goto	u6081
  9489     0D81  2D83               	goto	u6080
  9490     0D82                     u6081:
  9491     0D82  2DA9               	goto	l5348
  9492     0D83                     u6080:
  9493     0D83                     l5340:
  9494     0D83  3001               	movlw	1
  9495     0D84  07A4               	addwf	___fldiv@b^(0+128),f
  9496     0D85  3000               	movlw	0
  9497     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
  9498     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
  9499     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
  9500     0D89                     l5342:
  9501     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  9502     0D8A  2D8C               	goto	u6091
  9503     0D8B  2D8D               	goto	u6090
  9504     0D8C                     u6091:
  9505     0D8C  2DA9               	goto	l5348
  9506     0D8D                     u6090:
  9507     0D8D                     l5344:
  9508     0D8D  0824               	movf	___fldiv@b^(0+128),w
  9509     0D8E  00A8               	movwf	??___fldiv^(0+128)
  9510     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
  9511     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
  9512     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
  9513     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
  9514     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
  9515     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
  9516     0D95  3001               	movlw	1
  9517     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
  9518     0D97                     u6105:
  9519     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
  9520     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  9521     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  9522     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
  9523     0D9B                     u6100:
  9524     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  9525     0D9C  2D97               	goto	u6105
  9526     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
  9527     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9528     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
  9529     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9530     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
  9531     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9532     0DA3  0828               	movf	??___fldiv^(0+128),w
  9533     0DA4  00A4               	movwf	___fldiv@b^(0+128)
  9534     0DA5                     l5346:
  9535     0DA5  3001               	movlw	1
  9536     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
  9537     0DA7  3000               	movlw	0
  9538     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  9539     0DA9                     l5348:
  9540     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  9541     0DAA  3A80               	xorlw	128
  9542     0DAB  00A8               	movwf	??___fldiv^(0+128)
  9543     0DAC  3080               	movlw	128
  9544     0DAD  0228               	subwf	??___fldiv^(0+128),w
  9545     0DAE  1D03               	skipz
  9546     0DAF  2DB2               	goto	u6115
  9547     0DB0  30FF               	movlw	255
  9548     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
  9549     0DB2                     u6115:
  9550     0DB2  1C03               	skipc
  9551     0DB3  2DB5               	goto	u6111
  9552     0DB4  2DB6               	goto	u6110
  9553     0DB5                     u6111:
  9554     0DB5  2DC3               	goto	l1593
  9555     0DB6                     u6110:
  9556     0DB6                     l5350:
  9557     0DB6  30FF               	movlw	255
  9558     0DB7  0021               	movlb	1	; select bank1
  9559     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
  9560     0DB9  3000               	movlw	0
  9561     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  9562     0DBB  3000               	movlw	0
  9563     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9564     0DBD  3000               	movlw	0
  9565     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9566     0DBF  3000               	movlw	0
  9567     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9568     0DC1  3000               	movlw	0
  9569     0DC2  00A4               	movwf	___fldiv@b^(0+128)
  9570     0DC3                     l1593:
  9571     0DC3  0021               	movlb	1	; select bank1
  9572     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  9573     0DC5  3A80               	xorlw	128
  9574     0DC6  00A8               	movwf	??___fldiv^(0+128)
  9575     0DC7  3080               	movlw	128
  9576     0DC8  0228               	subwf	??___fldiv^(0+128),w
  9577     0DC9  1D03               	skipz
  9578     0DCA  2DCD               	goto	u6125
  9579     0DCB  3001               	movlw	1
  9580     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
  9581     0DCD                     u6125:
  9582     0DCD  1803               	skipnc
  9583     0DCE  2DD0               	goto	u6121
  9584     0DCF  2DD1               	goto	u6120
  9585     0DD0                     u6121:
  9586     0DD0  2DDD               	goto	l1594
  9587     0DD1                     u6120:
  9588     0DD1                     l5352:
  9589     0DD1  0021               	movlb	1	; select bank1
  9590     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
  9591     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  9592     0DD4                     l5354:
  9593     0DD4  3000               	movlw	0
  9594     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9595     0DD6  3000               	movlw	0
  9596     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9597     0DD8  3000               	movlw	0
  9598     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9599     0DDA  3000               	movlw	0
  9600     0DDB  00A4               	movwf	___fldiv@b^(0+128)
  9601     0DDC                     l5356:
  9602     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
  9603     0DDD                     l1594:
  9604     0DDD  0021               	movlb	1	; select bank1
  9605     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
  9606     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
  9607     0DE0                     l5358:
  9608     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
  9609     0DE1  2DE3               	goto	u6131
  9610     0DE2  2DE4               	goto	u6130
  9611     0DE3                     u6131:
  9612     0DE3  2DE6               	goto	l5362
  9613     0DE4                     u6130:
  9614     0DE4                     l5360:
  9615     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9616     0DE5  2DE8               	goto	l1596
  9617     0DE6                     l5362:
  9618     0DE6  307F               	movlw	127
  9619     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  9620     0DE8                     l1596:
  9621     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
  9622     0DE9  00A8               	movwf	??___fldiv^(0+128)
  9623     0DEA  3001               	movlw	1
  9624     0DEB                     u6145:
  9625     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
  9626     0DEC  0B89               	decfsz	9,f
  9627     0DED  2DEB               	goto	u6145
  9628     0DEE  0828               	movf	??___fldiv^(0+128),w
  9629     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
  9630     0DF0  0831               	movf	___fldiv@sign^(0+128),w
  9631     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  9632     0DF2  2CB5               	goto	l5272
  9633     0DF3                     l1574:
  9634     0DF3  0008               	return
  9635     0DF4                     __end_of___fldiv:
  9636                           
  9637                           	psect	text4
  9638     1A90                     __ptext4:	
  9639 ;; *************** function _setSetpoint *****************
  9640 ;; Defined at:
  9641 ;;		line 51 in file "controller.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;		None
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  1    wreg      void 
  9648 ;; Registers used:
  9649 ;;		wreg
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9655 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;Total ram usage:        2 bytes
  9660 ;; Hardware stack levels used: 1
  9661 ;; Hardware stack levels required when called: 5
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_main
  9666 ;;		_uartHandler
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670     1A90                     _setSetpoint:	
  9671                           ;psect for function _setSetpoint
  9672                           
  9673     1A90                     l5954:	
  9674                           ;incstack = 0
  9675                           ; Regs used in _setSetpoint: [wreg]
  9676                           
  9677     1A90  0021               	movlb	1	; select bank1
  9678     1A91  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
  9679     1A92  0022               	movlb	2	; select bank2
  9680     1A93  00E8               	movwf	(_setpoint+1)^(0+256)
  9681     1A94  0021               	movlb	1	; select bank1
  9682     1A95  082D               	movf	setSetpoint@new_setpoint^(0+128),w
  9683     1A96  0022               	movlb	2	; select bank2
  9684     1A97  00E7               	movwf	_setpoint^(0+256)
  9685     1A98                     l998:
  9686     1A98  0008               	return
  9687     1A99                     __end_of_setSetpoint:
  9688                           
  9689                           	psect	text5
  9690     1AB7                     __ptext5:	
  9691 ;; *************** function _setKp *****************
  9692 ;; Defined at:
  9693 ;;		line 53 in file "controller.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  new_kp          4    0[BANK2 ] float 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;		None
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      void 
  9700 ;; Registers used:
  9701 ;;		wreg
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9707 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9711 ;;Total ram usage:        4 bytes
  9712 ;; Hardware stack levels used: 1
  9713 ;; Hardware stack levels required when called: 5
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_uartHandler
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721     1AB7                     _setKp:	
  9722                           ;psect for function _setKp
  9723                           
  9724     1AB7                     l6108:	
  9725                           ;incstack = 0
  9726                           ; Regs used in _setKp: [wreg]
  9727                           
  9728     1AB7  0022               	movlb	2	; select bank2
  9729     1AB8  0823               	movf	(setKp@new_kp+3)^(0+256),w
  9730     1AB9  00E6               	movwf	(_kp+3)^(0+256)
  9731     1ABA  0822               	movf	(setKp@new_kp+2)^(0+256),w
  9732     1ABB  00E5               	movwf	(_kp+2)^(0+256)
  9733     1ABC  0821               	movf	(setKp@new_kp+1)^(0+256),w
  9734     1ABD  00E4               	movwf	(_kp+1)^(0+256)
  9735     1ABE  0820               	movf	setKp@new_kp^(0+256),w
  9736     1ABF  00E3               	movwf	_kp^(0+256)
  9737     1AC0                     l1004:
  9738     1AC0  0008               	return
  9739     1AC1                     __end_of_setKp:
  9740                           
  9741                           	psect	text6
  9742     1AAD                     __ptext6:	
  9743 ;; *************** function _setKi *****************
  9744 ;; Defined at:
  9745 ;;		line 54 in file "controller.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;  new_ki          4    0[BANK2 ] float 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;		None
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9759 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;Total ram usage:        4 bytes
  9764 ;; Hardware stack levels used: 1
  9765 ;; Hardware stack levels required when called: 5
  9766 ;; This function calls:
  9767 ;;		Nothing
  9768 ;; This function is called by:
  9769 ;;		_uartHandler
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773     1AAD                     _setKi:	
  9774                           ;psect for function _setKi
  9775                           
  9776     1AAD                     l6110:	
  9777                           ;incstack = 0
  9778                           ; Regs used in _setKi: [wreg]
  9779                           
  9780     1AAD  0022               	movlb	2	; select bank2
  9781     1AAE  0823               	movf	(setKi@new_ki+3)^(0+256),w
  9782     1AAF  00E2               	movwf	(_ki+3)^(0+256)
  9783     1AB0  0822               	movf	(setKi@new_ki+2)^(0+256),w
  9784     1AB1  00E1               	movwf	(_ki+2)^(0+256)
  9785     1AB2  0821               	movf	(setKi@new_ki+1)^(0+256),w
  9786     1AB3  00E0               	movwf	(_ki+1)^(0+256)
  9787     1AB4  0820               	movf	setKi@new_ki^(0+256),w
  9788     1AB5  00DF               	movwf	_ki^(0+256)
  9789     1AB6                     l1007:
  9790     1AB6  0008               	return
  9791     1AB7                     __end_of_setKi:
  9792                           
  9793                           	psect	text7
  9794     1AA3                     __ptext7:	
  9795 ;; *************** function _setKd *****************
  9796 ;; Defined at:
  9797 ;;		line 55 in file "controller.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  new_kd          4    0[BANK2 ] float 
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;		None
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  1    wreg      void 
  9804 ;; Registers used:
  9805 ;;		wreg
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9811 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;Total ram usage:        4 bytes
  9816 ;; Hardware stack levels used: 1
  9817 ;; Hardware stack levels required when called: 5
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_uartHandler
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825     1AA3                     _setKd:	
  9826                           ;psect for function _setKd
  9827                           
  9828     1AA3                     l6112:	
  9829                           ;incstack = 0
  9830                           ; Regs used in _setKd: [wreg]
  9831                           
  9832     1AA3  0022               	movlb	2	; select bank2
  9833     1AA4  0823               	movf	(setKd@new_kd+3)^(0+256),w
  9834     1AA5  00C6               	movwf	(_kd+3)^(0+256)
  9835     1AA6  0822               	movf	(setKd@new_kd+2)^(0+256),w
  9836     1AA7  00C5               	movwf	(_kd+2)^(0+256)
  9837     1AA8  0821               	movf	(setKd@new_kd+1)^(0+256),w
  9838     1AA9  00C4               	movwf	(_kd+1)^(0+256)
  9839     1AAA  0820               	movf	setKd@new_kd^(0+256),w
  9840     1AAB  00C3               	movwf	_kd^(0+256)
  9841     1AAC                     l1010:
  9842     1AAC  0008               	return
  9843     1AAD                     __end_of_setKd:
  9844                           
  9845                           	psect	text8
  9846     103B                     __ptext8:	
  9847 ;; *************** function _readLine *****************
  9848 ;; Defined at:
  9849 ;;		line 49 in file "UART.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;		None
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1   73[BANK1 ] PTR unsigned char 
  9856 ;; Registers used:
  9857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9863 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;Total ram usage:        3 bytes
  9868 ;; Hardware stack levels used: 1
  9869 ;; Hardware stack levels required when called: 14
  9870 ;; This function calls:
  9871 ;;		_EUSART_IsRxReady
  9872 ;;		_EUSART_Read
  9873 ;;		_printf
  9874 ;; This function is called by:
  9875 ;;		_uartHandler
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879     103B                     _readLine:	
  9880                           ;psect for function _readLine
  9881                           
  9882     103B                     l919:	
  9883                           ;incstack = 0
  9884                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9885                           ;UART.c: 50:     static uint8_t index = 0;;UART.c: 51:     while (1) {
  9886                           
  9887     103B                     l6020:
  9888                           
  9889                           ;UART.c: 52:         if (!EUSART_IsRxReady()) {
  9890     103B  319A  2287  3190   	fcall	_EUSART_IsRxReady
  9891     103E  3A00               	xorlw	0
  9892     103F  1D03               	skipz
  9893     1040  2842               	goto	u7191
  9894     1041  2843               	goto	u7190
  9895     1042                     u7191:
  9896     1042  284D               	goto	l6028
  9897     1043                     u7190:
  9898     1043                     l6022:
  9899                           
  9900                           ;UART.c: 53:             line[index] = 0;
  9901     1043  0020               	movlb	0	; select bank0
  9902     1044  0866               	movf	readLine@index,w
  9903     1045  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9904     1046  0086               	movwf	6
  9905     1047  3001               	movlw	1	; select bank3/4
  9906     1048  0087               	movwf	7
  9907     1049  0181               	clrf	1
  9908     104A                     l6024:
  9909                           
  9910                           ;UART.c: 54:             return line + index;
  9911     104A  0866               	movf	readLine@index,w
  9912     104B  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9913     104C  2893               	goto	l921
  9914     104D                     l6028:
  9915                           
  9916                           ;UART.c: 56:         if (index >= 20 - 1) {
  9917     104D  3013               	movlw	19
  9918     104E  0020               	movlb	0	; select bank0
  9919     104F  0266               	subwf	readLine@index,w
  9920     1050  1C03               	skipc
  9921     1051  2853               	goto	u7201
  9922     1052  2854               	goto	u7200
  9923     1053                     u7201:
  9924     1053  286E               	goto	l6046
  9925     1054                     u7200:
  9926     1054  2858               	goto	l6034
  9927     1055                     l6032:
  9928                           
  9929                           ;UART.c: 58:                 EUSART_Read();
  9930     1055  319C  24F4  3190   	fcall	_EUSART_Read
  9931     1058                     l6034:
  9932                           
  9933                           ;UART.c: 57:             while (EUSART_IsRxReady()) {
  9934     1058  319A  2287  3190   	fcall	_EUSART_IsRxReady
  9935     105B  3A00               	xorlw	0
  9936     105C  1D03               	skipz
  9937     105D  285F               	goto	u7211
  9938     105E  2860               	goto	u7210
  9939     105F                     u7211:
  9940     105F  2855               	goto	l6032
  9941     1060                     u7210:
  9942     1060                     l6036:
  9943                           
  9944                           ;UART.c: 60:             printf("input buffer overflow\r\n");
  9945     1060  3065               	movlw	low (STR_3| (0+32768))
  9946     1061  0021               	movlb	1	; select bank1
  9947     1062  00E2               	movwf	printf@fmt^(0+128)
  9948     1063  3098               	movlw	high (STR_3| (0+32768))
  9949     1064  00E3               	movwf	(printf@fmt^(0+128)+1)
  9950     1065  319C  2401  3190   	fcall	_printf
  9951     1068                     l6038:
  9952                           
  9953                           ;UART.c: 61:             index = 0;
  9954     1068  0020               	movlb	0	; select bank0
  9955     1069  01E6               	clrf	readLine@index
  9956     106A                     l6040:
  9957                           
  9958                           ;UART.c: 62:             line[index] = 0;
  9959     106A  0023               	movlb	3	; select bank3
  9960     106B  01C0               	clrf	_line^(0+384)
  9961     106C                     l6042:
  9962                           
  9963                           ;UART.c: 63:             return line;
  9964     106C  30C0               	movlw	(low (_line| (0+256)))& (0+255)
  9965     106D  2893               	goto	l921
  9966     106E                     l6046:
  9967                           
  9968                           ;UART.c: 66:         line[index] = EUSART_Read();
  9969     106E  319C  24F4  3190   	fcall	_EUSART_Read
  9970     1071  0021               	movlb	1	; select bank1
  9971     1072  00EB               	movwf	??_readLine^(0+128)
  9972     1073  0020               	movlb	0	; select bank0
  9973     1074  0866               	movf	readLine@index,w
  9974     1075  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9975     1076  0086               	movwf	6
  9976     1077  3001               	movlw	1	; select bank3/4
  9977     1078  0087               	movwf	7
  9978     1079  0021               	movlb	1	; select bank1
  9979     107A  086B               	movf	??_readLine^(0+128),w
  9980     107B  0081               	movwf	1
  9981     107C                     l6048:
  9982                           
  9983                           ;UART.c: 67:         if (line[index] == '\n') {
  9984     107C  0020               	movlb	0	; select bank0
  9985     107D  0866               	movf	readLine@index,w
  9986     107E  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9987     107F  0086               	movwf	6
  9988     1080  3001               	movlw	1	; select bank3/4
  9989     1081  0087               	movwf	7
  9990     1082  300A               	movlw	10
  9991     1083  0601               	xorwf	1,w
  9992     1084  1D03               	btfss	3,2
  9993     1085  2887               	goto	u7221
  9994     1086  2888               	goto	u7220
  9995     1087                     u7221:
  9996     1087  2890               	goto	l6058
  9997     1088                     u7220:
  9998     1088                     l6050:
  9999                           
 10000                           ;UART.c: 68:             line[index + 1] = 0;
 10001     1088  0866               	movf	readLine@index,w
 10002     1089  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
 10003     108A  0086               	movwf	6
 10004     108B  3001               	movlw	1	; select bank3/4
 10005     108C  0087               	movwf	7
 10006     108D  0181               	clrf	1
 10007     108E                     l6052:
 10008                           
 10009                           ;UART.c: 69:             index = 0;
 10010     108E  01E6               	clrf	readLine@index
 10011     108F  286C               	goto	l6042
 10012     1090                     l6058:
 10013                           
 10014                           ;UART.c: 72:         index++;
 10015     1090  3001               	movlw	1
 10016     1091  07E6               	addwf	readLine@index,f
 10017     1092  283B               	goto	l919
 10018     1093                     l921:
 10019     1093  0008               	return
 10020     1094                     __end_of_readLine:
 10021                           
 10022                           	psect	text9
 10023     1CF4                     __ptext9:	
 10024 ;; *************** function _EUSART_Read *****************
 10025 ;; Defined at:
 10026 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;		None
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  readValue       1    1[BANK1 ] unsigned char 
 10031 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
 10032 ;; Return value:  Size  Location     Type
 10033 ;;                  1    wreg      unsigned char 
 10034 ;; Registers used:
 10035 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;Total ram usage:        2 bytes
 10046 ;; Hardware stack levels used: 1
 10047 ;; Hardware stack levels required when called: 5
 10048 ;; This function calls:
 10049 ;;		Nothing
 10050 ;; This function is called by:
 10051 ;;		_readLine
 10052 ;;		_getch
 10053 ;; This function uses a non-reentrant model
 10054 ;;
 10055                           
 10056     1CF4                     _EUSART_Read:	
 10057                           ;psect for function _EUSART_Read
 10058                           
 10059     1CF4                     l5146:	
 10060                           ;incstack = 0
 10061                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10062                           
 10063     1CF4                     l5148:
 10064                           
 10065                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
 10066     1CF4  0020               	movlb	0	; select bank0
 10067     1CF5  0869               	movf	_eusartRxTail,w
 10068     1CF6  3EB0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10069     1CF7  0086               	movwf	6
 10070     1CF8  3001               	movlw	1	; select bank3/4
 10071     1CF9  0087               	movwf	7
 10072     1CFA  0801               	movf	1,w
 10073     1CFB  0021               	movlb	1	; select bank1
 10074     1CFC  00A1               	movwf	EUSART_Read@readValue^(0+128)
 10075     1CFD                     l5150:
 10076                           
 10077                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 10078     1CFD  0020               	movlb	0	; select bank0
 10079     1CFE  0869               	movf	_eusartRxTail,w	;volatile
 10080     1CFF  3E01               	addlw	1
 10081     1D00  3907               	andlw	7
 10082     1D01  0021               	movlb	1	; select bank1
 10083     1D02  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
 10084     1D03                     l5152:
 10085                           
 10086                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
 10087     1D03  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
 10088     1D04  0020               	movlb	0	; select bank0
 10089     1D05  00E9               	movwf	_eusartRxTail	;volatile
 10090     1D06                     l5154:
 10091                           
 10092                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
 10093     1D06  0021               	movlb	1	; select bank1
 10094     1D07  1291               	bcf	17,5	;volatile
 10095     1D08                     l5156:
 10096                           
 10097                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
 10098     1D08  0020               	movlb	0	; select bank0
 10099     1D09  0868               	movf	_eusartRxCount,w	;volatile
 10100     1D0A  1903               	btfsc	3,2
 10101     1D0B  2D0D               	goto	u5771
 10102     1D0C  2D0E               	goto	u5770
 10103     1D0D                     u5771:
 10104     1D0D  2D10               	goto	l5160
 10105     1D0E                     u5770:
 10106     1D0E                     l5158:
 10107                           
 10108                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
 10109     1D0E  3001               	movlw	1
 10110     1D0F  02E8               	subwf	_eusartRxCount,f	;volatile
 10111     1D10                     l5160:
 10112                           
 10113                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
 10114     1D10  0021               	movlb	1	; select bank1
 10115     1D11  1691               	bsf	17,5	;volatile
 10116     1D12                     l5162:
 10117                           
 10118                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
 10119     1D12  0821               	movf	EUSART_Read@readValue^(0+128),w
 10120     1D13                     l725:
 10121     1D13  0008               	return
 10122     1D14                     __end_of_EUSART_Read:
 10123                           
 10124                           	psect	text10
 10125     1A87                     __ptext10:	
 10126 ;; *************** function _EUSART_IsRxReady *****************
 10127 ;; Defined at:
 10128 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;		None
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;		None
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  1    wreg      _Bool 
 10135 ;; Registers used:
 10136 ;;		wreg, status,2, status,0
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;Total ram usage:        0 bytes
 10147 ;; Hardware stack levels used: 1
 10148 ;; Hardware stack levels required when called: 5
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_readLine
 10153 ;;		_getch
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157     1A87                     _EUSART_IsRxReady:	
 10158                           ;psect for function _EUSART_IsRxReady
 10159                           
 10160     1A87                     l5142:	
 10161                           ;incstack = 0
 10162                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 10163                           
 10164                           
 10165                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
 10166     1A87  0020               	movlb	0	; select bank0
 10167     1A88  0868               	movf	_eusartRxCount,w	;volatile
 10168     1A89  1D03               	btfss	3,2
 10169     1A8A  2A8C               	goto	u5751
 10170     1A8B  2A8E               	goto	u5750
 10171     1A8C                     u5751:
 10172     1A8C  3001               	movlw	1
 10173     1A8D  2A8F               	goto	u5760
 10174     1A8E                     u5750:
 10175     1A8E  3000               	movlw	0
 10176     1A8F                     u5760:
 10177     1A8F                     l712:
 10178     1A8F  0008               	return
 10179     1A90                     __end_of_EUSART_IsRxReady:
 10180                           
 10181                           	psect	text11
 10182     13CD                     __ptext11:	
 10183 ;; *************** function _atoi *****************
 10184 ;; Defined at:
 10185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  s               1    6[BANK1 ] PTR const unsigned char 
 10188 ;;		 -> line(20), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  n               2   11[BANK1 ] int 
 10191 ;;  neg             1   10[BANK1 ] _Bool 
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  2    6[BANK1 ] int 
 10194 ;; Registers used:
 10195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10201 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;Total ram usage:        7 bytes
 10206 ;; Hardware stack levels used: 1
 10207 ;; Hardware stack levels required when called: 6
 10208 ;; This function calls:
 10209 ;;		___wmul
 10210 ;; This function is called by:
 10211 ;;		_uartHandler
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215     13CD                     _atoi:	
 10216                           ;psect for function _atoi
 10217                           
 10218     13CD                     l6076:	
 10219                           ;incstack = 0
 10220                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10221                           
 10222     13CD  0021               	movlb	1	; select bank1
 10223     13CE  01AB               	clrf	atoi@n^(0+128)
 10224     13CF  01AC               	clrf	(atoi@n+1)^(0+128)
 10225     13D0  01AA               	clrf	atoi@neg^(0+128)
 10226     13D1  2BD4               	goto	l6080
 10227     13D2                     l6078:
 10228     13D2  3001               	movlw	1
 10229     13D3  07A6               	addwf	atoi@s^(0+128),f
 10230     13D4                     l6080:
 10231     13D4  0826               	movf	atoi@s^(0+128),w
 10232     13D5  0086               	movwf	6
 10233     13D6  3001               	movlw	1	; select bank2/3
 10234     13D7  0087               	movwf	7
 10235     13D8  3020               	movlw	32
 10236     13D9  0601               	xorwf	1,w
 10237     13DA  1903               	btfsc	3,2
 10238     13DB  2BDD               	goto	u7231
 10239     13DC  2BDE               	goto	u7230
 10240     13DD                     u7231:
 10241     13DD  2BD2               	goto	l6078
 10242     13DE                     u7230:
 10243     13DE                     l6082:
 10244     13DE  0826               	movf	atoi@s^(0+128),w
 10245     13DF  0086               	movwf	6
 10246     13E0  3001               	movlw	1	; select bank2/3
 10247     13E1  0087               	movwf	7
 10248     13E2  30F7               	movlw	247
 10249     13E3  0701               	addwf	1,w
 10250     13E4  00A8               	movwf	??_atoi^(0+128)
 10251     13E5  3005               	movlw	5
 10252     13E6  0228               	subwf	??_atoi^(0+128),w
 10253     13E7  1C03               	skipc
 10254     13E8  2BEA               	goto	u7241
 10255     13E9  2BEB               	goto	u7240
 10256     13EA                     u7241:
 10257     13EA  2BD2               	goto	l6078
 10258     13EB                     u7240:
 10259     13EB                     l6084:
 10260     13EB  0826               	movf	atoi@s^(0+128),w
 10261     13EC  0086               	movwf	6
 10262     13ED  3001               	movlw	1	; select bank2/3
 10263     13EE  0087               	movwf	7
 10264     13EF  302D               	movlw	45
 10265     13F0  0601               	xorwf	1,w
 10266     13F1  1D03               	btfss	3,2
 10267     13F2  2BF4               	goto	u7251
 10268     13F3  2BF5               	goto	u7250
 10269     13F4                     u7251:
 10270     13F4  2BFA               	goto	l6090
 10271     13F5                     u7250:
 10272     13F5                     l6086:
 10273     13F5  3001               	movlw	1
 10274     13F6  00AA               	movwf	atoi@neg^(0+128)
 10275     13F7                     l6088:
 10276     13F7  3001               	movlw	1
 10277     13F8  07A6               	addwf	atoi@s^(0+128),f
 10278     13F9  2C23               	goto	l6098
 10279     13FA                     l6090:
 10280     13FA  0826               	movf	atoi@s^(0+128),w
 10281     13FB  0086               	movwf	6
 10282     13FC  3001               	movlw	1	; select bank2/3
 10283     13FD  0087               	movwf	7
 10284     13FE  302B               	movlw	43
 10285     13FF  0601               	xorwf	1,w
 10286     1400  1D03               	btfss	3,2
 10287     1401  2C03               	goto	u7261
 10288     1402  2C04               	goto	u7260
 10289     1403                     u7261:
 10290     1403  2C23               	goto	l6098
 10291     1404                     u7260:
 10292     1404  2BF7               	goto	l6088
 10293     1405                     l6094:
 10294     1405  0826               	movf	atoi@s^(0+128),w
 10295     1406  0086               	movwf	6
 10296     1407  3001               	movlw	1	; select bank2/3
 10297     1408  0087               	movwf	7
 10298     1409  082C               	movf	(atoi@n+1)^(0+128),w
 10299     140A  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 10300     140B  082B               	movf	atoi@n^(0+128),w
 10301     140C  00A0               	movwf	___wmul@multiplier^(0+128)
 10302     140D  300A               	movlw	10
 10303     140E  00A2               	movwf	___wmul@multiplicand^(0+128)
 10304     140F  3000               	movlw	0
 10305     1410  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 10306     1411  319C  24B4  3193   	fcall	___wmul
 10307     1414  0021               	movlb	1	; select bank1
 10308     1415  0821               	movf	(?___wmul+1)^(0+128),w
 10309     1416  00A9               	movwf	(??_atoi^(0+128)+1)
 10310     1417  0801               	movf	1,w
 10311     1418  0220               	subwf	?___wmul^(0+128),w
 10312     1419  00A8               	movwf	??_atoi^(0+128)
 10313     141A  1C03               	skipc
 10314     141B  03A9               	decf	(??_atoi^(0+128)+1),f
 10315     141C  0828               	movf	??_atoi^(0+128),w
 10316     141D  3E30               	addlw	48
 10317     141E  00AB               	movwf	atoi@n^(0+128)
 10318     141F  3000               	movlw	0
 10319     1420  3D29               	addwfc	(??_atoi+1)^(0+128),w
 10320     1421  00AC               	movwf	(atoi@n+1)^(0+128)
 10321     1422  2BF7               	goto	l6088
 10322     1423                     l6098:
 10323     1423  0826               	movf	atoi@s^(0+128),w
 10324     1424  0086               	movwf	6
 10325     1425  3001               	movlw	1	; select bank2/3
 10326     1426  0087               	movwf	7
 10327     1427  30D0               	movlw	208
 10328     1428  0701               	addwf	1,w
 10329     1429  00A8               	movwf	??_atoi^(0+128)
 10330     142A  300A               	movlw	10
 10331     142B  0228               	subwf	??_atoi^(0+128),w
 10332     142C  1C03               	skipc
 10333     142D  2C2F               	goto	u7271
 10334     142E  2C30               	goto	u7270
 10335     142F                     u7271:
 10336     142F  2C05               	goto	l6094
 10337     1430                     u7270:
 10338     1430                     l6100:
 10339     1430  082A               	movf	atoi@neg^(0+128),w
 10340     1431  1D03               	btfss	3,2
 10341     1432  2C34               	goto	u7281
 10342     1433  2C35               	goto	u7280
 10343     1434                     u7281:
 10344     1434  2C41               	goto	l6104
 10345     1435                     u7280:
 10346     1435                     l6102:
 10347     1435  092B               	comf	atoi@n^(0+128),w
 10348     1436  00A8               	movwf	??_atoi^(0+128)
 10349     1437  092C               	comf	(atoi@n+1)^(0+128),w
 10350     1438  00A9               	movwf	(??_atoi^(0+128)+1)
 10351     1439  0AA8               	incf	??_atoi^(0+128),f
 10352     143A  1903               	skipnz
 10353     143B  0AA9               	incf	(??_atoi^(0+128)+1),f
 10354     143C  0828               	movf	??_atoi^(0+128),w
 10355     143D  00A6               	movwf	?_atoi^(0+128)
 10356     143E  0829               	movf	(??_atoi+1)^(0+128),w
 10357     143F  00A7               	movwf	(?_atoi+1)^(0+128)
 10358     1440  2C45               	goto	l1687
 10359     1441                     l6104:
 10360     1441  082C               	movf	(atoi@n+1)^(0+128),w
 10361     1442  00A7               	movwf	(?_atoi+1)^(0+128)
 10362     1443  082B               	movf	atoi@n^(0+128),w
 10363     1444  00A6               	movwf	?_atoi^(0+128)
 10364     1445                     l1687:
 10365     1445  0008               	return
 10366     1446                     __end_of_atoi:
 10367                           
 10368                           	psect	text12
 10369     1DA1                     __ptext12:	
 10370 ;; *************** function _sprintf *****************
 10371 ;; Defined at:
 10372 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  s               1   66[BANK1 ] PTR unsigned char 
 10375 ;;		 -> main@str(20), 
 10376 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
 10377 ;;		 -> STR_1(14), 
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  f              11    1[BANK2 ] struct _IO_FILE
 10380 ;;  ret             2    0        int 
 10381 ;;  ap              1    0[BANK2 ] PTR void [1]
 10382 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  2   66[BANK1 ] int 
 10385 ;; Registers used:
 10386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10392 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Totals:         0       0       5      12       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;Total ram usage:       17 bytes
 10397 ;; Hardware stack levels used: 1
 10398 ;; Hardware stack levels required when called: 13
 10399 ;; This function calls:
 10400 ;;		_vfprintf
 10401 ;; This function is called by:
 10402 ;;		_main
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406     1DA1                     _sprintf:	
 10407                           ;psect for function _sprintf
 10408                           
 10409     1DA1                     l6280:	
 10410                           ;incstack = 0
 10411                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10412                           
 10413     1DA1  30E5               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
 10414     1DA2  0022               	movlb	2	; select bank2
 10415     1DA3  00A0               	movwf	sprintf@ap^(0+256)
 10416     1DA4  0021               	movlb	1	; select bank1
 10417     1DA5  0862               	movf	sprintf@s^(0+128),w
 10418     1DA6  0022               	movlb	2	; select bank2
 10419     1DA7  00A1               	movwf	sprintf@f^(0+256)
 10420     1DA8  3001               	movlw	1
 10421     1DA9  00A2               	movwf	(sprintf@f+1)^(0+256)
 10422     1DAA                     l6282:
 10423     1DAA  01A3               	clrf	(sprintf@f^(0+256)+2)
 10424     1DAB  01A4               	clrf	((sprintf@f+1)^(0+256)+2)
 10425     1DAC                     l6284:
 10426     1DAC  01AA               	clrf	(sprintf@f^(0+256)+9)
 10427     1DAD  01AB               	clrf	((sprintf@f+1)^(0+256)+9)
 10428     1DAE                     l6286:
 10429     1DAE  3021               	movlw	low sprintf@f
 10430     1DAF  0021               	movlb	1	; select bank1
 10431     1DB0  00D9               	movwf	vfprintf@fp^(0+128)
 10432     1DB1  3001               	movlw	high sprintf@f
 10433     1DB2  00DA               	movwf	(vfprintf@fp^(0+128)+1)
 10434     1DB3  0864               	movf	(sprintf@fmt+1)^(0+128),w
 10435     1DB4  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 10436     1DB5  0863               	movf	sprintf@fmt^(0+128),w
 10437     1DB6  00DB               	movwf	vfprintf@fmt^(0+128)
 10438     1DB7  3020               	movlw	low sprintf@ap
 10439     1DB8  00DD               	movwf	vfprintf@ap^(0+128)
 10440     1DB9  3001               	movlw	high sprintf@ap
 10441     1DBA  00DE               	movwf	(vfprintf@ap+1)^(0+128)
 10442     1DBB  319D  25EF  319D   	fcall	_vfprintf
 10443     1DBE                     l6288:
 10444     1DBE  0021               	movlb	1	; select bank1
 10445     1DBF  0862               	movf	sprintf@s^(0+128),w
 10446     1DC0  0022               	movlb	2	; select bank2
 10447     1DC1  0723               	addwf	(sprintf@f^(0+256)+2),w
 10448     1DC2  0086               	movwf	6
 10449     1DC3  3001               	movlw	1	; select bank2/3
 10450     1DC4  0087               	movwf	7
 10451     1DC5  0181               	clrf	1
 10452     1DC6                     l1694:
 10453     1DC6  0008               	return
 10454     1DC7                     __end_of_sprintf:
 10455                           
 10456                           	psect	text13
 10457     1A7E                     __ptext13:	
 10458 ;; *************** function _printOut *****************
 10459 ;; Defined at:
 10460 ;;		line 92 in file "UART.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  str             1   73[BANK1 ] PTR unsigned char 
 10463 ;;		 -> main@str(20), 
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      void 
 10468 ;; Registers used:
 10469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10475 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;Total ram usage:        1 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; Hardware stack levels required when called: 14
 10482 ;; This function calls:
 10483 ;;		_printf
 10484 ;; This function is called by:
 10485 ;;		_main
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489     1A7E                     _printOut:	
 10490                           ;psect for function _printOut
 10491                           
 10492     1A7E                     l6292:	
 10493                           ;incstack = 0
 10494                           ; Regs used in _printOut: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10495                           
 10496                           
 10497                           ;UART.c: 93:     printf(str);
 10498     1A7E  0021               	movlb	1	; select bank1
 10499     1A7F  0869               	movf	printOut@str^(0+128),w
 10500     1A80  00E2               	movwf	printf@fmt^(0+128)
 10501     1A81  3001               	movlw	1
 10502     1A82  00E3               	movwf	(printf@fmt+1)^(0+128)
 10503     1A83  319C  2401  319A   	fcall	_printf
 10504     1A86                     l935:
 10505     1A86  0008               	return
 10506     1A87                     __end_of_printOut:
 10507                           
 10508                           	psect	text14
 10509     1757                     __ptext14:	
 10510 ;; *************** function _printLogs *****************
 10511 ;; Defined at:
 10512 ;;		line 76 in file "UART.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;		None
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;		None
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1    wreg      void 
 10519 ;; Registers used:
 10520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;Total ram usage:        0 bytes
 10531 ;; Hardware stack levels used: 1
 10532 ;; Hardware stack levels required when called: 15
 10533 ;; This function calls:
 10534 ;;		_getDutycycle
 10535 ;;		_getHoogtesensor
 10536 ;;		_getKd
 10537 ;;		_getKi
 10538 ;;		_getKp
 10539 ;;		_getPomphoogte
 10540 ;;		_getSetpoint
 10541 ;;		_printFloat
 10542 ;;		_printf
 10543 ;; This function is called by:
 10544 ;;		_main
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548     1757                     _printLogs:	
 10549                           ;psect for function _printLogs
 10550                           
 10551     1757                     l6276:	
 10552                           ;incstack = 0
 10553                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10554                           
 10555                           
 10556                           ;UART.c: 78:     if (mustPrintLogs) {
 10557     1757  0020               	movlb	0	; select bank0
 10558     1758  086E               	movf	_mustPrintLogs,w
 10559     1759  1903               	btfsc	3,2
 10560     175A  2F5C               	goto	u7471
 10561     175B  2F5D               	goto	u7470
 10562     175C                     u7471:
 10563     175C  2FFF               	goto	l932
 10564     175D                     u7470:
 10565     175D                     l6278:
 10566                           
 10567                           ;UART.c: 79:         printf("hoogte: %u", getHoogtesensor());
 10568     175D  30F2               	movlw	low (STR_4| (0+32768))
 10569     175E  0021               	movlb	1	; select bank1
 10570     175F  00E2               	movwf	printf@fmt^(0+128)
 10571     1760  3098               	movlw	high (STR_4| (0+32768))
 10572     1761  00E3               	movwf	(printf@fmt^(0+128)+1)
 10573     1762  319A  2248  3197   	fcall	_getHoogtesensor
 10574     1765  0021               	movlb	1	; select bank1
 10575     1766  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 10576     1767  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10577     1768  0820               	movf	?_getHoogtesensor^(0+128),w
 10578     1769  00E4               	movwf	(?_printf^(0+128)+2)
 10579     176A  319C  2401  3197   	fcall	_printf
 10580                           
 10581                           ;UART.c: 80:         printf(", setpoint: %u", getSetpoint());
 10582     176D  30AE               	movlw	low (STR_5| (0+32768))
 10583     176E  0021               	movlb	1	; select bank1
 10584     176F  00E2               	movwf	printf@fmt^(0+128)
 10585     1770  3098               	movlw	high (STR_5| (0+32768))
 10586     1771  00E3               	movwf	(printf@fmt^(0+128)+1)
 10587     1772  319A  2251  3197   	fcall	_getSetpoint
 10588     1775  0021               	movlb	1	; select bank1
 10589     1776  0821               	movf	(?_getSetpoint+1)^(0+128),w
 10590     1777  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10591     1778  0820               	movf	?_getSetpoint^(0+128),w
 10592     1779  00E4               	movwf	(?_printf^(0+128)+2)
 10593     177A  319C  2401  3197   	fcall	_printf
 10594                           
 10595                           ;UART.c: 81:         printf(", duty cycle: %u", getDutycycle());
 10596     177D  308E               	movlw	low (STR_6| (0+32768))
 10597     177E  0021               	movlb	1	; select bank1
 10598     177F  00E2               	movwf	printf@fmt^(0+128)
 10599     1780  3098               	movlw	high (STR_6| (0+32768))
 10600     1781  00E3               	movwf	(printf@fmt^(0+128)+1)
 10601     1782  319A  2263  3197   	fcall	_getDutycycle
 10602     1785  0021               	movlb	1	; select bank1
 10603     1786  0821               	movf	(?_getDutycycle+1)^(0+128),w
 10604     1787  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10605     1788  0820               	movf	?_getDutycycle^(0+128),w
 10606     1789  00E4               	movwf	(?_printf^(0+128)+2)
 10607     178A  319C  2401  3197   	fcall	_printf
 10608                           
 10609                           ;UART.c: 84:         printf(", kp: "); printFloat(getKp());
 10610     178D  3028               	movlw	low (STR_7| (0+32768))
 10611     178E  0021               	movlb	1	; select bank1
 10612     178F  00E2               	movwf	printf@fmt^(0+128)
 10613     1790  3099               	movlw	high (STR_7| (0+32768))
 10614     1791  00E3               	movwf	(printf@fmt^(0+128)+1)
 10615     1792  319C  2401  3197   	fcall	_printf
 10616     1795  319B  23CD  3197   	fcall	_getKp
 10617     1798  0021               	movlb	1	; select bank1
 10618     1799  0823               	movf	(?_getKp+3)^(0+128),w
 10619     179A  0022               	movlb	2	; select bank2
 10620     179B  00A3               	movwf	(printFloat@number+3)^(0+256)
 10621     179C  0021               	movlb	1	; select bank1
 10622     179D  0822               	movf	(?_getKp+2)^(0+128),w
 10623     179E  0022               	movlb	2	; select bank2
 10624     179F  00A2               	movwf	(printFloat@number+2)^(0+256)
 10625     17A0  0021               	movlb	1	; select bank1
 10626     17A1  0821               	movf	(?_getKp+1)^(0+128),w
 10627     17A2  0022               	movlb	2	; select bank2
 10628     17A3  00A1               	movwf	(printFloat@number+1)^(0+256)
 10629     17A4  0021               	movlb	1	; select bank1
 10630     17A5  0820               	movf	?_getKp^(0+128),w
 10631     17A6  0022               	movlb	2	; select bank2
 10632     17A7  00A0               	movwf	printFloat@number^(0+256)
 10633     17A8  3194  2446  3197   	fcall	_printFloat
 10634                           
 10635                           ;UART.c: 85:         printf(", ki: "); printFloat(getKi());
 10636     17AB  3021               	movlw	low (STR_8| (0+32768))
 10637     17AC  0021               	movlb	1	; select bank1
 10638     17AD  00E2               	movwf	printf@fmt^(0+128)
 10639     17AE  3099               	movlw	high (STR_8| (0+32768))
 10640     17AF  00E3               	movwf	(printf@fmt^(0+128)+1)
 10641     17B0  319C  2401  3197   	fcall	_printf
 10642     17B3  319B  23BC  3197   	fcall	_getKi
 10643     17B6  0021               	movlb	1	; select bank1
 10644     17B7  0823               	movf	(?_getKi+3)^(0+128),w
 10645     17B8  0022               	movlb	2	; select bank2
 10646     17B9  00A3               	movwf	(printFloat@number+3)^(0+256)
 10647     17BA  0021               	movlb	1	; select bank1
 10648     17BB  0822               	movf	(?_getKi+2)^(0+128),w
 10649     17BC  0022               	movlb	2	; select bank2
 10650     17BD  00A2               	movwf	(printFloat@number+2)^(0+256)
 10651     17BE  0021               	movlb	1	; select bank1
 10652     17BF  0821               	movf	(?_getKi+1)^(0+128),w
 10653     17C0  0022               	movlb	2	; select bank2
 10654     17C1  00A1               	movwf	(printFloat@number+1)^(0+256)
 10655     17C2  0021               	movlb	1	; select bank1
 10656     17C3  0820               	movf	?_getKi^(0+128),w
 10657     17C4  0022               	movlb	2	; select bank2
 10658     17C5  00A0               	movwf	printFloat@number^(0+256)
 10659     17C6  3194  2446  3197   	fcall	_printFloat
 10660                           
 10661                           ;UART.c: 86:         printf(", kd: "); printFloat(getKd());
 10662     17C9  301A               	movlw	low (STR_9| (0+32768))
 10663     17CA  0021               	movlb	1	; select bank1
 10664     17CB  00E2               	movwf	printf@fmt^(0+128)
 10665     17CC  3099               	movlw	high (STR_9| (0+32768))
 10666     17CD  00E3               	movwf	(printf@fmt^(0+128)+1)
 10667     17CE  319C  2401  3197   	fcall	_printf
 10668     17D1  319B  23AB  3197   	fcall	_getKd
 10669     17D4  0021               	movlb	1	; select bank1
 10670     17D5  0823               	movf	(?_getKd+3)^(0+128),w
 10671     17D6  0022               	movlb	2	; select bank2
 10672     17D7  00A3               	movwf	(printFloat@number+3)^(0+256)
 10673     17D8  0021               	movlb	1	; select bank1
 10674     17D9  0822               	movf	(?_getKd+2)^(0+128),w
 10675     17DA  0022               	movlb	2	; select bank2
 10676     17DB  00A2               	movwf	(printFloat@number+2)^(0+256)
 10677     17DC  0021               	movlb	1	; select bank1
 10678     17DD  0821               	movf	(?_getKd+1)^(0+128),w
 10679     17DE  0022               	movlb	2	; select bank2
 10680     17DF  00A1               	movwf	(printFloat@number+1)^(0+256)
 10681     17E0  0021               	movlb	1	; select bank1
 10682     17E1  0820               	movf	?_getKd^(0+128),w
 10683     17E2  0022               	movlb	2	; select bank2
 10684     17E3  00A0               	movwf	printFloat@number^(0+256)
 10685     17E4  3194  2446  3197   	fcall	_printFloat
 10686                           
 10687                           ;UART.c: 87:         printf(", pomp: %u", getPomphoogte());
 10688     17E7  30FD               	movlw	low (STR_10| (0+32768))
 10689     17E8  0021               	movlb	1	; select bank1
 10690     17E9  00E2               	movwf	printf@fmt^(0+128)
 10691     17EA  3098               	movlw	high (STR_10| (0+32768))
 10692     17EB  00E3               	movwf	(printf@fmt^(0+128)+1)
 10693     17EC  319A  226C  3197   	fcall	_getPomphoogte
 10694     17EF  0021               	movlb	1	; select bank1
 10695     17F0  0821               	movf	(?_getPomphoogte+1)^(0+128),w
 10696     17F1  00E5               	movwf	((?_printf+1)^(0+128)+2)
 10697     17F2  0820               	movf	?_getPomphoogte^(0+128),w
 10698     17F3  00E4               	movwf	(?_printf^(0+128)+2)
 10699     17F4  319C  2401  3197   	fcall	_printf
 10700                           
 10701                           ;UART.c: 88:         printf("\r\n");
 10702     17F7  30AB               	movlw	low ((STR_16+12)| (0+32768))
 10703     17F8  0021               	movlb	1	; select bank1
 10704     17F9  00E2               	movwf	printf@fmt^(0+128)
 10705     17FA  3098               	movlw	high ((STR_16+12)| (0+32768))
 10706     17FB  00E3               	movwf	(printf@fmt^(0+128)+1)
 10707     17FC  319C  2401  3197   	fcall	_printf
 10708     17FF                     l932:
 10709     17FF  0008               	return
 10710     1800                     __end_of_printLogs:
 10711                           
 10712                           	psect	text15
 10713     1446                     __ptext15:	
 10714 ;; *************** function _printFloat *****************
 10715 ;; Defined at:
 10716 ;;		line 13 in file "UART.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  number          4    0[BANK2 ] float 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  fractional_p    2    4[BANK2 ] unsigned short 
 10721 ;;  integer_part    1    6[BANK2 ] char 
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10731 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;Total ram usage:        9 bytes
 10736 ;; Hardware stack levels used: 1
 10737 ;; Hardware stack levels required when called: 14
 10738 ;; This function calls:
 10739 ;;		___flmul
 10740 ;;		___flsub
 10741 ;;		___fltol
 10742 ;;		___xxtofl
 10743 ;;		_printf
 10744 ;; This function is called by:
 10745 ;;		_printLogs
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749     1446                     _printFloat:	
 10750                           ;psect for function _printFloat
 10751                           
 10752     1446                     l5980:	
 10753                           ;incstack = 0
 10754                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10755                           
 10756                           
 10757                           ;UART.c: 14:     int8_t integer_part = (int8_t) number;
 10758     1446  0022               	movlb	2	; select bank2
 10759     1447  0823               	movf	(printFloat@number+3)^(0+256),w
 10760     1448  0021               	movlb	1	; select bank1
 10761     1449  00E7               	movwf	(___fltol@f1+3)^(0+128)
 10762     144A  0022               	movlb	2	; select bank2
 10763     144B  0822               	movf	(printFloat@number+2)^(0+256),w
 10764     144C  0021               	movlb	1	; select bank1
 10765     144D  00E6               	movwf	(___fltol@f1+2)^(0+128)
 10766     144E  0022               	movlb	2	; select bank2
 10767     144F  0821               	movf	(printFloat@number+1)^(0+256),w
 10768     1450  0021               	movlb	1	; select bank1
 10769     1451  00E5               	movwf	(___fltol@f1+1)^(0+128)
 10770     1452  0022               	movlb	2	; select bank2
 10771     1453  0820               	movf	printFloat@number^(0+256),w
 10772     1454  0021               	movlb	1	; select bank1
 10773     1455  00E4               	movwf	___fltol@f1^(0+128)
 10774     1456  3192  2275  3194   	fcall	___fltol
 10775     1459  0021               	movlb	1	; select bank1
 10776     145A  0864               	movf	?___fltol^(0+128),w
 10777     145B  0022               	movlb	2	; select bank2
 10778     145C  00A6               	movwf	printFloat@integer_part^(0+256)
 10779                           
 10780                           ;UART.c: 15:     uint16_t fractional_part = (uint16_t) ((number - integer_part) * 1000);
 10781     145D  0823               	movf	(printFloat@number+3)^(0+256),w
 10782     145E  0021               	movlb	1	; select bank1
 10783     145F  00C9               	movwf	(___flsub@b+3)^(0+128)
 10784     1460  0022               	movlb	2	; select bank2
 10785     1461  0822               	movf	(printFloat@number+2)^(0+256),w
 10786     1462  0021               	movlb	1	; select bank1
 10787     1463  00C8               	movwf	(___flsub@b+2)^(0+128)
 10788     1464  0022               	movlb	2	; select bank2
 10789     1465  0821               	movf	(printFloat@number+1)^(0+256),w
 10790     1466  0021               	movlb	1	; select bank1
 10791     1467  00C7               	movwf	(___flsub@b+1)^(0+128)
 10792     1468  0022               	movlb	2	; select bank2
 10793     1469  0820               	movf	printFloat@number^(0+256),w
 10794     146A  0021               	movlb	1	; select bank1
 10795     146B  00C6               	movwf	___flsub@b^(0+128)
 10796     146C  0022               	movlb	2	; select bank2
 10797     146D  0826               	movf	printFloat@integer_part^(0+256),w
 10798     146E  0021               	movlb	1	; select bank1
 10799     146F  00EE               	movwf	??_printFloat^(0+128)
 10800     1470  01EF               	clrf	(??_printFloat^(0+128)+1)
 10801     1471  1BEE               	btfsc	??_printFloat^(0+128),7
 10802     1472  03EF               	decf	(??_printFloat^(0+128)+1),f
 10803     1473  086E               	movf	??_printFloat^(0+128),w
 10804     1474  00A0               	movwf	___xxtofl@val^(0+128)
 10805     1475  086F               	movf	(??_printFloat+1)^(0+128),w
 10806     1476  00A1               	movwf	(___xxtofl@val+1)^(0+128)
 10807     1477  0D89               	rlf	9,f
 10808     1478  3B89               	subwfb	9,f
 10809     1479  0989               	comf	9,f
 10810     147A  00A2               	movwf	(___xxtofl@val+2)^(0+128)
 10811     147B  00A3               	movwf	(___xxtofl@val+3)^(0+128)
 10812     147C  3001               	movlw	1
 10813     147D  3196  26B2  3194   	fcall	___xxtofl
 10814     1480  0021               	movlb	1	; select bank1
 10815     1481  0823               	movf	(?___xxtofl+3)^(0+128),w
 10816     1482  00C5               	movwf	(___flsub@a+3)^(0+128)
 10817     1483  0822               	movf	(?___xxtofl+2)^(0+128),w
 10818     1484  00C4               	movwf	(___flsub@a+2)^(0+128)
 10819     1485  0821               	movf	(?___xxtofl+1)^(0+128),w
 10820     1486  00C3               	movwf	(___flsub@a+1)^(0+128)
 10821     1487  0820               	movf	?___xxtofl^(0+128),w
 10822     1488  00C2               	movwf	___flsub@a^(0+128)
 10823     1489  319C  24D4  3194   	fcall	___flsub
 10824     148C  0021               	movlb	1	; select bank1
 10825     148D  0845               	movf	(?___flsub+3)^(0+128),w
 10826     148E  00D1               	movwf	(___flmul@a+3)^(0+128)
 10827     148F  0844               	movf	(?___flsub+2)^(0+128),w
 10828     1490  00D0               	movwf	(___flmul@a+2)^(0+128)
 10829     1491  0843               	movf	(?___flsub+1)^(0+128),w
 10830     1492  00CF               	movwf	(___flmul@a+1)^(0+128)
 10831     1493  0842               	movf	?___flsub^(0+128),w
 10832     1494  00CE               	movwf	___flmul@a^(0+128)
 10833     1495  3044               	movlw	68
 10834     1496  00CD               	movwf	(___flmul@b+3)^(0+128)
 10835     1497  307A               	movlw	122
 10836     1498  00CC               	movwf	(___flmul@b+2)^(0+128)
 10837     1499  3000               	movlw	0
 10838     149A  00CB               	movwf	(___flmul@b+1)^(0+128)
 10839     149B  3000               	movlw	0
 10840     149C  00CA               	movwf	___flmul@b^(0+128)
 10841     149D  3180  2092  3194   	fcall	___flmul
 10842     14A0  0021               	movlb	1	; select bank1
 10843     14A1  084D               	movf	(?___flmul+3)^(0+128),w
 10844     14A2  00E7               	movwf	(___fltol@f1+3)^(0+128)
 10845     14A3  084C               	movf	(?___flmul+2)^(0+128),w
 10846     14A4  00E6               	movwf	(___fltol@f1+2)^(0+128)
 10847     14A5  084B               	movf	(?___flmul+1)^(0+128),w
 10848     14A6  00E5               	movwf	(___fltol@f1+1)^(0+128)
 10849     14A7  084A               	movf	?___flmul^(0+128),w
 10850     14A8  00E4               	movwf	___fltol@f1^(0+128)
 10851     14A9  3192  2275  3194   	fcall	___fltol
 10852     14AC  0021               	movlb	1	; select bank1
 10853     14AD  0865               	movf	(?___fltol+1)^(0+128),w
 10854     14AE  0022               	movlb	2	; select bank2
 10855     14AF  00A5               	movwf	(printFloat@fractional_part+1)^(0+256)
 10856     14B0  0021               	movlb	1	; select bank1
 10857     14B1  0864               	movf	?___fltol^(0+128),w
 10858     14B2  0022               	movlb	2	; select bank2
 10859     14B3  00A4               	movwf	printFloat@fractional_part^(0+256)
 10860     14B4                     l5982:
 10861                           
 10862                           ;UART.c: 16:     printf("%i.%03u", integer_part, fractional_part);
 10863     14B4  3012               	movlw	low (STR_2| (0+32768))
 10864     14B5  0021               	movlb	1	; select bank1
 10865     14B6  00E2               	movwf	printf@fmt^(0+128)
 10866     14B7  3099               	movlw	high (STR_2| (0+32768))
 10867     14B8  00E3               	movwf	(printf@fmt^(0+128)+1)
 10868     14B9  0022               	movlb	2	; select bank2
 10869     14BA  0826               	movf	printFloat@integer_part^(0+256),w
 10870     14BB  0021               	movlb	1	; select bank1
 10871     14BC  00E4               	movwf	(?_printf^(0+128)+2)
 10872     14BD  01E5               	clrf	((?_printf+1)^(0+128)+2)
 10873     14BE  1BE4               	btfsc	(?_printf^(0+128)+2),7
 10874     14BF  03E5               	decf	((?_printf+1)^(0+128)+2),f
 10875     14C0  0022               	movlb	2	; select bank2
 10876     14C1  0825               	movf	(printFloat@fractional_part+1)^(0+256),w
 10877     14C2  0021               	movlb	1	; select bank1
 10878     14C3  00E7               	movwf	((?_printf+1)^(0+128)+4)
 10879     14C4  0022               	movlb	2	; select bank2
 10880     14C5  0824               	movf	printFloat@fractional_part^(0+256),w
 10881     14C6  0021               	movlb	1	; select bank1
 10882     14C7  00E6               	movwf	(?_printf^(0+128)+4)
 10883     14C8  319C  2401  3194   	fcall	_printf
 10884     14CB                     l897:
 10885     14CB  0008               	return
 10886     14CC                     __end_of_printFloat:
 10887                           
 10888                           	psect	text16
 10889     1C01                     __ptext16:	
 10890 ;; *************** function _printf *****************
 10891 ;; Defined at:
 10892 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 10895 ;;		 -> STR_17(17), STR_16(15), STR_15(13), STR_14(13), 
 10896 ;;		 -> STR_13(13), STR_12(25), STR_11(3), STR_10(11), 
 10897 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(17), 
 10898 ;;		 -> STR_5(15), STR_4(11), STR_3(24), STR_2(8), 
 10899 ;;		 -> main@str(20), 
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;  ret             2    0        int 
 10902 ;;  ap              1   72[BANK1 ] PTR void [1]
 10903 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  2   66[BANK1 ] int 
 10906 ;; Registers used:
 10907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10913 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;Total ram usage:        7 bytes
 10918 ;; Hardware stack levels used: 1
 10919 ;; Hardware stack levels required when called: 13
 10920 ;; This function calls:
 10921 ;;		_vfprintf
 10922 ;; This function is called by:
 10923 ;;		_printFloat
 10924 ;;		_readLine
 10925 ;;		_printLogs
 10926 ;;		_printOut
 10927 ;;		_uartHandler
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           
 10931     1C01                     _printf:	
 10932                           ;psect for function _printf
 10933                           
 10934     1C01                     l5166:	
 10935                           ;incstack = 0
 10936                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10937                           
 10938     1C01  30E4               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10939     1C02  0021               	movlb	1	; select bank1
 10940     1C03  00E8               	movwf	printf@ap^(0+128)
 10941     1C04                     l5168:
 10942     1C04  3000               	movlw	0
 10943     1C05  00D9               	movwf	vfprintf@fp^(0+128)
 10944     1C06  00DA               	movwf	(vfprintf@fp+1)^(0+128)
 10945     1C07  0863               	movf	(printf@fmt+1)^(0+128),w
 10946     1C08  00DC               	movwf	(vfprintf@fmt+1)^(0+128)
 10947     1C09  0862               	movf	printf@fmt^(0+128),w
 10948     1C0A  00DB               	movwf	vfprintf@fmt^(0+128)
 10949     1C0B  30E8               	movlw	low printf@ap
 10950     1C0C  00DD               	movwf	vfprintf@ap^(0+128)
 10951     1C0D  3000               	movlw	high printf@ap
 10952     1C0E  00DE               	movwf	(vfprintf@ap+1)^(0+128)
 10953     1C0F  319D  25EF  319C   	fcall	_vfprintf
 10954     1C12                     l1820:
 10955     1C12  0008               	return
 10956     1C13                     __end_of_printf:
 10957                           
 10958                           	psect	text17
 10959     1DEF                     __ptext17:	
 10960 ;; *************** function _vfprintf *****************
 10961 ;; Defined at:
 10962 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;  fp              2   57[BANK1 ] PTR struct _IO_FILE
 10965 ;;		 -> sprintf@f(11), NULL(0), 
 10966 ;;  fmt             2   59[BANK1 ] PTR const unsigned char 
 10967 ;;		 -> STR_17(17), STR_16(15), STR_15(13), STR_14(13), 
 10968 ;;		 -> STR_13(13), STR_12(25), STR_11(3), STR_10(11), 
 10969 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(17), 
 10970 ;;		 -> STR_5(15), STR_4(11), STR_3(24), STR_2(8), 
 10971 ;;		 -> STR_1(14), main@str(20), 
 10972 ;;  ap              2   61[BANK1 ] PTR PTR void 
 10973 ;;		 -> printf@ap(1), sprintf@ap(1), 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  cfmt            2   64[BANK1 ] PTR unsigned char 
 10976 ;;		 -> STR_17(17), STR_16(15), STR_15(13), STR_14(13), 
 10977 ;;		 -> STR_13(13), STR_12(25), STR_11(3), STR_10(11), 
 10978 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(17), 
 10979 ;;		 -> STR_5(15), STR_4(11), STR_3(24), STR_2(8), 
 10980 ;;		 -> STR_1(14), main@str(20), 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  2   57[BANK1 ] int 
 10983 ;; Registers used:
 10984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10990 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10994 ;;Total ram usage:        9 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; Hardware stack levels required when called: 12
 10997 ;; This function calls:
 10998 ;;		_vfpfcnvrt
 10999 ;; This function is called by:
 11000 ;;		_sprintf
 11001 ;;		_printf
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005     1DEF                     _vfprintf:	
 11006                           ;psect for function _vfprintf
 11007                           
 11008     1DEF                     l5098:	
 11009                           ;incstack = 0
 11010                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11011                           
 11012                           
 11013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 11014     1DEF  0021               	movlb	1	; select bank1
 11015     1DF0  085C               	movf	(vfprintf@fmt+1)^(0+128),w
 11016     1DF1  00E1               	movwf	(vfprintf@cfmt+1)^(0+128)
 11017     1DF2  085B               	movf	vfprintf@fmt^(0+128),w
 11018     1DF3  00E0               	movwf	vfprintf@cfmt^(0+128)
 11019     1DF4                     l5100:
 11020                           
 11021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
 11022     1DF4  0022               	movlb	2	; select bank2
 11023     1DF5  01CB               	clrf	_nout^(0+256)
 11024     1DF6  01CC               	clrf	(_nout+1)^(0+256)
 11025                           
 11026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 11027     1DF7  2E0D               	goto	l5104
 11028     1DF8                     l5102:
 11029                           
 11030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
 11031     1DF8  085A               	movf	(vfprintf@fp+1)^(0+128),w
 11032     1DF9  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 11033     1DFA  0859               	movf	vfprintf@fp^(0+128),w
 11034     1DFB  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 11035     1DFC  30E0               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11036     1DFD  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 11037     1DFE  085E               	movf	(vfprintf@ap+1)^(0+128),w
 11038     1DFF  00CD               	movwf	(vfpfcnvrt@ap+1)^(0+128)
 11039     1E00  085D               	movf	vfprintf@ap^(0+128),w
 11040     1E01  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 11041     1E02  318A  22DC  319D   	fcall	_vfpfcnvrt
 11042     1E05  0021               	movlb	1	; select bank1
 11043     1E06  0849               	movf	?_vfpfcnvrt^(0+128),w
 11044     1E07  0022               	movlb	2	; select bank2
 11045     1E08  07CB               	addwf	_nout^(0+256),f
 11046     1E09  0021               	movlb	1	; select bank1
 11047     1E0A  084A               	movf	(?_vfpfcnvrt+1)^(0+128),w
 11048     1E0B  0022               	movlb	2	; select bank2
 11049     1E0C  3DCC               	addwfc	(_nout+1)^(0+256),f
 11050     1E0D                     l5104:
 11051                           
 11052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 11053     1E0D  0021               	movlb	1	; select bank1
 11054     1E0E  0860               	movf	vfprintf@cfmt^(0+128),w
 11055     1E0F  0084               	movwf	4
 11056     1E10  0861               	movf	(vfprintf@cfmt+1)^(0+128),w
 11057     1E11  0085               	movwf	5
 11058     1E12  0012               	moviw fsr0++
 11059     1E13  1D03               	btfss	3,2
 11060     1E14  2E16               	goto	u5681
 11061     1E15  2E17               	goto	u5680
 11062     1E16                     u5681:
 11063     1E16  2DF8               	goto	l5102
 11064     1E17                     u5680:
 11065     1E17                     l5106:
 11066                           
 11067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 11068     1E17  01D9               	clrf	?_vfprintf^(0+128)
 11069     1E18  01DA               	clrf	(?_vfprintf+1)^(0+128)
 11070     1E19                     l1786:
 11071     1E19  0008               	return
 11072     1E1A                     __end_of_vfprintf:
 11073                           
 11074                           	psect	text18
 11075     0ADC                     __ptext18:	
 11076 ;; *************** function _vfpfcnvrt *****************
 11077 ;; Defined at:
 11078 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 11081 ;;		 -> sprintf@f(11), NULL(0), 
 11082 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 11083 ;;		 -> vfprintf@cfmt(2), 
 11084 ;;  ap              2   44[BANK1 ] PTR PTR void 
 11085 ;;		 -> printf@ap(1), sprintf@ap(1), 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  convarg         4   51[BANK1 ] struct .
 11088 ;;  cp              2   55[BANK1 ] PTR unsigned char 
 11089 ;;		 -> STR_17(17), STR_16(15), STR_15(13), STR_14(13), 
 11090 ;;		 -> STR_13(13), STR_12(25), STR_11(3), STR_10(11), 
 11091 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(17), 
 11092 ;;		 -> STR_5(15), STR_4(11), STR_3(24), STR_2(8), 
 11093 ;;		 -> STR_1(14), main@str(20), 
 11094 ;;  done            1   50[BANK1 ] _Bool 
 11095 ;;  c               1    0        unsigned char 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  2   41[BANK1 ] int 
 11098 ;; Registers used:
 11099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11105 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11106 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11107 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11108 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;Total ram usage:       16 bytes
 11110 ;; Hardware stack levels used: 1
 11111 ;; Hardware stack levels required when called: 11
 11112 ;; This function calls:
 11113 ;;		_dtoa
 11114 ;;		_fputc
 11115 ;;		_read_prec_or_width
 11116 ;;		_utoa
 11117 ;; This function is called by:
 11118 ;;		_vfprintf
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122     0ADC                     _vfpfcnvrt:	
 11123                           ;psect for function _vfpfcnvrt
 11124                           
 11125     0ADC                     l4992:	
 11126                           ;incstack = 0
 11127                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11128                           
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 11131     0ADC  0021               	movlb	1	; select bank1
 11132     0ADD  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11133     0ADE  0086               	movwf	6
 11134     0ADF  0187               	clrf	7
 11135     0AE0  3F40               	moviw [0]fsr1
 11136     0AE1  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11137     0AE2  3F41               	moviw [1]fsr1
 11138     0AE3  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11139     0AE4  084E               	movf	??_vfpfcnvrt^(0+128),w
 11140     0AE5  0084               	movwf	4
 11141     0AE6  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11142     0AE7  0085               	movwf	5
 11143     0AE8  0012               	moviw fsr0++
 11144     0AE9  3A25               	xorlw	37
 11145     0AEA  1D03               	btfss	3,2
 11146     0AEB  2AED               	goto	u5601
 11147     0AEC  2AEE               	goto	u5600
 11148     0AED                     u5601:
 11149     0AED  2C2C               	goto	l5072
 11150     0AEE                     u5600:
 11151     0AEE                     l4994:
 11152                           
 11153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 11154     0AEE  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11155     0AEF  0086               	movwf	6
 11156     0AF0  0187               	clrf	7
 11157     0AF1  3001               	movlw	1
 11158     0AF2  0781               	addwf	1,f
 11159     0AF3  3141               	addfsr 1,1
 11160     0AF4  1803               	skipnc
 11161     0AF5  0A81               	incf	1,f
 11162     0AF6                     l4996:
 11163                           
 11164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 11165     0AF6  0020               	movlb	0	; select bank0
 11166     0AF7  01DA               	clrf	_width
 11167     0AF8  01DB               	clrf	_width+1
 11168     0AF9  3000               	movlw	0
 11169     0AFA  00E4               	movwf	_flags
 11170     0AFB                     l4998:
 11171                           
 11172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 11173     0AFB  30FF               	movlw	255
 11174     0AFC  0022               	movlb	2	; select bank2
 11175     0AFD  00CD               	movwf	_prec^(0+256)
 11176     0AFE  30FF               	movlw	255
 11177     0AFF  00CE               	movwf	(_prec^(0+256)+1)
 11178     0B00                     l5000:
 11179                           
 11180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 11181     0B00  0021               	movlb	1	; select bank1
 11182     0B01  01D2               	clrf	vfpfcnvrt@done^(0+128)
 11183                           
 11184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 11185     0B02  2B22               	goto	l5008
 11186     0B03                     l1764:	
 11187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 11188                           
 11189                           
 11190                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 11191     0B03  0020               	movlb	0	; select bank0
 11192     0B04  14E4               	bsf	_flags,1
 11193     0B05                     l5002:
 11194                           
 11195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 11196     0B05  0021               	movlb	1	; select bank1
 11197     0B06  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11198     0B07  0086               	movwf	6
 11199     0B08  0187               	clrf	7
 11200     0B09  3001               	movlw	1
 11201     0B0A  0781               	addwf	1,f
 11202     0B0B  3141               	addfsr 1,1
 11203     0B0C  1803               	skipnc
 11204     0B0D  0A81               	incf	1,f
 11205                           
 11206                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 11207     0B0E  2B22               	goto	l5008
 11208     0B0F                     l1766:	
 11209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 11210                           
 11211                           
 11212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 11213     0B0F  3001               	movlw	1
 11214     0B10  00D2               	movwf	vfpfcnvrt@done^(0+128)
 11215                           
 11216                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 11217     0B11  2B22               	goto	l5008
 11218     0B12                     l5006:
 11219     0B12  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11220     0B13  0086               	movwf	6
 11221     0B14  0187               	clrf	7
 11222     0B15  3F40               	moviw [0]fsr1
 11223     0B16  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11224     0B17  3F41               	moviw [1]fsr1
 11225     0B18  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11226     0B19  084E               	movf	??_vfpfcnvrt^(0+128),w
 11227     0B1A  0084               	movwf	4
 11228     0B1B  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11229     0B1C  0085               	movwf	5
 11230     0B1D  0800               	movf	0,w	;code access
 11231                           
 11232                           ; Switch size 1, requested type "simple"
 11233                           ; Number of cases is 1, Range of values is 48 to 48
 11234                           ; switch strategies available:
 11235                           ; Name         Instructions Cycles
 11236                           ; simple_byte            4     3 (average)
 11237                           ; direct_byte           11     9 (fixed)
 11238                           ; jumptable            263     9 (fixed)
 11239                           ;	Chosen strategy is simple_byte
 11240     0B1E  3A30               	xorlw	48	; case 48
 11241     0B1F  1903               	skipnz
 11242     0B20  2B03               	goto	l1764
 11243     0B21  2B0F               	goto	l1766
 11244     0B22                     l5008:
 11245                           
 11246                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 11247     0B22  0852               	movf	vfpfcnvrt@done^(0+128),w
 11248     0B23  1903               	btfsc	3,2
 11249     0B24  2B26               	goto	u5611
 11250     0B25  2B27               	goto	u5610
 11251     0B26                     u5611:
 11252     0B26  2B12               	goto	l5006
 11253     0B27                     u5610:
 11254     0B27                     l5010:
 11255                           
 11256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 11257     0B27  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11258     0B28  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 11259     0B29  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11260     0B2A  00A8               	movwf	(read_prec_or_width@ap+1)^(0+128)
 11261     0B2B  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11262     0B2C  00A7               	movwf	read_prec_or_width@ap^(0+128)
 11263     0B2D  3191  214B  318A   	fcall	_read_prec_or_width
 11264     0B30  0021               	movlb	1	; select bank1
 11265     0B31  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 11266     0B32  0020               	movlb	0	; select bank0
 11267     0B33  00DB               	movwf	_width+1
 11268     0B34  0021               	movlb	1	; select bank1
 11269     0B35  0826               	movf	?_read_prec_or_width^(0+128),w
 11270     0B36  0020               	movlb	0	; select bank0
 11271     0B37  00DA               	movwf	_width
 11272     0B38                     l5012:
 11273                           
 11274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 11275     0B38  1FDB               	btfss	_width+1,7
 11276     0B39  2B3B               	goto	u5621
 11277     0B3A  2B3C               	goto	u5620
 11278     0B3B                     u5621:
 11279     0B3B  2B42               	goto	l5018
 11280     0B3C                     u5620:
 11281     0B3C                     l5014:
 11282                           
 11283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 11284     0B3C  1464               	bsf	_flags,0
 11285     0B3D                     l5016:
 11286                           
 11287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 11288     0B3D  09DA               	comf	_width,f
 11289     0B3E  09DB               	comf	_width+1,f
 11290     0B3F  0ADA               	incf	_width,f
 11291     0B40  1903               	skipnz
 11292     0B41  0ADB               	incf	_width+1,f
 11293     0B42                     l5018:
 11294                           
 11295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 11296     0B42  0021               	movlb	1	; select bank1
 11297     0B43  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11298     0B44  0086               	movwf	6
 11299     0B45  0187               	clrf	7
 11300     0B46  3F40               	moviw [0]fsr1
 11301     0B47  00D7               	movwf	vfpfcnvrt@cp^(0+128)
 11302     0B48  3F41               	moviw [1]fsr1
 11303     0B49  00D8               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 11304     0B4A                     l5020:
 11305                           
 11306                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 11307     0B4A  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11308     0B4B  0084               	movwf	4
 11309     0B4C  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11310     0B4D  0085               	movwf	5
 11311     0B4E  0012               	moviw fsr0++
 11312     0B4F  3A64               	xorlw	100
 11313     0B50  1903               	btfsc	3,2
 11314     0B51  2B53               	goto	u5631
 11315     0B52  2B54               	goto	u5630
 11316     0B53                     u5631:
 11317     0B53  2B5E               	goto	l5024
 11318     0B54                     u5630:
 11319     0B54                     l5022:
 11320     0B54  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11321     0B55  0084               	movwf	4
 11322     0B56  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11323     0B57  0085               	movwf	5
 11324     0B58  0012               	moviw fsr0++
 11325     0B59  3A69               	xorlw	105
 11326     0B5A  1D03               	btfss	3,2
 11327     0B5B  2B5D               	goto	u5641
 11328     0B5C  2B5E               	goto	u5640
 11329     0B5D                     u5641:
 11330     0B5D  2B89               	goto	l5032
 11331     0B5E                     u5640:
 11332     0B5E                     l5024:
 11333                           
 11334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 11335     0B5E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11336     0B5F  0086               	movwf	6
 11337     0B60  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11338     0B61  0087               	movwf	7
 11339     0B62  0801               	movf	1,w
 11340     0B63  0084               	movwf	4
 11341     0B64  0185               	clrf	5
 11342     0B65  3002               	movlw	2
 11343     0B66  0781               	addwf	1,f
 11344     0B67  3F00               	moviw [0]fsr0
 11345     0B68  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 11346     0B69  3F01               	moviw [1]fsr0
 11347     0B6A  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 11348     0B6B                     l5026:
 11349                           
 11350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 11351     0B6B  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11352     0B6C  3E01               	addlw	1
 11353     0B6D  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11354     0B6E  3000               	movlw	0
 11355     0B6F  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 11356     0B70  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 11357     0B71  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11358     0B72  0086               	movwf	6
 11359     0B73  0187               	clrf	7
 11360     0B74  084E               	movf	??_vfpfcnvrt^(0+128),w
 11361     0B75  3FC0               	movwi [0]fsr1
 11362     0B76  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11363     0B77  3FC1               	movwi [1]fsr1
 11364     0B78                     l5028:
 11365                           
 11366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
 11367     0B78  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11368     0B79  00BD               	movwf	(dtoa@fp+1)^(0+128)
 11369     0B7A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11370     0B7B  00BC               	movwf	dtoa@fp^(0+128)
 11371     0B7C  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 11372     0B7D  00BF               	movwf	(dtoa@d+1)^(0+128)
 11373     0B7E  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 11374     0B7F  00BE               	movwf	dtoa@d^(0+128)
 11375     0B80  3188  20C9  318A   	fcall	_dtoa
 11376     0B83  0021               	movlb	1	; select bank1
 11377     0B84  083D               	movf	(?_dtoa+1)^(0+128),w
 11378     0B85  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 11379     0B86  083C               	movf	?_dtoa^(0+128),w
 11380     0B87  00C9               	movwf	?_vfpfcnvrt^(0+128)
 11381     0B88  2C4F               	goto	l1772
 11382     0B89                     l5032:
 11383     0B89  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11384     0B8A  0084               	movwf	4
 11385     0B8B  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11386     0B8C  0085               	movwf	5
 11387     0B8D  0012               	moviw fsr0++
 11388     0B8E  3A75               	xorlw	117
 11389     0B8F  1D03               	btfss	3,2
 11390     0B90  2B92               	goto	u5651
 11391     0B91  2B93               	goto	u5650
 11392     0B92                     u5651:
 11393     0B92  2BC8               	goto	l5046
 11394     0B93                     u5650:
 11395     0B93                     l5034:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 11398     0B93  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11399     0B94  0086               	movwf	6
 11400     0B95  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11401     0B96  0087               	movwf	7
 11402     0B97  0801               	movf	1,w
 11403     0B98  0084               	movwf	4
 11404     0B99  0185               	clrf	5
 11405     0B9A  3002               	movlw	2
 11406     0B9B  0781               	addwf	1,f
 11407     0B9C  3F00               	moviw [0]fsr0
 11408     0B9D  00D3               	movwf	vfpfcnvrt@convarg^(0+128)
 11409     0B9E  3F01               	moviw [1]fsr0
 11410     0B9F  00D4               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 11411     0BA0                     l5036:
 11412                           
 11413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 11414     0BA0  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11415     0BA1  3E01               	addlw	1
 11416     0BA2  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11417     0BA3  3000               	movlw	0
 11418     0BA4  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 11419     0BA5  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 11420     0BA6  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11421     0BA7  0086               	movwf	6
 11422     0BA8  0187               	clrf	7
 11423     0BA9  084E               	movf	??_vfpfcnvrt^(0+128),w
 11424     0BAA  3FC0               	movwi [0]fsr1
 11425     0BAB  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11426     0BAC  3FC1               	movwi [1]fsr1
 11427                           
 11428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 11429     0BAD  2BBF               	goto	l5044
 11430     0BAE                     l5038:
 11431                           
 11432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
 11433     0BAE  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11434     0BAF  00BD               	movwf	(utoa@fp+1)^(0+128)
 11435     0BB0  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11436     0BB1  00BC               	movwf	utoa@fp^(0+128)
 11437     0BB2  0854               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 11438     0BB3  00BF               	movwf	(utoa@d+1)^(0+128)
 11439     0BB4  0853               	movf	vfpfcnvrt@convarg^(0+128),w
 11440     0BB5  00BE               	movwf	utoa@d^(0+128)
 11441     0BB6  3193  2354  318A   	fcall	_utoa
 11442     0BB9  0021               	movlb	1	; select bank1
 11443     0BBA  083D               	movf	(?_utoa+1)^(0+128),w
 11444     0BBB  00CA               	movwf	(?_vfpfcnvrt+1)^(0+128)
 11445     0BBC  083C               	movf	?_utoa^(0+128),w
 11446     0BBD  00C9               	movwf	?_vfpfcnvrt^(0+128)
 11447     0BBE  2C4F               	goto	l1772
 11448     0BBF                     l5044:
 11449     0BBF  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11450     0BC0  0084               	movwf	4
 11451     0BC1  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11452     0BC2  0085               	movwf	5
 11453     0BC3  0800               	movf	0,w	;code access
 11454                           
 11455                           ; Switch size 1, requested type "simple"
 11456                           ; Number of cases is 1, Range of values is 117 to 117
 11457                           ; switch strategies available:
 11458                           ; Name         Instructions Cycles
 11459                           ; simple_byte            4     3 (average)
 11460                           ; direct_byte           11     9 (fixed)
 11461                           ; jumptable            263     9 (fixed)
 11462                           ;	Chosen strategy is simple_byte
 11463     0BC4  3A75               	xorlw	117	; case 117
 11464     0BC5  1903               	skipnz
 11465     0BC6  2BAE               	goto	l5038
 11466     0BC7  2BC8               	goto	l5046
 11467     0BC8                     l5046:
 11468                           
 11469                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
 11470     0BC8  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11471     0BC9  0084               	movwf	4
 11472     0BCA  0858               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11473     0BCB  0085               	movwf	5
 11474     0BCC  0012               	moviw fsr0++
 11475     0BCD  3A6E               	xorlw	110
 11476     0BCE  1D03               	btfss	3,2
 11477     0BCF  2BD1               	goto	u5661
 11478     0BD0  2BD2               	goto	u5660
 11479     0BD1                     u5661:
 11480     0BD1  2BF9               	goto	l5056
 11481     0BD2                     u5660:
 11482     0BD2                     l5048:
 11483                           
 11484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
 11485     0BD2  084C               	movf	vfpfcnvrt@ap^(0+128),w
 11486     0BD3  0086               	movwf	6
 11487     0BD4  084D               	movf	(vfpfcnvrt@ap+1)^(0+128),w
 11488     0BD5  0087               	movwf	7
 11489     0BD6  0801               	movf	1,w
 11490     0BD7  0084               	movwf	4
 11491     0BD8  0185               	clrf	5
 11492     0BD9  3002               	movlw	2
 11493     0BDA  0781               	addwf	1,f
 11494     0BDB  3F00               	moviw [0]fsr0
 11495     0BDC  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11496     0BDD  3F01               	moviw [1]fsr0
 11497     0BDE  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11498     0BDF  084E               	movf	??_vfpfcnvrt^(0+128),w
 11499     0BE0  0086               	movwf	6
 11500     0BE1  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11501     0BE2  0087               	movwf	7
 11502     0BE3  0022               	movlb	2	; select bank2
 11503     0BE4  084B               	movf	_nout^(0+256),w
 11504     0BE5  3FC0               	movwi [0]fsr1
 11505     0BE6  084C               	movf	(_nout+1)^(0+256),w
 11506     0BE7  3FC1               	movwi [1]fsr1
 11507     0BE8                     l5050:
 11508                           
 11509                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
 11510     0BE8  0021               	movlb	1	; select bank1
 11511     0BE9  0857               	movf	vfpfcnvrt@cp^(0+128),w
 11512     0BEA  3E01               	addlw	1
 11513     0BEB  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11514     0BEC  3000               	movlw	0
 11515     0BED  3D58               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 11516     0BEE  00CF               	movwf	(??_vfpfcnvrt+1)^(0+128)
 11517     0BEF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11518     0BF0  0086               	movwf	6
 11519     0BF1  0187               	clrf	7
 11520     0BF2  084E               	movf	??_vfpfcnvrt^(0+128),w
 11521     0BF3  3FC0               	movwi [0]fsr1
 11522     0BF4  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11523     0BF5  3FC1               	movwi [1]fsr1
 11524     0BF6                     l5052:
 11525                           
 11526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
 11527     0BF6  01C9               	clrf	?_vfpfcnvrt^(0+128)
 11528     0BF7  01CA               	clrf	(?_vfpfcnvrt+1)^(0+128)
 11529     0BF8  2C4F               	goto	l1772
 11530     0BF9                     l5056:
 11531                           
 11532                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
 11533     0BF9  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11534     0BFA  0086               	movwf	6
 11535     0BFB  0187               	clrf	7
 11536     0BFC  3F40               	moviw [0]fsr1
 11537     0BFD  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11538     0BFE  3F41               	moviw [1]fsr1
 11539     0BFF  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11540     0C00  084E               	movf	??_vfpfcnvrt^(0+128),w
 11541     0C01  0084               	movwf	4
 11542     0C02  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11543     0C03  0085               	movwf	5
 11544     0C04  0012               	moviw fsr0++
 11545     0C05  3A25               	xorlw	37
 11546     0C06  1D03               	btfss	3,2
 11547     0C07  2C09               	goto	u5671
 11548     0C08  2C0A               	goto	u5670
 11549     0C09                     u5671:
 11550     0C09  2C23               	goto	l5066
 11551     0C0A                     u5670:
 11552     0C0A                     l5058:
 11553                           
 11554                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
 11555     0C0A  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11556     0C0B  0086               	movwf	6
 11557     0C0C  0187               	clrf	7
 11558     0C0D  3001               	movlw	1
 11559     0C0E  0781               	addwf	1,f
 11560     0C0F  3141               	addfsr 1,1
 11561     0C10  1803               	skipnc
 11562     0C11  0A81               	incf	1,f
 11563     0C12                     l5060:
 11564                           
 11565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
 11566     0C12  3025               	movlw	37
 11567     0C13  00A3               	movwf	fputc@c^(0+128)
 11568     0C14  3000               	movlw	0
 11569     0C15  00A4               	movwf	(fputc@c^(0+128)+1)
 11570     0C16  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11571     0C17  00A6               	movwf	(fputc@fp+1)^(0+128)
 11572     0C18  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11573     0C19  00A5               	movwf	fputc@fp^(0+128)
 11574     0C1A  3191  21A8  318A   	fcall	_fputc
 11575     0C1D                     l5062:
 11576                           
 11577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
 11578     0C1D  3001               	movlw	1
 11579     0C1E  0021               	movlb	1	; select bank1
 11580     0C1F  00C9               	movwf	?_vfpfcnvrt^(0+128)
 11581     0C20  3000               	movlw	0
 11582     0C21  00CA               	movwf	(?_vfpfcnvrt^(0+128)+1)
 11583     0C22  2C4F               	goto	l1772
 11584     0C23                     l5066:
 11585                           
 11586                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11587     0C23  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11588     0C24  0086               	movwf	6
 11589     0C25  0187               	clrf	7
 11590     0C26  3001               	movlw	1
 11591     0C27  0781               	addwf	1,f
 11592     0C28  3141               	addfsr 1,1
 11593     0C29  1803               	skipnc
 11594     0C2A  0A81               	incf	1,f
 11595     0C2B  2BF6               	goto	l5052
 11596     0C2C                     l5072:
 11597                           
 11598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11599     0C2C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11600     0C2D  0086               	movwf	6
 11601     0C2E  0187               	clrf	7
 11602     0C2F  3F40               	moviw [0]fsr1
 11603     0C30  00CE               	movwf	??_vfpfcnvrt^(0+128)
 11604     0C31  3F41               	moviw [1]fsr1
 11605     0C32  00CF               	movwf	(??_vfpfcnvrt^(0+128)+1)
 11606     0C33  084E               	movf	??_vfpfcnvrt^(0+128),w
 11607     0C34  0084               	movwf	4
 11608     0C35  084F               	movf	(??_vfpfcnvrt+1)^(0+128),w
 11609     0C36  0085               	movwf	5
 11610     0C37  0800               	movf	0,w	;code access
 11611     0C38  00D0               	movwf	(??_vfpfcnvrt+2)^(0+128)
 11612     0C39  01D1               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 11613     0C3A  0850               	movf	(??_vfpfcnvrt+2)^(0+128),w
 11614     0C3B  00A3               	movwf	fputc@c^(0+128)
 11615     0C3C  0851               	movf	(??_vfpfcnvrt+3)^(0+128),w
 11616     0C3D  00A4               	movwf	(fputc@c+1)^(0+128)
 11617     0C3E  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 11618     0C3F  00A6               	movwf	(fputc@fp+1)^(0+128)
 11619     0C40  0849               	movf	vfpfcnvrt@fp^(0+128),w
 11620     0C41  00A5               	movwf	fputc@fp^(0+128)
 11621     0C42  3191  21A8  318A   	fcall	_fputc
 11622     0C45                     l5074:
 11623                           
 11624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
 11625     0C45  0021               	movlb	1	; select bank1
 11626     0C46  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 11627     0C47  0086               	movwf	6
 11628     0C48  0187               	clrf	7
 11629     0C49  3001               	movlw	1
 11630     0C4A  0781               	addwf	1,f
 11631     0C4B  3141               	addfsr 1,1
 11632     0C4C  1803               	skipnc
 11633     0C4D  0A81               	incf	1,f
 11634     0C4E  2C1D               	goto	l5062
 11635     0C4F                     l1772:
 11636     0C4F  0008               	return
 11637     0C50                     __end_of_vfpfcnvrt:
 11638                           
 11639                           	psect	text19
 11640     1354                     __ptext19:	
 11641 ;; *************** function _utoa *****************
 11642 ;; Defined at:
 11643 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 11646 ;;		 -> sprintf@f(11), NULL(0), 
 11647 ;;  d               2   30[BANK1 ] unsigned int 
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;  i               2   36[BANK1 ] int 
 11650 ;;  w               2   34[BANK1 ] int 
 11651 ;;  p               1   33[BANK1 ] _Bool 
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  2   28[BANK1 ] int 
 11654 ;; Registers used:
 11655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11661 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;Total ram usage:       10 bytes
 11666 ;; Hardware stack levels used: 1
 11667 ;; Hardware stack levels required when called: 10
 11668 ;; This function calls:
 11669 ;;		___lwdiv
 11670 ;;		___lwmod
 11671 ;;		_pad
 11672 ;; This function is called by:
 11673 ;;		_vfpfcnvrt
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677     1354                     _utoa:	
 11678                           ;psect for function _utoa
 11679                           
 11680     1354                     l4526:	
 11681                           ;incstack = 0
 11682                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11683                           
 11684                           
 11685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1007:  _Bool p = 1;
 11686     1354  3001               	movlw	1
 11687     1355  0021               	movlb	1	; select bank1
 11688     1356  00C1               	movwf	utoa@p^(0+128)
 11689     1357                     l4528:
 11690                           
 11691                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 11692     1357  0020               	movlb	0	; select bank0
 11693     1358  085B               	movf	_width+1,w
 11694     1359  0021               	movlb	1	; select bank1
 11695     135A  00C3               	movwf	(utoa@w+1)^(0+128)
 11696     135B  0020               	movlb	0	; select bank0
 11697     135C  085A               	movf	_width,w
 11698     135D  0021               	movlb	1	; select bank1
 11699     135E  00C2               	movwf	utoa@w^(0+128)
 11700                           
 11701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 11702     135F  301F               	movlw	31
 11703     1360  00C4               	movwf	utoa@i^(0+128)
 11704     1361  3000               	movlw	0
 11705     1362  00C5               	movwf	(utoa@i^(0+128)+1)
 11706     1363                     l4530:
 11707                           
 11708                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 11709     1363  0024               	movlb	4	; select bank4
 11710     1364  01BF               	clrf	(_dbuf^(0+512)+31)
 11711                           
 11712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 11713     1365  2B94               	goto	l4542
 11714     1366                     l4532:
 11715                           
 11716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 11717     1366  30FF               	movlw	255
 11718     1367  0021               	movlb	1	; select bank1
 11719     1368  07C4               	addwf	utoa@i^(0+128),f
 11720     1369  30FF               	movlw	255
 11721     136A  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 11722     136B                     l4534:
 11723                           
 11724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 11725     136B  0844               	movf	utoa@i^(0+128),w
 11726     136C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11727     136D  0086               	movwf	6
 11728     136E  3002               	movlw	2	; select bank4/5
 11729     136F  0087               	movwf	7
 11730     1370  300A               	movlw	10
 11731     1371  00A0               	movwf	___lwmod@divisor^(0+128)
 11732     1372  3000               	movlw	0
 11733     1373  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 11734     1374  083F               	movf	(utoa@d+1)^(0+128),w
 11735     1375  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 11736     1376  083E               	movf	utoa@d^(0+128),w
 11737     1377  00A2               	movwf	___lwmod@dividend^(0+128)
 11738     1378  319E  261A  3193   	fcall	___lwmod
 11739     137B  0021               	movlb	1	; select bank1
 11740     137C  0820               	movf	?___lwmod^(0+128),w
 11741     137D  3E30               	addlw	48
 11742     137E  0081               	movwf	1
 11743     137F                     l4536:
 11744                           
 11745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 11746     137F  01C1               	clrf	utoa@p^(0+128)
 11747     1380                     l4538:
 11748                           
 11749                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 11750     1380  30FF               	movlw	255
 11751     1381  07C2               	addwf	utoa@w^(0+128),f
 11752     1382  30FF               	movlw	255
 11753     1383  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 11754     1384                     l4540:
 11755                           
 11756                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 11757     1384  300A               	movlw	10
 11758     1385  00A0               	movwf	___lwdiv@divisor^(0+128)
 11759     1386  3000               	movlw	0
 11760     1387  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 11761     1388  083F               	movf	(utoa@d+1)^(0+128),w
 11762     1389  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 11763     138A  083E               	movf	utoa@d^(0+128),w
 11764     138B  00A2               	movwf	___lwdiv@dividend^(0+128)
 11765     138C  3190  2000  3193   	fcall	___lwdiv
 11766     138F  0021               	movlb	1	; select bank1
 11767     1390  0821               	movf	(?___lwdiv+1)^(0+128),w
 11768     1391  00BF               	movwf	(utoa@d+1)^(0+128)
 11769     1392  0820               	movf	?___lwdiv^(0+128),w
 11770     1393  00BE               	movwf	utoa@d^(0+128)
 11771     1394                     l4542:
 11772                           
 11773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 11774     1394  0021               	movlb	1	; select bank1
 11775     1395  0844               	movf	utoa@i^(0+128),w
 11776     1396  0445               	iorwf	(utoa@i+1)^(0+128),w
 11777     1397  1903               	btfsc	3,2
 11778     1398  2B9A               	goto	u4551
 11779     1399  2B9B               	goto	u4550
 11780     139A                     u4551:
 11781     139A  2BB8               	goto	l4552
 11782     139B                     u4550:
 11783     139B                     l4544:
 11784     139B  083E               	movf	utoa@d^(0+128),w
 11785     139C  043F               	iorwf	(utoa@d+1)^(0+128),w
 11786     139D  1D03               	btfss	3,2
 11787     139E  2BA0               	goto	u4561
 11788     139F  2BA1               	goto	u4560
 11789     13A0                     u4561:
 11790     13A0  2B66               	goto	l4532
 11791     13A1                     u4560:
 11792     13A1                     l4546:
 11793     13A1  0841               	movf	utoa@p^(0+128),w
 11794     13A2  1D03               	btfss	3,2
 11795     13A3  2BA5               	goto	u4571
 11796     13A4  2BA6               	goto	u4570
 11797     13A5                     u4571:
 11798     13A5  2B66               	goto	l4532
 11799     13A6                     u4570:
 11800     13A6                     l4548:
 11801     13A6  0843               	movf	(utoa@w+1)^(0+128),w
 11802     13A7  3A80               	xorlw	128
 11803     13A8  00C0               	movwf	??_utoa^(0+128)
 11804     13A9  3080               	movlw	128
 11805     13AA  0240               	subwf	??_utoa^(0+128),w
 11806     13AB  1D03               	skipz
 11807     13AC  2BAF               	goto	u4585
 11808     13AD  3001               	movlw	1
 11809     13AE  0242               	subwf	utoa@w^(0+128),w
 11810     13AF                     u4585:
 11811     13AF  1C03               	skipc
 11812     13B0  2BB2               	goto	u4581
 11813     13B1  2BB3               	goto	u4580
 11814     13B2                     u4581:
 11815     13B2  2BB8               	goto	l4552
 11816     13B3                     u4580:
 11817     13B3                     l4550:
 11818     13B3  0020               	movlb	0	; select bank0
 11819     13B4  18E4               	btfsc	_flags,1
 11820     13B5  2BB7               	goto	u4591
 11821     13B6  2BB8               	goto	u4590
 11822     13B7                     u4591:
 11823     13B7  2B66               	goto	l4532
 11824     13B8                     u4590:
 11825     13B8                     l4552:
 11826                           
 11827                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 11828     13B8  0021               	movlb	1	; select bank1
 11829     13B9  083D               	movf	(utoa@fp+1)^(0+128),w
 11830     13BA  00B5               	movwf	(pad@fp+1)^(0+128)
 11831     13BB  083C               	movf	utoa@fp^(0+128),w
 11832     13BC  00B4               	movwf	pad@fp^(0+128)
 11833     13BD  0844               	movf	utoa@i^(0+128),w
 11834     13BE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11835     13BF  00B6               	movwf	pad@buf^(0+128)
 11836     13C0  0843               	movf	(utoa@w+1)^(0+128),w
 11837     13C1  00B8               	movwf	(pad@p+1)^(0+128)
 11838     13C2  0842               	movf	utoa@w^(0+128),w
 11839     13C3  00B7               	movwf	pad@p^(0+128)
 11840     13C4  319F  27AB  3193   	fcall	_pad
 11841     13C7  0021               	movlb	1	; select bank1
 11842     13C8  0835               	movf	(?_pad+1)^(0+128),w
 11843     13C9  00BD               	movwf	(?_utoa+1)^(0+128)
 11844     13CA  0834               	movf	?_pad^(0+128),w
 11845     13CB  00BC               	movwf	?_utoa^(0+128)
 11846     13CC                     l1749:
 11847     13CC  0008               	return
 11848     13CD                     __end_of_utoa:
 11849                           
 11850                           	psect	text20
 11851     1E1A                     __ptext20:	
 11852 ;; *************** function ___lwmod *****************
 11853 ;; Defined at:
 11854 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;  divisor         2    0[BANK1 ] unsigned int 
 11857 ;;  dividend        2    2[BANK1 ] unsigned int 
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;  counter         1    4[BANK1 ] unsigned char 
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  2    0[BANK1 ] unsigned int 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2, status,0
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11869 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;Total ram usage:        5 bytes
 11874 ;; Hardware stack levels used: 1
 11875 ;; Hardware stack levels required when called: 5
 11876 ;; This function calls:
 11877 ;;		Nothing
 11878 ;; This function is called by:
 11879 ;;		_utoa
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883     1E1A                     ___lwmod:	
 11884                           ;psect for function ___lwmod
 11885                           
 11886     1E1A                     l4416:	
 11887                           ;incstack = 0
 11888                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11889                           
 11890     1E1A  0021               	movlb	1	; select bank1
 11891     1E1B  0820               	movf	___lwmod@divisor^(0+128),w
 11892     1E1C  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 11893     1E1D  1903               	btfsc	3,2
 11894     1E1E  2E20               	goto	u4311
 11895     1E1F  2E21               	goto	u4310
 11896     1E20                     u4311:
 11897     1E20  2E48               	goto	l4434
 11898     1E21                     u4310:
 11899     1E21                     l4418:
 11900     1E21  3001               	movlw	1
 11901     1E22  00A4               	movwf	___lwmod@counter^(0+128)
 11902     1E23  2E2B               	goto	l4424
 11903     1E24                     l4420:
 11904     1E24  3001               	movlw	1
 11905     1E25                     u4325:
 11906     1E25  35A0               	lslf	___lwmod@divisor^(0+128),f
 11907     1E26  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 11908     1E27  0B89               	decfsz	9,f
 11909     1E28  2E25               	goto	u4325
 11910     1E29                     l4422:
 11911     1E29  3001               	movlw	1
 11912     1E2A  07A4               	addwf	___lwmod@counter^(0+128),f
 11913     1E2B                     l4424:
 11914     1E2B  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 11915     1E2C  2E2E               	goto	u4331
 11916     1E2D  2E2F               	goto	u4330
 11917     1E2E                     u4331:
 11918     1E2E  2E24               	goto	l4420
 11919     1E2F                     u4330:
 11920     1E2F                     l4426:
 11921     1E2F  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 11922     1E30  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 11923     1E31  1D03               	skipz
 11924     1E32  2E35               	goto	u4345
 11925     1E33  0820               	movf	___lwmod@divisor^(0+128),w
 11926     1E34  0222               	subwf	___lwmod@dividend^(0+128),w
 11927     1E35                     u4345:
 11928     1E35  1C03               	skipc
 11929     1E36  2E38               	goto	u4341
 11930     1E37  2E39               	goto	u4340
 11931     1E38                     u4341:
 11932     1E38  2E3D               	goto	l4430
 11933     1E39                     u4340:
 11934     1E39                     l4428:
 11935     1E39  0820               	movf	___lwmod@divisor^(0+128),w
 11936     1E3A  02A2               	subwf	___lwmod@dividend^(0+128),f
 11937     1E3B  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 11938     1E3C  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 11939     1E3D                     l4430:
 11940     1E3D  3001               	movlw	1
 11941     1E3E                     u4355:
 11942     1E3E  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 11943     1E3F  0CA0               	rrf	___lwmod@divisor^(0+128),f
 11944     1E40  0B89               	decfsz	9,f
 11945     1E41  2E3E               	goto	u4355
 11946     1E42                     l4432:
 11947     1E42  3001               	movlw	1
 11948     1E43  02A4               	subwf	___lwmod@counter^(0+128),f
 11949     1E44  1D03               	btfss	3,2
 11950     1E45  2E47               	goto	u4361
 11951     1E46  2E48               	goto	u4360
 11952     1E47                     u4361:
 11953     1E47  2E2F               	goto	l4426
 11954     1E48                     u4360:
 11955     1E48                     l4434:
 11956     1E48  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 11957     1E49  00A1               	movwf	(?___lwmod+1)^(0+128)
 11958     1E4A  0822               	movf	___lwmod@dividend^(0+128),w
 11959     1E4B  00A0               	movwf	?___lwmod^(0+128)
 11960     1E4C                     l1505:
 11961     1E4C  0008               	return
 11962     1E4D                     __end_of___lwmod:
 11963                           
 11964                           	psect	text21
 11965     1000                     __ptext21:	
 11966 ;; *************** function ___lwdiv *****************
 11967 ;; Defined at:
 11968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;  divisor         2    0[BANK1 ] unsigned int 
 11971 ;;  dividend        2    2[BANK1 ] unsigned int 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;  quotient        2    4[BANK1 ] unsigned int 
 11974 ;;  counter         1    6[BANK1 ] unsigned char 
 11975 ;; Return value:  Size  Location     Type
 11976 ;;                  2    0[BANK1 ] unsigned int 
 11977 ;; Registers used:
 11978 ;;		wreg, status,2, status,0
 11979 ;; Tracked objects:
 11980 ;;		On entry : 0/0
 11981 ;;		On exit  : 0/0
 11982 ;;		Unchanged: 0/0
 11983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11984 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;Total ram usage:        7 bytes
 11989 ;; Hardware stack levels used: 1
 11990 ;; Hardware stack levels required when called: 5
 11991 ;; This function calls:
 11992 ;;		Nothing
 11993 ;; This function is called by:
 11994 ;;		_utoa
 11995 ;;		_dutycycle_led_strip
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999     1000                     ___lwdiv:	
 12000                           ;psect for function ___lwdiv
 12001                           
 12002     1000                     l4390:	
 12003                           ;incstack = 0
 12004                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12005                           
 12006     1000  0021               	movlb	1	; select bank1
 12007     1001  01A4               	clrf	___lwdiv@quotient^(0+128)
 12008     1002  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 12009     1003                     l4392:
 12010     1003  0820               	movf	___lwdiv@divisor^(0+128),w
 12011     1004  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 12012     1005  1903               	btfsc	3,2
 12013     1006  2808               	goto	u4241
 12014     1007  2809               	goto	u4240
 12015     1008                     u4241:
 12016     1008  2836               	goto	l4412
 12017     1009                     u4240:
 12018     1009                     l4394:
 12019     1009  3001               	movlw	1
 12020     100A  00A6               	movwf	___lwdiv@counter^(0+128)
 12021     100B  2813               	goto	l4400
 12022     100C                     l4396:
 12023     100C  3001               	movlw	1
 12024     100D                     u4255:
 12025     100D  35A0               	lslf	___lwdiv@divisor^(0+128),f
 12026     100E  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 12027     100F  0B89               	decfsz	9,f
 12028     1010  280D               	goto	u4255
 12029     1011                     l4398:
 12030     1011  3001               	movlw	1
 12031     1012  07A6               	addwf	___lwdiv@counter^(0+128),f
 12032     1013                     l4400:
 12033     1013  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
 12034     1014  2816               	goto	u4261
 12035     1015  2817               	goto	u4260
 12036     1016                     u4261:
 12037     1016  280C               	goto	l4396
 12038     1017                     u4260:
 12039     1017                     l4402:
 12040     1017  3001               	movlw	1
 12041     1018                     u4275:
 12042     1018  35A4               	lslf	___lwdiv@quotient^(0+128),f
 12043     1019  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 12044     101A  0B89               	decfsz	9,f
 12045     101B  2818               	goto	u4275
 12046     101C  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 12047     101D  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 12048     101E  1D03               	skipz
 12049     101F  2822               	goto	u4285
 12050     1020  0820               	movf	___lwdiv@divisor^(0+128),w
 12051     1021  0222               	subwf	___lwdiv@dividend^(0+128),w
 12052     1022                     u4285:
 12053     1022  1C03               	skipc
 12054     1023  2825               	goto	u4281
 12055     1024  2826               	goto	u4280
 12056     1025                     u4281:
 12057     1025  282B               	goto	l4408
 12058     1026                     u4280:
 12059     1026                     l4404:
 12060     1026  0820               	movf	___lwdiv@divisor^(0+128),w
 12061     1027  02A2               	subwf	___lwdiv@dividend^(0+128),f
 12062     1028  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 12063     1029  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 12064     102A                     l4406:
 12065     102A  1424               	bsf	___lwdiv@quotient^(0+128),0
 12066     102B                     l4408:
 12067     102B  3001               	movlw	1
 12068     102C                     u4295:
 12069     102C  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 12070     102D  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 12071     102E  0B89               	decfsz	9,f
 12072     102F  282C               	goto	u4295
 12073     1030                     l4410:
 12074     1030  3001               	movlw	1
 12075     1031  02A6               	subwf	___lwdiv@counter^(0+128),f
 12076     1032  1D03               	btfss	3,2
 12077     1033  2835               	goto	u4301
 12078     1034  2836               	goto	u4300
 12079     1035                     u4301:
 12080     1035  2817               	goto	l4402
 12081     1036                     u4300:
 12082     1036                     l4412:
 12083     1036  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 12084     1037  00A1               	movwf	(?___lwdiv+1)^(0+128)
 12085     1038  0824               	movf	___lwdiv@quotient^(0+128),w
 12086     1039  00A0               	movwf	?___lwdiv^(0+128)
 12087     103A                     l1495:
 12088     103A  0008               	return
 12089     103B                     __end_of___lwdiv:
 12090                           
 12091                           	psect	text22
 12092     114B                     __ptext22:	
 12093 ;; *************** function _read_prec_or_width *****************
 12094 ;; Defined at:
 12095 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 12098 ;;		 -> vfprintf@cfmt(2), 
 12099 ;;  ap              2    7[BANK1 ] PTR PTR void [1]
 12100 ;;		 -> printf@ap(1), sprintf@ap(1), 
 12101 ;; Auto vars:     Size  Location     Type
 12102 ;;  c               1   12[BANK1 ] unsigned char 
 12103 ;;  n               2   13[BANK1 ] int 
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  2    6[BANK1 ] int 
 12106 ;; Registers used:
 12107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12113 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12116 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 12117 ;;Total ram usage:        9 bytes
 12118 ;; Hardware stack levels used: 1
 12119 ;; Hardware stack levels required when called: 6
 12120 ;; This function calls:
 12121 ;;		___wmul
 12122 ;; This function is called by:
 12123 ;;		_vfpfcnvrt
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127     114B                     _read_prec_or_width:	
 12128                           ;psect for function _read_prec_or_width
 12129                           
 12130     114B                     l4556:	
 12131                           ;incstack = 0
 12132                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12133                           
 12134                           
 12135                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 12136     114B  0021               	movlb	1	; select bank1
 12137     114C  01AD               	clrf	read_prec_or_width@n^(0+128)
 12138     114D  01AE               	clrf	(read_prec_or_width@n+1)^(0+128)
 12139     114E                     l4558:
 12140                           
 12141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 12142     114E  0826               	movf	read_prec_or_width@fmt^(0+128),w
 12143     114F  0086               	movwf	6
 12144     1150  0187               	clrf	7
 12145     1151  3F40               	moviw [0]fsr1
 12146     1152  00A9               	movwf	??_read_prec_or_width^(0+128)
 12147     1153  3F41               	moviw [1]fsr1
 12148     1154  00AA               	movwf	(??_read_prec_or_width^(0+128)+1)
 12149     1155  0829               	movf	??_read_prec_or_width^(0+128),w
 12150     1156  0084               	movwf	4
 12151     1157  082A               	movf	(??_read_prec_or_width+1)^(0+128),w
 12152     1158  0085               	movwf	5
 12153     1159  0012               	moviw fsr0++
 12154     115A  3A2A               	xorlw	42
 12155     115B  1D03               	btfss	3,2
 12156     115C  295E               	goto	u4601
 12157     115D  295F               	goto	u4600
 12158     115E                     u4601:
 12159     115E  298F               	goto	l4568
 12160     115F                     u4600:
 12161     115F                     l4560:
 12162                           
 12163                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 12164     115F  0826               	movf	read_prec_or_width@fmt^(0+128),w
 12165     1160  0086               	movwf	6
 12166     1161  0187               	clrf	7
 12167     1162  3001               	movlw	1
 12168     1163  0781               	addwf	1,f
 12169     1164  3141               	addfsr 1,1
 12170     1165  1803               	skipnc
 12171     1166  0A81               	incf	1,f
 12172     1167                     l4562:
 12173                           
 12174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 12175     1167  0827               	movf	read_prec_or_width@ap^(0+128),w
 12176     1168  0086               	movwf	6
 12177     1169  0828               	movf	(read_prec_or_width@ap+1)^(0+128),w
 12178     116A  0087               	movwf	7
 12179     116B  0801               	movf	1,w
 12180     116C  0084               	movwf	4
 12181     116D  0185               	clrf	5
 12182     116E  3002               	movlw	2
 12183     116F  0781               	addwf	1,f
 12184     1170  3F00               	moviw [0]fsr0
 12185     1171  00AD               	movwf	read_prec_or_width@n^(0+128)
 12186     1172  3F01               	moviw [1]fsr0
 12187     1173  00AE               	movwf	(read_prec_or_width@n+1)^(0+128)
 12188                           
 12189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 12190     1174  29A3               	goto	l4570
 12191     1175                     l4564:
 12192                           
 12193                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 12194     1175  082E               	movf	(read_prec_or_width@n+1)^(0+128),w
 12195     1176  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12196     1177  082D               	movf	read_prec_or_width@n^(0+128),w
 12197     1178  00A0               	movwf	___wmul@multiplier^(0+128)
 12198     1179  300A               	movlw	10
 12199     117A  00A2               	movwf	___wmul@multiplicand^(0+128)
 12200     117B  3000               	movlw	0
 12201     117C  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12202     117D  319C  24B4  3191   	fcall	___wmul
 12203     1180  0021               	movlb	1	; select bank1
 12204     1181  082C               	movf	read_prec_or_width@c^(0+128),w
 12205     1182  0720               	addwf	?___wmul^(0+128),w
 12206     1183  00AD               	movwf	read_prec_or_width@n^(0+128)
 12207     1184  3000               	movlw	0
 12208     1185  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12209     1186  00AE               	movwf	(read_prec_or_width@n+1)^(0+128)
 12210     1187                     l4566:
 12211                           
 12212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 12213     1187  0826               	movf	read_prec_or_width@fmt^(0+128),w
 12214     1188  0086               	movwf	6
 12215     1189  0187               	clrf	7
 12216     118A  3001               	movlw	1
 12217     118B  0781               	addwf	1,f
 12218     118C  3141               	addfsr 1,1
 12219     118D  1803               	skipnc
 12220     118E  0A81               	incf	1,f
 12221     118F                     l4568:
 12222                           
 12223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 12224     118F  0826               	movf	read_prec_or_width@fmt^(0+128),w
 12225     1190  0086               	movwf	6
 12226     1191  0187               	clrf	7
 12227     1192  3F40               	moviw [0]fsr1
 12228     1193  00A9               	movwf	??_read_prec_or_width^(0+128)
 12229     1194  3F41               	moviw [1]fsr1
 12230     1195  00AA               	movwf	(??_read_prec_or_width^(0+128)+1)
 12231     1196  0829               	movf	??_read_prec_or_width^(0+128),w
 12232     1197  0084               	movwf	4
 12233     1198  082A               	movf	(??_read_prec_or_width+1)^(0+128),w
 12234     1199  0085               	movwf	5
 12235     119A  0800               	movf	0,w	;code access
 12236     119B  3ED0               	addlw	208
 12237     119C  00AC               	movwf	read_prec_or_width@c^(0+128)
 12238     119D  300A               	movlw	10
 12239     119E  022C               	subwf	read_prec_or_width@c^(0+128),w
 12240     119F  1C03               	skipc
 12241     11A0  29A2               	goto	u4611
 12242     11A1  29A3               	goto	u4610
 12243     11A2                     u4611:
 12244     11A2  2975               	goto	l4564
 12245     11A3                     u4610:
 12246     11A3                     l4570:
 12247                           
 12248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 12249     11A3  082E               	movf	(read_prec_or_width@n+1)^(0+128),w
 12250     11A4  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 12251     11A5  082D               	movf	read_prec_or_width@n^(0+128),w
 12252     11A6  00A6               	movwf	?_read_prec_or_width^(0+128)
 12253     11A7                     l1757:
 12254     11A7  0008               	return
 12255     11A8                     __end_of_read_prec_or_width:
 12256                           
 12257                           	psect	text23
 12258     08C9                     __ptext23:	
 12259 ;; *************** function _dtoa *****************
 12260 ;; Defined at:
 12261 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 12264 ;;		 -> sprintf@f(11), NULL(0), 
 12265 ;;  d               2   30[BANK1 ] int 
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  i               2   39[BANK1 ] int 
 12268 ;;  w               2   36[BANK1 ] int 
 12269 ;;  s               1   38[BANK1 ] unsigned char 
 12270 ;;  p               1   35[BANK1 ] _Bool 
 12271 ;; Return value:  Size  Location     Type
 12272 ;;                  2   28[BANK1 ] int 
 12273 ;; Registers used:
 12274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/0
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12280 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12281 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12282 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12283 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;Total ram usage:       13 bytes
 12285 ;; Hardware stack levels used: 1
 12286 ;; Hardware stack levels required when called: 10
 12287 ;; This function calls:
 12288 ;;		___awdiv
 12289 ;;		___awmod
 12290 ;;		_abs
 12291 ;;		_pad
 12292 ;; This function is called by:
 12293 ;;		_vfpfcnvrt
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297     08C9                     _dtoa:	
 12298                           ;psect for function _dtoa
 12299                           
 12300     08C9                     l4480:	
 12301                           ;incstack = 0
 12302                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12303                           
 12304                           
 12305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 520
      +                          :  _Bool p = 1;
 12306     08C9  3001               	movlw	1
 12307     08CA  0021               	movlb	1	; select bank1
 12308     08CB  00C3               	movwf	dtoa@p^(0+128)
 12309     08CC                     l4482:
 12310                           
 12311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 12312     08CC  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 12313     08CD  28CF               	goto	u4451
 12314     08CE  28D1               	goto	u4450
 12315     08CF                     u4451:
 12316     08CF  3001               	movlw	1
 12317     08D0  28D2               	goto	u4460
 12318     08D1                     u4450:
 12319     08D1  3000               	movlw	0
 12320     08D2                     u4460:
 12321     08D2  00C6               	movwf	dtoa@s^(0+128)
 12322                           
 12323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 12324     08D3  0020               	movlb	0	; select bank0
 12325     08D4  085B               	movf	_width+1,w
 12326     08D5  0021               	movlb	1	; select bank1
 12327     08D6  00C5               	movwf	(dtoa@w+1)^(0+128)
 12328     08D7  0020               	movlb	0	; select bank0
 12329     08D8  085A               	movf	_width,w
 12330     08D9  0021               	movlb	1	; select bank1
 12331     08DA  00C4               	movwf	dtoa@w^(0+128)
 12332     08DB                     l4484:
 12333                           
 12334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 12335     08DB  0846               	movf	dtoa@s^(0+128),w
 12336     08DC  1903               	btfsc	3,2
 12337     08DD  28DF               	goto	u4471
 12338     08DE  28E0               	goto	u4470
 12339     08DF                     u4471:
 12340     08DF  28F4               	goto	l1726
 12341     08E0                     u4470:
 12342     08E0                     l4486:
 12343                           
 12344                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 12345     08E0  30FF               	movlw	255
 12346     08E1  07C4               	addwf	dtoa@w^(0+128),f
 12347     08E2  30FF               	movlw	255
 12348     08E3  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 12349     08E4                     l4488:
 12350                           
 12351                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 12352     08E4  0846               	movf	dtoa@s^(0+128),w
 12353     08E5  1D03               	btfss	3,2
 12354     08E6  28E8               	goto	u4481
 12355     08E7  28E9               	goto	u4480
 12356     08E8                     u4481:
 12357     08E8  28EE               	goto	l4492
 12358     08E9                     u4480:
 12359     08E9                     l4490:
 12360     08E9  302B               	movlw	43
 12361     08EA  00C1               	movwf	_dtoa$2185^(0+128)
 12362     08EB  3000               	movlw	0
 12363     08EC  00C2               	movwf	(_dtoa$2185^(0+128)+1)
 12364     08ED  28F2               	goto	l1730
 12365     08EE                     l4492:
 12366     08EE  302D               	movlw	45
 12367     08EF  00C1               	movwf	_dtoa$2185^(0+128)
 12368     08F0  3000               	movlw	0
 12369     08F1  00C2               	movwf	(_dtoa$2185^(0+128)+1)
 12370     08F2                     l1730:
 12371     08F2  0841               	movf	_dtoa$2185^(0+128),w
 12372     08F3  00C6               	movwf	dtoa@s^(0+128)
 12373     08F4                     l1726:	
 12374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 12375                           
 12376                           
 12377                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 12378     08F4  301F               	movlw	31
 12379     08F5  00C7               	movwf	dtoa@i^(0+128)
 12380     08F6  3000               	movlw	0
 12381     08F7  00C8               	movwf	(dtoa@i^(0+128)+1)
 12382     08F8                     l4494:
 12383                           
 12384                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 12385     08F8  0024               	movlb	4	; select bank4
 12386     08F9  01BF               	clrf	(_dbuf^(0+512)+31)
 12387                           
 12388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12389     08FA  2931               	goto	l4506
 12390     08FB                     l4496:
 12391                           
 12392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 12393     08FB  30FF               	movlw	255
 12394     08FC  0021               	movlb	1	; select bank1
 12395     08FD  07C7               	addwf	dtoa@i^(0+128),f
 12396     08FE  30FF               	movlw	255
 12397     08FF  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 12398     0900                     l4498:
 12399                           
 12400                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 12401     0900  0847               	movf	dtoa@i^(0+128),w
 12402     0901  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12403     0902  0086               	movwf	6
 12404     0903  3002               	movlw	2	; select bank4/5
 12405     0904  0087               	movwf	7
 12406     0905  300A               	movlw	10
 12407     0906  00A0               	movwf	___awmod@divisor^(0+128)
 12408     0907  3000               	movlw	0
 12409     0908  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 12410     0909  083F               	movf	(dtoa@d+1)^(0+128),w
 12411     090A  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 12412     090B  083E               	movf	dtoa@d^(0+128),w
 12413     090C  00A2               	movwf	___awmod@dividend^(0+128)
 12414     090D  319F  2706  3188   	fcall	___awmod
 12415     0910  0021               	movlb	1	; select bank1
 12416     0911  0821               	movf	(?___awmod+1)^(0+128),w
 12417     0912  00A7               	movwf	(abs@a+1)^(0+128)
 12418     0913  0820               	movf	?___awmod^(0+128),w
 12419     0914  00A6               	movwf	abs@a^(0+128)
 12420     0915  319B  23EF  3188   	fcall	_abs
 12421     0918  0021               	movlb	1	; select bank1
 12422     0919  0826               	movf	?_abs^(0+128),w
 12423     091A  3E30               	addlw	48
 12424     091B  0081               	movwf	1
 12425     091C                     l4500:
 12426                           
 12427                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 12428     091C  01C3               	clrf	dtoa@p^(0+128)
 12429     091D                     l4502:
 12430                           
 12431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 12432     091D  30FF               	movlw	255
 12433     091E  07C4               	addwf	dtoa@w^(0+128),f
 12434     091F  30FF               	movlw	255
 12435     0920  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 12436     0921                     l4504:
 12437                           
 12438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 12439     0921  300A               	movlw	10
 12440     0922  00A0               	movwf	___awdiv@divisor^(0+128)
 12441     0923  3000               	movlw	0
 12442     0924  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 12443     0925  083F               	movf	(dtoa@d+1)^(0+128),w
 12444     0926  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 12445     0927  083E               	movf	dtoa@d^(0+128),w
 12446     0928  00A2               	movwf	___awdiv@dividend^(0+128)
 12447     0929  3190  20EF  3188   	fcall	___awdiv
 12448     092C  0021               	movlb	1	; select bank1
 12449     092D  0821               	movf	(?___awdiv+1)^(0+128),w
 12450     092E  00BF               	movwf	(dtoa@d+1)^(0+128)
 12451     092F  0820               	movf	?___awdiv^(0+128),w
 12452     0930  00BE               	movwf	dtoa@d^(0+128)
 12453     0931                     l4506:
 12454                           
 12455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12456     0931  0021               	movlb	1	; select bank1
 12457     0932  0848               	movf	(dtoa@i+1)^(0+128),w
 12458     0933  3A80               	xorlw	128
 12459     0934  00C0               	movwf	??_dtoa^(0+128)
 12460     0935  3080               	movlw	128
 12461     0936  0240               	subwf	??_dtoa^(0+128),w
 12462     0937  1D03               	skipz
 12463     0938  293B               	goto	u4495
 12464     0939  3001               	movlw	1
 12465     093A  0247               	subwf	dtoa@i^(0+128),w
 12466     093B                     u4495:
 12467     093B  1C03               	skipc
 12468     093C  293E               	goto	u4491
 12469     093D  293F               	goto	u4490
 12470     093E                     u4491:
 12471     093E  295D               	goto	l4516
 12472     093F                     u4490:
 12473     093F                     l4508:
 12474     093F  0021               	movlb	1	; select bank1
 12475     0940  083E               	movf	dtoa@d^(0+128),w
 12476     0941  043F               	iorwf	(dtoa@d+1)^(0+128),w
 12477     0942  1D03               	btfss	3,2
 12478     0943  2945               	goto	u4501
 12479     0944  2946               	goto	u4500
 12480     0945                     u4501:
 12481     0945  28FB               	goto	l4496
 12482     0946                     u4500:
 12483     0946                     l4510:
 12484     0946  0843               	movf	dtoa@p^(0+128),w
 12485     0947  1D03               	btfss	3,2
 12486     0948  294A               	goto	u4511
 12487     0949  294B               	goto	u4510
 12488     094A                     u4511:
 12489     094A  28FB               	goto	l4496
 12490     094B                     u4510:
 12491     094B                     l4512:
 12492     094B  0845               	movf	(dtoa@w+1)^(0+128),w
 12493     094C  3A80               	xorlw	128
 12494     094D  00C0               	movwf	??_dtoa^(0+128)
 12495     094E  3080               	movlw	128
 12496     094F  0240               	subwf	??_dtoa^(0+128),w
 12497     0950  1D03               	skipz
 12498     0951  2954               	goto	u4525
 12499     0952  3001               	movlw	1
 12500     0953  0244               	subwf	dtoa@w^(0+128),w
 12501     0954                     u4525:
 12502     0954  1C03               	skipc
 12503     0955  2957               	goto	u4521
 12504     0956  2958               	goto	u4520
 12505     0957                     u4521:
 12506     0957  295D               	goto	l4516
 12507     0958                     u4520:
 12508     0958                     l4514:
 12509     0958  0020               	movlb	0	; select bank0
 12510     0959  18E4               	btfsc	_flags,1
 12511     095A  295C               	goto	u4531
 12512     095B  295D               	goto	u4530
 12513     095C                     u4531:
 12514     095C  28FB               	goto	l4496
 12515     095D                     u4530:
 12516     095D                     l4516:
 12517                           
 12518                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 12519     095D  0021               	movlb	1	; select bank1
 12520     095E  0846               	movf	dtoa@s^(0+128),w
 12521     095F  1903               	btfsc	3,2
 12522     0960  2962               	goto	u4541
 12523     0961  2963               	goto	u4540
 12524     0962                     u4541:
 12525     0962  296E               	goto	l4522
 12526     0963                     u4540:
 12527     0963                     l4518:
 12528                           
 12529                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 12530     0963  30FF               	movlw	255
 12531     0964  07C7               	addwf	dtoa@i^(0+128),f
 12532     0965  30FF               	movlw	255
 12533     0966  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 12534     0967                     l4520:
 12535                           
 12536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 12537     0967  0847               	movf	dtoa@i^(0+128),w
 12538     0968  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12539     0969  0086               	movwf	6
 12540     096A  3002               	movlw	2	; select bank4/5
 12541     096B  0087               	movwf	7
 12542     096C  0846               	movf	dtoa@s^(0+128),w
 12543     096D  0081               	movwf	1
 12544     096E                     l4522:
 12545                           
 12546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 12547     096E  083D               	movf	(dtoa@fp+1)^(0+128),w
 12548     096F  00B5               	movwf	(pad@fp+1)^(0+128)
 12549     0970  083C               	movf	dtoa@fp^(0+128),w
 12550     0971  00B4               	movwf	pad@fp^(0+128)
 12551     0972  0847               	movf	dtoa@i^(0+128),w
 12552     0973  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12553     0974  00B6               	movwf	pad@buf^(0+128)
 12554     0975  0845               	movf	(dtoa@w+1)^(0+128),w
 12555     0976  00B8               	movwf	(pad@p+1)^(0+128)
 12556     0977  0844               	movf	dtoa@w^(0+128),w
 12557     0978  00B7               	movwf	pad@p^(0+128)
 12558     0979  319F  27AB  3188   	fcall	_pad
 12559     097C  0021               	movlb	1	; select bank1
 12560     097D  0835               	movf	(?_pad+1)^(0+128),w
 12561     097E  00BD               	movwf	(?_dtoa+1)^(0+128)
 12562     097F  0834               	movf	?_pad^(0+128),w
 12563     0980  00BC               	movwf	?_dtoa^(0+128)
 12564     0981                     l1739:
 12565     0981  0008               	return
 12566     0982                     __end_of_dtoa:
 12567                           
 12568                           	psect	text24
 12569     1FAB                     __ptext24:	
 12570 ;; *************** function _pad *****************
 12571 ;; Defined at:
 12572 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 12575 ;;		 -> sprintf@f(11), NULL(0), 
 12576 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 12577 ;;		 -> dbuf(32), 
 12578 ;;  p               2   23[BANK1 ] int 
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;  i               2   26[BANK1 ] int 
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  2   20[BANK1 ] int 
 12583 ;; Registers used:
 12584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12590 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;Total ram usage:        8 bytes
 12595 ;; Hardware stack levels used: 1
 12596 ;; Hardware stack levels required when called: 9
 12597 ;; This function calls:
 12598 ;;		_fputc
 12599 ;;		_fputs
 12600 ;;		_strlen
 12601 ;; This function is called by:
 12602 ;;		_dtoa
 12603 ;;		_utoa
 12604 ;; This function uses a non-reentrant model
 12605 ;;
 12606                           
 12607     1FAB                     _pad:	
 12608                           ;psect for function _pad
 12609                           
 12610     1FAB                     l4438:	
 12611                           ;incstack = 0
 12612                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12613                           
 12614                           
 12615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 12616     1FAB  0020               	movlb	0	; select bank0
 12617     1FAC  1C64               	btfss	_flags,0
 12618     1FAD  2FAF               	goto	u4371
 12619     1FAE  2FB0               	goto	u4370
 12620     1FAF                     u4371:
 12621     1FAF  2FBA               	goto	l4442
 12622     1FB0                     u4370:
 12623     1FB0                     l4440:
 12624                           
 12625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 12626     1FB0  0021               	movlb	1	; select bank1
 12627     1FB1  0836               	movf	pad@buf^(0+128),w
 12628     1FB2  00AC               	movwf	fputs@s^(0+128)
 12629     1FB3  0835               	movf	(pad@fp+1)^(0+128),w
 12630     1FB4  00AE               	movwf	(fputs@fp+1)^(0+128)
 12631     1FB5  0834               	movf	pad@fp^(0+128),w
 12632     1FB6  00AD               	movwf	fputs@fp^(0+128)
 12633     1FB7  319D  257D  319F   	fcall	_fputs
 12634     1FBA                     l4442:
 12635                           
 12636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 12637     1FBA  0021               	movlb	1	; select bank1
 12638     1FBB  1FB8               	btfss	(pad@p+1)^(0+128),7
 12639     1FBC  2FBE               	goto	u4381
 12640     1FBD  2FBF               	goto	u4380
 12641     1FBE                     u4381:
 12642     1FBE  2FC1               	goto	l1718
 12643     1FBF                     u4380:
 12644     1FBF                     l4444:
 12645                           
 12646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12647     1FBF  01B7               	clrf	pad@p^(0+128)
 12648     1FC0  01B8               	clrf	(pad@p+1)^(0+128)
 12649     1FC1                     l1718:	
 12650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 12651                           
 12652                           
 12653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12654     1FC1  01BA               	clrf	pad@i^(0+128)
 12655     1FC2  01BB               	clrf	(pad@i+1)^(0+128)
 12656                           
 12657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12658     1FC3  2FD5               	goto	l4450
 12659     1FC4                     l4446:
 12660                           
 12661                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 12662     1FC4  3020               	movlw	32
 12663     1FC5  0021               	movlb	1	; select bank1
 12664     1FC6  00A3               	movwf	fputc@c^(0+128)
 12665     1FC7  3000               	movlw	0
 12666     1FC8  00A4               	movwf	(fputc@c^(0+128)+1)
 12667     1FC9  0835               	movf	(pad@fp+1)^(0+128),w
 12668     1FCA  00A6               	movwf	(fputc@fp+1)^(0+128)
 12669     1FCB  0834               	movf	pad@fp^(0+128),w
 12670     1FCC  00A5               	movwf	fputc@fp^(0+128)
 12671     1FCD  3191  21A8  319F   	fcall	_fputc
 12672     1FD0                     l4448:
 12673                           
 12674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12675     1FD0  3001               	movlw	1
 12676     1FD1  0021               	movlb	1	; select bank1
 12677     1FD2  07BA               	addwf	pad@i^(0+128),f
 12678     1FD3  3000               	movlw	0
 12679     1FD4  3DBB               	addwfc	(pad@i+1)^(0+128),f
 12680     1FD5                     l4450:
 12681                           
 12682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12683     1FD5  083B               	movf	(pad@i+1)^(0+128),w
 12684     1FD6  3A80               	xorlw	128
 12685     1FD7  00B9               	movwf	??_pad^(0+128)
 12686     1FD8  0838               	movf	(pad@p+1)^(0+128),w
 12687     1FD9  3A80               	xorlw	128
 12688     1FDA  0239               	subwf	??_pad^(0+128),w
 12689     1FDB  1D03               	skipz
 12690     1FDC  2FDF               	goto	u4395
 12691     1FDD  0837               	movf	pad@p^(0+128),w
 12692     1FDE  023A               	subwf	pad@i^(0+128),w
 12693     1FDF                     u4395:
 12694     1FDF  1C03               	skipc
 12695     1FE0  2FE2               	goto	u4391
 12696     1FE1  2FE3               	goto	u4390
 12697     1FE2                     u4391:
 12698     1FE2  2FC4               	goto	l4446
 12699     1FE3                     u4390:
 12700     1FE3                     l1721:
 12701                           
 12702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 12703     1FE3  0020               	movlb	0	; select bank0
 12704     1FE4  1864               	btfsc	_flags,0
 12705     1FE5  2FE7               	goto	u4401
 12706     1FE6  2FE8               	goto	u4400
 12707     1FE7                     u4401:
 12708     1FE7  2FF2               	goto	l4454
 12709     1FE8                     u4400:
 12710     1FE8                     l4452:
 12711                           
 12712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 12713     1FE8  0021               	movlb	1	; select bank1
 12714     1FE9  0836               	movf	pad@buf^(0+128),w
 12715     1FEA  00AC               	movwf	fputs@s^(0+128)
 12716     1FEB  0835               	movf	(pad@fp+1)^(0+128),w
 12717     1FEC  00AE               	movwf	(fputs@fp+1)^(0+128)
 12718     1FED  0834               	movf	pad@fp^(0+128),w
 12719     1FEE  00AD               	movwf	fputs@fp^(0+128)
 12720     1FEF  319D  257D  319F   	fcall	_fputs
 12721     1FF2                     l4454:
 12722                           
 12723                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 12724     1FF2  0021               	movlb	1	; select bank1
 12725     1FF3  0836               	movf	pad@buf^(0+128),w
 12726     1FF4  00A0               	movwf	strlen@s^(0+128)
 12727     1FF5  319C  2452  319F   	fcall	_strlen
 12728     1FF8  0021               	movlb	1	; select bank1
 12729     1FF9  0837               	movf	pad@p^(0+128),w
 12730     1FFA  0720               	addwf	?_strlen^(0+128),w
 12731     1FFB  00B4               	movwf	?_pad^(0+128)
 12732     1FFC  0838               	movf	(pad@p+1)^(0+128),w
 12733     1FFD  3D21               	addwfc	(?_strlen+1)^(0+128),w
 12734     1FFE  00B5               	movwf	(?_pad+1)^(0+128)
 12735     1FFF                     l1723:
 12736     1FFF  0008               	return
 12737     2000                     __end_of_pad:
 12738                           
 12739                           	psect	text25
 12740     1C52                     __ptext25:	
 12741 ;; *************** function _strlen *****************
 12742 ;; Defined at:
 12743 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  s               1    0[BANK1 ] PTR const unsigned char 
 12746 ;;		 -> dbuf(32), 
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;  a               1    2[BANK1 ] PTR const unsigned char 
 12749 ;;		 -> dbuf(32), 
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  2    0[BANK1 ] unsigned int 
 12752 ;; Registers used:
 12753 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12759 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;Total ram usage:        3 bytes
 12764 ;; Hardware stack levels used: 1
 12765 ;; Hardware stack levels required when called: 5
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_pad
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773     1C52                     _strlen:	
 12774                           ;psect for function _strlen
 12775                           
 12776     1C52                     l4284:	
 12777                           ;incstack = 0
 12778                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12779                           
 12780     1C52  0021               	movlb	1	; select bank1
 12781     1C53  0820               	movf	strlen@s^(0+128),w
 12782     1C54  00A2               	movwf	strlen@a^(0+128)
 12783     1C55  2C58               	goto	l4288
 12784     1C56                     l4286:
 12785     1C56  3001               	movlw	1
 12786     1C57  07A0               	addwf	strlen@s^(0+128),f
 12787     1C58                     l4288:
 12788     1C58  0820               	movf	strlen@s^(0+128),w
 12789     1C59  0086               	movwf	6
 12790     1C5A  3002               	movlw	2	; select bank4/5
 12791     1C5B  0087               	movwf	7
 12792     1C5C  0801               	movf	1,w
 12793     1C5D  1D03               	btfss	3,2
 12794     1C5E  2C60               	goto	u4001
 12795     1C5F  2C61               	goto	u4000
 12796     1C60                     u4001:
 12797     1C60  2C56               	goto	l4286
 12798     1C61                     u4000:
 12799     1C61                     l4290:
 12800     1C61  0822               	movf	strlen@a^(0+128),w
 12801     1C62  0220               	subwf	strlen@s^(0+128),w
 12802     1C63  00A0               	movwf	?_strlen^(0+128)
 12803     1C64  01A1               	clrf	(?_strlen+1)^(0+128)
 12804     1C65  1BA0               	btfsc	?_strlen^(0+128),7
 12805     1C66  03A1               	decf	(?_strlen+1)^(0+128),f
 12806     1C67                     l1826:
 12807     1C67  0008               	return
 12808     1C68                     __end_of_strlen:
 12809                           
 12810                           	psect	text26
 12811     1D7D                     __ptext26:	
 12812 ;; *************** function _fputs *****************
 12813 ;; Defined at:
 12814 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 12817 ;;		 -> dbuf(32), 
 12818 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 12819 ;;		 -> sprintf@f(11), NULL(0), 
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;  i               2   18[BANK1 ] int 
 12822 ;;  c               1   17[BANK1 ] unsigned char 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  2   12[BANK1 ] int 
 12825 ;; Registers used:
 12826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12832 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;Total ram usage:        8 bytes
 12837 ;; Hardware stack levels used: 1
 12838 ;; Hardware stack levels required when called: 8
 12839 ;; This function calls:
 12840 ;;		_fputc
 12841 ;; This function is called by:
 12842 ;;		_pad
 12843 ;; This function uses a non-reentrant model
 12844 ;;
 12845                           
 12846     1D7D                     _fputs:	
 12847                           ;psect for function _fputs
 12848                           
 12849     1D7D                     l4276:	
 12850                           ;incstack = 0
 12851                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12852                           
 12853     1D7D  0021               	movlb	1	; select bank1
 12854     1D7E  01B2               	clrf	fputs@i^(0+128)
 12855     1D7F  01B3               	clrf	(fputs@i+1)^(0+128)
 12856     1D80  2D94               	goto	l4282
 12857     1D81                     l4278:
 12858     1D81  0831               	movf	fputs@c^(0+128),w
 12859     1D82  00AF               	movwf	??_fputs^(0+128)
 12860     1D83  01B0               	clrf	(??_fputs^(0+128)+1)
 12861     1D84  082F               	movf	??_fputs^(0+128),w
 12862     1D85  00A3               	movwf	fputc@c^(0+128)
 12863     1D86  0830               	movf	(??_fputs+1)^(0+128),w
 12864     1D87  00A4               	movwf	(fputc@c+1)^(0+128)
 12865     1D88  082E               	movf	(fputs@fp+1)^(0+128),w
 12866     1D89  00A6               	movwf	(fputc@fp+1)^(0+128)
 12867     1D8A  082D               	movf	fputs@fp^(0+128),w
 12868     1D8B  00A5               	movwf	fputc@fp^(0+128)
 12869     1D8C  3191  21A8  319D   	fcall	_fputc
 12870     1D8F                     l4280:
 12871     1D8F  3001               	movlw	1
 12872     1D90  0021               	movlb	1	; select bank1
 12873     1D91  07B2               	addwf	fputs@i^(0+128),f
 12874     1D92  3000               	movlw	0
 12875     1D93  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 12876     1D94                     l4282:
 12877     1D94  082C               	movf	fputs@s^(0+128),w
 12878     1D95  0732               	addwf	fputs@i^(0+128),w
 12879     1D96  0086               	movwf	6
 12880     1D97  3002               	movlw	2	; select bank4/5
 12881     1D98  0087               	movwf	7
 12882     1D99  0801               	movf	1,w
 12883     1D9A  00B1               	movwf	fputs@c^(0+128)
 12884     1D9B  0831               	movf	fputs@c^(0+128),w
 12885     1D9C  1D03               	btfss	3,2
 12886     1D9D  2D9F               	goto	u3991
 12887     1D9E  2DA0               	goto	u3990
 12888     1D9F                     u3991:
 12889     1D9F  2D81               	goto	l4278
 12890     1DA0                     u3990:
 12891     1DA0                     l1813:
 12892     1DA0  0008               	return
 12893     1DA1                     __end_of_fputs:
 12894                           
 12895                           	psect	text27
 12896     11A8                     __ptext27:	
 12897 ;; *************** function _fputc *****************
 12898 ;; Defined at:
 12899 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;  c               2    3[BANK1 ] int 
 12902 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 12903 ;;		 -> sprintf@f(11), NULL(0), 
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  2    3[BANK1 ] int 
 12908 ;; Registers used:
 12909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12915 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;Total ram usage:        9 bytes
 12920 ;; Hardware stack levels used: 1
 12921 ;; Hardware stack levels required when called: 7
 12922 ;; This function calls:
 12923 ;;		_putch
 12924 ;; This function is called by:
 12925 ;;		_pad
 12926 ;;		_vfpfcnvrt
 12927 ;;		_fputs
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931     11A8                     _fputc:	
 12932                           ;psect for function _fputc
 12933                           
 12934     11A8                     l4260:	
 12935                           ;incstack = 0
 12936                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12937                           
 12938     11A8  0021               	movlb	1	; select bank1
 12939     11A9  0825               	movf	fputc@fp^(0+128),w
 12940     11AA  0426               	iorwf	(fputc@fp+1)^(0+128),w
 12941     11AB  1903               	btfsc	3,2
 12942     11AC  29AE               	goto	u3951
 12943     11AD  29AF               	goto	u3950
 12944     11AE                     u3951:
 12945     11AE  29B5               	goto	l4264
 12946     11AF                     u3950:
 12947     11AF                     l4262:
 12948     11AF  0825               	movf	fputc@fp^(0+128),w
 12949     11B0  0426               	iorwf	(fputc@fp+1)^(0+128),w
 12950     11B1  1D03               	btfss	3,2
 12951     11B2  29B4               	goto	u3961
 12952     11B3  29B5               	goto	u3960
 12953     11B4                     u3961:
 12954     11B4  29BA               	goto	l4266
 12955     11B5                     u3960:
 12956     11B5                     l4264:
 12957     11B5  0823               	movf	fputc@c^(0+128),w
 12958     11B6  319B  23DE  3191   	fcall	_putch
 12959     11B9  2A05               	goto	l1805
 12960     11BA                     l4266:
 12961     11BA  0825               	movf	fputc@fp^(0+128),w
 12962     11BB  0086               	movwf	6
 12963     11BC  0826               	movf	(fputc@fp+1)^(0+128),w
 12964     11BD  0087               	movwf	7
 12965     11BE  3149               	addfsr 1,9
 12966     11BF  0016               	moviw fsr1++
 12967     11C0  0401               	iorwf	1,w
 12968     11C1  1903               	btfsc	3,2
 12969     11C2  29C4               	goto	u3971
 12970     11C3  29C5               	goto	u3970
 12971     11C4                     u3971:
 12972     11C4  29E5               	goto	l4270
 12973     11C5                     u3970:
 12974     11C5                     l4268:
 12975     11C5  0825               	movf	fputc@fp^(0+128),w
 12976     11C6  0086               	movwf	6
 12977     11C7  0826               	movf	(fputc@fp+1)^(0+128),w
 12978     11C8  0087               	movwf	7
 12979     11C9  3149               	addfsr 1,9
 12980     11CA  3F40               	moviw [0]fsr1
 12981     11CB  00A7               	movwf	??_fputc^(0+128)
 12982     11CC  3F41               	moviw [1]fsr1
 12983     11CD  00A8               	movwf	(??_fputc^(0+128)+1)
 12984     11CE  0825               	movf	fputc@fp^(0+128),w
 12985     11CF  0086               	movwf	6
 12986     11D0  0826               	movf	(fputc@fp+1)^(0+128),w
 12987     11D1  0087               	movwf	7
 12988     11D2  3142               	addfsr 1,2
 12989     11D3  3F40               	moviw [0]fsr1
 12990     11D4  00A9               	movwf	(??_fputc+2)^(0+128)
 12991     11D5  3F41               	moviw [1]fsr1
 12992     11D6  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 12993     11D7  082A               	movf	(??_fputc+3)^(0+128),w
 12994     11D8  3A80               	xorlw	128
 12995     11D9  00AB               	movwf	(??_fputc+4)^(0+128)
 12996     11DA  0828               	movf	(??_fputc+1)^(0+128),w
 12997     11DB  3A80               	xorlw	128
 12998     11DC  022B               	subwf	(??_fputc+4)^(0+128),w
 12999     11DD  1D03               	skipz
 13000     11DE  29E1               	goto	u3985
 13001     11DF  0827               	movf	??_fputc^(0+128),w
 13002     11E0  0229               	subwf	(??_fputc+2)^(0+128),w
 13003     11E1                     u3985:
 13004     11E1  1803               	skipnc
 13005     11E2  29E4               	goto	u3981
 13006     11E3  29E5               	goto	u3980
 13007     11E4                     u3981:
 13008     11E4  2A05               	goto	l1805
 13009     11E5                     u3980:
 13010     11E5                     l4270:
 13011     11E5  0021               	movlb	1	; select bank1
 13012     11E6  0825               	movf	fputc@fp^(0+128),w
 13013     11E7  0086               	movwf	6
 13014     11E8  0826               	movf	(fputc@fp+1)^(0+128),w
 13015     11E9  0087               	movwf	7
 13016     11EA  3142               	addfsr 1,2
 13017     11EB  0825               	movf	fputc@fp^(0+128),w
 13018     11EC  0084               	movwf	4
 13019     11ED  0826               	movf	(fputc@fp+1)^(0+128),w
 13020     11EE  0085               	movwf	5
 13021     11EF  3F00               	moviw [0]fsr0
 13022     11F0  00A7               	movwf	??_fputc^(0+128)
 13023     11F1  3F01               	moviw [1]fsr0
 13024     11F2  00A8               	movwf	(??_fputc^(0+128)+1)
 13025     11F3  3F40               	moviw [0]fsr1
 13026     11F4  0727               	addwf	??_fputc^(0+128),w
 13027     11F5  0084               	movwf	4
 13028     11F6  3F41               	moviw [1]fsr1
 13029     11F7  3D28               	addwfc	(??_fputc+1)^(0+128),w
 13030     11F8  0085               	movwf	5
 13031     11F9  0823               	movf	fputc@c^(0+128),w
 13032     11FA  0080               	movwf	0
 13033     11FB                     l4272:
 13034     11FB  0825               	movf	fputc@fp^(0+128),w
 13035     11FC  0086               	movwf	6
 13036     11FD  0826               	movf	(fputc@fp+1)^(0+128),w
 13037     11FE  0087               	movwf	7
 13038     11FF  3142               	addfsr 1,2
 13039     1200  3001               	movlw	1
 13040     1201  0781               	addwf	1,f
 13041     1202  3141               	addfsr 1,1
 13042     1203  1803               	skipnc
 13043     1204  0A81               	incf	1,f
 13044     1205                     l1805:
 13045     1205  0008               	return
 13046     1206                     __end_of_fputc:
 13047                           
 13048                           	psect	text28
 13049     1BDE                     __ptext28:	
 13050 ;; *************** function _putch *****************
 13051 ;; Defined at:
 13052 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  txData          1    wreg     unsigned char 
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;  txData          1    2[BANK1 ] unsigned char 
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      void 
 13059 ;; Registers used:
 13060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;Total ram usage:        1 bytes
 13071 ;; Hardware stack levels used: 1
 13072 ;; Hardware stack levels required when called: 6
 13073 ;; This function calls:
 13074 ;;		_EUSART_IsTxReady
 13075 ;;		_EUSART_Write
 13076 ;; This function is called by:
 13077 ;;		_fputc
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081     1BDE                     _putch:	
 13082                           ;psect for function _putch
 13083                           
 13084                           
 13085                           ;incstack = 0
 13086                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13087                           ;putch@txData stored from wreg
 13088     1BDE  0021               	movlb	1	; select bank1
 13089     1BDF  00A2               	movwf	putch@txData^(0+128)
 13090     1BE0                     l4252:
 13091     1BE0                     l4254:	
 13092                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 13093                           
 13094                           
 13095                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 13096     1BE0  319A  2275  319B   	fcall	_EUSART_IsTxReady
 13097     1BE3  3A00               	xorlw	0
 13098     1BE4  1903               	skipnz
 13099     1BE5  2BE7               	goto	u3941
 13100     1BE6  2BE8               	goto	u3940
 13101     1BE7                     u3941:
 13102     1BE7  2BE0               	goto	l4254
 13103     1BE8                     u3940:
 13104     1BE8                     l4256:
 13105                           
 13106                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 13107     1BE8  0021               	movlb	1	; select bank1
 13108     1BE9  0822               	movf	putch@txData^(0+128),w
 13109     1BEA  00A0               	movwf	EUSART_Write@txData^(0+128)
 13110     1BEB  319D  25C7  319B   	fcall	_EUSART_Write
 13111     1BEE                     l760:
 13112     1BEE  0008               	return
 13113     1BEF                     __end_of_putch:
 13114                           
 13115                           	psect	text29
 13116     1DC7                     __ptext29:	
 13117 ;; *************** function _EUSART_Write *****************
 13118 ;; Defined at:
 13119 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 13120 ;; Parameters:    Size  Location     Type
 13121 ;;  txData          1    0[BANK1 ] unsigned char 
 13122 ;; Auto vars:     Size  Location     Type
 13123 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  1    wreg      void 
 13126 ;; Registers used:
 13127 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13128 ;; Tracked objects:
 13129 ;;		On entry : 0/0
 13130 ;;		On exit  : 0/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13133 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13136 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13137 ;;Total ram usage:        2 bytes
 13138 ;; Hardware stack levels used: 1
 13139 ;; Hardware stack levels required when called: 5
 13140 ;; This function calls:
 13141 ;;		Nothing
 13142 ;; This function is called by:
 13143 ;;		_putch
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147     1DC7                     _EUSART_Write:	
 13148                           ;psect for function _EUSART_Write
 13149                           
 13150     1DC7                     l4236:	
 13151                           ;incstack = 0
 13152                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 13153                           
 13154                           
 13155                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 13156     1DC7  0021               	movlb	1	; select bank1
 13157     1DC8  1A11               	btfsc	17,4	;volatile
 13158     1DC9  2DCB               	goto	u3921
 13159     1DCA  2DCC               	goto	u3920
 13160     1DCB                     u3921:
 13161     1DCB  2DD0               	goto	l4240
 13162     1DCC                     u3920:
 13163     1DCC                     l4238:
 13164                           
 13165                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 13166     1DCC  0820               	movf	EUSART_Write@txData^(0+128),w
 13167     1DCD  0023               	movlb	3	; select bank3
 13168     1DCE  009A               	movwf	26	;volatile
 13169                           
 13170                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 13171     1DCF  2DEC               	goto	l739
 13172     1DD0                     l4240:
 13173     1DD0  0020               	movlb	0	; select bank0
 13174     1DD1  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 13175     1DD2  1903               	btfsc	3,2
 13176     1DD3  2DD5               	goto	u3931
 13177     1DD4  2DD6               	goto	u3930
 13178     1DD5                     u3931:
 13179     1DD5  2DEC               	goto	l739
 13180     1DD6                     u3930:
 13181     1DD6                     l4242:
 13182                           
 13183                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 13184     1DD6  086D               	movf	_eusartTxHead,w
 13185     1DD7  3EB8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 13186     1DD8  0086               	movwf	6
 13187     1DD9  3001               	movlw	1	; select bank3/4
 13188     1DDA  0087               	movwf	7
 13189     1DDB  0021               	movlb	1	; select bank1
 13190     1DDC  0820               	movf	EUSART_Write@txData^(0+128),w
 13191     1DDD  0081               	movwf	1
 13192     1DDE                     l4244:
 13193                           
 13194                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 13195     1DDE  0020               	movlb	0	; select bank0
 13196     1DDF  086D               	movf	_eusartTxHead,w	;volatile
 13197     1DE0  3E01               	addlw	1
 13198     1DE1  3907               	andlw	7
 13199     1DE2  0021               	movlb	1	; select bank1
 13200     1DE3  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 13201     1DE4                     l4246:
 13202                           
 13203                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 13204     1DE4  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 13205     1DE5  0020               	movlb	0	; select bank0
 13206     1DE6  00ED               	movwf	_eusartTxHead	;volatile
 13207     1DE7                     l4248:
 13208                           
 13209                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 13210     1DE7  0021               	movlb	1	; select bank1
 13211     1DE8  1211               	bcf	17,4	;volatile
 13212     1DE9                     l4250:
 13213                           
 13214                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 13215     1DE9  3001               	movlw	1
 13216     1DEA  0020               	movlb	0	; select bank0
 13217     1DEB  02EB               	subwf	_eusartTxBufferRemaining,f	;volatile
 13218     1DEC                     l739:	
 13219                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 13220                           
 13221                           
 13222                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 13223     1DEC  0021               	movlb	1	; select bank1
 13224     1DED  1611               	bsf	17,4	;volatile
 13225     1DEE                     l742:
 13226     1DEE  0008               	return
 13227     1DEF                     __end_of_EUSART_Write:
 13228                           
 13229                           	psect	text30
 13230     1A75                     __ptext30:	
 13231 ;; *************** function _EUSART_IsTxReady *****************
 13232 ;; Defined at:
 13233 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;		None
 13236 ;; Auto vars:     Size  Location     Type
 13237 ;;		None
 13238 ;; Return value:  Size  Location     Type
 13239 ;;                  1    wreg      _Bool 
 13240 ;; Registers used:
 13241 ;;		wreg, status,2, status,0
 13242 ;; Tracked objects:
 13243 ;;		On entry : 0/0
 13244 ;;		On exit  : 0/0
 13245 ;;		Unchanged: 0/0
 13246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;Total ram usage:        0 bytes
 13252 ;; Hardware stack levels used: 1
 13253 ;; Hardware stack levels required when called: 5
 13254 ;; This function calls:
 13255 ;;		Nothing
 13256 ;; This function is called by:
 13257 ;;		_putch
 13258 ;; This function uses a non-reentrant model
 13259 ;;
 13260                           
 13261     1A75                     _EUSART_IsTxReady:	
 13262                           ;psect for function _EUSART_IsTxReady
 13263                           
 13264     1A75                     l4232:	
 13265                           ;incstack = 0
 13266                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 13267                           
 13268                           
 13269                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 13270     1A75  0020               	movlb	0	; select bank0
 13271     1A76  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 13272     1A77  1D03               	btfss	3,2
 13273     1A78  2A7A               	goto	u3901
 13274     1A79  2A7C               	goto	u3900
 13275     1A7A                     u3901:
 13276     1A7A  3001               	movlw	1
 13277     1A7B  2A7D               	goto	u3910
 13278     1A7C                     u3900:
 13279     1A7C  3000               	movlw	0
 13280     1A7D                     u3910:
 13281     1A7D                     l715:
 13282     1A7D  0008               	return
 13283     1A7E                     __end_of_EUSART_IsTxReady:
 13284                           
 13285                           	psect	text31
 13286     1BEF                     __ptext31:	
 13287 ;; *************** function _abs *****************
 13288 ;; Defined at:
 13289 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;  a               2    6[BANK1 ] int 
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;		None
 13294 ;; Return value:  Size  Location     Type
 13295 ;;                  2    6[BANK1 ] int 
 13296 ;; Registers used:
 13297 ;;		wreg, status,2, status,0
 13298 ;; Tracked objects:
 13299 ;;		On entry : 0/0
 13300 ;;		On exit  : 0/0
 13301 ;;		Unchanged: 0/0
 13302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13303 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;Total ram usage:        4 bytes
 13308 ;; Hardware stack levels used: 1
 13309 ;; Hardware stack levels required when called: 5
 13310 ;; This function calls:
 13311 ;;		Nothing
 13312 ;; This function is called by:
 13313 ;;		_dtoa
 13314 ;; This function uses a non-reentrant model
 13315 ;;
 13316                           
 13317     1BEF                     _abs:	
 13318                           ;psect for function _abs
 13319                           
 13320     1BEF                     l4458:	
 13321                           ;incstack = 0
 13322                           ; Regs used in _abs: [wreg+status,2+status,0]
 13323                           
 13324     1BEF  0021               	movlb	1	; select bank1
 13325     1BF0  1BA7               	btfsc	(abs@a+1)^(0+128),7
 13326     1BF1  2BF3               	goto	u4411
 13327     1BF2  2BF4               	goto	u4410
 13328     1BF3                     u4411:
 13329     1BF3  2BF5               	goto	l4462
 13330     1BF4                     u4410:
 13331     1BF4                     l4460:
 13332     1BF4  2C00               	goto	l1793
 13333     1BF5                     l4462:
 13334     1BF5  0926               	comf	abs@a^(0+128),w
 13335     1BF6  00A8               	movwf	??_abs^(0+128)
 13336     1BF7  0927               	comf	(abs@a+1)^(0+128),w
 13337     1BF8  00A9               	movwf	(??_abs^(0+128)+1)
 13338     1BF9  0AA8               	incf	??_abs^(0+128),f
 13339     1BFA  1903               	skipnz
 13340     1BFB  0AA9               	incf	(??_abs^(0+128)+1),f
 13341     1BFC  0828               	movf	??_abs^(0+128),w
 13342     1BFD  00A6               	movwf	?_abs^(0+128)
 13343     1BFE  0829               	movf	(??_abs+1)^(0+128),w
 13344     1BFF  00A7               	movwf	(?_abs+1)^(0+128)
 13345     1C00                     l1793:
 13346     1C00  0008               	return
 13347     1C01                     __end_of_abs:
 13348                           
 13349                           	psect	text32
 13350     1F06                     __ptext32:	
 13351 ;; *************** function ___awmod *****************
 13352 ;; Defined at:
 13353 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;  divisor         2    0[BANK1 ] int 
 13356 ;;  dividend        2    2[BANK1 ] int 
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;  sign            1    5[BANK1 ] unsigned char 
 13359 ;;  counter         1    4[BANK1 ] unsigned char 
 13360 ;; Return value:  Size  Location     Type
 13361 ;;                  2    0[BANK1 ] int 
 13362 ;; Registers used:
 13363 ;;		wreg, status,2, status,0
 13364 ;; Tracked objects:
 13365 ;;		On entry : 0/0
 13366 ;;		On exit  : 0/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13369 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13370 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;Total ram usage:        6 bytes
 13374 ;; Hardware stack levels used: 1
 13375 ;; Hardware stack levels required when called: 5
 13376 ;; This function calls:
 13377 ;;		Nothing
 13378 ;; This function is called by:
 13379 ;;		_dtoa
 13380 ;; This function uses a non-reentrant model
 13381 ;;
 13382                           
 13383     1F06                     ___awmod:	
 13384                           ;psect for function ___awmod
 13385                           
 13386     1F06                     l4352:	
 13387                           ;incstack = 0
 13388                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13389                           
 13390     1F06  0021               	movlb	1	; select bank1
 13391     1F07  01A5               	clrf	___awmod@sign^(0+128)
 13392     1F08                     l4354:
 13393     1F08  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 13394     1F09  2F0B               	goto	u4151
 13395     1F0A  2F0C               	goto	u4150
 13396     1F0B                     u4151:
 13397     1F0B  2F13               	goto	l4360
 13398     1F0C                     u4150:
 13399     1F0C                     l4356:
 13400     1F0C  09A2               	comf	___awmod@dividend^(0+128),f
 13401     1F0D  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 13402     1F0E  0AA2               	incf	___awmod@dividend^(0+128),f
 13403     1F0F  1903               	skipnz
 13404     1F10  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 13405     1F11                     l4358:
 13406     1F11  3001               	movlw	1
 13407     1F12  00A5               	movwf	___awmod@sign^(0+128)
 13408     1F13                     l4360:
 13409     1F13  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 13410     1F14  2F16               	goto	u4161
 13411     1F15  2F17               	goto	u4160
 13412     1F16                     u4161:
 13413     1F16  2F1C               	goto	l4364
 13414     1F17                     u4160:
 13415     1F17                     l4362:
 13416     1F17  09A0               	comf	___awmod@divisor^(0+128),f
 13417     1F18  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 13418     1F19  0AA0               	incf	___awmod@divisor^(0+128),f
 13419     1F1A  1903               	skipnz
 13420     1F1B  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 13421     1F1C                     l4364:
 13422     1F1C  0820               	movf	___awmod@divisor^(0+128),w
 13423     1F1D  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 13424     1F1E  1903               	btfsc	3,2
 13425     1F1F  2F21               	goto	u4171
 13426     1F20  2F22               	goto	u4170
 13427     1F21                     u4171:
 13428     1F21  2F49               	goto	l4382
 13429     1F22                     u4170:
 13430     1F22                     l4366:
 13431     1F22  3001               	movlw	1
 13432     1F23  00A4               	movwf	___awmod@counter^(0+128)
 13433     1F24  2F2C               	goto	l4372
 13434     1F25                     l4368:
 13435     1F25  3001               	movlw	1
 13436     1F26                     u4185:
 13437     1F26  35A0               	lslf	___awmod@divisor^(0+128),f
 13438     1F27  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 13439     1F28  0B89               	decfsz	9,f
 13440     1F29  2F26               	goto	u4185
 13441     1F2A                     l4370:
 13442     1F2A  3001               	movlw	1
 13443     1F2B  07A4               	addwf	___awmod@counter^(0+128),f
 13444     1F2C                     l4372:
 13445     1F2C  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 13446     1F2D  2F2F               	goto	u4191
 13447     1F2E  2F30               	goto	u4190
 13448     1F2F                     u4191:
 13449     1F2F  2F25               	goto	l4368
 13450     1F30                     u4190:
 13451     1F30                     l4374:
 13452     1F30  0821               	movf	(___awmod@divisor+1)^(0+128),w
 13453     1F31  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 13454     1F32  1D03               	skipz
 13455     1F33  2F36               	goto	u4205
 13456     1F34  0820               	movf	___awmod@divisor^(0+128),w
 13457     1F35  0222               	subwf	___awmod@dividend^(0+128),w
 13458     1F36                     u4205:
 13459     1F36  1C03               	skipc
 13460     1F37  2F39               	goto	u4201
 13461     1F38  2F3A               	goto	u4200
 13462     1F39                     u4201:
 13463     1F39  2F3E               	goto	l4378
 13464     1F3A                     u4200:
 13465     1F3A                     l4376:
 13466     1F3A  0820               	movf	___awmod@divisor^(0+128),w
 13467     1F3B  02A2               	subwf	___awmod@dividend^(0+128),f
 13468     1F3C  0821               	movf	(___awmod@divisor+1)^(0+128),w
 13469     1F3D  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 13470     1F3E                     l4378:
 13471     1F3E  3001               	movlw	1
 13472     1F3F                     u4215:
 13473     1F3F  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 13474     1F40  0CA0               	rrf	___awmod@divisor^(0+128),f
 13475     1F41  0B89               	decfsz	9,f
 13476     1F42  2F3F               	goto	u4215
 13477     1F43                     l4380:
 13478     1F43  3001               	movlw	1
 13479     1F44  02A4               	subwf	___awmod@counter^(0+128),f
 13480     1F45  1D03               	btfss	3,2
 13481     1F46  2F48               	goto	u4221
 13482     1F47  2F49               	goto	u4220
 13483     1F48                     u4221:
 13484     1F48  2F30               	goto	l4374
 13485     1F49                     u4220:
 13486     1F49                     l4382:
 13487     1F49  0825               	movf	___awmod@sign^(0+128),w
 13488     1F4A  1903               	btfsc	3,2
 13489     1F4B  2F4D               	goto	u4231
 13490     1F4C  2F4E               	goto	u4230
 13491     1F4D                     u4231:
 13492     1F4D  2F53               	goto	l4386
 13493     1F4E                     u4230:
 13494     1F4E                     l4384:
 13495     1F4E  09A2               	comf	___awmod@dividend^(0+128),f
 13496     1F4F  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 13497     1F50  0AA2               	incf	___awmod@dividend^(0+128),f
 13498     1F51  1903               	skipnz
 13499     1F52  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 13500     1F53                     l4386:
 13501     1F53  0823               	movf	(___awmod@dividend+1)^(0+128),w
 13502     1F54  00A1               	movwf	(?___awmod+1)^(0+128)
 13503     1F55  0822               	movf	___awmod@dividend^(0+128),w
 13504     1F56  00A0               	movwf	?___awmod^(0+128)
 13505     1F57                     l1381:
 13506     1F57  0008               	return
 13507     1F58                     __end_of___awmod:
 13508                           
 13509                           	psect	text33
 13510     10EF                     __ptext33:	
 13511 ;; *************** function ___awdiv *****************
 13512 ;; Defined at:
 13513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  divisor         2    0[BANK1 ] int 
 13516 ;;  dividend        2    2[BANK1 ] int 
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;  quotient        2    6[BANK1 ] int 
 13519 ;;  sign            1    5[BANK1 ] unsigned char 
 13520 ;;  counter         1    4[BANK1 ] unsigned char 
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  2    0[BANK1 ] int 
 13523 ;; Registers used:
 13524 ;;		wreg, status,2, status,0
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13530 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;Total ram usage:        8 bytes
 13535 ;; Hardware stack levels used: 1
 13536 ;; Hardware stack levels required when called: 5
 13537 ;; This function calls:
 13538 ;;		Nothing
 13539 ;; This function is called by:
 13540 ;;		_dtoa
 13541 ;; This function uses a non-reentrant model
 13542 ;;
 13543                           
 13544     10EF                     ___awdiv:	
 13545                           ;psect for function ___awdiv
 13546                           
 13547     10EF                     l4308:	
 13548                           ;incstack = 0
 13549                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13550                           
 13551     10EF  0021               	movlb	1	; select bank1
 13552     10F0  01A5               	clrf	___awdiv@sign^(0+128)
 13553     10F1                     l4310:
 13554     10F1  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 13555     10F2  28F4               	goto	u4051
 13556     10F3  28F5               	goto	u4050
 13557     10F4                     u4051:
 13558     10F4  28FC               	goto	l4316
 13559     10F5                     u4050:
 13560     10F5                     l4312:
 13561     10F5  09A0               	comf	___awdiv@divisor^(0+128),f
 13562     10F6  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 13563     10F7  0AA0               	incf	___awdiv@divisor^(0+128),f
 13564     10F8  1903               	skipnz
 13565     10F9  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 13566     10FA                     l4314:
 13567     10FA  3001               	movlw	1
 13568     10FB  00A5               	movwf	___awdiv@sign^(0+128)
 13569     10FC                     l4316:
 13570     10FC  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 13571     10FD  28FF               	goto	u4061
 13572     10FE  2900               	goto	u4060
 13573     10FF                     u4061:
 13574     10FF  2907               	goto	l4322
 13575     1100                     u4060:
 13576     1100                     l4318:
 13577     1100  09A2               	comf	___awdiv@dividend^(0+128),f
 13578     1101  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 13579     1102  0AA2               	incf	___awdiv@dividend^(0+128),f
 13580     1103  1903               	skipnz
 13581     1104  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 13582     1105                     l4320:
 13583     1105  3001               	movlw	1
 13584     1106  06A5               	xorwf	___awdiv@sign^(0+128),f
 13585     1107                     l4322:
 13586     1107  01A6               	clrf	___awdiv@quotient^(0+128)
 13587     1108  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 13588     1109                     l4324:
 13589     1109  0820               	movf	___awdiv@divisor^(0+128),w
 13590     110A  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 13591     110B  1903               	btfsc	3,2
 13592     110C  290E               	goto	u4071
 13593     110D  290F               	goto	u4070
 13594     110E                     u4071:
 13595     110E  293C               	goto	l4344
 13596     110F                     u4070:
 13597     110F                     l4326:
 13598     110F  3001               	movlw	1
 13599     1110  00A4               	movwf	___awdiv@counter^(0+128)
 13600     1111  2919               	goto	l4332
 13601     1112                     l4328:
 13602     1112  3001               	movlw	1
 13603     1113                     u4085:
 13604     1113  35A0               	lslf	___awdiv@divisor^(0+128),f
 13605     1114  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 13606     1115  0B89               	decfsz	9,f
 13607     1116  2913               	goto	u4085
 13608     1117                     l4330:
 13609     1117  3001               	movlw	1
 13610     1118  07A4               	addwf	___awdiv@counter^(0+128),f
 13611     1119                     l4332:
 13612     1119  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 13613     111A  291C               	goto	u4091
 13614     111B  291D               	goto	u4090
 13615     111C                     u4091:
 13616     111C  2912               	goto	l4328
 13617     111D                     u4090:
 13618     111D                     l4334:
 13619     111D  3001               	movlw	1
 13620     111E                     u4105:
 13621     111E  35A6               	lslf	___awdiv@quotient^(0+128),f
 13622     111F  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 13623     1120  0B89               	decfsz	9,f
 13624     1121  291E               	goto	u4105
 13625     1122  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 13626     1123  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 13627     1124  1D03               	skipz
 13628     1125  2928               	goto	u4115
 13629     1126  0820               	movf	___awdiv@divisor^(0+128),w
 13630     1127  0222               	subwf	___awdiv@dividend^(0+128),w
 13631     1128                     u4115:
 13632     1128  1C03               	skipc
 13633     1129  292B               	goto	u4111
 13634     112A  292C               	goto	u4110
 13635     112B                     u4111:
 13636     112B  2931               	goto	l4340
 13637     112C                     u4110:
 13638     112C                     l4336:
 13639     112C  0820               	movf	___awdiv@divisor^(0+128),w
 13640     112D  02A2               	subwf	___awdiv@dividend^(0+128),f
 13641     112E  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 13642     112F  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 13643     1130                     l4338:
 13644     1130  1426               	bsf	___awdiv@quotient^(0+128),0
 13645     1131                     l4340:
 13646     1131  3001               	movlw	1
 13647     1132                     u4125:
 13648     1132  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 13649     1133  0CA0               	rrf	___awdiv@divisor^(0+128),f
 13650     1134  0B89               	decfsz	9,f
 13651     1135  2932               	goto	u4125
 13652     1136                     l4342:
 13653     1136  3001               	movlw	1
 13654     1137  02A4               	subwf	___awdiv@counter^(0+128),f
 13655     1138  1D03               	btfss	3,2
 13656     1139  293B               	goto	u4131
 13657     113A  293C               	goto	u4130
 13658     113B                     u4131:
 13659     113B  291D               	goto	l4334
 13660     113C                     u4130:
 13661     113C                     l4344:
 13662     113C  0825               	movf	___awdiv@sign^(0+128),w
 13663     113D  1903               	btfsc	3,2
 13664     113E  2940               	goto	u4141
 13665     113F  2941               	goto	u4140
 13666     1140                     u4141:
 13667     1140  2946               	goto	l4348
 13668     1141                     u4140:
 13669     1141                     l4346:
 13670     1141  09A6               	comf	___awdiv@quotient^(0+128),f
 13671     1142  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 13672     1143  0AA6               	incf	___awdiv@quotient^(0+128),f
 13673     1144  1903               	skipnz
 13674     1145  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 13675     1146                     l4348:
 13676     1146  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 13677     1147  00A1               	movwf	(?___awdiv+1)^(0+128)
 13678     1148  0826               	movf	___awdiv@quotient^(0+128),w
 13679     1149  00A0               	movwf	?___awdiv^(0+128)
 13680     114A                     l1368:
 13681     114A  0008               	return
 13682     114B                     __end_of___awdiv:
 13683                           
 13684                           	psect	text34
 13685     1CD4                     __ptext34:	
 13686 ;; *************** function ___flsub *****************
 13687 ;; Defined at:
 13688 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  a               4   34[BANK1 ] int 
 13691 ;;  b               4   38[BANK1 ] int 
 13692 ;; Auto vars:     Size  Location     Type
 13693 ;;		None
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  4   34[BANK1 ] int 
 13696 ;; Registers used:
 13697 ;;		wreg, status,2, status,0, pclath, cstack
 13698 ;; Tracked objects:
 13699 ;;		On entry : 0/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13703 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13706 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13707 ;;Total ram usage:        8 bytes
 13708 ;; Hardware stack levels used: 1
 13709 ;; Hardware stack levels required when called: 6
 13710 ;; This function calls:
 13711 ;;		___fladd
 13712 ;; This function is called by:
 13713 ;;		_printFloat
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717     1CD4                     ___flsub:	
 13718                           ;psect for function ___flsub
 13719                           
 13720     1CD4                     l5222:	
 13721                           ;incstack = 0
 13722                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 13723                           
 13724     1CD4  3080               	movlw	128
 13725     1CD5  0021               	movlb	1	; select bank1
 13726     1CD6  06C5               	xorwf	(___flsub@a+3)^(0+128),f
 13727     1CD7                     l5224:
 13728     1CD7  0849               	movf	(___flsub@b+3)^(0+128),w
 13729     1CD8  00B1               	movwf	(___fladd@b+3)^(0+128)
 13730     1CD9  0848               	movf	(___flsub@b+2)^(0+128),w
 13731     1CDA  00B0               	movwf	(___fladd@b+2)^(0+128)
 13732     1CDB  0847               	movf	(___flsub@b+1)^(0+128),w
 13733     1CDC  00AF               	movwf	(___fladd@b+1)^(0+128)
 13734     1CDD  0846               	movf	___flsub@b^(0+128),w
 13735     1CDE  00AE               	movwf	___fladd@b^(0+128)
 13736     1CDF  0845               	movf	(___flsub@a+3)^(0+128),w
 13737     1CE0  00B5               	movwf	(___fladd@a+3)^(0+128)
 13738     1CE1  0844               	movf	(___flsub@a+2)^(0+128),w
 13739     1CE2  00B4               	movwf	(___fladd@a+2)^(0+128)
 13740     1CE3  0843               	movf	(___flsub@a+1)^(0+128),w
 13741     1CE4  00B3               	movwf	(___fladd@a+1)^(0+128)
 13742     1CE5  0842               	movf	___flsub@a^(0+128),w
 13743     1CE6  00B2               	movwf	___fladd@a^(0+128)
 13744     1CE7  3185  2508  319C   	fcall	___fladd
 13745     1CEA  0021               	movlb	1	; select bank1
 13746     1CEB  0831               	movf	(?___fladd+3)^(0+128),w
 13747     1CEC  00C5               	movwf	(?___flsub+3)^(0+128)
 13748     1CED  0830               	movf	(?___fladd+2)^(0+128),w
 13749     1CEE  00C4               	movwf	(?___flsub+2)^(0+128)
 13750     1CEF  082F               	movf	(?___fladd+1)^(0+128),w
 13751     1CF0  00C3               	movwf	(?___flsub+1)^(0+128)
 13752     1CF1  082E               	movf	?___fladd^(0+128),w
 13753     1CF2  00C2               	movwf	?___flsub^(0+128)
 13754     1CF3                     l1562:
 13755     1CF3  0008               	return
 13756     1CF4                     __end_of___flsub:
 13757                           
 13758                           	psect	text35
 13759     1A6C                     __ptext35:	
 13760 ;; *************** function _getPomphoogte *****************
 13761 ;; Defined at:
 13762 ;;		line 41 in file "adcMeasurements.c"
 13763 ;; Parameters:    Size  Location     Type
 13764 ;;		None
 13765 ;; Auto vars:     Size  Location     Type
 13766 ;;		None
 13767 ;; Return value:  Size  Location     Type
 13768 ;;                  2    0[BANK1 ] unsigned short 
 13769 ;; Registers used:
 13770 ;;		wreg
 13771 ;; Tracked objects:
 13772 ;;		On entry : 0/0
 13773 ;;		On exit  : 0/0
 13774 ;;		Unchanged: 0/0
 13775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13776 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13779 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13780 ;;Total ram usage:        2 bytes
 13781 ;; Hardware stack levels used: 1
 13782 ;; Hardware stack levels required when called: 5
 13783 ;; This function calls:
 13784 ;;		Nothing
 13785 ;; This function is called by:
 13786 ;;		_main
 13787 ;;		_printLogs
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791     1A6C                     _getPomphoogte:	
 13792                           ;psect for function _getPomphoogte
 13793                           
 13794     1A6C                     l5950:	
 13795                           ;incstack = 0
 13796                           ; Regs used in _getPomphoogte: [wreg]
 13797                           
 13798                           
 13799                           ;adcMeasurements.c: 42:     return ADC_pomphoogte;
 13800     1A6C  0022               	movlb	2	; select bank2
 13801     1A6D  0854               	movf	(_ADC_pomphoogte+1)^(0+256),w	;volatile
 13802     1A6E  0021               	movlb	1	; select bank1
 13803     1A6F  00A1               	movwf	(?_getPomphoogte+1)^(0+128)
 13804     1A70  0022               	movlb	2	; select bank2
 13805     1A71  0853               	movf	_ADC_pomphoogte^(0+256),w	;volatile
 13806     1A72  0021               	movlb	1	; select bank1
 13807     1A73  00A0               	movwf	?_getPomphoogte^(0+128)
 13808     1A74                     l860:
 13809     1A74  0008               	return
 13810     1A75                     __end_of_getPomphoogte:
 13811                           
 13812                           	psect	text36
 13813     1BCD                     __ptext36:	
 13814 ;; *************** function _getKp *****************
 13815 ;; Defined at:
 13816 ;;		line 46 in file "controller.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;		None
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;		None
 13821 ;; Return value:  Size  Location     Type
 13822 ;;                  4    0[BANK1 ] float 
 13823 ;; Registers used:
 13824 ;;		wreg
 13825 ;; Tracked objects:
 13826 ;;		On entry : 0/0
 13827 ;;		On exit  : 0/0
 13828 ;;		Unchanged: 0/0
 13829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13830 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13834 ;;Total ram usage:        4 bytes
 13835 ;; Hardware stack levels used: 1
 13836 ;; Hardware stack levels required when called: 5
 13837 ;; This function calls:
 13838 ;;		Nothing
 13839 ;; This function is called by:
 13840 ;;		_printLogs
 13841 ;; This function uses a non-reentrant model
 13842 ;;
 13843                           
 13844     1BCD                     _getKp:	
 13845                           ;psect for function _getKp
 13846                           
 13847     1BCD                     l6064:	
 13848                           ;incstack = 0
 13849                           ; Regs used in _getKp: [wreg]
 13850                           
 13851     1BCD  0022               	movlb	2	; select bank2
 13852     1BCE  0866               	movf	(_kp+3)^(0+256),w
 13853     1BCF  0021               	movlb	1	; select bank1
 13854     1BD0  00A3               	movwf	(?_getKp+3)^(0+128)
 13855     1BD1  0022               	movlb	2	; select bank2
 13856     1BD2  0865               	movf	(_kp+2)^(0+256),w
 13857     1BD3  0021               	movlb	1	; select bank1
 13858     1BD4  00A2               	movwf	(?_getKp+2)^(0+128)
 13859     1BD5  0022               	movlb	2	; select bank2
 13860     1BD6  0864               	movf	(_kp+1)^(0+256),w
 13861     1BD7  0021               	movlb	1	; select bank1
 13862     1BD8  00A1               	movwf	(?_getKp+1)^(0+128)
 13863     1BD9  0022               	movlb	2	; select bank2
 13864     1BDA  0863               	movf	_kp^(0+256),w
 13865     1BDB  0021               	movlb	1	; select bank1
 13866     1BDC  00A0               	movwf	?_getKp^(0+128)
 13867     1BDD                     l989:
 13868     1BDD  0008               	return
 13869     1BDE                     __end_of_getKp:
 13870                           
 13871                           	psect	text37
 13872     1BBC                     __ptext37:	
 13873 ;; *************** function _getKi *****************
 13874 ;; Defined at:
 13875 ;;		line 47 in file "controller.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;		None
 13878 ;; Auto vars:     Size  Location     Type
 13879 ;;		None
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  4    0[BANK1 ] float 
 13882 ;; Registers used:
 13883 ;;		wreg
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13889 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;Total ram usage:        4 bytes
 13894 ;; Hardware stack levels used: 1
 13895 ;; Hardware stack levels required when called: 5
 13896 ;; This function calls:
 13897 ;;		Nothing
 13898 ;; This function is called by:
 13899 ;;		_printLogs
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903     1BBC                     _getKi:	
 13904                           ;psect for function _getKi
 13905                           
 13906     1BBC                     l6068:	
 13907                           ;incstack = 0
 13908                           ; Regs used in _getKi: [wreg]
 13909                           
 13910     1BBC  0022               	movlb	2	; select bank2
 13911     1BBD  0862               	movf	(_ki+3)^(0+256),w
 13912     1BBE  0021               	movlb	1	; select bank1
 13913     1BBF  00A3               	movwf	(?_getKi+3)^(0+128)
 13914     1BC0  0022               	movlb	2	; select bank2
 13915     1BC1  0861               	movf	(_ki+2)^(0+256),w
 13916     1BC2  0021               	movlb	1	; select bank1
 13917     1BC3  00A2               	movwf	(?_getKi+2)^(0+128)
 13918     1BC4  0022               	movlb	2	; select bank2
 13919     1BC5  0860               	movf	(_ki+1)^(0+256),w
 13920     1BC6  0021               	movlb	1	; select bank1
 13921     1BC7  00A1               	movwf	(?_getKi+1)^(0+128)
 13922     1BC8  0022               	movlb	2	; select bank2
 13923     1BC9  085F               	movf	_ki^(0+256),w
 13924     1BCA  0021               	movlb	1	; select bank1
 13925     1BCB  00A0               	movwf	?_getKi^(0+128)
 13926     1BCC                     l992:
 13927     1BCC  0008               	return
 13928     1BCD                     __end_of_getKi:
 13929                           
 13930                           	psect	text38
 13931     1BAB                     __ptext38:	
 13932 ;; *************** function _getKd *****************
 13933 ;; Defined at:
 13934 ;;		line 48 in file "controller.c"
 13935 ;; Parameters:    Size  Location     Type
 13936 ;;		None
 13937 ;; Auto vars:     Size  Location     Type
 13938 ;;		None
 13939 ;; Return value:  Size  Location     Type
 13940 ;;                  4    0[BANK1 ] float 
 13941 ;; Registers used:
 13942 ;;		wreg
 13943 ;; Tracked objects:
 13944 ;;		On entry : 0/0
 13945 ;;		On exit  : 0/0
 13946 ;;		Unchanged: 0/0
 13947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13948 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;Total ram usage:        4 bytes
 13953 ;; Hardware stack levels used: 1
 13954 ;; Hardware stack levels required when called: 5
 13955 ;; This function calls:
 13956 ;;		Nothing
 13957 ;; This function is called by:
 13958 ;;		_printLogs
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962     1BAB                     _getKd:	
 13963                           ;psect for function _getKd
 13964                           
 13965     1BAB                     l6072:	
 13966                           ;incstack = 0
 13967                           ; Regs used in _getKd: [wreg]
 13968                           
 13969     1BAB  0022               	movlb	2	; select bank2
 13970     1BAC  0846               	movf	(_kd+3)^(0+256),w
 13971     1BAD  0021               	movlb	1	; select bank1
 13972     1BAE  00A3               	movwf	(?_getKd+3)^(0+128)
 13973     1BAF  0022               	movlb	2	; select bank2
 13974     1BB0  0845               	movf	(_kd+2)^(0+256),w
 13975     1BB1  0021               	movlb	1	; select bank1
 13976     1BB2  00A2               	movwf	(?_getKd+2)^(0+128)
 13977     1BB3  0022               	movlb	2	; select bank2
 13978     1BB4  0844               	movf	(_kd+1)^(0+256),w
 13979     1BB5  0021               	movlb	1	; select bank1
 13980     1BB6  00A1               	movwf	(?_getKd+1)^(0+128)
 13981     1BB7  0022               	movlb	2	; select bank2
 13982     1BB8  0843               	movf	_kd^(0+256),w
 13983     1BB9  0021               	movlb	1	; select bank1
 13984     1BBA  00A0               	movwf	?_getKd^(0+128)
 13985     1BBB                     l995:
 13986     1BBB  0008               	return
 13987     1BBC                     __end_of_getKd:
 13988                           
 13989                           	psect	text39
 13990     1A63                     __ptext39:	
 13991 ;; *************** function _getDutycycle *****************
 13992 ;; Defined at:
 13993 ;;		line 45 in file "controller.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;		None
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;		None
 13998 ;; Return value:  Size  Location     Type
 13999 ;;                  2    0[BANK1 ] unsigned short 
 14000 ;; Registers used:
 14001 ;;		wreg
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14007 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;Total ram usage:        2 bytes
 14012 ;; Hardware stack levels used: 1
 14013 ;; Hardware stack levels required when called: 5
 14014 ;; This function calls:
 14015 ;;		Nothing
 14016 ;; This function is called by:
 14017 ;;		_printLogs
 14018 ;;		_dutycycle_led_strip
 14019 ;; This function uses a non-reentrant model
 14020 ;;
 14021                           
 14022     1A63                     _getDutycycle:	
 14023                           ;psect for function _getDutycycle
 14024                           
 14025     1A63                     l6060:	
 14026                           ;incstack = 0
 14027                           ; Regs used in _getDutycycle: [wreg]
 14028                           
 14029     1A63  0020               	movlb	0	; select bank0
 14030     1A64  085D               	movf	_dutycycle+1,w
 14031     1A65  0021               	movlb	1	; select bank1
 14032     1A66  00A1               	movwf	(?_getDutycycle+1)^(0+128)
 14033     1A67  0020               	movlb	0	; select bank0
 14034     1A68  085C               	movf	_dutycycle,w
 14035     1A69  0021               	movlb	1	; select bank1
 14036     1A6A  00A0               	movwf	?_getDutycycle^(0+128)
 14037     1A6B                     l986:
 14038     1A6B  0008               	return
 14039     1A6C                     __end_of_getDutycycle:
 14040                           
 14041                           	psect	text40
 14042     1B21                     __ptext40:	
 14043 ;; *************** function _initLedstrip *****************
 14044 ;; Defined at:
 14045 ;;		line 116 in file "ledstrip.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;		None
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;		None
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  1    wreg      void 
 14052 ;; Registers used:
 14053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;Total ram usage:        0 bytes
 14064 ;; Hardware stack levels used: 1
 14065 ;; Hardware stack levels required when called: 7
 14066 ;; This function calls:
 14067 ;;		_SPI1_Open
 14068 ;;		_TMR6_PeriodMatchCallbackRegister
 14069 ;; This function is called by:
 14070 ;;		_main
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074     1B21                     _initLedstrip:	
 14075                           ;psect for function _initLedstrip
 14076                           
 14077     1B21                     l6246:	
 14078                           ;incstack = 0
 14079                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14080                           
 14081                           
 14082                           ;ledstrip.c: 117:     SPI1_Open(HOST_CONFIG);
 14083     1B21  0021               	movlb	1	; select bank1
 14084     1B22  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 14085     1B23  3192  22E4  319B   	fcall	_SPI1_Open
 14086     1B26                     l6248:
 14087                           
 14088                           ;ledstrip.c: 118:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 14089     1B26  3008               	movlw	low _updateLedstripAnimation
 14090     1B27  0021               	movlb	1	; select bank1
 14091     1B28  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 14092     1B29  301A               	movlw	high _updateLedstripAnimation
 14093     1B2A  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 14094     1B2B  319A  225A  319B   	fcall	_TMR6_PeriodMatchCallbackRegister
 14095     1B2E                     l1063:
 14096     1B2E  0008               	return
 14097     1B2F                     __end_of_initLedstrip:
 14098                           
 14099                           	psect	text41
 14100     1A5A                     __ptext41:	
 14101 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 14102 ;; Defined at:
 14103 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 14104 ;; Parameters:    Size  Location     Type
 14105 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 14106 ;;		 -> updateLedstripAnimation(1), 
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;		None
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1    wreg      void 
 14111 ;; Registers used:
 14112 ;;		wreg
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14118 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14121 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14122 ;;Total ram usage:        2 bytes
 14123 ;; Hardware stack levels used: 1
 14124 ;; Hardware stack levels required when called: 5
 14125 ;; This function calls:
 14126 ;;		Nothing
 14127 ;; This function is called by:
 14128 ;;		_initLedstrip
 14129 ;; This function uses a non-reentrant model
 14130 ;;
 14131                           
 14132     1A5A                     _TMR6_PeriodMatchCallbackRegister:	
 14133                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 14134                           
 14135     1A5A                     l5946:	
 14136                           ;incstack = 0
 14137                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 14138                           
 14139                           
 14140                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 14141     1A5A  0021               	movlb	1	; select bank1
 14142     1A5B  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 14143     1A5C  0023               	movlb	3	; select bank3
 14144     1A5D  00D5               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+384)
 14145     1A5E  0021               	movlb	1	; select bank1
 14146     1A5F  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 14147     1A60  0023               	movlb	3	; select bank3
 14148     1A61  00D4               	movwf	_TMR6_PeriodMatchCallback^(0+384)
 14149     1A62                     l543:
 14150     1A62  0008               	return
 14151     1A63                     __end_of_TMR6_PeriodMatchCallbackRegister:
 14152                           
 14153                           	psect	text42
 14154     12E4                     __ptext42:	
 14155 ;; *************** function _SPI1_Open *****************
 14156 ;; Defined at:
 14157 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;  returnValue     1    0        _Bool 
 14162 ;; Return value:  Size  Location     Type
 14163 ;;                  1    wreg      _Bool 
 14164 ;; Registers used:
 14165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 0/0
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14171 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;Total ram usage:        3 bytes
 14176 ;; Hardware stack levels used: 1
 14177 ;; Hardware stack levels required when called: 6
 14178 ;; This function calls:
 14179 ;;		___wmul
 14180 ;; This function is called by:
 14181 ;;		_initLedstrip
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185     12E4                     _SPI1_Open:	
 14186                           ;psect for function _SPI1_Open
 14187                           
 14188     12E4                     l5814:	
 14189                           ;incstack = 0
 14190                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14191                           
 14192     12E4                     l5816:
 14193                           
 14194                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 14195     12E4  0024               	movlb	4	; select bank4
 14196     12E5  1A95               	btfsc	21,5	;volatile
 14197     12E6  2AE8               	goto	u7121
 14198     12E7  2AE9               	goto	u7120
 14199     12E8                     u7121:
 14200     12E8  2B53               	goto	l5824
 14201     12E9                     u7120:
 14202     12E9                     l5818:
 14203                           
 14204                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 14205     12E9  0021               	movlb	1	; select bank1
 14206     12EA  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14207     12EB  00A7               	movwf	??_SPI1_Open^(0+128)
 14208     12EC  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14209     12ED  0827               	movf	??_SPI1_Open^(0+128),w
 14210     12EE  00A0               	movwf	___wmul@multiplier^(0+128)
 14211     12EF  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14212     12F0  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14213     12F1  3005               	movlw	5
 14214     12F2  00A2               	movwf	___wmul@multiplicand^(0+128)
 14215     12F3  3000               	movlw	0
 14216     12F4  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14217     12F5  319C  24B4  3192   	fcall	___wmul
 14218     12F8  3008               	movlw	low _spi1_configuration
 14219     12F9  0021               	movlb	1	; select bank1
 14220     12FA  0720               	addwf	?___wmul^(0+128),w
 14221     12FB  0084               	movwf	4
 14222     12FC  3019               	movlw	high _spi1_configuration
 14223     12FD  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14224     12FE  3880               	iorlw	128
 14225     12FF  0085               	movwf	5
 14226     1300  0800               	movf	0,w	;code access
 14227     1301  0024               	movlb	4	; select bank4
 14228     1302  0094               	movwf	20	;volatile
 14229                           
 14230                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 14231     1303  0021               	movlb	1	; select bank1
 14232     1304  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14233     1305  00A7               	movwf	??_SPI1_Open^(0+128)
 14234     1306  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14235     1307  0827               	movf	??_SPI1_Open^(0+128),w
 14236     1308  00A0               	movwf	___wmul@multiplier^(0+128)
 14237     1309  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14238     130A  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14239     130B  3005               	movlw	5
 14240     130C  00A2               	movwf	___wmul@multiplicand^(0+128)
 14241     130D  3000               	movlw	0
 14242     130E  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14243     130F  319C  24B4  3192   	fcall	___wmul
 14244     1312  3009               	movlw	low (_spi1_configuration+1)
 14245     1313  0021               	movlb	1	; select bank1
 14246     1314  0720               	addwf	?___wmul^(0+128),w
 14247     1315  0084               	movwf	4
 14248     1316  3019               	movlw	high (_spi1_configuration+1)
 14249     1317  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14250     1318  3880               	iorlw	128
 14251     1319  0085               	movwf	5
 14252     131A  0800               	movf	0,w	;code access
 14253     131B  0024               	movlb	4	; select bank4
 14254     131C  0095               	movwf	21	;volatile
 14255                           
 14256                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 14257     131D  0021               	movlb	1	; select bank1
 14258     131E  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14259     131F  00A7               	movwf	??_SPI1_Open^(0+128)
 14260     1320  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14261     1321  0827               	movf	??_SPI1_Open^(0+128),w
 14262     1322  00A0               	movwf	___wmul@multiplier^(0+128)
 14263     1323  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14264     1324  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14265     1325  3005               	movlw	5
 14266     1326  00A2               	movwf	___wmul@multiplicand^(0+128)
 14267     1327  3000               	movlw	0
 14268     1328  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14269     1329  319C  24B4  3192   	fcall	___wmul
 14270     132C  300A               	movlw	low (_spi1_configuration+2)
 14271     132D  0021               	movlb	1	; select bank1
 14272     132E  0720               	addwf	?___wmul^(0+128),w
 14273     132F  0084               	movwf	4
 14274     1330  3019               	movlw	high (_spi1_configuration+2)
 14275     1331  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14276     1332  3880               	iorlw	128
 14277     1333  0085               	movwf	5
 14278     1334  0800               	movf	0,w	;code access
 14279     1335  0024               	movlb	4	; select bank4
 14280     1336  0097               	movwf	23	;volatile
 14281                           
 14282                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 14283     1337  0021               	movlb	1	; select bank1
 14284     1338  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 14285     1339  00A7               	movwf	??_SPI1_Open^(0+128)
 14286     133A  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 14287     133B  0827               	movf	??_SPI1_Open^(0+128),w
 14288     133C  00A0               	movwf	___wmul@multiplier^(0+128)
 14289     133D  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 14290     133E  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 14291     133F  3005               	movlw	5
 14292     1340  00A2               	movwf	___wmul@multiplicand^(0+128)
 14293     1341  3000               	movlw	0
 14294     1342  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 14295     1343  319C  24B4  3192   	fcall	___wmul
 14296     1346  300B               	movlw	low (_spi1_configuration+3)
 14297     1347  0021               	movlb	1	; select bank1
 14298     1348  0720               	addwf	?___wmul^(0+128),w
 14299     1349  0084               	movwf	4
 14300     134A  3019               	movlw	high (_spi1_configuration+3)
 14301     134B  3D21               	addwfc	(?___wmul+1)^(0+128),w
 14302     134C  3880               	iorlw	128
 14303     134D  0085               	movwf	5
 14304     134E  0800               	movf	0,w	;code access
 14305     134F  0024               	movlb	4	; select bank4
 14306     1350  0092               	movwf	18	;volatile
 14307     1351                     l5820:
 14308                           
 14309                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 14310     1351  1695               	bsf	21,5	;volatile
 14311     1352                     l5822:
 14312                           
 14313                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 14314     1352  2B53               	goto	l141
 14315     1353                     l5824:
 14316     1353                     l141:
 14317     1353  0008               	return
 14318     1354                     __end_of_SPI1_Open:
 14319                           
 14320                           	psect	text43
 14321     1CB4                     __ptext43:	
 14322 ;; *************** function ___wmul *****************
 14323 ;; Defined at:
 14324 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;  multiplier      2    0[BANK1 ] unsigned int 
 14327 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  product         2    4[BANK1 ] unsigned int 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  2    0[BANK1 ] unsigned int 
 14332 ;; Registers used:
 14333 ;;		wreg, status,2, status,0
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14339 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14340 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;Total ram usage:        6 bytes
 14344 ;; Hardware stack levels used: 1
 14345 ;; Hardware stack levels required when called: 5
 14346 ;; This function calls:
 14347 ;;		Nothing
 14348 ;; This function is called by:
 14349 ;;		_SPI1_Open
 14350 ;;		_main
 14351 ;;		_atoi
 14352 ;;		_read_prec_or_width
 14353 ;;		_dutycycle_led_strip
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357     1CB4                     ___wmul:	
 14358                           ;psect for function ___wmul
 14359                           
 14360     1CB4                     l4294:	
 14361                           ;incstack = 0
 14362                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14363                           
 14364     1CB4  0021               	movlb	1	; select bank1
 14365     1CB5  01A4               	clrf	___wmul@product^(0+128)
 14366     1CB6  01A5               	clrf	(___wmul@product+1)^(0+128)
 14367     1CB7                     l4296:
 14368     1CB7  1C20               	btfss	___wmul@multiplier^(0+128),0
 14369     1CB8  2CBA               	goto	u4011
 14370     1CB9  2CBB               	goto	u4010
 14371     1CBA                     u4011:
 14372     1CBA  2CBF               	goto	l1215
 14373     1CBB                     u4010:
 14374     1CBB                     l4298:
 14375     1CBB  0822               	movf	___wmul@multiplicand^(0+128),w
 14376     1CBC  07A4               	addwf	___wmul@product^(0+128),f
 14377     1CBD  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 14378     1CBE  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 14379     1CBF                     l1215:
 14380     1CBF  3001               	movlw	1
 14381     1CC0                     u4025:
 14382     1CC0  35A2               	lslf	___wmul@multiplicand^(0+128),f
 14383     1CC1  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 14384     1CC2  0B89               	decfsz	9,f
 14385     1CC3  2CC0               	goto	u4025
 14386     1CC4                     l4300:
 14387     1CC4  3001               	movlw	1
 14388     1CC5                     u4035:
 14389     1CC5  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 14390     1CC6  0CA0               	rrf	___wmul@multiplier^(0+128),f
 14391     1CC7  0B89               	decfsz	9,f
 14392     1CC8  2CC5               	goto	u4035
 14393     1CC9                     l4302:
 14394     1CC9  0820               	movf	___wmul@multiplier^(0+128),w
 14395     1CCA  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 14396     1CCB  1D03               	btfss	3,2
 14397     1CCC  2CCE               	goto	u4041
 14398     1CCD  2CCF               	goto	u4040
 14399     1CCE                     u4041:
 14400     1CCE  2CB7               	goto	l4296
 14401     1CCF                     u4040:
 14402     1CCF                     l4304:
 14403     1CCF  0825               	movf	(___wmul@product+1)^(0+128),w
 14404     1CD0  00A1               	movwf	(?___wmul+1)^(0+128)
 14405     1CD1  0824               	movf	___wmul@product^(0+128),w
 14406     1CD2  00A0               	movwf	?___wmul^(0+128)
 14407     1CD3                     l1217:
 14408     1CD3  0008               	return
 14409     1CD4                     __end_of___wmul:
 14410                           
 14411                           	psect	text44
 14412     1B14                     __ptext44:	
 14413 ;; *************** function _initAdcMultiplexer *****************
 14414 ;; Defined at:
 14415 ;;		line 28 in file "adcMeasurements.c"
 14416 ;; Parameters:    Size  Location     Type
 14417 ;;		None
 14418 ;; Auto vars:     Size  Location     Type
 14419 ;;		None
 14420 ;; Return value:  Size  Location     Type
 14421 ;;                  1    wreg      void 
 14422 ;; Registers used:
 14423 ;;		wreg, status,2, status,0, pclath, cstack
 14424 ;; Tracked objects:
 14425 ;;		On entry : 0/0
 14426 ;;		On exit  : 0/0
 14427 ;;		Unchanged: 0/0
 14428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14433 ;;Total ram usage:        0 bytes
 14434 ;; Hardware stack levels used: 1
 14435 ;; Hardware stack levels required when called: 6
 14436 ;; This function calls:
 14437 ;;		_ADC_SelectChannel
 14438 ;;		_ADC_SetInterruptHandler
 14439 ;; This function is called by:
 14440 ;;		_main
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444     1B14                     _initAdcMultiplexer:	
 14445                           ;psect for function _initAdcMultiplexer
 14446                           
 14447     1B14                     l6244:	
 14448                           ;incstack = 0
 14449                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 14450                           
 14451                           
 14452                           ;adcMeasurements.c: 29:     ADC_SelectChannel(potentiometer);
 14453     1B14  3010               	movlw	16
 14454     1B15  319A  22FB  319B   	fcall	_ADC_SelectChannel
 14455                           
 14456                           ;adcMeasurements.c: 30:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 14457     1B18  3083               	movlw	low _adcConversionDoneHandler
 14458     1B19  0021               	movlb	1	; select bank1
 14459     1B1A  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 14460     1B1B  301E               	movlw	high _adcConversionDoneHandler
 14461     1B1C  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14462     1B1D  319A  2224  319B   	fcall	_ADC_SetInterruptHandler
 14463     1B20                     l851:
 14464     1B20  0008               	return
 14465     1B21                     __end_of_initAdcMultiplexer:
 14466                           
 14467                           	psect	text45
 14468     1AFB                     __ptext45:	
 14469 ;; *************** function _ADC_SelectChannel *****************
 14470 ;; Defined at:
 14471 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 14472 ;; Parameters:    Size  Location     Type
 14473 ;;  channel         1    wreg     enum E6663
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  channel         1    1[BANK1 ] enum E6663
 14476 ;; Return value:  Size  Location     Type
 14477 ;;                  1    wreg      void 
 14478 ;; Registers used:
 14479 ;;		wreg, status,2, status,0
 14480 ;; Tracked objects:
 14481 ;;		On entry : 0/0
 14482 ;;		On exit  : 0/0
 14483 ;;		Unchanged: 0/0
 14484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14486 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14487 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14488 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14489 ;;Total ram usage:        2 bytes
 14490 ;; Hardware stack levels used: 1
 14491 ;; Hardware stack levels required when called: 5
 14492 ;; This function calls:
 14493 ;;		Nothing
 14494 ;; This function is called by:
 14495 ;;		_initAdcMultiplexer
 14496 ;; This function uses a non-reentrant model
 14497 ;;
 14498                           
 14499     1AFB                     _ADC_SelectChannel:	
 14500                           ;psect for function _ADC_SelectChannel
 14501                           
 14502                           
 14503                           ;incstack = 0
 14504                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 14505                           ;ADC_SelectChannel@channel stored from wreg
 14506     1AFB  0021               	movlb	1	; select bank1
 14507     1AFC  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 14508     1AFD                     l5800:
 14509                           
 14510                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 14511     1AFD  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 14512     1AFE  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 14513     1AFF  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 14514     1B00  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 14515     1B01  081D               	movf	29,w	;volatile
 14516     1B02  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 14517     1B03  3903               	andlw	-253
 14518     1B04  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 14519     1B05  009D               	movwf	29	;volatile
 14520     1B06                     l30:
 14521     1B06  0008               	return
 14522     1B07                     __end_of_ADC_SelectChannel:
 14523                           
 14524                           	psect	text46
 14525     1C13                     __ptext46:	
 14526 ;; *************** function _TMR6_Tasks *****************
 14527 ;; Defined at:
 14528 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;		None
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;		None
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  1    wreg      void 
 14535 ;; Registers used:
 14536 ;;		wreg, status,2, status,0, pclath, cstack
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;Total ram usage:        0 bytes
 14547 ;; Hardware stack levels used: 1
 14548 ;; Hardware stack levels required when called: 10
 14549 ;; This function calls:
 14550 ;;		NULL
 14551 ;;		_TMR6_DefaultPeriodMatchCallback
 14552 ;;		_updateLedstripAnimation
 14553 ;; This function is called by:
 14554 ;;		_main
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558     1C13                     _TMR6_Tasks:	
 14559                           ;psect for function _TMR6_Tasks
 14560                           
 14561     1C13                     l6190:	
 14562                           ;incstack = 0
 14563                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 14564                           
 14565                           
 14566                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 14567     1C13  0020               	movlb	0	; select bank0
 14568     1C14  1F92               	btfss	18,7	;volatile
 14569     1C15  2C17               	goto	u7371
 14570     1C16  2C18               	goto	u7370
 14571     1C17                     u7371:
 14572     1C17  2C26               	goto	l557
 14573     1C18                     u7370:
 14574     1C18                     l6192:
 14575                           
 14576                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 14577     1C18  0023               	movlb	3	; select bank3
 14578     1C19  0854               	movf	_TMR6_PeriodMatchCallback^(0+384),w
 14579     1C1A  0455               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+384),w
 14580     1C1B  1903               	btfsc	3,2
 14581     1C1C  2C1E               	goto	u7381
 14582     1C1D  2C1F               	goto	u7380
 14583     1C1E                     u7381:
 14584     1C1E  2C24               	goto	l6196
 14585     1C1F                     u7380:
 14586     1C1F                     l6194:
 14587                           
 14588                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 14589     1C1F  0855               	movf	(_TMR6_PeriodMatchCallback+1)^(0+384),w
 14590     1C20  008A               	movwf	10
 14591     1C21  0854               	movf	_TMR6_PeriodMatchCallback^(0+384),w
 14592     1C22  000A               	callw
 14593     1C23  319C               	pagesel	$
 14594     1C24                     l6196:
 14595                           
 14596                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 14597     1C24  0020               	movlb	0	; select bank0
 14598     1C25  1392               	bcf	18,7	;volatile
 14599     1C26                     l557:
 14600     1C26  0008               	return
 14601     1C27                     __end_of_TMR6_Tasks:
 14602                           
 14603                           	psect	text47
 14604     0801                     __ptext47:	
 14605 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 14606 ;; Defined at:
 14607 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 14608 ;; Parameters:    Size  Location     Type
 14609 ;;		None
 14610 ;; Auto vars:     Size  Location     Type
 14611 ;;		None
 14612 ;; Return value:  Size  Location     Type
 14613 ;;                  1    wreg      void 
 14614 ;; Registers used:
 14615 ;;		None
 14616 ;; Tracked objects:
 14617 ;;		On entry : 0/0
 14618 ;;		On exit  : 0/0
 14619 ;;		Unchanged: 0/0
 14620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14625 ;;Total ram usage:        0 bytes
 14626 ;; Hardware stack levels used: 1
 14627 ;; Hardware stack levels required when called: 5
 14628 ;; This function calls:
 14629 ;;		Nothing
 14630 ;; This function is called by:
 14631 ;;		_TMR6_Initialize
 14632 ;;		_TMR6_Tasks
 14633 ;; This function uses a non-reentrant model
 14634 ;;
 14635                           
 14636     0801                     _TMR6_DefaultPeriodMatchCallback:	
 14637                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 14638                           
 14639     0801                     l546:	
 14640                           ;incstack = 0
 14641                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 14642                           
 14643     0801  0008               	return
 14644     0802                     __end_of_TMR6_DefaultPeriodMatchCallback:
 14645                           
 14646                           	psect	text48
 14647     1A08                     __ptext48:	
 14648 ;; *************** function _updateLedstripAnimation *****************
 14649 ;; Defined at:
 14650 ;;		line 112 in file "ledstrip.c"
 14651 ;; Parameters:    Size  Location     Type
 14652 ;;		None
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;		None
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  1    wreg      void 
 14657 ;; Registers used:
 14658 ;;		wreg, status,2, status,0, pclath, cstack
 14659 ;; Tracked objects:
 14660 ;;		On entry : 0/0
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;Total ram usage:        0 bytes
 14669 ;; Hardware stack levels used: 1
 14670 ;; Hardware stack levels required when called: 9
 14671 ;; This function calls:
 14672 ;;		_position_led_strip
 14673 ;; This function is called by:
 14674 ;;		_initLedstrip
 14675 ;;		_TMR6_Tasks
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679     1A08                     _updateLedstripAnimation:	
 14680                           ;psect for function _updateLedstripAnimation
 14681                           
 14682     1A08                     l6148:	
 14683                           ;incstack = 0
 14684                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 14685                           
 14686                           
 14687                           ;ledstrip.c: 113:     position_led_strip();
 14688     1A08  3194  24CC  319A   	fcall	_position_led_strip
 14689     1A0B                     l1060:
 14690     1A0B  0008               	return
 14691     1A0C                     __end_of_updateLedstripAnimation:
 14692                           
 14693                           	psect	text49
 14694     14CC                     __ptext49:	
 14695 ;; *************** function _position_led_strip *****************
 14696 ;; Defined at:
 14697 ;;		line 60 in file "ledstrip.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;		None
 14700 ;; Auto vars:     Size  Location     Type
 14701 ;;  led             1   10[BANK2 ] unsigned char 
 14702 ;;  led_on          2    8[BANK2 ] int 
 14703 ;;  target          2    6[BANK2 ] int 
 14704 ;; Return value:  Size  Location     Type
 14705 ;;                  1    wreg      void 
 14706 ;; Registers used:
 14707 ;;		wreg, status,2, status,0, pclath, cstack
 14708 ;; Tracked objects:
 14709 ;;		On entry : 0/0
 14710 ;;		On exit  : 0/0
 14711 ;;		Unchanged: 0/0
 14712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14714 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 14715 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 14716 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;Total ram usage:        7 bytes
 14718 ;; Hardware stack levels used: 1
 14719 ;; Hardware stack levels required when called: 8
 14720 ;; This function calls:
 14721 ;;		_getHoogtesensor
 14722 ;;		_getLedNumber
 14723 ;;		_getSetpoint
 14724 ;;		_sendLedstripEndFrame
 14725 ;;		_sendLedstripFrame
 14726 ;;		_sendLedstripStartFrame
 14727 ;; This function is called by:
 14728 ;;		_updateLedstripAnimation
 14729 ;; This function uses a non-reentrant model
 14730 ;;
 14731                           
 14732     14CC                     _position_led_strip:	
 14733                           ;psect for function _position_led_strip
 14734                           
 14735     14CC                     l5172:	
 14736                           ;incstack = 0
 14737                           ; Regs used in _position_led_strip: [wreg+status,2+status,0+pclath+cstack]
 14738                           
 14739                           
 14740                           ;ledstrip.c: 61:     int led_on = getLedNumber(getHoogtesensor());
 14741     14CC  319A  2248  3194   	fcall	_getHoogtesensor
 14742     14CF  0021               	movlb	1	; select bank1
 14743     14D0  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 14744     14D1  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 14745     14D2  0820               	movf	?_getHoogtesensor^(0+128),w
 14746     14D3  00EE               	movwf	getLedNumber@height^(0+128)
 14747     14D4  3190  2094  3194   	fcall	_getLedNumber
 14748     14D7  0021               	movlb	1	; select bank1
 14749     14D8  086F               	movf	(?_getLedNumber+1)^(0+128),w
 14750     14D9  0022               	movlb	2	; select bank2
 14751     14DA  00A9               	movwf	(position_led_strip@led_on+1)^(0+256)
 14752     14DB  0021               	movlb	1	; select bank1
 14753     14DC  086E               	movf	?_getLedNumber^(0+128),w
 14754     14DD  0022               	movlb	2	; select bank2
 14755     14DE  00A8               	movwf	position_led_strip@led_on^(0+256)
 14756     14DF                     l5174:
 14757                           
 14758                           ;ledstrip.c: 62:     if (led_on < 0) {
 14759     14DF  1FA9               	btfss	(position_led_strip@led_on+1)^(0+256),7
 14760     14E0  2CE2               	goto	u5781
 14761     14E1  2CE3               	goto	u5780
 14762     14E2                     u5781:
 14763     14E2  2CE6               	goto	l5178
 14764     14E3                     u5780:
 14765     14E3                     l5176:
 14766                           
 14767                           ;ledstrip.c: 63:         led_on = 0;
 14768     14E3  01A8               	clrf	position_led_strip@led_on^(0+256)
 14769     14E4  01A9               	clrf	(position_led_strip@led_on+1)^(0+256)
 14770                           
 14771                           ;ledstrip.c: 64:     } else if (led_on > 59) {
 14772     14E5  2CF8               	goto	l5182
 14773     14E6                     l5178:
 14774     14E6  0829               	movf	(position_led_strip@led_on+1)^(0+256),w
 14775     14E7  3A80               	xorlw	128
 14776     14E8  00A4               	movwf	??_position_led_strip^(0+256)
 14777     14E9  3080               	movlw	128
 14778     14EA  0224               	subwf	??_position_led_strip^(0+256),w
 14779     14EB  1D03               	skipz
 14780     14EC  2CEF               	goto	u5795
 14781     14ED  303C               	movlw	60
 14782     14EE  0228               	subwf	position_led_strip@led_on^(0+256),w
 14783     14EF                     u5795:
 14784     14EF  1C03               	skipc
 14785     14F0  2CF2               	goto	u5791
 14786     14F1  2CF3               	goto	u5790
 14787     14F2                     u5791:
 14788     14F2  2CF8               	goto	l5182
 14789     14F3                     u5790:
 14790     14F3                     l5180:
 14791                           
 14792                           ;ledstrip.c: 65:         led_on = 59;
 14793     14F3  303B               	movlw	59
 14794     14F4  0022               	movlb	2	; select bank2
 14795     14F5  00A8               	movwf	position_led_strip@led_on^(0+256)
 14796     14F6  3000               	movlw	0
 14797     14F7  00A9               	movwf	(position_led_strip@led_on^(0+256)+1)
 14798     14F8                     l5182:
 14799                           
 14800                           ;ledstrip.c: 68:     int target = getLedNumber(getSetpoint());
 14801     14F8  319A  2251  3194   	fcall	_getSetpoint
 14802     14FB  0021               	movlb	1	; select bank1
 14803     14FC  0821               	movf	(?_getSetpoint+1)^(0+128),w
 14804     14FD  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 14805     14FE  0820               	movf	?_getSetpoint^(0+128),w
 14806     14FF  00EE               	movwf	getLedNumber@height^(0+128)
 14807     1500  3190  2094  3194   	fcall	_getLedNumber
 14808     1503  0021               	movlb	1	; select bank1
 14809     1504  086F               	movf	(?_getLedNumber+1)^(0+128),w
 14810     1505  0022               	movlb	2	; select bank2
 14811     1506  00A7               	movwf	(position_led_strip@target+1)^(0+256)
 14812     1507  0021               	movlb	1	; select bank1
 14813     1508  086E               	movf	?_getLedNumber^(0+128),w
 14814     1509  0022               	movlb	2	; select bank2
 14815     150A  00A6               	movwf	position_led_strip@target^(0+256)
 14816     150B                     l5184:
 14817                           
 14818                           ;ledstrip.c: 69:     if (target < 0) {
 14819     150B  1FA7               	btfss	(position_led_strip@target+1)^(0+256),7
 14820     150C  2D0E               	goto	u5801
 14821     150D  2D0F               	goto	u5800
 14822     150E                     u5801:
 14823     150E  2D11               	goto	l5188
 14824     150F                     u5800:
 14825     150F                     l5186:
 14826                           
 14827                           ;ledstrip.c: 70:         target = 0;
 14828     150F  01A6               	clrf	position_led_strip@target^(0+256)
 14829     1510  01A7               	clrf	(position_led_strip@target+1)^(0+256)
 14830     1511                     l5188:
 14831                           
 14832                           ;ledstrip.c: 74:     sendLedstripStartFrame();
 14833     1511  3187  27EB  3194   	fcall	_sendLedstripStartFrame
 14834     1514                     l5190:
 14835                           
 14836                           ;ledstrip.c: 75:     for (uint8_t led = 0; led < 59; led++) {
 14837     1514  0022               	movlb	2	; select bank2
 14838     1515  01AA               	clrf	position_led_strip@led^(0+256)
 14839     1516                     l5196:
 14840                           
 14841                           ;ledstrip.c: 78:         if (led_on == target) {
 14842     1516  0827               	movf	(position_led_strip@target+1)^(0+256),w
 14843     1517  0629               	xorwf	(position_led_strip@led_on+1)^(0+256),w
 14844     1518  1D03               	skipz
 14845     1519  2D1C               	goto	u5815
 14846     151A  0826               	movf	position_led_strip@target^(0+256),w
 14847     151B  0628               	xorwf	position_led_strip@led_on^(0+256),w
 14848     151C                     u5815:
 14849     151C  1D03               	skipz
 14850     151D  2D1F               	goto	u5811
 14851     151E  2D20               	goto	u5810
 14852     151F                     u5811:
 14853     151F  2D23               	goto	l5200
 14854     1520                     u5810:
 14855     1520                     l5198:
 14856                           
 14857                           ;ledstrip.c: 79:             is_on_target = 1;
 14858     1520  3001               	movlw	1
 14859     1521  0020               	movlb	0	; select bank0
 14860     1522  00E5               	movwf	_is_on_target
 14861     1523                     l5200:
 14862                           
 14863                           ;ledstrip.c: 96:                   if (led == led_on) {
 14864     1523  0022               	movlb	2	; select bank2
 14865     1524  082A               	movf	position_led_strip@led^(0+256),w
 14866     1525  00A4               	movwf	??_position_led_strip^(0+256)
 14867     1526  01A5               	clrf	(??_position_led_strip^(0+256)+1)
 14868     1527  0829               	movf	(position_led_strip@led_on+1)^(0+256),w
 14869     1528  0625               	xorwf	(??_position_led_strip+1)^(0+256),w
 14870     1529  1D03               	skipz
 14871     152A  2D2D               	goto	u5825
 14872     152B  0828               	movf	position_led_strip@led_on^(0+256),w
 14873     152C  0624               	xorwf	??_position_led_strip^(0+256),w
 14874     152D                     u5825:
 14875     152D  1D03               	skipz
 14876     152E  2D30               	goto	u5821
 14877     152F  2D31               	goto	u5820
 14878     1530                     u5821:
 14879     1530  2D3F               	goto	l5206
 14880     1531                     u5820:
 14881     1531                     l5202:
 14882                           
 14883                           ;ledstrip.c: 97:             sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 14884     1531  3044               	movlw	68
 14885     1532  0021               	movlb	1	; select bank1
 14886     1533  00A1               	movwf	sendLedstripFrame@green^(0+128)
 14887     1534  3044               	movlw	68
 14888     1535  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 14889     1536  3005               	movlw	5
 14890     1537  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14891     1538  3044               	movlw	68
 14892     1539  319C  2499  3194   	fcall	_sendLedstripFrame
 14893     153C                     l5204:
 14894                           
 14895                           ;ledstrip.c: 98:             is_on_target = 0;
 14896     153C  0020               	movlb	0	; select bank0
 14897     153D  01E5               	clrf	_is_on_target
 14898                           
 14899                           ;ledstrip.c: 99:         } else if (led == target) {
 14900     153E  2D60               	goto	l5216
 14901     153F                     l5206:
 14902     153F  082A               	movf	position_led_strip@led^(0+256),w
 14903     1540  00A4               	movwf	??_position_led_strip^(0+256)
 14904     1541  01A5               	clrf	(??_position_led_strip^(0+256)+1)
 14905     1542  0827               	movf	(position_led_strip@target+1)^(0+256),w
 14906     1543  0625               	xorwf	(??_position_led_strip+1)^(0+256),w
 14907     1544  1D03               	skipz
 14908     1545  2D48               	goto	u5835
 14909     1546  0826               	movf	position_led_strip@target^(0+256),w
 14910     1547  0624               	xorwf	??_position_led_strip^(0+256),w
 14911     1548                     u5835:
 14912     1548  1D03               	skipz
 14913     1549  2D4B               	goto	u5831
 14914     154A  2D4C               	goto	u5830
 14915     154B                     u5831:
 14916     154B  2D56               	goto	l5212
 14917     154C                     u5830:
 14918     154C                     l5208:
 14919                           
 14920                           ;ledstrip.c: 100:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 14921     154C  0021               	movlb	1	; select bank1
 14922     154D  01A1               	clrf	sendLedstripFrame@green^(0+128)
 14923     154E  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14924     154F  3005               	movlw	5
 14925     1550  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14926     1551  30FF               	movlw	255
 14927     1552  319C  2499  3194   	fcall	_sendLedstripFrame
 14928     1555  2D3C               	goto	l5204
 14929     1556                     l5212:
 14930                           
 14931                           ;ledstrip.c: 103:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 14932     1556  0021               	movlb	1	; select bank1
 14933     1557  01A1               	clrf	sendLedstripFrame@green^(0+128)
 14934     1558  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 14935     1559  3005               	movlw	5
 14936     155A  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 14937     155B  3000               	movlw	0
 14938     155C  319C  2499  3194   	fcall	_sendLedstripFrame
 14939     155F  2D3C               	goto	l5204
 14940     1560                     l5216:
 14941                           
 14942                           ;ledstrip.c: 106:     }
 14943     1560  3001               	movlw	1
 14944     1561  0022               	movlb	2	; select bank2
 14945     1562  07AA               	addwf	position_led_strip@led^(0+256),f
 14946     1563                     l5218:
 14947     1563  303B               	movlw	59
 14948     1564  022A               	subwf	position_led_strip@led^(0+256),w
 14949     1565  1C03               	skipc
 14950     1566  2D68               	goto	u5841
 14951     1567  2D69               	goto	u5840
 14952     1568                     u5841:
 14953     1568  2D16               	goto	l5196
 14954     1569                     u5840:
 14955     1569                     l5220:
 14956                           
 14957                           ;ledstrip.c: 108:     sendLedstripEndFrame();
 14958     1569  319C  2480  3194   	fcall	_sendLedstripEndFrame
 14959     156C                     l1057:
 14960     156C  0008               	return
 14961     156D                     __end_of_position_led_strip:
 14962                           
 14963                           	psect	text50
 14964     07EB                     __ptext50:	
 14965 ;; *************** function _sendLedstripStartFrame *****************
 14966 ;; Defined at:
 14967 ;;		line 6 in file "ledstrip.c"
 14968 ;; Parameters:    Size  Location     Type
 14969 ;;		None
 14970 ;; Auto vars:     Size  Location     Type
 14971 ;;		None
 14972 ;; Return value:  Size  Location     Type
 14973 ;;                  1    wreg      void 
 14974 ;; Registers used:
 14975 ;;		wreg, status,2, status,0, pclath, cstack
 14976 ;; Tracked objects:
 14977 ;;		On entry : 0/0
 14978 ;;		On exit  : 0/0
 14979 ;;		Unchanged: 0/0
 14980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14985 ;;Total ram usage:        0 bytes
 14986 ;; Hardware stack levels used: 1
 14987 ;; Hardware stack levels required when called: 6
 14988 ;; This function calls:
 14989 ;;		_SPI1_ByteExchange
 14990 ;; This function is called by:
 14991 ;;		_position_led_strip
 14992 ;;		_dutycycle_led_strip
 14993 ;; This function uses a non-reentrant model
 14994 ;;
 14995                           
 14996     07EB                     _sendLedstripStartFrame:	
 14997                           ;psect for function _sendLedstripStartFrame
 14998                           
 14999     07EB                     l5088:	
 15000                           ;incstack = 0
 15001                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 15002                           
 15003                           
 15004                           ;ledstrip.c: 8:     SPI1_ByteExchange(0x00);
 15005     07EB  0021               	movlb	1	; select bank1
 15006     07EC  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15007     07ED  319B  2307  3187   	fcall	_SPI1_ByteExchange
 15008                           
 15009                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 15010     07F0  0021               	movlb	1	; select bank1
 15011     07F1  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15012     07F2  319B  2307  3187   	fcall	_SPI1_ByteExchange
 15013                           
 15014                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 15015     07F5  0021               	movlb	1	; select bank1
 15016     07F6  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15017     07F7  319B  2307  3187   	fcall	_SPI1_ByteExchange
 15018                           
 15019                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 15020     07FA  0021               	movlb	1	; select bank1
 15021     07FB  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 15022     07FC  319B  2307  3187   	fcall	_SPI1_ByteExchange
 15023     07FF                     l1025:
 15024     07FF  0008               	return
 15025     0800                     __end_of_sendLedstripStartFrame:
 15026                           
 15027                           	psect	text51
 15028     1C99                     __ptext51:	
 15029 ;; *************** function _sendLedstripFrame *****************
 15030 ;; Defined at:
 15031 ;;		line 22 in file "ledstrip.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;  red             1    wreg     unsigned char 
 15034 ;;  green           1    1[BANK1 ] unsigned char 
 15035 ;;  blue            1    2[BANK1 ] unsigned char 
 15036 ;;  intensity       1    3[BANK1 ] unsigned char 
 15037 ;; Auto vars:     Size  Location     Type
 15038 ;;  red             1    4[BANK1 ] unsigned char 
 15039 ;; Return value:  Size  Location     Type
 15040 ;;                  1    wreg      void 
 15041 ;; Registers used:
 15042 ;;		wreg, status,2, status,0, pclath, cstack
 15043 ;; Tracked objects:
 15044 ;;		On entry : 0/0
 15045 ;;		On exit  : 0/0
 15046 ;;		Unchanged: 0/0
 15047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15048 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;Total ram usage:        4 bytes
 15053 ;; Hardware stack levels used: 1
 15054 ;; Hardware stack levels required when called: 6
 15055 ;; This function calls:
 15056 ;;		_SPI1_ByteExchange
 15057 ;; This function is called by:
 15058 ;;		_position_led_strip
 15059 ;;		_dutycycle_led_strip
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063     1C99                     _sendLedstripFrame:	
 15064                           ;psect for function _sendLedstripFrame
 15065                           
 15066                           
 15067                           ;incstack = 0
 15068                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 15069                           ;sendLedstripFrame@red stored from wreg
 15070     1C99  0021               	movlb	1	; select bank1
 15071     1C9A  00A4               	movwf	sendLedstripFrame@red^(0+128)
 15072     1C9B                     l5092:
 15073                           
 15074                           ;ledstrip.c: 23:     SPI1_ByteExchange(0xE0 | intensity);
 15075     1C9B  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 15076     1C9C  38E0               	iorlw	224
 15077     1C9D  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15078     1C9E  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15079                           
 15080                           ;ledstrip.c: 25:     SPI1_ByteExchange(blue);
 15081     1CA1  0021               	movlb	1	; select bank1
 15082     1CA2  0822               	movf	sendLedstripFrame@blue^(0+128),w
 15083     1CA3  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15084     1CA4  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15085                           
 15086                           ;ledstrip.c: 26:     SPI1_ByteExchange(green);
 15087     1CA7  0021               	movlb	1	; select bank1
 15088     1CA8  0821               	movf	sendLedstripFrame@green^(0+128),w
 15089     1CA9  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15090     1CAA  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15091                           
 15092                           ;ledstrip.c: 27:     SPI1_ByteExchange(red);
 15093     1CAD  0021               	movlb	1	; select bank1
 15094     1CAE  0824               	movf	sendLedstripFrame@red^(0+128),w
 15095     1CAF  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15096     1CB0  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15097     1CB3                     l1031:
 15098     1CB3  0008               	return
 15099     1CB4                     __end_of_sendLedstripFrame:
 15100                           
 15101                           	psect	text52
 15102     1C80                     __ptext52:	
 15103 ;; *************** function _sendLedstripEndFrame *****************
 15104 ;; Defined at:
 15105 ;;		line 14 in file "ledstrip.c"
 15106 ;; Parameters:    Size  Location     Type
 15107 ;;		None
 15108 ;; Auto vars:     Size  Location     Type
 15109 ;;		None
 15110 ;; Return value:  Size  Location     Type
 15111 ;;                  1    wreg      void 
 15112 ;; Registers used:
 15113 ;;		wreg, status,2, status,0, pclath, cstack
 15114 ;; Tracked objects:
 15115 ;;		On entry : 0/0
 15116 ;;		On exit  : 0/0
 15117 ;;		Unchanged: 0/0
 15118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15123 ;;Total ram usage:        0 bytes
 15124 ;; Hardware stack levels used: 1
 15125 ;; Hardware stack levels required when called: 6
 15126 ;; This function calls:
 15127 ;;		_SPI1_ByteExchange
 15128 ;; This function is called by:
 15129 ;;		_position_led_strip
 15130 ;;		_dutycycle_led_strip
 15131 ;; This function uses a non-reentrant model
 15132 ;;
 15133                           
 15134     1C80                     _sendLedstripEndFrame:	
 15135                           ;psect for function _sendLedstripEndFrame
 15136                           
 15137     1C80                     l5090:	
 15138                           ;incstack = 0
 15139                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 15140                           
 15141                           
 15142                           ;ledstrip.c: 16:     SPI1_ByteExchange(0xFF);
 15143     1C80  30FF               	movlw	255
 15144     1C81  0021               	movlb	1	; select bank1
 15145     1C82  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15146     1C83  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15147                           
 15148                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 15149     1C86  30FF               	movlw	255
 15150     1C87  0021               	movlb	1	; select bank1
 15151     1C88  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15152     1C89  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15153                           
 15154                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 15155     1C8C  30FF               	movlw	255
 15156     1C8D  0021               	movlb	1	; select bank1
 15157     1C8E  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15158     1C8F  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15159                           
 15160                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 15161     1C92  30FF               	movlw	255
 15162     1C93  0021               	movlb	1	; select bank1
 15163     1C94  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 15164     1C95  319B  2307  319C   	fcall	_SPI1_ByteExchange
 15165     1C98                     l1028:
 15166     1C98  0008               	return
 15167     1C99                     __end_of_sendLedstripEndFrame:
 15168                           
 15169                           	psect	text53
 15170     1B07                     __ptext53:	
 15171 ;; *************** function _SPI1_ByteExchange *****************
 15172 ;; Defined at:
 15173 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 15174 ;; Parameters:    Size  Location     Type
 15175 ;;  byteData        1    0[BANK1 ] unsigned char 
 15176 ;; Auto vars:     Size  Location     Type
 15177 ;;		None
 15178 ;; Return value:  Size  Location     Type
 15179 ;;                  1    wreg      unsigned char 
 15180 ;; Registers used:
 15181 ;;		wreg
 15182 ;; Tracked objects:
 15183 ;;		On entry : 0/0
 15184 ;;		On exit  : 0/0
 15185 ;;		Unchanged: 0/0
 15186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15187 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15190 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15191 ;;Total ram usage:        1 bytes
 15192 ;; Hardware stack levels used: 1
 15193 ;; Hardware stack levels required when called: 5
 15194 ;; This function calls:
 15195 ;;		Nothing
 15196 ;; This function is called by:
 15197 ;;		_sendLedstripStartFrame
 15198 ;;		_sendLedstripEndFrame
 15199 ;;		_sendLedstripFrame
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           
 15203     1B07                     _SPI1_ByteExchange:	
 15204                           ;psect for function _SPI1_ByteExchange
 15205                           
 15206     1B07                     l4574:	
 15207                           ;incstack = 0
 15208                           ; Regs used in _SPI1_ByteExchange: [wreg]
 15209                           
 15210                           
 15211                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 15212     1B07  0021               	movlb	1	; select bank1
 15213     1B08  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 15214     1B09  0024               	movlb	4	; select bank4
 15215     1B0A  0091               	movwf	17	;volatile
 15216     1B0B                     l174:	
 15217                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 15218                           
 15219                           
 15220                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 15221     1B0B  0020               	movlb	0	; select bank0
 15222     1B0C  1D91               	btfss	17,3	;volatile
 15223     1B0D  2B0F               	goto	u4621
 15224     1B0E  2B10               	goto	u4620
 15225     1B0F                     u4621:
 15226     1B0F  2B0B               	goto	l174
 15227     1B10                     u4620:
 15228     1B10                     l176:
 15229                           
 15230                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 15231     1B10  1191               	bcf	17,3	;volatile
 15232     1B11                     l4576:
 15233                           
 15234                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 15235     1B11  0024               	movlb	4	; select bank4
 15236     1B12  0811               	movf	17,w	;volatile
 15237     1B13                     l177:
 15238     1B13  0008               	return
 15239     1B14                     __end_of_SPI1_ByteExchange:
 15240                           
 15241                           	psect	text54
 15242     1A51                     __ptext54:	
 15243 ;; *************** function _getSetpoint *****************
 15244 ;; Defined at:
 15245 ;;		line 44 in file "controller.c"
 15246 ;; Parameters:    Size  Location     Type
 15247 ;;		None
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;		None
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  2    0[BANK1 ] unsigned short 
 15252 ;; Registers used:
 15253 ;;		wreg
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15259 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;Total ram usage:        2 bytes
 15264 ;; Hardware stack levels used: 1
 15265 ;; Hardware stack levels required when called: 5
 15266 ;; This function calls:
 15267 ;;		Nothing
 15268 ;; This function is called by:
 15269 ;;		_printLogs
 15270 ;;		_position_led_strip
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274     1A51                     _getSetpoint:	
 15275                           ;psect for function _getSetpoint
 15276                           
 15277     1A51                     l5084:	
 15278                           ;incstack = 0
 15279                           ; Regs used in _getSetpoint: [wreg]
 15280                           
 15281     1A51  0022               	movlb	2	; select bank2
 15282     1A52  0868               	movf	(_setpoint+1)^(0+256),w
 15283     1A53  0021               	movlb	1	; select bank1
 15284     1A54  00A1               	movwf	(?_getSetpoint+1)^(0+128)
 15285     1A55  0022               	movlb	2	; select bank2
 15286     1A56  0867               	movf	_setpoint^(0+256),w
 15287     1A57  0021               	movlb	1	; select bank1
 15288     1A58  00A0               	movwf	?_getSetpoint^(0+128)
 15289     1A59                     l983:
 15290     1A59  0008               	return
 15291     1A5A                     __end_of_getSetpoint:
 15292                           
 15293                           	psect	text55
 15294     1094                     __ptext55:	
 15295 ;; *************** function _getLedNumber *****************
 15296 ;; Defined at:
 15297 ;;		line 33 in file "ledstrip.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;  height          2   78[BANK1 ] unsigned short 
 15300 ;; Auto vars:     Size  Location     Type
 15301 ;;  result          4    0[BANK2 ] float 
 15302 ;; Return value:  Size  Location     Type
 15303 ;;                  2   78[BANK1 ] int 
 15304 ;; Registers used:
 15305 ;;		wreg, status,2, status,0, pclath, cstack
 15306 ;; Tracked objects:
 15307 ;;		On entry : 0/0
 15308 ;;		On exit  : 0/0
 15309 ;;		Unchanged: 0/0
 15310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15311 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15312 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 15313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15314 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0
 15315 ;;Total ram usage:        6 bytes
 15316 ;; Hardware stack levels used: 1
 15317 ;; Hardware stack levels required when called: 7
 15318 ;; This function calls:
 15319 ;;		___fladd
 15320 ;;		___flmul
 15321 ;;		___fltol
 15322 ;;		___xxtofl
 15323 ;; This function is called by:
 15324 ;;		_position_led_strip
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328     1094                     _getLedNumber:	
 15329                           ;psect for function _getLedNumber
 15330                           
 15331     1094                     l5094:	
 15332                           ;incstack = 0
 15333                           ; Regs used in _getLedNumber: [wreg+status,2+status,0+pclath+cstack]
 15334                           
 15335                           
 15336                           ;ledstrip.c: 34:     float result = (0.068104825 * height - 5.4876957494);
 15337     1094  30C0               	movlw	192
 15338     1095  0021               	movlb	1	; select bank1
 15339     1096  00B1               	movwf	(___fladd@b+3)^(0+128)
 15340     1097  30AF               	movlw	175
 15341     1098  00B0               	movwf	(___fladd@b+2)^(0+128)
 15342     1099  309B               	movlw	155
 15343     109A  00AF               	movwf	(___fladd@b+1)^(0+128)
 15344     109B  3034               	movlw	52
 15345     109C  00AE               	movwf	___fladd@b^(0+128)
 15346     109D  303D               	movlw	61
 15347     109E  00CD               	movwf	(___flmul@b+3)^(0+128)
 15348     109F  308B               	movlw	139
 15349     10A0  00CC               	movwf	(___flmul@b+2)^(0+128)
 15350     10A1  307A               	movlw	122
 15351     10A2  00CB               	movwf	(___flmul@b+1)^(0+128)
 15352     10A3  308B               	movlw	139
 15353     10A4  00CA               	movwf	___flmul@b^(0+128)
 15354     10A5  086E               	movf	getLedNumber@height^(0+128),w
 15355     10A6  00A0               	movwf	___xxtofl@val^(0+128)
 15356     10A7  086F               	movf	(getLedNumber@height+1)^(0+128),w
 15357     10A8  00A1               	movwf	(___xxtofl@val^(0+128)+1)
 15358     10A9  01A2               	clrf	(___xxtofl@val^(0+128)+2)
 15359     10AA  01A3               	clrf	(___xxtofl@val^(0+128)+3)
 15360     10AB  3000               	movlw	0
 15361     10AC  3196  26B2  3190   	fcall	___xxtofl
 15362     10AF  0021               	movlb	1	; select bank1
 15363     10B0  0823               	movf	(?___xxtofl+3)^(0+128),w
 15364     10B1  00D1               	movwf	(___flmul@a+3)^(0+128)
 15365     10B2  0822               	movf	(?___xxtofl+2)^(0+128),w
 15366     10B3  00D0               	movwf	(___flmul@a+2)^(0+128)
 15367     10B4  0821               	movf	(?___xxtofl+1)^(0+128),w
 15368     10B5  00CF               	movwf	(___flmul@a+1)^(0+128)
 15369     10B6  0820               	movf	?___xxtofl^(0+128),w
 15370     10B7  00CE               	movwf	___flmul@a^(0+128)
 15371     10B8  3180  2092  3190   	fcall	___flmul
 15372     10BB  0021               	movlb	1	; select bank1
 15373     10BC  084D               	movf	(?___flmul+3)^(0+128),w
 15374     10BD  00B5               	movwf	(___fladd@a+3)^(0+128)
 15375     10BE  084C               	movf	(?___flmul+2)^(0+128),w
 15376     10BF  00B4               	movwf	(___fladd@a+2)^(0+128)
 15377     10C0  084B               	movf	(?___flmul+1)^(0+128),w
 15378     10C1  00B3               	movwf	(___fladd@a+1)^(0+128)
 15379     10C2  084A               	movf	?___flmul^(0+128),w
 15380     10C3  00B2               	movwf	___fladd@a^(0+128)
 15381     10C4  3185  2508  3190   	fcall	___fladd
 15382     10C7  0021               	movlb	1	; select bank1
 15383     10C8  0831               	movf	(?___fladd+3)^(0+128),w
 15384     10C9  0022               	movlb	2	; select bank2
 15385     10CA  00A3               	movwf	(getLedNumber@result+3)^(0+256)
 15386     10CB  0021               	movlb	1	; select bank1
 15387     10CC  0830               	movf	(?___fladd+2)^(0+128),w
 15388     10CD  0022               	movlb	2	; select bank2
 15389     10CE  00A2               	movwf	(getLedNumber@result+2)^(0+256)
 15390     10CF  0021               	movlb	1	; select bank1
 15391     10D0  082F               	movf	(?___fladd+1)^(0+128),w
 15392     10D1  0022               	movlb	2	; select bank2
 15393     10D2  00A1               	movwf	(getLedNumber@result+1)^(0+256)
 15394     10D3  0021               	movlb	1	; select bank1
 15395     10D4  082E               	movf	?___fladd^(0+128),w
 15396     10D5  0022               	movlb	2	; select bank2
 15397     10D6  00A0               	movwf	getLedNumber@result^(0+256)
 15398                           
 15399                           ;ledstrip.c: 35:     return result;
 15400     10D7  0823               	movf	(getLedNumber@result+3)^(0+256),w
 15401     10D8  0021               	movlb	1	; select bank1
 15402     10D9  00E7               	movwf	(___fltol@f1+3)^(0+128)
 15403     10DA  0022               	movlb	2	; select bank2
 15404     10DB  0822               	movf	(getLedNumber@result+2)^(0+256),w
 15405     10DC  0021               	movlb	1	; select bank1
 15406     10DD  00E6               	movwf	(___fltol@f1+2)^(0+128)
 15407     10DE  0022               	movlb	2	; select bank2
 15408     10DF  0821               	movf	(getLedNumber@result+1)^(0+256),w
 15409     10E0  0021               	movlb	1	; select bank1
 15410     10E1  00E5               	movwf	(___fltol@f1+1)^(0+128)
 15411     10E2  0022               	movlb	2	; select bank2
 15412     10E3  0820               	movf	getLedNumber@result^(0+256),w
 15413     10E4  0021               	movlb	1	; select bank1
 15414     10E5  00E4               	movwf	___fltol@f1^(0+128)
 15415     10E6  3192  2275  3190   	fcall	___fltol
 15416     10E9  0021               	movlb	1	; select bank1
 15417     10EA  0865               	movf	(?___fltol+1)^(0+128),w
 15418     10EB  00EF               	movwf	(?_getLedNumber+1)^(0+128)
 15419     10EC  0864               	movf	?___fltol^(0+128),w
 15420     10ED  00EE               	movwf	?_getLedNumber^(0+128)
 15421     10EE                     l1034:
 15422     10EE  0008               	return
 15423     10EF                     __end_of_getLedNumber:
 15424                           
 15425                           	psect	text56
 15426     16B2                     __ptext56:	
 15427 ;; *************** function ___xxtofl *****************
 15428 ;; Defined at:
 15429 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;  sign            1    wreg     unsigned char 
 15432 ;;  val             4    0[BANK1 ] long 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;  sign            1    8[BANK1 ] unsigned char 
 15435 ;;  arg             4   10[BANK1 ] unsigned long 
 15436 ;;  exp             1    9[BANK1 ] unsigned char 
 15437 ;; Return value:  Size  Location     Type
 15438 ;;                  4    0[BANK1 ] unsigned char 
 15439 ;; Registers used:
 15440 ;;		wreg, status,2, status,0
 15441 ;; Tracked objects:
 15442 ;;		On entry : 0/0
 15443 ;;		On exit  : 0/0
 15444 ;;		Unchanged: 0/0
 15445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15446 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;Total ram usage:       14 bytes
 15451 ;; Hardware stack levels used: 1
 15452 ;; Hardware stack levels required when called: 5
 15453 ;; This function calls:
 15454 ;;		Nothing
 15455 ;; This function is called by:
 15456 ;;		_printFloat
 15457 ;;		_str2float
 15458 ;;		_getLedNumber
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           
 15462     16B2                     ___xxtofl:	
 15463                           ;psect for function ___xxtofl
 15464                           
 15465                           
 15466                           ;incstack = 0
 15467                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 15468                           ;___xxtofl@sign stored from wreg
 15469     16B2  0021               	movlb	1	; select bank1
 15470     16B3  00A8               	movwf	___xxtofl@sign^(0+128)
 15471     16B4                     l4952:
 15472     16B4  0828               	movf	___xxtofl@sign^(0+128),w
 15473     16B5  1903               	btfsc	3,2
 15474     16B6  2EB8               	goto	u5461
 15475     16B7  2EB9               	goto	u5460
 15476     16B8                     u5461:
 15477     16B8  2ECD               	goto	l4958
 15478     16B9                     u5460:
 15479     16B9                     l4954:
 15480     16B9  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 15481     16BA  2EBC               	goto	u5471
 15482     16BB  2EBD               	goto	u5470
 15483     16BC                     u5471:
 15484     16BC  2ECD               	goto	l4958
 15485     16BD                     u5470:
 15486     16BD                     l4956:
 15487     16BD  0920               	comf	___xxtofl@val^(0+128),w
 15488     16BE  00AA               	movwf	___xxtofl@arg^(0+128)
 15489     16BF  0921               	comf	(___xxtofl@val^(0+128)+1),w
 15490     16C0  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 15491     16C1  0922               	comf	(___xxtofl@val^(0+128)+2),w
 15492     16C2  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 15493     16C3  0923               	comf	(___xxtofl@val^(0+128)+3),w
 15494     16C4  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 15495     16C5  0AAA               	incf	___xxtofl@arg^(0+128),f
 15496     16C6  1903               	skipnz
 15497     16C7  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
 15498     16C8  1903               	skipnz
 15499     16C9  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
 15500     16CA  1903               	skipnz
 15501     16CB  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
 15502     16CC  2ED5               	goto	l1656
 15503     16CD                     l4958:
 15504     16CD  0823               	movf	(___xxtofl@val+3)^(0+128),w
 15505     16CE  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 15506     16CF  0822               	movf	(___xxtofl@val+2)^(0+128),w
 15507     16D0  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 15508     16D1  0821               	movf	(___xxtofl@val+1)^(0+128),w
 15509     16D2  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 15510     16D3  0820               	movf	___xxtofl@val^(0+128),w
 15511     16D4  00AA               	movwf	___xxtofl@arg^(0+128)
 15512     16D5                     l1656:
 15513     16D5  0823               	movf	(___xxtofl@val+3)^(0+128),w
 15514     16D6  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
 15515     16D7  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
 15516     16D8  0420               	iorwf	___xxtofl@val^(0+128),w
 15517     16D9  1D03               	skipz
 15518     16DA  2EDC               	goto	u5481
 15519     16DB  2EDD               	goto	u5480
 15520     16DC                     u5481:
 15521     16DC  2EE6               	goto	l1657
 15522     16DD                     u5480:
 15523     16DD                     l4960:
 15524     16DD  3000               	movlw	0
 15525     16DE  00A3               	movwf	(?___xxtofl+3)^(0+128)
 15526     16DF  3000               	movlw	0
 15527     16E0  00A2               	movwf	(?___xxtofl+2)^(0+128)
 15528     16E1  3000               	movlw	0
 15529     16E2  00A1               	movwf	(?___xxtofl+1)^(0+128)
 15530     16E3  3000               	movlw	0
 15531     16E4  00A0               	movwf	?___xxtofl^(0+128)
 15532     16E5  2F56               	goto	l1658
 15533     16E6                     l1657:
 15534     16E6  3096               	movlw	150
 15535     16E7  00A9               	movwf	___xxtofl@exp^(0+128)
 15536     16E8  2EF2               	goto	l4966
 15537     16E9                     l4964:
 15538     16E9  3001               	movlw	1
 15539     16EA  07A9               	addwf	___xxtofl@exp^(0+128),f
 15540     16EB  3001               	movlw	1
 15541     16EC                     u5495:
 15542     16EC  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 15543     16ED  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 15544     16EE  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 15545     16EF  0CAA               	rrf	___xxtofl@arg^(0+128),f
 15546     16F0  0B89               	decfsz	9,f
 15547     16F1  2EEC               	goto	u5495
 15548     16F2                     l4966:
 15549     16F2  30FE               	movlw	254
 15550     16F3  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 15551     16F4  1D03               	btfss	3,2
 15552     16F5  2EF7               	goto	u5501
 15553     16F6  2EF8               	goto	u5500
 15554     16F7                     u5501:
 15555     16F7  2EE9               	goto	l4964
 15556     16F8                     u5500:
 15557     16F8  2F08               	goto	l4970
 15558     16F9                     l4968:
 15559     16F9  3001               	movlw	1
 15560     16FA  07A9               	addwf	___xxtofl@exp^(0+128),f
 15561     16FB  3001               	movlw	1
 15562     16FC  07AA               	addwf	___xxtofl@arg^(0+128),f
 15563     16FD  3000               	movlw	0
 15564     16FE  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
 15565     16FF  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
 15566     1700  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
 15567     1701  3001               	movlw	1
 15568     1702                     u5515:
 15569     1702  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 15570     1703  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 15571     1704  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 15572     1705  0CAA               	rrf	___xxtofl@arg^(0+128),f
 15573     1706  0B89               	decfsz	9,f
 15574     1707  2F02               	goto	u5515
 15575     1708                     l4970:
 15576     1708  30FF               	movlw	255
 15577     1709  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 15578     170A  1D03               	btfss	3,2
 15579     170B  2F0D               	goto	u5521
 15580     170C  2F0E               	goto	u5520
 15581     170D                     u5521:
 15582     170D  2EF9               	goto	l4968
 15583     170E                     u5520:
 15584     170E  2F18               	goto	l4974
 15585     170F                     l4972:
 15586     170F  3001               	movlw	1
 15587     1710  02A9               	subwf	___xxtofl@exp^(0+128),f
 15588     1711  3001               	movlw	1
 15589     1712                     u5535:
 15590     1712  35AA               	lslf	___xxtofl@arg^(0+128),f
 15591     1713  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
 15592     1714  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
 15593     1715  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
 15594     1716  0B89               	decfsz	9,f
 15595     1717  2F12               	goto	u5535
 15596     1718                     l4974:
 15597     1718  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
 15598     1719  2F1B               	goto	u5541
 15599     171A  2F1C               	goto	u5540
 15600     171B                     u5541:
 15601     171B  2F22               	goto	l1669
 15602     171C                     u5540:
 15603     171C                     l4976:
 15604     171C  3002               	movlw	2
 15605     171D  0229               	subwf	___xxtofl@exp^(0+128),w
 15606     171E  1803               	skipnc
 15607     171F  2F21               	goto	u5551
 15608     1720  2F22               	goto	u5550
 15609     1721                     u5551:
 15610     1721  2F0F               	goto	l4972
 15611     1722                     u5550:
 15612     1722                     l1669:
 15613     1722  1829               	btfsc	___xxtofl@exp^(0+128),0
 15614     1723  2F25               	goto	u5561
 15615     1724  2F26               	goto	u5560
 15616     1725                     u5561:
 15617     1725  2F2E               	goto	l1670
 15618     1726                     u5560:
 15619     1726                     l4978:
 15620     1726  30FF               	movlw	255
 15621     1727  05AA               	andwf	___xxtofl@arg^(0+128),f
 15622     1728  30FF               	movlw	255
 15623     1729  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
 15624     172A  307F               	movlw	127
 15625     172B  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
 15626     172C  30FF               	movlw	255
 15627     172D  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
 15628     172E                     l1670:
 15629     172E  1003               	clrc
 15630     172F  0CA9               	rrf	___xxtofl@exp^(0+128),f
 15631     1730                     l4980:
 15632     1730  0829               	movf	___xxtofl@exp^(0+128),w
 15633     1731  00A4               	movwf	??___xxtofl^(0+128)
 15634     1732  01A5               	clrf	(??___xxtofl^(0+128)+1)
 15635     1733  01A6               	clrf	(??___xxtofl^(0+128)+2)
 15636     1734  01A7               	clrf	(??___xxtofl^(0+128)+3)
 15637     1735  3018               	movlw	24
 15638     1736                     u5575:
 15639     1736  35A4               	lslf	??___xxtofl^(0+128),f
 15640     1737  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
 15641     1738  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
 15642     1739  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
 15643     173A                     u5570:
 15644     173A  0B89               	decfsz	9,f
 15645     173B  2F36               	goto	u5575
 15646     173C  0824               	movf	??___xxtofl^(0+128),w
 15647     173D  04AA               	iorwf	___xxtofl@arg^(0+128),f
 15648     173E  0825               	movf	(??___xxtofl+1)^(0+128),w
 15649     173F  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
 15650     1740  0826               	movf	(??___xxtofl+2)^(0+128),w
 15651     1741  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
 15652     1742  0827               	movf	(??___xxtofl+3)^(0+128),w
 15653     1743  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
 15654     1744                     l4982:
 15655     1744  0828               	movf	___xxtofl@sign^(0+128),w
 15656     1745  1903               	btfsc	3,2
 15657     1746  2F48               	goto	u5581
 15658     1747  2F49               	goto	u5580
 15659     1748                     u5581:
 15660     1748  2F4E               	goto	l4988
 15661     1749                     u5580:
 15662     1749                     l4984:
 15663     1749  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 15664     174A  2F4C               	goto	u5591
 15665     174B  2F4D               	goto	u5590
 15666     174C                     u5591:
 15667     174C  2F4E               	goto	l4988
 15668     174D                     u5590:
 15669     174D                     l4986:
 15670     174D  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
 15671     174E                     l4988:
 15672     174E  082D               	movf	(___xxtofl@arg+3)^(0+128),w
 15673     174F  00A3               	movwf	(?___xxtofl+3)^(0+128)
 15674     1750  082C               	movf	(___xxtofl@arg+2)^(0+128),w
 15675     1751  00A2               	movwf	(?___xxtofl+2)^(0+128)
 15676     1752  082B               	movf	(___xxtofl@arg+1)^(0+128),w
 15677     1753  00A1               	movwf	(?___xxtofl+1)^(0+128)
 15678     1754  082A               	movf	___xxtofl@arg^(0+128),w
 15679     1755  00A0               	movwf	?___xxtofl^(0+128)
 15680     1756                     l1658:
 15681     1756  0008               	return
 15682     1757                     __end_of___xxtofl:
 15683                           
 15684                           	psect	text57
 15685     1275                     __ptext57:	
 15686 ;; *************** function ___fltol *****************
 15687 ;; Defined at:
 15688 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 15689 ;; Parameters:    Size  Location     Type
 15690 ;;  f1              4   68[BANK1 ] unsigned char 
 15691 ;; Auto vars:     Size  Location     Type
 15692 ;;  exp1            1   77[BANK1 ] unsigned char 
 15693 ;;  sign1           1   76[BANK1 ] unsigned char 
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  4   68[BANK1 ] long 
 15696 ;; Registers used:
 15697 ;;		wreg, status,2, status,0
 15698 ;; Tracked objects:
 15699 ;;		On entry : 0/0
 15700 ;;		On exit  : 0/0
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15703 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15704 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15705 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15706 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;Total ram usage:       10 bytes
 15708 ;; Hardware stack levels used: 1
 15709 ;; Hardware stack levels required when called: 5
 15710 ;; This function calls:
 15711 ;;		Nothing
 15712 ;; This function is called by:
 15713 ;;		_printFloat
 15714 ;;		_getLedNumber
 15715 ;; This function uses a non-reentrant model
 15716 ;;
 15717                           
 15718     1275                     ___fltol:	
 15719                           ;psect for function ___fltol
 15720                           
 15721     1275                     l4580:	
 15722                           ;incstack = 0
 15723                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15724                           
 15725     1275  1003               	clrc
 15726     1276  0021               	movlb	1	; select bank1
 15727     1277  0D66               	rlf	(___fltol@f1+2)^(0+128),w
 15728     1278  0D67               	rlf	(___fltol@f1+3)^(0+128),w
 15729     1279  00ED               	movwf	___fltol@exp1^(0+128)
 15730     127A  086D               	movf	___fltol@exp1^(0+128),w
 15731     127B  1D03               	btfss	3,2
 15732     127C  2A7E               	goto	u4631
 15733     127D  2A7F               	goto	u4630
 15734     127E                     u4631:
 15735     127E  2A88               	goto	l4586
 15736     127F                     u4630:
 15737     127F                     l4582:
 15738     127F  3000               	movlw	0
 15739     1280  00E7               	movwf	(?___fltol+3)^(0+128)
 15740     1281  3000               	movlw	0
 15741     1282  00E6               	movwf	(?___fltol+2)^(0+128)
 15742     1283  3000               	movlw	0
 15743     1284  00E5               	movwf	(?___fltol+1)^(0+128)
 15744     1285  3000               	movlw	0
 15745     1286  00E4               	movwf	?___fltol^(0+128)
 15746     1287  2AE3               	goto	l1409
 15747     1288                     l4586:
 15748     1288  0864               	movf	___fltol@f1^(0+128),w
 15749     1289  00E8               	movwf	??___fltol^(0+128)
 15750     128A  0865               	movf	(___fltol@f1+1)^(0+128),w
 15751     128B  00E9               	movwf	(??___fltol^(0+128)+1)
 15752     128C  0866               	movf	(___fltol@f1+2)^(0+128),w
 15753     128D  00EA               	movwf	(??___fltol^(0+128)+2)
 15754     128E  0867               	movf	(___fltol@f1+3)^(0+128),w
 15755     128F  00EB               	movwf	(??___fltol^(0+128)+3)
 15756     1290  301F               	movlw	31
 15757     1291                     u4645:
 15758     1291  36EB               	lsrf	(??___fltol^(0+128)+3),f
 15759     1292  0CEA               	rrf	(??___fltol^(0+128)+2),f
 15760     1293  0CE9               	rrf	(??___fltol^(0+128)+1),f
 15761     1294  0CE8               	rrf	??___fltol^(0+128),f
 15762     1295                     u4640:
 15763     1295  0B89               	decfsz	9,f
 15764     1296  2A91               	goto	u4645
 15765     1297  0868               	movf	??___fltol^(0+128),w
 15766     1298  00EC               	movwf	___fltol@sign1^(0+128)
 15767     1299                     l4588:
 15768     1299  17E6               	bsf	(___fltol@f1^(0+128)+2),7
 15769     129A                     l4590:
 15770     129A  30FF               	movlw	255
 15771     129B  05E4               	andwf	___fltol@f1^(0+128),f
 15772     129C  30FF               	movlw	255
 15773     129D  05E5               	andwf	(___fltol@f1+1)^(0+128),f
 15774     129E  30FF               	movlw	255
 15775     129F  05E6               	andwf	(___fltol@f1+2)^(0+128),f
 15776     12A0  3000               	movlw	0
 15777     12A1  05E7               	andwf	(___fltol@f1+3)^(0+128),f
 15778     12A2                     l4592:
 15779     12A2  3096               	movlw	150
 15780     12A3  02ED               	subwf	___fltol@exp1^(0+128),f
 15781     12A4                     l4594:
 15782     12A4  1FED               	btfss	___fltol@exp1^(0+128),7
 15783     12A5  2AA7               	goto	u4651
 15784     12A6  2AA8               	goto	u4650
 15785     12A7                     u4651:
 15786     12A7  2ABE               	goto	l4604
 15787     12A8                     u4650:
 15788     12A8                     l4596:
 15789     12A8  086D               	movf	___fltol@exp1^(0+128),w
 15790     12A9  3A80               	xorlw	128
 15791     12AA  3E97               	addlw	151
 15792     12AB  1803               	skipnc
 15793     12AC  2AAE               	goto	u4661
 15794     12AD  2AAF               	goto	u4660
 15795     12AE                     u4661:
 15796     12AE  2AB0               	goto	l4602
 15797     12AF                     u4660:
 15798     12AF  2A7F               	goto	l4582
 15799     12B0                     l4602:
 15800     12B0  3001               	movlw	1
 15801     12B1                     u4675:
 15802     12B1  36E7               	lsrf	(___fltol@f1+3)^(0+128),f
 15803     12B2  0CE6               	rrf	(___fltol@f1+2)^(0+128),f
 15804     12B3  0CE5               	rrf	(___fltol@f1+1)^(0+128),f
 15805     12B4  0CE4               	rrf	___fltol@f1^(0+128),f
 15806     12B5  0B89               	decfsz	9,f
 15807     12B6  2AB1               	goto	u4675
 15808     12B7  3001               	movlw	1
 15809     12B8  07ED               	addwf	___fltol@exp1^(0+128),f
 15810     12B9  1D03               	btfss	3,2
 15811     12BA  2ABC               	goto	u4681
 15812     12BB  2ABD               	goto	u4680
 15813     12BC                     u4681:
 15814     12BC  2AB0               	goto	l4602
 15815     12BD                     u4680:
 15816     12BD  2AD3               	goto	l4612
 15817     12BE                     l4604:
 15818     12BE  3020               	movlw	32
 15819     12BF  026D               	subwf	___fltol@exp1^(0+128),w
 15820     12C0  1C03               	skipc
 15821     12C1  2AC3               	goto	u4691
 15822     12C2  2AC4               	goto	u4690
 15823     12C3                     u4691:
 15824     12C3  2ACE               	goto	l1416
 15825     12C4                     u4690:
 15826     12C4  2A7F               	goto	l4582
 15827     12C5                     l4610:
 15828     12C5  3001               	movlw	1
 15829     12C6                     u4705:
 15830     12C6  35E4               	lslf	___fltol@f1^(0+128),f
 15831     12C7  0DE5               	rlf	(___fltol@f1+1)^(0+128),f
 15832     12C8  0DE6               	rlf	(___fltol@f1+2)^(0+128),f
 15833     12C9  0DE7               	rlf	(___fltol@f1+3)^(0+128),f
 15834     12CA  0B89               	decfsz	9,f
 15835     12CB  2AC6               	goto	u4705
 15836     12CC  3001               	movlw	1
 15837     12CD  02ED               	subwf	___fltol@exp1^(0+128),f
 15838     12CE                     l1416:
 15839     12CE  086D               	movf	___fltol@exp1^(0+128),w
 15840     12CF  1D03               	btfss	3,2
 15841     12D0  2AD2               	goto	u4711
 15842     12D1  2AD3               	goto	u4710
 15843     12D2                     u4711:
 15844     12D2  2AC5               	goto	l4610
 15845     12D3                     u4710:
 15846     12D3                     l4612:
 15847     12D3  086C               	movf	___fltol@sign1^(0+128),w
 15848     12D4  1903               	btfsc	3,2
 15849     12D5  2AD7               	goto	u4721
 15850     12D6  2AD8               	goto	u4720
 15851     12D7                     u4721:
 15852     12D7  2AE3               	goto	l1419
 15853     12D8                     u4720:
 15854     12D8                     l4614:
 15855     12D8  09E4               	comf	___fltol@f1^(0+128),f
 15856     12D9  09E5               	comf	(___fltol@f1+1)^(0+128),f
 15857     12DA  09E6               	comf	(___fltol@f1+2)^(0+128),f
 15858     12DB  09E7               	comf	(___fltol@f1+3)^(0+128),f
 15859     12DC  0AE4               	incf	___fltol@f1^(0+128),f
 15860     12DD  1903               	skipnz
 15861     12DE  0AE5               	incf	(___fltol@f1+1)^(0+128),f
 15862     12DF  1903               	skipnz
 15863     12E0  0AE6               	incf	(___fltol@f1+2)^(0+128),f
 15864     12E1  1903               	skipnz
 15865     12E2  0AE7               	incf	(___fltol@f1+3)^(0+128),f
 15866     12E3                     l1419:
 15867     12E3                     l1409:
 15868     12E3  0008               	return
 15869     12E4                     __end_of___fltol:
 15870                           
 15871                           	psect	text58
 15872     0092                     __ptext58:	
 15873 ;; *************** function ___flmul *****************
 15874 ;; Defined at:
 15875 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 15876 ;; Parameters:    Size  Location     Type
 15877 ;;  b               4   42[BANK1 ] long 
 15878 ;;  a               4   46[BANK1 ] long 
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;  prod            4   62[BANK1 ] struct .
 15881 ;;  grs             4   56[BANK1 ] unsigned long 
 15882 ;;  temp            2   66[BANK1 ] struct .
 15883 ;;  bexp            1   61[BANK1 ] unsigned char 
 15884 ;;  aexp            1   60[BANK1 ] unsigned char 
 15885 ;;  sign            1   55[BANK1 ] unsigned char 
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  4   42[BANK1 ] unsigned char 
 15888 ;; Registers used:
 15889 ;;		wreg, status,2, status,0, pclath, cstack
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15895 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15896 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 15897 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15898 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;Total ram usage:       26 bytes
 15900 ;; Hardware stack levels used: 1
 15901 ;; Hardware stack levels required when called: 6
 15902 ;; This function calls:
 15903 ;;		__Umul8_16
 15904 ;; This function is called by:
 15905 ;;		_printFloat
 15906 ;;		_str2float
 15907 ;;		_getLedNumber
 15908 ;; This function uses a non-reentrant model
 15909 ;;
 15910                           
 15911     0092                     ___flmul:	
 15912                           ;psect for function ___flmul
 15913                           
 15914     0092                     l4812:	
 15915                           ;incstack = 0
 15916                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15917                           
 15918     0092  0021               	movlb	1	; select bank1
 15919     0093  084D               	movf	(___flmul@b^(0+128)+3),w
 15920     0094  3980               	andlw	128
 15921     0095  00D7               	movwf	___flmul@sign^(0+128)
 15922     0096                     l4814:
 15923     0096  354D               	lslf	(___flmul@b^(0+128)+3),w
 15924     0097  00DD               	movwf	___flmul@bexp^(0+128)
 15925     0098                     l4816:
 15926     0098  1FCC               	btfss	(___flmul@b^(0+128)+2),7
 15927     0099  289B               	goto	u5191
 15928     009A  289C               	goto	u5190
 15929     009B                     u5191:
 15930     009B  289D               	goto	l4820
 15931     009C                     u5190:
 15932     009C                     l4818:
 15933     009C  145D               	bsf	___flmul@bexp^(0+128),0
 15934     009D                     l4820:
 15935     009D  085D               	movf	___flmul@bexp^(0+128),w
 15936     009E  1903               	btfsc	3,2
 15937     009F  28A1               	goto	u5201
 15938     00A0  28A2               	goto	u5200
 15939     00A1                     u5201:
 15940     00A1  28B1               	goto	l4828
 15941     00A2                     u5200:
 15942     00A2                     l4822:
 15943     00A2  0A5D               	incf	___flmul@bexp^(0+128),w
 15944     00A3  1D03               	btfss	3,2
 15945     00A4  28A6               	goto	u5211
 15946     00A5  28A7               	goto	u5210
 15947     00A6                     u5211:
 15948     00A6  28AF               	goto	l4826
 15949     00A7                     u5210:
 15950     00A7                     l4824:
 15951     00A7  3000               	movlw	0
 15952     00A8  00CD               	movwf	(___flmul@b+3)^(0+128)
 15953     00A9  3000               	movlw	0
 15954     00AA  00CC               	movwf	(___flmul@b+2)^(0+128)
 15955     00AB  3000               	movlw	0
 15956     00AC  00CB               	movwf	(___flmul@b+1)^(0+128)
 15957     00AD  3000               	movlw	0
 15958     00AE  00CA               	movwf	___flmul@b^(0+128)
 15959     00AF                     l4826:
 15960     00AF  17CC               	bsf	(___flmul@b^(0+128)+2),7
 15961     00B0  28B9               	goto	l4830
 15962     00B1                     l4828:
 15963     00B1  3000               	movlw	0
 15964     00B2  00CD               	movwf	(___flmul@b+3)^(0+128)
 15965     00B3  3000               	movlw	0
 15966     00B4  00CC               	movwf	(___flmul@b+2)^(0+128)
 15967     00B5  3000               	movlw	0
 15968     00B6  00CB               	movwf	(___flmul@b+1)^(0+128)
 15969     00B7  3000               	movlw	0
 15970     00B8  00CA               	movwf	___flmul@b^(0+128)
 15971     00B9                     l4830:
 15972     00B9  0851               	movf	(___flmul@a^(0+128)+3),w
 15973     00BA  3980               	andlw	128
 15974     00BB  06D7               	xorwf	___flmul@sign^(0+128),f
 15975     00BC                     l4832:
 15976     00BC  3551               	lslf	(___flmul@a^(0+128)+3),w
 15977     00BD  00DC               	movwf	___flmul@aexp^(0+128)
 15978     00BE                     l4834:
 15979     00BE  1FD0               	btfss	(___flmul@a^(0+128)+2),7
 15980     00BF  28C1               	goto	u5221
 15981     00C0  28C2               	goto	u5220
 15982     00C1                     u5221:
 15983     00C1  28C3               	goto	l4838
 15984     00C2                     u5220:
 15985     00C2                     l4836:
 15986     00C2  145C               	bsf	___flmul@aexp^(0+128),0
 15987     00C3                     l4838:
 15988     00C3  085C               	movf	___flmul@aexp^(0+128),w
 15989     00C4  1903               	btfsc	3,2
 15990     00C5  28C7               	goto	u5231
 15991     00C6  28C8               	goto	u5230
 15992     00C7                     u5231:
 15993     00C7  28D7               	goto	l4846
 15994     00C8                     u5230:
 15995     00C8                     l4840:
 15996     00C8  0A5C               	incf	___flmul@aexp^(0+128),w
 15997     00C9  1D03               	btfss	3,2
 15998     00CA  28CC               	goto	u5241
 15999     00CB  28CD               	goto	u5240
 16000     00CC                     u5241:
 16001     00CC  28D5               	goto	l4844
 16002     00CD                     u5240:
 16003     00CD                     l4842:
 16004     00CD  3000               	movlw	0
 16005     00CE  00D1               	movwf	(___flmul@a+3)^(0+128)
 16006     00CF  3000               	movlw	0
 16007     00D0  00D0               	movwf	(___flmul@a+2)^(0+128)
 16008     00D1  3000               	movlw	0
 16009     00D2  00CF               	movwf	(___flmul@a+1)^(0+128)
 16010     00D3  3000               	movlw	0
 16011     00D4  00CE               	movwf	___flmul@a^(0+128)
 16012     00D5                     l4844:
 16013     00D5  17D0               	bsf	(___flmul@a^(0+128)+2),7
 16014     00D6  28DF               	goto	l4848
 16015     00D7                     l4846:
 16016     00D7  3000               	movlw	0
 16017     00D8  00D1               	movwf	(___flmul@a+3)^(0+128)
 16018     00D9  3000               	movlw	0
 16019     00DA  00D0               	movwf	(___flmul@a+2)^(0+128)
 16020     00DB  3000               	movlw	0
 16021     00DC  00CF               	movwf	(___flmul@a+1)^(0+128)
 16022     00DD  3000               	movlw	0
 16023     00DE  00CE               	movwf	___flmul@a^(0+128)
 16024     00DF                     l4848:
 16025     00DF  085C               	movf	___flmul@aexp^(0+128),w
 16026     00E0  1903               	btfsc	3,2
 16027     00E1  28E3               	goto	u5251
 16028     00E2  28E4               	goto	u5250
 16029     00E3                     u5251:
 16030     00E3  28E9               	goto	l4852
 16031     00E4                     u5250:
 16032     00E4                     l4850:
 16033     00E4  085D               	movf	___flmul@bexp^(0+128),w
 16034     00E5  1D03               	btfss	3,2
 16035     00E6  28E8               	goto	u5261
 16036     00E7  28E9               	goto	u5260
 16037     00E8                     u5261:
 16038     00E8  28F2               	goto	l4856
 16039     00E9                     u5260:
 16040     00E9                     l4852:
 16041     00E9  3000               	movlw	0
 16042     00EA  00CD               	movwf	(?___flmul+3)^(0+128)
 16043     00EB  3000               	movlw	0
 16044     00EC  00CC               	movwf	(?___flmul+2)^(0+128)
 16045     00ED  3000               	movlw	0
 16046     00EE  00CB               	movwf	(?___flmul+1)^(0+128)
 16047     00EF  3000               	movlw	0
 16048     00F0  00CA               	movwf	?___flmul^(0+128)
 16049     00F1  2ACC               	goto	l1612
 16050     00F2                     l4856:
 16051     00F2  084A               	movf	___flmul@b^(0+128),w
 16052     00F3  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16053     00F4  0850               	movf	(___flmul@a^(0+128)+2),w
 16054     00F5  319D  2559  3180   	fcall	__Umul8_16
 16055     00F8  0021               	movlb	1	; select bank1
 16056     00F9  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16057     00FA  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16058     00FB  0820               	movf	?__Umul8_16^(0+128),w
 16059     00FC  00E2               	movwf	___flmul@temp^(0+128)
 16060     00FD                     l4858:
 16061     00FD  0862               	movf	___flmul@temp^(0+128),w
 16062     00FE  00D2               	movwf	??___flmul^(0+128)
 16063     00FF  01D3               	clrf	(??___flmul^(0+128)+1)
 16064     0100  01D4               	clrf	(??___flmul^(0+128)+2)
 16065     0101  01D5               	clrf	(??___flmul^(0+128)+3)
 16066     0102  0855               	movf	(??___flmul+3)^(0+128),w
 16067     0103  00DB               	movwf	(___flmul@grs+3)^(0+128)
 16068     0104  0854               	movf	(??___flmul+2)^(0+128),w
 16069     0105  00DA               	movwf	(___flmul@grs+2)^(0+128)
 16070     0106  0853               	movf	(??___flmul+1)^(0+128),w
 16071     0107  00D9               	movwf	(___flmul@grs+1)^(0+128)
 16072     0108  0852               	movf	??___flmul^(0+128),w
 16073     0109  00D8               	movwf	___flmul@grs^(0+128)
 16074     010A                     l4860:
 16075     010A  0863               	movf	(___flmul@temp^(0+128)+1),w
 16076     010B  00D2               	movwf	??___flmul^(0+128)
 16077     010C  01D3               	clrf	(??___flmul^(0+128)+1)
 16078     010D  01D4               	clrf	(??___flmul^(0+128)+2)
 16079     010E  01D5               	clrf	(??___flmul^(0+128)+3)
 16080     010F  0855               	movf	(??___flmul+3)^(0+128),w
 16081     0110  00E1               	movwf	(___flmul@prod+3)^(0+128)
 16082     0111  0854               	movf	(??___flmul+2)^(0+128),w
 16083     0112  00E0               	movwf	(___flmul@prod+2)^(0+128)
 16084     0113  0853               	movf	(??___flmul+1)^(0+128),w
 16085     0114  00DF               	movwf	(___flmul@prod+1)^(0+128)
 16086     0115  0852               	movf	??___flmul^(0+128),w
 16087     0116  00DE               	movwf	___flmul@prod^(0+128)
 16088     0117  084B               	movf	(___flmul@b^(0+128)+1),w
 16089     0118  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16090     0119  084F               	movf	(___flmul@a^(0+128)+1),w
 16091     011A  319D  2559  3180   	fcall	__Umul8_16
 16092     011D  0021               	movlb	1	; select bank1
 16093     011E  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16094     011F  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16095     0120  0820               	movf	?__Umul8_16^(0+128),w
 16096     0121  00E2               	movwf	___flmul@temp^(0+128)
 16097     0122                     l4862:
 16098     0122  0862               	movf	___flmul@temp^(0+128),w
 16099     0123  00D2               	movwf	??___flmul^(0+128)
 16100     0124  01D3               	clrf	(??___flmul^(0+128)+1)
 16101     0125  01D4               	clrf	(??___flmul^(0+128)+2)
 16102     0126  01D5               	clrf	(??___flmul^(0+128)+3)
 16103     0127  0852               	movf	??___flmul^(0+128),w
 16104     0128  07D8               	addwf	___flmul@grs^(0+128),f
 16105     0129  0853               	movf	(??___flmul+1)^(0+128),w
 16106     012A  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16107     012B  0854               	movf	(??___flmul+2)^(0+128),w
 16108     012C  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16109     012D  0855               	movf	(??___flmul+3)^(0+128),w
 16110     012E  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16111     012F                     l4864:
 16112     012F  0863               	movf	(___flmul@temp^(0+128)+1),w
 16113     0130  00D2               	movwf	??___flmul^(0+128)
 16114     0131  01D3               	clrf	(??___flmul^(0+128)+1)
 16115     0132  01D4               	clrf	(??___flmul^(0+128)+2)
 16116     0133  01D5               	clrf	(??___flmul^(0+128)+3)
 16117     0134  0852               	movf	??___flmul^(0+128),w
 16118     0135  07DE               	addwf	___flmul@prod^(0+128),f
 16119     0136  0853               	movf	(??___flmul+1)^(0+128),w
 16120     0137  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16121     0138  0854               	movf	(??___flmul+2)^(0+128),w
 16122     0139  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16123     013A  0855               	movf	(??___flmul+3)^(0+128),w
 16124     013B  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16125     013C  084C               	movf	(___flmul@b^(0+128)+2),w
 16126     013D  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16127     013E  084E               	movf	___flmul@a^(0+128),w
 16128     013F  319D  2559  3180   	fcall	__Umul8_16
 16129     0142  0021               	movlb	1	; select bank1
 16130     0143  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16131     0144  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16132     0145  0820               	movf	?__Umul8_16^(0+128),w
 16133     0146  00E2               	movwf	___flmul@temp^(0+128)
 16134     0147                     l4866:
 16135     0147  0862               	movf	___flmul@temp^(0+128),w
 16136     0148  00D2               	movwf	??___flmul^(0+128)
 16137     0149  01D3               	clrf	(??___flmul^(0+128)+1)
 16138     014A  01D4               	clrf	(??___flmul^(0+128)+2)
 16139     014B  01D5               	clrf	(??___flmul^(0+128)+3)
 16140     014C  0852               	movf	??___flmul^(0+128),w
 16141     014D  07D8               	addwf	___flmul@grs^(0+128),f
 16142     014E  0853               	movf	(??___flmul+1)^(0+128),w
 16143     014F  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16144     0150  0854               	movf	(??___flmul+2)^(0+128),w
 16145     0151  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16146     0152  0855               	movf	(??___flmul+3)^(0+128),w
 16147     0153  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16148     0154                     l4868:
 16149     0154  0863               	movf	(___flmul@temp^(0+128)+1),w
 16150     0155  00D2               	movwf	??___flmul^(0+128)
 16151     0156  01D3               	clrf	(??___flmul^(0+128)+1)
 16152     0157  01D4               	clrf	(??___flmul^(0+128)+2)
 16153     0158  01D5               	clrf	(??___flmul^(0+128)+3)
 16154     0159  0852               	movf	??___flmul^(0+128),w
 16155     015A  07DE               	addwf	___flmul@prod^(0+128),f
 16156     015B  0853               	movf	(??___flmul+1)^(0+128),w
 16157     015C  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16158     015D  0854               	movf	(??___flmul+2)^(0+128),w
 16159     015E  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16160     015F  0855               	movf	(??___flmul+3)^(0+128),w
 16161     0160  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16162     0161                     l4870:
 16163     0161  3008               	movlw	8
 16164     0162                     u5275:
 16165     0162  35D8               	lslf	___flmul@grs^(0+128),f
 16166     0163  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16167     0164  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16168     0165  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16169     0166  0B89               	decfsz	9,f
 16170     0167  2962               	goto	u5275
 16171     0168                     l4872:
 16172     0168  084B               	movf	(___flmul@b^(0+128)+1),w
 16173     0169  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16174     016A  084E               	movf	___flmul@a^(0+128),w
 16175     016B  319D  2559  3180   	fcall	__Umul8_16
 16176     016E  0021               	movlb	1	; select bank1
 16177     016F  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16178     0170  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16179     0171  0820               	movf	?__Umul8_16^(0+128),w
 16180     0172  00E2               	movwf	___flmul@temp^(0+128)
 16181     0173                     l4874:
 16182     0173  0862               	movf	___flmul@temp^(0+128),w
 16183     0174  07D8               	addwf	___flmul@grs^(0+128),f
 16184     0175  0863               	movf	(___flmul@temp+1)^(0+128),w
 16185     0176  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16186     0177  3000               	movlw	0
 16187     0178  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16188     0179  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16189     017A                     l4876:
 16190     017A  084A               	movf	___flmul@b^(0+128),w
 16191     017B  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16192     017C  084F               	movf	(___flmul@a^(0+128)+1),w
 16193     017D  319D  2559  3180   	fcall	__Umul8_16
 16194     0180  0021               	movlb	1	; select bank1
 16195     0181  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16196     0182  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16197     0183  0820               	movf	?__Umul8_16^(0+128),w
 16198     0184  00E2               	movwf	___flmul@temp^(0+128)
 16199     0185                     l4878:
 16200     0185  0862               	movf	___flmul@temp^(0+128),w
 16201     0186  07D8               	addwf	___flmul@grs^(0+128),f
 16202     0187  0863               	movf	(___flmul@temp+1)^(0+128),w
 16203     0188  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16204     0189  3000               	movlw	0
 16205     018A  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16206     018B  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16207     018C                     l4880:
 16208     018C  3008               	movlw	8
 16209     018D                     u5285:
 16210     018D  35D8               	lslf	___flmul@grs^(0+128),f
 16211     018E  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16212     018F  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16213     0190  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16214     0191  0B89               	decfsz	9,f
 16215     0192  298D               	goto	u5285
 16216     0193  084A               	movf	___flmul@b^(0+128),w
 16217     0194  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16218     0195  084E               	movf	___flmul@a^(0+128),w
 16219     0196  319D  2559  3180   	fcall	__Umul8_16
 16220     0199  0021               	movlb	1	; select bank1
 16221     019A  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16222     019B  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16223     019C  0820               	movf	?__Umul8_16^(0+128),w
 16224     019D  00E2               	movwf	___flmul@temp^(0+128)
 16225     019E                     l4882:
 16226     019E  0862               	movf	___flmul@temp^(0+128),w
 16227     019F  07D8               	addwf	___flmul@grs^(0+128),f
 16228     01A0  0863               	movf	(___flmul@temp+1)^(0+128),w
 16229     01A1  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 16230     01A2  3000               	movlw	0
 16231     01A3  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 16232     01A4  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 16233     01A5                     l4884:
 16234     01A5  084B               	movf	(___flmul@b^(0+128)+1),w
 16235     01A6  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16236     01A7  0850               	movf	(___flmul@a^(0+128)+2),w
 16237     01A8  319D  2559  3180   	fcall	__Umul8_16
 16238     01AB  0021               	movlb	1	; select bank1
 16239     01AC  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16240     01AD  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16241     01AE  0820               	movf	?__Umul8_16^(0+128),w
 16242     01AF  00E2               	movwf	___flmul@temp^(0+128)
 16243     01B0  0862               	movf	___flmul@temp^(0+128),w
 16244     01B1  07DE               	addwf	___flmul@prod^(0+128),f
 16245     01B2  0863               	movf	(___flmul@temp+1)^(0+128),w
 16246     01B3  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16247     01B4  3000               	movlw	0
 16248     01B5  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16249     01B6  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16250     01B7                     l4886:
 16251     01B7  084C               	movf	(___flmul@b^(0+128)+2),w
 16252     01B8  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16253     01B9  084F               	movf	(___flmul@a^(0+128)+1),w
 16254     01BA  319D  2559  3180   	fcall	__Umul8_16
 16255     01BD  0021               	movlb	1	; select bank1
 16256     01BE  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16257     01BF  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16258     01C0  0820               	movf	?__Umul8_16^(0+128),w
 16259     01C1  00E2               	movwf	___flmul@temp^(0+128)
 16260     01C2                     l4888:
 16261     01C2  0862               	movf	___flmul@temp^(0+128),w
 16262     01C3  07DE               	addwf	___flmul@prod^(0+128),f
 16263     01C4  0863               	movf	(___flmul@temp+1)^(0+128),w
 16264     01C5  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16265     01C6  3000               	movlw	0
 16266     01C7  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16267     01C8  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16268     01C9  084C               	movf	(___flmul@b^(0+128)+2),w
 16269     01CA  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 16270     01CB  0850               	movf	(___flmul@a^(0+128)+2),w
 16271     01CC  319D  2559  3180   	fcall	__Umul8_16
 16272     01CF  0021               	movlb	1	; select bank1
 16273     01D0  0821               	movf	(?__Umul8_16+1)^(0+128),w
 16274     01D1  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16275     01D2  0820               	movf	?__Umul8_16^(0+128),w
 16276     01D3  00E2               	movwf	___flmul@temp^(0+128)
 16277     01D4                     l4890:
 16278     01D4  0862               	movf	___flmul@temp^(0+128),w
 16279     01D5  00D2               	movwf	??___flmul^(0+128)
 16280     01D6  0863               	movf	(___flmul@temp+1)^(0+128),w
 16281     01D7  00D3               	movwf	(??___flmul^(0+128)+1)
 16282     01D8  01D4               	clrf	(??___flmul^(0+128)+2)
 16283     01D9  01D5               	clrf	(??___flmul^(0+128)+3)
 16284     01DA  3008               	movlw	8
 16285     01DB                     u5295:
 16286     01DB  35D2               	lslf	??___flmul^(0+128),f
 16287     01DC  0DD3               	rlf	(??___flmul^(0+128)+1),f
 16288     01DD  0DD4               	rlf	(??___flmul^(0+128)+2),f
 16289     01DE  0DD5               	rlf	(??___flmul^(0+128)+3),f
 16290     01DF                     u5290:
 16291     01DF  0B89               	decfsz	9,f
 16292     01E0  29DB               	goto	u5295
 16293     01E1  0852               	movf	??___flmul^(0+128),w
 16294     01E2  07DE               	addwf	___flmul@prod^(0+128),f
 16295     01E3  0853               	movf	(??___flmul+1)^(0+128),w
 16296     01E4  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16297     01E5  0854               	movf	(??___flmul+2)^(0+128),w
 16298     01E6  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16299     01E7  0855               	movf	(??___flmul+3)^(0+128),w
 16300     01E8  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16301     01E9                     l4892:
 16302     01E9  0858               	movf	___flmul@grs^(0+128),w
 16303     01EA  00D2               	movwf	??___flmul^(0+128)
 16304     01EB  0859               	movf	(___flmul@grs+1)^(0+128),w
 16305     01EC  00D3               	movwf	(??___flmul^(0+128)+1)
 16306     01ED  085A               	movf	(___flmul@grs+2)^(0+128),w
 16307     01EE  00D4               	movwf	(??___flmul^(0+128)+2)
 16308     01EF  085B               	movf	(___flmul@grs+3)^(0+128),w
 16309     01F0  00D5               	movwf	(??___flmul^(0+128)+3)
 16310     01F1  3018               	movlw	24
 16311     01F2                     u5305:
 16312     01F2  36D5               	lsrf	(??___flmul^(0+128)+3),f
 16313     01F3  0CD4               	rrf	(??___flmul^(0+128)+2),f
 16314     01F4  0CD3               	rrf	(??___flmul^(0+128)+1),f
 16315     01F5  0CD2               	rrf	??___flmul^(0+128),f
 16316     01F6                     u5300:
 16317     01F6  0B89               	decfsz	9,f
 16318     01F7  29F2               	goto	u5305
 16319     01F8  0852               	movf	??___flmul^(0+128),w
 16320     01F9  07DE               	addwf	___flmul@prod^(0+128),f
 16321     01FA  0853               	movf	(??___flmul+1)^(0+128),w
 16322     01FB  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16323     01FC  0854               	movf	(??___flmul+2)^(0+128),w
 16324     01FD  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16325     01FE  0855               	movf	(??___flmul+3)^(0+128),w
 16326     01FF  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16327     0200                     l4894:
 16328     0200  3008               	movlw	8
 16329     0201                     u5315:
 16330     0201  35D8               	lslf	___flmul@grs^(0+128),f
 16331     0202  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16332     0203  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16333     0204  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16334     0205  0B89               	decfsz	9,f
 16335     0206  2A01               	goto	u5315
 16336     0207                     l4896:
 16337     0207  085D               	movf	___flmul@bexp^(0+128),w
 16338     0208  075C               	addwf	___flmul@aexp^(0+128),w
 16339     0209  00D2               	movwf	??___flmul^(0+128)
 16340     020A  01D3               	clrf	(??___flmul^(0+128)+1)
 16341     020B  0DD3               	rlf	(??___flmul+1)^(0+128),f
 16342     020C  0852               	movf	??___flmul^(0+128),w
 16343     020D  3E82               	addlw	130
 16344     020E  00E2               	movwf	___flmul@temp^(0+128)
 16345     020F  30FF               	movlw	255
 16346     0210  3D53               	addwfc	(??___flmul+1)^(0+128),w
 16347     0211  00E3               	movwf	(___flmul@temp+1)^(0+128)
 16348     0212  2A2A               	goto	l4908
 16349     0213                     l4898:
 16350     0213  3001               	movlw	1
 16351     0214                     u5325:
 16352     0214  35DE               	lslf	___flmul@prod^(0+128),f
 16353     0215  0DDF               	rlf	(___flmul@prod+1)^(0+128),f
 16354     0216  0DE0               	rlf	(___flmul@prod+2)^(0+128),f
 16355     0217  0DE1               	rlf	(___flmul@prod+3)^(0+128),f
 16356     0218  0B89               	decfsz	9,f
 16357     0219  2A14               	goto	u5325
 16358     021A                     l4900:
 16359     021A  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 16360     021B  2A1D               	goto	u5331
 16361     021C  2A1E               	goto	u5330
 16362     021D                     u5331:
 16363     021D  2A1F               	goto	l4904
 16364     021E                     u5330:
 16365     021E                     l4902:
 16366     021E  145E               	bsf	___flmul@prod^(0+128),0
 16367     021F                     l4904:
 16368     021F  3001               	movlw	1
 16369     0220                     u5345:
 16370     0220  35D8               	lslf	___flmul@grs^(0+128),f
 16371     0221  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 16372     0222  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 16373     0223  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 16374     0224  0B89               	decfsz	9,f
 16375     0225  2A20               	goto	u5345
 16376     0226                     l4906:
 16377     0226  30FF               	movlw	255
 16378     0227  07E2               	addwf	___flmul@temp^(0+128),f
 16379     0228  30FF               	movlw	255
 16380     0229  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 16381     022A                     l4908:
 16382     022A  1FE0               	btfss	(___flmul@prod+2)^(0+128),7
 16383     022B  2A2D               	goto	u5351
 16384     022C  2A2E               	goto	u5350
 16385     022D                     u5351:
 16386     022D  2A13               	goto	l4898
 16387     022E                     u5350:
 16388     022E                     l4910:
 16389     022E  01DC               	clrf	___flmul@aexp^(0+128)
 16390     022F                     l4912:
 16391     022F  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 16392     0230  2A32               	goto	u5361
 16393     0231  2A33               	goto	u5360
 16394     0232                     u5361:
 16395     0232  2A4F               	goto	l4920
 16396     0233                     u5360:
 16397     0233                     l4914:
 16398     0233  30FF               	movlw	255
 16399     0234  0558               	andwf	___flmul@grs^(0+128),w
 16400     0235  00D2               	movwf	??___flmul^(0+128)
 16401     0236  30FF               	movlw	255
 16402     0237  0559               	andwf	(___flmul@grs+1)^(0+128),w
 16403     0238  00D3               	movwf	(??___flmul^(0+128)+1)
 16404     0239  30FF               	movlw	255
 16405     023A  055A               	andwf	(___flmul@grs+2)^(0+128),w
 16406     023B  00D4               	movwf	(??___flmul^(0+128)+2)
 16407     023C  307F               	movlw	127
 16408     023D  055B               	andwf	(___flmul@grs+3)^(0+128),w
 16409     023E  00D5               	movwf	(??___flmul^(0+128)+3)
 16410     023F  0855               	movf	(??___flmul+3)^(0+128),w
 16411     0240  0454               	iorwf	(??___flmul+2)^(0+128),w
 16412     0241  0453               	iorwf	(??___flmul+1)^(0+128),w
 16413     0242  0452               	iorwf	??___flmul^(0+128),w
 16414     0243  1903               	skipnz
 16415     0244  2A46               	goto	u5371
 16416     0245  2A47               	goto	u5370
 16417     0246                     u5371:
 16418     0246  2A4A               	goto	l1618
 16419     0247                     u5370:
 16420     0247                     l4916:
 16421     0247  3001               	movlw	1
 16422     0248  00DC               	movwf	___flmul@aexp^(0+128)
 16423     0249  2A4F               	goto	l4920
 16424     024A                     l1618:
 16425     024A  1C5E               	btfss	___flmul@prod^(0+128),0
 16426     024B  2A4D               	goto	u5381
 16427     024C  2A4E               	goto	u5380
 16428     024D                     u5381:
 16429     024D  2A4F               	goto	l4920
 16430     024E                     u5380:
 16431     024E  2A47               	goto	l4916
 16432     024F                     l4920:
 16433     024F  085C               	movf	___flmul@aexp^(0+128),w
 16434     0250  1903               	btfsc	3,2
 16435     0251  2A53               	goto	u5391
 16436     0252  2A54               	goto	u5390
 16437     0253                     u5391:
 16438     0253  2A7A               	goto	l4930
 16439     0254                     u5390:
 16440     0254                     l4922:
 16441     0254  3001               	movlw	1
 16442     0255  07DE               	addwf	___flmul@prod^(0+128),f
 16443     0256  3000               	movlw	0
 16444     0257  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 16445     0258  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 16446     0259  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 16447     025A                     l4924:
 16448     025A  1C61               	btfss	(___flmul@prod+3)^(0+128),0
 16449     025B  2A5D               	goto	u5401
 16450     025C  2A5E               	goto	u5400
 16451     025D                     u5401:
 16452     025D  2A7A               	goto	l4930
 16453     025E                     u5400:
 16454     025E                     l4926:
 16455     025E  085E               	movf	___flmul@prod^(0+128),w
 16456     025F  00D2               	movwf	??___flmul^(0+128)
 16457     0260  085F               	movf	(___flmul@prod+1)^(0+128),w
 16458     0261  00D3               	movwf	(??___flmul^(0+128)+1)
 16459     0262  0860               	movf	(___flmul@prod+2)^(0+128),w
 16460     0263  00D4               	movwf	(??___flmul^(0+128)+2)
 16461     0264  0861               	movf	(___flmul@prod+3)^(0+128),w
 16462     0265  00D5               	movwf	(??___flmul^(0+128)+3)
 16463     0266  3001               	movlw	1
 16464     0267  00D6               	movwf	(??___flmul+4)^(0+128)
 16465     0268                     u5415:
 16466     0268  37D5               	asrf	(??___flmul^(0+128)+3),f
 16467     0269  0CD4               	rrf	(??___flmul^(0+128)+2),f
 16468     026A  0CD3               	rrf	(??___flmul^(0+128)+1),f
 16469     026B  0CD2               	rrf	??___flmul^(0+128),f
 16470     026C                     u5410:
 16471     026C  0BD6               	decfsz	(??___flmul+4)^(0+128),f
 16472     026D  2A68               	goto	u5415
 16473     026E  0855               	movf	(??___flmul+3)^(0+128),w
 16474     026F  00E1               	movwf	(___flmul@prod+3)^(0+128)
 16475     0270  0854               	movf	(??___flmul+2)^(0+128),w
 16476     0271  00E0               	movwf	(___flmul@prod+2)^(0+128)
 16477     0272  0853               	movf	(??___flmul+1)^(0+128),w
 16478     0273  00DF               	movwf	(___flmul@prod+1)^(0+128)
 16479     0274  0852               	movf	??___flmul^(0+128),w
 16480     0275  00DE               	movwf	___flmul@prod^(0+128)
 16481     0276                     l4928:
 16482     0276  3001               	movlw	1
 16483     0277  07E2               	addwf	___flmul@temp^(0+128),f
 16484     0278  3000               	movlw	0
 16485     0279  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 16486     027A                     l4930:
 16487     027A  0863               	movf	(___flmul@temp+1)^(0+128),w
 16488     027B  3A80               	xorlw	128
 16489     027C  00D2               	movwf	??___flmul^(0+128)
 16490     027D  3080               	movlw	128
 16491     027E  0252               	subwf	??___flmul^(0+128),w
 16492     027F  1D03               	skipz
 16493     0280  2A83               	goto	u5425
 16494     0281  30FF               	movlw	255
 16495     0282  0262               	subwf	___flmul@temp^(0+128),w
 16496     0283                     u5425:
 16497     0283  1C03               	skipc
 16498     0284  2A86               	goto	u5421
 16499     0285  2A87               	goto	u5420
 16500     0286                     u5421:
 16501     0286  2A91               	goto	l4934
 16502     0287                     u5420:
 16503     0287                     l4932:
 16504     0287  307F               	movlw	127
 16505     0288  0021               	movlb	1	; select bank1
 16506     0289  00E1               	movwf	(___flmul@prod+3)^(0+128)
 16507     028A  3080               	movlw	128
 16508     028B  00E0               	movwf	(___flmul@prod+2)^(0+128)
 16509     028C  3000               	movlw	0
 16510     028D  00DF               	movwf	(___flmul@prod+1)^(0+128)
 16511     028E  3000               	movlw	0
 16512     028F  00DE               	movwf	___flmul@prod^(0+128)
 16513     0290  2AC2               	goto	l1624
 16514     0291                     l4934:
 16515     0291  0021               	movlb	1	; select bank1
 16516     0292  0863               	movf	(___flmul@temp+1)^(0+128),w
 16517     0293  3A80               	xorlw	128
 16518     0294  00D2               	movwf	??___flmul^(0+128)
 16519     0295  3080               	movlw	128
 16520     0296  0252               	subwf	??___flmul^(0+128),w
 16521     0297  1D03               	skipz
 16522     0298  2A9B               	goto	u5435
 16523     0299  3001               	movlw	1
 16524     029A  0262               	subwf	___flmul@temp^(0+128),w
 16525     029B                     u5435:
 16526     029B  1803               	skipnc
 16527     029C  2A9E               	goto	u5431
 16528     029D  2A9F               	goto	u5430
 16529     029E                     u5431:
 16530     029E  2AAA               	goto	l4940
 16531     029F                     u5430:
 16532     029F                     l4936:
 16533     029F  3000               	movlw	0
 16534     02A0  0021               	movlb	1	; select bank1
 16535     02A1  00E1               	movwf	(___flmul@prod+3)^(0+128)
 16536     02A2  3000               	movlw	0
 16537     02A3  00E0               	movwf	(___flmul@prod+2)^(0+128)
 16538     02A4  3000               	movlw	0
 16539     02A5  00DF               	movwf	(___flmul@prod+1)^(0+128)
 16540     02A6  3000               	movlw	0
 16541     02A7  00DE               	movwf	___flmul@prod^(0+128)
 16542     02A8                     l4938:
 16543     02A8  01D7               	clrf	___flmul@sign^(0+128)
 16544     02A9  2AC2               	goto	l1624
 16545     02AA                     l4940:
 16546     02AA  0021               	movlb	1	; select bank1
 16547     02AB  0862               	movf	___flmul@temp^(0+128),w
 16548     02AC  00DD               	movwf	___flmul@bexp^(0+128)
 16549     02AD  30FF               	movlw	255
 16550     02AE  05DE               	andwf	___flmul@prod^(0+128),f
 16551     02AF  30FF               	movlw	255
 16552     02B0  05DF               	andwf	(___flmul@prod+1)^(0+128),f
 16553     02B1  307F               	movlw	127
 16554     02B2  05E0               	andwf	(___flmul@prod+2)^(0+128),f
 16555     02B3  3000               	movlw	0
 16556     02B4  05E1               	andwf	(___flmul@prod+3)^(0+128),f
 16557     02B5                     l4942:
 16558     02B5  1C5D               	btfss	___flmul@bexp^(0+128),0
 16559     02B6  2AB8               	goto	u5441
 16560     02B7  2AB9               	goto	u5440
 16561     02B8                     u5441:
 16562     02B8  2ABA               	goto	l4946
 16563     02B9                     u5440:
 16564     02B9                     l4944:
 16565     02B9  17E0               	bsf	(___flmul@prod^(0+128)+2),7
 16566     02BA                     l4946:
 16567     02BA  085D               	movf	___flmul@bexp^(0+128),w
 16568     02BB  00D2               	movwf	??___flmul^(0+128)
 16569     02BC  3001               	movlw	1
 16570     02BD                     u5455:
 16571     02BD  36D2               	lsrf	??___flmul^(0+128),f
 16572     02BE  0B89               	decfsz	9,f
 16573     02BF  2ABD               	goto	u5455
 16574     02C0  0852               	movf	??___flmul^(0+128),w
 16575     02C1  00E1               	movwf	(___flmul@prod^(0+128)+3)
 16576     02C2                     l1624:
 16577     02C2  0857               	movf	___flmul@sign^(0+128),w
 16578     02C3  04E1               	iorwf	(___flmul@prod^(0+128)+3),f
 16579     02C4                     l4948:
 16580     02C4  0861               	movf	(___flmul@prod+3)^(0+128),w
 16581     02C5  00CD               	movwf	(?___flmul+3)^(0+128)
 16582     02C6  0860               	movf	(___flmul@prod+2)^(0+128),w
 16583     02C7  00CC               	movwf	(?___flmul+2)^(0+128)
 16584     02C8  085F               	movf	(___flmul@prod+1)^(0+128),w
 16585     02C9  00CB               	movwf	(?___flmul+1)^(0+128)
 16586     02CA  085E               	movf	___flmul@prod^(0+128),w
 16587     02CB  00CA               	movwf	?___flmul^(0+128)
 16588     02CC                     l1612:
 16589     02CC  0008               	return
 16590     02CD                     __end_of___flmul:
 16591                           
 16592                           	psect	text59
 16593     1D59                     __ptext59:	
 16594 ;; *************** function __Umul8_16 *****************
 16595 ;; Defined at:
 16596 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;  multiplier      1    wreg     unsigned char 
 16599 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  multiplier      1    8[BANK1 ] unsigned char 
 16602 ;;  word_mpld       2    6[BANK1 ] unsigned short 
 16603 ;;  product         2    4[BANK1 ] unsigned short 
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  2    0[BANK1 ] unsigned int 
 16606 ;; Registers used:
 16607 ;;		wreg, status,2, status,0
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16613 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16614 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16615 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16616 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 16617 ;;Total ram usage:        9 bytes
 16618 ;; Hardware stack levels used: 1
 16619 ;; Hardware stack levels required when called: 5
 16620 ;; This function calls:
 16621 ;;		Nothing
 16622 ;; This function is called by:
 16623 ;;		___flmul
 16624 ;; This function uses a non-reentrant model
 16625 ;;
 16626                           
 16627     1D59                     __Umul8_16:	
 16628                           ;psect for function __Umul8_16
 16629                           
 16630                           
 16631                           ;incstack = 0
 16632                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16633                           ;__Umul8_16@multiplier stored from wreg
 16634     1D59  0021               	movlb	1	; select bank1
 16635     1D5A  00A8               	movwf	__Umul8_16@multiplier^(0+128)
 16636     1D5B                     l4466:
 16637     1D5B  01A4               	clrf	__Umul8_16@product^(0+128)
 16638     1D5C  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
 16639     1D5D                     l4468:
 16640     1D5D  0820               	movf	__Umul8_16@multiplicand^(0+128),w
 16641     1D5E  00A2               	movwf	??__Umul8_16^(0+128)
 16642     1D5F  01A3               	clrf	(??__Umul8_16^(0+128)+1)
 16643     1D60  0822               	movf	??__Umul8_16^(0+128),w
 16644     1D61  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
 16645     1D62  0823               	movf	(??__Umul8_16+1)^(0+128),w
 16646     1D63  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
 16647     1D64                     l4470:
 16648     1D64  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
 16649     1D65  2D67               	goto	u4421
 16650     1D66  2D68               	goto	u4420
 16651     1D67                     u4421:
 16652     1D67  2D6C               	goto	l1631
 16653     1D68                     u4420:
 16654     1D68                     l4472:
 16655     1D68  0826               	movf	__Umul8_16@word_mpld^(0+128),w
 16656     1D69  07A4               	addwf	__Umul8_16@product^(0+128),f
 16657     1D6A  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
 16658     1D6B  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
 16659     1D6C                     l1631:
 16660     1D6C  3001               	movlw	1
 16661     1D6D                     u4435:
 16662     1D6D  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
 16663     1D6E  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
 16664     1D6F  0B89               	decfsz	9,f
 16665     1D70  2D6D               	goto	u4435
 16666     1D71  1003               	clrc
 16667     1D72  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
 16668     1D73                     l4474:
 16669     1D73  0828               	movf	__Umul8_16@multiplier^(0+128),w
 16670     1D74  1D03               	btfss	3,2
 16671     1D75  2D77               	goto	u4441
 16672     1D76  2D78               	goto	u4440
 16673     1D77                     u4441:
 16674     1D77  2D64               	goto	l4470
 16675     1D78                     u4440:
 16676     1D78                     l4476:
 16677     1D78  0825               	movf	(__Umul8_16@product+1)^(0+128),w
 16678     1D79  00A1               	movwf	(?__Umul8_16+1)^(0+128)
 16679     1D7A  0824               	movf	__Umul8_16@product^(0+128),w
 16680     1D7B  00A0               	movwf	?__Umul8_16^(0+128)
 16681     1D7C                     l1633:
 16682     1D7C  0008               	return
 16683     1D7D                     __end_of__Umul8_16:
 16684                           
 16685                           	psect	text60
 16686     0508                     __ptext60:	
 16687 ;; *************** function ___fladd *****************
 16688 ;; Defined at:
 16689 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 16690 ;; Parameters:    Size  Location     Type
 16691 ;;  b               4   14[BANK1 ] unsigned int 
 16692 ;;  a               4   18[BANK1 ] unsigned int 
 16693 ;; Auto vars:     Size  Location     Type
 16694 ;;  grs             1   33[BANK1 ] unsigned char 
 16695 ;;  bexp            1   32[BANK1 ] unsigned char 
 16696 ;;  aexp            1   31[BANK1 ] unsigned char 
 16697 ;;  signs           1   30[BANK1 ] unsigned char 
 16698 ;; Return value:  Size  Location     Type
 16699 ;;                  4   14[BANK1 ] unsigned char 
 16700 ;; Registers used:
 16701 ;;		wreg, status,2, status,0
 16702 ;; Tracked objects:
 16703 ;;		On entry : 0/0
 16704 ;;		On exit  : 0/0
 16705 ;;		Unchanged: 0/0
 16706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16707 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 16708 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16709 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 16710 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 16711 ;;Total ram usage:       20 bytes
 16712 ;; Hardware stack levels used: 1
 16713 ;; Hardware stack levels required when called: 5
 16714 ;; This function calls:
 16715 ;;		Nothing
 16716 ;; This function is called by:
 16717 ;;		_str2float
 16718 ;;		_getLedNumber
 16719 ;;		___flsub
 16720 ;; This function uses a non-reentrant model
 16721 ;;
 16722                           
 16723     0508                     ___fladd:	
 16724                           ;psect for function ___fladd
 16725                           
 16726     0508                     l4616:	
 16727                           ;incstack = 0
 16728                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16729                           
 16730     0508  0021               	movlb	1	; select bank1
 16731     0509  0831               	movf	(___fladd@b^(0+128)+3),w
 16732     050A  3980               	andlw	128
 16733     050B  00BE               	movwf	___fladd@signs^(0+128)
 16734     050C                     l4618:
 16735     050C  3531               	lslf	(___fladd@b^(0+128)+3),w
 16736     050D  00C0               	movwf	___fladd@bexp^(0+128)
 16737     050E                     l4620:
 16738     050E  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 16739     050F  2D11               	goto	u4731
 16740     0510  2D12               	goto	u4730
 16741     0511                     u4731:
 16742     0511  2D13               	goto	l4624
 16743     0512                     u4730:
 16744     0512                     l4622:
 16745     0512  1440               	bsf	___fladd@bexp^(0+128),0
 16746     0513                     l4624:
 16747     0513  0840               	movf	___fladd@bexp^(0+128),w
 16748     0514  1903               	btfsc	3,2
 16749     0515  2D17               	goto	u4741
 16750     0516  2D18               	goto	u4740
 16751     0517                     u4741:
 16752     0517  2D28               	goto	l4634
 16753     0518                     u4740:
 16754     0518                     l4626:
 16755     0518  0A40               	incf	___fladd@bexp^(0+128),w
 16756     0519  1D03               	btfss	3,2
 16757     051A  2D1C               	goto	u4751
 16758     051B  2D1D               	goto	u4750
 16759     051C                     u4751:
 16760     051C  2D25               	goto	l4630
 16761     051D                     u4750:
 16762     051D                     l4628:
 16763     051D  3000               	movlw	0
 16764     051E  00B1               	movwf	(___fladd@b+3)^(0+128)
 16765     051F  3000               	movlw	0
 16766     0520  00B0               	movwf	(___fladd@b+2)^(0+128)
 16767     0521  3000               	movlw	0
 16768     0522  00AF               	movwf	(___fladd@b+1)^(0+128)
 16769     0523  3000               	movlw	0
 16770     0524  00AE               	movwf	___fladd@b^(0+128)
 16771     0525                     l4630:
 16772     0525  17B0               	bsf	(___fladd@b^(0+128)+2),7
 16773     0526                     l4632:
 16774     0526  01B1               	clrf	(___fladd@b^(0+128)+3)
 16775     0527  2D30               	goto	l4636
 16776     0528                     l4634:
 16777     0528  3000               	movlw	0
 16778     0529  00B1               	movwf	(___fladd@b+3)^(0+128)
 16779     052A  3000               	movlw	0
 16780     052B  00B0               	movwf	(___fladd@b+2)^(0+128)
 16781     052C  3000               	movlw	0
 16782     052D  00AF               	movwf	(___fladd@b+1)^(0+128)
 16783     052E  3000               	movlw	0
 16784     052F  00AE               	movwf	___fladd@b^(0+128)
 16785     0530                     l4636:
 16786     0530  0835               	movf	(___fladd@a^(0+128)+3),w
 16787     0531  3980               	andlw	128
 16788     0532  00BF               	movwf	___fladd@aexp^(0+128)
 16789     0533                     l4638:
 16790     0533  083F               	movf	___fladd@aexp^(0+128),w
 16791     0534  063E               	xorwf	___fladd@signs^(0+128),w
 16792     0535  1903               	skipnz
 16793     0536  2D38               	goto	u4761
 16794     0537  2D39               	goto	u4760
 16795     0538                     u4761:
 16796     0538  2D3A               	goto	l4642
 16797     0539                     u4760:
 16798     0539                     l4640:
 16799     0539  173E               	bsf	___fladd@signs^(0+128),6
 16800     053A                     l4642:
 16801     053A  3535               	lslf	(___fladd@a^(0+128)+3),w
 16802     053B  00BF               	movwf	___fladd@aexp^(0+128)
 16803     053C                     l4644:
 16804     053C  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 16805     053D  2D3F               	goto	u4771
 16806     053E  2D40               	goto	u4770
 16807     053F                     u4771:
 16808     053F  2D41               	goto	l4648
 16809     0540                     u4770:
 16810     0540                     l4646:
 16811     0540  143F               	bsf	___fladd@aexp^(0+128),0
 16812     0541                     l4648:
 16813     0541  083F               	movf	___fladd@aexp^(0+128),w
 16814     0542  1903               	btfsc	3,2
 16815     0543  2D45               	goto	u4781
 16816     0544  2D46               	goto	u4780
 16817     0545                     u4781:
 16818     0545  2D56               	goto	l4658
 16819     0546                     u4780:
 16820     0546                     l4650:
 16821     0546  0A3F               	incf	___fladd@aexp^(0+128),w
 16822     0547  1D03               	btfss	3,2
 16823     0548  2D4A               	goto	u4791
 16824     0549  2D4B               	goto	u4790
 16825     054A                     u4791:
 16826     054A  2D53               	goto	l4654
 16827     054B                     u4790:
 16828     054B                     l4652:
 16829     054B  3000               	movlw	0
 16830     054C  00B5               	movwf	(___fladd@a+3)^(0+128)
 16831     054D  3000               	movlw	0
 16832     054E  00B4               	movwf	(___fladd@a+2)^(0+128)
 16833     054F  3000               	movlw	0
 16834     0550  00B3               	movwf	(___fladd@a+1)^(0+128)
 16835     0551  3000               	movlw	0
 16836     0552  00B2               	movwf	___fladd@a^(0+128)
 16837     0553                     l4654:
 16838     0553  17B4               	bsf	(___fladd@a^(0+128)+2),7
 16839     0554                     l4656:
 16840     0554  01B5               	clrf	(___fladd@a^(0+128)+3)
 16841     0555  2D5E               	goto	l1516
 16842     0556                     l4658:
 16843     0556  3000               	movlw	0
 16844     0557  00B5               	movwf	(___fladd@a+3)^(0+128)
 16845     0558  3000               	movlw	0
 16846     0559  00B4               	movwf	(___fladd@a+2)^(0+128)
 16847     055A  3000               	movlw	0
 16848     055B  00B3               	movwf	(___fladd@a+1)^(0+128)
 16849     055C  3000               	movlw	0
 16850     055D  00B2               	movwf	___fladd@a^(0+128)
 16851     055E                     l1516:
 16852     055E  0840               	movf	___fladd@bexp^(0+128),w
 16853     055F  023F               	subwf	___fladd@aexp^(0+128),w
 16854     0560  1803               	skipnc
 16855     0561  2D63               	goto	u4801
 16856     0562  2D64               	goto	u4800
 16857     0563                     u4801:
 16858     0563  2D88               	goto	l4694
 16859     0564                     u4800:
 16860     0564                     l4660:
 16861     0564  1F3E               	btfss	___fladd@signs^(0+128),6
 16862     0565  2D67               	goto	u4811
 16863     0566  2D68               	goto	u4810
 16864     0567                     u4811:
 16865     0567  2D6A               	goto	l4664
 16866     0568                     u4810:
 16867     0568                     l4662:
 16868     0568  3080               	movlw	128
 16869     0569  06BE               	xorwf	___fladd@signs^(0+128),f
 16870     056A                     l4664:
 16871     056A  0840               	movf	___fladd@bexp^(0+128),w
 16872     056B  00C1               	movwf	___fladd@grs^(0+128)
 16873     056C                     l4666:
 16874     056C  083F               	movf	___fladd@aexp^(0+128),w
 16875     056D  00C0               	movwf	___fladd@bexp^(0+128)
 16876     056E                     l4668:
 16877     056E  0841               	movf	___fladd@grs^(0+128),w
 16878     056F  00BF               	movwf	___fladd@aexp^(0+128)
 16879     0570                     l4670:
 16880     0570  082E               	movf	___fladd@b^(0+128),w
 16881     0571  00C1               	movwf	___fladd@grs^(0+128)
 16882     0572                     l4672:
 16883     0572  0832               	movf	___fladd@a^(0+128),w
 16884     0573  00AE               	movwf	___fladd@b^(0+128)
 16885     0574                     l4674:
 16886     0574  0841               	movf	___fladd@grs^(0+128),w
 16887     0575  00B2               	movwf	___fladd@a^(0+128)
 16888     0576                     l4676:
 16889     0576  082F               	movf	(___fladd@b^(0+128)+1),w
 16890     0577  00C1               	movwf	___fladd@grs^(0+128)
 16891     0578                     l4678:
 16892     0578  0833               	movf	(___fladd@a^(0+128)+1),w
 16893     0579  00AF               	movwf	(___fladd@b^(0+128)+1)
 16894     057A                     l4680:
 16895     057A  0841               	movf	___fladd@grs^(0+128),w
 16896     057B  00B3               	movwf	(___fladd@a^(0+128)+1)
 16897     057C                     l4682:
 16898     057C  0830               	movf	(___fladd@b^(0+128)+2),w
 16899     057D  00C1               	movwf	___fladd@grs^(0+128)
 16900     057E                     l4684:
 16901     057E  0834               	movf	(___fladd@a^(0+128)+2),w
 16902     057F  00B0               	movwf	(___fladd@b^(0+128)+2)
 16903     0580                     l4686:
 16904     0580  0841               	movf	___fladd@grs^(0+128),w
 16905     0581  00B4               	movwf	(___fladd@a^(0+128)+2)
 16906     0582                     l4688:
 16907     0582  0831               	movf	(___fladd@b^(0+128)+3),w
 16908     0583  00C1               	movwf	___fladd@grs^(0+128)
 16909     0584                     l4690:
 16910     0584  0835               	movf	(___fladd@a^(0+128)+3),w
 16911     0585  00B1               	movwf	(___fladd@b^(0+128)+3)
 16912     0586                     l4692:
 16913     0586  0841               	movf	___fladd@grs^(0+128),w
 16914     0587  00B5               	movwf	(___fladd@a^(0+128)+3)
 16915     0588                     l4694:
 16916     0588  01C1               	clrf	___fladd@grs^(0+128)
 16917     0589                     l4696:
 16918     0589  083F               	movf	___fladd@aexp^(0+128),w
 16919     058A  00B6               	movwf	??___fladd^(0+128)
 16920     058B  01B7               	clrf	(??___fladd^(0+128)+1)
 16921     058C  0837               	movf	(??___fladd+1)^(0+128),w
 16922     058D  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 16923     058E  0840               	movf	___fladd@bexp^(0+128),w
 16924     058F  0236               	subwf	??___fladd^(0+128),w
 16925     0590  00B8               	movwf	(??___fladd+2)^(0+128)
 16926     0591  1C03               	skipc
 16927     0592  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 16928     0593  0839               	movf	(??___fladd+3)^(0+128),w
 16929     0594  3A80               	xorlw	128
 16930     0595  00BA               	movwf	(??___fladd+4)^(0+128)
 16931     0596  3080               	movlw	128
 16932     0597  023A               	subwf	(??___fladd+4)^(0+128),w
 16933     0598  1D03               	skipz
 16934     0599  2D9C               	goto	u4825
 16935     059A  301A               	movlw	26
 16936     059B  0238               	subwf	(??___fladd+2)^(0+128),w
 16937     059C                     u4825:
 16938     059C  1C03               	skipc
 16939     059D  2D9F               	goto	u4821
 16940     059E  2DA0               	goto	u4820
 16941     059F                     u4821:
 16942     059F  2DD6               	goto	l4712
 16943     05A0                     u4820:
 16944     05A0                     l4698:
 16945     05A0  0021               	movlb	1	; select bank1
 16946     05A1  0831               	movf	(___fladd@b+3)^(0+128),w
 16947     05A2  0430               	iorwf	(___fladd@b+2)^(0+128),w
 16948     05A3  042F               	iorwf	(___fladd@b+1)^(0+128),w
 16949     05A4  042E               	iorwf	___fladd@b^(0+128),w
 16950     05A5  1D03               	skipz
 16951     05A6  2DA8               	goto	u4831
 16952     05A7  2DAA               	goto	u4830
 16953     05A8                     u4831:
 16954     05A8  3001               	movlw	1
 16955     05A9  2DAB               	goto	u4840
 16956     05AA                     u4830:
 16957     05AA  3000               	movlw	0
 16958     05AB                     u4840:
 16959     05AB  00C1               	movwf	___fladd@grs^(0+128)
 16960     05AC  3000               	movlw	0
 16961     05AD  00B1               	movwf	(___fladd@b+3)^(0+128)
 16962     05AE  3000               	movlw	0
 16963     05AF  00B0               	movwf	(___fladd@b+2)^(0+128)
 16964     05B0  3000               	movlw	0
 16965     05B1  00AF               	movwf	(___fladd@b+1)^(0+128)
 16966     05B2  3000               	movlw	0
 16967     05B3  00AE               	movwf	___fladd@b^(0+128)
 16968     05B4  083F               	movf	___fladd@aexp^(0+128),w
 16969     05B5  00C0               	movwf	___fladd@bexp^(0+128)
 16970     05B6  2DDD               	goto	l1520
 16971     05B7                     l1522:
 16972     05B7  1C41               	btfss	___fladd@grs^(0+128),0
 16973     05B8  2DBA               	goto	u4851
 16974     05B9  2DBB               	goto	u4850
 16975     05BA                     u4851:
 16976     05BA  2DC5               	goto	l4702
 16977     05BB                     u4850:
 16978     05BB                     l4700:
 16979     05BB  0841               	movf	___fladd@grs^(0+128),w
 16980     05BC  00B6               	movwf	??___fladd^(0+128)
 16981     05BD  3001               	movlw	1
 16982     05BE                     u4865:
 16983     05BE  36B6               	lsrf	??___fladd^(0+128),f
 16984     05BF  0B89               	decfsz	9,f
 16985     05C0  2DBE               	goto	u4865
 16986     05C1  0836               	movf	??___fladd^(0+128),w
 16987     05C2  3801               	iorlw	1
 16988     05C3  00C1               	movwf	___fladd@grs^(0+128)
 16989     05C4  2DC7               	goto	l4704
 16990     05C5                     l4702:
 16991     05C5  1003               	clrc
 16992     05C6  0CC1               	rrf	___fladd@grs^(0+128),f
 16993     05C7                     l4704:
 16994     05C7  1C2E               	btfss	___fladd@b^(0+128),0
 16995     05C8  2DCA               	goto	u4871
 16996     05C9  2DCB               	goto	u4870
 16997     05CA                     u4871:
 16998     05CA  2DCC               	goto	l4708
 16999     05CB                     u4870:
 17000     05CB                     l4706:
 17001     05CB  17C1               	bsf	___fladd@grs^(0+128),7
 17002     05CC                     l4708:
 17003     05CC  3001               	movlw	1
 17004     05CD  00B6               	movwf	??___fladd^(0+128)
 17005     05CE                     u4885:
 17006     05CE  37B1               	asrf	(___fladd@b+3)^(0+128),f
 17007     05CF  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 17008     05D0  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 17009     05D1  0CAE               	rrf	___fladd@b^(0+128),f
 17010     05D2  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 17011     05D3  2DCE               	goto	u4885
 17012     05D4                     l4710:
 17013     05D4  3001               	movlw	1
 17014     05D5  07C0               	addwf	___fladd@bexp^(0+128),f
 17015     05D6                     l4712:
 17016     05D6  0021               	movlb	1	; select bank1
 17017     05D7  083F               	movf	___fladd@aexp^(0+128),w
 17018     05D8  0240               	subwf	___fladd@bexp^(0+128),w
 17019     05D9  1C03               	skipc
 17020     05DA  2DDC               	goto	u4891
 17021     05DB  2DDD               	goto	u4890
 17022     05DC                     u4891:
 17023     05DC  2DB7               	goto	l1522
 17024     05DD                     u4890:
 17025     05DD                     l1520:
 17026     05DD  1B3E               	btfsc	___fladd@signs^(0+128),6
 17027     05DE  2DE0               	goto	u4901
 17028     05DF  2DE1               	goto	u4900
 17029     05E0                     u4901:
 17030     05E0  2E1B               	goto	l4738
 17031     05E1                     u4900:
 17032     05E1                     l4714:
 17033     05E1  0840               	movf	___fladd@bexp^(0+128),w
 17034     05E2  1D03               	btfss	3,2
 17035     05E3  2DE5               	goto	u4911
 17036     05E4  2DE6               	goto	u4910
 17037     05E5                     u4911:
 17038     05E5  2DEF               	goto	l4720
 17039     05E6                     u4910:
 17040     05E6                     l4716:
 17041     05E6  3000               	movlw	0
 17042     05E7  00B1               	movwf	(?___fladd+3)^(0+128)
 17043     05E8  3000               	movlw	0
 17044     05E9  00B0               	movwf	(?___fladd+2)^(0+128)
 17045     05EA  3000               	movlw	0
 17046     05EB  00AF               	movwf	(?___fladd+1)^(0+128)
 17047     05EC  3000               	movlw	0
 17048     05ED  00AE               	movwf	?___fladd^(0+128)
 17049     05EE  2F13               	goto	l1529
 17050     05EF                     l4720:
 17051     05EF  0832               	movf	___fladd@a^(0+128),w
 17052     05F0  07AE               	addwf	___fladd@b^(0+128),f
 17053     05F1  0833               	movf	(___fladd@a+1)^(0+128),w
 17054     05F2  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 17055     05F3  0834               	movf	(___fladd@a+2)^(0+128),w
 17056     05F4  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 17057     05F5  0835               	movf	(___fladd@a+3)^(0+128),w
 17058     05F6  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 17059     05F7                     l4722:
 17060     05F7  1C31               	btfss	(___fladd@b+3)^(0+128),0
 17061     05F8  2DFA               	goto	u4921
 17062     05F9  2DFB               	goto	u4920
 17063     05FA                     u4921:
 17064     05FA  2EA5               	goto	l4774
 17065     05FB                     u4920:
 17066     05FB                     l4724:
 17067     05FB  1C41               	btfss	___fladd@grs^(0+128),0
 17068     05FC  2DFE               	goto	u4931
 17069     05FD  2DFF               	goto	u4930
 17070     05FE                     u4931:
 17071     05FE  2E09               	goto	l4728
 17072     05FF                     u4930:
 17073     05FF                     l4726:
 17074     05FF  0841               	movf	___fladd@grs^(0+128),w
 17075     0600  00B6               	movwf	??___fladd^(0+128)
 17076     0601  3001               	movlw	1
 17077     0602                     u4945:
 17078     0602  36B6               	lsrf	??___fladd^(0+128),f
 17079     0603  0B89               	decfsz	9,f
 17080     0604  2E02               	goto	u4945
 17081     0605  0836               	movf	??___fladd^(0+128),w
 17082     0606  3801               	iorlw	1
 17083     0607  00C1               	movwf	___fladd@grs^(0+128)
 17084     0608  2E0B               	goto	l4730
 17085     0609                     l4728:
 17086     0609  1003               	clrc
 17087     060A  0CC1               	rrf	___fladd@grs^(0+128),f
 17088     060B                     l4730:
 17089     060B  1C2E               	btfss	___fladd@b^(0+128),0
 17090     060C  2E0E               	goto	u4951
 17091     060D  2E0F               	goto	u4950
 17092     060E                     u4951:
 17093     060E  2E10               	goto	l4734
 17094     060F                     u4950:
 17095     060F                     l4732:
 17096     060F  17C1               	bsf	___fladd@grs^(0+128),7
 17097     0610                     l4734:
 17098     0610  3001               	movlw	1
 17099     0611  00B6               	movwf	??___fladd^(0+128)
 17100     0612                     u4965:
 17101     0612  37B1               	asrf	(___fladd@b+3)^(0+128),f
 17102     0613  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 17103     0614  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 17104     0615  0CAE               	rrf	___fladd@b^(0+128),f
 17105     0616  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 17106     0617  2E12               	goto	u4965
 17107     0618                     l4736:
 17108     0618  3001               	movlw	1
 17109     0619  07C0               	addwf	___fladd@bexp^(0+128),f
 17110     061A  2EA5               	goto	l4774
 17111     061B                     l4738:
 17112     061B  0831               	movf	(___fladd@b+3)^(0+128),w
 17113     061C  3A80               	xorlw	128
 17114     061D  00B6               	movwf	??___fladd^(0+128)
 17115     061E  0835               	movf	(___fladd@a+3)^(0+128),w
 17116     061F  3A80               	xorlw	128
 17117     0620  0236               	subwf	??___fladd^(0+128),w
 17118     0621  1D03               	skipz
 17119     0622  2E2D               	goto	u4973
 17120     0623  0834               	movf	(___fladd@a+2)^(0+128),w
 17121     0624  0230               	subwf	(___fladd@b+2)^(0+128),w
 17122     0625  1D03               	skipz
 17123     0626  2E2D               	goto	u4973
 17124     0627  0833               	movf	(___fladd@a+1)^(0+128),w
 17125     0628  022F               	subwf	(___fladd@b+1)^(0+128),w
 17126     0629  1D03               	skipz
 17127     062A  2E2D               	goto	u4973
 17128     062B  0832               	movf	___fladd@a^(0+128),w
 17129     062C  022E               	subwf	___fladd@b^(0+128),w
 17130     062D                     u4973:
 17131     062D  1803               	skipnc
 17132     062E  2E30               	goto	u4971
 17133     062F  2E31               	goto	u4970
 17134     0630                     u4971:
 17135     0630  2E66               	goto	l4750
 17136     0631                     u4970:
 17137     0631                     l4740:
 17138     0631  30FF               	movlw	255
 17139     0632  00B6               	movwf	??___fladd^(0+128)
 17140     0633  30FF               	movlw	255
 17141     0634  00B7               	movwf	(??___fladd^(0+128)+1)
 17142     0635  30FF               	movlw	255
 17143     0636  00B8               	movwf	(??___fladd^(0+128)+2)
 17144     0637  30FF               	movlw	255
 17145     0638  00B9               	movwf	(??___fladd^(0+128)+3)
 17146     0639  082E               	movf	___fladd@b^(0+128),w
 17147     063A  0232               	subwf	___fladd@a^(0+128),w
 17148     063B  00BA               	movwf	(??___fladd+4)^(0+128)
 17149     063C  082F               	movf	(___fladd@b+1)^(0+128),w
 17150     063D  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 17151     063E  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 17152     063F  0830               	movf	(___fladd@b+2)^(0+128),w
 17153     0640  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 17154     0641  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 17155     0642  0831               	movf	(___fladd@b+3)^(0+128),w
 17156     0643  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 17157     0644  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 17158     0645  083A               	movf	(??___fladd+4)^(0+128),w
 17159     0646  07B6               	addwf	??___fladd^(0+128),f
 17160     0647  083B               	movf	(??___fladd+5)^(0+128),w
 17161     0648  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 17162     0649  083C               	movf	(??___fladd+6)^(0+128),w
 17163     064A  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 17164     064B  083D               	movf	(??___fladd+7)^(0+128),w
 17165     064C  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 17166     064D  0839               	movf	(??___fladd+3)^(0+128),w
 17167     064E  00B1               	movwf	(___fladd@b+3)^(0+128)
 17168     064F  0838               	movf	(??___fladd+2)^(0+128),w
 17169     0650  00B0               	movwf	(___fladd@b+2)^(0+128)
 17170     0651  0837               	movf	(??___fladd+1)^(0+128),w
 17171     0652  00AF               	movwf	(___fladd@b+1)^(0+128)
 17172     0653  0836               	movf	??___fladd^(0+128),w
 17173     0654  00AE               	movwf	___fladd@b^(0+128)
 17174     0655                     l4742:
 17175     0655  3080               	movlw	128
 17176     0656  06BE               	xorwf	___fladd@signs^(0+128),f
 17177     0657                     l4744:
 17178     0657  0341               	decf	___fladd@grs^(0+128),w
 17179     0658  3AFF               	xorlw	255
 17180     0659  00C1               	movwf	___fladd@grs^(0+128)
 17181     065A                     l4746:
 17182     065A  0841               	movf	___fladd@grs^(0+128),w
 17183     065B  1D03               	btfss	3,2
 17184     065C  2E5E               	goto	u4981
 17185     065D  2E5F               	goto	u4980
 17186     065E                     u4981:
 17187     065E  2E6E               	goto	l1537
 17188     065F                     u4980:
 17189     065F                     l4748:
 17190     065F  3001               	movlw	1
 17191     0660  07AE               	addwf	___fladd@b^(0+128),f
 17192     0661  3000               	movlw	0
 17193     0662  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 17194     0663  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 17195     0664  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 17196     0665  2E6E               	goto	l1537
 17197     0666                     l4750:
 17198     0666  0832               	movf	___fladd@a^(0+128),w
 17199     0667  02AE               	subwf	___fladd@b^(0+128),f
 17200     0668  0833               	movf	(___fladd@a+1)^(0+128),w
 17201     0669  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 17202     066A  0834               	movf	(___fladd@a+2)^(0+128),w
 17203     066B  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 17204     066C  0835               	movf	(___fladd@a+3)^(0+128),w
 17205     066D  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 17206     066E                     l1537:
 17207     066E  0831               	movf	(___fladd@b+3)^(0+128),w
 17208     066F  0430               	iorwf	(___fladd@b+2)^(0+128),w
 17209     0670  042F               	iorwf	(___fladd@b+1)^(0+128),w
 17210     0671  042E               	iorwf	___fladd@b^(0+128),w
 17211     0672  1D03               	skipz
 17212     0673  2E75               	goto	u4991
 17213     0674  2E76               	goto	u4990
 17214     0675                     u4991:
 17215     0675  2EA1               	goto	l4772
 17216     0676                     u4990:
 17217     0676                     l4752:
 17218     0676  0841               	movf	___fladd@grs^(0+128),w
 17219     0677  1D03               	btfss	3,2
 17220     0678  2E7A               	goto	u5001
 17221     0679  2E7B               	goto	u5000
 17222     067A                     u5001:
 17223     067A  2EA1               	goto	l4772
 17224     067B                     u5000:
 17225     067B                     l4754:
 17226     067B  3000               	movlw	0
 17227     067C  00B1               	movwf	(?___fladd+3)^(0+128)
 17228     067D  3000               	movlw	0
 17229     067E  00B0               	movwf	(?___fladd+2)^(0+128)
 17230     067F  3000               	movlw	0
 17231     0680  00AF               	movwf	(?___fladd+1)^(0+128)
 17232     0681  3000               	movlw	0
 17233     0682  00AE               	movwf	?___fladd^(0+128)
 17234     0683  2F13               	goto	l1529
 17235     0684                     l4758:
 17236     0684  3001               	movlw	1
 17237     0685                     u5015:
 17238     0685  35AE               	lslf	___fladd@b^(0+128),f
 17239     0686  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 17240     0687  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 17241     0688  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 17242     0689  0B89               	decfsz	9,f
 17243     068A  2E85               	goto	u5015
 17244     068B                     l4760:
 17245     068B  1FC1               	btfss	___fladd@grs^(0+128),7
 17246     068C  2E8E               	goto	u5021
 17247     068D  2E8F               	goto	u5020
 17248     068E                     u5021:
 17249     068E  2E90               	goto	l1541
 17250     068F                     u5020:
 17251     068F                     l4762:
 17252     068F  142E               	bsf	___fladd@b^(0+128),0
 17253     0690                     l1541:
 17254     0690  1C41               	btfss	___fladd@grs^(0+128),0
 17255     0691  2E93               	goto	u5031
 17256     0692  2E94               	goto	u5030
 17257     0693                     u5031:
 17258     0693  2E98               	goto	l4766
 17259     0694                     u5030:
 17260     0694                     l4764:
 17261     0694  1403               	setc
 17262     0695  0D41               	rlf	___fladd@grs^(0+128),w
 17263     0696  00C1               	movwf	___fladd@grs^(0+128)
 17264     0697  2E9A               	goto	l4768
 17265     0698                     l4766:
 17266     0698  1003               	clrc
 17267     0699  0DC1               	rlf	___fladd@grs^(0+128),f
 17268     069A                     l4768:
 17269     069A  0840               	movf	___fladd@bexp^(0+128),w
 17270     069B  1903               	btfsc	3,2
 17271     069C  2E9E               	goto	u5041
 17272     069D  2E9F               	goto	u5040
 17273     069E                     u5041:
 17274     069E  2EA1               	goto	l4772
 17275     069F                     u5040:
 17276     069F                     l4770:
 17277     069F  3001               	movlw	1
 17278     06A0  02C0               	subwf	___fladd@bexp^(0+128),f
 17279     06A1                     l4772:
 17280     06A1  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 17281     06A2  2EA4               	goto	u5051
 17282     06A3  2EA5               	goto	u5050
 17283     06A4                     u5051:
 17284     06A4  2E84               	goto	l4758
 17285     06A5                     u5050:
 17286     06A5                     l4774:
 17287     06A5  01BF               	clrf	___fladd@aexp^(0+128)
 17288     06A6                     l4776:
 17289     06A6  1FC1               	btfss	___fladd@grs^(0+128),7
 17290     06A7  2EA9               	goto	u5061
 17291     06A8  2EAA               	goto	u5060
 17292     06A9                     u5061:
 17293     06A9  2EB8               	goto	l4784
 17294     06AA                     u5060:
 17295     06AA                     l4778:
 17296     06AA  0841               	movf	___fladd@grs^(0+128),w
 17297     06AB  397F               	andlw	127
 17298     06AC  1903               	btfsc	3,2
 17299     06AD  2EAF               	goto	u5071
 17300     06AE  2EB0               	goto	u5070
 17301     06AF                     u5071:
 17302     06AF  2EB3               	goto	l1547
 17303     06B0                     u5070:
 17304     06B0                     l4780:
 17305     06B0  3001               	movlw	1
 17306     06B1  00BF               	movwf	___fladd@aexp^(0+128)
 17307     06B2  2EB8               	goto	l4784
 17308     06B3                     l1547:
 17309     06B3  1C2E               	btfss	___fladd@b^(0+128),0
 17310     06B4  2EB6               	goto	u5081
 17311     06B5  2EB7               	goto	u5080
 17312     06B6                     u5081:
 17313     06B6  2EB8               	goto	l4784
 17314     06B7                     u5080:
 17315     06B7  2EB0               	goto	l4780
 17316     06B8                     l4784:
 17317     06B8  083F               	movf	___fladd@aexp^(0+128),w
 17318     06B9  1903               	btfsc	3,2
 17319     06BA  2EBC               	goto	u5091
 17320     06BB  2EBD               	goto	u5090
 17321     06BC                     u5091:
 17322     06BC  2EE6               	goto	l1550
 17323     06BD                     u5090:
 17324     06BD                     l4786:
 17325     06BD  3001               	movlw	1
 17326     06BE  07AE               	addwf	___fladd@b^(0+128),f
 17327     06BF  3000               	movlw	0
 17328     06C0  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 17329     06C1  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 17330     06C2  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 17331     06C3                     l4788:
 17332     06C3  1C31               	btfss	(___fladd@b+3)^(0+128),0
 17333     06C4  2EC6               	goto	u5101
 17334     06C5  2EC7               	goto	u5100
 17335     06C6                     u5101:
 17336     06C6  2EE6               	goto	l1550
 17337     06C7                     u5100:
 17338     06C7                     l4790:
 17339     06C7  082E               	movf	___fladd@b^(0+128),w
 17340     06C8  00B6               	movwf	??___fladd^(0+128)
 17341     06C9  082F               	movf	(___fladd@b+1)^(0+128),w
 17342     06CA  00B7               	movwf	(??___fladd^(0+128)+1)
 17343     06CB  0830               	movf	(___fladd@b+2)^(0+128),w
 17344     06CC  00B8               	movwf	(??___fladd^(0+128)+2)
 17345     06CD  0831               	movf	(___fladd@b+3)^(0+128),w
 17346     06CE  00B9               	movwf	(??___fladd^(0+128)+3)
 17347     06CF  3001               	movlw	1
 17348     06D0  00BA               	movwf	(??___fladd+4)^(0+128)
 17349     06D1                     u5115:
 17350     06D1  37B9               	asrf	(??___fladd^(0+128)+3),f
 17351     06D2  0CB8               	rrf	(??___fladd^(0+128)+2),f
 17352     06D3  0CB7               	rrf	(??___fladd^(0+128)+1),f
 17353     06D4  0CB6               	rrf	??___fladd^(0+128),f
 17354     06D5                     u5110:
 17355     06D5  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 17356     06D6  2ED1               	goto	u5115
 17357     06D7  0839               	movf	(??___fladd+3)^(0+128),w
 17358     06D8  00B1               	movwf	(___fladd@b+3)^(0+128)
 17359     06D9  0838               	movf	(??___fladd+2)^(0+128),w
 17360     06DA  00B0               	movwf	(___fladd@b+2)^(0+128)
 17361     06DB  0837               	movf	(??___fladd+1)^(0+128),w
 17362     06DC  00AF               	movwf	(___fladd@b+1)^(0+128)
 17363     06DD  0836               	movf	??___fladd^(0+128),w
 17364     06DE  00AE               	movwf	___fladd@b^(0+128)
 17365     06DF  0A40               	incf	___fladd@bexp^(0+128),w
 17366     06E0  1903               	btfsc	3,2
 17367     06E1  2EE3               	goto	u5121
 17368     06E2  2EE4               	goto	u5120
 17369     06E3                     u5121:
 17370     06E3  2EE6               	goto	l1550
 17371     06E4                     u5120:
 17372     06E4                     l4792:
 17373     06E4  3001               	movlw	1
 17374     06E5  07C0               	addwf	___fladd@bexp^(0+128),f
 17375     06E6                     l1550:
 17376     06E6  0A40               	incf	___fladd@bexp^(0+128),w
 17377     06E7  1903               	btfsc	3,2
 17378     06E8  2EEA               	goto	u5131
 17379     06E9  2EEB               	goto	u5130
 17380     06EA                     u5131:
 17381     06EA  2EF0               	goto	l4796
 17382     06EB                     u5130:
 17383     06EB                     l4794:
 17384     06EB  0840               	movf	___fladd@bexp^(0+128),w
 17385     06EC  1D03               	btfss	3,2
 17386     06ED  2EEF               	goto	u5141
 17387     06EE  2EF0               	goto	u5140
 17388     06EF                     u5141:
 17389     06EF  2EFE               	goto	l4802
 17390     06F0                     u5140:
 17391     06F0                     l4796:
 17392     06F0  3000               	movlw	0
 17393     06F1  00B1               	movwf	(___fladd@b+3)^(0+128)
 17394     06F2  3000               	movlw	0
 17395     06F3  00B0               	movwf	(___fladd@b+2)^(0+128)
 17396     06F4  3000               	movlw	0
 17397     06F5  00AF               	movwf	(___fladd@b+1)^(0+128)
 17398     06F6  3000               	movlw	0
 17399     06F7  00AE               	movwf	___fladd@b^(0+128)
 17400     06F8                     l4798:
 17401     06F8  0840               	movf	___fladd@bexp^(0+128),w
 17402     06F9  1D03               	btfss	3,2
 17403     06FA  2EFC               	goto	u5151
 17404     06FB  2EFD               	goto	u5150
 17405     06FC                     u5151:
 17406     06FC  2EFE               	goto	l4802
 17407     06FD                     u5150:
 17408     06FD                     l4800:
 17409     06FD  01BE               	clrf	___fladd@signs^(0+128)
 17410     06FE                     l4802:
 17411     06FE  1C40               	btfss	___fladd@bexp^(0+128),0
 17412     06FF  2F01               	goto	u5161
 17413     0700  2F02               	goto	u5160
 17414     0701                     u5161:
 17415     0701  2F04               	goto	l4806
 17416     0702                     u5160:
 17417     0702                     l4804:
 17418     0702  17B0               	bsf	(___fladd@b^(0+128)+2),7
 17419     0703  2F06               	goto	l1558
 17420     0704                     l4806:
 17421     0704  307F               	movlw	127
 17422     0705  05B0               	andwf	(___fladd@b^(0+128)+2),f
 17423     0706                     l1558:
 17424     0706  0840               	movf	___fladd@bexp^(0+128),w
 17425     0707  00B6               	movwf	??___fladd^(0+128)
 17426     0708  3001               	movlw	1
 17427     0709                     u5175:
 17428     0709  36B6               	lsrf	??___fladd^(0+128),f
 17429     070A  0B89               	decfsz	9,f
 17430     070B  2F09               	goto	u5175
 17431     070C  0836               	movf	??___fladd^(0+128),w
 17432     070D  00B1               	movwf	(___fladd@b^(0+128)+3)
 17433     070E                     l4808:
 17434     070E  1FBE               	btfss	___fladd@signs^(0+128),7
 17435     070F  2F11               	goto	u5181
 17436     0710  2F12               	goto	u5180
 17437     0711                     u5181:
 17438     0711  2F13               	goto	l1559
 17439     0712                     u5180:
 17440     0712                     l4810:
 17441     0712  17B1               	bsf	(___fladd@b^(0+128)+3),7
 17442     0713                     l1559:
 17443     0713                     l1529:
 17444     0713  0008               	return
 17445     0714                     __end_of___fladd:
 17446                           
 17447                           	psect	text61
 17448     1A48                     __ptext61:	
 17449 ;; *************** function _getHoogtesensor *****************
 17450 ;; Defined at:
 17451 ;;		line 37 in file "adcMeasurements.c"
 17452 ;; Parameters:    Size  Location     Type
 17453 ;;		None
 17454 ;; Auto vars:     Size  Location     Type
 17455 ;;		None
 17456 ;; Return value:  Size  Location     Type
 17457 ;;                  2    0[BANK1 ] unsigned short 
 17458 ;; Registers used:
 17459 ;;		wreg
 17460 ;; Tracked objects:
 17461 ;;		On entry : 0/0
 17462 ;;		On exit  : 0/0
 17463 ;;		Unchanged: 0/0
 17464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17465 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17469 ;;Total ram usage:        2 bytes
 17470 ;; Hardware stack levels used: 1
 17471 ;; Hardware stack levels required when called: 5
 17472 ;; This function calls:
 17473 ;;		Nothing
 17474 ;; This function is called by:
 17475 ;;		_printLogs
 17476 ;;		_position_led_strip
 17477 ;; This function uses a non-reentrant model
 17478 ;;
 17479                           
 17480     1A48                     _getHoogtesensor:	
 17481                           ;psect for function _getHoogtesensor
 17482                           
 17483     1A48                     l5080:	
 17484                           ;incstack = 0
 17485                           ; Regs used in _getHoogtesensor: [wreg]
 17486                           
 17487                           
 17488                           ;adcMeasurements.c: 38:     return ADC_hoogtesensor;
 17489     1A48  0020               	movlb	0	; select bank0
 17490     1A49  085F               	movf	_ADC_hoogtesensor+1,w	;volatile
 17491     1A4A  0021               	movlb	1	; select bank1
 17492     1A4B  00A1               	movwf	(?_getHoogtesensor+1)^(0+128)
 17493     1A4C  0020               	movlb	0	; select bank0
 17494     1A4D  085E               	movf	_ADC_hoogtesensor,w	;volatile
 17495     1A4E  0021               	movlb	1	; select bank1
 17496     1A4F  00A0               	movwf	?_getHoogtesensor^(0+128)
 17497     1A50                     l857:
 17498     1A50  0008               	return
 17499     1A51                     __end_of_getHoogtesensor:
 17500                           
 17501                           	psect	text62
 17502     1A3F                     __ptext62:	
 17503 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 17504 ;; Defined at:
 17505 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 17506 ;; Parameters:    Size  Location     Type
 17507 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 17508 ;;		 -> controller(1), 
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;		None
 17511 ;; Return value:  Size  Location     Type
 17512 ;;                  1    wreg      void 
 17513 ;; Registers used:
 17514 ;;		wreg
 17515 ;; Tracked objects:
 17516 ;;		On entry : 0/0
 17517 ;;		On exit  : 0/0
 17518 ;;		Unchanged: 0/0
 17519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17520 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17523 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17524 ;;Total ram usage:        2 bytes
 17525 ;; Hardware stack levels used: 1
 17526 ;; Hardware stack levels required when called: 5
 17527 ;; This function calls:
 17528 ;;		Nothing
 17529 ;; This function is called by:
 17530 ;;		_main
 17531 ;; This function uses a non-reentrant model
 17532 ;;
 17533                           
 17534     1A3F                     _TMR4_PeriodMatchCallbackRegister:	
 17535                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 17536                           
 17537     1A3F                     l6188:	
 17538                           ;incstack = 0
 17539                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 17540                           
 17541                           
 17542                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 17543     1A3F  0021               	movlb	1	; select bank1
 17544     1A40  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 17545     1A41  0022               	movlb	2	; select bank2
 17546     1A42  00EA               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 17547     1A43  0021               	movlb	1	; select bank1
 17548     1A44  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 17549     1A45  0022               	movlb	2	; select bank2
 17550     1A46  00E9               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 17551     1A47                     l494:
 17552     1A47  0008               	return
 17553     1A48                     __end_of_TMR4_PeriodMatchCallbackRegister:
 17554                           
 17555                           	psect	text63
 17556     1D14                     __ptext63:	
 17557 ;; *************** function _SYSTEM_Initialize *****************
 17558 ;; Defined at:
 17559 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 17560 ;; Parameters:    Size  Location     Type
 17561 ;;		None
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;		None
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  1    wreg      void 
 17566 ;; Registers used:
 17567 ;;		wreg, status,2, status,0, pclath, cstack
 17568 ;; Tracked objects:
 17569 ;;		On entry : 0/0
 17570 ;;		On exit  : 0/0
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17577 ;;Total ram usage:        0 bytes
 17578 ;; Hardware stack levels used: 1
 17579 ;; Hardware stack levels required when called: 7
 17580 ;; This function calls:
 17581 ;;		_ADC_Initialize
 17582 ;;		_CLOCK_Initialize
 17583 ;;		_EUSART_Initialize
 17584 ;;		_INTERRUPT_Initialize
 17585 ;;		_PIN_MANAGER_Initialize
 17586 ;;		_PWM_buzzer_Initialize
 17587 ;;		_SPI1_Initialize
 17588 ;;		_TMR2_Initialize
 17589 ;;		_TMR4_Initialize
 17590 ;;		_TMR6_Initialize
 17591 ;;		_pwm_fan_Initialize
 17592 ;; This function is called by:
 17593 ;;		_main
 17594 ;; This function uses a non-reentrant model
 17595 ;;
 17596                           
 17597     1D14                     _SYSTEM_Initialize:	
 17598                           ;psect for function _SYSTEM_Initialize
 17599                           
 17600     1D14                     l6170:	
 17601                           ;incstack = 0
 17602                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17603                           
 17604                           
 17605                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 17606     1D14  319A  222D  319D   	fcall	_CLOCK_Initialize
 17607                           
 17608                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 17609     1D17  319E  26C0  319D   	fcall	_PIN_MANAGER_Initialize
 17610     1D1A                     l6172:
 17611                           
 17612                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 17613     1D1A  319B  2389  319D   	fcall	_TMR2_Initialize
 17614     1D1D                     l6174:
 17615                           
 17616                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 17617     1D1D  319B  239A  319D   	fcall	_TMR4_Initialize
 17618     1D20                     l6176:
 17619                           
 17620                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 17621     1D20  319B  237A  319D   	fcall	_TMR6_Initialize
 17622     1D23                     l6178:
 17623                           
 17624                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 17625     1D23  319C  243C  319D   	fcall	_ADC_Initialize
 17626     1D26                     l6180:
 17627                           
 17628                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 17629     1D26  319E  264D  319D   	fcall	_EUSART_Initialize
 17630     1D29                     l6182:
 17631                           
 17632                           ;mcc_generated_files/system/src/system.c: 48:     PWM_buzzer_Initialize();
 17633     1D29  319A  22E3  319D   	fcall	_PWM_buzzer_Initialize
 17634     1D2C                     l6184:
 17635                           
 17636                           ;mcc_generated_files/system/src/system.c: 49:     pwm_fan_Initialize();
 17637     1D2C  319A  22EF  319D   	fcall	_pwm_fan_Initialize
 17638     1D2F                     l6186:
 17639                           
 17640                           ;mcc_generated_files/system/src/system.c: 50:     SPI1_Initialize();
 17641     1D2F  319A  2299  319D   	fcall	_SPI1_Initialize
 17642                           
 17643                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 17644     1D32  319A  22D7  319D   	fcall	_INTERRUPT_Initialize
 17645     1D35                     l379:
 17646     1D35  0008               	return
 17647     1D36                     __end_of_SYSTEM_Initialize:
 17648                           
 17649                           	psect	text64
 17650     1AEF                     __ptext64:	
 17651 ;; *************** function _pwm_fan_Initialize *****************
 17652 ;; Defined at:
 17653 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 17654 ;; Parameters:    Size  Location     Type
 17655 ;;		None
 17656 ;; Auto vars:     Size  Location     Type
 17657 ;;		None
 17658 ;; Return value:  Size  Location     Type
 17659 ;;                  1    wreg      void 
 17660 ;; Registers used:
 17661 ;;		wreg, status,2, status,0
 17662 ;; Tracked objects:
 17663 ;;		On entry : 0/0
 17664 ;;		On exit  : 0/0
 17665 ;;		Unchanged: 0/0
 17666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17671 ;;Total ram usage:        0 bytes
 17672 ;; Hardware stack levels used: 1
 17673 ;; Hardware stack levels required when called: 5
 17674 ;; This function calls:
 17675 ;;		Nothing
 17676 ;; This function is called by:
 17677 ;;		_SYSTEM_Initialize
 17678 ;; This function uses a non-reentrant model
 17679 ;;
 17680                           
 17681     1AEF                     _pwm_fan_Initialize:	
 17682                           ;psect for function _pwm_fan_Initialize
 17683                           
 17684     1AEF                     l5802:	
 17685                           ;incstack = 0
 17686                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 17687                           
 17688                           
 17689                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 17690     1AEF  3080               	movlw	128
 17691     1AF0  002C               	movlb	12	; select bank12
 17692     1AF1  0099               	movwf	25	;volatile
 17693                           
 17694                           ;mcc_generated_files/pwm/src/pwm5.c: 54:     PWM5DCH = 0x7C;
 17695     1AF2  307C               	movlw	124
 17696     1AF3  0098               	movwf	24	;volatile
 17697                           
 17698                           ;mcc_generated_files/pwm/src/pwm5.c: 57:     PWM5DCL = 0xC0;
 17699     1AF4  30C0               	movlw	192
 17700     1AF5  0097               	movwf	23	;volatile
 17701     1AF6                     l5804:
 17702                           
 17703                           ;mcc_generated_files/pwm/src/pwm5.c: 61:     PWMTMRSbits.P5TSEL = 0x1;
 17704     1AF6  081F               	movf	31,w	;volatile
 17705     1AF7  39FC               	andlw	-4
 17706     1AF8  3801               	iorlw	1
 17707     1AF9  009F               	movwf	31	;volatile
 17708     1AFA                     l69:
 17709     1AFA  0008               	return
 17710     1AFB                     __end_of_pwm_fan_Initialize:
 17711                           
 17712                           	psect	text65
 17713     1B7A                     __ptext65:	
 17714 ;; *************** function _TMR6_Initialize *****************
 17715 ;; Defined at:
 17716 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 17717 ;; Parameters:    Size  Location     Type
 17718 ;;		None
 17719 ;; Auto vars:     Size  Location     Type
 17720 ;;		None
 17721 ;; Return value:  Size  Location     Type
 17722 ;;                  1    wreg      void 
 17723 ;; Registers used:
 17724 ;;		wreg, status,2
 17725 ;; Tracked objects:
 17726 ;;		On entry : 0/0
 17727 ;;		On exit  : 0/0
 17728 ;;		Unchanged: 0/0
 17729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17734 ;;Total ram usage:        0 bytes
 17735 ;; Hardware stack levels used: 1
 17736 ;; Hardware stack levels required when called: 5
 17737 ;; This function calls:
 17738 ;;		Nothing
 17739 ;; This function is called by:
 17740 ;;		_SYSTEM_Initialize
 17741 ;; This function uses a non-reentrant model
 17742 ;;
 17743                           
 17744     1B7A                     _TMR6_Initialize:	
 17745                           ;psect for function _TMR6_Initialize
 17746                           
 17747     1B7A                     l5900:	
 17748                           ;incstack = 0
 17749                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 17750                           
 17751                           
 17752                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 17753     1B7A  300E               	movlw	14
 17754     1B7B  0028               	movlb	8	; select bank8
 17755     1B7C  009D               	movwf	29	;volatile
 17756     1B7D                     l5902:
 17757                           
 17758                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 17759     1B7D  019C               	clrf	28	;volatile
 17760     1B7E                     l5904:
 17761                           
 17762                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 17763     1B7E  3001               	movlw	low _TMR6_DefaultPeriodMatchCallback
 17764     1B7F  0023               	movlb	3	; select bank3
 17765     1B80  00D4               	movwf	_TMR6_PeriodMatchCallback^(0+384)
 17766     1B81  3008               	movlw	high _TMR6_DefaultPeriodMatchCallback
 17767     1B82  00D5               	movwf	(_TMR6_PeriodMatchCallback^(0+384)+1)
 17768     1B83                     l5906:
 17769                           
 17770                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 17771     1B83  0020               	movlb	0	; select bank0
 17772     1B84  1392               	bcf	18,7	;volatile
 17773     1B85                     l5908:
 17774                           
 17775                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 17776     1B85  301D               	movlw	29
 17777     1B86  0028               	movlb	8	; select bank8
 17778     1B87  009E               	movwf	30	;volatile
 17779     1B88                     l516:
 17780     1B88  0008               	return
 17781     1B89                     __end_of_TMR6_Initialize:
 17782                           
 17783                           	psect	text66
 17784     1B9A                     __ptext66:	
 17785 ;; *************** function _TMR4_Initialize *****************
 17786 ;; Defined at:
 17787 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;		None
 17790 ;; Auto vars:     Size  Location     Type
 17791 ;;		None
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  1    wreg      void 
 17794 ;; Registers used:
 17795 ;;		wreg, status,2
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used: 1
 17807 ;; Hardware stack levels required when called: 5
 17808 ;; This function calls:
 17809 ;;		Nothing
 17810 ;; This function is called by:
 17811 ;;		_SYSTEM_Initialize
 17812 ;; This function uses a non-reentrant model
 17813 ;;
 17814                           
 17815     1B9A                     _TMR4_Initialize:	
 17816                           ;psect for function _TMR4_Initialize
 17817                           
 17818     1B9A                     l5888:	
 17819                           ;incstack = 0
 17820                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 17821                           
 17822                           
 17823                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xF9;
 17824     1B9A  30F9               	movlw	249
 17825     1B9B  0028               	movlb	8	; select bank8
 17826     1B9C  0096               	movwf	22	;volatile
 17827     1B9D                     l5890:
 17828                           
 17829                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 17830     1B9D  0195               	clrf	21	;volatile
 17831     1B9E                     l5892:
 17832                           
 17833                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 17834     1B9E  3000               	movlw	low _TMR4_DefaultPeriodMatchCallback
 17835     1B9F  0022               	movlb	2	; select bank2
 17836     1BA0  00E9               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 17837     1BA1  3008               	movlw	high _TMR4_DefaultPeriodMatchCallback
 17838     1BA2  00EA               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 17839     1BA3                     l5894:
 17840                           
 17841                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 17842     1BA3  0020               	movlb	0	; select bank0
 17843     1BA4  1092               	bcf	18,1	;volatile
 17844     1BA5                     l5896:
 17845                           
 17846                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 17847     1BA5  0021               	movlb	1	; select bank1
 17848     1BA6  1492               	bsf	18,1	;volatile
 17849     1BA7                     l5898:
 17850                           
 17851                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (3 << 0x0)
 17852     1BA7  3077               	movlw	119
 17853     1BA8  0028               	movlb	8	; select bank8
 17854     1BA9  0097               	movwf	23	;volatile
 17855     1BAA                     l457:
 17856     1BAA  0008               	return
 17857     1BAB                     __end_of_TMR4_Initialize:
 17858                           
 17859                           	psect	text67
 17860     1B89                     __ptext67:	
 17861 ;; *************** function _TMR2_Initialize *****************
 17862 ;; Defined at:
 17863 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;		None
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      void 
 17870 ;; Registers used:
 17871 ;;		wreg, status,2
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17881 ;;Total ram usage:        0 bytes
 17882 ;; Hardware stack levels used: 1
 17883 ;; Hardware stack levels required when called: 5
 17884 ;; This function calls:
 17885 ;;		Nothing
 17886 ;; This function is called by:
 17887 ;;		_SYSTEM_Initialize
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891     1B89                     _TMR2_Initialize:	
 17892                           ;psect for function _TMR2_Initialize
 17893                           
 17894     1B89                     l5876:	
 17895                           ;incstack = 0
 17896                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 17897                           
 17898                           
 17899                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xF9;
 17900     1B89  30F9               	movlw	249
 17901     1B8A  0020               	movlb	0	; select bank0
 17902     1B8B  009E               	movwf	30	;volatile
 17903     1B8C                     l5878:
 17904                           
 17905                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 17906     1B8C  019D               	clrf	29	;volatile
 17907     1B8D                     l5880:
 17908                           
 17909                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 17910     1B8D  3003               	movlw	low _TMR2_DefaultPeriodMatchCallback
 17911     1B8E  0022               	movlb	2	; select bank2
 17912     1B8F  00EB               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 17913     1B90  301A               	movlw	high _TMR2_DefaultPeriodMatchCallback
 17914     1B91  00EC               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 17915     1B92                     l5882:
 17916                           
 17917                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 17918     1B92  0020               	movlb	0	; select bank0
 17919     1B93  1091               	bcf	17,1	;volatile
 17920     1B94                     l5884:
 17921                           
 17922                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 17923     1B94  0021               	movlb	1	; select bank1
 17924     1B95  1491               	bsf	17,1	;volatile
 17925     1B96                     l5886:
 17926                           
 17927                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (2 << 0x0)
 17928     1B96  301E               	movlw	30
 17929     1B97  0020               	movlb	0	; select bank0
 17930     1B98  009F               	movwf	31	;volatile
 17931     1B99                     l398:
 17932     1B99  0008               	return
 17933     1B9A                     __end_of_TMR2_Initialize:
 17934                           
 17935                           	psect	text68
 17936     1A99                     __ptext68:	
 17937 ;; *************** function _SPI1_Initialize *****************
 17938 ;; Defined at:
 17939 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;		None
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;		None
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      void 
 17946 ;; Registers used:
 17947 ;;		status,2
 17948 ;; Tracked objects:
 17949 ;;		On entry : 0/0
 17950 ;;		On exit  : 0/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;Total ram usage:        0 bytes
 17958 ;; Hardware stack levels used: 1
 17959 ;; Hardware stack levels required when called: 5
 17960 ;; This function calls:
 17961 ;;		Nothing
 17962 ;; This function is called by:
 17963 ;;		_SYSTEM_Initialize
 17964 ;; This function uses a non-reentrant model
 17965 ;;
 17966                           
 17967     1A99                     _SPI1_Initialize:	
 17968                           ;psect for function _SPI1_Initialize
 17969                           
 17970     1A99                     l5810:	
 17971                           ;incstack = 0
 17972                           ; Regs used in _SPI1_Initialize: [status,2]
 17973                           
 17974                           
 17975                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 17976     1A99  0021               	movlb	1	; select bank1
 17977     1A9A  1191               	bcf	17,3	;volatile
 17978                           
 17979                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 17980     1A9B  0020               	movlb	0	; select bank0
 17981     1A9C  1191               	bcf	17,3	;volatile
 17982     1A9D                     l5812:
 17983                           
 17984                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 17985     1A9D  0024               	movlb	4	; select bank4
 17986     1A9E  0194               	clrf	20	;volatile
 17987                           
 17988                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 17989     1A9F  0195               	clrf	21	;volatile
 17990                           
 17991                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 17992     1AA0  0197               	clrf	23	;volatile
 17993                           
 17994                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 17995     1AA1  0192               	clrf	18	;volatile
 17996     1AA2                     l133:
 17997     1AA2  0008               	return
 17998     1AA3                     __end_of_SPI1_Initialize:
 17999                           
 18000                           	psect	text69
 18001     1AE3                     __ptext69:	
 18002 ;; *************** function _PWM_buzzer_Initialize *****************
 18003 ;; Defined at:
 18004 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm6.c"
 18005 ;; Parameters:    Size  Location     Type
 18006 ;;		None
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;		None
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  1    wreg      void 
 18011 ;; Registers used:
 18012 ;;		wreg, status,2, status,0
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/0
 18015 ;;		On exit  : 0/0
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18022 ;;Total ram usage:        0 bytes
 18023 ;; Hardware stack levels used: 1
 18024 ;; Hardware stack levels required when called: 5
 18025 ;; This function calls:
 18026 ;;		Nothing
 18027 ;; This function is called by:
 18028 ;;		_SYSTEM_Initialize
 18029 ;; This function uses a non-reentrant model
 18030 ;;
 18031                           
 18032     1AE3                     _PWM_buzzer_Initialize:	
 18033                           ;psect for function _PWM_buzzer_Initialize
 18034                           
 18035     1AE3                     l5806:	
 18036                           ;incstack = 0
 18037                           ; Regs used in _PWM_buzzer_Initialize: [wreg+status,2+status,0]
 18038                           
 18039                           
 18040                           ;mcc_generated_files/pwm/src/pwm6.c: 50:     PWM6CON = 0x80;
 18041     1AE3  3080               	movlw	128
 18042     1AE4  002C               	movlb	12	; select bank12
 18043     1AE5  009C               	movwf	28	;volatile
 18044                           
 18045                           ;mcc_generated_files/pwm/src/pwm6.c: 53:     PWM6DCH = 0x7C;
 18046     1AE6  307C               	movlw	124
 18047     1AE7  009B               	movwf	27	;volatile
 18048                           
 18049                           ;mcc_generated_files/pwm/src/pwm6.c: 56:     PWM6DCL = 0xC0;
 18050     1AE8  30C0               	movlw	192
 18051     1AE9  009A               	movwf	26	;volatile
 18052     1AEA                     l5808:
 18053                           
 18054                           ;mcc_generated_files/pwm/src/pwm6.c: 60:     PWMTMRSbits.P6TSEL = 0x1;
 18055     1AEA  081F               	movf	31,w	;volatile
 18056     1AEB  39F3               	andlw	-13
 18057     1AEC  3804               	iorlw	4
 18058     1AED  009F               	movwf	31	;volatile
 18059     1AEE                     l83:
 18060     1AEE  0008               	return
 18061     1AEF                     __end_of_PWM_buzzer_Initialize:
 18062                           
 18063                           	psect	text70
 18064     1EC0                     __ptext70:	
 18065 ;; *************** function _PIN_MANAGER_Initialize *****************
 18066 ;; Defined at:
 18067 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 18068 ;; Parameters:    Size  Location     Type
 18069 ;;		None
 18070 ;; Auto vars:     Size  Location     Type
 18071 ;;		None
 18072 ;; Return value:  Size  Location     Type
 18073 ;;                  1    wreg      void 
 18074 ;; Registers used:
 18075 ;;		status,2
 18076 ;; Tracked objects:
 18077 ;;		On entry : 0/0
 18078 ;;		On exit  : 0/0
 18079 ;;		Unchanged: 0/0
 18080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18085 ;;Total ram usage:        0 bytes
 18086 ;; Hardware stack levels used: 1
 18087 ;; Hardware stack levels required when called: 5
 18088 ;; This function calls:
 18089 ;;		Nothing
 18090 ;; This function is called by:
 18091 ;;		_SYSTEM_Initialize
 18092 ;; This function uses a non-reentrant model
 18093 ;;
 18094                           
 18095     1EC0                     _PIN_MANAGER_Initialize:	
 18096                           ;psect for function _PIN_MANAGER_Initialize
 18097                           
 18098     1EC0                     l5836:	
 18099                           ;incstack = 0
 18100                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 18101                           
 18102                           
 18103                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 18104     1EC0  0022               	movlb	2	; select bank2
 18105     1EC1  018C               	clrf	12	;volatile
 18106                           
 18107                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 18108     1EC2  018D               	clrf	13	;volatile
 18109                           
 18110                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 18111     1EC3  018E               	clrf	14	;volatile
 18112     1EC4                     l5838:
 18113                           
 18114                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 18115     1EC4  3019               	movlw	25
 18116     1EC5  0021               	movlb	1	; select bank1
 18117     1EC6  008C               	movwf	12	;volatile
 18118     1EC7                     l5840:
 18119                           
 18120                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 18121     1EC7  3020               	movlw	32
 18122     1EC8  008D               	movwf	13	;volatile
 18123     1EC9                     l5842:
 18124                           
 18125                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x1F;
 18126     1EC9  301F               	movlw	31
 18127     1ECA  008E               	movwf	14	;volatile
 18128     1ECB                     l5844:
 18129                           
 18130                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 18131     1ECB  3010               	movlw	16
 18132     1ECC  0023               	movlb	3	; select bank3
 18133     1ECD  008C               	movwf	12	;volatile
 18134     1ECE                     l5846:
 18135                           
 18136                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 18137     1ECE  3080               	movlw	128
 18138     1ECF  008D               	movwf	13	;volatile
 18139     1ED0                     l5848:
 18140                           
 18141                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBF;
 18142     1ED0  30BF               	movlw	191
 18143     1ED1  008E               	movwf	14	;volatile
 18144                           
 18145                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 18146     1ED2  0024               	movlb	4	; select bank4
 18147     1ED3  018C               	clrf	12	;volatile
 18148                           
 18149                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 18150     1ED4  018D               	clrf	13	;volatile
 18151                           
 18152                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 18153     1ED5  018E               	clrf	14	;volatile
 18154                           
 18155                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 18156     1ED6  0025               	movlb	5	; select bank5
 18157     1ED7  018C               	clrf	12	;volatile
 18158                           
 18159                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 18160     1ED8  018D               	clrf	13	;volatile
 18161                           
 18162                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 18163     1ED9  018E               	clrf	14	;volatile
 18164     1EDA                     l5850:
 18165                           
 18166                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 18167     1EDA  3037               	movlw	55
 18168     1EDB  0026               	movlb	6	; select bank6
 18169     1EDC  008C               	movwf	12	;volatile
 18170     1EDD                     l5852:
 18171                           
 18172                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 18173     1EDD  30F0               	movlw	240
 18174     1EDE  008D               	movwf	13	;volatile
 18175     1EDF                     l5854:
 18176                           
 18177                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 18178     1EDF  30FF               	movlw	255
 18179     1EE0  008E               	movwf	14	;volatile
 18180     1EE1                     l5856:
 18181                           
 18182                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 18183     1EE1  303F               	movlw	63
 18184     1EE2  0027               	movlb	7	; select bank7
 18185     1EE3  008C               	movwf	12	;volatile
 18186     1EE4                     l5858:
 18187                           
 18188                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 18189     1EE4  30F0               	movlw	240
 18190     1EE5  008D               	movwf	13	;volatile
 18191     1EE6                     l5860:
 18192                           
 18193                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 18194     1EE6  30FF               	movlw	255
 18195     1EE7  008E               	movwf	14	;volatile
 18196                           
 18197                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 18198     1EE8  003C               	movlb	28	; select bank28
 18199     1EE9  01A1               	clrf	33	;volatile
 18200     1EEA                     l5862:
 18201                           
 18202                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 18203     1EEA  300D               	movlw	13
 18204     1EEB  00A4               	movwf	36	;volatile
 18205     1EEC                     l5864:
 18206                           
 18207                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 18208     1EEC  3019               	movlw	25
 18209     1EED  003D               	movlb	29	; select bank29
 18210     1EEE  009C               	movwf	28	;volatile
 18211     1EEF                     l5866:
 18212                           
 18213                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 18214     1EEF  3002               	movlw	2
 18215     1EF0  00A5               	movwf	37	;volatile
 18216     1EF1                     l5868:
 18217                           
 18218                           ;mcc_generated_files/system/src/pins.c: 95:     RC7PPS = 3;
 18219     1EF1  3003               	movlw	3
 18220     1EF2  00A7               	movwf	39	;volatile
 18221     1EF3                     l5870:
 18222                           
 18223                           ;mcc_generated_files/system/src/pins.c: 96:     RB7PPS = 20;
 18224     1EF3  3014               	movlw	20
 18225     1EF4  009F               	movwf	31	;volatile
 18226     1EF5                     l5872:
 18227                           
 18228                           ;mcc_generated_files/system/src/pins.c: 97:     SSP1CLKPPS = 0xE;
 18229     1EF5  300E               	movlw	14
 18230     1EF6  003C               	movlb	28	; select bank28
 18231     1EF7  00A0               	movwf	32	;volatile
 18232     1EF8                     l5874:
 18233                           
 18234                           ;mcc_generated_files/system/src/pins.c: 98:     RB6PPS = 24;
 18235     1EF8  3018               	movlw	24
 18236     1EF9  003D               	movlb	29	; select bank29
 18237     1EFA  009E               	movwf	30	;volatile
 18238                           
 18239                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAP = 0x0;
 18240     1EFB  0027               	movlb	7	; select bank7
 18241     1EFC  0191               	clrf	17	;volatile
 18242                           
 18243                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAN = 0x0;
 18244     1EFD  0192               	clrf	18	;volatile
 18245                           
 18246                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAF = 0x0;
 18247     1EFE  0193               	clrf	19	;volatile
 18248                           
 18249                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBP = 0x0;
 18250     1EFF  0194               	clrf	20	;volatile
 18251                           
 18252                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBN = 0x0;
 18253     1F00  0195               	clrf	21	;volatile
 18254                           
 18255                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBF = 0x0;
 18256     1F01  0196               	clrf	22	;volatile
 18257                           
 18258                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCP = 0x0;
 18259     1F02  0197               	clrf	23	;volatile
 18260                           
 18261                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCN = 0x0;
 18262     1F03  0198               	clrf	24	;volatile
 18263                           
 18264                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCF = 0x0;
 18265     1F04  0199               	clrf	25	;volatile
 18266     1F05                     l351:
 18267     1F05  0008               	return
 18268     1F06                     __end_of_PIN_MANAGER_Initialize:
 18269                           
 18270                           	psect	text71
 18271     1AD7                     __ptext71:	
 18272 ;; *************** function _INTERRUPT_Initialize *****************
 18273 ;; Defined at:
 18274 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 18275 ;; Parameters:    Size  Location     Type
 18276 ;;		None
 18277 ;; Auto vars:     Size  Location     Type
 18278 ;;		None
 18279 ;; Return value:  Size  Location     Type
 18280 ;;                  1    wreg      void 
 18281 ;; Registers used:
 18282 ;;		wreg, status,2, status,0, pclath, cstack
 18283 ;; Tracked objects:
 18284 ;;		On entry : 0/0
 18285 ;;		On exit  : 0/0
 18286 ;;		Unchanged: 0/0
 18287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18292 ;;Total ram usage:        0 bytes
 18293 ;; Hardware stack levels used: 1
 18294 ;; Hardware stack levels required when called: 6
 18295 ;; This function calls:
 18296 ;;		_INT_SetInterruptHandler
 18297 ;; This function is called by:
 18298 ;;		_SYSTEM_Initialize
 18299 ;; This function uses a non-reentrant model
 18300 ;;
 18301                           
 18302     1AD7                     _INTERRUPT_Initialize:	
 18303                           ;psect for function _INTERRUPT_Initialize
 18304                           
 18305     1AD7                     l5828:	
 18306                           ;incstack = 0
 18307                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18308                           
 18309                           
 18310                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 18311     1AD7  0020               	movlb	0	; select bank0
 18312     1AD8  1010               	bcf	16,0	;volatile
 18313                           
 18314                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 18315     1AD9  140B               	bsf	11,0	;volatile
 18316     1ADA                     l5830:
 18317                           
 18318                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 18319     1ADA  3000               	movlw	0
 18320     1ADB  0021               	movlb	1	; select bank1
 18321     1ADC  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 18322     1ADD  3000               	movlw	0
 18323     1ADE  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 18324     1ADF  319A  2236  319A   	fcall	_INT_SetInterruptHandler
 18325     1AE2                     l227:
 18326     1AE2  0008               	return
 18327     1AE3                     __end_of_INTERRUPT_Initialize:
 18328                           
 18329                           	psect	text72
 18330     1A36                     __ptext72:	
 18331 ;; *************** function _INT_SetInterruptHandler *****************
 18332 ;; Defined at:
 18333 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 18334 ;; Parameters:    Size  Location     Type
 18335 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 18336 ;;		 -> INT_DefaultInterruptHandler(1), 
 18337 ;; Auto vars:     Size  Location     Type
 18338 ;;		None
 18339 ;; Return value:  Size  Location     Type
 18340 ;;                  1    wreg      void 
 18341 ;; Registers used:
 18342 ;;		wreg
 18343 ;; Tracked objects:
 18344 ;;		On entry : 0/0
 18345 ;;		On exit  : 0/0
 18346 ;;		Unchanged: 0/0
 18347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18348 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18351 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18352 ;;Total ram usage:        2 bytes
 18353 ;; Hardware stack levels used: 1
 18354 ;; Hardware stack levels required when called: 5
 18355 ;; This function calls:
 18356 ;;		Nothing
 18357 ;; This function is called by:
 18358 ;;		_INTERRUPT_Initialize
 18359 ;; This function uses a non-reentrant model
 18360 ;;
 18361                           
 18362     1A36                     _INT_SetInterruptHandler:	
 18363                           ;psect for function _INT_SetInterruptHandler
 18364                           
 18365     1A36                     l5132:	
 18366                           ;incstack = 0
 18367                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 18368                           
 18369                           
 18370                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 18371     1A36  0021               	movlb	1	; select bank1
 18372     1A37  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 18373     1A38  0020               	movlb	0	; select bank0
 18374     1A39  00E3               	movwf	_INT_InterruptHandler+1
 18375     1A3A  0021               	movlb	1	; select bank1
 18376     1A3B  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 18377     1A3C  0020               	movlb	0	; select bank0
 18378     1A3D  00E2               	movwf	_INT_InterruptHandler
 18379     1A3E                     l254:
 18380     1A3E  0008               	return
 18381     1A3F                     __end_of_INT_SetInterruptHandler:
 18382                           
 18383                           	psect	text73
 18384     1E4D                     __ptext73:	
 18385 ;; *************** function _EUSART_Initialize *****************
 18386 ;; Defined at:
 18387 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;		None
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;		None
 18392 ;; Return value:  Size  Location     Type
 18393 ;;                  1    wreg      void 
 18394 ;; Registers used:
 18395 ;;		wreg, status,2, status,0, pclath, cstack
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/0
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18405 ;;Total ram usage:        0 bytes
 18406 ;; Hardware stack levels used: 1
 18407 ;; Hardware stack levels required when called: 6
 18408 ;; This function calls:
 18409 ;;		_EUSART_FramingErrorCallbackRegister
 18410 ;;		_EUSART_OverrunErrorCallbackRegister
 18411 ;; This function is called by:
 18412 ;;		_SYSTEM_Initialize
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416     1E4D                     _EUSART_Initialize:	
 18417                           ;psect for function _EUSART_Initialize
 18418                           
 18419     1E4D                     l5910:	
 18420                           ;incstack = 0
 18421                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18422                           
 18423                           
 18424                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 18425     1E4D  0021               	movlb	1	; select bank1
 18426     1E4E  1291               	bcf	17,5	;volatile
 18427     1E4F                     l5912:
 18428                           
 18429                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 18430     1E4F  3058               	movlw	low _EUSART_ReceiveISR
 18431     1E50  0023               	movlb	3	; select bank3
 18432     1E51  00D6               	movwf	_EUSART_RxInterruptHandler^(0+384)
 18433     1E52  301F               	movlw	high _EUSART_ReceiveISR
 18434     1E53  00D7               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 18435     1E54                     l5914:
 18436                           
 18437                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 18438     1E54  0021               	movlb	1	; select bank1
 18439     1E55  1211               	bcf	17,4	;volatile
 18440                           
 18441                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 18442     1E56  3002               	movlw	low _EUSART_TransmitISR
 18443     1E57  0023               	movlb	3	; select bank3
 18444     1E58  00D8               	movwf	_EUSART_TxInterruptHandler^(0+384)
 18445     1E59  3008               	movlw	high _EUSART_TransmitISR
 18446     1E5A  00D9               	movwf	(_EUSART_TxInterruptHandler^(0+384)+1)
 18447     1E5B                     l5916:
 18448                           
 18449                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 18450     1E5B  3048               	movlw	72
 18451     1E5C  009F               	movwf	31	;volatile
 18452     1E5D                     l5918:
 18453                           
 18454                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 18455     1E5D  3090               	movlw	144
 18456     1E5E  009D               	movwf	29	;volatile
 18457     1E5F                     l5920:
 18458                           
 18459                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 18460     1E5F  3026               	movlw	38
 18461     1E60  009E               	movwf	30	;volatile
 18462     1E61                     l5922:
 18463                           
 18464                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 18465     1E61  3040               	movlw	64
 18466     1E62  009B               	movwf	27	;volatile
 18467     1E63                     l5924:
 18468                           
 18469                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 18470     1E63  3003               	movlw	3
 18471     1E64  009C               	movwf	28	;volatile
 18472     1E65                     l5926:
 18473                           
 18474                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 18475     1E65  3002               	movlw	low _EUSART_DefaultFramingErrorCallback
 18476     1E66  0021               	movlb	1	; select bank1
 18477     1E67  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 18478     1E68  301A               	movlw	high _EUSART_DefaultFramingErrorCallback
 18479     1E69  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 18480     1E6A  319B  235C  319E   	fcall	_EUSART_FramingErrorCallbackRegister
 18481     1E6D                     l5928:
 18482                           
 18483                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 18484     1E6D  3004               	movlw	low _EUSART_DefaultOverrunErrorCallback
 18485     1E6E  0021               	movlb	1	; select bank1
 18486     1E6F  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 18487     1E70  301A               	movlw	high _EUSART_DefaultOverrunErrorCallback
 18488     1E71  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 18489     1E72  319B  236B  319E   	fcall	_EUSART_OverrunErrorCallbackRegister
 18490     1E75                     l5930:
 18491                           
 18492                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 18493     1E75  0022               	movlb	2	; select bank2
 18494     1E76  01DD               	clrf	_eusartRxLastError^(0+256)	;volatile
 18495     1E77  01DE               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 18496     1E78                     l5932:
 18497                           
 18498                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 18499     1E78  0020               	movlb	0	; select bank0
 18500     1E79  01ED               	clrf	_eusartTxHead	;volatile
 18501     1E7A                     l5934:
 18502                           
 18503                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 18504     1E7A  01EC               	clrf	_eusartTxTail	;volatile
 18505     1E7B                     l5936:
 18506                           
 18507                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 18508     1E7B  3008               	movlw	8
 18509     1E7C  00EB               	movwf	_eusartTxBufferRemaining	;volatile
 18510     1E7D                     l5938:
 18511                           
 18512                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 18513     1E7D  01EA               	clrf	_eusartRxHead	;volatile
 18514     1E7E                     l5940:
 18515                           
 18516                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 18517     1E7E  01E9               	clrf	_eusartRxTail	;volatile
 18518     1E7F                     l5942:
 18519                           
 18520                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 18521     1E7F  01E8               	clrf	_eusartRxCount	;volatile
 18522     1E80                     l5944:
 18523                           
 18524                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 18525     1E80  0021               	movlb	1	; select bank1
 18526     1E81  1691               	bsf	17,5	;volatile
 18527     1E82                     l656:
 18528     1E82  0008               	return
 18529     1E83                     __end_of_EUSART_Initialize:
 18530                           
 18531                           	psect	text74
 18532     1B6B                     __ptext74:	
 18533 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 18534 ;; Defined at:
 18535 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 18536 ;; Parameters:    Size  Location     Type
 18537 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 18538 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  1    wreg      void 
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18550 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18553 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18554 ;;Total ram usage:        2 bytes
 18555 ;; Hardware stack levels used: 1
 18556 ;; Hardware stack levels required when called: 5
 18557 ;; This function calls:
 18558 ;;		Nothing
 18559 ;; This function is called by:
 18560 ;;		_EUSART_Initialize
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564     1B6B                     _EUSART_OverrunErrorCallbackRegister:	
 18565                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 18566                           
 18567     1B6B                     l5138:	
 18568                           ;incstack = 0
 18569                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 18570                           
 18571                           
 18572                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 18573     1B6B  0021               	movlb	1	; select bank1
 18574     1B6C  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 18575     1B6D  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18576     1B6E  1903               	btfsc	3,2
 18577     1B6F  2B71               	goto	u5741
 18578     1B70  2B72               	goto	u5740
 18579     1B71                     u5741:
 18580     1B71  2B79               	goto	l774
 18581     1B72                     u5740:
 18582     1B72                     l5140:
 18583                           
 18584                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 18585     1B72  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18586     1B73  0022               	movlb	2	; select bank2
 18587     1B74  00D8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 18588     1B75  0021               	movlb	1	; select bank1
 18589     1B76  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 18590     1B77  0022               	movlb	2	; select bank2
 18591     1B78  00D7               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 18592     1B79                     l774:
 18593     1B79  0008               	return
 18594     1B7A                     __end_of_EUSART_OverrunErrorCallbackRegister:
 18595                           
 18596                           	psect	text75
 18597     1B5C                     __ptext75:	
 18598 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 18599 ;; Defined at:
 18600 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 18603 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;		None
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  1    wreg      void 
 18608 ;; Registers used:
 18609 ;;		wreg, status,2, status,0
 18610 ;; Tracked objects:
 18611 ;;		On entry : 0/0
 18612 ;;		On exit  : 0/0
 18613 ;;		Unchanged: 0/0
 18614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18615 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18618 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18619 ;;Total ram usage:        2 bytes
 18620 ;; Hardware stack levels used: 1
 18621 ;; Hardware stack levels required when called: 5
 18622 ;; This function calls:
 18623 ;;		Nothing
 18624 ;; This function is called by:
 18625 ;;		_EUSART_Initialize
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           
 18629     1B5C                     _EUSART_FramingErrorCallbackRegister:	
 18630                           ;psect for function _EUSART_FramingErrorCallbackRegister
 18631                           
 18632     1B5C                     l5134:	
 18633                           ;incstack = 0
 18634                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 18635                           
 18636                           
 18637                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 18638     1B5C  0021               	movlb	1	; select bank1
 18639     1B5D  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 18640     1B5E  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18641     1B5F  1903               	btfsc	3,2
 18642     1B60  2B62               	goto	u5731
 18643     1B61  2B63               	goto	u5730
 18644     1B62                     u5731:
 18645     1B62  2B6A               	goto	l770
 18646     1B63                     u5730:
 18647     1B63                     l5136:
 18648                           
 18649                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 18650     1B63  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 18651     1B64  0020               	movlb	0	; select bank0
 18652     1B65  00E1               	movwf	_EUSART_FramingErrorHandler+1
 18653     1B66  0021               	movlb	1	; select bank1
 18654     1B67  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 18655     1B68  0020               	movlb	0	; select bank0
 18656     1B69  00E0               	movwf	_EUSART_FramingErrorHandler
 18657     1B6A                     l770:
 18658     1B6A  0008               	return
 18659     1B6B                     __end_of_EUSART_FramingErrorCallbackRegister:
 18660                           
 18661                           	psect	text76
 18662     1A2D                     __ptext76:	
 18663 ;; *************** function _CLOCK_Initialize *****************
 18664 ;; Defined at:
 18665 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;		None
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;		None
 18670 ;; Return value:  Size  Location     Type
 18671 ;;                  1    wreg      void 
 18672 ;; Registers used:
 18673 ;;		status,2
 18674 ;; Tracked objects:
 18675 ;;		On entry : 0/0
 18676 ;;		On exit  : 0/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18683 ;;Total ram usage:        0 bytes
 18684 ;; Hardware stack levels used: 1
 18685 ;; Hardware stack levels required when called: 5
 18686 ;; This function calls:
 18687 ;;		Nothing
 18688 ;; This function is called by:
 18689 ;;		_SYSTEM_Initialize
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693     1A2D                     _CLOCK_Initialize:	
 18694                           ;psect for function _CLOCK_Initialize
 18695                           
 18696     1A2D                     l5832:	
 18697                           ;incstack = 0
 18698                           ; Regs used in _CLOCK_Initialize: [status,2]
 18699                           
 18700                           
 18701                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 18702     1A2D  0032               	movlb	18	; select bank18
 18703     1A2E  0199               	clrf	25	;volatile
 18704                           
 18705                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 18706     1A2F  019B               	clrf	27	;volatile
 18707                           
 18708                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 18709     1A30  019D               	clrf	29	;volatile
 18710     1A31                     l5834:
 18711                           
 18712                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 18713     1A31  3006               	movlw	6
 18714     1A32  009F               	movwf	31	;volatile
 18715                           
 18716                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 18717     1A33  019E               	clrf	30	;volatile
 18718     1A34  019C               	clrf	28	;volatile
 18719     1A35                     l272:
 18720     1A35  0008               	return
 18721     1A36                     __end_of_CLOCK_Initialize:
 18722                           
 18723                           	psect	text77
 18724     1C3C                     __ptext77:	
 18725 ;; *************** function _ADC_Initialize *****************
 18726 ;; Defined at:
 18727 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 18728 ;; Parameters:    Size  Location     Type
 18729 ;;		None
 18730 ;; Auto vars:     Size  Location     Type
 18731 ;;		None
 18732 ;; Return value:  Size  Location     Type
 18733 ;;                  1    wreg      void 
 18734 ;; Registers used:
 18735 ;;		wreg, status,2, status,0, pclath, cstack
 18736 ;; Tracked objects:
 18737 ;;		On entry : 0/0
 18738 ;;		On exit  : 0/0
 18739 ;;		Unchanged: 0/0
 18740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18745 ;;Total ram usage:        0 bytes
 18746 ;; Hardware stack levels used: 1
 18747 ;; Hardware stack levels required when called: 6
 18748 ;; This function calls:
 18749 ;;		_ADC_SetInterruptHandler
 18750 ;; This function is called by:
 18751 ;;		_SYSTEM_Initialize
 18752 ;; This function uses a non-reentrant model
 18753 ;;
 18754                           
 18755     1C3C                     _ADC_Initialize:	
 18756                           ;psect for function _ADC_Initialize
 18757                           
 18758     1C3C                     l5786:	
 18759                           ;incstack = 0
 18760                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18761                           
 18762                           
 18763                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 18764     1C3C  30A0               	movlw	160
 18765     1C3D  0021               	movlb	1	; select bank1
 18766     1C3E  009E               	movwf	30	;volatile
 18767     1C3F                     l5788:
 18768                           
 18769                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 18770     1C3F  019B               	clrf	27	;volatile
 18771                           
 18772                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 18773     1C40  019C               	clrf	28	;volatile
 18774     1C41                     l5790:
 18775                           
 18776                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 18777     1C41  3005               	movlw	5
 18778     1C42  009F               	movwf	31	;volatile
 18779     1C43                     l5792:
 18780                           
 18781                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 18782     1C43  3001               	movlw	1
 18783     1C44  009D               	movwf	29	;volatile
 18784     1C45                     l5794:
 18785                           
 18786                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 18787     1C45  0020               	movlb	0	; select bank0
 18788     1C46  1311               	bcf	17,6	;volatile
 18789     1C47                     l5796:
 18790                           
 18791                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 18792     1C47  3001               	movlw	low _ADC_DefaultInterruptHandler
 18793     1C48  0021               	movlb	1	; select bank1
 18794     1C49  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 18795     1C4A  301A               	movlw	high _ADC_DefaultInterruptHandler
 18796     1C4B  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 18797     1C4C  319A  2224  319C   	fcall	_ADC_SetInterruptHandler
 18798     1C4F                     l5798:
 18799                           
 18800                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 18801     1C4F  0021               	movlb	1	; select bank1
 18802     1C50  1711               	bsf	17,6	;volatile
 18803     1C51                     l27:
 18804     1C51  0008               	return
 18805     1C52                     __end_of_ADC_Initialize:
 18806                           
 18807                           	psect	text78
 18808     1A24                     __ptext78:	
 18809 ;; *************** function _ADC_SetInterruptHandler *****************
 18810 ;; Defined at:
 18811 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 18812 ;; Parameters:    Size  Location     Type
 18813 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 18814 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 18815 ;; Auto vars:     Size  Location     Type
 18816 ;;		None
 18817 ;; Return value:  Size  Location     Type
 18818 ;;                  1    wreg      void 
 18819 ;; Registers used:
 18820 ;;		wreg
 18821 ;; Tracked objects:
 18822 ;;		On entry : 0/0
 18823 ;;		On exit  : 0/0
 18824 ;;		Unchanged: 0/0
 18825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18826 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18829 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18830 ;;Total ram usage:        2 bytes
 18831 ;; Hardware stack levels used: 1
 18832 ;; Hardware stack levels required when called: 5
 18833 ;; This function calls:
 18834 ;;		Nothing
 18835 ;; This function is called by:
 18836 ;;		_ADC_Initialize
 18837 ;;		_initAdcMultiplexer
 18838 ;; This function uses a non-reentrant model
 18839 ;;
 18840                           
 18841     1A24                     _ADC_SetInterruptHandler:	
 18842                           ;psect for function _ADC_SetInterruptHandler
 18843                           
 18844     1A24                     l5124:	
 18845                           ;incstack = 0
 18846                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 18847                           
 18848                           
 18849                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 18850     1A24  0021               	movlb	1	; select bank1
 18851     1A25  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 18852     1A26  0022               	movlb	2	; select bank2
 18853     1A27  00EE               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 18854     1A28  0021               	movlb	1	; select bank1
 18855     1A29  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 18856     1A2A  0022               	movlb	2	; select bank2
 18857     1A2B  00ED               	movwf	_ADC_InterruptHandler^(0+256)
 18858     1A2C                     l55:
 18859     1A2C  0008               	return
 18860     1A2D                     __end_of_ADC_SetInterruptHandler:
 18861                           
 18862                           	psect	text79
 18863     1C68                     __ptext79:	
 18864 ;; *************** function _PWM_buzzer_LoadDutyValue *****************
 18865 ;; Defined at:
 18866 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm6.c"
 18867 ;; Parameters:    Size  Location     Type
 18868 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 18869 ;; Auto vars:     Size  Location     Type
 18870 ;;		None
 18871 ;; Return value:  Size  Location     Type
 18872 ;;                  1    wreg      void 
 18873 ;; Registers used:
 18874 ;;		wreg, status,2, status,0
 18875 ;; Tracked objects:
 18876 ;;		On entry : 0/0
 18877 ;;		On exit  : 0/0
 18878 ;;		Unchanged: 0/0
 18879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18880 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18882 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18883 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18884 ;;Total ram usage:        4 bytes
 18885 ;; Hardware stack levels used: 1
 18886 ;; Hardware stack levels required when called: 5
 18887 ;; This function calls:
 18888 ;;		Nothing
 18889 ;; This function is called by:
 18890 ;;		_main
 18891 ;; This function uses a non-reentrant model
 18892 ;;
 18893                           
 18894     1C68                     _PWM_buzzer_LoadDutyValue:	
 18895                           ;psect for function _PWM_buzzer_LoadDutyValue
 18896                           
 18897     1C68                     l6156:	
 18898                           ;incstack = 0
 18899                           ; Regs used in _PWM_buzzer_LoadDutyValue: [wreg+status,2+status,0]
 18900                           
 18901                           
 18902                           ;mcc_generated_files/pwm/src/pwm6.c: 63:  void PWM_buzzer_LoadDutyValue(uint16_t dutyVal
      +                          ue);mcc_generated_files/pwm/src/pwm6.c: 64:  {;mcc_generated_files/pwm/src/pwm6.c: 66:  
      +                              PWM6DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 18903     1C68  0021               	movlb	1	; select bank1
 18904     1C69  0821               	movf	(PWM_buzzer_LoadDutyValue@dutyValue+1)^(0+128),w
 18905     1C6A  00A3               	movwf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1)
 18906     1C6B  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 18907     1C6C  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 18908     1C6D  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 18909     1C6E  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 18910     1C6F  36A3               	lsrf	(??_PWM_buzzer_LoadDutyValue^(0+128)+1),f
 18911     1C70  0CA2               	rrf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 18912     1C71  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 18913     1C72  002C               	movlb	12	; select bank12
 18914     1C73  009B               	movwf	27	;volatile
 18915                           
 18916                           ;mcc_generated_files/pwm/src/pwm6.c: 69:      PWM6DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 18917     1C74  0021               	movlb	1	; select bank1
 18918     1C75  0820               	movf	PWM_buzzer_LoadDutyValue@dutyValue^(0+128),w
 18919     1C76  3903               	andlw	3
 18920     1C77  00A2               	movwf	??_PWM_buzzer_LoadDutyValue^(0+128)
 18921     1C78  3006               	movlw	6
 18922     1C79                     u7345:
 18923     1C79  35A2               	lslf	??_PWM_buzzer_LoadDutyValue^(0+128),f
 18924     1C7A  0B89               	decfsz	9,f
 18925     1C7B  2C79               	goto	u7345
 18926     1C7C  0822               	movf	??_PWM_buzzer_LoadDutyValue^(0+128),w
 18927     1C7D  002C               	movlb	12	; select bank12
 18928     1C7E  009A               	movwf	26	;volatile
 18929     1C7F                     l86:
 18930     1C7F  0008               	return
 18931     1C80                     __end_of_PWM_buzzer_LoadDutyValue:
 18932                           
 18933                           	psect	intentry
 18934     0004                     __pintentry:	
 18935 ;; *************** function _INTERRUPT_InterruptManager *****************
 18936 ;; Defined at:
 18937 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 18938 ;; Parameters:    Size  Location     Type
 18939 ;;		None
 18940 ;; Auto vars:     Size  Location     Type
 18941 ;;		None
 18942 ;; Return value:  Size  Location     Type
 18943 ;;                  1    wreg      void 
 18944 ;; Registers used:
 18945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18946 ;; Tracked objects:
 18947 ;;		On entry : 0/0
 18948 ;;		On exit  : 0/0
 18949 ;;		Unchanged: 0/0
 18950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18955 ;;Total ram usage:        0 bytes
 18956 ;; Hardware stack levels used: 1
 18957 ;; Hardware stack levels required when called: 4
 18958 ;; This function calls:
 18959 ;;		NULL
 18960 ;;		_ADC_ISR
 18961 ;;		_EUSART_ReceiveISR
 18962 ;;		_EUSART_TransmitISR
 18963 ;;		_TMR2_ISR
 18964 ;;		_TMR4_ISR
 18965 ;; This function is called by:
 18966 ;;		Interrupt level 1
 18967 ;; This function uses a non-reentrant model
 18968 ;;
 18969                           
 18970     0004                     _INTERRUPT_InterruptManager:
 18971                           
 18972                           ;incstack = 0
 18973     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 18974                           
 18975                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18976     0005  3180               	pagesel	$
 18977     0006                     i1l6294:
 18978                           
 18979                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 18980     0006  1F0B               	btfss	11,6	;volatile
 18981     0007  2809               	goto	u748_21
 18982     0008  280A               	goto	u748_20
 18983     0009                     u748_21:
 18984     0009  2856               	goto	i1l244
 18985     000A                     u748_20:
 18986     000A                     i1l6296:
 18987                           
 18988                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 18989     000A  0021               	movlb	1	; select bank1
 18990     000B  1E11               	btfss	17,4	;volatile
 18991     000C  280E               	goto	u749_21
 18992     000D  280F               	goto	u749_20
 18993     000E                     u749_21:
 18994     000E  281B               	goto	i1l233
 18995     000F                     u749_20:
 18996     000F                     i1l6298:
 18997     000F  0020               	movlb	0	; select bank0
 18998     0010  1E11               	btfss	17,4	;volatile
 18999     0011  2813               	goto	u750_21
 19000     0012  2814               	goto	u750_20
 19001     0013                     u750_21:
 19002     0013  281B               	goto	i1l233
 19003     0014                     u750_20:
 19004     0014                     i1l6300:
 19005                           
 19006                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 19007     0014  0023               	movlb	3	; select bank3
 19008     0015  0859               	movf	(_EUSART_TxInterruptHandler+1)^(0+384),w
 19009     0016  008A               	movwf	10
 19010     0017  0858               	movf	_EUSART_TxInterruptHandler^(0+384),w
 19011     0018  000A               	callw
 19012     0019  3180               	pagesel	$
 19013                           
 19014                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 19015     001A  2856               	goto	i1l244
 19016     001B                     i1l233:	
 19017                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 19018                           
 19019     001B  0021               	movlb	1	; select bank1
 19020     001C  1E91               	btfss	17,5	;volatile
 19021     001D  281F               	goto	u751_21
 19022     001E  2820               	goto	u751_20
 19023     001F                     u751_21:
 19024     001F  282C               	goto	i1l235
 19025     0020                     u751_20:
 19026     0020                     i1l6302:
 19027     0020  0020               	movlb	0	; select bank0
 19028     0021  1E91               	btfss	17,5	;volatile
 19029     0022  2824               	goto	u752_21
 19030     0023  2825               	goto	u752_20
 19031     0024                     u752_21:
 19032     0024  282C               	goto	i1l235
 19033     0025                     u752_20:
 19034     0025                     i1l6304:
 19035                           
 19036                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 19037     0025  0023               	movlb	3	; select bank3
 19038     0026  0857               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 19039     0027  008A               	movwf	10
 19040     0028  0856               	movf	_EUSART_RxInterruptHandler^(0+384),w
 19041     0029  000A               	callw
 19042     002A  3180               	pagesel	$
 19043                           
 19044                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 19045     002B  2856               	goto	i1l244
 19046     002C                     i1l235:	
 19047                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 19048                           
 19049     002C  0021               	movlb	1	; select bank1
 19050     002D  1C92               	btfss	18,1	;volatile
 19051     002E  2830               	goto	u753_21
 19052     002F  2831               	goto	u753_20
 19053     0030                     u753_21:
 19054     0030  283A               	goto	i1l237
 19055     0031                     u753_20:
 19056     0031                     i1l6306:
 19057     0031  0020               	movlb	0	; select bank0
 19058     0032  1C92               	btfss	18,1	;volatile
 19059     0033  2835               	goto	u754_21
 19060     0034  2836               	goto	u754_20
 19061     0035                     u754_21:
 19062     0035  283A               	goto	i1l237
 19063     0036                     u754_20:
 19064     0036                     i1l6308:
 19065                           
 19066                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 19067     0036  319B  234D  3180   	fcall	_TMR4_ISR
 19068                           
 19069                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 19070     0039  2856               	goto	i1l244
 19071     003A                     i1l237:	
 19072                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 19073                           
 19074     003A  0021               	movlb	1	; select bank1
 19075     003B  1C91               	btfss	17,1	;volatile
 19076     003C  283E               	goto	u755_21
 19077     003D  283F               	goto	u755_20
 19078     003E                     u755_21:
 19079     003E  2848               	goto	i1l239
 19080     003F                     u755_20:
 19081     003F                     i1l6310:
 19082     003F  0020               	movlb	0	; select bank0
 19083     0040  1C91               	btfss	17,1	;volatile
 19084     0041  2843               	goto	u756_21
 19085     0042  2844               	goto	u756_20
 19086     0043                     u756_21:
 19087     0043  2848               	goto	i1l239
 19088     0044                     u756_20:
 19089     0044                     i1l6312:
 19090                           
 19091                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 19092     0044  319B  233E  3180   	fcall	_TMR2_ISR
 19093                           
 19094                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 19095     0047  2856               	goto	i1l244
 19096     0048                     i1l239:	
 19097                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 19098                           
 19099     0048  0021               	movlb	1	; select bank1
 19100     0049  1F11               	btfss	17,6	;volatile
 19101     004A  284C               	goto	u757_21
 19102     004B  284D               	goto	u757_20
 19103     004C                     u757_21:
 19104     004C  2856               	goto	i1l238
 19105     004D                     u757_20:
 19106     004D                     i1l6314:
 19107     004D  0020               	movlb	0	; select bank0
 19108     004E  1F11               	btfss	17,6	;volatile
 19109     004F  2851               	goto	u758_21
 19110     0050  2852               	goto	u758_20
 19111     0051                     u758_21:
 19112     0051  2856               	goto	i1l238
 19113     0052                     u758_20:
 19114     0052                     i1l6316:
 19115                           
 19116                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 19117     0052  319B  232F  3180   	fcall	_ADC_ISR
 19118                           
 19119                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 19120     0055  2856               	goto	i1l244
 19121     0056                     i1l238:
 19122     0056                     i1l244:
 19123     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 19124     0057  0009               	retfie
 19125     0058                     __end_of_INTERRUPT_InterruptManager:
 19126                           
 19127                           	psect	text81
 19128     1B4D                     __ptext81:	
 19129 ;; *************** function _TMR4_ISR *****************
 19130 ;; Defined at:
 19131 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 19132 ;; Parameters:    Size  Location     Type
 19133 ;;		None
 19134 ;; Auto vars:     Size  Location     Type
 19135 ;;		None
 19136 ;; Return value:  Size  Location     Type
 19137 ;;                  1    wreg      void 
 19138 ;; Registers used:
 19139 ;;		wreg, status,2, status,0, pclath, cstack
 19140 ;; Tracked objects:
 19141 ;;		On entry : 0/0
 19142 ;;		On exit  : 0/0
 19143 ;;		Unchanged: 0/0
 19144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;Total ram usage:        0 bytes
 19150 ;; Hardware stack levels used: 1
 19151 ;; Hardware stack levels required when called: 3
 19152 ;; This function calls:
 19153 ;;		NULL
 19154 ;;		_TMR4_DefaultPeriodMatchCallback
 19155 ;;		_controller
 19156 ;; This function is called by:
 19157 ;;		_INTERRUPT_InterruptManager
 19158 ;; This function uses a non-reentrant model
 19159 ;;
 19160                           
 19161     1B4D                     _TMR4_ISR:	
 19162                           ;psect for function _TMR4_ISR
 19163                           
 19164     1B4D                     i1l6158:	
 19165                           ;incstack = 0
 19166                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 19167                           
 19168                           
 19169                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 19170     1B4D  0022               	movlb	2	; select bank2
 19171     1B4E  0869               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 19172     1B4F  046A               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 19173     1B50  1903               	btfsc	3,2
 19174     1B51  2B53               	goto	u735_21
 19175     1B52  2B54               	goto	u735_20
 19176     1B53                     u735_21:
 19177     1B53  2B59               	goto	i1l6162
 19178     1B54                     u735_20:
 19179     1B54                     i1l6160:
 19180                           
 19181                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 19182     1B54  086A               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 19183     1B55  008A               	movwf	10
 19184     1B56  0869               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 19185     1B57  000A               	callw
 19186     1B58  319B               	pagesel	$
 19187     1B59                     i1l6162:
 19188                           
 19189                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 19190     1B59  0020               	movlb	0	; select bank0
 19191     1B5A  1092               	bcf	18,1	;volatile
 19192     1B5B                     i1l491:
 19193     1B5B  0008               	return
 19194     1B5C                     __end_of_TMR4_ISR:
 19195                           
 19196                           	psect	text82
 19197     0800                     __ptext82:	
 19198 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 19199 ;; Defined at:
 19200 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;		None
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;		None
 19205 ;; Return value:  Size  Location     Type
 19206 ;;                  1    wreg      void 
 19207 ;; Registers used:
 19208 ;;		None
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19218 ;;Total ram usage:        0 bytes
 19219 ;; Hardware stack levels used: 1
 19220 ;; This function calls:
 19221 ;;		Nothing
 19222 ;; This function is called by:
 19223 ;;		_TMR4_Initialize
 19224 ;;		_TMR4_ISR
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228     0800                     _TMR4_DefaultPeriodMatchCallback:	
 19229                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 19230                           
 19231     0800                     i1l497:	
 19232                           ;incstack = 0
 19233                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 19234                           
 19235     0800  0008               	return
 19236     0801                     __end_of_TMR4_DefaultPeriodMatchCallback:
 19237                           
 19238                           	psect	text83
 19239     0982                     __ptext83:	
 19240 ;; *************** function _controller *****************
 19241 ;; Defined at:
 19242 ;;		line 15 in file "controller.c"
 19243 ;; Parameters:    Size  Location     Type
 19244 ;;		None
 19245 ;; Auto vars:     Size  Location     Type
 19246 ;;  error           2   56[BANK0 ] short 
 19247 ;;  D               2   54[BANK0 ] short 
 19248 ;;  I               2   52[BANK0 ] short 
 19249 ;;  P               2   50[BANK0 ] short 
 19250 ;;  difference      2   48[BANK0 ] short 
 19251 ;; Return value:  Size  Location     Type
 19252 ;;                  1    wreg      void 
 19253 ;; Registers used:
 19254 ;;		wreg, status,2, status,0, pclath, cstack
 19255 ;; Tracked objects:
 19256 ;;		On entry : 0/0
 19257 ;;		On exit  : 0/0
 19258 ;;		Unchanged: 0/0
 19259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19261 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19263 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19264 ;;Total ram usage:       12 bytes
 19265 ;; Hardware stack levels used: 1
 19266 ;; Hardware stack levels required when called: 2
 19267 ;; This function calls:
 19268 ;;		_pwm_fan_LoadDutyValue
 19269 ;;		i1___fladd
 19270 ;;		i1___flmul
 19271 ;;		i1___fltol
 19272 ;;		i1___xxtofl
 19273 ;;		i1_getHoogtesensor
 19274 ;; This function is called by:
 19275 ;;		_main
 19276 ;;		_TMR4_ISR
 19277 ;; This function uses a non-reentrant model
 19278 ;;
 19279                           
 19280     0982                     _controller:	
 19281                           ;psect for function _controller
 19282                           
 19283     0982                     i1l6114:	
 19284                           ;incstack = 0
 19285                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 19286                           
 19287                           
 19288                           ;controller.c: 16:     hoogte_bal = getHoogtesensor();
 19289     0982  319A  2212  3189   	fcall	i1_getHoogtesensor
 19290     0985  0871               	movf	?i1_getHoogtesensor+1,w
 19291     0986  0022               	movlb	2	; select bank2
 19292     0987  00D2               	movwf	(_hoogte_bal+1)^(0+256)
 19293     0988  0870               	movf	?i1_getHoogtesensor,w
 19294     0989  00D1               	movwf	_hoogte_bal^(0+256)
 19295     098A                     i1l6116:
 19296                           
 19297                           ;controller.c: 20:     int16_t error = setpoint - hoogte_bal;
 19298     098A  0851               	movf	_hoogte_bal^(0+256),w
 19299     098B  0267               	subwf	_setpoint^(0+256),w
 19300     098C  0020               	movlb	0	; select bank0
 19301     098D  00D8               	movwf	controller@error
 19302     098E  0022               	movlb	2	; select bank2
 19303     098F  0852               	movf	(_hoogte_bal+1)^(0+256),w
 19304     0990  3B68               	subwfb	(_setpoint+1)^(0+256),w
 19305     0991  0020               	movlb	0	; select bank0
 19306     0992  00D9               	movwf	controller@error+1
 19307     0993                     i1l6118:
 19308                           
 19309                           ;controller.c: 22:     integraal += error * 0.0005;
 19310     0993  0858               	movf	controller@error,w
 19311     0994  00F0               	movwf	i1___xxtofl@val
 19312     0995  0859               	movf	controller@error+1,w
 19313     0996  00F1               	movwf	i1___xxtofl@val+1
 19314     0997  0D89               	rlf	9,f
 19315     0998  3B89               	subwfb	9,f
 19316     0999  0989               	comf	9,f
 19317     099A  00F2               	movwf	i1___xxtofl@val+2
 19318     099B  00F3               	movwf	i1___xxtofl@val+3
 19319     099C  3001               	movlw	1
 19320     099D  3196  260E  3189   	fcall	i1___xxtofl
 19321     09A0  0873               	movf	?i1___xxtofl+3,w
 19322     09A1  0020               	movlb	0	; select bank0
 19323     09A2  00A7               	movwf	i1___flmul@a+3
 19324     09A3  0872               	movf	?i1___xxtofl+2,w
 19325     09A4  00A6               	movwf	i1___flmul@a+2
 19326     09A5  0871               	movf	?i1___xxtofl+1,w
 19327     09A6  00A5               	movwf	i1___flmul@a+1
 19328     09A7  0870               	movf	?i1___xxtofl,w
 19329     09A8  00A4               	movwf	i1___flmul@a
 19330     09A9  303A               	movlw	58
 19331     09AA  00A3               	movwf	i1___flmul@b+3
 19332     09AB  3003               	movlw	3
 19333     09AC  00A2               	movwf	i1___flmul@b+2
 19334     09AD  3012               	movlw	18
 19335     09AE  00A1               	movwf	i1___flmul@b+1
 19336     09AF  306F               	movlw	111
 19337     09B0  00A0               	movwf	i1___flmul@b
 19338     09B1  3182  22CD  3189   	fcall	i1___flmul
 19339     09B4  0020               	movlb	0	; select bank0
 19340     09B5  0823               	movf	?i1___flmul+3,w
 19341     09B6  00BD               	movwf	i1___fladd@b+3
 19342     09B7  0822               	movf	?i1___flmul+2,w
 19343     09B8  00BC               	movwf	i1___fladd@b+2
 19344     09B9  0821               	movf	?i1___flmul+1,w
 19345     09BA  00BB               	movwf	i1___fladd@b+1
 19346     09BB  0820               	movf	?i1___flmul,w
 19347     09BC  00BA               	movwf	i1___fladd@b
 19348     09BD  0022               	movlb	2	; select bank2
 19349     09BE  084A               	movf	(_integraal+3)^(0+256),w
 19350     09BF  0020               	movlb	0	; select bank0
 19351     09C0  00C1               	movwf	i1___fladd@a+3
 19352     09C1  0022               	movlb	2	; select bank2
 19353     09C2  0849               	movf	(_integraal+2)^(0+256),w
 19354     09C3  0020               	movlb	0	; select bank0
 19355     09C4  00C0               	movwf	i1___fladd@a+2
 19356     09C5  0022               	movlb	2	; select bank2
 19357     09C6  0848               	movf	(_integraal+1)^(0+256),w
 19358     09C7  0020               	movlb	0	; select bank0
 19359     09C8  00BF               	movwf	i1___fladd@a+1
 19360     09C9  0022               	movlb	2	; select bank2
 19361     09CA  0847               	movf	_integraal^(0+256),w
 19362     09CB  0020               	movlb	0	; select bank0
 19363     09CC  00BE               	movwf	i1___fladd@a
 19364     09CD  318D  25F4  3189   	fcall	i1___fladd
 19365     09D0  0020               	movlb	0	; select bank0
 19366     09D1  083D               	movf	?i1___fladd+3,w
 19367     09D2  0022               	movlb	2	; select bank2
 19368     09D3  00CA               	movwf	(_integraal+3)^(0+256)
 19369     09D4  0020               	movlb	0	; select bank0
 19370     09D5  083C               	movf	?i1___fladd+2,w
 19371     09D6  0022               	movlb	2	; select bank2
 19372     09D7  00C9               	movwf	(_integraal+2)^(0+256)
 19373     09D8  0020               	movlb	0	; select bank0
 19374     09D9  083B               	movf	?i1___fladd+1,w
 19375     09DA  0022               	movlb	2	; select bank2
 19376     09DB  00C8               	movwf	(_integraal+1)^(0+256)
 19377     09DC  0020               	movlb	0	; select bank0
 19378     09DD  083A               	movf	?i1___fladd,w
 19379     09DE  0022               	movlb	2	; select bank2
 19380     09DF  00C7               	movwf	_integraal^(0+256)
 19381     09E0                     i1l6120:
 19382                           
 19383                           ;controller.c: 23:     int16_t difference = lasterror - error;
 19384     09E0  0020               	movlb	0	; select bank0
 19385     09E1  0858               	movf	controller@error,w
 19386     09E2  0022               	movlb	2	; select bank2
 19387     09E3  024F               	subwf	_lasterror^(0+256),w
 19388     09E4  0020               	movlb	0	; select bank0
 19389     09E5  00D0               	movwf	controller@difference
 19390     09E6  0859               	movf	controller@error+1,w
 19391     09E7  0022               	movlb	2	; select bank2
 19392     09E8  3B50               	subwfb	(_lasterror+1)^(0+256),w
 19393     09E9  0020               	movlb	0	; select bank0
 19394     09EA  00D1               	movwf	controller@difference+1
 19395     09EB                     i1l6122:
 19396                           
 19397                           ;controller.c: 24:     lasterror = error;
 19398     09EB  0859               	movf	controller@error+1,w
 19399     09EC  0022               	movlb	2	; select bank2
 19400     09ED  00D0               	movwf	(_lasterror+1)^(0+256)
 19401     09EE  0020               	movlb	0	; select bank0
 19402     09EF  0858               	movf	controller@error,w
 19403     09F0  0022               	movlb	2	; select bank2
 19404     09F1  00CF               	movwf	_lasterror^(0+256)
 19405     09F2                     i1l6124:
 19406                           
 19407                           ;controller.c: 26:     int16_t P = kp * error;
 19408     09F2  0020               	movlb	0	; select bank0
 19409     09F3  0858               	movf	controller@error,w
 19410     09F4  00F0               	movwf	i1___xxtofl@val
 19411     09F5  0859               	movf	controller@error+1,w
 19412     09F6  00F1               	movwf	i1___xxtofl@val+1
 19413     09F7  0D89               	rlf	9,f
 19414     09F8  3B89               	subwfb	9,f
 19415     09F9  0989               	comf	9,f
 19416     09FA  00F2               	movwf	i1___xxtofl@val+2
 19417     09FB  00F3               	movwf	i1___xxtofl@val+3
 19418     09FC  3001               	movlw	1
 19419     09FD  3196  260E  3189   	fcall	i1___xxtofl
 19420     0A00  0873               	movf	?i1___xxtofl+3,w
 19421     0A01  0020               	movlb	0	; select bank0
 19422     0A02  00A7               	movwf	i1___flmul@a+3
 19423     0A03  0872               	movf	?i1___xxtofl+2,w
 19424     0A04  00A6               	movwf	i1___flmul@a+2
 19425     0A05  0871               	movf	?i1___xxtofl+1,w
 19426     0A06  00A5               	movwf	i1___flmul@a+1
 19427     0A07  0870               	movf	?i1___xxtofl,w
 19428     0A08  00A4               	movwf	i1___flmul@a
 19429     0A09  0022               	movlb	2	; select bank2
 19430     0A0A  0866               	movf	(_kp+3)^(0+256),w
 19431     0A0B  0020               	movlb	0	; select bank0
 19432     0A0C  00A3               	movwf	i1___flmul@b+3
 19433     0A0D  0022               	movlb	2	; select bank2
 19434     0A0E  0865               	movf	(_kp+2)^(0+256),w
 19435     0A0F  0020               	movlb	0	; select bank0
 19436     0A10  00A2               	movwf	i1___flmul@b+2
 19437     0A11  0022               	movlb	2	; select bank2
 19438     0A12  0864               	movf	(_kp+1)^(0+256),w
 19439     0A13  0020               	movlb	0	; select bank0
 19440     0A14  00A1               	movwf	i1___flmul@b+1
 19441     0A15  0022               	movlb	2	; select bank2
 19442     0A16  0863               	movf	_kp^(0+256),w
 19443     0A17  0020               	movlb	0	; select bank0
 19444     0A18  00A0               	movwf	i1___flmul@b
 19445     0A19  3182  22CD  3189   	fcall	i1___flmul
 19446     0A1C  0020               	movlb	0	; select bank0
 19447     0A1D  0823               	movf	?i1___flmul+3,w
 19448     0A1E  00BD               	movwf	i1___fltol@f1+3
 19449     0A1F  0822               	movf	?i1___flmul+2,w
 19450     0A20  00BC               	movwf	i1___fltol@f1+2
 19451     0A21  0821               	movf	?i1___flmul+1,w
 19452     0A22  00BB               	movwf	i1___fltol@f1+1
 19453     0A23  0820               	movf	?i1___flmul,w
 19454     0A24  00BA               	movwf	i1___fltol@f1
 19455     0A25  3192  2206  3189   	fcall	i1___fltol
 19456     0A28  0020               	movlb	0	; select bank0
 19457     0A29  083B               	movf	?i1___fltol+1,w
 19458     0A2A  00D3               	movwf	controller@P+1
 19459     0A2B  083A               	movf	?i1___fltol,w
 19460     0A2C  00D2               	movwf	controller@P
 19461     0A2D                     i1l6126:
 19462                           
 19463                           ;controller.c: 27:     int16_t I = ki * integraal;
 19464     0A2D  0022               	movlb	2	; select bank2
 19465     0A2E  0862               	movf	(_ki+3)^(0+256),w
 19466     0A2F  0020               	movlb	0	; select bank0
 19467     0A30  00A7               	movwf	i1___flmul@a+3
 19468     0A31  0022               	movlb	2	; select bank2
 19469     0A32  0861               	movf	(_ki+2)^(0+256),w
 19470     0A33  0020               	movlb	0	; select bank0
 19471     0A34  00A6               	movwf	i1___flmul@a+2
 19472     0A35  0022               	movlb	2	; select bank2
 19473     0A36  0860               	movf	(_ki+1)^(0+256),w
 19474     0A37  0020               	movlb	0	; select bank0
 19475     0A38  00A5               	movwf	i1___flmul@a+1
 19476     0A39  0022               	movlb	2	; select bank2
 19477     0A3A  085F               	movf	_ki^(0+256),w
 19478     0A3B  0020               	movlb	0	; select bank0
 19479     0A3C  00A4               	movwf	i1___flmul@a
 19480     0A3D  0022               	movlb	2	; select bank2
 19481     0A3E  084A               	movf	(_integraal+3)^(0+256),w
 19482     0A3F  0020               	movlb	0	; select bank0
 19483     0A40  00A3               	movwf	i1___flmul@b+3
 19484     0A41  0022               	movlb	2	; select bank2
 19485     0A42  0849               	movf	(_integraal+2)^(0+256),w
 19486     0A43  0020               	movlb	0	; select bank0
 19487     0A44  00A2               	movwf	i1___flmul@b+2
 19488     0A45  0022               	movlb	2	; select bank2
 19489     0A46  0848               	movf	(_integraal+1)^(0+256),w
 19490     0A47  0020               	movlb	0	; select bank0
 19491     0A48  00A1               	movwf	i1___flmul@b+1
 19492     0A49  0022               	movlb	2	; select bank2
 19493     0A4A  0847               	movf	_integraal^(0+256),w
 19494     0A4B  0020               	movlb	0	; select bank0
 19495     0A4C  00A0               	movwf	i1___flmul@b
 19496     0A4D  3182  22CD  3189   	fcall	i1___flmul
 19497     0A50  0020               	movlb	0	; select bank0
 19498     0A51  0823               	movf	?i1___flmul+3,w
 19499     0A52  00BD               	movwf	i1___fltol@f1+3
 19500     0A53  0822               	movf	?i1___flmul+2,w
 19501     0A54  00BC               	movwf	i1___fltol@f1+2
 19502     0A55  0821               	movf	?i1___flmul+1,w
 19503     0A56  00BB               	movwf	i1___fltol@f1+1
 19504     0A57  0820               	movf	?i1___flmul,w
 19505     0A58  00BA               	movwf	i1___fltol@f1
 19506     0A59  3192  2206  3189   	fcall	i1___fltol
 19507     0A5C  0020               	movlb	0	; select bank0
 19508     0A5D  083B               	movf	?i1___fltol+1,w
 19509     0A5E  00D5               	movwf	controller@I+1
 19510     0A5F  083A               	movf	?i1___fltol,w
 19511     0A60  00D4               	movwf	controller@I
 19512     0A61                     i1l6128:
 19513                           
 19514                           ;controller.c: 28:     int16_t D = kd * difference;
 19515     0A61  0850               	movf	controller@difference,w
 19516     0A62  00F0               	movwf	i1___xxtofl@val
 19517     0A63  0851               	movf	controller@difference+1,w
 19518     0A64  00F1               	movwf	i1___xxtofl@val+1
 19519     0A65  0D89               	rlf	9,f
 19520     0A66  3B89               	subwfb	9,f
 19521     0A67  0989               	comf	9,f
 19522     0A68  00F2               	movwf	i1___xxtofl@val+2
 19523     0A69  00F3               	movwf	i1___xxtofl@val+3
 19524     0A6A  3001               	movlw	1
 19525     0A6B  3196  260E  3189   	fcall	i1___xxtofl
 19526     0A6E  0873               	movf	?i1___xxtofl+3,w
 19527     0A6F  0020               	movlb	0	; select bank0
 19528     0A70  00A7               	movwf	i1___flmul@a+3
 19529     0A71  0872               	movf	?i1___xxtofl+2,w
 19530     0A72  00A6               	movwf	i1___flmul@a+2
 19531     0A73  0871               	movf	?i1___xxtofl+1,w
 19532     0A74  00A5               	movwf	i1___flmul@a+1
 19533     0A75  0870               	movf	?i1___xxtofl,w
 19534     0A76  00A4               	movwf	i1___flmul@a
 19535     0A77  0022               	movlb	2	; select bank2
 19536     0A78  0846               	movf	(_kd+3)^(0+256),w
 19537     0A79  0020               	movlb	0	; select bank0
 19538     0A7A  00A3               	movwf	i1___flmul@b+3
 19539     0A7B  0022               	movlb	2	; select bank2
 19540     0A7C  0845               	movf	(_kd+2)^(0+256),w
 19541     0A7D  0020               	movlb	0	; select bank0
 19542     0A7E  00A2               	movwf	i1___flmul@b+2
 19543     0A7F  0022               	movlb	2	; select bank2
 19544     0A80  0844               	movf	(_kd+1)^(0+256),w
 19545     0A81  0020               	movlb	0	; select bank0
 19546     0A82  00A1               	movwf	i1___flmul@b+1
 19547     0A83  0022               	movlb	2	; select bank2
 19548     0A84  0843               	movf	_kd^(0+256),w
 19549     0A85  0020               	movlb	0	; select bank0
 19550     0A86  00A0               	movwf	i1___flmul@b
 19551     0A87  3182  22CD  3189   	fcall	i1___flmul
 19552     0A8A  0020               	movlb	0	; select bank0
 19553     0A8B  0823               	movf	?i1___flmul+3,w
 19554     0A8C  00BD               	movwf	i1___fltol@f1+3
 19555     0A8D  0822               	movf	?i1___flmul+2,w
 19556     0A8E  00BC               	movwf	i1___fltol@f1+2
 19557     0A8F  0821               	movf	?i1___flmul+1,w
 19558     0A90  00BB               	movwf	i1___fltol@f1+1
 19559     0A91  0820               	movf	?i1___flmul,w
 19560     0A92  00BA               	movwf	i1___fltol@f1
 19561     0A93  3192  2206  3189   	fcall	i1___fltol
 19562     0A96  0020               	movlb	0	; select bank0
 19563     0A97  083B               	movf	?i1___fltol+1,w
 19564     0A98  00D7               	movwf	controller@D+1
 19565     0A99  083A               	movf	?i1___fltol,w
 19566     0A9A  00D6               	movwf	controller@D
 19567     0A9B                     i1l6130:
 19568                           
 19569                           ;controller.c: 30:     dutycycle = P + I + D;
 19570     0A9B  0854               	movf	controller@I,w
 19571     0A9C  0752               	addwf	controller@P,w
 19572     0A9D  00CE               	movwf	??_controller
 19573     0A9E  0855               	movf	controller@I+1,w
 19574     0A9F  3D53               	addwfc	controller@P+1,w
 19575     0AA0  00CF               	movwf	??_controller+1
 19576     0AA1  0856               	movf	controller@D,w
 19577     0AA2  074E               	addwf	??_controller,w
 19578     0AA3  00DC               	movwf	_dutycycle
 19579     0AA4  0857               	movf	controller@D+1,w
 19580     0AA5  3D4F               	addwfc	??_controller+1,w
 19581     0AA6  00DD               	movwf	_dutycycle+1
 19582     0AA7                     i1l6132:
 19583                           
 19584                           ;controller.c: 32:     if (dutycycle > 1023 && error > 0) {
 19585     0AA7  3004               	movlw	4
 19586     0AA8  025D               	subwf	_dutycycle+1,w
 19587     0AA9  3000               	movlw	0
 19588     0AAA  1903               	skipnz
 19589     0AAB  025C               	subwf	_dutycycle,w
 19590     0AAC  1C03               	skipc
 19591     0AAD  2AAF               	goto	u729_21
 19592     0AAE  2AB0               	goto	u729_20
 19593     0AAF                     u729_21:
 19594     0AAF  2AC3               	goto	i1l6138
 19595     0AB0                     u729_20:
 19596     0AB0                     i1l6134:
 19597     0AB0  0859               	movf	controller@error+1,w
 19598     0AB1  3A80               	xorlw	128
 19599     0AB2  00CE               	movwf	??_controller
 19600     0AB3  3080               	movlw	128
 19601     0AB4  024E               	subwf	??_controller,w
 19602     0AB5  1D03               	skipz
 19603     0AB6  2AB9               	goto	u730_25
 19604     0AB7  3001               	movlw	1
 19605     0AB8  0258               	subwf	controller@error,w
 19606     0AB9                     u730_25:
 19607     0AB9  1C03               	skipc
 19608     0ABA  2ABC               	goto	u730_21
 19609     0ABB  2ABD               	goto	u730_20
 19610     0ABC                     u730_21:
 19611     0ABC  2AC3               	goto	i1l6138
 19612     0ABD                     u730_20:
 19613     0ABD                     i1l6136:
 19614                           
 19615                           ;controller.c: 33:         dutycycle = 1023;
 19616     0ABD  30FF               	movlw	255
 19617     0ABE  0020               	movlb	0	; select bank0
 19618     0ABF  00DC               	movwf	_dutycycle
 19619     0AC0  3003               	movlw	3
 19620     0AC1  00DD               	movwf	_dutycycle+1
 19621                           
 19622                           ;controller.c: 34:     } else if (dutycycle > 1023 && error < 0) {
 19623     0AC2  2AD4               	goto	i1l6146
 19624     0AC3                     i1l6138:
 19625     0AC3  3004               	movlw	4
 19626     0AC4  0020               	movlb	0	; select bank0
 19627     0AC5  025D               	subwf	_dutycycle+1,w
 19628     0AC6  3000               	movlw	0
 19629     0AC7  1903               	skipnz
 19630     0AC8  025C               	subwf	_dutycycle,w
 19631     0AC9  1C03               	skipc
 19632     0ACA  2ACC               	goto	u731_21
 19633     0ACB  2ACD               	goto	u731_20
 19634     0ACC                     u731_21:
 19635     0ACC  2AD4               	goto	i1l978
 19636     0ACD                     u731_20:
 19637     0ACD                     i1l6140:
 19638     0ACD  1FD9               	btfss	controller@error+1,7
 19639     0ACE  2AD0               	goto	u732_21
 19640     0ACF  2AD1               	goto	u732_20
 19641     0AD0                     u732_21:
 19642     0AD0  2AD4               	goto	i1l978
 19643     0AD1                     u732_20:
 19644     0AD1                     i1l6142:
 19645                           
 19646                           ;controller.c: 35:         dutycycle = 0;
 19647     0AD1  01DC               	clrf	_dutycycle
 19648     0AD2  01DD               	clrf	_dutycycle+1
 19649                           
 19650                           ;controller.c: 36:     } else if (dutycycle < 0) {
 19651     0AD3  2AD4               	goto	i1l6146
 19652     0AD4                     i1l978:
 19653     0AD4                     i1l6146:
 19654                           
 19655                           ;controller.c: 40:     pwm_fan_LoadDutyValue(dutycycle);
 19656     0AD4  085D               	movf	_dutycycle+1,w
 19657     0AD5  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 19658     0AD6  085C               	movf	_dutycycle,w
 19659     0AD7  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 19660     0AD8  319C  2427  3189   	fcall	_pwm_fan_LoadDutyValue
 19661     0ADB                     i1l980:
 19662     0ADB  0008               	return
 19663     0ADC                     __end_of_controller:
 19664                           
 19665                           	psect	text84
 19666     1A12                     __ptext84:	
 19667 ;; *************** function i1_getHoogtesensor *****************
 19668 ;; Defined at:
 19669 ;;		line 37 in file "adcMeasurements.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;		None
 19672 ;; Auto vars:     Size  Location     Type
 19673 ;;		None
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  2    0[COMMON] unsigned short 
 19676 ;; Registers used:
 19677 ;;		wreg
 19678 ;; Tracked objects:
 19679 ;;		On entry : 0/0
 19680 ;;		On exit  : 0/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19687 ;;Total ram usage:        2 bytes
 19688 ;; Hardware stack levels used: 1
 19689 ;; This function calls:
 19690 ;;		Nothing
 19691 ;; This function is called by:
 19692 ;;		_controller
 19693 ;; This function uses a non-reentrant model
 19694 ;;
 19695                           
 19696     1A12                     i1_getHoogtesensor:	
 19697                           ;psect for function i1_getHoogtesensor
 19698                           
 19699     1A12                     i1l5370:	
 19700                           ;incstack = 0
 19701                           ; Regs used in i1_getHoogtesensor: [wreg]
 19702                           
 19703                           
 19704                           ;adcMeasurements.c: 38:     return ADC_hoogtesensor;
 19705     1A12  0020               	movlb	0	; select bank0
 19706     1A13  085F               	movf	_ADC_hoogtesensor+1,w	;volatile
 19707     1A14  00F1               	movwf	?i1_getHoogtesensor+1
 19708     1A15  085E               	movf	_ADC_hoogtesensor,w	;volatile
 19709     1A16  00F0               	movwf	?i1_getHoogtesensor
 19710     1A17                     i1l857:
 19711     1A17  0008               	return
 19712     1A18                     __end_ofi1_getHoogtesensor:
 19713                           
 19714                           	psect	text85
 19715     160E                     __ptext85:	
 19716 ;; *************** function i1___xxtofl *****************
 19717 ;; Defined at:
 19718 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;  sign            1    wreg     unsigned char 
 19721 ;;  val             4    0[COMMON] long 
 19722 ;; Auto vars:     Size  Location     Type
 19723 ;;  sign            1    8[COMMON] unsigned char 
 19724 ;;  arg             4   10[COMMON] unsigned long 
 19725 ;;  exp             1    9[COMMON] unsigned char 
 19726 ;; Return value:  Size  Location     Type
 19727 ;;                  4    0[COMMON] unsigned char 
 19728 ;; Registers used:
 19729 ;;		wreg, status,2, status,0
 19730 ;; Tracked objects:
 19731 ;;		On entry : 0/0
 19732 ;;		On exit  : 0/0
 19733 ;;		Unchanged: 0/0
 19734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19736 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19738 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19739 ;;Total ram usage:       14 bytes
 19740 ;; Hardware stack levels used: 1
 19741 ;; This function calls:
 19742 ;;		Nothing
 19743 ;; This function is called by:
 19744 ;;		_controller
 19745 ;; This function uses a non-reentrant model
 19746 ;;
 19747                           
 19748     160E                     i1___xxtofl:	
 19749                           ;psect for function i1___xxtofl
 19750                           
 19751                           
 19752                           ;incstack = 0
 19753                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 19754                           ;i1___xxtofl@sign stored from wreg
 19755     160E  00F8               	movwf	i1___xxtofl@sign
 19756     160F                     i1l5746:
 19757     160F  0878               	movf	i1___xxtofl@sign,w
 19758     1610  1903               	btfsc	3,2
 19759     1611  2E13               	goto	u698_21
 19760     1612  2E14               	goto	u698_20
 19761     1613                     u698_21:
 19762     1613  2E28               	goto	i1l5752
 19763     1614                     u698_20:
 19764     1614                     i1l5748:
 19765     1614  1FF3               	btfss	i1___xxtofl@val+3,7
 19766     1615  2E17               	goto	u699_21
 19767     1616  2E18               	goto	u699_20
 19768     1617                     u699_21:
 19769     1617  2E28               	goto	i1l5752
 19770     1618                     u699_20:
 19771     1618                     i1l5750:
 19772     1618  0970               	comf	i1___xxtofl@val,w
 19773     1619  00FA               	movwf	i1___xxtofl@arg
 19774     161A  0971               	comf	i1___xxtofl@val+1,w
 19775     161B  00FB               	movwf	i1___xxtofl@arg+1
 19776     161C  0972               	comf	i1___xxtofl@val+2,w
 19777     161D  00FC               	movwf	i1___xxtofl@arg+2
 19778     161E  0973               	comf	i1___xxtofl@val+3,w
 19779     161F  00FD               	movwf	i1___xxtofl@arg+3
 19780     1620  0AFA               	incf	i1___xxtofl@arg,f
 19781     1621  1903               	skipnz
 19782     1622  0AFB               	incf	i1___xxtofl@arg+1,f
 19783     1623  1903               	skipnz
 19784     1624  0AFC               	incf	i1___xxtofl@arg+2,f
 19785     1625  1903               	skipnz
 19786     1626  0AFD               	incf	i1___xxtofl@arg+3,f
 19787     1627  2E30               	goto	i1l1656
 19788     1628                     i1l5752:
 19789     1628  0873               	movf	i1___xxtofl@val+3,w
 19790     1629  00FD               	movwf	i1___xxtofl@arg+3
 19791     162A  0872               	movf	i1___xxtofl@val+2,w
 19792     162B  00FC               	movwf	i1___xxtofl@arg+2
 19793     162C  0871               	movf	i1___xxtofl@val+1,w
 19794     162D  00FB               	movwf	i1___xxtofl@arg+1
 19795     162E  0870               	movf	i1___xxtofl@val,w
 19796     162F  00FA               	movwf	i1___xxtofl@arg
 19797     1630                     i1l1656:
 19798     1630  0873               	movf	i1___xxtofl@val+3,w
 19799     1631  0472               	iorwf	i1___xxtofl@val+2,w
 19800     1632  0471               	iorwf	i1___xxtofl@val+1,w
 19801     1633  0470               	iorwf	i1___xxtofl@val,w
 19802     1634  1D03               	skipz
 19803     1635  2E37               	goto	u700_21
 19804     1636  2E38               	goto	u700_20
 19805     1637                     u700_21:
 19806     1637  2E41               	goto	i1l1657
 19807     1638                     u700_20:
 19808     1638                     i1l5754:
 19809     1638  3000               	movlw	0
 19810     1639  00F3               	movwf	?i1___xxtofl+3
 19811     163A  3000               	movlw	0
 19812     163B  00F2               	movwf	?i1___xxtofl+2
 19813     163C  3000               	movlw	0
 19814     163D  00F1               	movwf	?i1___xxtofl+1
 19815     163E  3000               	movlw	0
 19816     163F  00F0               	movwf	?i1___xxtofl
 19817     1640  2EB1               	goto	i1l1658
 19818     1641                     i1l1657:
 19819     1641  3096               	movlw	150
 19820     1642  00F9               	movwf	i1___xxtofl@exp
 19821     1643  2E4D               	goto	i1l5760
 19822     1644                     i1l5758:
 19823     1644  3001               	movlw	1
 19824     1645  07F9               	addwf	i1___xxtofl@exp,f
 19825     1646  3001               	movlw	1
 19826     1647                     u701_25:
 19827     1647  36FD               	lsrf	i1___xxtofl@arg+3,f
 19828     1648  0CFC               	rrf	i1___xxtofl@arg+2,f
 19829     1649  0CFB               	rrf	i1___xxtofl@arg+1,f
 19830     164A  0CFA               	rrf	i1___xxtofl@arg,f
 19831     164B  0B89               	decfsz	9,f
 19832     164C  2E47               	goto	u701_25
 19833     164D                     i1l5760:
 19834     164D  30FE               	movlw	254
 19835     164E  057D               	andwf	i1___xxtofl@arg+3,w
 19836     164F  1D03               	btfss	3,2
 19837     1650  2E52               	goto	u702_21
 19838     1651  2E53               	goto	u702_20
 19839     1652                     u702_21:
 19840     1652  2E44               	goto	i1l5758
 19841     1653                     u702_20:
 19842     1653  2E63               	goto	i1l5764
 19843     1654                     i1l5762:
 19844     1654  3001               	movlw	1
 19845     1655  07F9               	addwf	i1___xxtofl@exp,f
 19846     1656  3001               	movlw	1
 19847     1657  07FA               	addwf	i1___xxtofl@arg,f
 19848     1658  3000               	movlw	0
 19849     1659  3DFB               	addwfc	i1___xxtofl@arg+1,f
 19850     165A  3DFC               	addwfc	i1___xxtofl@arg+2,f
 19851     165B  3DFD               	addwfc	i1___xxtofl@arg+3,f
 19852     165C  3001               	movlw	1
 19853     165D                     u703_25:
 19854     165D  36FD               	lsrf	i1___xxtofl@arg+3,f
 19855     165E  0CFC               	rrf	i1___xxtofl@arg+2,f
 19856     165F  0CFB               	rrf	i1___xxtofl@arg+1,f
 19857     1660  0CFA               	rrf	i1___xxtofl@arg,f
 19858     1661  0B89               	decfsz	9,f
 19859     1662  2E5D               	goto	u703_25
 19860     1663                     i1l5764:
 19861     1663  30FF               	movlw	255
 19862     1664  057D               	andwf	i1___xxtofl@arg+3,w
 19863     1665  1D03               	btfss	3,2
 19864     1666  2E68               	goto	u704_21
 19865     1667  2E69               	goto	u704_20
 19866     1668                     u704_21:
 19867     1668  2E54               	goto	i1l5762
 19868     1669                     u704_20:
 19869     1669  2E73               	goto	i1l5768
 19870     166A                     i1l5766:
 19871     166A  3001               	movlw	1
 19872     166B  02F9               	subwf	i1___xxtofl@exp,f
 19873     166C  3001               	movlw	1
 19874     166D                     u705_25:
 19875     166D  35FA               	lslf	i1___xxtofl@arg,f
 19876     166E  0DFB               	rlf	i1___xxtofl@arg+1,f
 19877     166F  0DFC               	rlf	i1___xxtofl@arg+2,f
 19878     1670  0DFD               	rlf	i1___xxtofl@arg+3,f
 19879     1671  0B89               	decfsz	9,f
 19880     1672  2E6D               	goto	u705_25
 19881     1673                     i1l5768:
 19882     1673  1BFC               	btfsc	i1___xxtofl@arg+2,7
 19883     1674  2E76               	goto	u706_21
 19884     1675  2E77               	goto	u706_20
 19885     1676                     u706_21:
 19886     1676  2E7D               	goto	i1l1669
 19887     1677                     u706_20:
 19888     1677                     i1l5770:
 19889     1677  3002               	movlw	2
 19890     1678  0279               	subwf	i1___xxtofl@exp,w
 19891     1679  1803               	skipnc
 19892     167A  2E7C               	goto	u707_21
 19893     167B  2E7D               	goto	u707_20
 19894     167C                     u707_21:
 19895     167C  2E6A               	goto	i1l5766
 19896     167D                     u707_20:
 19897     167D                     i1l1669:
 19898     167D  1879               	btfsc	i1___xxtofl@exp,0
 19899     167E  2E80               	goto	u708_21
 19900     167F  2E81               	goto	u708_20
 19901     1680                     u708_21:
 19902     1680  2E89               	goto	i1l1670
 19903     1681                     u708_20:
 19904     1681                     i1l5772:
 19905     1681  30FF               	movlw	255
 19906     1682  05FA               	andwf	i1___xxtofl@arg,f
 19907     1683  30FF               	movlw	255
 19908     1684  05FB               	andwf	i1___xxtofl@arg+1,f
 19909     1685  307F               	movlw	127
 19910     1686  05FC               	andwf	i1___xxtofl@arg+2,f
 19911     1687  30FF               	movlw	255
 19912     1688  05FD               	andwf	i1___xxtofl@arg+3,f
 19913     1689                     i1l1670:
 19914     1689  1003               	clrc
 19915     168A  0CF9               	rrf	i1___xxtofl@exp,f
 19916     168B                     i1l5774:
 19917     168B  0879               	movf	i1___xxtofl@exp,w
 19918     168C  00F4               	movwf	??i1___xxtofl
 19919     168D  01F5               	clrf	??i1___xxtofl+1
 19920     168E  01F6               	clrf	??i1___xxtofl+2
 19921     168F  01F7               	clrf	??i1___xxtofl+3
 19922     1690  3018               	movlw	24
 19923     1691                     u709_25:
 19924     1691  35F4               	lslf	??i1___xxtofl,f
 19925     1692  0DF5               	rlf	??i1___xxtofl+1,f
 19926     1693  0DF6               	rlf	??i1___xxtofl+2,f
 19927     1694  0DF7               	rlf	??i1___xxtofl+3,f
 19928     1695                     u709_20:
 19929     1695  0B89               	decfsz	9,f
 19930     1696  2E91               	goto	u709_25
 19931     1697  0874               	movf	??i1___xxtofl,w
 19932     1698  04FA               	iorwf	i1___xxtofl@arg,f
 19933     1699  0875               	movf	??i1___xxtofl+1,w
 19934     169A  04FB               	iorwf	i1___xxtofl@arg+1,f
 19935     169B  0876               	movf	??i1___xxtofl+2,w
 19936     169C  04FC               	iorwf	i1___xxtofl@arg+2,f
 19937     169D  0877               	movf	??i1___xxtofl+3,w
 19938     169E  04FD               	iorwf	i1___xxtofl@arg+3,f
 19939     169F                     i1l5776:
 19940     169F  0878               	movf	i1___xxtofl@sign,w
 19941     16A0  1903               	btfsc	3,2
 19942     16A1  2EA3               	goto	u710_21
 19943     16A2  2EA4               	goto	u710_20
 19944     16A3                     u710_21:
 19945     16A3  2EA9               	goto	i1l5782
 19946     16A4                     u710_20:
 19947     16A4                     i1l5778:
 19948     16A4  1FF3               	btfss	i1___xxtofl@val+3,7
 19949     16A5  2EA7               	goto	u711_21
 19950     16A6  2EA8               	goto	u711_20
 19951     16A7                     u711_21:
 19952     16A7  2EA9               	goto	i1l5782
 19953     16A8                     u711_20:
 19954     16A8                     i1l5780:
 19955     16A8  17FD               	bsf	i1___xxtofl@arg+3,7
 19956     16A9                     i1l5782:
 19957     16A9  087D               	movf	i1___xxtofl@arg+3,w
 19958     16AA  00F3               	movwf	?i1___xxtofl+3
 19959     16AB  087C               	movf	i1___xxtofl@arg+2,w
 19960     16AC  00F2               	movwf	?i1___xxtofl+2
 19961     16AD  087B               	movf	i1___xxtofl@arg+1,w
 19962     16AE  00F1               	movwf	?i1___xxtofl+1
 19963     16AF  087A               	movf	i1___xxtofl@arg,w
 19964     16B0  00F0               	movwf	?i1___xxtofl
 19965     16B1                     i1l1658:
 19966     16B1  0008               	return
 19967     16B2                     __end_ofi1___xxtofl:
 19968                           
 19969                           	psect	text86
 19970     1206                     __ptext86:	
 19971 ;; *************** function i1___fltol *****************
 19972 ;; Defined at:
 19973 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 19974 ;; Parameters:    Size  Location     Type
 19975 ;;  f1              4   26[BANK0 ] unsigned char 
 19976 ;; Auto vars:     Size  Location     Type
 19977 ;;  exp1            1   35[BANK0 ] unsigned char 
 19978 ;;  sign1           1   34[BANK0 ] unsigned char 
 19979 ;; Return value:  Size  Location     Type
 19980 ;;                  4   26[BANK0 ] long 
 19981 ;; Registers used:
 19982 ;;		wreg, status,2, status,0
 19983 ;; Tracked objects:
 19984 ;;		On entry : 0/0
 19985 ;;		On exit  : 0/0
 19986 ;;		Unchanged: 0/0
 19987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19988 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19991 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19992 ;;Total ram usage:       10 bytes
 19993 ;; Hardware stack levels used: 1
 19994 ;; This function calls:
 19995 ;;		Nothing
 19996 ;; This function is called by:
 19997 ;;		_controller
 19998 ;; This function uses a non-reentrant model
 19999 ;;
 20000                           
 20001     1206                     i1___fltol:	
 20002                           ;psect for function i1___fltol
 20003                           
 20004     1206                     i1l5374:	
 20005                           ;incstack = 0
 20006                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 20007                           
 20008     1206  1003               	clrc
 20009     1207  0020               	movlb	0	; select bank0
 20010     1208  0D3C               	rlf	i1___fltol@f1+2,w
 20011     1209  0D3D               	rlf	i1___fltol@f1+3,w
 20012     120A  00C3               	movwf	i1___fltol@exp1
 20013     120B  0843               	movf	i1___fltol@exp1,w
 20014     120C  1D03               	btfss	3,2
 20015     120D  2A0F               	goto	u615_21
 20016     120E  2A10               	goto	u615_20
 20017     120F                     u615_21:
 20018     120F  2A19               	goto	i1l5380
 20019     1210                     u615_20:
 20020     1210                     i1l5376:
 20021     1210  3000               	movlw	0
 20022     1211  00BD               	movwf	?i1___fltol+3
 20023     1212  3000               	movlw	0
 20024     1213  00BC               	movwf	?i1___fltol+2
 20025     1214  3000               	movlw	0
 20026     1215  00BB               	movwf	?i1___fltol+1
 20027     1216  3000               	movlw	0
 20028     1217  00BA               	movwf	?i1___fltol
 20029     1218  2A74               	goto	i1l1409
 20030     1219                     i1l5380:
 20031     1219  083A               	movf	i1___fltol@f1,w
 20032     121A  00BE               	movwf	??i1___fltol
 20033     121B  083B               	movf	i1___fltol@f1+1,w
 20034     121C  00BF               	movwf	??i1___fltol+1
 20035     121D  083C               	movf	i1___fltol@f1+2,w
 20036     121E  00C0               	movwf	??i1___fltol+2
 20037     121F  083D               	movf	i1___fltol@f1+3,w
 20038     1220  00C1               	movwf	??i1___fltol+3
 20039     1221  301F               	movlw	31
 20040     1222                     u616_25:
 20041     1222  36C1               	lsrf	??i1___fltol+3,f
 20042     1223  0CC0               	rrf	??i1___fltol+2,f
 20043     1224  0CBF               	rrf	??i1___fltol+1,f
 20044     1225  0CBE               	rrf	??i1___fltol,f
 20045     1226                     u616_20:
 20046     1226  0B89               	decfsz	9,f
 20047     1227  2A22               	goto	u616_25
 20048     1228  083E               	movf	??i1___fltol,w
 20049     1229  00C2               	movwf	i1___fltol@sign1
 20050     122A                     i1l5382:
 20051     122A  17BC               	bsf	i1___fltol@f1+2,7
 20052     122B                     i1l5384:
 20053     122B  30FF               	movlw	255
 20054     122C  05BA               	andwf	i1___fltol@f1,f
 20055     122D  30FF               	movlw	255
 20056     122E  05BB               	andwf	i1___fltol@f1+1,f
 20057     122F  30FF               	movlw	255
 20058     1230  05BC               	andwf	i1___fltol@f1+2,f
 20059     1231  3000               	movlw	0
 20060     1232  05BD               	andwf	i1___fltol@f1+3,f
 20061     1233                     i1l5386:
 20062     1233  3096               	movlw	150
 20063     1234  02C3               	subwf	i1___fltol@exp1,f
 20064     1235                     i1l5388:
 20065     1235  1FC3               	btfss	i1___fltol@exp1,7
 20066     1236  2A38               	goto	u617_21
 20067     1237  2A39               	goto	u617_20
 20068     1238                     u617_21:
 20069     1238  2A4F               	goto	i1l5398
 20070     1239                     u617_20:
 20071     1239                     i1l5390:
 20072     1239  0843               	movf	i1___fltol@exp1,w
 20073     123A  3A80               	xorlw	128
 20074     123B  3E97               	addlw	151
 20075     123C  1803               	skipnc
 20076     123D  2A3F               	goto	u618_21
 20077     123E  2A40               	goto	u618_20
 20078     123F                     u618_21:
 20079     123F  2A41               	goto	i1l5396
 20080     1240                     u618_20:
 20081     1240  2A10               	goto	i1l5376
 20082     1241                     i1l5396:
 20083     1241  3001               	movlw	1
 20084     1242                     u619_25:
 20085     1242  36BD               	lsrf	i1___fltol@f1+3,f
 20086     1243  0CBC               	rrf	i1___fltol@f1+2,f
 20087     1244  0CBB               	rrf	i1___fltol@f1+1,f
 20088     1245  0CBA               	rrf	i1___fltol@f1,f
 20089     1246  0B89               	decfsz	9,f
 20090     1247  2A42               	goto	u619_25
 20091     1248  3001               	movlw	1
 20092     1249  07C3               	addwf	i1___fltol@exp1,f
 20093     124A  1D03               	btfss	3,2
 20094     124B  2A4D               	goto	u620_21
 20095     124C  2A4E               	goto	u620_20
 20096     124D                     u620_21:
 20097     124D  2A41               	goto	i1l5396
 20098     124E                     u620_20:
 20099     124E  2A64               	goto	i1l5406
 20100     124F                     i1l5398:
 20101     124F  3020               	movlw	32
 20102     1250  0243               	subwf	i1___fltol@exp1,w
 20103     1251  1C03               	skipc
 20104     1252  2A54               	goto	u621_21
 20105     1253  2A55               	goto	u621_20
 20106     1254                     u621_21:
 20107     1254  2A5F               	goto	i1l1416
 20108     1255                     u621_20:
 20109     1255  2A10               	goto	i1l5376
 20110     1256                     i1l5404:
 20111     1256  3001               	movlw	1
 20112     1257                     u622_25:
 20113     1257  35BA               	lslf	i1___fltol@f1,f
 20114     1258  0DBB               	rlf	i1___fltol@f1+1,f
 20115     1259  0DBC               	rlf	i1___fltol@f1+2,f
 20116     125A  0DBD               	rlf	i1___fltol@f1+3,f
 20117     125B  0B89               	decfsz	9,f
 20118     125C  2A57               	goto	u622_25
 20119     125D  3001               	movlw	1
 20120     125E  02C3               	subwf	i1___fltol@exp1,f
 20121     125F                     i1l1416:
 20122     125F  0843               	movf	i1___fltol@exp1,w
 20123     1260  1D03               	btfss	3,2
 20124     1261  2A63               	goto	u623_21
 20125     1262  2A64               	goto	u623_20
 20126     1263                     u623_21:
 20127     1263  2A56               	goto	i1l5404
 20128     1264                     u623_20:
 20129     1264                     i1l5406:
 20130     1264  0842               	movf	i1___fltol@sign1,w
 20131     1265  1903               	btfsc	3,2
 20132     1266  2A68               	goto	u624_21
 20133     1267  2A69               	goto	u624_20
 20134     1268                     u624_21:
 20135     1268  2A74               	goto	i1l1419
 20136     1269                     u624_20:
 20137     1269                     i1l5408:
 20138     1269  09BA               	comf	i1___fltol@f1,f
 20139     126A  09BB               	comf	i1___fltol@f1+1,f
 20140     126B  09BC               	comf	i1___fltol@f1+2,f
 20141     126C  09BD               	comf	i1___fltol@f1+3,f
 20142     126D  0ABA               	incf	i1___fltol@f1,f
 20143     126E  1903               	skipnz
 20144     126F  0ABB               	incf	i1___fltol@f1+1,f
 20145     1270  1903               	skipnz
 20146     1271  0ABC               	incf	i1___fltol@f1+2,f
 20147     1272  1903               	skipnz
 20148     1273  0ABD               	incf	i1___fltol@f1+3,f
 20149     1274                     i1l1419:
 20150     1274                     i1l1409:
 20151     1274  0008               	return
 20152     1275                     __end_ofi1___fltol:
 20153                           
 20154                           	psect	text87
 20155     02CD                     __ptext87:	
 20156 ;; *************** function i1___flmul *****************
 20157 ;; Defined at:
 20158 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 20159 ;; Parameters:    Size  Location     Type
 20160 ;;  b               4    0[BANK0 ] long 
 20161 ;;  a               4    4[BANK0 ] long 
 20162 ;; Auto vars:     Size  Location     Type
 20163 ;;  prod            4   20[BANK0 ] struct .
 20164 ;;  grs             4   14[BANK0 ] unsigned long 
 20165 ;;  temp            2   24[BANK0 ] struct .
 20166 ;;  bexp            1   19[BANK0 ] unsigned char 
 20167 ;;  aexp            1   18[BANK0 ] unsigned char 
 20168 ;;  sign            1   13[BANK0 ] unsigned char 
 20169 ;; Return value:  Size  Location     Type
 20170 ;;                  4    0[BANK0 ] unsigned char 
 20171 ;; Registers used:
 20172 ;;		wreg, status,2, status,0, pclath, cstack
 20173 ;; Tracked objects:
 20174 ;;		On entry : 0/0
 20175 ;;		On exit  : 0/0
 20176 ;;		Unchanged: 0/0
 20177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20178 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20179 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20180 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20181 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20182 ;;Total ram usage:       26 bytes
 20183 ;; Hardware stack levels used: 1
 20184 ;; Hardware stack levels required when called: 1
 20185 ;; This function calls:
 20186 ;;		i1__Umul8_16
 20187 ;; This function is called by:
 20188 ;;		_controller
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192     02CD                     i1___flmul:	
 20193                           ;psect for function i1___flmul
 20194                           
 20195     02CD                     i1l5606:	
 20196                           ;incstack = 0
 20197                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 20198                           
 20199     02CD  0020               	movlb	0	; select bank0
 20200     02CE  0823               	movf	i1___flmul@b+3,w
 20201     02CF  3980               	andlw	128
 20202     02D0  00AD               	movwf	i1___flmul@sign
 20203     02D1                     i1l5608:
 20204     02D1  3523               	lslf	i1___flmul@b+3,w
 20205     02D2  00B3               	movwf	i1___flmul@bexp
 20206     02D3                     i1l5610:
 20207     02D3  1FA2               	btfss	i1___flmul@b+2,7
 20208     02D4  2AD6               	goto	u671_21
 20209     02D5  2AD7               	goto	u671_20
 20210     02D6                     u671_21:
 20211     02D6  2AD8               	goto	i1l5614
 20212     02D7                     u671_20:
 20213     02D7                     i1l5612:
 20214     02D7  1433               	bsf	i1___flmul@bexp,0
 20215     02D8                     i1l5614:
 20216     02D8  0833               	movf	i1___flmul@bexp,w
 20217     02D9  1903               	btfsc	3,2
 20218     02DA  2ADC               	goto	u672_21
 20219     02DB  2ADD               	goto	u672_20
 20220     02DC                     u672_21:
 20221     02DC  2AEC               	goto	i1l5622
 20222     02DD                     u672_20:
 20223     02DD                     i1l5616:
 20224     02DD  0A33               	incf	i1___flmul@bexp,w
 20225     02DE  1D03               	btfss	3,2
 20226     02DF  2AE1               	goto	u673_21
 20227     02E0  2AE2               	goto	u673_20
 20228     02E1                     u673_21:
 20229     02E1  2AEA               	goto	i1l5620
 20230     02E2                     u673_20:
 20231     02E2                     i1l5618:
 20232     02E2  3000               	movlw	0
 20233     02E3  00A3               	movwf	i1___flmul@b+3
 20234     02E4  3000               	movlw	0
 20235     02E5  00A2               	movwf	i1___flmul@b+2
 20236     02E6  3000               	movlw	0
 20237     02E7  00A1               	movwf	i1___flmul@b+1
 20238     02E8  3000               	movlw	0
 20239     02E9  00A0               	movwf	i1___flmul@b
 20240     02EA                     i1l5620:
 20241     02EA  17A2               	bsf	i1___flmul@b+2,7
 20242     02EB  2AF4               	goto	i1l5624
 20243     02EC                     i1l5622:
 20244     02EC  3000               	movlw	0
 20245     02ED  00A3               	movwf	i1___flmul@b+3
 20246     02EE  3000               	movlw	0
 20247     02EF  00A2               	movwf	i1___flmul@b+2
 20248     02F0  3000               	movlw	0
 20249     02F1  00A1               	movwf	i1___flmul@b+1
 20250     02F2  3000               	movlw	0
 20251     02F3  00A0               	movwf	i1___flmul@b
 20252     02F4                     i1l5624:
 20253     02F4  0827               	movf	i1___flmul@a+3,w
 20254     02F5  3980               	andlw	128
 20255     02F6  06AD               	xorwf	i1___flmul@sign,f
 20256     02F7                     i1l5626:
 20257     02F7  3527               	lslf	i1___flmul@a+3,w
 20258     02F8  00B2               	movwf	i1___flmul@aexp
 20259     02F9                     i1l5628:
 20260     02F9  1FA6               	btfss	i1___flmul@a+2,7
 20261     02FA  2AFC               	goto	u674_21
 20262     02FB  2AFD               	goto	u674_20
 20263     02FC                     u674_21:
 20264     02FC  2AFE               	goto	i1l5632
 20265     02FD                     u674_20:
 20266     02FD                     i1l5630:
 20267     02FD  1432               	bsf	i1___flmul@aexp,0
 20268     02FE                     i1l5632:
 20269     02FE  0832               	movf	i1___flmul@aexp,w
 20270     02FF  1903               	btfsc	3,2
 20271     0300  2B02               	goto	u675_21
 20272     0301  2B03               	goto	u675_20
 20273     0302                     u675_21:
 20274     0302  2B12               	goto	i1l5640
 20275     0303                     u675_20:
 20276     0303                     i1l5634:
 20277     0303  0A32               	incf	i1___flmul@aexp,w
 20278     0304  1D03               	btfss	3,2
 20279     0305  2B07               	goto	u676_21
 20280     0306  2B08               	goto	u676_20
 20281     0307                     u676_21:
 20282     0307  2B10               	goto	i1l5638
 20283     0308                     u676_20:
 20284     0308                     i1l5636:
 20285     0308  3000               	movlw	0
 20286     0309  00A7               	movwf	i1___flmul@a+3
 20287     030A  3000               	movlw	0
 20288     030B  00A6               	movwf	i1___flmul@a+2
 20289     030C  3000               	movlw	0
 20290     030D  00A5               	movwf	i1___flmul@a+1
 20291     030E  3000               	movlw	0
 20292     030F  00A4               	movwf	i1___flmul@a
 20293     0310                     i1l5638:
 20294     0310  17A6               	bsf	i1___flmul@a+2,7
 20295     0311  2B1A               	goto	i1l5642
 20296     0312                     i1l5640:
 20297     0312  3000               	movlw	0
 20298     0313  00A7               	movwf	i1___flmul@a+3
 20299     0314  3000               	movlw	0
 20300     0315  00A6               	movwf	i1___flmul@a+2
 20301     0316  3000               	movlw	0
 20302     0317  00A5               	movwf	i1___flmul@a+1
 20303     0318  3000               	movlw	0
 20304     0319  00A4               	movwf	i1___flmul@a
 20305     031A                     i1l5642:
 20306     031A  0832               	movf	i1___flmul@aexp,w
 20307     031B  1903               	btfsc	3,2
 20308     031C  2B1E               	goto	u677_21
 20309     031D  2B1F               	goto	u677_20
 20310     031E                     u677_21:
 20311     031E  2B24               	goto	i1l5646
 20312     031F                     u677_20:
 20313     031F                     i1l5644:
 20314     031F  0833               	movf	i1___flmul@bexp,w
 20315     0320  1D03               	btfss	3,2
 20316     0321  2B23               	goto	u678_21
 20317     0322  2B24               	goto	u678_20
 20318     0323                     u678_21:
 20319     0323  2B2D               	goto	i1l5650
 20320     0324                     u678_20:
 20321     0324                     i1l5646:
 20322     0324  3000               	movlw	0
 20323     0325  00A3               	movwf	?i1___flmul+3
 20324     0326  3000               	movlw	0
 20325     0327  00A2               	movwf	?i1___flmul+2
 20326     0328  3000               	movlw	0
 20327     0329  00A1               	movwf	?i1___flmul+1
 20328     032A  3000               	movlw	0
 20329     032B  00A0               	movwf	?i1___flmul
 20330     032C  2D07               	goto	i1l1612
 20331     032D                     i1l5650:
 20332     032D  0820               	movf	i1___flmul@b,w
 20333     032E  00F0               	movwf	i1__Umul8_16@multiplicand
 20334     032F  0826               	movf	i1___flmul@a+2,w
 20335     0330  319D  2536  3182   	fcall	i1__Umul8_16
 20336     0333  0871               	movf	?i1__Umul8_16+1,w
 20337     0334  0020               	movlb	0	; select bank0
 20338     0335  00B9               	movwf	i1___flmul@temp+1
 20339     0336  0870               	movf	?i1__Umul8_16,w
 20340     0337  00B8               	movwf	i1___flmul@temp
 20341     0338                     i1l5652:
 20342     0338  0838               	movf	i1___flmul@temp,w
 20343     0339  00A8               	movwf	??i1___flmul
 20344     033A  01A9               	clrf	??i1___flmul+1
 20345     033B  01AA               	clrf	??i1___flmul+2
 20346     033C  01AB               	clrf	??i1___flmul+3
 20347     033D  082B               	movf	??i1___flmul+3,w
 20348     033E  00B1               	movwf	i1___flmul@grs+3
 20349     033F  082A               	movf	??i1___flmul+2,w
 20350     0340  00B0               	movwf	i1___flmul@grs+2
 20351     0341  0829               	movf	??i1___flmul+1,w
 20352     0342  00AF               	movwf	i1___flmul@grs+1
 20353     0343  0828               	movf	??i1___flmul,w
 20354     0344  00AE               	movwf	i1___flmul@grs
 20355     0345                     i1l5654:
 20356     0345  0839               	movf	i1___flmul@temp+1,w
 20357     0346  00A8               	movwf	??i1___flmul
 20358     0347  01A9               	clrf	??i1___flmul+1
 20359     0348  01AA               	clrf	??i1___flmul+2
 20360     0349  01AB               	clrf	??i1___flmul+3
 20361     034A  082B               	movf	??i1___flmul+3,w
 20362     034B  00B7               	movwf	i1___flmul@prod+3
 20363     034C  082A               	movf	??i1___flmul+2,w
 20364     034D  00B6               	movwf	i1___flmul@prod+2
 20365     034E  0829               	movf	??i1___flmul+1,w
 20366     034F  00B5               	movwf	i1___flmul@prod+1
 20367     0350  0828               	movf	??i1___flmul,w
 20368     0351  00B4               	movwf	i1___flmul@prod
 20369     0352  0821               	movf	i1___flmul@b+1,w
 20370     0353  00F0               	movwf	i1__Umul8_16@multiplicand
 20371     0354  0825               	movf	i1___flmul@a+1,w
 20372     0355  319D  2536  3182   	fcall	i1__Umul8_16
 20373     0358  0871               	movf	?i1__Umul8_16+1,w
 20374     0359  0020               	movlb	0	; select bank0
 20375     035A  00B9               	movwf	i1___flmul@temp+1
 20376     035B  0870               	movf	?i1__Umul8_16,w
 20377     035C  00B8               	movwf	i1___flmul@temp
 20378     035D                     i1l5656:
 20379     035D  0838               	movf	i1___flmul@temp,w
 20380     035E  00A8               	movwf	??i1___flmul
 20381     035F  01A9               	clrf	??i1___flmul+1
 20382     0360  01AA               	clrf	??i1___flmul+2
 20383     0361  01AB               	clrf	??i1___flmul+3
 20384     0362  0828               	movf	??i1___flmul,w
 20385     0363  07AE               	addwf	i1___flmul@grs,f
 20386     0364  0829               	movf	??i1___flmul+1,w
 20387     0365  3DAF               	addwfc	i1___flmul@grs+1,f
 20388     0366  082A               	movf	??i1___flmul+2,w
 20389     0367  3DB0               	addwfc	i1___flmul@grs+2,f
 20390     0368  082B               	movf	??i1___flmul+3,w
 20391     0369  3DB1               	addwfc	i1___flmul@grs+3,f
 20392     036A                     i1l5658:
 20393     036A  0839               	movf	i1___flmul@temp+1,w
 20394     036B  00A8               	movwf	??i1___flmul
 20395     036C  01A9               	clrf	??i1___flmul+1
 20396     036D  01AA               	clrf	??i1___flmul+2
 20397     036E  01AB               	clrf	??i1___flmul+3
 20398     036F  0828               	movf	??i1___flmul,w
 20399     0370  07B4               	addwf	i1___flmul@prod,f
 20400     0371  0829               	movf	??i1___flmul+1,w
 20401     0372  3DB5               	addwfc	i1___flmul@prod+1,f
 20402     0373  082A               	movf	??i1___flmul+2,w
 20403     0374  3DB6               	addwfc	i1___flmul@prod+2,f
 20404     0375  082B               	movf	??i1___flmul+3,w
 20405     0376  3DB7               	addwfc	i1___flmul@prod+3,f
 20406     0377  0822               	movf	i1___flmul@b+2,w
 20407     0378  00F0               	movwf	i1__Umul8_16@multiplicand
 20408     0379  0824               	movf	i1___flmul@a,w
 20409     037A  319D  2536  3182   	fcall	i1__Umul8_16
 20410     037D  0871               	movf	?i1__Umul8_16+1,w
 20411     037E  0020               	movlb	0	; select bank0
 20412     037F  00B9               	movwf	i1___flmul@temp+1
 20413     0380  0870               	movf	?i1__Umul8_16,w
 20414     0381  00B8               	movwf	i1___flmul@temp
 20415     0382                     i1l5660:
 20416     0382  0838               	movf	i1___flmul@temp,w
 20417     0383  00A8               	movwf	??i1___flmul
 20418     0384  01A9               	clrf	??i1___flmul+1
 20419     0385  01AA               	clrf	??i1___flmul+2
 20420     0386  01AB               	clrf	??i1___flmul+3
 20421     0387  0828               	movf	??i1___flmul,w
 20422     0388  07AE               	addwf	i1___flmul@grs,f
 20423     0389  0829               	movf	??i1___flmul+1,w
 20424     038A  3DAF               	addwfc	i1___flmul@grs+1,f
 20425     038B  082A               	movf	??i1___flmul+2,w
 20426     038C  3DB0               	addwfc	i1___flmul@grs+2,f
 20427     038D  082B               	movf	??i1___flmul+3,w
 20428     038E  3DB1               	addwfc	i1___flmul@grs+3,f
 20429     038F                     i1l5662:
 20430     038F  0839               	movf	i1___flmul@temp+1,w
 20431     0390  00A8               	movwf	??i1___flmul
 20432     0391  01A9               	clrf	??i1___flmul+1
 20433     0392  01AA               	clrf	??i1___flmul+2
 20434     0393  01AB               	clrf	??i1___flmul+3
 20435     0394  0828               	movf	??i1___flmul,w
 20436     0395  07B4               	addwf	i1___flmul@prod,f
 20437     0396  0829               	movf	??i1___flmul+1,w
 20438     0397  3DB5               	addwfc	i1___flmul@prod+1,f
 20439     0398  082A               	movf	??i1___flmul+2,w
 20440     0399  3DB6               	addwfc	i1___flmul@prod+2,f
 20441     039A  082B               	movf	??i1___flmul+3,w
 20442     039B  3DB7               	addwfc	i1___flmul@prod+3,f
 20443     039C                     i1l5664:
 20444     039C  3008               	movlw	8
 20445     039D                     u679_25:
 20446     039D  35AE               	lslf	i1___flmul@grs,f
 20447     039E  0DAF               	rlf	i1___flmul@grs+1,f
 20448     039F  0DB0               	rlf	i1___flmul@grs+2,f
 20449     03A0  0DB1               	rlf	i1___flmul@grs+3,f
 20450     03A1  0B89               	decfsz	9,f
 20451     03A2  2B9D               	goto	u679_25
 20452     03A3                     i1l5666:
 20453     03A3  0821               	movf	i1___flmul@b+1,w
 20454     03A4  00F0               	movwf	i1__Umul8_16@multiplicand
 20455     03A5  0824               	movf	i1___flmul@a,w
 20456     03A6  319D  2536  3182   	fcall	i1__Umul8_16
 20457     03A9  0871               	movf	?i1__Umul8_16+1,w
 20458     03AA  0020               	movlb	0	; select bank0
 20459     03AB  00B9               	movwf	i1___flmul@temp+1
 20460     03AC  0870               	movf	?i1__Umul8_16,w
 20461     03AD  00B8               	movwf	i1___flmul@temp
 20462     03AE                     i1l5668:
 20463     03AE  0838               	movf	i1___flmul@temp,w
 20464     03AF  07AE               	addwf	i1___flmul@grs,f
 20465     03B0  0839               	movf	i1___flmul@temp+1,w
 20466     03B1  3DAF               	addwfc	i1___flmul@grs+1,f
 20467     03B2  3000               	movlw	0
 20468     03B3  3DB0               	addwfc	i1___flmul@grs+2,f
 20469     03B4  3DB1               	addwfc	i1___flmul@grs+3,f
 20470     03B5                     i1l5670:
 20471     03B5  0820               	movf	i1___flmul@b,w
 20472     03B6  00F0               	movwf	i1__Umul8_16@multiplicand
 20473     03B7  0825               	movf	i1___flmul@a+1,w
 20474     03B8  319D  2536  3182   	fcall	i1__Umul8_16
 20475     03BB  0871               	movf	?i1__Umul8_16+1,w
 20476     03BC  0020               	movlb	0	; select bank0
 20477     03BD  00B9               	movwf	i1___flmul@temp+1
 20478     03BE  0870               	movf	?i1__Umul8_16,w
 20479     03BF  00B8               	movwf	i1___flmul@temp
 20480     03C0                     i1l5672:
 20481     03C0  0838               	movf	i1___flmul@temp,w
 20482     03C1  07AE               	addwf	i1___flmul@grs,f
 20483     03C2  0839               	movf	i1___flmul@temp+1,w
 20484     03C3  3DAF               	addwfc	i1___flmul@grs+1,f
 20485     03C4  3000               	movlw	0
 20486     03C5  3DB0               	addwfc	i1___flmul@grs+2,f
 20487     03C6  3DB1               	addwfc	i1___flmul@grs+3,f
 20488     03C7                     i1l5674:
 20489     03C7  3008               	movlw	8
 20490     03C8                     u680_25:
 20491     03C8  35AE               	lslf	i1___flmul@grs,f
 20492     03C9  0DAF               	rlf	i1___flmul@grs+1,f
 20493     03CA  0DB0               	rlf	i1___flmul@grs+2,f
 20494     03CB  0DB1               	rlf	i1___flmul@grs+3,f
 20495     03CC  0B89               	decfsz	9,f
 20496     03CD  2BC8               	goto	u680_25
 20497     03CE  0820               	movf	i1___flmul@b,w
 20498     03CF  00F0               	movwf	i1__Umul8_16@multiplicand
 20499     03D0  0824               	movf	i1___flmul@a,w
 20500     03D1  319D  2536  3182   	fcall	i1__Umul8_16
 20501     03D4  0871               	movf	?i1__Umul8_16+1,w
 20502     03D5  0020               	movlb	0	; select bank0
 20503     03D6  00B9               	movwf	i1___flmul@temp+1
 20504     03D7  0870               	movf	?i1__Umul8_16,w
 20505     03D8  00B8               	movwf	i1___flmul@temp
 20506     03D9                     i1l5676:
 20507     03D9  0838               	movf	i1___flmul@temp,w
 20508     03DA  07AE               	addwf	i1___flmul@grs,f
 20509     03DB  0839               	movf	i1___flmul@temp+1,w
 20510     03DC  3DAF               	addwfc	i1___flmul@grs+1,f
 20511     03DD  3000               	movlw	0
 20512     03DE  3DB0               	addwfc	i1___flmul@grs+2,f
 20513     03DF  3DB1               	addwfc	i1___flmul@grs+3,f
 20514     03E0                     i1l5678:
 20515     03E0  0821               	movf	i1___flmul@b+1,w
 20516     03E1  00F0               	movwf	i1__Umul8_16@multiplicand
 20517     03E2  0826               	movf	i1___flmul@a+2,w
 20518     03E3  319D  2536  3182   	fcall	i1__Umul8_16
 20519     03E6  0871               	movf	?i1__Umul8_16+1,w
 20520     03E7  0020               	movlb	0	; select bank0
 20521     03E8  00B9               	movwf	i1___flmul@temp+1
 20522     03E9  0870               	movf	?i1__Umul8_16,w
 20523     03EA  00B8               	movwf	i1___flmul@temp
 20524     03EB  0838               	movf	i1___flmul@temp,w
 20525     03EC  07B4               	addwf	i1___flmul@prod,f
 20526     03ED  0839               	movf	i1___flmul@temp+1,w
 20527     03EE  3DB5               	addwfc	i1___flmul@prod+1,f
 20528     03EF  3000               	movlw	0
 20529     03F0  3DB6               	addwfc	i1___flmul@prod+2,f
 20530     03F1  3DB7               	addwfc	i1___flmul@prod+3,f
 20531     03F2                     i1l5680:
 20532     03F2  0822               	movf	i1___flmul@b+2,w
 20533     03F3  00F0               	movwf	i1__Umul8_16@multiplicand
 20534     03F4  0825               	movf	i1___flmul@a+1,w
 20535     03F5  319D  2536  3182   	fcall	i1__Umul8_16
 20536     03F8  0871               	movf	?i1__Umul8_16+1,w
 20537     03F9  0020               	movlb	0	; select bank0
 20538     03FA  00B9               	movwf	i1___flmul@temp+1
 20539     03FB  0870               	movf	?i1__Umul8_16,w
 20540     03FC  00B8               	movwf	i1___flmul@temp
 20541     03FD                     i1l5682:
 20542     03FD  0838               	movf	i1___flmul@temp,w
 20543     03FE  07B4               	addwf	i1___flmul@prod,f
 20544     03FF  0839               	movf	i1___flmul@temp+1,w
 20545     0400  3DB5               	addwfc	i1___flmul@prod+1,f
 20546     0401  3000               	movlw	0
 20547     0402  3DB6               	addwfc	i1___flmul@prod+2,f
 20548     0403  3DB7               	addwfc	i1___flmul@prod+3,f
 20549     0404  0822               	movf	i1___flmul@b+2,w
 20550     0405  00F0               	movwf	i1__Umul8_16@multiplicand
 20551     0406  0826               	movf	i1___flmul@a+2,w
 20552     0407  319D  2536  3182   	fcall	i1__Umul8_16
 20553     040A  0871               	movf	?i1__Umul8_16+1,w
 20554     040B  0020               	movlb	0	; select bank0
 20555     040C  00B9               	movwf	i1___flmul@temp+1
 20556     040D  0870               	movf	?i1__Umul8_16,w
 20557     040E  00B8               	movwf	i1___flmul@temp
 20558     040F                     i1l5684:
 20559     040F  0838               	movf	i1___flmul@temp,w
 20560     0410  00A8               	movwf	??i1___flmul
 20561     0411  0839               	movf	i1___flmul@temp+1,w
 20562     0412  00A9               	movwf	??i1___flmul+1
 20563     0413  01AA               	clrf	??i1___flmul+2
 20564     0414  01AB               	clrf	??i1___flmul+3
 20565     0415  3008               	movlw	8
 20566     0416                     u681_25:
 20567     0416  35A8               	lslf	??i1___flmul,f
 20568     0417  0DA9               	rlf	??i1___flmul+1,f
 20569     0418  0DAA               	rlf	??i1___flmul+2,f
 20570     0419  0DAB               	rlf	??i1___flmul+3,f
 20571     041A                     u681_20:
 20572     041A  0B89               	decfsz	9,f
 20573     041B  2C16               	goto	u681_25
 20574     041C  0828               	movf	??i1___flmul,w
 20575     041D  07B4               	addwf	i1___flmul@prod,f
 20576     041E  0829               	movf	??i1___flmul+1,w
 20577     041F  3DB5               	addwfc	i1___flmul@prod+1,f
 20578     0420  082A               	movf	??i1___flmul+2,w
 20579     0421  3DB6               	addwfc	i1___flmul@prod+2,f
 20580     0422  082B               	movf	??i1___flmul+3,w
 20581     0423  3DB7               	addwfc	i1___flmul@prod+3,f
 20582     0424                     i1l5686:
 20583     0424  082E               	movf	i1___flmul@grs,w
 20584     0425  00A8               	movwf	??i1___flmul
 20585     0426  082F               	movf	i1___flmul@grs+1,w
 20586     0427  00A9               	movwf	??i1___flmul+1
 20587     0428  0830               	movf	i1___flmul@grs+2,w
 20588     0429  00AA               	movwf	??i1___flmul+2
 20589     042A  0831               	movf	i1___flmul@grs+3,w
 20590     042B  00AB               	movwf	??i1___flmul+3
 20591     042C  3018               	movlw	24
 20592     042D                     u682_25:
 20593     042D  36AB               	lsrf	??i1___flmul+3,f
 20594     042E  0CAA               	rrf	??i1___flmul+2,f
 20595     042F  0CA9               	rrf	??i1___flmul+1,f
 20596     0430  0CA8               	rrf	??i1___flmul,f
 20597     0431                     u682_20:
 20598     0431  0B89               	decfsz	9,f
 20599     0432  2C2D               	goto	u682_25
 20600     0433  0828               	movf	??i1___flmul,w
 20601     0434  07B4               	addwf	i1___flmul@prod,f
 20602     0435  0829               	movf	??i1___flmul+1,w
 20603     0436  3DB5               	addwfc	i1___flmul@prod+1,f
 20604     0437  082A               	movf	??i1___flmul+2,w
 20605     0438  3DB6               	addwfc	i1___flmul@prod+2,f
 20606     0439  082B               	movf	??i1___flmul+3,w
 20607     043A  3DB7               	addwfc	i1___flmul@prod+3,f
 20608     043B                     i1l5688:
 20609     043B  3008               	movlw	8
 20610     043C                     u683_25:
 20611     043C  35AE               	lslf	i1___flmul@grs,f
 20612     043D  0DAF               	rlf	i1___flmul@grs+1,f
 20613     043E  0DB0               	rlf	i1___flmul@grs+2,f
 20614     043F  0DB1               	rlf	i1___flmul@grs+3,f
 20615     0440  0B89               	decfsz	9,f
 20616     0441  2C3C               	goto	u683_25
 20617     0442                     i1l5690:
 20618     0442  0833               	movf	i1___flmul@bexp,w
 20619     0443  0732               	addwf	i1___flmul@aexp,w
 20620     0444  00A8               	movwf	??i1___flmul
 20621     0445  01A9               	clrf	??i1___flmul+1
 20622     0446  0DA9               	rlf	??i1___flmul+1,f
 20623     0447  0828               	movf	??i1___flmul,w
 20624     0448  3E82               	addlw	130
 20625     0449  00B8               	movwf	i1___flmul@temp
 20626     044A  30FF               	movlw	255
 20627     044B  3D29               	addwfc	??i1___flmul+1,w
 20628     044C  00B9               	movwf	i1___flmul@temp+1
 20629     044D  2C65               	goto	i1l5702
 20630     044E                     i1l5692:
 20631     044E  3001               	movlw	1
 20632     044F                     u684_25:
 20633     044F  35B4               	lslf	i1___flmul@prod,f
 20634     0450  0DB5               	rlf	i1___flmul@prod+1,f
 20635     0451  0DB6               	rlf	i1___flmul@prod+2,f
 20636     0452  0DB7               	rlf	i1___flmul@prod+3,f
 20637     0453  0B89               	decfsz	9,f
 20638     0454  2C4F               	goto	u684_25
 20639     0455                     i1l5694:
 20640     0455  1FB1               	btfss	i1___flmul@grs+3,7
 20641     0456  2C58               	goto	u685_21
 20642     0457  2C59               	goto	u685_20
 20643     0458                     u685_21:
 20644     0458  2C5A               	goto	i1l5698
 20645     0459                     u685_20:
 20646     0459                     i1l5696:
 20647     0459  1434               	bsf	i1___flmul@prod,0
 20648     045A                     i1l5698:
 20649     045A  3001               	movlw	1
 20650     045B                     u686_25:
 20651     045B  35AE               	lslf	i1___flmul@grs,f
 20652     045C  0DAF               	rlf	i1___flmul@grs+1,f
 20653     045D  0DB0               	rlf	i1___flmul@grs+2,f
 20654     045E  0DB1               	rlf	i1___flmul@grs+3,f
 20655     045F  0B89               	decfsz	9,f
 20656     0460  2C5B               	goto	u686_25
 20657     0461                     i1l5700:
 20658     0461  30FF               	movlw	255
 20659     0462  07B8               	addwf	i1___flmul@temp,f
 20660     0463  30FF               	movlw	255
 20661     0464  3DB9               	addwfc	i1___flmul@temp+1,f
 20662     0465                     i1l5702:
 20663     0465  1FB6               	btfss	i1___flmul@prod+2,7
 20664     0466  2C68               	goto	u687_21
 20665     0467  2C69               	goto	u687_20
 20666     0468                     u687_21:
 20667     0468  2C4E               	goto	i1l5692
 20668     0469                     u687_20:
 20669     0469                     i1l5704:
 20670     0469  01B2               	clrf	i1___flmul@aexp
 20671     046A                     i1l5706:
 20672     046A  1FB1               	btfss	i1___flmul@grs+3,7
 20673     046B  2C6D               	goto	u688_21
 20674     046C  2C6E               	goto	u688_20
 20675     046D                     u688_21:
 20676     046D  2C8A               	goto	i1l5714
 20677     046E                     u688_20:
 20678     046E                     i1l5708:
 20679     046E  30FF               	movlw	255
 20680     046F  052E               	andwf	i1___flmul@grs,w
 20681     0470  00A8               	movwf	??i1___flmul
 20682     0471  30FF               	movlw	255
 20683     0472  052F               	andwf	i1___flmul@grs+1,w
 20684     0473  00A9               	movwf	??i1___flmul+1
 20685     0474  30FF               	movlw	255
 20686     0475  0530               	andwf	i1___flmul@grs+2,w
 20687     0476  00AA               	movwf	??i1___flmul+2
 20688     0477  307F               	movlw	127
 20689     0478  0531               	andwf	i1___flmul@grs+3,w
 20690     0479  00AB               	movwf	??i1___flmul+3
 20691     047A  082B               	movf	??i1___flmul+3,w
 20692     047B  042A               	iorwf	??i1___flmul+2,w
 20693     047C  0429               	iorwf	??i1___flmul+1,w
 20694     047D  0428               	iorwf	??i1___flmul,w
 20695     047E  1903               	skipnz
 20696     047F  2C81               	goto	u689_21
 20697     0480  2C82               	goto	u689_20
 20698     0481                     u689_21:
 20699     0481  2C85               	goto	i1l1618
 20700     0482                     u689_20:
 20701     0482                     i1l5710:
 20702     0482  3001               	movlw	1
 20703     0483  00B2               	movwf	i1___flmul@aexp
 20704     0484  2C8A               	goto	i1l5714
 20705     0485                     i1l1618:
 20706     0485  1C34               	btfss	i1___flmul@prod,0
 20707     0486  2C88               	goto	u690_21
 20708     0487  2C89               	goto	u690_20
 20709     0488                     u690_21:
 20710     0488  2C8A               	goto	i1l5714
 20711     0489                     u690_20:
 20712     0489  2C82               	goto	i1l5710
 20713     048A                     i1l5714:
 20714     048A  0832               	movf	i1___flmul@aexp,w
 20715     048B  1903               	btfsc	3,2
 20716     048C  2C8E               	goto	u691_21
 20717     048D  2C8F               	goto	u691_20
 20718     048E                     u691_21:
 20719     048E  2CB5               	goto	i1l5724
 20720     048F                     u691_20:
 20721     048F                     i1l5716:
 20722     048F  3001               	movlw	1
 20723     0490  07B4               	addwf	i1___flmul@prod,f
 20724     0491  3000               	movlw	0
 20725     0492  3DB5               	addwfc	i1___flmul@prod+1,f
 20726     0493  3DB6               	addwfc	i1___flmul@prod+2,f
 20727     0494  3DB7               	addwfc	i1___flmul@prod+3,f
 20728     0495                     i1l5718:
 20729     0495  1C37               	btfss	i1___flmul@prod+3,0
 20730     0496  2C98               	goto	u692_21
 20731     0497  2C99               	goto	u692_20
 20732     0498                     u692_21:
 20733     0498  2CB5               	goto	i1l5724
 20734     0499                     u692_20:
 20735     0499                     i1l5720:
 20736     0499  0834               	movf	i1___flmul@prod,w
 20737     049A  00A8               	movwf	??i1___flmul
 20738     049B  0835               	movf	i1___flmul@prod+1,w
 20739     049C  00A9               	movwf	??i1___flmul+1
 20740     049D  0836               	movf	i1___flmul@prod+2,w
 20741     049E  00AA               	movwf	??i1___flmul+2
 20742     049F  0837               	movf	i1___flmul@prod+3,w
 20743     04A0  00AB               	movwf	??i1___flmul+3
 20744     04A1  3001               	movlw	1
 20745     04A2  00AC               	movwf	??i1___flmul+4
 20746     04A3                     u693_25:
 20747     04A3  37AB               	asrf	??i1___flmul+3,f
 20748     04A4  0CAA               	rrf	??i1___flmul+2,f
 20749     04A5  0CA9               	rrf	??i1___flmul+1,f
 20750     04A6  0CA8               	rrf	??i1___flmul,f
 20751     04A7                     u693_20:
 20752     04A7  0BAC               	decfsz	??i1___flmul+4,f
 20753     04A8  2CA3               	goto	u693_25
 20754     04A9  082B               	movf	??i1___flmul+3,w
 20755     04AA  00B7               	movwf	i1___flmul@prod+3
 20756     04AB  082A               	movf	??i1___flmul+2,w
 20757     04AC  00B6               	movwf	i1___flmul@prod+2
 20758     04AD  0829               	movf	??i1___flmul+1,w
 20759     04AE  00B5               	movwf	i1___flmul@prod+1
 20760     04AF  0828               	movf	??i1___flmul,w
 20761     04B0  00B4               	movwf	i1___flmul@prod
 20762     04B1                     i1l5722:
 20763     04B1  3001               	movlw	1
 20764     04B2  07B8               	addwf	i1___flmul@temp,f
 20765     04B3  3000               	movlw	0
 20766     04B4  3DB9               	addwfc	i1___flmul@temp+1,f
 20767     04B5                     i1l5724:
 20768     04B5  0839               	movf	i1___flmul@temp+1,w
 20769     04B6  3A80               	xorlw	128
 20770     04B7  00A8               	movwf	??i1___flmul
 20771     04B8  3080               	movlw	128
 20772     04B9  0228               	subwf	??i1___flmul,w
 20773     04BA  1D03               	skipz
 20774     04BB  2CBE               	goto	u694_25
 20775     04BC  30FF               	movlw	255
 20776     04BD  0238               	subwf	i1___flmul@temp,w
 20777     04BE                     u694_25:
 20778     04BE  1C03               	skipc
 20779     04BF  2CC1               	goto	u694_21
 20780     04C0  2CC2               	goto	u694_20
 20781     04C1                     u694_21:
 20782     04C1  2CCC               	goto	i1l5728
 20783     04C2                     u694_20:
 20784     04C2                     i1l5726:
 20785     04C2  307F               	movlw	127
 20786     04C3  0020               	movlb	0	; select bank0
 20787     04C4  00B7               	movwf	i1___flmul@prod+3
 20788     04C5  3080               	movlw	128
 20789     04C6  00B6               	movwf	i1___flmul@prod+2
 20790     04C7  3000               	movlw	0
 20791     04C8  00B5               	movwf	i1___flmul@prod+1
 20792     04C9  3000               	movlw	0
 20793     04CA  00B4               	movwf	i1___flmul@prod
 20794     04CB  2CFD               	goto	i1l1624
 20795     04CC                     i1l5728:
 20796     04CC  0020               	movlb	0	; select bank0
 20797     04CD  0839               	movf	i1___flmul@temp+1,w
 20798     04CE  3A80               	xorlw	128
 20799     04CF  00A8               	movwf	??i1___flmul
 20800     04D0  3080               	movlw	128
 20801     04D1  0228               	subwf	??i1___flmul,w
 20802     04D2  1D03               	skipz
 20803     04D3  2CD6               	goto	u695_25
 20804     04D4  3001               	movlw	1
 20805     04D5  0238               	subwf	i1___flmul@temp,w
 20806     04D6                     u695_25:
 20807     04D6  1803               	skipnc
 20808     04D7  2CD9               	goto	u695_21
 20809     04D8  2CDA               	goto	u695_20
 20810     04D9                     u695_21:
 20811     04D9  2CE5               	goto	i1l5734
 20812     04DA                     u695_20:
 20813     04DA                     i1l5730:
 20814     04DA  3000               	movlw	0
 20815     04DB  0020               	movlb	0	; select bank0
 20816     04DC  00B7               	movwf	i1___flmul@prod+3
 20817     04DD  3000               	movlw	0
 20818     04DE  00B6               	movwf	i1___flmul@prod+2
 20819     04DF  3000               	movlw	0
 20820     04E0  00B5               	movwf	i1___flmul@prod+1
 20821     04E1  3000               	movlw	0
 20822     04E2  00B4               	movwf	i1___flmul@prod
 20823     04E3                     i1l5732:
 20824     04E3  01AD               	clrf	i1___flmul@sign
 20825     04E4  2CFD               	goto	i1l1624
 20826     04E5                     i1l5734:
 20827     04E5  0020               	movlb	0	; select bank0
 20828     04E6  0838               	movf	i1___flmul@temp,w
 20829     04E7  00B3               	movwf	i1___flmul@bexp
 20830     04E8  30FF               	movlw	255
 20831     04E9  05B4               	andwf	i1___flmul@prod,f
 20832     04EA  30FF               	movlw	255
 20833     04EB  05B5               	andwf	i1___flmul@prod+1,f
 20834     04EC  307F               	movlw	127
 20835     04ED  05B6               	andwf	i1___flmul@prod+2,f
 20836     04EE  3000               	movlw	0
 20837     04EF  05B7               	andwf	i1___flmul@prod+3,f
 20838     04F0                     i1l5736:
 20839     04F0  1C33               	btfss	i1___flmul@bexp,0
 20840     04F1  2CF3               	goto	u696_21
 20841     04F2  2CF4               	goto	u696_20
 20842     04F3                     u696_21:
 20843     04F3  2CF5               	goto	i1l5740
 20844     04F4                     u696_20:
 20845     04F4                     i1l5738:
 20846     04F4  17B6               	bsf	i1___flmul@prod+2,7
 20847     04F5                     i1l5740:
 20848     04F5  0833               	movf	i1___flmul@bexp,w
 20849     04F6  00A8               	movwf	??i1___flmul
 20850     04F7  3001               	movlw	1
 20851     04F8                     u697_25:
 20852     04F8  36A8               	lsrf	??i1___flmul,f
 20853     04F9  0B89               	decfsz	9,f
 20854     04FA  2CF8               	goto	u697_25
 20855     04FB  0828               	movf	??i1___flmul,w
 20856     04FC  00B7               	movwf	i1___flmul@prod+3
 20857     04FD                     i1l1624:
 20858     04FD  082D               	movf	i1___flmul@sign,w
 20859     04FE  04B7               	iorwf	i1___flmul@prod+3,f
 20860     04FF                     i1l5742:
 20861     04FF  0837               	movf	i1___flmul@prod+3,w
 20862     0500  00A3               	movwf	?i1___flmul+3
 20863     0501  0836               	movf	i1___flmul@prod+2,w
 20864     0502  00A2               	movwf	?i1___flmul+2
 20865     0503  0835               	movf	i1___flmul@prod+1,w
 20866     0504  00A1               	movwf	?i1___flmul+1
 20867     0505  0834               	movf	i1___flmul@prod,w
 20868     0506  00A0               	movwf	?i1___flmul
 20869     0507                     i1l1612:
 20870     0507  0008               	return
 20871     0508                     __end_ofi1___flmul:
 20872                           
 20873                           	psect	text88
 20874     1D36                     __ptext88:	
 20875 ;; *************** function i1__Umul8_16 *****************
 20876 ;; Defined at:
 20877 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 20878 ;; Parameters:    Size  Location     Type
 20879 ;;  multiplier      1    wreg     unsigned char 
 20880 ;;  multiplicand    1    0[COMMON] unsigned char 
 20881 ;; Auto vars:     Size  Location     Type
 20882 ;;  multiplier      1    8[COMMON] unsigned char 
 20883 ;;  word_mpld       2    6[COMMON] unsigned short 
 20884 ;;  product         2    4[COMMON] unsigned short 
 20885 ;; Return value:  Size  Location     Type
 20886 ;;                  2    0[COMMON] unsigned int 
 20887 ;; Registers used:
 20888 ;;		wreg, status,2, status,0
 20889 ;; Tracked objects:
 20890 ;;		On entry : 0/0
 20891 ;;		On exit  : 0/0
 20892 ;;		Unchanged: 0/0
 20893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20895 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20897 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20898 ;;Total ram usage:        9 bytes
 20899 ;; Hardware stack levels used: 1
 20900 ;; This function calls:
 20901 ;;		Nothing
 20902 ;; This function is called by:
 20903 ;;		i1___flmul
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907     1D36                     i1__Umul8_16:	
 20908                           ;psect for function i1__Umul8_16
 20909                           
 20910                           
 20911                           ;incstack = 0
 20912                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 20913                           ;i1__Umul8_16@multiplier stored from wreg
 20914     1D36  00F8               	movwf	i1__Umul8_16@multiplier
 20915     1D37                     i1l5110:
 20916     1D37  01F4               	clrf	i1__Umul8_16@product
 20917     1D38  01F5               	clrf	i1__Umul8_16@product+1
 20918     1D39                     i1l5112:
 20919     1D39  0870               	movf	i1__Umul8_16@multiplicand,w
 20920     1D3A  00F2               	movwf	??i1__Umul8_16
 20921     1D3B  01F3               	clrf	??i1__Umul8_16+1
 20922     1D3C  0872               	movf	??i1__Umul8_16,w
 20923     1D3D  00F6               	movwf	i1__Umul8_16@word_mpld
 20924     1D3E  0873               	movf	??i1__Umul8_16+1,w
 20925     1D3F  00F7               	movwf	i1__Umul8_16@word_mpld+1
 20926     1D40                     i1l5114:
 20927     1D40  1C78               	btfss	i1__Umul8_16@multiplier,0
 20928     1D41  2D43               	goto	u569_21
 20929     1D42  2D44               	goto	u569_20
 20930     1D43                     u569_21:
 20931     1D43  2D48               	goto	i1l1631
 20932     1D44                     u569_20:
 20933     1D44                     i1l5116:
 20934     1D44  0876               	movf	i1__Umul8_16@word_mpld,w
 20935     1D45  07F4               	addwf	i1__Umul8_16@product,f
 20936     1D46  0877               	movf	i1__Umul8_16@word_mpld+1,w
 20937     1D47  3DF5               	addwfc	i1__Umul8_16@product+1,f
 20938     1D48                     i1l1631:
 20939     1D48  3001               	movlw	1
 20940     1D49                     u570_25:
 20941     1D49  35F6               	lslf	i1__Umul8_16@word_mpld,f
 20942     1D4A  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 20943     1D4B  0B89               	decfsz	9,f
 20944     1D4C  2D49               	goto	u570_25
 20945     1D4D  1003               	clrc
 20946     1D4E  0CF8               	rrf	i1__Umul8_16@multiplier,f
 20947     1D4F                     i1l5118:
 20948     1D4F  0878               	movf	i1__Umul8_16@multiplier,w
 20949     1D50  1D03               	btfss	3,2
 20950     1D51  2D53               	goto	u571_21
 20951     1D52  2D54               	goto	u571_20
 20952     1D53                     u571_21:
 20953     1D53  2D40               	goto	i1l5114
 20954     1D54                     u571_20:
 20955     1D54                     i1l5120:
 20956     1D54  0875               	movf	i1__Umul8_16@product+1,w
 20957     1D55  00F1               	movwf	?i1__Umul8_16+1
 20958     1D56  0874               	movf	i1__Umul8_16@product,w
 20959     1D57  00F0               	movwf	?i1__Umul8_16
 20960     1D58                     i1l1633:
 20961     1D58  0008               	return
 20962     1D59                     __end_ofi1__Umul8_16:
 20963                           
 20964                           	psect	text89
 20965     0DF4                     __ptext89:	
 20966 ;; *************** function i1___fladd *****************
 20967 ;; Defined at:
 20968 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 20969 ;; Parameters:    Size  Location     Type
 20970 ;;  b               4   26[BANK0 ] unsigned int 
 20971 ;;  a               4   30[BANK0 ] unsigned int 
 20972 ;; Auto vars:     Size  Location     Type
 20973 ;;  grs             1   45[BANK0 ] unsigned char 
 20974 ;;  bexp            1   44[BANK0 ] unsigned char 
 20975 ;;  aexp            1   43[BANK0 ] unsigned char 
 20976 ;;  signs           1   42[BANK0 ] unsigned char 
 20977 ;; Return value:  Size  Location     Type
 20978 ;;                  4   26[BANK0 ] unsigned char 
 20979 ;; Registers used:
 20980 ;;		wreg, status,2, status,0
 20981 ;; Tracked objects:
 20982 ;;		On entry : 0/0
 20983 ;;		On exit  : 0/0
 20984 ;;		Unchanged: 0/0
 20985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20986 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20987 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20988 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20989 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20990 ;;Total ram usage:       20 bytes
 20991 ;; Hardware stack levels used: 1
 20992 ;; This function calls:
 20993 ;;		Nothing
 20994 ;; This function is called by:
 20995 ;;		_controller
 20996 ;; This function uses a non-reentrant model
 20997 ;;
 20998                           
 20999     0DF4                     i1___fladd:	
 21000                           ;psect for function i1___fladd
 21001                           
 21002     0DF4                     i1l5410:	
 21003                           ;incstack = 0
 21004                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 21005                           
 21006     0DF4  0020               	movlb	0	; select bank0
 21007     0DF5  083D               	movf	i1___fladd@b+3,w
 21008     0DF6  3980               	andlw	128
 21009     0DF7  00CA               	movwf	i1___fladd@signs
 21010     0DF8                     i1l5412:
 21011     0DF8  353D               	lslf	i1___fladd@b+3,w
 21012     0DF9  00CC               	movwf	i1___fladd@bexp
 21013     0DFA                     i1l5414:
 21014     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 21015     0DFB  2DFD               	goto	u625_21
 21016     0DFC  2DFE               	goto	u625_20
 21017     0DFD                     u625_21:
 21018     0DFD  2DFF               	goto	i1l5418
 21019     0DFE                     u625_20:
 21020     0DFE                     i1l5416:
 21021     0DFE  144C               	bsf	i1___fladd@bexp,0
 21022     0DFF                     i1l5418:
 21023     0DFF  084C               	movf	i1___fladd@bexp,w
 21024     0E00  1903               	btfsc	3,2
 21025     0E01  2E03               	goto	u626_21
 21026     0E02  2E04               	goto	u626_20
 21027     0E03                     u626_21:
 21028     0E03  2E14               	goto	i1l5428
 21029     0E04                     u626_20:
 21030     0E04                     i1l5420:
 21031     0E04  0A4C               	incf	i1___fladd@bexp,w
 21032     0E05  1D03               	btfss	3,2
 21033     0E06  2E08               	goto	u627_21
 21034     0E07  2E09               	goto	u627_20
 21035     0E08                     u627_21:
 21036     0E08  2E11               	goto	i1l5424
 21037     0E09                     u627_20:
 21038     0E09                     i1l5422:
 21039     0E09  3000               	movlw	0
 21040     0E0A  00BD               	movwf	i1___fladd@b+3
 21041     0E0B  3000               	movlw	0
 21042     0E0C  00BC               	movwf	i1___fladd@b+2
 21043     0E0D  3000               	movlw	0
 21044     0E0E  00BB               	movwf	i1___fladd@b+1
 21045     0E0F  3000               	movlw	0
 21046     0E10  00BA               	movwf	i1___fladd@b
 21047     0E11                     i1l5424:
 21048     0E11  17BC               	bsf	i1___fladd@b+2,7
 21049     0E12                     i1l5426:
 21050     0E12  01BD               	clrf	i1___fladd@b+3
 21051     0E13  2E1C               	goto	i1l5430
 21052     0E14                     i1l5428:
 21053     0E14  3000               	movlw	0
 21054     0E15  00BD               	movwf	i1___fladd@b+3
 21055     0E16  3000               	movlw	0
 21056     0E17  00BC               	movwf	i1___fladd@b+2
 21057     0E18  3000               	movlw	0
 21058     0E19  00BB               	movwf	i1___fladd@b+1
 21059     0E1A  3000               	movlw	0
 21060     0E1B  00BA               	movwf	i1___fladd@b
 21061     0E1C                     i1l5430:
 21062     0E1C  0841               	movf	i1___fladd@a+3,w
 21063     0E1D  3980               	andlw	128
 21064     0E1E  00CB               	movwf	i1___fladd@aexp
 21065     0E1F                     i1l5432:
 21066     0E1F  084B               	movf	i1___fladd@aexp,w
 21067     0E20  064A               	xorwf	i1___fladd@signs,w
 21068     0E21  1903               	skipnz
 21069     0E22  2E24               	goto	u628_21
 21070     0E23  2E25               	goto	u628_20
 21071     0E24                     u628_21:
 21072     0E24  2E26               	goto	i1l5436
 21073     0E25                     u628_20:
 21074     0E25                     i1l5434:
 21075     0E25  174A               	bsf	i1___fladd@signs,6
 21076     0E26                     i1l5436:
 21077     0E26  3541               	lslf	i1___fladd@a+3,w
 21078     0E27  00CB               	movwf	i1___fladd@aexp
 21079     0E28                     i1l5438:
 21080     0E28  1FC0               	btfss	i1___fladd@a+2,7
 21081     0E29  2E2B               	goto	u629_21
 21082     0E2A  2E2C               	goto	u629_20
 21083     0E2B                     u629_21:
 21084     0E2B  2E2D               	goto	i1l5442
 21085     0E2C                     u629_20:
 21086     0E2C                     i1l5440:
 21087     0E2C  144B               	bsf	i1___fladd@aexp,0
 21088     0E2D                     i1l5442:
 21089     0E2D  084B               	movf	i1___fladd@aexp,w
 21090     0E2E  1903               	btfsc	3,2
 21091     0E2F  2E31               	goto	u630_21
 21092     0E30  2E32               	goto	u630_20
 21093     0E31                     u630_21:
 21094     0E31  2E42               	goto	i1l5452
 21095     0E32                     u630_20:
 21096     0E32                     i1l5444:
 21097     0E32  0A4B               	incf	i1___fladd@aexp,w
 21098     0E33  1D03               	btfss	3,2
 21099     0E34  2E36               	goto	u631_21
 21100     0E35  2E37               	goto	u631_20
 21101     0E36                     u631_21:
 21102     0E36  2E3F               	goto	i1l5448
 21103     0E37                     u631_20:
 21104     0E37                     i1l5446:
 21105     0E37  3000               	movlw	0
 21106     0E38  00C1               	movwf	i1___fladd@a+3
 21107     0E39  3000               	movlw	0
 21108     0E3A  00C0               	movwf	i1___fladd@a+2
 21109     0E3B  3000               	movlw	0
 21110     0E3C  00BF               	movwf	i1___fladd@a+1
 21111     0E3D  3000               	movlw	0
 21112     0E3E  00BE               	movwf	i1___fladd@a
 21113     0E3F                     i1l5448:
 21114     0E3F  17C0               	bsf	i1___fladd@a+2,7
 21115     0E40                     i1l5450:
 21116     0E40  01C1               	clrf	i1___fladd@a+3
 21117     0E41  2E4A               	goto	i1l1516
 21118     0E42                     i1l5452:
 21119     0E42  3000               	movlw	0
 21120     0E43  00C1               	movwf	i1___fladd@a+3
 21121     0E44  3000               	movlw	0
 21122     0E45  00C0               	movwf	i1___fladd@a+2
 21123     0E46  3000               	movlw	0
 21124     0E47  00BF               	movwf	i1___fladd@a+1
 21125     0E48  3000               	movlw	0
 21126     0E49  00BE               	movwf	i1___fladd@a
 21127     0E4A                     i1l1516:
 21128     0E4A  084C               	movf	i1___fladd@bexp,w
 21129     0E4B  024B               	subwf	i1___fladd@aexp,w
 21130     0E4C  1803               	skipnc
 21131     0E4D  2E4F               	goto	u632_21
 21132     0E4E  2E50               	goto	u632_20
 21133     0E4F                     u632_21:
 21134     0E4F  2E74               	goto	i1l5488
 21135     0E50                     u632_20:
 21136     0E50                     i1l5454:
 21137     0E50  1F4A               	btfss	i1___fladd@signs,6
 21138     0E51  2E53               	goto	u633_21
 21139     0E52  2E54               	goto	u633_20
 21140     0E53                     u633_21:
 21141     0E53  2E56               	goto	i1l5458
 21142     0E54                     u633_20:
 21143     0E54                     i1l5456:
 21144     0E54  3080               	movlw	128
 21145     0E55  06CA               	xorwf	i1___fladd@signs,f
 21146     0E56                     i1l5458:
 21147     0E56  084C               	movf	i1___fladd@bexp,w
 21148     0E57  00CD               	movwf	i1___fladd@grs
 21149     0E58                     i1l5460:
 21150     0E58  084B               	movf	i1___fladd@aexp,w
 21151     0E59  00CC               	movwf	i1___fladd@bexp
 21152     0E5A                     i1l5462:
 21153     0E5A  084D               	movf	i1___fladd@grs,w
 21154     0E5B  00CB               	movwf	i1___fladd@aexp
 21155     0E5C                     i1l5464:
 21156     0E5C  083A               	movf	i1___fladd@b,w
 21157     0E5D  00CD               	movwf	i1___fladd@grs
 21158     0E5E                     i1l5466:
 21159     0E5E  083E               	movf	i1___fladd@a,w
 21160     0E5F  00BA               	movwf	i1___fladd@b
 21161     0E60                     i1l5468:
 21162     0E60  084D               	movf	i1___fladd@grs,w
 21163     0E61  00BE               	movwf	i1___fladd@a
 21164     0E62                     i1l5470:
 21165     0E62  083B               	movf	i1___fladd@b+1,w
 21166     0E63  00CD               	movwf	i1___fladd@grs
 21167     0E64                     i1l5472:
 21168     0E64  083F               	movf	i1___fladd@a+1,w
 21169     0E65  00BB               	movwf	i1___fladd@b+1
 21170     0E66                     i1l5474:
 21171     0E66  084D               	movf	i1___fladd@grs,w
 21172     0E67  00BF               	movwf	i1___fladd@a+1
 21173     0E68                     i1l5476:
 21174     0E68  083C               	movf	i1___fladd@b+2,w
 21175     0E69  00CD               	movwf	i1___fladd@grs
 21176     0E6A                     i1l5478:
 21177     0E6A  0840               	movf	i1___fladd@a+2,w
 21178     0E6B  00BC               	movwf	i1___fladd@b+2
 21179     0E6C                     i1l5480:
 21180     0E6C  084D               	movf	i1___fladd@grs,w
 21181     0E6D  00C0               	movwf	i1___fladd@a+2
 21182     0E6E                     i1l5482:
 21183     0E6E  083D               	movf	i1___fladd@b+3,w
 21184     0E6F  00CD               	movwf	i1___fladd@grs
 21185     0E70                     i1l5484:
 21186     0E70  0841               	movf	i1___fladd@a+3,w
 21187     0E71  00BD               	movwf	i1___fladd@b+3
 21188     0E72                     i1l5486:
 21189     0E72  084D               	movf	i1___fladd@grs,w
 21190     0E73  00C1               	movwf	i1___fladd@a+3
 21191     0E74                     i1l5488:
 21192     0E74  01CD               	clrf	i1___fladd@grs
 21193     0E75                     i1l5490:
 21194     0E75  084B               	movf	i1___fladd@aexp,w
 21195     0E76  00C2               	movwf	??i1___fladd
 21196     0E77  01C3               	clrf	??i1___fladd+1
 21197     0E78  0843               	movf	??i1___fladd+1,w
 21198     0E79  00C5               	movwf	??i1___fladd+3
 21199     0E7A  084C               	movf	i1___fladd@bexp,w
 21200     0E7B  0242               	subwf	??i1___fladd,w
 21201     0E7C  00C4               	movwf	??i1___fladd+2
 21202     0E7D  1C03               	skipc
 21203     0E7E  03C5               	decf	??i1___fladd+3,f
 21204     0E7F  0845               	movf	??i1___fladd+3,w
 21205     0E80  3A80               	xorlw	128
 21206     0E81  00C6               	movwf	??i1___fladd+4
 21207     0E82  3080               	movlw	128
 21208     0E83  0246               	subwf	??i1___fladd+4,w
 21209     0E84  1D03               	skipz
 21210     0E85  2E88               	goto	u634_25
 21211     0E86  301A               	movlw	26
 21212     0E87  0244               	subwf	??i1___fladd+2,w
 21213     0E88                     u634_25:
 21214     0E88  1C03               	skipc
 21215     0E89  2E8B               	goto	u634_21
 21216     0E8A  2E8C               	goto	u634_20
 21217     0E8B                     u634_21:
 21218     0E8B  2EC2               	goto	i1l5506
 21219     0E8C                     u634_20:
 21220     0E8C                     i1l5492:
 21221     0E8C  0020               	movlb	0	; select bank0
 21222     0E8D  083D               	movf	i1___fladd@b+3,w
 21223     0E8E  043C               	iorwf	i1___fladd@b+2,w
 21224     0E8F  043B               	iorwf	i1___fladd@b+1,w
 21225     0E90  043A               	iorwf	i1___fladd@b,w
 21226     0E91  1D03               	skipz
 21227     0E92  2E94               	goto	u635_21
 21228     0E93  2E96               	goto	u635_20
 21229     0E94                     u635_21:
 21230     0E94  3001               	movlw	1
 21231     0E95  2E97               	goto	u636_20
 21232     0E96                     u635_20:
 21233     0E96  3000               	movlw	0
 21234     0E97                     u636_20:
 21235     0E97  00CD               	movwf	i1___fladd@grs
 21236     0E98  3000               	movlw	0
 21237     0E99  00BD               	movwf	i1___fladd@b+3
 21238     0E9A  3000               	movlw	0
 21239     0E9B  00BC               	movwf	i1___fladd@b+2
 21240     0E9C  3000               	movlw	0
 21241     0E9D  00BB               	movwf	i1___fladd@b+1
 21242     0E9E  3000               	movlw	0
 21243     0E9F  00BA               	movwf	i1___fladd@b
 21244     0EA0  084B               	movf	i1___fladd@aexp,w
 21245     0EA1  00CC               	movwf	i1___fladd@bexp
 21246     0EA2  2EC9               	goto	i1l1520
 21247     0EA3                     i1l1522:
 21248     0EA3  1C4D               	btfss	i1___fladd@grs,0
 21249     0EA4  2EA6               	goto	u637_21
 21250     0EA5  2EA7               	goto	u637_20
 21251     0EA6                     u637_21:
 21252     0EA6  2EB1               	goto	i1l5496
 21253     0EA7                     u637_20:
 21254     0EA7                     i1l5494:
 21255     0EA7  084D               	movf	i1___fladd@grs,w
 21256     0EA8  00C2               	movwf	??i1___fladd
 21257     0EA9  3001               	movlw	1
 21258     0EAA                     u638_25:
 21259     0EAA  36C2               	lsrf	??i1___fladd,f
 21260     0EAB  0B89               	decfsz	9,f
 21261     0EAC  2EAA               	goto	u638_25
 21262     0EAD  0842               	movf	??i1___fladd,w
 21263     0EAE  3801               	iorlw	1
 21264     0EAF  00CD               	movwf	i1___fladd@grs
 21265     0EB0  2EB3               	goto	i1l5498
 21266     0EB1                     i1l5496:
 21267     0EB1  1003               	clrc
 21268     0EB2  0CCD               	rrf	i1___fladd@grs,f
 21269     0EB3                     i1l5498:
 21270     0EB3  1C3A               	btfss	i1___fladd@b,0
 21271     0EB4  2EB6               	goto	u639_21
 21272     0EB5  2EB7               	goto	u639_20
 21273     0EB6                     u639_21:
 21274     0EB6  2EB8               	goto	i1l5502
 21275     0EB7                     u639_20:
 21276     0EB7                     i1l5500:
 21277     0EB7  17CD               	bsf	i1___fladd@grs,7
 21278     0EB8                     i1l5502:
 21279     0EB8  3001               	movlw	1
 21280     0EB9  00C2               	movwf	??i1___fladd
 21281     0EBA                     u640_25:
 21282     0EBA  37BD               	asrf	i1___fladd@b+3,f
 21283     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 21284     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 21285     0EBD  0CBA               	rrf	i1___fladd@b,f
 21286     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 21287     0EBF  2EBA               	goto	u640_25
 21288     0EC0                     i1l5504:
 21289     0EC0  3001               	movlw	1
 21290     0EC1  07CC               	addwf	i1___fladd@bexp,f
 21291     0EC2                     i1l5506:
 21292     0EC2  0020               	movlb	0	; select bank0
 21293     0EC3  084B               	movf	i1___fladd@aexp,w
 21294     0EC4  024C               	subwf	i1___fladd@bexp,w
 21295     0EC5  1C03               	skipc
 21296     0EC6  2EC8               	goto	u641_21
 21297     0EC7  2EC9               	goto	u641_20
 21298     0EC8                     u641_21:
 21299     0EC8  2EA3               	goto	i1l1522
 21300     0EC9                     u641_20:
 21301     0EC9                     i1l1520:
 21302     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 21303     0ECA  2ECC               	goto	u642_21
 21304     0ECB  2ECD               	goto	u642_20
 21305     0ECC                     u642_21:
 21306     0ECC  2F07               	goto	i1l5532
 21307     0ECD                     u642_20:
 21308     0ECD                     i1l5508:
 21309     0ECD  084C               	movf	i1___fladd@bexp,w
 21310     0ECE  1D03               	btfss	3,2
 21311     0ECF  2ED1               	goto	u643_21
 21312     0ED0  2ED2               	goto	u643_20
 21313     0ED1                     u643_21:
 21314     0ED1  2EDB               	goto	i1l5514
 21315     0ED2                     u643_20:
 21316     0ED2                     i1l5510:
 21317     0ED2  3000               	movlw	0
 21318     0ED3  00BD               	movwf	?i1___fladd+3
 21319     0ED4  3000               	movlw	0
 21320     0ED5  00BC               	movwf	?i1___fladd+2
 21321     0ED6  3000               	movlw	0
 21322     0ED7  00BB               	movwf	?i1___fladd+1
 21323     0ED8  3000               	movlw	0
 21324     0ED9  00BA               	movwf	?i1___fladd
 21325     0EDA  2FFF               	goto	i1l1529
 21326     0EDB                     i1l5514:
 21327     0EDB  083E               	movf	i1___fladd@a,w
 21328     0EDC  07BA               	addwf	i1___fladd@b,f
 21329     0EDD  083F               	movf	i1___fladd@a+1,w
 21330     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 21331     0EDF  0840               	movf	i1___fladd@a+2,w
 21332     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 21333     0EE1  0841               	movf	i1___fladd@a+3,w
 21334     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 21335     0EE3                     i1l5516:
 21336     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 21337     0EE4  2EE6               	goto	u644_21
 21338     0EE5  2EE7               	goto	u644_20
 21339     0EE6                     u644_21:
 21340     0EE6  2F91               	goto	i1l5568
 21341     0EE7                     u644_20:
 21342     0EE7                     i1l5518:
 21343     0EE7  1C4D               	btfss	i1___fladd@grs,0
 21344     0EE8  2EEA               	goto	u645_21
 21345     0EE9  2EEB               	goto	u645_20
 21346     0EEA                     u645_21:
 21347     0EEA  2EF5               	goto	i1l5522
 21348     0EEB                     u645_20:
 21349     0EEB                     i1l5520:
 21350     0EEB  084D               	movf	i1___fladd@grs,w
 21351     0EEC  00C2               	movwf	??i1___fladd
 21352     0EED  3001               	movlw	1
 21353     0EEE                     u646_25:
 21354     0EEE  36C2               	lsrf	??i1___fladd,f
 21355     0EEF  0B89               	decfsz	9,f
 21356     0EF0  2EEE               	goto	u646_25
 21357     0EF1  0842               	movf	??i1___fladd,w
 21358     0EF2  3801               	iorlw	1
 21359     0EF3  00CD               	movwf	i1___fladd@grs
 21360     0EF4  2EF7               	goto	i1l5524
 21361     0EF5                     i1l5522:
 21362     0EF5  1003               	clrc
 21363     0EF6  0CCD               	rrf	i1___fladd@grs,f
 21364     0EF7                     i1l5524:
 21365     0EF7  1C3A               	btfss	i1___fladd@b,0
 21366     0EF8  2EFA               	goto	u647_21
 21367     0EF9  2EFB               	goto	u647_20
 21368     0EFA                     u647_21:
 21369     0EFA  2EFC               	goto	i1l5528
 21370     0EFB                     u647_20:
 21371     0EFB                     i1l5526:
 21372     0EFB  17CD               	bsf	i1___fladd@grs,7
 21373     0EFC                     i1l5528:
 21374     0EFC  3001               	movlw	1
 21375     0EFD  00C2               	movwf	??i1___fladd
 21376     0EFE                     u648_25:
 21377     0EFE  37BD               	asrf	i1___fladd@b+3,f
 21378     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 21379     0F00  0CBB               	rrf	i1___fladd@b+1,f
 21380     0F01  0CBA               	rrf	i1___fladd@b,f
 21381     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 21382     0F03  2EFE               	goto	u648_25
 21383     0F04                     i1l5530:
 21384     0F04  3001               	movlw	1
 21385     0F05  07CC               	addwf	i1___fladd@bexp,f
 21386     0F06  2F91               	goto	i1l5568
 21387     0F07                     i1l5532:
 21388     0F07  083D               	movf	i1___fladd@b+3,w
 21389     0F08  3A80               	xorlw	128
 21390     0F09  00C2               	movwf	??i1___fladd
 21391     0F0A  0841               	movf	i1___fladd@a+3,w
 21392     0F0B  3A80               	xorlw	128
 21393     0F0C  0242               	subwf	??i1___fladd,w
 21394     0F0D  1D03               	skipz
 21395     0F0E  2F19               	goto	u649_23
 21396     0F0F  0840               	movf	i1___fladd@a+2,w
 21397     0F10  023C               	subwf	i1___fladd@b+2,w
 21398     0F11  1D03               	skipz
 21399     0F12  2F19               	goto	u649_23
 21400     0F13  083F               	movf	i1___fladd@a+1,w
 21401     0F14  023B               	subwf	i1___fladd@b+1,w
 21402     0F15  1D03               	skipz
 21403     0F16  2F19               	goto	u649_23
 21404     0F17  083E               	movf	i1___fladd@a,w
 21405     0F18  023A               	subwf	i1___fladd@b,w
 21406     0F19                     u649_23:
 21407     0F19  1803               	skipnc
 21408     0F1A  2F1C               	goto	u649_21
 21409     0F1B  2F1D               	goto	u649_20
 21410     0F1C                     u649_21:
 21411     0F1C  2F52               	goto	i1l5544
 21412     0F1D                     u649_20:
 21413     0F1D                     i1l5534:
 21414     0F1D  30FF               	movlw	255
 21415     0F1E  00C2               	movwf	??i1___fladd
 21416     0F1F  30FF               	movlw	255
 21417     0F20  00C3               	movwf	??i1___fladd+1
 21418     0F21  30FF               	movlw	255
 21419     0F22  00C4               	movwf	??i1___fladd+2
 21420     0F23  30FF               	movlw	255
 21421     0F24  00C5               	movwf	??i1___fladd+3
 21422     0F25  083A               	movf	i1___fladd@b,w
 21423     0F26  023E               	subwf	i1___fladd@a,w
 21424     0F27  00C6               	movwf	??i1___fladd+4
 21425     0F28  083B               	movf	i1___fladd@b+1,w
 21426     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 21427     0F2A  00C7               	movwf	??i1___fladd+5
 21428     0F2B  083C               	movf	i1___fladd@b+2,w
 21429     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 21430     0F2D  00C8               	movwf	??i1___fladd+6
 21431     0F2E  083D               	movf	i1___fladd@b+3,w
 21432     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 21433     0F30  00C9               	movwf	??i1___fladd+7
 21434     0F31  0846               	movf	??i1___fladd+4,w
 21435     0F32  07C2               	addwf	??i1___fladd,f
 21436     0F33  0847               	movf	??i1___fladd+5,w
 21437     0F34  3DC3               	addwfc	??i1___fladd+1,f
 21438     0F35  0848               	movf	??i1___fladd+6,w
 21439     0F36  3DC4               	addwfc	??i1___fladd+2,f
 21440     0F37  0849               	movf	??i1___fladd+7,w
 21441     0F38  3DC5               	addwfc	??i1___fladd+3,f
 21442     0F39  0845               	movf	??i1___fladd+3,w
 21443     0F3A  00BD               	movwf	i1___fladd@b+3
 21444     0F3B  0844               	movf	??i1___fladd+2,w
 21445     0F3C  00BC               	movwf	i1___fladd@b+2
 21446     0F3D  0843               	movf	??i1___fladd+1,w
 21447     0F3E  00BB               	movwf	i1___fladd@b+1
 21448     0F3F  0842               	movf	??i1___fladd,w
 21449     0F40  00BA               	movwf	i1___fladd@b
 21450     0F41                     i1l5536:
 21451     0F41  3080               	movlw	128
 21452     0F42  06CA               	xorwf	i1___fladd@signs,f
 21453     0F43                     i1l5538:
 21454     0F43  034D               	decf	i1___fladd@grs,w
 21455     0F44  3AFF               	xorlw	255
 21456     0F45  00CD               	movwf	i1___fladd@grs
 21457     0F46                     i1l5540:
 21458     0F46  084D               	movf	i1___fladd@grs,w
 21459     0F47  1D03               	btfss	3,2
 21460     0F48  2F4A               	goto	u650_21
 21461     0F49  2F4B               	goto	u650_20
 21462     0F4A                     u650_21:
 21463     0F4A  2F5A               	goto	i1l1537
 21464     0F4B                     u650_20:
 21465     0F4B                     i1l5542:
 21466     0F4B  3001               	movlw	1
 21467     0F4C  07BA               	addwf	i1___fladd@b,f
 21468     0F4D  3000               	movlw	0
 21469     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 21470     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 21471     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 21472     0F51  2F5A               	goto	i1l1537
 21473     0F52                     i1l5544:
 21474     0F52  083E               	movf	i1___fladd@a,w
 21475     0F53  02BA               	subwf	i1___fladd@b,f
 21476     0F54  083F               	movf	i1___fladd@a+1,w
 21477     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 21478     0F56  0840               	movf	i1___fladd@a+2,w
 21479     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 21480     0F58  0841               	movf	i1___fladd@a+3,w
 21481     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 21482     0F5A                     i1l1537:
 21483     0F5A  083D               	movf	i1___fladd@b+3,w
 21484     0F5B  043C               	iorwf	i1___fladd@b+2,w
 21485     0F5C  043B               	iorwf	i1___fladd@b+1,w
 21486     0F5D  043A               	iorwf	i1___fladd@b,w
 21487     0F5E  1D03               	skipz
 21488     0F5F  2F61               	goto	u651_21
 21489     0F60  2F62               	goto	u651_20
 21490     0F61                     u651_21:
 21491     0F61  2F8D               	goto	i1l5566
 21492     0F62                     u651_20:
 21493     0F62                     i1l5546:
 21494     0F62  084D               	movf	i1___fladd@grs,w
 21495     0F63  1D03               	btfss	3,2
 21496     0F64  2F66               	goto	u652_21
 21497     0F65  2F67               	goto	u652_20
 21498     0F66                     u652_21:
 21499     0F66  2F8D               	goto	i1l5566
 21500     0F67                     u652_20:
 21501     0F67                     i1l5548:
 21502     0F67  3000               	movlw	0
 21503     0F68  00BD               	movwf	?i1___fladd+3
 21504     0F69  3000               	movlw	0
 21505     0F6A  00BC               	movwf	?i1___fladd+2
 21506     0F6B  3000               	movlw	0
 21507     0F6C  00BB               	movwf	?i1___fladd+1
 21508     0F6D  3000               	movlw	0
 21509     0F6E  00BA               	movwf	?i1___fladd
 21510     0F6F  2FFF               	goto	i1l1529
 21511     0F70                     i1l5552:
 21512     0F70  3001               	movlw	1
 21513     0F71                     u653_25:
 21514     0F71  35BA               	lslf	i1___fladd@b,f
 21515     0F72  0DBB               	rlf	i1___fladd@b+1,f
 21516     0F73  0DBC               	rlf	i1___fladd@b+2,f
 21517     0F74  0DBD               	rlf	i1___fladd@b+3,f
 21518     0F75  0B89               	decfsz	9,f
 21519     0F76  2F71               	goto	u653_25
 21520     0F77                     i1l5554:
 21521     0F77  1FCD               	btfss	i1___fladd@grs,7
 21522     0F78  2F7A               	goto	u654_21
 21523     0F79  2F7B               	goto	u654_20
 21524     0F7A                     u654_21:
 21525     0F7A  2F7C               	goto	i1l1541
 21526     0F7B                     u654_20:
 21527     0F7B                     i1l5556:
 21528     0F7B  143A               	bsf	i1___fladd@b,0
 21529     0F7C                     i1l1541:
 21530     0F7C  1C4D               	btfss	i1___fladd@grs,0
 21531     0F7D  2F7F               	goto	u655_21
 21532     0F7E  2F80               	goto	u655_20
 21533     0F7F                     u655_21:
 21534     0F7F  2F84               	goto	i1l5560
 21535     0F80                     u655_20:
 21536     0F80                     i1l5558:
 21537     0F80  1403               	setc
 21538     0F81  0D4D               	rlf	i1___fladd@grs,w
 21539     0F82  00CD               	movwf	i1___fladd@grs
 21540     0F83  2F86               	goto	i1l5562
 21541     0F84                     i1l5560:
 21542     0F84  1003               	clrc
 21543     0F85  0DCD               	rlf	i1___fladd@grs,f
 21544     0F86                     i1l5562:
 21545     0F86  084C               	movf	i1___fladd@bexp,w
 21546     0F87  1903               	btfsc	3,2
 21547     0F88  2F8A               	goto	u656_21
 21548     0F89  2F8B               	goto	u656_20
 21549     0F8A                     u656_21:
 21550     0F8A  2F8D               	goto	i1l5566
 21551     0F8B                     u656_20:
 21552     0F8B                     i1l5564:
 21553     0F8B  3001               	movlw	1
 21554     0F8C  02CC               	subwf	i1___fladd@bexp,f
 21555     0F8D                     i1l5566:
 21556     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 21557     0F8E  2F90               	goto	u657_21
 21558     0F8F  2F91               	goto	u657_20
 21559     0F90                     u657_21:
 21560     0F90  2F70               	goto	i1l5552
 21561     0F91                     u657_20:
 21562     0F91                     i1l5568:
 21563     0F91  01CB               	clrf	i1___fladd@aexp
 21564     0F92                     i1l5570:
 21565     0F92  1FCD               	btfss	i1___fladd@grs,7
 21566     0F93  2F95               	goto	u658_21
 21567     0F94  2F96               	goto	u658_20
 21568     0F95                     u658_21:
 21569     0F95  2FA4               	goto	i1l5578
 21570     0F96                     u658_20:
 21571     0F96                     i1l5572:
 21572     0F96  084D               	movf	i1___fladd@grs,w
 21573     0F97  397F               	andlw	127
 21574     0F98  1903               	btfsc	3,2
 21575     0F99  2F9B               	goto	u659_21
 21576     0F9A  2F9C               	goto	u659_20
 21577     0F9B                     u659_21:
 21578     0F9B  2F9F               	goto	i1l1547
 21579     0F9C                     u659_20:
 21580     0F9C                     i1l5574:
 21581     0F9C  3001               	movlw	1
 21582     0F9D  00CB               	movwf	i1___fladd@aexp
 21583     0F9E  2FA4               	goto	i1l5578
 21584     0F9F                     i1l1547:
 21585     0F9F  1C3A               	btfss	i1___fladd@b,0
 21586     0FA0  2FA2               	goto	u660_21
 21587     0FA1  2FA3               	goto	u660_20
 21588     0FA2                     u660_21:
 21589     0FA2  2FA4               	goto	i1l5578
 21590     0FA3                     u660_20:
 21591     0FA3  2F9C               	goto	i1l5574
 21592     0FA4                     i1l5578:
 21593     0FA4  084B               	movf	i1___fladd@aexp,w
 21594     0FA5  1903               	btfsc	3,2
 21595     0FA6  2FA8               	goto	u661_21
 21596     0FA7  2FA9               	goto	u661_20
 21597     0FA8                     u661_21:
 21598     0FA8  2FD2               	goto	i1l1550
 21599     0FA9                     u661_20:
 21600     0FA9                     i1l5580:
 21601     0FA9  3001               	movlw	1
 21602     0FAA  07BA               	addwf	i1___fladd@b,f
 21603     0FAB  3000               	movlw	0
 21604     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 21605     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 21606     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 21607     0FAF                     i1l5582:
 21608     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 21609     0FB0  2FB2               	goto	u662_21
 21610     0FB1  2FB3               	goto	u662_20
 21611     0FB2                     u662_21:
 21612     0FB2  2FD2               	goto	i1l1550
 21613     0FB3                     u662_20:
 21614     0FB3                     i1l5584:
 21615     0FB3  083A               	movf	i1___fladd@b,w
 21616     0FB4  00C2               	movwf	??i1___fladd
 21617     0FB5  083B               	movf	i1___fladd@b+1,w
 21618     0FB6  00C3               	movwf	??i1___fladd+1
 21619     0FB7  083C               	movf	i1___fladd@b+2,w
 21620     0FB8  00C4               	movwf	??i1___fladd+2
 21621     0FB9  083D               	movf	i1___fladd@b+3,w
 21622     0FBA  00C5               	movwf	??i1___fladd+3
 21623     0FBB  3001               	movlw	1
 21624     0FBC  00C6               	movwf	??i1___fladd+4
 21625     0FBD                     u663_25:
 21626     0FBD  37C5               	asrf	??i1___fladd+3,f
 21627     0FBE  0CC4               	rrf	??i1___fladd+2,f
 21628     0FBF  0CC3               	rrf	??i1___fladd+1,f
 21629     0FC0  0CC2               	rrf	??i1___fladd,f
 21630     0FC1                     u663_20:
 21631     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 21632     0FC2  2FBD               	goto	u663_25
 21633     0FC3  0845               	movf	??i1___fladd+3,w
 21634     0FC4  00BD               	movwf	i1___fladd@b+3
 21635     0FC5  0844               	movf	??i1___fladd+2,w
 21636     0FC6  00BC               	movwf	i1___fladd@b+2
 21637     0FC7  0843               	movf	??i1___fladd+1,w
 21638     0FC8  00BB               	movwf	i1___fladd@b+1
 21639     0FC9  0842               	movf	??i1___fladd,w
 21640     0FCA  00BA               	movwf	i1___fladd@b
 21641     0FCB  0A4C               	incf	i1___fladd@bexp,w
 21642     0FCC  1903               	btfsc	3,2
 21643     0FCD  2FCF               	goto	u664_21
 21644     0FCE  2FD0               	goto	u664_20
 21645     0FCF                     u664_21:
 21646     0FCF  2FD2               	goto	i1l1550
 21647     0FD0                     u664_20:
 21648     0FD0                     i1l5586:
 21649     0FD0  3001               	movlw	1
 21650     0FD1  07CC               	addwf	i1___fladd@bexp,f
 21651     0FD2                     i1l1550:
 21652     0FD2  0A4C               	incf	i1___fladd@bexp,w
 21653     0FD3  1903               	btfsc	3,2
 21654     0FD4  2FD6               	goto	u665_21
 21655     0FD5  2FD7               	goto	u665_20
 21656     0FD6                     u665_21:
 21657     0FD6  2FDC               	goto	i1l5590
 21658     0FD7                     u665_20:
 21659     0FD7                     i1l5588:
 21660     0FD7  084C               	movf	i1___fladd@bexp,w
 21661     0FD8  1D03               	btfss	3,2
 21662     0FD9  2FDB               	goto	u666_21
 21663     0FDA  2FDC               	goto	u666_20
 21664     0FDB                     u666_21:
 21665     0FDB  2FEA               	goto	i1l5596
 21666     0FDC                     u666_20:
 21667     0FDC                     i1l5590:
 21668     0FDC  3000               	movlw	0
 21669     0FDD  00BD               	movwf	i1___fladd@b+3
 21670     0FDE  3000               	movlw	0
 21671     0FDF  00BC               	movwf	i1___fladd@b+2
 21672     0FE0  3000               	movlw	0
 21673     0FE1  00BB               	movwf	i1___fladd@b+1
 21674     0FE2  3000               	movlw	0
 21675     0FE3  00BA               	movwf	i1___fladd@b
 21676     0FE4                     i1l5592:
 21677     0FE4  084C               	movf	i1___fladd@bexp,w
 21678     0FE5  1D03               	btfss	3,2
 21679     0FE6  2FE8               	goto	u667_21
 21680     0FE7  2FE9               	goto	u667_20
 21681     0FE8                     u667_21:
 21682     0FE8  2FEA               	goto	i1l5596
 21683     0FE9                     u667_20:
 21684     0FE9                     i1l5594:
 21685     0FE9  01CA               	clrf	i1___fladd@signs
 21686     0FEA                     i1l5596:
 21687     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 21688     0FEB  2FED               	goto	u668_21
 21689     0FEC  2FEE               	goto	u668_20
 21690     0FED                     u668_21:
 21691     0FED  2FF0               	goto	i1l5600
 21692     0FEE                     u668_20:
 21693     0FEE                     i1l5598:
 21694     0FEE  17BC               	bsf	i1___fladd@b+2,7
 21695     0FEF  2FF2               	goto	i1l1558
 21696     0FF0                     i1l5600:
 21697     0FF0  307F               	movlw	127
 21698     0FF1  05BC               	andwf	i1___fladd@b+2,f
 21699     0FF2                     i1l1558:
 21700     0FF2  084C               	movf	i1___fladd@bexp,w
 21701     0FF3  00C2               	movwf	??i1___fladd
 21702     0FF4  3001               	movlw	1
 21703     0FF5                     u669_25:
 21704     0FF5  36C2               	lsrf	??i1___fladd,f
 21705     0FF6  0B89               	decfsz	9,f
 21706     0FF7  2FF5               	goto	u669_25
 21707     0FF8  0842               	movf	??i1___fladd,w
 21708     0FF9  00BD               	movwf	i1___fladd@b+3
 21709     0FFA                     i1l5602:
 21710     0FFA  1FCA               	btfss	i1___fladd@signs,7
 21711     0FFB  2FFD               	goto	u670_21
 21712     0FFC  2FFE               	goto	u670_20
 21713     0FFD                     u670_21:
 21714     0FFD  2FFF               	goto	i1l1559
 21715     0FFE                     u670_20:
 21716     0FFE                     i1l5604:
 21717     0FFE  17BD               	bsf	i1___fladd@b+3,7
 21718     0FFF                     i1l1559:
 21719     0FFF                     i1l1529:
 21720     0FFF  0008               	return
 21721     1000                     __end_ofi1___fladd:
 21722                           
 21723                           	psect	text90
 21724     1C27                     __ptext90:	
 21725 ;; *************** function _pwm_fan_LoadDutyValue *****************
 21726 ;; Defined at:
 21727 ;;		line 64 in file "mcc_generated_files/pwm/src/pwm5.c"
 21728 ;; Parameters:    Size  Location     Type
 21729 ;;  dutyValue       2    0[COMMON] unsigned short 
 21730 ;; Auto vars:     Size  Location     Type
 21731 ;;		None
 21732 ;; Return value:  Size  Location     Type
 21733 ;;                  1    wreg      void 
 21734 ;; Registers used:
 21735 ;;		wreg, status,2, status,0
 21736 ;; Tracked objects:
 21737 ;;		On entry : 0/0
 21738 ;;		On exit  : 0/0
 21739 ;;		Unchanged: 0/0
 21740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21745 ;;Total ram usage:        4 bytes
 21746 ;; Hardware stack levels used: 1
 21747 ;; This function calls:
 21748 ;;		Nothing
 21749 ;; This function is called by:
 21750 ;;		_controller
 21751 ;; This function uses a non-reentrant model
 21752 ;;
 21753                           
 21754     1C27                     _pwm_fan_LoadDutyValue:	
 21755                           ;psect for function _pwm_fan_LoadDutyValue
 21756                           
 21757     1C27                     i1l5130:	
 21758                           ;incstack = 0
 21759                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 21760                           
 21761                           
 21762                           ;mcc_generated_files/pwm/src/pwm5.c: 64:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 65:  {;mcc_generated_files/pwm/src/pwm5.c: 67:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 21763     1C27  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 21764     1C28  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 21765     1C29  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 21766     1C2A  00F2               	movwf	??_pwm_fan_LoadDutyValue
 21767     1C2B  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 21768     1C2C  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 21769     1C2D  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 21770     1C2E  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 21771     1C2F  0872               	movf	??_pwm_fan_LoadDutyValue,w
 21772     1C30  002C               	movlb	12	; select bank12
 21773     1C31  0098               	movwf	24	;volatile
 21774                           
 21775                           ;mcc_generated_files/pwm/src/pwm5.c: 70:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 21776     1C32  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 21777     1C33  3903               	andlw	3
 21778     1C34  00F2               	movwf	??_pwm_fan_LoadDutyValue
 21779     1C35  3006               	movlw	6
 21780     1C36                     u572_25:
 21781     1C36  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 21782     1C37  0B89               	decfsz	9,f
 21783     1C38  2C36               	goto	u572_25
 21784     1C39  0872               	movf	??_pwm_fan_LoadDutyValue,w
 21785     1C3A  0097               	movwf	23	;volatile
 21786     1C3B                     i1l72:
 21787     1C3B  0008               	return
 21788     1C3C                     __end_of_pwm_fan_LoadDutyValue:
 21789                           
 21790                           	psect	text91
 21791     1B3E                     __ptext91:	
 21792 ;; *************** function _TMR2_ISR *****************
 21793 ;; Defined at:
 21794 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 21795 ;; Parameters:    Size  Location     Type
 21796 ;;		None
 21797 ;; Auto vars:     Size  Location     Type
 21798 ;;		None
 21799 ;; Return value:  Size  Location     Type
 21800 ;;                  1    wreg      void 
 21801 ;; Registers used:
 21802 ;;		wreg, status,2, status,0, pclath, cstack
 21803 ;; Tracked objects:
 21804 ;;		On entry : 0/0
 21805 ;;		On exit  : 0/0
 21806 ;;		Unchanged: 0/0
 21807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21812 ;;Total ram usage:        0 bytes
 21813 ;; Hardware stack levels used: 1
 21814 ;; Hardware stack levels required when called: 1
 21815 ;; This function calls:
 21816 ;;		NULL
 21817 ;;		_TMR2_DefaultPeriodMatchCallback
 21818 ;; This function is called by:
 21819 ;;		_INTERRUPT_InterruptManager
 21820 ;; This function uses a non-reentrant model
 21821 ;;
 21822                           
 21823     1B3E                     _TMR2_ISR:	
 21824                           ;psect for function _TMR2_ISR
 21825                           
 21826     1B3E                     i1l6164:	
 21827                           ;incstack = 0
 21828                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 21829                           
 21830                           
 21831                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 21832     1B3E  0022               	movlb	2	; select bank2
 21833     1B3F  086B               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 21834     1B40  046C               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 21835     1B41  1903               	btfsc	3,2
 21836     1B42  2B44               	goto	u736_21
 21837     1B43  2B45               	goto	u736_20
 21838     1B44                     u736_21:
 21839     1B44  2B4A               	goto	i1l6168
 21840     1B45                     u736_20:
 21841     1B45                     i1l6166:
 21842                           
 21843                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 21844     1B45  086C               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 21845     1B46  008A               	movwf	10
 21846     1B47  086B               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 21847     1B48  000A               	callw
 21848     1B49  319B               	pagesel	$
 21849     1B4A                     i1l6168:
 21850                           
 21851                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 21852     1B4A  0020               	movlb	0	; select bank0
 21853     1B4B  1091               	bcf	17,1	;volatile
 21854     1B4C                     i1l432:
 21855     1B4C  0008               	return
 21856     1B4D                     __end_of_TMR2_ISR:
 21857                           
 21858                           	psect	text92
 21859     1A03                     __ptext92:	
 21860 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 21861 ;; Defined at:
 21862 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 21863 ;; Parameters:    Size  Location     Type
 21864 ;;		None
 21865 ;; Auto vars:     Size  Location     Type
 21866 ;;		None
 21867 ;; Return value:  Size  Location     Type
 21868 ;;                  1    wreg      void 
 21869 ;; Registers used:
 21870 ;;		None
 21871 ;; Tracked objects:
 21872 ;;		On entry : 0/0
 21873 ;;		On exit  : 0/0
 21874 ;;		Unchanged: 0/0
 21875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21880 ;;Total ram usage:        0 bytes
 21881 ;; Hardware stack levels used: 1
 21882 ;; This function calls:
 21883 ;;		Nothing
 21884 ;; This function is called by:
 21885 ;;		_TMR2_Initialize
 21886 ;;		_TMR2_ISR
 21887 ;; This function uses a non-reentrant model
 21888 ;;
 21889                           
 21890     1A03                     _TMR2_DefaultPeriodMatchCallback:	
 21891                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 21892                           
 21893     1A03                     i1l438:	
 21894                           ;incstack = 0
 21895                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 21896                           
 21897     1A03  0008               	return
 21898     1A04                     __end_of_TMR2_DefaultPeriodMatchCallback:
 21899                           
 21900                           	psect	text93
 21901     0802                     __ptext93:	
 21902 ;; *************** function _EUSART_TransmitISR *****************
 21903 ;; Defined at:
 21904 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 21905 ;; Parameters:    Size  Location     Type
 21906 ;;		None
 21907 ;; Auto vars:     Size  Location     Type
 21908 ;;  tempTxTail      1    0[COMMON] unsigned char 
 21909 ;; Return value:  Size  Location     Type
 21910 ;;                  1    wreg      void 
 21911 ;; Registers used:
 21912 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21913 ;; Tracked objects:
 21914 ;;		On entry : 0/0
 21915 ;;		On exit  : 0/0
 21916 ;;		Unchanged: 0/0
 21917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21922 ;;Total ram usage:        1 bytes
 21923 ;; Hardware stack levels used: 1
 21924 ;; This function calls:
 21925 ;;		Nothing
 21926 ;; This function is called by:
 21927 ;;		_EUSART_Initialize
 21928 ;;		_INTERRUPT_InterruptManager
 21929 ;; This function uses a non-reentrant model
 21930 ;;
 21931                           
 21932     0802                     _EUSART_TransmitISR:	
 21933                           ;psect for function _EUSART_TransmitISR
 21934                           
 21935     0802                     i1l6232:	
 21936                           ;incstack = 0
 21937                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21938                           
 21939                           
 21940                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 21941     0802  3008               	movlw	8
 21942     0803  0020               	movlb	0	; select bank0
 21943     0804  026B               	subwf	_eusartTxBufferRemaining,w	;volatile
 21944     0805  1803               	skipnc
 21945     0806  2808               	goto	u744_21
 21946     0807  2809               	goto	u744_20
 21947     0808                     u744_21:
 21948     0808  281B               	goto	i1l745
 21949     0809                     u744_20:
 21950     0809                     i1l6234:
 21951                           
 21952                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 21953     0809  086C               	movf	_eusartTxTail,w
 21954     080A  3EB8               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 21955     080B  0086               	movwf	6
 21956     080C  3001               	movlw	1	; select bank3/4
 21957     080D  0087               	movwf	7
 21958     080E  0801               	movf	1,w
 21959     080F  0023               	movlb	3	; select bank3
 21960     0810  009A               	movwf	26	;volatile
 21961     0811                     i1l6236:
 21962                           
 21963                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 21964     0811  0020               	movlb	0	; select bank0
 21965     0812  086C               	movf	_eusartTxTail,w	;volatile
 21966     0813  3E01               	addlw	1
 21967     0814  3907               	andlw	7
 21968     0815  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 21969     0816                     i1l6238:
 21970                           
 21971                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 21972     0816  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 21973     0817  00EC               	movwf	_eusartTxTail	;volatile
 21974     0818                     i1l6240:
 21975                           
 21976                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 21977     0818  3001               	movlw	1
 21978     0819  07EB               	addwf	_eusartTxBufferRemaining,f	;volatile
 21979                           
 21980                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 21981     081A  281D               	goto	i1l748
 21982     081B                     i1l745:	
 21983                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 21984                           
 21985                           
 21986                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 21987     081B  0021               	movlb	1	; select bank1
 21988     081C  1211               	bcf	17,4	;volatile
 21989     081D                     i1l748:
 21990     081D  0008               	return
 21991     081E                     __end_of_EUSART_TransmitISR:
 21992                           
 21993                           	psect	text94
 21994     1F58                     __ptext94:	
 21995 ;; *************** function _EUSART_ReceiveISR *****************
 21996 ;; Defined at:
 21997 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 21998 ;; Parameters:    Size  Location     Type
 21999 ;;		None
 22000 ;; Auto vars:     Size  Location     Type
 22001 ;;  tempRxHead      1    1[COMMON] unsigned char 
 22002 ;;  regValue        1    0[COMMON] unsigned char 
 22003 ;; Return value:  Size  Location     Type
 22004 ;;                  1    wreg      void 
 22005 ;; Registers used:
 22006 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22007 ;; Tracked objects:
 22008 ;;		On entry : 0/0
 22009 ;;		On exit  : 0/0
 22010 ;;		Unchanged: 0/0
 22011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22016 ;;Total ram usage:        2 bytes
 22017 ;; Hardware stack levels used: 1
 22018 ;; Hardware stack levels required when called: 1
 22019 ;; This function calls:
 22020 ;;		NULL
 22021 ;;		_EUSART_DefaultFramingErrorCallback
 22022 ;;		_EUSART_DefaultOverrunErrorCallback
 22023 ;; This function is called by:
 22024 ;;		_EUSART_Initialize
 22025 ;;		_INTERRUPT_InterruptManager
 22026 ;; This function uses a non-reentrant model
 22027 ;;
 22028                           
 22029     1F58                     _EUSART_ReceiveISR:	
 22030                           ;psect for function _EUSART_ReceiveISR
 22031                           
 22032     1F58                     i1l6198:	
 22033                           ;incstack = 0
 22034                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22035                           
 22036                           
 22037                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 22038     1F58  0020               	movlb	0	; select bank0
 22039     1F59  356A               	lslf	_eusartRxHead,w	;volatile
 22040     1F5A  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 22041     1F5B  0086               	movwf	6
 22042     1F5C  3001               	movlw	1	; select bank3/4
 22043     1F5D  0087               	movwf	7
 22044     1F5E  3000               	movlw	0
 22045     1F5F  3FC0               	movwi [0]fsr1
 22046     1F60  3FC1               	movwi [1]fsr1
 22047     1F61                     i1l6200:
 22048                           
 22049                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 22050     1F61  0023               	movlb	3	; select bank3
 22051     1F62  1C9D               	btfss	29,1	;volatile
 22052     1F63  2F65               	goto	u739_21
 22053     1F64  2F66               	goto	u739_20
 22054     1F65                     u739_21:
 22055     1F65  2F79               	goto	i1l6208
 22056     1F66                     u739_20:
 22057     1F66                     i1l6202:
 22058                           
 22059                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 22060     1F66  0020               	movlb	0	; select bank0
 22061     1F67  356A               	lslf	_eusartRxHead,w	;volatile
 22062     1F68  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 22063     1F69  0086               	movwf	6
 22064     1F6A  3001               	movlw	1	; select bank3/4
 22065     1F6B  0087               	movwf	7
 22066     1F6C  1501               	bsf	1,2
 22067     1F6D                     i1l6204:
 22068                           
 22069                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 22070     1F6D  0022               	movlb	2	; select bank2
 22071     1F6E  0857               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 22072     1F6F  0458               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 22073     1F70  1903               	btfsc	3,2
 22074     1F71  2F73               	goto	u740_21
 22075     1F72  2F74               	goto	u740_20
 22076     1F73                     u740_21:
 22077     1F73  2F79               	goto	i1l6208
 22078     1F74                     u740_20:
 22079     1F74                     i1l6206:
 22080                           
 22081                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 22082     1F74  0858               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 22083     1F75  008A               	movwf	10
 22084     1F76  0857               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 22085     1F77  000A               	callw
 22086     1F78  319F               	pagesel	$
 22087     1F79                     i1l6208:
 22088                           
 22089                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 22090     1F79  0023               	movlb	3	; select bank3
 22091     1F7A  1D1D               	btfss	29,2	;volatile
 22092     1F7B  2F7D               	goto	u741_21
 22093     1F7C  2F7E               	goto	u741_20
 22094     1F7D                     u741_21:
 22095     1F7D  2F90               	goto	i1l6216
 22096     1F7E                     u741_20:
 22097     1F7E                     i1l6210:
 22098                           
 22099                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 22100     1F7E  0020               	movlb	0	; select bank0
 22101     1F7F  356A               	lslf	_eusartRxHead,w	;volatile
 22102     1F80  3EA0               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 22103     1F81  0086               	movwf	6
 22104     1F82  3001               	movlw	1	; select bank3/4
 22105     1F83  0087               	movwf	7
 22106     1F84  1481               	bsf	1,1
 22107     1F85                     i1l6212:
 22108                           
 22109                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 22110     1F85  0860               	movf	_EUSART_FramingErrorHandler,w
 22111     1F86  0461               	iorwf	_EUSART_FramingErrorHandler+1,w
 22112     1F87  1903               	btfsc	3,2
 22113     1F88  2F8A               	goto	u742_21
 22114     1F89  2F8B               	goto	u742_20
 22115     1F8A                     u742_21:
 22116     1F8A  2F90               	goto	i1l6216
 22117     1F8B                     u742_20:
 22118     1F8B                     i1l6214:
 22119                           
 22120                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 22121     1F8B  0861               	movf	_EUSART_FramingErrorHandler+1,w
 22122     1F8C  008A               	movwf	10
 22123     1F8D  0860               	movf	_EUSART_FramingErrorHandler,w
 22124     1F8E  000A               	callw
 22125     1F8F  319F               	pagesel	$
 22126     1F90                     i1l6216:
 22127                           
 22128                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 22129     1F90  0023               	movlb	3	; select bank3
 22130     1F91  0819               	movf	25,w	;volatile
 22131     1F92  00F0               	movwf	EUSART_ReceiveISR@regValue
 22132     1F93                     i1l6218:
 22133                           
 22134                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 22135     1F93  0020               	movlb	0	; select bank0
 22136     1F94  086A               	movf	_eusartRxHead,w	;volatile
 22137     1F95  3E01               	addlw	1
 22138     1F96  3907               	andlw	7
 22139     1F97  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 22140     1F98                     i1l6220:
 22141                           
 22142                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 22143     1F98  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 22144     1F99  0669               	xorwf	_eusartRxTail,w	;volatile
 22145     1F9A  1D03               	skipz
 22146     1F9B  2F9D               	goto	u743_21
 22147     1F9C  2F9E               	goto	u743_20
 22148     1F9D                     u743_21:
 22149     1F9D  2F9F               	goto	i1l6224
 22150     1F9E                     u743_20:
 22151     1F9E  2FAA               	goto	i1l735
 22152     1F9F                     i1l6224:
 22153                           
 22154                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 22155     1F9F  086A               	movf	_eusartRxHead,w
 22156     1FA0  3EB0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 22157     1FA1  0086               	movwf	6
 22158     1FA2  3001               	movlw	1	; select bank3/4
 22159     1FA3  0087               	movwf	7
 22160     1FA4  0870               	movf	EUSART_ReceiveISR@regValue,w
 22161     1FA5  0081               	movwf	1
 22162     1FA6                     i1l6226:
 22163                           
 22164                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 22165     1FA6  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 22166     1FA7  00EA               	movwf	_eusartRxHead	;volatile
 22167     1FA8                     i1l6228:
 22168                           
 22169                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 22170     1FA8  3001               	movlw	1
 22171     1FA9  07E8               	addwf	_eusartRxCount,f	;volatile
 22172     1FAA                     i1l735:
 22173     1FAA  0008               	return
 22174     1FAB                     __end_of_EUSART_ReceiveISR:
 22175                           
 22176                           	psect	text95
 22177     1A04                     __ptext95:	
 22178 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 22179 ;; Defined at:
 22180 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 22181 ;; Parameters:    Size  Location     Type
 22182 ;;		None
 22183 ;; Auto vars:     Size  Location     Type
 22184 ;;		None
 22185 ;; Return value:  Size  Location     Type
 22186 ;;                  1    wreg      void 
 22187 ;; Registers used:
 22188 ;;		None
 22189 ;; Tracked objects:
 22190 ;;		On entry : 0/0
 22191 ;;		On exit  : 0/0
 22192 ;;		Unchanged: 0/0
 22193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22198 ;;Total ram usage:        0 bytes
 22199 ;; Hardware stack levels used: 1
 22200 ;; This function calls:
 22201 ;;		Nothing
 22202 ;; This function is called by:
 22203 ;;		_EUSART_Initialize
 22204 ;;		_EUSART_ReceiveISR
 22205 ;; This function uses a non-reentrant model
 22206 ;;
 22207                           
 22208     1A04                     _EUSART_DefaultOverrunErrorCallback:	
 22209                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 22210                           
 22211     1A04                     i1l5948:	
 22212                           ;incstack = 0
 22213                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 22214                           
 22215                           
 22216                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 22217     1A04  0023               	movlb	3	; select bank3
 22218     1A05  121D               	bcf	29,4	;volatile
 22219                           
 22220                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 22221     1A06  161D               	bsf	29,4	;volatile
 22222     1A07                     i1l766:
 22223     1A07  0008               	return
 22224     1A08                     __end_of_EUSART_DefaultOverrunErrorCallback:
 22225                           
 22226                           	psect	text96
 22227     1A02                     __ptext96:	
 22228 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 22229 ;; Defined at:
 22230 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 22231 ;; Parameters:    Size  Location     Type
 22232 ;;		None
 22233 ;; Auto vars:     Size  Location     Type
 22234 ;;		None
 22235 ;; Return value:  Size  Location     Type
 22236 ;;                  1    wreg      void 
 22237 ;; Registers used:
 22238 ;;		None
 22239 ;; Tracked objects:
 22240 ;;		On entry : 0/0
 22241 ;;		On exit  : 0/0
 22242 ;;		Unchanged: 0/0
 22243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22248 ;;Total ram usage:        0 bytes
 22249 ;; Hardware stack levels used: 1
 22250 ;; This function calls:
 22251 ;;		Nothing
 22252 ;; This function is called by:
 22253 ;;		_EUSART_Initialize
 22254 ;;		_EUSART_ReceiveISR
 22255 ;; This function uses a non-reentrant model
 22256 ;;
 22257                           
 22258     1A02                     _EUSART_DefaultFramingErrorCallback:	
 22259                           ;psect for function _EUSART_DefaultFramingErrorCallback
 22260                           
 22261     1A02                     i1l763:	
 22262                           ;incstack = 0
 22263                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 22264                           
 22265     1A02  0008               	return
 22266     1A03                     __end_of_EUSART_DefaultFramingErrorCallback:
 22267                           
 22268                           	psect	text97
 22269     1B2F                     __ptext97:	
 22270 ;; *************** function _ADC_ISR *****************
 22271 ;; Defined at:
 22272 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 22273 ;; Parameters:    Size  Location     Type
 22274 ;;		None
 22275 ;; Auto vars:     Size  Location     Type
 22276 ;;		None
 22277 ;; Return value:  Size  Location     Type
 22278 ;;                  1    wreg      void 
 22279 ;; Registers used:
 22280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22281 ;; Tracked objects:
 22282 ;;		On entry : 0/0
 22283 ;;		On exit  : 0/0
 22284 ;;		Unchanged: 0/0
 22285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22290 ;;Total ram usage:        0 bytes
 22291 ;; Hardware stack levels used: 1
 22292 ;; Hardware stack levels required when called: 2
 22293 ;; This function calls:
 22294 ;;		NULL
 22295 ;;		_ADC_DefaultInterruptHandler
 22296 ;;		_adcConversionDoneHandler
 22297 ;; This function is called by:
 22298 ;;		_INTERRUPT_InterruptManager
 22299 ;; This function uses a non-reentrant model
 22300 ;;
 22301                           
 22302     1B2F                     _ADC_ISR:	
 22303                           ;psect for function _ADC_ISR
 22304                           
 22305     1B2F                     i1l6150:	
 22306                           ;incstack = 0
 22307                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22308                           
 22309                           
 22310                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 22311     1B2F  0020               	movlb	0	; select bank0
 22312     1B30  1311               	bcf	17,6	;volatile
 22313     1B31                     i1l6152:
 22314                           
 22315                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 22316     1B31  0022               	movlb	2	; select bank2
 22317     1B32  086D               	movf	_ADC_InterruptHandler^(0+256),w
 22318     1B33  046E               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 22319     1B34  1903               	btfsc	3,2
 22320     1B35  2B37               	goto	u733_21
 22321     1B36  2B38               	goto	u733_20
 22322     1B37                     u733_21:
 22323     1B37  2B3D               	goto	i1l52
 22324     1B38                     u733_20:
 22325     1B38                     i1l6154:
 22326                           
 22327                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 22328     1B38  086E               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 22329     1B39  008A               	movwf	10
 22330     1B3A  086D               	movf	_ADC_InterruptHandler^(0+256),w
 22331     1B3B  000A               	callw
 22332     1B3C  319B               	pagesel	$
 22333     1B3D                     i1l52:
 22334     1B3D  0008               	return
 22335     1B3E                     __end_of_ADC_ISR:
 22336                           
 22337                           	psect	text98
 22338     1A01                     __ptext98:	
 22339 ;; *************** function _ADC_DefaultInterruptHandler *****************
 22340 ;; Defined at:
 22341 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 22342 ;; Parameters:    Size  Location     Type
 22343 ;;		None
 22344 ;; Auto vars:     Size  Location     Type
 22345 ;;		None
 22346 ;; Return value:  Size  Location     Type
 22347 ;;                  1    wreg      void 
 22348 ;; Registers used:
 22349 ;;		None
 22350 ;; Tracked objects:
 22351 ;;		On entry : 0/0
 22352 ;;		On exit  : 0/0
 22353 ;;		Unchanged: 0/0
 22354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22359 ;;Total ram usage:        0 bytes
 22360 ;; Hardware stack levels used: 1
 22361 ;; This function calls:
 22362 ;;		Nothing
 22363 ;; This function is called by:
 22364 ;;		_ADC_Initialize
 22365 ;;		_ADC_ISR
 22366 ;; This function uses a non-reentrant model
 22367 ;;
 22368                           
 22369     1A01                     _ADC_DefaultInterruptHandler:	
 22370                           ;psect for function _ADC_DefaultInterruptHandler
 22371                           
 22372     1A01                     i1l58:	
 22373                           ;incstack = 0
 22374                           ; Regs used in _ADC_DefaultInterruptHandler: []
 22375                           
 22376     1A01  0008               	return
 22377     1A02                     __end_of_ADC_DefaultInterruptHandler:
 22378                           
 22379                           	psect	text99
 22380     1E83                     __ptext99:	
 22381 ;; *************** function _adcConversionDoneHandler *****************
 22382 ;; Defined at:
 22383 ;;		line 5 in file "adcMeasurements.c"
 22384 ;; Parameters:    Size  Location     Type
 22385 ;;		None
 22386 ;; Auto vars:     Size  Location     Type
 22387 ;;		None
 22388 ;; Return value:  Size  Location     Type
 22389 ;;                  1    wreg      void 
 22390 ;; Registers used:
 22391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22392 ;; Tracked objects:
 22393 ;;		On entry : 0/0
 22394 ;;		On exit  : 0/0
 22395 ;;		Unchanged: 0/0
 22396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22401 ;;Total ram usage:        2 bytes
 22402 ;; Hardware stack levels used: 1
 22403 ;; Hardware stack levels required when called: 1
 22404 ;; This function calls:
 22405 ;;		_ADC_GetConversionResult
 22406 ;;		i1_ADC_SelectChannel
 22407 ;; This function is called by:
 22408 ;;		_initAdcMultiplexer
 22409 ;;		_ADC_ISR
 22410 ;; This function uses a non-reentrant model
 22411 ;;
 22412                           
 22413     1E83                     _adcConversionDoneHandler:	
 22414                           ;psect for function _adcConversionDoneHandler
 22415                           
 22416     1E83                     i1l5956:	
 22417                           ;incstack = 0
 22418                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22419                           
 22420                           
 22421                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 22422     1E83  2EA7               	goto	i1l5972
 22423     1E84                     i1l5958:
 22424                           
 22425                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 22426     1E84  319A  220C  319E   	fcall	_ADC_GetConversionResult
 22427     1E87  0871               	movf	?_ADC_GetConversionResult+1,w
 22428     1E88  0022               	movlb	2	; select bank2
 22429     1E89  00D6               	movwf	(_ADC_potentiometer+1)^(0+256)	;volatile
 22430     1E8A  0870               	movf	?_ADC_GetConversionResult,w
 22431     1E8B  00D5               	movwf	_ADC_potentiometer^(0+256)	;volatile
 22432     1E8C                     i1l5960:
 22433                           
 22434                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 22435     1E8C  3012               	movlw	18
 22436     1E8D  0020               	movlb	0	; select bank0
 22437     1E8E  00EF               	movwf	adcConversionDoneHandler@new_channel
 22438                           
 22439                           ;adcMeasurements.c: 15:             break;
 22440     1E8F  2EBB               	goto	i1l5974
 22441     1E90                     i1l5962:
 22442                           
 22443                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 22444     1E90  319A  220C  319E   	fcall	_ADC_GetConversionResult
 22445     1E93  0871               	movf	?_ADC_GetConversionResult+1,w
 22446     1E94  0020               	movlb	0	; select bank0
 22447     1E95  00DF               	movwf	_ADC_hoogtesensor+1	;volatile
 22448     1E96  0870               	movf	?_ADC_GetConversionResult,w
 22449     1E97  00DE               	movwf	_ADC_hoogtesensor	;volatile
 22450     1E98                     i1l5964:
 22451                           
 22452                           ;adcMeasurements.c: 18:             new_channel = pomphoogte;
 22453     1E98  3013               	movlw	19
 22454     1E99  00EF               	movwf	adcConversionDoneHandler@new_channel
 22455                           
 22456                           ;adcMeasurements.c: 19:             break;
 22457     1E9A  2EBB               	goto	i1l5974
 22458     1E9B                     i1l5966:
 22459                           
 22460                           ;adcMeasurements.c: 21:             ADC_pomphoogte = ADC_GetConversionResult();
 22461     1E9B  319A  220C  319E   	fcall	_ADC_GetConversionResult
 22462     1E9E  0871               	movf	?_ADC_GetConversionResult+1,w
 22463     1E9F  0022               	movlb	2	; select bank2
 22464     1EA0  00D4               	movwf	(_ADC_pomphoogte+1)^(0+256)	;volatile
 22465     1EA1  0870               	movf	?_ADC_GetConversionResult,w
 22466     1EA2  00D3               	movwf	_ADC_pomphoogte^(0+256)	;volatile
 22467     1EA3                     i1l5968:
 22468                           
 22469                           ;adcMeasurements.c: 22:             new_channel = potentiometer;
 22470     1EA3  3010               	movlw	16
 22471     1EA4  0020               	movlb	0	; select bank0
 22472     1EA5  00EF               	movwf	adcConversionDoneHandler@new_channel
 22473                           
 22474                           ;adcMeasurements.c: 23:             break;
 22475     1EA6  2EBB               	goto	i1l5974
 22476     1EA7                     i1l5972:
 22477     1EA7  0020               	movlb	0	; select bank0
 22478     1EA8  086F               	movf	adcConversionDoneHandler@new_channel,w
 22479     1EA9  00F2               	movwf	??_adcConversionDoneHandler
 22480     1EAA  01F3               	clrf	??_adcConversionDoneHandler+1
 22481                           
 22482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22483                           ; Switch size 1, requested type "simple"
 22484                           ; Number of cases is 1, Range of values is 0 to 0
 22485                           ; switch strategies available:
 22486                           ; Name         Instructions Cycles
 22487                           ; simple_byte            4     3 (average)
 22488                           ; direct_byte            8     6 (fixed)
 22489                           ; jumptable            260     6 (fixed)
 22490                           ;	Chosen strategy is simple_byte
 22491     1EAB  0873               	movf	??_adcConversionDoneHandler+1,w
 22492     1EAC  3A00               	xorlw	0	; case 0
 22493     1EAD  1903               	skipnz
 22494     1EAE  2EB0               	goto	i1l6432
 22495     1EAF  2EBB               	goto	i1l5974
 22496     1EB0                     i1l6432:
 22497                           
 22498                           ; Switch size 1, requested type "simple"
 22499                           ; Number of cases is 3, Range of values is 16 to 19
 22500                           ; switch strategies available:
 22501                           ; Name         Instructions Cycles
 22502                           ; simple_byte           10     6 (average)
 22503                           ; direct_byte           17     9 (fixed)
 22504                           ; jumptable            263     9 (fixed)
 22505                           ;	Chosen strategy is simple_byte
 22506     1EB0  0872               	movf	??_adcConversionDoneHandler,w
 22507     1EB1  3A10               	xorlw	16	; case 16
 22508     1EB2  1903               	skipnz
 22509     1EB3  2E84               	goto	i1l5958
 22510     1EB4  3A02               	xorlw	2	; case 18
 22511     1EB5  1903               	skipnz
 22512     1EB6  2E90               	goto	i1l5962
 22513     1EB7  3A01               	xorlw	1	; case 19
 22514     1EB8  1903               	skipnz
 22515     1EB9  2E9B               	goto	i1l5966
 22516     1EBA  2EBB               	goto	i1l5974
 22517     1EBB                     i1l5974:
 22518                           
 22519                           ;adcMeasurements.c: 25:     ADC_SelectChannel(new_channel);
 22520     1EBB  086F               	movf	adcConversionDoneHandler@new_channel,w
 22521     1EBC  319A  22CB  319E   	fcall	i1_ADC_SelectChannel
 22522     1EBF                     i1l848:
 22523     1EBF  0008               	return
 22524     1EC0                     __end_of_adcConversionDoneHandler:
 22525                           
 22526                           	psect	text100
 22527     1ACB                     __ptext100:	
 22528 ;; *************** function i1_ADC_SelectChannel *****************
 22529 ;; Defined at:
 22530 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 22531 ;; Parameters:    Size  Location     Type
 22532 ;;  channel         1    wreg     enum E6663
 22533 ;; Auto vars:     Size  Location     Type
 22534 ;;  channel         1    1[COMMON] enum E6663
 22535 ;; Return value:  Size  Location     Type
 22536 ;;                  1    wreg      void 
 22537 ;; Registers used:
 22538 ;;		wreg, status,2, status,0
 22539 ;; Tracked objects:
 22540 ;;		On entry : 0/0
 22541 ;;		On exit  : 0/0
 22542 ;;		Unchanged: 0/0
 22543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22548 ;;Total ram usage:        2 bytes
 22549 ;; Hardware stack levels used: 1
 22550 ;; This function calls:
 22551 ;;		Nothing
 22552 ;; This function is called by:
 22553 ;;		_adcConversionDoneHandler
 22554 ;; This function uses a non-reentrant model
 22555 ;;
 22556                           
 22557     1ACB                     i1_ADC_SelectChannel:	
 22558                           ;psect for function i1_ADC_SelectChannel
 22559                           
 22560                           
 22561                           ;incstack = 0
 22562                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 22563                           ;i1ADC_SelectChannel@channel stored from wreg
 22564     1ACB  00F1               	movwf	i1ADC_SelectChannel@channel
 22565     1ACC                     i1l5368:
 22566                           
 22567                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 22568     1ACC  0871               	movf	i1ADC_SelectChannel@channel,w
 22569     1ACD  00F0               	movwf	??i1_ADC_SelectChannel
 22570     1ACE  0DF0               	rlf	??i1_ADC_SelectChannel,f
 22571     1ACF  0DF0               	rlf	??i1_ADC_SelectChannel,f
 22572     1AD0  0021               	movlb	1	; select bank1
 22573     1AD1  081D               	movf	29,w	;volatile
 22574     1AD2  0670               	xorwf	??i1_ADC_SelectChannel,w
 22575     1AD3  3903               	andlw	-253
 22576     1AD4  0670               	xorwf	??i1_ADC_SelectChannel,w
 22577     1AD5  009D               	movwf	29	;volatile
 22578     1AD6                     i1l30:
 22579     1AD6  0008               	return
 22580     1AD7                     __end_ofi1_ADC_SelectChannel:
 22581                           
 22582                           	psect	text101
 22583     1A0C                     __ptext101:	
 22584 ;; *************** function _ADC_GetConversionResult *****************
 22585 ;; Defined at:
 22586 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 22587 ;; Parameters:    Size  Location     Type
 22588 ;;		None
 22589 ;; Auto vars:     Size  Location     Type
 22590 ;;		None
 22591 ;; Return value:  Size  Location     Type
 22592 ;;                  2    0[COMMON] unsigned short 
 22593 ;; Registers used:
 22594 ;;		wreg
 22595 ;; Tracked objects:
 22596 ;;		On entry : 0/0
 22597 ;;		On exit  : 0/0
 22598 ;;		Unchanged: 0/0
 22599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22604 ;;Total ram usage:        2 bytes
 22605 ;; Hardware stack levels used: 1
 22606 ;; This function calls:
 22607 ;;		Nothing
 22608 ;; This function is called by:
 22609 ;;		_adcConversionDoneHandler
 22610 ;; This function uses a non-reentrant model
 22611 ;;
 22612                           
 22613     1A0C                     _ADC_GetConversionResult:	
 22614                           ;psect for function _ADC_GetConversionResult
 22615                           
 22616     1A0C                     i1l5126:	
 22617                           ;incstack = 0
 22618                           ; Regs used in _ADC_GetConversionResult: [wreg]
 22619                           
 22620                           
 22621                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 22622     1A0C  0021               	movlb	1	; select bank1
 22623     1A0D  081C               	movf	28,w	;volatile
 22624     1A0E  00F1               	movwf	?_ADC_GetConversionResult+1
 22625     1A0F  081B               	movf	27,w	;volatile
 22626     1A10  00F0               	movwf	?_ADC_GetConversionResult
 22627     1A11                     i1l39:
 22628     1A11  0008               	return
 22629     1A12                     __end_of_ADC_GetConversionResult:
 22630     0002                     ___latbits      equ	2
 22631     007E                     btemp           set	126	;btemp
 22632     007E                     int$flags       set	126
 22633     007E                     wtemp0          set	126
 22634                           
 22635                           	psect	config
 22636                           
 22637                           ;Config register CONFIG1 @ 0x8007
 22638                           ;	FEXTOSC External Oscillator mode Selection bits
 22639                           ;	FEXTOSC = OFF, Oscillator not enabled
 22640                           ;	Power-up default value for COSC bits
 22641                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 22642                           ;	Clock Out Enable bit
 22643                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 22644                           ;	Clock Switch Enable bit
 22645                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22646                           ;	Fail-Safe Clock Monitor Enable
 22647                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 22648     8007                     	org	32775
 22649     8007  3F8C               	dw	16268
 22650                           
 22651                           ;Config register CONFIG2 @ 0x8008
 22652                           ;	Master Clear Enable bit
 22653                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 22654                           ;	Power-up Timer Enable bit
 22655                           ;	PWRTE = OFF, PWRT disabled
 22656                           ;	Watchdog Timer Enable bits
 22657                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 22658                           ;	Low-power BOR enable bit
 22659                           ;	LPBOREN = OFF, ULPBOR disabled
 22660                           ;	Brown-out Reset Enable bits
 22661                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 22662                           ;	Brown-out Reset Voltage selection bit
 22663                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 22664                           ;	PPSLOCK bit One-Way Set Enable bit
 22665                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 22666                           ;	Stack Overflow/Underflow Reset Enable bit
 22667                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 22668                           ;	Debugger enable bit
 22669                           ;	DEBUG = 0x1, unprogrammed default
 22670     8008                     	org	32776
 22671     8008  3FF3               	dw	16371
 22672                           
 22673                           ;Config register CONFIG3 @ 0x8009
 22674                           ;	User NVM self-write protection bits
 22675                           ;	WRT = OFF, Write protection off
 22676                           ;	Low Voltage Programming Enable bit
 22677                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 22678     8009                     	org	32777
 22679     8009  3FFF               	dw	16383
 22680                           
 22681                           ;Config register CONFIG4 @ 0x800A
 22682                           ;	User NVM Program Memory Code Protection bit
 22683                           ;	CP = OFF, User NVM code protection disabled
 22684                           ;	Data NVM Memory Code Protection bit
 22685                           ;	CPD = OFF, Data NVM code protection disabled
 22686     800A                     	org	32778
 22687     800A  3FFF               	dw	16383

Data Sizes:
    Strings     217
    Constant    86
    Data        12
    BSS         132
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      80
    BANK1            80     80      80
    BANK2            80     35      79
    BANK3            80      0      58
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK2[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK2[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_10(CODE[11]), STR_11(CODE[3]), STR_12(CODE[25]), 
		 -> STR_13(CODE[13]), STR_14(CODE[13]), STR_15(CODE[13]), STR_16(CODE[15]), 
		 -> STR_17(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), STR_4(CODE[11]), 
		 -> STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), STR_8(CODE[7]), 
		 -> STR_9(CODE[7]), 

    printOut@str	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK2[20]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2100$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str(BANK2[20]), 

    S2100$source	PTR const unsigned char  size(2) Largest target is 0

    S242$4$0	PTR void  size(2) Largest target is 0

    S242$5$0	PTR void  size(2) Largest target is 0

    S242$6$0	PTR void  size(2) Largest target is 0

    S242SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S242SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S242SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S242SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S242SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S242SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S242SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S242SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S242SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S242SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S242SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S242SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S242SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S242SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$17$0	PTR FTN()void  size(2) Largest target is 0

    S997$18$0	PTR FTN()void  size(2) Largest target is 0

    S997$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S997$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S997$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S997$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S997$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S997$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S997$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S997$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S997$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S997$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S997$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S997$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S997$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S997$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S997$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S997$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S997$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S997$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S997$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S997$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S997$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK2[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_1(CODE[14]), STR_10(CODE[11]), STR_11(CODE[3]), 
		 -> STR_12(CODE[25]), STR_13(CODE[13]), STR_14(CODE[13]), STR_15(CODE[13]), 
		 -> STR_16(CODE[15]), STR_17(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_1(CODE[14]), STR_10(CODE[11]), STR_11(CODE[3]), 
		 -> STR_12(CODE[25]), STR_13(CODE[13]), STR_14(CODE[13]), STR_15(CODE[13]), 
		 -> STR_16(CODE[15]), STR_17(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> main@str(BANK2[20]), STR_1(CODE[14]), STR_10(CODE[11]), STR_11(CODE[3]), 
		 -> STR_12(CODE[25]), STR_13(CODE[13]), STR_14(CODE[13]), STR_15(CODE[13]), 
		 -> STR_16(CODE[15]), STR_17(CODE[17]), STR_2(CODE[8]), STR_3(CODE[24]), 
		 -> STR_4(CODE[11]), STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), STR_9(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fltol->i1___flmul
    i1___fladd->i1___flmul

Critical Paths under _main in BANK1

    _uartHandler->_str2float
    _str2float->___flmul
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _setKd->_str2float
    _readLine->_printf
    _atoi->___wmul
    _sprintf->_vfprintf
    _printOut->_printf
    _printLogs->_printFloat
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    ___flsub->___fladd
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _position_led_strip->_getLedNumber
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _getLedNumber->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_sprintf
    _uartHandler->_setKd
    _uartHandler->_setKi
    _uartHandler->_setKp
    _printLogs->_printFloat
    _updateLedstripAnimation->_position_led_strip
    _position_led_strip->_getLedNumber

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   48258
                                             12 BANK2     23    23      0
           _PWM_buzzer_LoadDutyValue
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                             ___wmul
                      _getPomphoogte
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                           _printOut
                        _setSetpoint
                            _sprintf
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   16771
                                              4 BANK2      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKd
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5364
                                             68 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      24
                                             13 BANK1      2     0      2
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKd                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    5445
                                             73 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     338
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    14      5    5528
                                             66 BANK1      5     0      5
                                              0 BANK2     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printOut                                             1     0      1    5421
                                             73 BANK1      1     0      1
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0   15130
                       _getDutycycle
                    _getHoogtesensor
                              _getKd
                              _getKi
                              _getKp
                      _getPomphoogte
                        _getSetpoint
                         _printFloat
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printFloat                                           9     5      4    9732
                                             78 BANK1      2     2      0
                                              0 BANK2      7     3      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _getKd (ARG)
                              _getKi (ARG)
                              _getKp (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    5398
                                             66 BANK1      7     1      6
                               _atoi (ARG)
                       _getDutycycle (ARG)
                    _getHoogtesensor (ARG)
                      _getPomphoogte (ARG)
                        _getSetpoint (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     3      6    5321
                                             57 BANK1      9     3      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           17    12      5    5177
                                             41 BANK1     16    11      5
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1661
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     166
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     6      3     290
                                              6 BANK1      9     6      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2161
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    1083
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2      91
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     432
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     331
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2037
                                             34 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getPomphoogte                                        2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getKp                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getKi                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getKd                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDutycycle                                         2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     229
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     206
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     108
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0    4680
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0    4680
                 _position_led_strip
 ---------------------------------------------------------------------------------
 (3) _position_led_strip                                   7     7      0    4680
                                              4 BANK2      7     7      0
                    _getHoogtesensor
                       _getLedNumber
                        _getSetpoint
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     144
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getSetpoint                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _getLedNumber                                         6     4      2    4219
                                             78 BANK1      2     0      2
                                              0 BANK2      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     232
                                             68 BANK1     10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                             42 BANK1     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1990
                                             14 BANK1     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getHoogtesensor                                      2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM_buzzer_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_buzzer_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_buzzer_LoadDutyValue                             4     2      2      46
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4560
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4440
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                         12    12      0    4440
                                             46 BANK0     12    12      0
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                  i1_getHoogtesensor
 ---------------------------------------------------------------------------------
 (15) i1_getHoogtesensor                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     339
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___fltol                                          10     6      4     232
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1613
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_buzzer_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM_buzzer_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _position_led_strip
         _getHoogtesensor
         _getLedNumber
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
             ___flsub (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _getHoogtesensor (ARG)
           _getSetpoint (ARG)
         _getSetpoint
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   ___wmul
   _getPomphoogte
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getDutycycle
     _getHoogtesensor
     _getKd
     _getKi
     _getKp
     _getPomphoogte
     _getSetpoint
     _printFloat
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _getKd (ARG)
       _getKi (ARG)
       _getKp (ARG)
       _printf (ARG)
         _atoi (ARG)
           ___wmul
         _getDutycycle (ARG)
         _getHoogtesensor (ARG)
         _getPomphoogte (ARG)
         _getSetpoint (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_IsTxReady
                     _EUSART_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
             _read_prec_or_width
               ___wmul
             _utoa
               ___lwdiv
               ___lwmod
               _pad
     _printf
   _printOut
     _printf
   _setSetpoint
     ___wmul (ARG)
     _atoi (ARG)
   _sprintf
     _vfprintf
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKd
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _setKi
       _str2float (ARG)
     _setKp
       _str2float (ARG)
     _setSetpoint
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___fltol
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl
       i1_getHoogtesensor

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     58      80    100.0%
BANK1               80     80      80    100.0%
BANK2               80     35      79     98.8%
BANK3               80      0      58     72.5%
BANK4               80      0      32     40.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     343      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 05 16:41:15 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0801                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 0800  
                                 _SPI1_ByteExchange 1B07                          __end_of_pwm_fan_Initialize 1AFB  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1B06  
                                                l27 1C51                                                  l55 1A2C  
                                                l83 1AEE                                                  l69 1AFA  
                                                l86 1C7F                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5                             ??_PWM_buzzer_Initialize 00A0  
       __end_of_EUSART_OverrunErrorCallbackRegister 1B7A               ??_EUSART_OverrunErrorCallbackRegister 00A2  
              ?_EUSART_OverrunErrorCallbackRegister 00A0                 _EUSART_OverrunErrorCallbackRegister 1B6B  
                                                _kd 0143                                         i1___flmul@a 0024  
                                                _ki 015F                                         i1___flmul@b 0020  
                                                _kp 0163                                 ___wmul@multiplicand 00A2  
                               __Umul8_16@word_mpld 00A6                                     ??_getPomphoogte 00A2  
                                        i1___xxtofl 160E                                                 l133 1AA2  
                                               l141 1353                                                 l227 1AE2  
                                               l254 1A3E                                                 l174 1B0B  
                                               l351 1F05                                                 l272 1A35  
                                               l176 1B10                                                 l177 1B13  
                                               l516 1B88                                                 l543 1A62  
                                               l712 1A8F                                                 l457 1BAA  
                                               l546 0801                                                 l379 1D35  
                                               l715 1A7D                                                 l557 1C26  
                                               l725 1D13                                                 l398 1B99  
                                               l494 1A47                                                 l742 1DEE  
                                               l656 1E82                                                 l760 1BEE  
                                               l921 1093                                                 l905 0891  
                                               l770 1B6A                                                 l914 08C8  
                                               l851 1B20                                                 l739 1DEC  
                                               l860 1A74                                                 l932 17FF  
                                               l774 1B79                                                 l935 1A86  
                                               l919 103B                                                 l952 07EA  
                                               l857 1A50                                                 l983 1A59  
                                               l992 1BCC                                                 l897 14CB  
                                               l986 1A6B                                                 l995 1BBB  
                                               l989 1BDD                                                 l998 1A98  
                                               _PR2 001E                                                 _PR4 0416  
                                               _PR6 041D                                                 _abs 1BEF  
                                               _pad 1FAB                                     __end_of_ADC_ISR 1B3E  
                                      i1___fltol@f1 003A                     __end_of_ADC_SetInterruptHandler 1A2D  
                               ??_SPI1_ByteExchange 00A1                                        ___awmod@sign 00A5  
                                   _TMR2_Initialize 1B89                        __end_of_sendLedstripEndFrame 1C99  
                                               wreg 0009                                       i1___fladd@grs 004D  
                                      ___flmul@aexp 00DC                                        ___flmul@bexp 00DD  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 00D7  
                                      ___flmul@temp 00E2                                        ___flmul@prod 00DE  
                               i1_ADC_SelectChannel 1ACB                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 00ED  
                                              l1010 1AAC                                                l1004 1AC0  
                                              l1031 1CB3                                                l1007 1AB6  
                                              l1025 07FF                                                l1034 10EE  
                                              ?_abs 00A6                                                l1028 1C98  
                                              l1060 1A0B                                                l1215 1CBF  
                                              l1063 1B2E                                                l1057 156C  
                                              l1217 1CD3                                                l1520 05DD  
                                              l1416 12CE                                                l1409 12E3  
                                              l1505 1E4C                                                l1522 05B7  
                                              l1419 12E3                                                l1516 055E  
                                              l1612 02CC                                                l1541 0690  
                                              l1381 1F57                                                l1550 06E6  
                                              l1631 1D6C                                                l1624 02C2  
                                              l1368 114A                                                l5000 0B00  
                                              l1537 066E                                                l1529 0713  
                                              l1633 1D7C                                                l1721 1FE3  
                                              l1618 024A                                                l1562 1CF3  
                                              l1730 08F2                                                l5010 0B27  
                                              l5002 0B05                                                l1547 06B3  
                                              l1723 1FFF                                                l4300 1CC4  
                                              l5020 0B4A                                                l5012 0B38  
                                              l5100 1DF4                                                l1820 1C12  
                                              l1572 0C9F                                                l1805 1205  
                                              l1813 1DA0                                                l1558 0706  
                                              l1670 172E                                                l4302 1CC9  
                                              l4310 10F1                                                l1718 1FC1  
                                              l1726 08F4                                                l5022 0B54  
                                              l5014 0B3C                                                l5006 0B12  
                                              l5102 1DF8                                                l1574 0DF3  
                                              l1559 0713                                                l1495 103A  
                                              l1656 16D5                                                l5200 1523  
                                              l4304 1CCF                                                l4320 1105  
                                              l4312 10F5                                                l4232 1A75  
                                              l4240 1DD0                                                l4400 1013  
                                              l5032 0B89                                                l5024 0B5E  
                                              l5016 0B3D                                                l5008 0B22  
                                              l5104 1E0D                                                l6000 0885  
                                              l1657 16E6                                                l1593 0DC3  
                                              l1658 1756                                                l5202 1531  
                                              l4330 1117                                                l4322 1107  
                                              l4314 10FA                                                l4250 1DE9  
                                              l4242 1DD6                                                l1826 1C67  
                                              l4410 1030                                                l4402 1017  
                                              l5050 0BE8                                                l5034 0B93  
                                              l5026 0B6B                                                l5018 0B42  
                                              l5106 1E17                                                l1594 0DDD  
                                              l6010 08B3                                                l6002 088B  
                                              l1739 0981                                                l5124 1A24  
                                              l5140 1B72                                                l5132 1A36  
                                              l5220 1569                                                l5212 1556  
                                              l5204 153C                                                l4340 1131  
                                              l4332 1119                                                l4324 1109  
                                              l4316 10FC                                                l4308 10EF  
                                              l4244 1DDE                                                l4236 1DC7  
                                              l4252 1BE0                                                l4260 11A8  
                                              l4500 091C                                                l4404 1026  
                                              l4412 1036                                                l4420 1E24  
                                              l5060 0C12                                                l5052 0BF6  
                                              l5044 0BBF                                                l5036 0BA0  
                                              l1772 0C4F                                                l5028 0B78  
                                              l1764 0B03                                                l6100 1430  
                                              l6020 103B                                                l1596 0DE8  
                                              l1588 0D79                                                l5300 0D0E  
                                              l6012 08B5                                                l6004 0893  
                                              l1669 1722                                                l1757 11A7  
                                              l1749 13CC                                                l5134 1B5C  
                                              l5206 153F                                                l5222 1CD4  
                                              l4342 1136                                                l4334 111D  
                                              l4326 110F                                                l4318 1100  
                                              l4246 1DE4                                                l4238 1DCC  
                                              l4254 1BE0                                                l4270 11E5  
                                              l4262 11AF                                                l4510 0946  
                                              l4502 091D                                                l4406 102A  
                                              l4430 1E3D                                                l4422 1E29  
                                              l5062 0C1D                                                l5038 0BAE  
                                              l5046 0BC8                                                l1766 0B0F  
                                              l1694 1DC6                                                l6102 1435  
                                              l5142 1A87                                                l5150 1CFD  
                                              l6022 1043                                                l6110 1AAD  
                                              l5302 0D15                                                l5310 0D32  
                                              l5230 0C54                                                l6014 08BA  
                                              l6006 0895                                                l1687 1445  
                                              l5136 1B63                                                l5080 1A48  
                                              l5208 154C                                                l5216 1560  
                                              l5224 1CD7                                                l4336 112C  
                                              l4328 1112                                                l4344 113C  
                                              l4360 1F13                                                l4352 1F06  
                                              l4248 1DE7                                                l4256 1BE8  
                                              l4272 11FB                                                l4264 11B5  
                                              l4280 1D8F                                                l4440 1FB0  
                                              l4520 0967                                                l4512 094B  
                                              l4504 0921                                                l4408 102B  
                                              l4432 1E42                                                l4424 1E2B  
                                              l4416 1E1A                                                l5048 0BD2  
                                              l5056 0BF9                                                l5072 0C2C  
                                              l6104 1441                                                l5160 1D10  
                                              l5152 1D03                                                l6040 106A  
                                              l6032 1055                                                l6024 104A  
                                              l6112 1AA3                                                l5320 0D4D  
                                              l5312 0D38                                                l5304 0D27  
                                              l5240 0C65                                                l5232 0C56  
                                              l6016 08C0                                                l6008 0897  
                                              l1793 1C00                                                l5138 1B6B  
                                              l4610 12C5                                                l4602 12B0  
                                              l5090 1C80                                                l5218 1563  
                                              l4346 1141                                                l4338 1130  
                                              l4370 1F2A                                                l4362 1F17  
                                              l4354 1F08                                                l4266 11BA  
                                              l4282 1D94                                                l4290 1C61  
                                              l4450 1FD5                                                l4442 1FBA  
                                              l4522 096E                                                l4514 0958  
                                              l4506 0931                                                l4426 1E2F  
                                              l4418 1E21                                                l4434 1E48  
                                              l4530 1363                                                l5074 0C45  
                                              l5058 0C0A                                                l5066 0C23  
                                              l1786 1E19                                                l5162 1D12  
                                              l5154 1D06                                                l5146 1CF4  
                                              l6050 1088                                                l6042 106C  
                                              l6034 1058                                                l5330 0D5E  
                                              l5322 0D4E                                                l5314 0D40  
                                              l5306 0D28                                                l5250 0C7B  
                                              l5242 0C6D                                                l5234 0C5A  
                                              l4700 05BB                                                l4620 050E  
                                              l4612 12D3                                                l4604 12BE  
                                              l5084 1A51                                                l5092 1C9B  
                                              l5180 14F3                                                l5172 14CC  
                                              l6060 1A63                                                l4348 1146  
                                              l4380 1F43                                                l4372 1F2C  
                                              l4364 1F1C                                                l4356 1F0C  
                                              l4460 1BF4                                                l4268 11C5  
                                              l4276 1D7D                                                l4284 1C52  
                                              l4452 1FE8                                                l4444 1FBF  
                                              l4508 093F                                                l4516 095D  
                                              l4428 1E39                                                l4540 1384  
                                              l4532 1366                                                l5156 1D08  
                                              l5148 1CF4                                                l6052 108E  
                                              l6036 1060                                                l6028 104D  
                                              l6108 1AB7                                                l5340 0D83  
                                              l5332 0D62                                                l5324 0D55  
                                              l5316 0D42                                                l5308 0D30  
                                              l5260 0C8C                                                l5252 0C7D  
                                              l5244 0C6E                                                l5236 0C5B  
                                              l5228 0C50                                                l4710 05D4  
                                              l4702 05C5                                                l4630 0525  
                                              l4622 0512                                                l4470 1D64  
                                              l4614 12D8                                                l5094 1094  
                                              l5190 1514                                                l5182 14F8  
                                              l5174 14DF                                                l4294 1CB4  
                                              l4374 1F30                                                l4366 1F22  
                                              l4382 1F49                                                l4358 1F11  
                                              l4462 1BF5                                                l4278 1D81  
                                              l4286 1C56                                                l4454 1FF2  
                                              l4446 1FC4                                                l4438 1FAB  
                                              l4518 0963                                                l4390 1000  
                                              l4550 13B3                                                l4534 136B  
                                              l4542 1394                                                l4526 1354  
                                              l5166 1C01                                                l5158 1D0E  
                                              l6038 1068                                                l6046 106E  
                                              l5350 0DB6                                                l5342 0D89  
                                              l5334 0D76                                                l5318 0D49  
                                              l5326 0D59                                                l5270 0CB3  
                                              l5262 0C94                                                l5254 0C81  
                                              l5238 0C60                                                l5246 0C70  
                                              ?_pad 00B4                                                l4800 06FD  
                                              l4720 05EF                                                l4704 05C7  
                                              l4712 05D6                                                l4640 0539  
                                              l4632 0526                                                l4624 0513  
                                              l4616 0508                                                l4472 1D68  
                                              l5088 07EB                                                l5184 150B  
                                              l5176 14E3                                                l4296 1CB7  
                                              l6072 1BAB                                                l6064 1BCD  
                                              l4384 1F4E                                                l4376 1F3A  
                                              l4368 1F25                                                l4288 1C58  
                                              l4448 1FD0                                                l4480 08C9  
                                              l4560 115F                                                l4392 1003  
                                              l4544 139B                                                l4552 13B8  
                                              l4536 137F                                                l4528 1357  
                                              l5168 1C04                                                l6080 13D4  
                                              l6048 107C                                                l5360 0DE4  
                                              l5352 0DD1                                                l5344 0D8D  
                                              l5328 0D5D                                                l5272 0CB5  
                                              l5264 0C95                                                l5256 0C82  
                                              l5248 0C78                                                l6170 1D14  
                                              l4810 0712                                                l4802 06FE  
                                              l4730 060B                                                l4722 05F7  
                                              l4714 05E1                                                l4706 05CB  
                                              l4650 0546                                                l4642 053A  
                                              l4626 0518                                                l4634 0528  
                                              l4618 050C                                                l4474 1D73  
                                              l4466 1D5B                                                l5186 150F  
                                              l5178 14E6                                                l4298 1CBB  
                                              l4386 1F53                                                l4378 1F3E  
                                              l4458 1BEF                                                l4490 08E9  
                                              l4482 08CC                                                l4570 11A3  
                                              l4562 1167                                                l4394 1009  
                                              l4546 13A1                                                l4538 1380  
                                              l5098 1DEF                                                l6090 13FA  
                                              l6082 13DE                                                l6058 1090  
                                              l5362 0DE6                                                l5354 0DD4  
                                              l5346 0DA5                                                l5338 0D7E  
                                              l5290 0CF4                                                l5282 0CCC  
                                              l5258 0C87                                                l5266 0C97  
                                              l6250 0714                                                l6156 1C68  
                                              l6180 1D26                                                l6172 1D1A  
                                              l4804 0702                                                l4740 0631  
                                              l4732 060F                                                l4724 05FB  
                                              l4716 05E6                                                l4708 05CC  
                                              l4660 0564                                                l4652 054B  
                                              l4644 053C                                                l4636 0530  
                                              l4628 051D                                                l4476 1D78  
                                              l4468 1D5D                                                l4900 021A  
                                              l4820 009D                                                l4812 0092  
                                              l4580 1275                                                l5196 1516  
                                              l5188 1511                                                l6148 1A08  
                                              l6244 1B14                                                l6068 1BBC  
                                              l4492 08EE                                                l4484 08DB  
                                              l4564 1175                                                l4556 114B  
                                              l4396 100C                                                l4548 13A6  
                                              l6084 13EB                                                l6076 13CD  
                                              l5356 0DDC                                                l5348 0DA9  
                                              l5292 0CF6                                                l5284 0CDC  
                                              l5268 0CA7                                                l5276 0CBE  
                                              l6260 0762                                                l6252 071A  
                                              l6182 1D29                                                l6174 1D1D  
                                              l4806 0704                                                l4742 0655  
                                              l4750 0666                                                l4734 0610  
                                              l4726 05FF                                                l4670 0570  
                                              l4662 0568                                                l4654 0553  
                                              l4646 0540                                                l4638 0533  
                                              l4910 022E                                                l4902 021E  
                                              l4830 00B9                                                l4822 00A2  
                                              l4814 0096                                                l4590 129A  
                                              l4582 127F                                                l4574 1B07  
                                              l5198 1520                                                l6190 1C13  
                                              l6246 1B21                                                l4494 08F8  
                                              l4486 08E0                                                l4566 1187  
                                              l4558 114E                                                l4398 1011  
                                              l6094 1405                                                l6086 13F5  
                                              l6078 13D2                                                l5358 0DE0  
                                              l5294 0CFB                                                l5286 0CE4  
                                              l5278 0CC3                                                l6270 07B1  
                                              l6262 077C                                                l6254 0729  
                                              l6350 1570                                                l6184 1D2C  
                                              l6176 1D20                                                l4808 070E  
                                              l4760 068B                                                l4752 0676  
                                              l4744 0657                                                l4736 0618  
                                              l4728 0609                                                l4680 057A  
                                              l4672 0572                                                l4664 056A  
                                              l4656 0554                                                l4648 0541  
                                              l4920 024F                                                l4912 022F  
                                              l4904 021F                                                l4840 00C8  
                                              l4832 00BC                                                l4824 00A7  
                                              l4816 0098                                                l4592 12A2  
                                              l4576 1B11                                                l6192 1C18  
                                              l5800 1AFD                                                l6248 1B26  
                                              l4496 08FB                                                l4488 08E4  
                                              l4568 118F                                                l6280 1DA1  
                                              l6088 13F7                                                l5296 0D09  
                                              l5288 0CEC                                                l6272 07BA  
                                              l6264 0785                                                l6256 073F  
                                              l6360 1585                                                l6352 1571  
                                              l5810 1A99                                                l5802 1AEF  
                                              l6186 1D2F                                                l6178 1D23  
                                              l4770 069F                                                l4762 068F  
                                              l4754 067B                                                l4746 065A  
                                              l4738 061B                                                l4690 0584  
                                              l4682 057C                                                l4674 0574  
                                              l4666 056C                                                l4658 0556  
                                              l4922 0254                                                l4930 027A  
                                              l4914 0233                                                l4906 0226  
                                              l4850 00E4                                                l4842 00CD  
                                              l4834 00BE                                                l4826 00AF  
                                              l4818 009C                                                l4594 12A4  
                                              l4586 1288                                                l6194 1C1F  
                                              l4498 0900                                                l6282 1DAA  
                                              l6098 1423                                                l5298 0D0D  
                                              l6266 079F                                                l6258 0759  
                                              l6274 07C3                                                l6370 15A5  
                                              l6362 158B                                                l6354 157D  
                                              l5812 1A9D                                                l5900 1B7A  
                                              l5804 1AF6                                                l6188 1A3F  
                                              l4780 06B0                                                l4764 0694  
                                              l4772 06A1                                                l4748 065F  
                                              l4692 0586                                                l4684 057E  
                                              l4676 0576                                                l4668 056E  
                                              l4940 02AA                                                l4932 0287  
                                              l4924 025A                                                l4916 0247  
                                              l4908 022A                                                l4860 010A  
                                              l4852 00E9                                                l4844 00D5  
                                              l4836 00C2                                                l4828 00B1  
                                              l4596 12A8                                                l4588 1299  
                                              l6196 1C24                                                l5820 1351  
                                              l6276 1757                                                l6292 1A7E  
                                              l6284 1DAC                                                l6268 07A8  
                                              l6380 15CE                                                l6364 1598  
                                              l6372 15AE                                                l6356 1580  
                                              l6348 156D                                                l5910 1E4D  
                                              l5830 1ADA                                                l5806 1AE3  
                                              l5902 1B7D                                                l4790 06C7  
                                              l4766 0698                                                l4758 0684  
                                              l4774 06A5                                                l4686 0580  
                                              l4678 0578                                                l4694 0588  
                                              l4942 02B5                                                l4934 0291  
                                              l4926 025E                                                l4870 0161  
                                              l4862 0122                                                l4846 00D7  
                                              l4838 00C3                                                l5822 1352  
                                              l5814 12E4                                                l6278 175D  
                                              l6286 1DAE                                                l6382 15D1  
                                              l6366 159F                                                l6374 15B6  
                                              l6358 1582                                                l5832 1A2D  
                                              l5920 1E5F                                                l5912 1E4F  
                                              l5840 1EC7                                                l5808 1AEA  
                                              l5904 1B7E                                                l4792 06E4  
                                              l4784 06B8                                                l4776 06A6  
                                              l4768 069A                                                l4696 0589  
                                              l4688 0582                                                l4944 02B9  
                                              l4936 029F                                                l4928 0276  
                                              l4880 018C                                                l4872 0168  
                                              l4864 012F                                                l4856 00F2  
                                              l4848 00DF                                                l4960 16DD  
                                              l4952 16B4                                                l5824 1353  
                                              l5816 12E4                                                l6288 1DBE  
                                              l6384 15ED                                                l6376 15C3  
                                              l6368 15A2                                                l5834 1A31  
                                              l5930 1E75                                                l5922 1E61  
                                              l5914 1E54                                                l5850 1EDA  
                                              l5842 1EC9                                                l5906 1B83  
                                              l4794 06EB                                                l4786 06BD  
                                              l4778 06AA                                                l4698 05A0  
                                              l4946 02BA                                                l4938 02A8  
                                              l4890 01D4                                                l4882 019E  
                                              l4874 0173                                                l4866 0147  
                                              l4858 00FD                                                l4970 1708  
                                              l4954 16B9                                                l5818 12E9  
                                              l6386 1602                                                l6378 15C5  
                                              l5940 1E7E                                                l5932 1E78  
                                              l5924 1E63                                                l5916 1E5B  
                                              l5828 1AD7                                                l5860 1EE6  
                                              l5852 1EDD                                                l5844 1ECB  
                                              l5836 1EC0                                                l5908 1B85  
                                              l4796 06F0                                                l4788 06C3  
                                              l4948 02C4                                                l4892 01E9  
                                              l4884 01A5                                                l4876 017A  
                                              l4868 0154                                                l4980 1730  
                                              l4972 170F                                                l4964 16E9  
                                              l4956 16BD                                                l6388 1608  
                                              l5790 1C41                                                l5942 1E7F  
                                              l5934 1E7A                                                l5926 1E65  
                                              l5918 1E5D                                                l5870 1EF3  
                                              l5862 1EEA                                                l5854 1EDF  
                                              l5846 1ECE                                                l5838 1EC4  
                                              l4798 06F8                                                l4894 0200  
                                              l4886 01B7                                                l4878 0185  
                                              l4982 1744                                                l4974 1718  
                                              l4966 16F2                                                l4958 16CD  
                                              l5950 1A6C                                                l5792 1C43  
                                              l5944 1E80                                                l5936 1E7B  
                                              l5928 1E6D                                                l5872 1EF5  
                                              l5864 1EEC                                                l5856 1EE1  
                                              l5848 1ED0                                                l5880 1B8D  
                                              l4896 0207                                                l4888 01C2  
                                              l4984 1749                                                l4976 171C  
                                              l4968 16F9                                                l4992 0ADC  
                                              l5794 1C45                                                l5786 1C3C  
                                              l5938 1E7D                                                l5874 1EF8  
                                              l5866 1EEF                                                l5858 1EE4  
                                              l5882 1B92                                                l5890 1B9D  
                                              l4898 0213                                                l4986 174D  
                                              l4978 1726                                                l5946 1A5A  
                                              l4994 0AEE                                                l5954 1A90  
                                              l5796 1C47                                                l5788 1C3F  
                                              l5868 1EF1                                                l5884 1B94  
                                              l5876 1B89                                                l5892 1B9E  
                                              l4988 174E                                                l4996 0AF6  
                                              l5980 1446                                                l5798 1C4F  
                                              l5886 1B96                                                l5878 1B8C  
                                              l5894 1BA3                                                l4998 0AFB  
                                              l5982 14B4                                                l5990 082E  
                                              l5896 1BA5                                                l5888 1B9A  
                                              l5992 0830                                                l5984 081E  
                                              l5898 1BA7                                                l5994 0836  
                                              l5986 0827                                                l5996 083C  
                                              l5988 0828                                                l5998 0882  
                                              STR_1 18BD                                                STR_2 1912  
                                              STR_3 1865                                                STR_4 18F2  
                                              STR_5 18AE                                                STR_6 188E  
                                              STR_7 1928                                                STR_8 1921  
                                              STR_9 191A                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              u4000 1C61                                                u4001 1C60  
                                              u4010 1CBB                                                u4011 1CBA  
                                              u4110 112C                                                u4111 112B  
                                              u5000 067B                                                u4040 1CCF  
                                              u4200 1F3A                                                u5001 067A  
                                              u4041 1CCE                                                u4025 1CC0  
                                              u4105 111E                                                u4201 1F39  
                                              u4130 113C                                                u4050 10F5  
                                              u4035 1CC5                                                u4131 113B  
                                              u4115 1128                                                u4051 10F4  
                                              u5100 06C7                                                u5020 068F  
                                              u4140 1141                                                u4060 1100  
                                              u4220 1F49                                                u4300 1036  
                                              u5101 06C6                                                u5021 068E  
                                              u4141 1140                                                u4125 1132  
                                              u4061 10FF                                                u4221 1F48  
                                              u4205 1F36                                                u4301 1035  
                                              u5110 06D5                                                u5030 0694  
                                              u4070 110F                                                u4230 1F4E  
                                              u4150 1F0C                                                u4310 1E21  
                                              u5031 0693                                                u5015 0685  
                                              u4071 110E                                                u4231 1F4D  
                                              u4215 1F3F                                                u4151 1F0B  
                                              u4311 1E20                                                u5120 06E4  
                                              u5040 069F                                                u5200 00A2  
                                              u4160 1F17                                                u4400 1FE8  
                                              u4240 1009                                                u6000 0D40  
                                              u5121 06E3                                                u5041 069E  
                                              u5201 00A1                                                u4161 1F16  
                                              u4401 1FE7                                                u4241 1008  
                                              u6001 0D3F                                         main@counter 0142  
                                              u5130 06EB                                                u5050 06A5  
                                              u5210 00A7                                                u4090 111D  
                                              u4170 1F22                                                u4410 1BF4  
                                              u4330 1E2F                                                u5131 06EA  
                                              u5115 06D1                                                u5051 06A4  
                                              u5211 00A6                                                u4091 111C  
                                              u4171 1F21                                                u4411 1BF3  
                                              u4331 1E2E                                                u5140 06F0  
                                              u5060 06AA                                                u4420 1D68  
                                              u5300 01F6                                                u5220 00C2  
                                              u4500 0946                                                u4260 1017  
                                              u4340 1E39                                                u6100 0D9B  
                                              u6020 0D4D                                                u5141 06EF  
                                              u5061 06A9                                                u4421 1D67  
                                              u5221 00C1                                                u4085 1113  
                                              u4501 0945                                                u4261 1016  
                                              u4341 1E38                                                u4325 1E25  
                                              u6021 0D4C                                                u5150 06FD  
                                              u5070 06B0                                                u5230 00C8  
                                              u4190 1F30                                                u4510 094B  
                                              u6110 0DB6                                                u5151 06FC  
                                              u5071 06AF                                                u5231 00C7  
                                              u4191 1F2F                                                u4511 094A  
                                              u4255 100D                                                u6111 0DB5  
                                              u6015 0D43                                                u5160 0702  
                                              u5080 06B7                                                u4440 1D78  
                                              u5400 025E                                                u5240 00CD  
                                              u4520 0958                                                u4600 115F  
                                              u4280 1026                                                u4360 1E48  
                                              u6120 0DD1                                                u6040 0D5D  
                                              u5161 0701                                                u5081 06B6  
                                              u4441 1D77                                                u5401 025D  
                                              u5305 01F2                                                u5241 00CC  
                                              u4185 1F26                                                u4521 0957  
                                              u4601 115E                                                u4281 1025  
                                              u4361 1E47                                                u4345 1E35  
                                              u6121 0DD0                                                u6105 0D97  
                                              u6041 0D5C                                                u5090 06BD  
                                              u5410 026C                                                u5330 021E  
                                              u5250 00E4                                                u4370 1FB0  
                                              u4530 095D                                                u4450 08D1  
                                              u4610 11A3                                                u6130 0DE4  
                                              u6050 0D62                                                u5091 06BC  
                                              u4435 1D6D                                                u5331 021D  
                                              u5315 0201                                                u5251 00E3  
                                              u4371 1FAF                                                u4531 095C  
                                              u4451 08CF                                                u4611 11A2  
                                              u4275 1018                                                u4355 1E3E  
                                              u6131 0DE3                                                u6115 0DB2  
                                              u6051 0D61                                                u6035 0D4F  
                                              u5180 0712                                                u5420 0287  
                                              u5260 00E9                                                u5500 16F8  
                                              u4620 1B10                                                u3900 1A7C  
                                              u4380 1FBF                                                u4540 0963  
                                              u4460 08D2                                                u6060 0D76  
                                              u5181 0711                                                u5421 0286  
                                              u5325 0214                                                u5261 00E8  
                                              u5501 16F7                                                u4621 1B0F  
                                              u3901 1A7A                                                u4381 1FBE  
                                              u4541 0962                                                u4525 0954  
                                              u4285 1022                                                u6125 0DCD  
                                              u6061 0D75                                                i1l30 1AD6  
                                              u5430 029F                                                u5350 022E  
                                              u5190 009C                                                u4710 12D3  
                                              u4630 127F                                                u3910 1A7D  
                                              u4390 1FE3                                                u4470 08E0  
                                              u4550 139B                                                u6070 0D7D  
                                              u5175 0709                                                u5431 029E  
                                              u5415 0268                                                u5351 022D  
                                              u5191 009B                                                u4711 12D2  
                                              u4631 127E                                                u4391 1FE2  
                                              u4471 08DF                                                u4295 102C  
                                              u4551 139A                                                u6071 0D7C  
                                              u4800 0564                                                u5440 02B9  
                                              u5360 0233                                                u4720 12D8  
                                              u4640 1295                                                u5520 170E  
                                              u7120 12E9                                                u3920 1DCC  
                                              u4480 08E9                                                u4560 13A1  
                                              u5600 0AEE                                                u7200 1054  
                                              u6080 0D83                                                u4801 0563  
                                              u5441 02B8                                                u5425 0283  
                                              u5361 0232                                                u5345 0220  
                                              u4721 12D7                                                u4705 12C6  
                                              u5521 170D                                                u7121 12E8  
                                              u3921 1DCB                                                u4481 08E8  
                                              u4561 13A0                                                u5601 0AED  
                                              u7201 1053                                                u6145 0DEB  
                                              u6081 0D82                                                u4810 0568  
                                              u4730 0512                                                u5370 0247  
                                              u5290 01DF                                                u4650 12A8  
                                              u3930 1DD6                                                u4490 093F  
                                              u4570 13A6                                                u5610 0B27  
                                              u7210 1060                                                u6090 0D8D  
                                              u7130 0836                                                u4811 0567  
                                              u4731 0511                                                u5435 029B  
                                              u5371 0246                                                u5275 0162  
                                              u4651 12A7                                                u5515 1702  
                                              u3931 1DD5                                                u4395 1FDF  
                                              u4491 093E                                                u4571 13A5  
                                              u5611 0B26                                                u7211 105F  
                                              u6091 0D8C                                                u7131 0835  
                                              i1l52 1B3D                                                u4900 05E1  
                                              u4820 05A0                                                u4740 0518  
                                              u5380 024E                                                u4660 12AF  
                                              u5540 171C                                                u5460 16B9  
                                              u3940 1BE8                                                u4580 13B3  
                                              u5620 0B3C                                                u7220 1088  
                                              u7140 083C                                                u4901 05E0  
                                              u4821 059F                                                u4741 0517  
                                              u5381 024D                                                u5285 018D  
                                              u4661 12AE                                                u4645 1291  
                                              u5541 171B                                                u5461 16B8  
                                              u3941 1BE7                                                u4581 13B2  
                                              u5621 0B3B                                                u7221 1087  
                                              u7141 083B                                                u4910 05E6  
                                              u4830 05AA                                                u4750 051D  
                                              u5390 0254                                                u5550 1722  
                                              u5470 16BD                                                u3950 11AF  
                                              u4590 13B8                                                u5630 0B54  
                                              u7230 13DE                                                u7150 088B  
                                              i1l39 1A11                                                u4911 05E5  
                                              u4831 05A8                                                u4751 051C  
                                              u5455 02BD                                                u5391 0253  
                                              u5295 01DB                                                u5551 1721  
                                              u5535 1712                                                u5471 16BC  
                                              u3951 11AE                                                u4495 093B  
                                              u4591 13B7                                                u5631 0B53  
                                              u7231 13DD                                                u7151 088A  
                                              i1l72 1C3B                                                u4920 05FB  
                                              u4840 05AB                                                u4760 0539  
                                              u4680 12BD                                                u5560 1726  
                                              u5480 16DD                                                u5800 150F  
                                              u3960 11B5                                                u5640 0B5E  
                                              u7240 13EB                                                u7160 0891  
                                              u4921 05FA                                                u4825 059C  
                                              u4761 0538                                                u4681 12BC  
                                              u5561 1725                                                u5481 16DC  
                                              u5801 150E                                                u3961 11B4  
                                              u4585 13AF                                                u5641 0B5D  
                                              u7241 13EA                                                u7161 0890  
                                              i1l58 1A01                                                u5730 1B63  
                                              u4930 05FF                                                u4850 05BB  
                                              u4770 0540                                                u4690 12C4  
                                              u5570 173A                                                u5810 1520  
                                              u3970 11C5                                                u5650 0B93  
                                              u7250 13F5                                                u7170 08BA  
                                              u5731 1B62                                                u4931 05FE  
                                              u4851 05BA                                                u4771 053F  
                                              u4691 12C3                                                u4675 12B1  
                                              u5811 151F                                                u3971 11C4  
                                              u5651 0B92                                                u7251 13F4  
                                              u7171 08B9                                                u5740 1B72  
                                              u4780 0546                                                u5580 1749  
                                              u5820 1531                                                u3980 11E5  
                                              u5660 0BD2                                                u7260 1404  
                                              u5900 0C8C                                                u7180 08C0  
                                              u5741 1B71                                                u4781 0545  
                                              u5581 1748                                                u5821 1530  
                                              u3981 11E4                                                u5661 0BD1  
                                              u7261 1403                                                u5901 0C8B  
                                              u7181 08BF                                                u4950 060F  
                                              u4870 05CB                                                u4790 054B  
                                              u5590 174D                                                u5830 154C  
                                              u3990 1DA0                                                u5670 0C0A  
                                              u7270 1430                                                u5750 1A8E  
                                              u7190 1043                                                u5910 0CA7  
                                              u4951 060E                                                u4871 05CA  
                                              u4791 054A                                                u5591 174C  
                                              u5575 1736                                                u5495 16EC  
                                              u5831 154B                                                u5815 151C  
                                              u3991 1D9F                                                u5671 0C09  
                                              u7271 142F                                                u5751 1A8C  
                                              u7191 1042                                                u5911 0CA6  
                                              u5840 1569                                                u5680 1E17  
                                              u7280 1435                                                u5760 1A8F  
                                              u5920 0CC3                                                u7345 1C79  
                                              u4945 0602                                                u4865 05BE  
                                              u5841 1568                                                u5825 152D  
                                              u3985 11E1                                                u5681 1E16  
                                              u7281 1434                                                u5921 0CC2  
                                              u4970 0631                                                u4890 05DD  
                                              u7370 1C18                                                u5770 1D0E  
                                              u5930 0CFB                                                u5850 0C5A  
                                              u7450 07AF                                                u4971 0630  
                                              u4891 05DC                                                u5835 1548  
                                              u7371 1C17                                                u5771 1D0D  
                                              u5931 0CFA                                                u5851 0C59  
                                              u7451 07AD                                                u4980 065F  
                                              u5780 14E3                                                u7380 1C1F  
                                              u5860 0C60                                                u7460 07B0  
                                              u4981 065E                                                u4973 062D  
                                              u4965 0612                                                u4885 05CE  
                                              u5781 14E2                                                u7381 1C1E  
                                              u5861 0C5F                                                u4990 0676  
                                              u5790 14F3                                                u7470 175D  
                                              u5870 0C65                                                u7630 158B  
                                              u4991 0675                                                u5791 14F2  
                                              u7471 175C                                                u5871 0C64  
                                              u7631 158A                                                u5960 0D0D  
                                              u5880 0C81                                                u7640 1598  
                                              u5961 0D0C                                                u5945 0CFC  
                                              u5881 0C80                                                u7641 1597  
                                              u5890 0C87                                                u7650 15C3  
                                              u5795 14EF                                                u5955 0D03  
                                              u5891 0C86                                                u7651 15C2  
                                              u5980 0D27                                                u5981 0D26  
                                              u5990 0D38                                                u5991 0D37  
                                              u5975 0D0F                                                u5985 0D23  
                                              u7687 15A9                                                u7697 15C9  
                                              _TMR2 001D                                                _TMR4 0415  
                                              _TMR6 041C                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0070                                     _getHoogtesensor 1A48  
                                              abs@a 00A6                                                _dbuf 0220  
                                              _atoi 13CD                                                _main 156D  
                                              _dtoa 08C9                                                _line 01C0  
                                     i1___flmul@grs 002E                                                _prec 014D  
                                              _nout 014B                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 1354                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 1EC0                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0058  
        __end_of_EUSART_DefaultOverrunErrorCallback 1A08                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1A04  
                                   ___fldiv@new_exp 00B2                           __end_of_SPI1_ByteExchange 1B14  
                   __end_of_INT_SetInterruptHandler 1A3F                                ?i1_ADC_SelectChannel 0070  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 00EC  
                                             _ADACT 009F                                               ?_atoi 00A6  
                                   __end_of___fladd 0714                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___fldiv 0DF4  
                                   __end_of___awdiv 114B                                               STR_10 18FD  
                                             STR_11 18AB                                               STR_12 184C  
                                             STR_13 18E5                                               STR_14 18D8  
                                             STR_15 18CB                                               STR_16 189F  
                                             STR_17 187D                                     __end_of___awmod 1F58  
                                   __end_of___flmul 02CD                                     __end_of___flsub 1CF4  
                                   __end_of___fltol 12E4                                               ?_utoa 00BC  
                                   ___awdiv@divisor 00A0                                               _T2CON 001F  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _T6CON 041E  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                     __end_of___lwdiv 103B  
                                             i1l233 001B                                               i1l235 002C  
                                             i1l244 0056                                               i1l237 003A  
                                             i1l238 0056                                               i1l239 0048  
                                             i1l432 1B4C                                     __end_of___lwmod 1E4D  
                                             i1l438 1A03                                               i1l491 1B5B  
                                             i1l735 1FAA                                               i1l745 081B  
                                             i1l497 0800                                               i1l763 1A02  
                                             i1l748 081D                                               i1l766 1A07  
                                             i1l848 1EBF                                               i1l857 1A17  
                                             i1l980 0ADB                                               i1l978 0AD4  
                                   ___awdiv@counter 00A4                                               _OSCEN 091D  
                                             _UART1 1800                                        vfpfcnvrt@fmt 00CB  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 1B9A                                    __end_of_TMR2_ISR 1B4D  
                                  __end_of_TMR4_ISR 1B5C                                               _getKd 1BAB  
                                             _getKi 1BBC                                               _getKp 1BCD  
                                             _flags 0064                                  _EUSART_TransmitISR 0802  
                                    i1___flmul@aexp 0032                                 read_prec_or_width@c 00AC  
                                    i1___flmul@bexp 0033                                 read_prec_or_width@n 00AD  
                                             _fputc 11A8                                               _fputs 1D7D  
                                             _setKd 1AA3                                               _setKi 1AAD  
                                             _setKp 1AB7                                         ?_TMR6_Tasks 0070  
                                    i1___flmul@sign 002D                                      i1___flmul@temp 0038  
                                    i1___flmul@prod 0034                                               atoi@n 00AB  
                                             pad@fp 00B4                                               atoi@s 00A6  
                                             _width 005A                                               _putch 1BDE  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                controller@difference 0050  
                                             pclath 000A                                      i1___fltol@exp1 0043  
                              __end_of_getLedNumber 10EF                                               utoa@d 00BE  
                                             utoa@i 00C4                                               utoa@p 00C1  
                                             utoa@w 00C2                                               status 0003  
                                             wtemp0 007E                                     __end_of_sprintf 1DC7  
                               ?_EUSART_TransmitISR 0070                                     i1___fladd@signs 004A  
                                       controller@D 0056                                         controller@I 0054  
                                       controller@P 0052                               ??i1_ADC_SelectChannel 0070  
                                   __initialization 005A                                        __end_of_atoi 1446  
                                      __end_of_main 160E                                        __end_of_dtoa 0982  
                                      __end_of_utoa 13CD                                       ?_initLedstrip 0070  
                        ??_PWM_buzzer_LoadDutyValue 00A2                                      ??_EUSART_Write 00A1  
                 _EUSART_TxCompleteInterruptHandler 015B                             __end_of_TMR2_Initialize 1B9A  
                                         ??_ADC_ISR 0074                         ?_INTERRUPT_InterruptManager 0070  
                            printFloat@integer_part 0126                                              ??_atoi 00A8  
                              ??_EUSART_TransmitISR 0070                                              ??_main 012C  
                                            ??_dtoa 00C0                                         ?i1___xxtofl 0070  
                              __end_of_getDutycycle 1A6C                                              ??_utoa 00C0  
                           setSetpoint@new_setpoint 00AD                          __end_of_read_prec_or_width 11A8  
                 PWM_buzzer_LoadDutyValue@dutyValue 00A0                                     _TMR6_Initialize 1B7A  
EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  EUSART_FramingErrorCallbackRegister@callbackHandler 00A0  
                           __end_of_getHoogtesensor 1A51                                              ?_getKd 00A0  
                                            ?_getKi 00A0                                              ?_getKp 00A0  
                                            _ADCON0 009D                                              _ADCON1 009E  
                        _EUSART_OverrunErrorHandler 0157                                              ?_fputc 00A3  
                                            ?_fputs 00AC                                              _ADRESH 009C  
                                            _ADRESL 009B                                              ?_setKd 0120  
                                            ?_setKi 0120                                              ?_setKp 0120  
                        __end_of_position_led_strip 156D                                    ___awdiv@dividend 00A2  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                      ?_setSetpoint 00AD                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            _RB6PPS 0E9E                                              _RC5PPS 0EA5  
                                            _RB7PPS 0E9F                                              i1l1520 0EC9  
                                            i1l1416 125F                                              i1l1409 1274  
                                            _ODCONA 028C                                              i1l1522 0EA3  
                                            _ODCONB 028D                                              i1l1419 1274  
                                            _ODCONC 028E                                              i1l1516 0E4A  
                                            i1l1612 0507                                              i1l1541 0F7C  
                                            i1l1550 0FD2                                              i1l1631 1D48  
                                            i1l1624 04FD                                              i1l1537 0F5A  
                                            i1l1529 0FFF                                              i1l1633 1D58  
                                            i1l1618 0485                                              i1l1547 0F9F  
                                            _RC7PPS 0EA7                                              i1l1558 0FF2  
                                            i1l5110 1D37                                              i1l1670 1689  
                                            i1l1559 0FFF                                              i1l5120 1D54  
                                            i1l5112 1D39                                              i1l1656 1630  
                                            i1l1657 1641                                              i1l5130 1C27  
                                            i1l5114 1D40                                              i1l1658 16B1  
                                            i1l5116 1D44                                              i1l1669 167D  
                                            i1l5126 1A0C                                              i1l5118 1D4F  
                                            i1l6200 1F61                                              i1l6120 09E0  
                                            i1l6210 1F7E                                              i1l6202 1F66  
                                            i1l5410 0DF4                                              i1l6130 0A9B  
                                            i1l6122 09EB                                              i1l6114 0982  
                                            i1l6220 1F98                                              i1l6212 1F85  
                                            i1l6204 1F6D                                              i1l5500 0EB7  
                                            i1l5420 0E04                                              i1l5412 0DF8  
                                            i1l5404 1256                                              i1l6140 0ACD  
                                            i1l6132 0AA7                                              i1l6124 09F2  
                                            i1l6116 098A                                              i1l6300 0014  
                                            i1l6150 1B2F                                              i1l6214 1F8B  
                                            i1l6206 1F74                                              i1l5510 0ED2  
                                            i1l5502 0EB8                                              i1l5430 0E1C  
                                            i1l5422 0E09                                              i1l5414 0DFA  
                                            i1l5406 1264                                              i1l6142 0AD1  
                                            i1l6134 0AB0                                              i1l6126 0A2D  
                                            i1l6118 0993                                              i1l6310 003F  
                                            i1l6302 0020                                              i1l6152 1B31  
                                            i1l6224 1F9F                                              i1l6216 1F90  
                                            i1l6208 1F79                                              i1l6240 0818  
                                            i1l6232 0802                                              i1l5600 0FF0  
                                            i1l5520 0EEB                                              i1l5504 0EC0  
                                            i1l5440 0E2C                                              i1l5432 0E1F  
                                            i1l5424 0E11                                              i1l5416 0DFE  
                                            i1l5408 1269                                              i1l6136 0ABD  
                                            i1l6128 0A61                                              i1l6160 1B54  
                                            i1l6312 0044                                              i1l6304 0025  
                                            i1l6154 1B38                                              i1l6226 1FA6  
                                            i1l6218 1F93                                              i1l6234 0809  
                                            i1l5602 0FFA                                              i1l5530 0F04  
                                            i1l5522 0EF5                                              i1l5514 0EDB  
                                            i1l5506 0EC2                                              i1l5450 0E40  
                                            i1l5442 0E2D                                              i1l5434 0E25  
                                            i1l5426 0E12                                              i1l5418 0DFF  
                                            i1l5610 02D3                                              i1l5370 1A12  
                                            i1l6146 0AD4                                              i1l6138 0AC3  
                                            i1l6162 1B59                                              i1l6314 004D  
                                            i1l6306 0031                                              i1l6228 1FA8  
                                            i1l6236 0811                                              i1l6164 1B3E  
                                            i1l5604 0FFE                                              i1l5540 0F46  
                                            i1l5524 0EF7                                              i1l5516 0EE3  
                                            i1l5508 0ECD                                              i1l5532 0F07  
                                            i1l5460 0E58                                              i1l5444 0E32  
                                            i1l5452 0E42                                              i1l5436 0E26  
                                            i1l5428 0E14                                              i1l5700 0461  
                                            i1l5620 02EA                                              i1l5612 02D7  
                                            i1l5380 1219                                              i1l6316 0052  
                                            i1l6308 0036                                              i1l6238 0816  
                                            i1l6166 1B45                                              i1l5542 0F4B  
                                            i1l5534 0F1D                                              i1l5526 0EFB  
                                            i1l5518 0EE7                                              i1l5470 0E62  
                                            i1l5462 0E5A                                              i1l5454 0E50  
                                            i1l5446 0E37                                              i1l5438 0E28  
                                            i1l5710 0482                                              i1l5702 0465  
                                            i1l5630 02FD                                              i1l5622 02EC  
                                            i1l5614 02D8                                              i1l5606 02CD  
                                            i1l5390 1239                                              i1l5382 122A  
                                            i1l5374 1206                                              i1l6158 1B4D  
                                            i1l5368 1ACC                                              i1l6432 1EB0  
                                            i1l6168 1B4A                                              i1l5560 0F84  
                                            i1l5552 0F70                                              i1l5536 0F41  
                                            i1l5544 0F52                                              i1l5528 0EFC  
                                            i1l5480 0E6C                                              i1l5472 0E64  
                                            i1l5464 0E5C                                              i1l5456 0E54  
                                            i1l5448 0E3F                                              i1l5720 0499  
                                            i1l5704 0469                                              i1l5640 0312  
                                            i1l5632 02FE                                              i1l5624 02F4  
                                            i1l5616 02DD                                              i1l5608 02D1  
                                            i1l5384 122B                                              i1l5376 1210  
                                            i1l5570 0F92                                              i1l5562 0F86  
                                            i1l5554 0F77                                              i1l5546 0F62  
                                            i1l5538 0F43                                              i1l5490 0E75  
                                            i1l5482 0E6E                                              i1l5474 0E66  
                                            i1l5466 0E5E                                              i1l5458 0E56  
                                            i1l5730 04DA                                              i1l5722 04B1  
                                            i1l5714 048A                                              i1l5706 046A  
                                            i1l5650 032D                                              i1l5642 031A  
                                            i1l5634 0303                                              i1l5626 02F7  
                                            i1l5618 02E2                                              i1l5386 1233  
                                            i1l5580 0FA9                                              i1l5572 0F96  
                                            i1l5564 0F8B                                              i1l5556 0F7B  
                                            i1l5548 0F67                                              i1l5492 0E8C  
                                            i1l5484 0E70                                              i1l5476 0E68  
                                            i1l5468 0E60                                              i1l5740 04F5  
                                            i1l5732 04E3                                              i1l5716 048F  
                                            i1l5724 04B5                                              i1l5708 046E  
                                            i1l5660 0382                                              i1l5652 0338  
                                            i1l5644 031F                                              i1l5636 0308  
                                            i1l5628 02F9                                              i1l5396 1241  
                                            i1l5388 1235                                              i1l6198 1F58  
                                            i1l5590 0FDC                                              i1l5582 0FAF  
                                            i1l5574 0F9C                                              i1l5558 0F80  
                                            i1l5566 0F8D                                              i1l5494 0EA7  
                                            i1l5486 0E72                                              i1l5478 0E6A  
                                            i1l5742 04FF                                              i1l5734 04E5  
                                            i1l5726 04C2                                              i1l5718 0495  
                                            i1l5670 03B5                                              i1l5662 038F  
                                            i1l5654 0345                                              i1l5646 0324  
                                            i1l5638 0310                                              i1l5398 124F  
                                            i1l5750 1618                                              i1l6294 0006  
                                            i1l5592 0FE4                                              i1l5584 0FB3  
                                            i1l5568 0F91                                              i1l5496 0EB1  
                                            i1l5488 0E74                                              i1l5736 04F0  
                                            i1l5728 04CC                                              i1l5680 03F2  
                                            i1l5672 03C0                                              i1l5664 039C  
                                            i1l5656 035D                                              i1l5760 164D  
                                            i1l5752 1628                                              i1l6296 000A  
                                            i1l5594 0FE9                                              i1l5586 0FD0  
                                            i1l5578 0FA4                                              i1l5498 0EB3  
                                            i1l5738 04F4                                              i1l5690 0442  
                                            i1l5682 03FD                                              i1l5674 03C7  
                                            i1l5666 03A3                                              i1l5658 036A  
                                            i1l5770 1677                                              i1l5762 1654  
                                            i1l5754 1638                                              i1l5746 160F  
                                            i1l6298 000F                                              i1l5596 0FEA  
                                            i1l5588 0FD7                                              i1l5692 044E  
                                            i1l5684 040F                                              i1l5676 03D9  
                                            i1l5668 03AE                                              i1l5780 16A8  
                                            i1l5772 1681                                              i1l5764 1663  
                                            i1l5748 1614                                              i1l5598 0FEE  
                                            i1l5694 0455                                              i1l5686 0424  
                                            i1l5678 03E0                                              i1l5782 16A9  
                                            i1l5774 168B                                              i1l5766 166A  
                                            i1l5758 1644                                              i1l5960 1E8C  
                                            i1l5696 0459                                              i1l5688 043B  
                                            i1l5776 169F                                              i1l5768 1673  
                                            i1l5962 1E90                                              i1l5698 045A  
                                            i1l5778 16A4                                              i1l5964 1E98  
                                            i1l5972 1EA7                                              i1l5956 1E83  
                                            i1l5948 1A04                                              i1l5966 1E9B  
                                            i1l5974 1EBB                                              i1l5958 1E84  
                                            i1l5968 1EA3                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u620_20 124E                                              u700_20 1638  
                                            u620_21 124D                                              u700_21 1637  
                                            u621_20 1255                                              u621_21 1254  
                                            u701_25 1647                                              u630_20 0E32  
                                            u710_20 16A4                                              u702_20 1653  
                                            u630_21 0E31                                              u710_21 16A3  
                                            u702_21 1652                                              u622_25 1257  
                                            u631_20 0E37                                              u623_20 1264  
                                            u615_20 1210                                              u711_20 16A8  
                                            u631_21 0E36                                              u623_21 1263  
                                            u615_21 120F                                              u711_21 16A7  
                                            u703_25 165D                                              u632_20 0E50  
                                            u624_20 1269                                              u616_20 1226  
                                            u704_20 1669                                              u632_21 0E4F  
                                            u624_21 1268                                              u704_21 1668  
                                            u640_25 0EBA                                              u616_25 1222  
                                            u641_20 0EC9                                              u633_20 0E54  
                                            u625_20 0DFE                                              u617_20 1239  
                                            u641_21 0EC8                                              u633_21 0E53  
                                            u625_21 0DFD                                              u617_21 1238  
                                            u705_25 166D                                              u650_20 0F4B  
                                            u642_20 0ECD                                              u634_20 0E8C  
                                            u626_20 0E04                                              u618_20 1240  
                                            u706_20 1677                                              u730_20 0ABD  
                                            u650_21 0F4A                                              u642_21 0ECC  
                                            u634_21 0E8B                                              u626_21 0E03  
                                            u618_21 123F                                              u706_21 1676  
                                            u730_21 0ABC                                              u634_25 0E88  
                                            u570_25 1D49                                              u730_25 0AB9  
                                            u651_20 0F62                                              u643_20 0ED2  
                                            u635_20 0E96                                              u627_20 0E09  
                                            u571_20 1D54                                              u707_20 167D  
                                            u731_20 0ACD                                              u651_21 0F61  
                                            u643_21 0ED1                                              u635_21 0E94  
                                            u627_21 0E08                                              u571_21 1D53  
                                            u707_21 167C                                              u731_21 0ACC  
                                            u619_25 1242                                              u740_20 1F74  
                                            u660_20 0FA3                                              u652_20 0F67  
                                            u644_20 0EE7                                              u636_20 0E97  
                                            u628_20 0E25                                              u708_20 1681  
                                            u732_20 0AD1                                              u740_21 1F73  
                                            u660_21 0FA2                                              u652_21 0F66  
                                            u644_21 0EE6                                              u628_21 0E24  
                                            u708_21 1680                                              u732_21 0AD0  
                                            u572_25 1C36                                              _OSCFRQ 091F  
                                            u733_20 1B38                                              u741_20 1F7E  
                                            u661_20 0FA9                                              u645_20 0EEB  
                                            u637_20 0EA7                                              u629_20 0E2C  
                                            u709_20 1695                                              u733_21 1B37  
                                            u741_21 1F7D                                              u661_21 0FA8  
                                            u645_21 0EEA                                              u637_21 0EA6  
                                            u629_21 0E2B                                              u653_25 0F71  
                                            u709_25 1691                                              u742_20 1F8B  
                                            u670_20 0FFE                                              u662_20 0FB3  
                                            u654_20 0F7B                                              u750_20 0014  
                                            u742_21 1F8A                                              u670_21 0FFD  
                                            u662_21 0FB2                                              u654_21 0F7A  
                                            u750_21 0013                                              u646_25 0EEE  
                                            u638_25 0EAA                                              u743_20 1F9E  
                                            u663_20 0FC1                                              u655_20 0F80  
                                            u647_20 0EFB                                              u639_20 0EB7  
                                            u671_20 02D7                                              u735_20 1B54  
                                            u751_20 0020                                              u743_21 1F9D  
                                            u655_21 0F7F                                              u647_21 0EFA  
                                            u639_21 0EB6                                              u671_21 02D6  
                                            u735_21 1B53                                              u751_21 001F  
                                            u663_25 0FBD                                              u744_20 0809  
                                            u736_20 1B45                                              u664_20 0FD0  
                                            u656_20 0F8B                                              u672_20 02DD  
                                            u752_20 0025                                              u744_21 0808  
                                            u736_21 1B44                                              u664_21 0FCF  
                                            u656_21 0F8A                                              u672_21 02DC  
                                            u752_21 0024                                              u648_25 0EFE  
                                            u680_25 03C8                                       vfpfcnvrt@done 00D2  
                                            u665_20 0FD7                                              u657_20 0F91  
                                            u649_20 0F1D                                              u569_20 1D44  
                                            u681_20 041A                                              u673_20 02E2  
                                            u729_20 0AB0                                              u753_20 0031  
                                            u665_21 0FD6                                              u657_21 0F90  
                                            u649_21 0F1C                                              u569_21 1D43  
                                            u673_21 02E1                                              u729_21 0AAF  
                                            u753_21 0030                                              u649_23 0F19  
                                            u681_25 0416                                              u666_20 0FDC  
                                            u658_20 0F96                                              u690_20 0489  
                                            u682_20 0431                                              u674_20 02FD  
                                            u754_20 0036                                              u666_21 0FDB  
                                            u658_21 0F95                                              u690_21 0488  
                                            u674_21 02FC                                              u754_21 0035  
                                            u682_25 042D                                              u739_20 1F66  
                                            u667_20 0FE9                                              u659_20 0F9C  
                                            u691_20 048F                                              u675_20 0303  
                                            u755_20 003F                                              u739_21 1F65  
                                            u667_21 0FE8                                              u659_21 0F9B  
                                            u691_21 048E                                              u675_21 0302  
                                            u755_21 003E                                              u683_25 043C  
                                            u668_20 0FEE                                              u692_20 0499  
                                            u676_20 0308                                              u756_20 0044  
                                            u748_20 000A                                              u668_21 0FED  
                                            u692_21 0498                                              u676_21 0307  
                                            u756_21 0043                                              u748_21 0009  
                                            u684_25 044F                                              u693_20 04A7  
                                            u685_20 0459                                              u677_20 031F  
                                            u757_20 004D                                              u749_20 000F  
                                            u685_21 0458                                              u677_21 031E  
                                            u757_21 004C                                              u749_21 000E  
                                            u669_25 0FF5                                              u693_25 04A3  
                                            u694_20 04C2                                              u678_20 0324  
                                            u758_20 0052                                              u694_21 04C1  
                                            u678_21 0323                                              u758_21 0051  
                                            u694_25 04BE                                              u686_25 045B  
                                            u695_20 04DA                                              u687_20 0469  
                                            u695_21 04D9                                              u687_21 0468  
                                            u695_25 04D6                                              u679_25 039D  
                                            u696_20 04F4                                              u688_20 046E  
                                            u696_21 04F3                                              u688_21 046D  
                                            u689_20 0482                                              u689_21 0481  
                                            u697_25 04F8                                              u698_20 1614  
                                            u698_21 1613                                              _TX1REG 019A  
                                            u699_20 1618                                              u699_21 1617  
                                            _TX1STA 019E                                    __end_of___xxtofl 1757  
                                      ?_uartHandler 0070                                   __end_of_SPI1_Open 1354  
                              _sendLedstripEndFrame 1C80                                   _ADC_potentiometer 0155  
                                      vfprintf@cfmt 00E0                                      ??_initLedstrip 00A9  
                                         ??___fladd 00B6                                              ___wmul 1CB4  
                           _updateLedstripAnimation 1A08                                           ??___fldiv 00A8  
                                         ??___awdiv 00A4                                           ??___awmod 00A4  
                                         ??___flmul 00D2                                           ??___flsub 00CA  
                                         ??___fltol 00E8                                           ??___lwdiv 00A4  
                                         ??___lwmod 00A4                                    __end_of_ledstrip 184C  
                                  __end_of_readLine 1094                                read_prec_or_width@ap 00A7  
                           __end_of_TMR4_Initialize 1BAB                                    ___awdiv@quotient 00A6  
                                 ?_EUSART_IsRxReady 0070                                     ___awmod@divisor 00A0  
                                 ?_EUSART_IsTxReady 0070                                     ___awmod@counter 00A4  
                                            _printf 1C01                                              pad@buf 00B6  
                                 ?_CLOCK_Initialize 0070                                              dtoa@fp 00BC  
                                            _strlen 1C52                                   __end_ofi1___fladd 1000  
                                ??_EUSART_IsRxReady 00A0                                   __end_ofi1___flmul 0508  
                                 __end_ofi1___fltol 1275                                              fputc@c 00A3  
                                ??_EUSART_IsTxReady 00A0                                              fputs@c 00B1  
                                            fputs@i 00B2                                              fputs@s 00AC  
                         ?_adcConversionDoneHandler 0070                                  ??_CLOCK_Initialize 00A0  
                        str2float@decimal_separator 00E8                                    __end_of_printOut 1A87  
                                   i1___fltol@sign1 0042                             ?_sendLedstripStartFrame 0070  
                       EUSART_ReceiveISR@tempRxHead 0071                                    __end_of_vfprintf 1E1A  
                             _pwm_fan_LoadDutyValue 1C27                                              utoa@fp 00BC  
           INT_SetInterruptHandler@InterruptHandler 00A0             ADC_SetInterruptHandler@InterruptHandler 00A0  
                                         ??_sprintf 00E7                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 00AA  
                                      ___xxtofl@exp 00A9                                   _SYSTEM_Initialize 1D14  
                                      ___xxtofl@val 00A0                             __end_of__initialization 008E  
                                    _SPI1_ByteWrite 0000                                    printFloat@number 0120  
                                ?_SYSTEM_Initialize 0070                                          ___fltol@f1 00E4  
                                      ?i1__Umul8_16 0070                                       __end_of_UART1 1830  
                             ?_sendLedstripEndFrame 0070                                      __pcstackCOMMON 0070  
                                      __pidataBANK0 0002                                        __pidataBANK2 1AC1  
                               ??_SYSTEM_Initialize 00A2                                           ?_TMR2_ISR 0070  
                                     __end_of_getKd 1BBC                                       __end_of_getKi 1BCD  
                                     __end_of_getKp 1BDE                                           ?_TMR4_ISR 0070  
                                     __end_of_fputc 1206                                       __end_of_fputs 1DA1  
                                 ??_SPI1_Initialize 00A0                                       __end_of_setKd 1AAD  
                                     __end_of_setKi 1AB7                                       __end_of_setKp 1AC1  
                                     __end_of_putch 1BEF                                    ?_TMR2_Initialize 0070  
                           __end_of_TMR6_Initialize 1B89                       __end_of_PWM_buzzer_Initialize 1AEF  
                           _ADC_GetConversionResult 1A0C                                  _spi1_configuration 1908  
                                       setKd@new_kd 0120                      __end_of_sendLedstripStartFrame 0800  
                              _eusartRxStatusBuffer 01A0                                    _ADC_hoogtesensor 005E  
                                _pwm_fan_Initialize 1AEF                                    ?_getHoogtesensor 00A0  
                                           ??_getKd 00A4                                             ??_getKi 00A4  
                                           ??_getKp 00A4                                         setKi@new_ki 0120  
                                           ??_fputc 00A7                           __end_of_SYSTEM_Initialize 1D36  
                                           ??_fputs 00AF                                             ??_setKd 00F0  
                                           ??_setKi 00F0                                             ??_setKp 00F0  
                                           ??_putch 00A2                                          __pbssBANK0 005A  
                                        __pbssBANK2 0143                                          __pbssBANK3 01A0  
                                        __pbssBANK4 0220                                 ?_pwm_fan_Initialize 0070  
                              __end_of_EUSART_Write 1DEF                                         setKp@new_kp 0120  
                                    i1___xxtofl@arg 007A                                      i1___xxtofl@exp 0079  
                                    i1___xxtofl@val 0070                           ??_updateLedstripAnimation 00F0  
                                 __end_of__Umul8_16 1D7D                            _TMR6_PeriodMatchCallback 01D4  
                                        __pmaintext 156D                                             ?___wmul 00A0  
                                        ??_TMR2_ISR 0070                                          ??_TMR4_ISR 007E  
                                        __pintentry 0004                                _EUSART_AutoBaudQuery 0000  
                              ??_pwm_fan_Initialize 00A0                                             _ADC_ISR 1B2F  
                                  ?_TMR4_Initialize 0070                                             ?_printf 00E2  
                                      _getLedNumber 1094                                             ?_strlen 00A0  
                                   _EUSART_IsTxDone 0000                                       _eusartRxCount 0068  
                 _EUSART_RxCompleteCallbackRegister 0000                               __end_of_getPomphoogte 1A75  
                                         ?___xxtofl 00A0                                     _EUSART_ErrorGet 0000  
                                           _SP1BRGH 019C                                             _SP1BRGL 019B  
                                           _OSCCON1 0919                                             _OSCCON3 091B  
                               i1__Umul8_16@product 0074                              ?_pwm_fan_LoadDutyValue 0070  
                                           _OSCTUNE 091E                                             _PWM5DCH 0618  
                                           _PWM5DCL 0617                                             _PWM6DCH 061B  
                                           _PWM6DCL 061A                                             _PWM5CON 0619  
                                           _PWM6CON 061C                          sendLedstripFrame@intensity 00A3  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                           _SSP1BUF 0211                                        ??_TMR6_Tasks 00F0  
                              __end_of_initLedstrip 1B2F                                           ?_readLine 00E9  
                                      _getDutycycle 1A63                                          _controller 0982  
                             EUSART_Read@tempRxTail 00A0                              ??_sendLedstripEndFrame 00A1  
                              _ADC_InterruptHandler 016D                             _ADC_SetInterruptHandler 1A24  
                                         ?_printOut 00E9                                             ___fladd 0508  
                                           ___fldiv 0C50                                             ___awdiv 10EF  
                                           ___awmod 1F06                                             ___flmul 0092  
                                           ___flsub 1CD4                                             ___fltol 1275  
               adcConversionDoneHandler@new_channel 006F                                      uartHandler@str 0124  
                                           ___lwdiv 1000                                             ___lwmod 1E1A  
                                         ?_vfprintf 00D9                           ??_ADC_GetConversionResult 0072  
                                        _hoogte_bal 0151                                    ?_TMR6_Initialize 0070  
                                __end_of_TMR6_Tasks 1C27                                        ??i1___xxtofl 0074  
                                           __ptext1 0714                                             __ptext2 081E  
                                           __ptext3 0C50                                             __ptext4 1A90  
                                           __ptext5 1AB7                                             __ptext6 1AAD  
                                           __ptext7 1AA3                                             __ptext8 103B  
                                           __ptext9 1CF4                                           _T2CONbits 001F  
                             read_prec_or_width@fmt 00A6                     __end_of_updateLedstripAnimation 1A0C  
                                        ??___xxtofl 00A4                                    ___awmod@dividend 00A2  
                                           _buzzing 0067                                           _T4CONbits 0417  
                          ??_PIN_MANAGER_Initialize 00A0                             _INT_SetInterruptHandler 1A36  
                                         _T6CONbits 041E                                             atoi@neg 00AA  
                         printFloat@fractional_part 0124                                             _sprintf 1DA1  
                                           clrloop0 1A19                                             main@str 012E  
                              end_of_initialization 008E                                             fputc@fp 00A5  
                       __end_ofi1_ADC_SelectChannel 1AD7                                          ??_readLine 00EB  
                                           init_ram 1A1E                                             fputs@fp 00AD  
                                           initloop 1A1F                                  _read_prec_or_width 114B  
                                 _EUSART_Initialize 1E4D                                   __end_of_str2float 08C9  
                                __end_ofi1___xxtofl 16B2                                   __end_of_printLogs 1800  
           __end_of_TMR6_DefaultPeriodMatchCallback 0802                    ?_TMR6_DefaultPeriodMatchCallback 0070  
                 ??_TMR6_DefaultPeriodMatchCallback 00A0                     _TMR6_DefaultPeriodMatchCallback 0801  
                                ?_EUSART_Initialize 0070                                  _position_led_strip 14CC  
                                 __end_of_vfpfcnvrt 0C50                                     _SPI1_BufferRead 0000  
                                 _EUSART_ReceiveISR 1F58                                 ?_read_prec_or_width 00A6  
                                        ??_printOut 00EA                                    vfpfcnvrt@convarg 00D3  
                                        ??_vfprintf 00DF                                  ?_EUSART_ReceiveISR 0070  
                                         _SPI1_Open 12E4                                             strlen@a 00A2  
                                           strlen@s 00A0                                 ??_EUSART_Initialize 00A2  
                               ?_position_led_strip 0070                               i1__Umul8_16@word_mpld 0076  
                                        _printFloat 1446                                 _SPI1_BufferExchange 0000  
                                       ___fladd@grs 00C1                                 ??_EUSART_ReceiveISR 0070  
               __end_of_ADC_DefaultInterruptHandler 1A02                         _ADC_DefaultInterruptHandler 1A01  
                                     ___xxtofl@sign 00A8     TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0  
   TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0            __end_of_TMR6_PeriodMatchCallbackRegister 1A63  
                ??_TMR6_PeriodMatchCallbackRegister 00A2                   ?_TMR6_PeriodMatchCallbackRegister 00A0  
                  _TMR6_PeriodMatchCallbackRegister 1A5A                                           i1___fladd 0DF4  
                              ??_read_prec_or_width 00A9                                           i1___flmul 02CD  
                                       ___fldiv@grs 00B4                                           i1___fltol 1206  
                                       ___fldiv@rem 00AD                                 _EUSART_Deinitialize 0000  
                                     ??_getSetpoint 00A2                          __end_of_initAdcMultiplexer 1B21  
                         ?_PWM_buzzer_LoadDutyValue 00A0                                ??_position_led_strip 0124  
                                       ___flmul@grs 00D8                           __end_of_EUSART_Initialize 1E83  
                     ??_ADC_DefaultInterruptHandler 0070                           ??_ADC_SetInterruptHandler 00A2  
                                       printOut@str 00E9                                     _SPI1_Initialize 1A99  
                                       ?_controller 0070                           __end_of_EUSART_ReceiveISR 1FAB  
           __end_of_TMR2_DefaultPeriodMatchCallback 1A04                   ??_TMR2_DefaultPeriodMatchCallback 0070  
                  ?_TMR2_DefaultPeriodMatchCallback 0070                     _TMR2_DefaultPeriodMatchCallback 1A03  
                      __end_of_INTERRUPT_Initialize 1AE3                                          ?_SPI1_Open 00A6  
                                       vfpfcnvrt@ap 00CC                                         vfpfcnvrt@cp 00D7  
                                       vfpfcnvrt@fp 00C9                                      __end_of___wmul 1CD4  
                               str2float@multiplier 00E9                                        _EUSART_Write 1DC7  
                                    _ADC_Initialize 1C3C                           ??_INT_SetInterruptHandler 00A2  
                                    __end_of_printf 1C13                                      __end_of_strlen 1C68  
                               start_initialization 005A                                         __end_of_abs 1C01  
                                        ?i1___fladd 003A                                         __end_of_pad 2000  
                                        ?i1___flmul 0020                                       ??_EUSART_Read 00A0  
                                        ?i1___fltol 003A            __end_of_TMR4_PeriodMatchCallbackRegister 1A48  
                ??_TMR4_PeriodMatchCallbackRegister 00A2                   ?_TMR4_PeriodMatchCallbackRegister 00A0  
                  _TMR4_PeriodMatchCallbackRegister 1A3F                                         putch@txData 00A2  
                         _EUSART_RxInterruptHandler 01D6                                 __end_of_getSetpoint 1A5A  
                                   str2float@number 00EB                                         vfprintf@fmt 00DB  
                        _EUSART_FramingErrorHandler 0060                                            ??___wmul 00A4  
                            __end_of_ADC_Initialize 1C52                                           __Umul8_16 1D59  
                                      _initLedstrip 1B21                                         __pdataBANK0 006E  
                                       __pdataBANK2 015F                               position_led_strip@led 012A  
                                          ?_ADC_ISR 0070                            _adcConversionDoneHandler 1E83  
                                          ??_printf 00E8                                         ?_printFloat 0120  
                                          ??_strlen 00A2                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 00B2                                           ___fladd@b 00AE  
                                     _SPI1_ByteRead 0000                                           ___fldiv@a 00A0  
                                         ___fldiv@b 00A4                                           ___flmul@a 00CE  
                                         ___flmul@b 00CA                               _PWM_buzzer_Initialize 1AE3  
                                         ___flsub@a 00C2                                           ___flsub@b 00C6  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                                       __pcstackBANK2 0120  
                           __end_of_SPI1_Initialize 1AA3                                   i1_getHoogtesensor 1A12  
                                   i1___xxtofl@sign 0078                                  ?i1_getHoogtesensor 0070  
                                 _sendLedstripFrame 1C99                                 __end_of_EUSART_Read 1D14  
                            EUSART_Write@tempTxHead 00A1                                        _is_on_target 0065  
                                         __pnvBANK2 0169                                           __pnvBANK3 01D4  
                                ?_sendLedstripFrame 00A1                                    ___lwdiv@dividend 00A2  
                            _PIN_MANAGER_Initialize 1EC0                                 ??i1_getHoogtesensor 0072  
                                         _dtoa$2185 00C1                            _TMR4_PeriodMatchCallback 0169  
                              EUSART_Read@readValue 00A1                                   _ADC_SelectChannel 1AFB  
                          i1__Umul8_16@multiplicand 0070                                            ?___fladd 00AE  
                                          ?___fldiv 00A0                                            ?___awdiv 00A0  
                                         __ptext100 1ACB                                           __ptext101 1A0C  
                                          ?___awmod 00A0                                            ?___flmul 00CA  
                                          ?___flsub 00C2                                            ?___fltol 00E4  
                               ??_sendLedstripFrame 00A4                                          ?__Umul8_16 00A0  
                                          ?___lwdiv 00A0                                         ??_SPI1_Open 00A7  
                                          ?___lwmod 00A0                                     ?_ADC_Initialize 0070  
                                      _eusartRxHead 006A                                  ?_ADC_SelectChannel 0070  
                                      _eusartTxHead 006D                                        _eusartRxTail 0069  
                                      _eusartTxTail 006C                        ??_INTERRUPT_InterruptManager 007E  
                                getLedNumber@height 00EE                        EUSART_TransmitISR@tempTxTail 0070  
                           _eusartTxBufferRemaining 006B                                            _BAUD1CON 019F  
                                getLedNumber@result 0120                              _EUSART_TransmitDisable 0000  
                               ??_ADC_SelectChannel 00A0                           __end_ofi1_getHoogtesensor 1A18  
                                       ??i1___fladd 0042                                         ??i1___flmul 0028  
                                       ??i1___fltol 003E                                    ___lwdiv@quotient 00A4  
                                         _lasterror 014F                                            ?_sprintf 00E2  
                                       _getSetpoint 1A51                                       ??_setSetpoint 00AF  
                         __end_of_sendLedstripFrame 1CB4                                    _EUSART_IsRxReady 1A87  
                              _INTERRUPT_Initialize 1AD7                                           _integraal 0147  
                                  _EUSART_IsTxReady 1A75                                      _eusartRxBuffer 01B0  
                                  _CLOCK_Initialize 1A2D                                           _dutycycle 005C  
                          ?_updateLedstripAnimation 0070                                      _eusartTxBuffer 01B8  
                                    ___wmul@product 00A4                                           clear_ram0 1A18  
                                          _PIE1bits 0091                   _EUSART_TxCompleteCallbackRegister 0000  
                                          _PIE2bits 0092                                   _eusartRxLastError 015D  
                                     ??_uartHandler 00F0                           __end_of_ADC_SelectChannel 1B07  
                                          _PIR0bits 0010                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                            _OSCSTAT1 091C  
                                        str2float@i 00EA                                           _str2float 081E  
                                          _SSP1CON1 0215                                            _SSP1CON3 0217  
                                          _TMR2_ISR 1B3E                                            _TMR4_ISR 1B4D  
                                          _SSP1STAT 0214                                           _printLogs 1757  
                          ??_sendLedstripStartFrame 00A1                                           _vfpfcnvrt 0ADC  
                  __end_of_PWM_buzzer_LoadDutyValue 1C80                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A0  
                          ADC_SelectChannel@channel 00A1                              ?_PWM_buzzer_Initialize 0070  
                                     readLine@index 0066                                         _EUSART_Read 1CF4  
                                  ?_SPI1_Initialize 0070                               ?_INTERRUPT_Initialize 0070  
                 _EUSART_RxCompleteInterruptHandler 0159                                   ??_TMR2_Initialize 00A0  
                                      ??_controller 004E                                       ??i1__Umul8_16 0072  
                               __end_of_setSetpoint 1A99                                      str2float@digit 00EF  
                                _initAdcMultiplexer 1B14                                          vfprintf@ap 00DD  
                                        vfprintf@fp 00D9                            ?_ADC_GetConversionResult 0070  
                                        ?_str2float 00E4                          i1ADC_SelectChannel@channel 0071  
                                 ??_getHoogtesensor 00A2                                         ??__Umul8_16 00A2  
                                        ?_printLogs 0070                                 __end_of_uartHandler 07EB  
                        __end_of_EUSART_TransmitISR 081E                                 ?_initAdcMultiplexer 0070  
                                        ?_vfpfcnvrt 00C9                                          sprintf@fmt 00E3  
                                          ___xxtofl 16B2                                  __end_of_controller 0ADC  
                                     _getPomphoogte 1A6C                                     ___lwdiv@divisor 00A0  
                                _EUSART_AutoBaudSet 0000                                     ___lwdiv@counter 00A6  
                                          __ptext10 1A87                                            __ptext11 13CD  
                                          __ptext20 1E1A                                            __ptext12 1DA1  
                                          __ptext21 1000                                            __ptext13 1A7E  
                                          __ptext30 1A75                                            __ptext22 114B  
                                          __ptext14 1757                                            __ptext31 1BEF  
                                          __ptext23 08C9                                            __ptext15 1446  
                                          __ptext40 1B21                                            __ptext32 1F06  
                                          __ptext24 1FAB                                            __ptext16 1C01  
                                          __ptext41 1A5A                                            __ptext33 10EF  
                                          __ptext25 1C52                                            __ptext17 1DEF  
                                          __ptext50 07EB                                            __ptext42 12E4  
                                          __ptext34 1CD4                                            __ptext26 1D7D  
                                          __ptext18 0ADC                                            __ptext51 1C99  
                                          __ptext43 1CB4                                            __ptext35 1A6C  
                                          __ptext27 11A8                                            __ptext19 1354  
                                          __ptext60 0508                                            __ptext52 1C80  
                                          __ptext44 1B14                                            __ptext36 1BCD  
                                          __ptext28 1BDE                                            __ptext61 1A48  
                                          __ptext53 1B07                                            __ptext45 1AFB  
                                          __ptext37 1BBC                                            __ptext29 1DC7  
                                          __ptext70 1EC0                                            __ptext62 1A3F  
                                          __ptext54 1A51                                            __ptext46 1C13  
                                          __ptext38 1BAB                                            __ptext71 1AD7  
                                          __ptext63 1D14                                            __ptext55 1094  
                                          __ptext47 0801                                            __ptext39 1A63  
                                          __ptext72 1A36                                            __ptext64 1AEF  
                                          __ptext56 16B2                                            __ptext48 1A08  
                                          __ptext81 1B4D                                            __ptext73 1E4D  
                                          __ptext65 1B7A                                            __ptext57 1275  
                                          __ptext49 14CC                                            __ptext90 1C27  
                                          __ptext82 0800                                            __ptext74 1B6B  
                                          __ptext66 1B9A                                            __ptext58 0092  
                                          __ptext91 1B3E                                            __ptext83 0982  
                                          __ptext75 1B5C                                            __ptext67 1B89  
                                          __ptext59 1D59                                            __ptext92 1A03  
                                          __ptext84 1A12                                            __ptext76 1A2D  
                                          __ptext68 1A99                                            __ptext93 0802  
                                          __ptext85 160E                                            __ptext77 1C3C  
                                          __ptext69 1AE3                                            __ptext94 1F58  
                                          __ptext86 1206                                            __ptext78 1A24  
                                          __ptext95 1A04                                            __ptext87 02CD  
                                          __ptext79 1C68                                            __ptext96 1A02  
                                          __ptext88 1D36                                            __ptext97 1B2F  
                                          __ptext89 0DF4                                            __ptext98 1A01  
                                          __ptext99 1E83                                        _SSP1CON1bits 0215  
                              ??_initAdcMultiplexer 00A2                               _EUSART_TransmitEnable 0000  
                                          _ledstrip 1830                                            _readLine 103B  
                                 ??_TMR4_Initialize 00A0                          ??_adcConversionDoneHandler 0072  
                                        _RC1STAbits 019D                                            _setpoint 0167  
                                          _printOut 1A7E                                            int$flags 007E  
                               __end_ofi1__Umul8_16 1D59                                            _vfprintf 1DEF  
                __end_of_INTERRUPT_InterruptManager 0058                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1B6B               ??_EUSART_FramingErrorCallbackRegister 00A2  
              ?_EUSART_FramingErrorCallbackRegister 00A0                 _EUSART_FramingErrorCallbackRegister 1B5C  
                                         printf@fmt 00E2                                       ?_getLedNumber 00EE  
                                      ??_printFloat 00EE                      pwm_fan_LoadDutyValue@dutyValue 0070  
                                    _ADC_pomphoogte 0153                                      ?_getPomphoogte 00A0  
                                        _INTCONbits 000B                       __end_of_pwm_fan_LoadDutyValue 1C3C  
                          _PWM_buzzer_LoadDutyValue 1C68                                _INT_InterruptHandler 0062  
                                    __pstringtext10 18BD                                      __pstringtext11 18CB  
                                    __pstringtext20 0000                                      __pstringtext12 18D8  
                                    __pstringtext13 18E5                                      __pstringtext14 18F2  
                                    __pstringtext15 18FD                                      __pstringtext16 1912  
                                    __pstringtext17 191A                                      __pstringtext18 1921  
                                    __pstringtext19 1928                              ??_INTERRUPT_Initialize 00A2  
                          position_led_strip@led_on 0128                            ?_ADC_SetInterruptHandler 00A0  
                          position_led_strip@target 0126                                         _setSetpoint 1A90  
                                          intlevel1 0000                                           sprintf@ap 0120  
                            i1__Umul8_16@multiplier 0078                                    ___lwmod@dividend 00A2  
                         _EUSART_TxInterruptHandler 01D8                             ?_PIN_MANAGER_Initialize 0070  
                                     ?_getDutycycle 00A0                                   ??_TMR6_Initialize 00A0  
                         SPI1_ByteExchange@byteData 00A0          __end_of_EUSART_DefaultFramingErrorCallback 1A03  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 1A02                     __end_of_ADC_GetConversionResult 1A12  
                                __end_of_printFloat 14CC                                    ??_ADC_Initialize 00A2  
                                       _uartHandler 0714                                         ??_str2float 00E8  
                                     _mustPrintLogs 006E                                            printf@ap 00E8  
                                  _SPI1_BufferWrite 0000                                         ??_printLogs 00F0  
                          ?_INT_SetInterruptHandler 00A0                            __end_of_EUSART_IsRxReady 1A90  
                                    ??_getLedNumber 00F0                                         ??_vfpfcnvrt 00CE  
                          __end_of_EUSART_IsTxReady 1A7E                                        str2float@str 00E4  
                          __end_of_CLOCK_Initialize 1A36                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 1908  
                                     __pstringtext4 184C                                       __pstringtext5 1865  
                                     __pstringtext6 187D                                       __pstringtext7 188E  
                                     __pstringtext8 189F                                       __pstringtext9 18AE  
                                        _SPI1_Close 0000                              __Umul8_16@multiplicand 00A0  
                                          sprintf@f 0121                                            sprintf@s 00E2  
                                        _SSP1DATPPS 0E21                                          _SSP1CLKPPS 0E20  
                                   ___lwmod@divisor 00A0                                     ___lwmod@counter 00A4  
                                        _TX1STAbits 019E                                        ?_getSetpoint 00A0  
                            sendLedstripFrame@green 00A1                                       ___fladd@signs 00BE  
                                   controller@error 0058                                          _TMR6_Tasks 1C13  
                                EUSART_Write@txData 00A0                              _sendLedstripStartFrame 07EB  
                    __end_of_PIN_MANAGER_Initialize 1F06                                      ??_getDutycycle 00A2  
                                       _PWMTMRSbits 061F                                        ___fladd@aexp 00BF  
                                      ___fladd@bexp 00C0                               sendLedstripFrame@blue 00A2  
                              __Umul8_16@multiplier 00A8                             SPI1_Open@spiConfigIndex 00A6  
                              sendLedstripFrame@red 00A4                                         i1__Umul8_16 1D36  
                          _TMR2_PeriodMatchCallback 016B                          __end_of_spi1_configuration 1912  
                                 __Umul8_16@product 00A4  
