

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 19 14:23:03 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og9 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	inittext,global,class=CODE,space=0,delta=2
    31                           	psect	clrtext,global,class=CODE,space=0,delta=2
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    47                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    50                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    53                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    54                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    55                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    58                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=3
    59                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    60                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=3
    64                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    65                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    66                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    67                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2,group=2
    74                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    88                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2,group=2
    89                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2,group=2
    90                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2,group=2
    91                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2,group=2
    92                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	intentry,global,class=CODE,space=0,delta=2
   110                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   132                           	dabs	1,0x7E,2
   133     0000                     
   134                           ; Generated 11/01/2024 GMT
   135                           ; 
   136                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC16F18345 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168     0008                     bsr             equ	8
   169     0005                     fsr0h           equ	5
   170     0004                     fsr0l           equ	4
   171     0007                     fsr1h           equ	7
   172     0006                     fsr1l           equ	6
   173     0000                     indf            equ	0
   174     0000                     indf0           equ	0
   175     0001                     indf1           equ	1
   176     000B                     intcon          equ	11
   177     0002                     pc              equ	2
   178     0002                     pcl             equ	2
   179     000A                     pclath          equ	10
   180     0003                     status          equ	3
   181     0009                     wreg            equ	9
   182     0000                     INDF0           equ	0	;# 
   183     0001                     INDF1           equ	1	;# 
   184     0002                     PCL             equ	2	;# 
   185     0003                     STATUS          equ	3	;# 
   186     0004                     FSR0L           equ	4	;# 
   187     0005                     FSR0H           equ	5	;# 
   188     0006                     FSR1L           equ	6	;# 
   189     0007                     FSR1H           equ	7	;# 
   190     0008                     BSR             equ	8	;# 
   191     0009                     WREG            equ	9	;# 
   192     000A                     PCLATH          equ	10	;# 
   193     000B                     INTCON          equ	11	;# 
   194     000C                     PORTA           equ	12	;# 
   195     000D                     PORTB           equ	13	;# 
   196     000E                     PORTC           equ	14	;# 
   197     0010                     PIR0            equ	16	;# 
   198     0011                     PIR1            equ	17	;# 
   199     0012                     PIR2            equ	18	;# 
   200     0013                     PIR3            equ	19	;# 
   201     0014                     PIR4            equ	20	;# 
   202     0015                     TMR0L           equ	21	;# 
   203     0015                     TMR0            equ	21	;# 
   204     0016                     TMR0H           equ	22	;# 
   205     0016                     PR0             equ	22	;# 
   206     0017                     T0CON0          equ	23	;# 
   207     0018                     T0CON1          equ	24	;# 
   208     0019                     TMR1            equ	25	;# 
   209     0019                     TMR1L           equ	25	;# 
   210     001A                     TMR1H           equ	26	;# 
   211     001B                     T1CON           equ	27	;# 
   212     001C                     T1GCON          equ	28	;# 
   213     001D                     TMR2            equ	29	;# 
   214     001E                     PR2             equ	30	;# 
   215     001F                     T2CON           equ	31	;# 
   216     008C                     TRISA           equ	140	;# 
   217     008D                     TRISB           equ	141	;# 
   218     008E                     TRISC           equ	142	;# 
   219     0090                     PIE0            equ	144	;# 
   220     0091                     PIE1            equ	145	;# 
   221     0092                     PIE2            equ	146	;# 
   222     0093                     PIE3            equ	147	;# 
   223     0094                     PIE4            equ	148	;# 
   224     0097                     WDTCON          equ	151	;# 
   225     009B                     ADRES           equ	155	;# 
   226     009B                     ADRESL          equ	155	;# 
   227     009C                     ADRESH          equ	156	;# 
   228     009D                     ADCON0          equ	157	;# 
   229     009E                     ADCON1          equ	158	;# 
   230     009F                     ADACT           equ	159	;# 
   231     010C                     LATA            equ	268	;# 
   232     010D                     LATB            equ	269	;# 
   233     010E                     LATC            equ	270	;# 
   234     0111                     CM1CON0         equ	273	;# 
   235     0112                     CM1CON1         equ	274	;# 
   236     0113                     CM2CON0         equ	275	;# 
   237     0114                     CM2CON1         equ	276	;# 
   238     0115                     CMOUT           equ	277	;# 
   239     0116                     BORCON          equ	278	;# 
   240     0117                     FVRCON          equ	279	;# 
   241     0118                     DACCON0         equ	280	;# 
   242     0119                     DACCON1         equ	281	;# 
   243     018C                     ANSELA          equ	396	;# 
   244     018D                     ANSELB          equ	397	;# 
   245     018E                     ANSELC          equ	398	;# 
   246     0197                     VREGCON         equ	407	;# 
   247     0199                     RC1REG          equ	409	;# 
   248     0199                     RCREG           equ	409	;# 
   249     0199                     RCREG1          equ	409	;# 
   250     019A                     TX1REG          equ	410	;# 
   251     019A                     TXREG1          equ	410	;# 
   252     019A                     TXREG           equ	410	;# 
   253     019B                     SP1BRG          equ	411	;# 
   254     019B                     SPBRG           equ	411	;# 
   255     019B                     SP1BRGL         equ	411	;# 
   256     019B                     SPBRG1          equ	411	;# 
   257     019B                     SPBRGL          equ	411	;# 
   258     019C                     SP1BRGH         equ	412	;# 
   259     019C                     SPBRGH          equ	412	;# 
   260     019C                     SPBRGH1         equ	412	;# 
   261     019D                     RC1STA          equ	413	;# 
   262     019D                     RCSTA1          equ	413	;# 
   263     019D                     RCSTA           equ	413	;# 
   264     019E                     TX1STA          equ	414	;# 
   265     019E                     TXSTA1          equ	414	;# 
   266     019E                     TXSTA           equ	414	;# 
   267     019F                     BAUD1CON        equ	415	;# 
   268     019F                     BAUDCON1        equ	415	;# 
   269     019F                     BAUDCTL1        equ	415	;# 
   270     019F                     BAUDCON         equ	415	;# 
   271     019F                     BAUDCTL         equ	415	;# 
   272     020C                     WPUA            equ	524	;# 
   273     020D                     WPUB            equ	525	;# 
   274     020E                     WPUC            equ	526	;# 
   275     0211                     SSP1BUF         equ	529	;# 
   276     0211                     SSPBUF          equ	529	;# 
   277     0212                     SSP1ADD         equ	530	;# 
   278     0212                     SSPADD          equ	530	;# 
   279     0213                     SSP1MSK         equ	531	;# 
   280     0213                     SSPMSK          equ	531	;# 
   281     0214                     SSP1STAT        equ	532	;# 
   282     0214                     SSPSTAT         equ	532	;# 
   283     0215                     SSP1CON1        equ	533	;# 
   284     0215                     SSPCON          equ	533	;# 
   285     0215                     SSPCON1         equ	533	;# 
   286     0215                     SSP1CON         equ	533	;# 
   287     0216                     SSP1CON2        equ	534	;# 
   288     0216                     SSPCON2         equ	534	;# 
   289     0217                     SSP1CON3        equ	535	;# 
   290     0217                     SSPCON3         equ	535	;# 
   291     0219                     SSP2BUF         equ	537	;# 
   292     021A                     SSP2ADD         equ	538	;# 
   293     021B                     SSP2MSK         equ	539	;# 
   294     021C                     SSP2STAT        equ	540	;# 
   295     021D                     SSP2CON1        equ	541	;# 
   296     021D                     SSP2CON         equ	541	;# 
   297     021E                     SSP2CON2        equ	542	;# 
   298     021F                     SSP2CON3        equ	543	;# 
   299     028C                     ODCONA          equ	652	;# 
   300     028D                     ODCONB          equ	653	;# 
   301     028E                     ODCONC          equ	654	;# 
   302     0291                     CCPR1           equ	657	;# 
   303     0291                     CCPR1L          equ	657	;# 
   304     0292                     CCPR1H          equ	658	;# 
   305     0293                     CCP1CON         equ	659	;# 
   306     0294                     CCP1CAP         equ	660	;# 
   307     0295                     CCPR2           equ	661	;# 
   308     0295                     CCPR2L          equ	661	;# 
   309     0296                     CCPR2H          equ	662	;# 
   310     0297                     CCP2CON         equ	663	;# 
   311     0298                     CCP2CAP         equ	664	;# 
   312     029F                     CCPTMRS         equ	671	;# 
   313     030C                     SLRCONA         equ	780	;# 
   314     030D                     SLRCONB         equ	781	;# 
   315     030E                     SLRCONC         equ	782	;# 
   316     0311                     CCPR3           equ	785	;# 
   317     0311                     CCPR3L          equ	785	;# 
   318     0312                     CCPR3H          equ	786	;# 
   319     0313                     CCP3CON         equ	787	;# 
   320     0314                     CCP3CAP         equ	788	;# 
   321     0315                     CCPR4           equ	789	;# 
   322     0315                     CCPR4L          equ	789	;# 
   323     0316                     CCPR4H          equ	790	;# 
   324     0317                     CCP4CON         equ	791	;# 
   325     0318                     CCP4CAP         equ	792	;# 
   326     038C                     INLVLA          equ	908	;# 
   327     038D                     INLVLB          equ	909	;# 
   328     038E                     INLVLC          equ	910	;# 
   329     0391                     IOCAP           equ	913	;# 
   330     0392                     IOCAN           equ	914	;# 
   331     0393                     IOCAF           equ	915	;# 
   332     0394                     IOCBP           equ	916	;# 
   333     0395                     IOCBN           equ	917	;# 
   334     0396                     IOCBF           equ	918	;# 
   335     0397                     IOCCP           equ	919	;# 
   336     0398                     IOCCN           equ	920	;# 
   337     0399                     IOCCF           equ	921	;# 
   338     039A                     CLKRCON         equ	922	;# 
   339     039C                     MDCON           equ	924	;# 
   340     039D                     MDSRC           equ	925	;# 
   341     039E                     MDCARH          equ	926	;# 
   342     039F                     MDCARL          equ	927	;# 
   343     0411                     TMR3            equ	1041	;# 
   344     0411                     TMR3L           equ	1041	;# 
   345     0412                     TMR3H           equ	1042	;# 
   346     0413                     T3CON           equ	1043	;# 
   347     0414                     T3GCON          equ	1044	;# 
   348     0415                     TMR4            equ	1045	;# 
   349     0416                     PR4             equ	1046	;# 
   350     0417                     T4CON           equ	1047	;# 
   351     0418                     TMR5            equ	1048	;# 
   352     0418                     TMR5L           equ	1048	;# 
   353     0419                     TMR5H           equ	1049	;# 
   354     041A                     T5CON           equ	1050	;# 
   355     041B                     T5GCON          equ	1051	;# 
   356     041C                     TMR6            equ	1052	;# 
   357     041D                     PR6             equ	1053	;# 
   358     041E                     T6CON           equ	1054	;# 
   359     041F                     CCDCON          equ	1055	;# 
   360     0498                     NCO1ACC         equ	1176	;# 
   361     0498                     NCO1ACCL        equ	1176	;# 
   362     0499                     NCO1ACCH        equ	1177	;# 
   363     049A                     NCO1ACCU        equ	1178	;# 
   364     049B                     NCO1INC         equ	1179	;# 
   365     049B                     NCO1INCL        equ	1179	;# 
   366     049C                     NCO1INCH        equ	1180	;# 
   367     049D                     NCO1INCU        equ	1181	;# 
   368     049E                     NCO1CON         equ	1182	;# 
   369     049F                     NCO1CLK         equ	1183	;# 
   370     0617                     PWM5DCL         equ	1559	;# 
   371     0618                     PWM5DCH         equ	1560	;# 
   372     0619                     PWM5CON         equ	1561	;# 
   373     0619                     PWM5CON0        equ	1561	;# 
   374     061A                     PWM6DCL         equ	1562	;# 
   375     061B                     PWM6DCH         equ	1563	;# 
   376     061C                     PWM6CON         equ	1564	;# 
   377     061C                     PWM6CON0        equ	1564	;# 
   378     061F                     PWMTMRS         equ	1567	;# 
   379     0691                     CWG1CLKCON      equ	1681	;# 
   380     0692                     CWG1DAT         equ	1682	;# 
   381     0693                     CWG1DBR         equ	1683	;# 
   382     0694                     CWG1DBF         equ	1684	;# 
   383     0695                     CWG1CON0        equ	1685	;# 
   384     0696                     CWG1CON1        equ	1686	;# 
   385     0697                     CWG1AS0         equ	1687	;# 
   386     0698                     CWG1AS1         equ	1688	;# 
   387     0699                     CWG1STR         equ	1689	;# 
   388     0711                     CWG2CLKCON      equ	1809	;# 
   389     0712                     CWG2DAT         equ	1810	;# 
   390     0713                     CWG2DBR         equ	1811	;# 
   391     0714                     CWG2DBF         equ	1812	;# 
   392     0715                     CWG2CON0        equ	1813	;# 
   393     0716                     CWG2CON1        equ	1814	;# 
   394     0717                     CWG2AS0         equ	1815	;# 
   395     0718                     CWG2AS1         equ	1816	;# 
   396     0719                     CWG2STR         equ	1817	;# 
   397     0891                     NVMADR          equ	2193	;# 
   398     0891                     EEADR           equ	2193	;# 
   399     0891                     PMADR           equ	2193	;# 
   400     0891                     NVMADRL         equ	2193	;# 
   401     0891                     EEADRL          equ	2193	;# 
   402     0891                     PMADRL          equ	2193	;# 
   403     0892                     NVMADRH         equ	2194	;# 
   404     0892                     EEADRH          equ	2194	;# 
   405     0892                     PMADRH          equ	2194	;# 
   406     0893                     NVMDAT          equ	2195	;# 
   407     0893                     EEDAT           equ	2195	;# 
   408     0893                     PMDAT           equ	2195	;# 
   409     0893                     NVMDATL         equ	2195	;# 
   410     0893                     EEDATL          equ	2195	;# 
   411     0893                     PMDATL          equ	2195	;# 
   412     0894                     NVMDATH         equ	2196	;# 
   413     0894                     EEDATH          equ	2196	;# 
   414     0894                     PMDATH          equ	2196	;# 
   415     0895                     NVMCON1         equ	2197	;# 
   416     0895                     EECON1          equ	2197	;# 
   417     0895                     PMCON1          equ	2197	;# 
   418     0896                     NVMCON2         equ	2198	;# 
   419     0896                     EECON2          equ	2198	;# 
   420     0896                     PMCON2          equ	2198	;# 
   421     089B                     PCON0           equ	2203	;# 
   422     0911                     PMD0            equ	2321	;# 
   423     0912                     PMD1            equ	2322	;# 
   424     0913                     PMD2            equ	2323	;# 
   425     0914                     PMD3            equ	2324	;# 
   426     0915                     PMD4            equ	2325	;# 
   427     0916                     PMD5            equ	2326	;# 
   428     0918                     CPUDOZE         equ	2328	;# 
   429     0919                     OSCCON1         equ	2329	;# 
   430     091A                     OSCCON2         equ	2330	;# 
   431     091B                     OSCCON3         equ	2331	;# 
   432     091C                     OSCSTAT1        equ	2332	;# 
   433     091D                     OSCEN           equ	2333	;# 
   434     091E                     OSCTUNE         equ	2334	;# 
   435     091F                     OSCFRQ          equ	2335	;# 
   436     0E0F                     PPSLOCK         equ	3599	;# 
   437     0E10                     INTPPS          equ	3600	;# 
   438     0E11                     T0CKIPPS        equ	3601	;# 
   439     0E12                     T1CKIPPS        equ	3602	;# 
   440     0E13                     T1GPPS          equ	3603	;# 
   441     0E14                     CCP1PPS         equ	3604	;# 
   442     0E15                     CCP2PPS         equ	3605	;# 
   443     0E16                     CCP3PPS         equ	3606	;# 
   444     0E17                     CCP4PPS         equ	3607	;# 
   445     0E18                     CWG1PPS         equ	3608	;# 
   446     0E19                     CWG2PPS         equ	3609	;# 
   447     0E1A                     MDCIN1PPS       equ	3610	;# 
   448     0E1B                     MDCIN2PPS       equ	3611	;# 
   449     0E1C                     MDMINPPS        equ	3612	;# 
   450     0E1D                     SSP2CLKPPS      equ	3613	;# 
   451     0E1E                     SSP2DATPPS      equ	3614	;# 
   452     0E1F                     SSP2SSPPS       equ	3615	;# 
   453     0E20                     SSP1CLKPPS      equ	3616	;# 
   454     0E21                     SSP1DATPPS      equ	3617	;# 
   455     0E22                     SSP1SSPPS       equ	3618	;# 
   456     0E24                     RXPPS           equ	3620	;# 
   457     0E25                     TXPPS           equ	3621	;# 
   458     0E28                     CLCIN0PPS       equ	3624	;# 
   459     0E29                     CLCIN1PPS       equ	3625	;# 
   460     0E2A                     CLCIN2PPS       equ	3626	;# 
   461     0E2B                     CLCIN3PPS       equ	3627	;# 
   462     0E2C                     T3CKIPPS        equ	3628	;# 
   463     0E2D                     T3GPPS          equ	3629	;# 
   464     0E2E                     T5CKIPPS        equ	3630	;# 
   465     0E2F                     T5GPPS          equ	3631	;# 
   466     0E90                     RA0PPS          equ	3728	;# 
   467     0E91                     RA1PPS          equ	3729	;# 
   468     0E92                     RA2PPS          equ	3730	;# 
   469     0E94                     RA4PPS          equ	3732	;# 
   470     0E95                     RA5PPS          equ	3733	;# 
   471     0E9C                     RB4PPS          equ	3740	;# 
   472     0E9D                     RB5PPS          equ	3741	;# 
   473     0E9E                     RB6PPS          equ	3742	;# 
   474     0E9F                     RB7PPS          equ	3743	;# 
   475     0EA0                     RC0PPS          equ	3744	;# 
   476     0EA1                     RC1PPS          equ	3745	;# 
   477     0EA2                     RC2PPS          equ	3746	;# 
   478     0EA3                     RC3PPS          equ	3747	;# 
   479     0EA4                     RC4PPS          equ	3748	;# 
   480     0EA5                     RC5PPS          equ	3749	;# 
   481     0EA6                     RC6PPS          equ	3750	;# 
   482     0EA7                     RC7PPS          equ	3751	;# 
   483     0F0F                     CLCDATA         equ	3855	;# 
   484     0F10                     CLC1CON         equ	3856	;# 
   485     0F11                     CLC1POL         equ	3857	;# 
   486     0F12                     CLC1SEL0        equ	3858	;# 
   487     0F13                     CLC1SEL1        equ	3859	;# 
   488     0F14                     CLC1SEL2        equ	3860	;# 
   489     0F15                     CLC1SEL3        equ	3861	;# 
   490     0F16                     CLC1GLS0        equ	3862	;# 
   491     0F17                     CLC1GLS1        equ	3863	;# 
   492     0F18                     CLC1GLS2        equ	3864	;# 
   493     0F19                     CLC1GLS3        equ	3865	;# 
   494     0F1A                     CLC2CON         equ	3866	;# 
   495     0F1B                     CLC2POL         equ	3867	;# 
   496     0F1C                     CLC2SEL0        equ	3868	;# 
   497     0F1D                     CLC2SEL1        equ	3869	;# 
   498     0F1E                     CLC2SEL2        equ	3870	;# 
   499     0F1F                     CLC2SEL3        equ	3871	;# 
   500     0F20                     CLC2GLS0        equ	3872	;# 
   501     0F21                     CLC2GLS1        equ	3873	;# 
   502     0F22                     CLC2GLS2        equ	3874	;# 
   503     0F23                     CLC2GLS3        equ	3875	;# 
   504     0F24                     CLC3CON         equ	3876	;# 
   505     0F25                     CLC3POL         equ	3877	;# 
   506     0F26                     CLC3SEL0        equ	3878	;# 
   507     0F27                     CLC3SEL1        equ	3879	;# 
   508     0F28                     CLC3SEL2        equ	3880	;# 
   509     0F29                     CLC3SEL3        equ	3881	;# 
   510     0F2A                     CLC3GLS0        equ	3882	;# 
   511     0F2B                     CLC3GLS1        equ	3883	;# 
   512     0F2C                     CLC3GLS2        equ	3884	;# 
   513     0F2D                     CLC3GLS3        equ	3885	;# 
   514     0F2E                     CLC4CON         equ	3886	;# 
   515     0F2F                     CLC4POL         equ	3887	;# 
   516     0F30                     CLC4SEL0        equ	3888	;# 
   517     0F31                     CLC4SEL1        equ	3889	;# 
   518     0F32                     CLC4SEL2        equ	3890	;# 
   519     0F33                     CLC4SEL3        equ	3891	;# 
   520     0F34                     CLC4GLS0        equ	3892	;# 
   521     0F35                     CLC4GLS1        equ	3893	;# 
   522     0F36                     CLC4GLS2        equ	3894	;# 
   523     0F37                     CLC4GLS3        equ	3895	;# 
   524     0FE4                     STATUS_SHAD     equ	4068	;# 
   525     0FE5                     WREG_SHAD       equ	4069	;# 
   526     0FE6                     BSR_SHAD        equ	4070	;# 
   527     0FE7                     PCLATH_SHAD     equ	4071	;# 
   528     0FE8                     FSR0L_SHAD      equ	4072	;# 
   529     0FE9                     FSR0H_SHAD      equ	4073	;# 
   530     0FEA                     FSR1L_SHAD      equ	4074	;# 
   531     0FEB                     FSR1H_SHAD      equ	4075	;# 
   532     0FED                     STKPTR          equ	4077	;# 
   533     0FEE                     TOSL            equ	4078	;# 
   534     0FEF                     TOSH            equ	4079	;# 
   535     0000                     INDF0           equ	0	;# 
   536     0001                     INDF1           equ	1	;# 
   537     0002                     PCL             equ	2	;# 
   538     0003                     STATUS          equ	3	;# 
   539     0004                     FSR0L           equ	4	;# 
   540     0005                     FSR0H           equ	5	;# 
   541     0006                     FSR1L           equ	6	;# 
   542     0007                     FSR1H           equ	7	;# 
   543     0008                     BSR             equ	8	;# 
   544     0009                     WREG            equ	9	;# 
   545     000A                     PCLATH          equ	10	;# 
   546     000B                     INTCON          equ	11	;# 
   547     000C                     PORTA           equ	12	;# 
   548     000D                     PORTB           equ	13	;# 
   549     000E                     PORTC           equ	14	;# 
   550     0010                     PIR0            equ	16	;# 
   551     0011                     PIR1            equ	17	;# 
   552     0012                     PIR2            equ	18	;# 
   553     0013                     PIR3            equ	19	;# 
   554     0014                     PIR4            equ	20	;# 
   555     0015                     TMR0L           equ	21	;# 
   556     0015                     TMR0            equ	21	;# 
   557     0016                     TMR0H           equ	22	;# 
   558     0016                     PR0             equ	22	;# 
   559     0017                     T0CON0          equ	23	;# 
   560     0018                     T0CON1          equ	24	;# 
   561     0019                     TMR1            equ	25	;# 
   562     0019                     TMR1L           equ	25	;# 
   563     001A                     TMR1H           equ	26	;# 
   564     001B                     T1CON           equ	27	;# 
   565     001C                     T1GCON          equ	28	;# 
   566     001D                     TMR2            equ	29	;# 
   567     001E                     PR2             equ	30	;# 
   568     001F                     T2CON           equ	31	;# 
   569     008C                     TRISA           equ	140	;# 
   570     008D                     TRISB           equ	141	;# 
   571     008E                     TRISC           equ	142	;# 
   572     0090                     PIE0            equ	144	;# 
   573     0091                     PIE1            equ	145	;# 
   574     0092                     PIE2            equ	146	;# 
   575     0093                     PIE3            equ	147	;# 
   576     0094                     PIE4            equ	148	;# 
   577     0097                     WDTCON          equ	151	;# 
   578     009B                     ADRES           equ	155	;# 
   579     009B                     ADRESL          equ	155	;# 
   580     009C                     ADRESH          equ	156	;# 
   581     009D                     ADCON0          equ	157	;# 
   582     009E                     ADCON1          equ	158	;# 
   583     009F                     ADACT           equ	159	;# 
   584     010C                     LATA            equ	268	;# 
   585     010D                     LATB            equ	269	;# 
   586     010E                     LATC            equ	270	;# 
   587     0111                     CM1CON0         equ	273	;# 
   588     0112                     CM1CON1         equ	274	;# 
   589     0113                     CM2CON0         equ	275	;# 
   590     0114                     CM2CON1         equ	276	;# 
   591     0115                     CMOUT           equ	277	;# 
   592     0116                     BORCON          equ	278	;# 
   593     0117                     FVRCON          equ	279	;# 
   594     0118                     DACCON0         equ	280	;# 
   595     0119                     DACCON1         equ	281	;# 
   596     018C                     ANSELA          equ	396	;# 
   597     018D                     ANSELB          equ	397	;# 
   598     018E                     ANSELC          equ	398	;# 
   599     0197                     VREGCON         equ	407	;# 
   600     0199                     RC1REG          equ	409	;# 
   601     0199                     RCREG           equ	409	;# 
   602     0199                     RCREG1          equ	409	;# 
   603     019A                     TX1REG          equ	410	;# 
   604     019A                     TXREG1          equ	410	;# 
   605     019A                     TXREG           equ	410	;# 
   606     019B                     SP1BRG          equ	411	;# 
   607     019B                     SPBRG           equ	411	;# 
   608     019B                     SP1BRGL         equ	411	;# 
   609     019B                     SPBRG1          equ	411	;# 
   610     019B                     SPBRGL          equ	411	;# 
   611     019C                     SP1BRGH         equ	412	;# 
   612     019C                     SPBRGH          equ	412	;# 
   613     019C                     SPBRGH1         equ	412	;# 
   614     019D                     RC1STA          equ	413	;# 
   615     019D                     RCSTA1          equ	413	;# 
   616     019D                     RCSTA           equ	413	;# 
   617     019E                     TX1STA          equ	414	;# 
   618     019E                     TXSTA1          equ	414	;# 
   619     019E                     TXSTA           equ	414	;# 
   620     019F                     BAUD1CON        equ	415	;# 
   621     019F                     BAUDCON1        equ	415	;# 
   622     019F                     BAUDCTL1        equ	415	;# 
   623     019F                     BAUDCON         equ	415	;# 
   624     019F                     BAUDCTL         equ	415	;# 
   625     020C                     WPUA            equ	524	;# 
   626     020D                     WPUB            equ	525	;# 
   627     020E                     WPUC            equ	526	;# 
   628     0211                     SSP1BUF         equ	529	;# 
   629     0211                     SSPBUF          equ	529	;# 
   630     0212                     SSP1ADD         equ	530	;# 
   631     0212                     SSPADD          equ	530	;# 
   632     0213                     SSP1MSK         equ	531	;# 
   633     0213                     SSPMSK          equ	531	;# 
   634     0214                     SSP1STAT        equ	532	;# 
   635     0214                     SSPSTAT         equ	532	;# 
   636     0215                     SSP1CON1        equ	533	;# 
   637     0215                     SSPCON          equ	533	;# 
   638     0215                     SSPCON1         equ	533	;# 
   639     0215                     SSP1CON         equ	533	;# 
   640     0216                     SSP1CON2        equ	534	;# 
   641     0216                     SSPCON2         equ	534	;# 
   642     0217                     SSP1CON3        equ	535	;# 
   643     0217                     SSPCON3         equ	535	;# 
   644     0219                     SSP2BUF         equ	537	;# 
   645     021A                     SSP2ADD         equ	538	;# 
   646     021B                     SSP2MSK         equ	539	;# 
   647     021C                     SSP2STAT        equ	540	;# 
   648     021D                     SSP2CON1        equ	541	;# 
   649     021D                     SSP2CON         equ	541	;# 
   650     021E                     SSP2CON2        equ	542	;# 
   651     021F                     SSP2CON3        equ	543	;# 
   652     028C                     ODCONA          equ	652	;# 
   653     028D                     ODCONB          equ	653	;# 
   654     028E                     ODCONC          equ	654	;# 
   655     0291                     CCPR1           equ	657	;# 
   656     0291                     CCPR1L          equ	657	;# 
   657     0292                     CCPR1H          equ	658	;# 
   658     0293                     CCP1CON         equ	659	;# 
   659     0294                     CCP1CAP         equ	660	;# 
   660     0295                     CCPR2           equ	661	;# 
   661     0295                     CCPR2L          equ	661	;# 
   662     0296                     CCPR2H          equ	662	;# 
   663     0297                     CCP2CON         equ	663	;# 
   664     0298                     CCP2CAP         equ	664	;# 
   665     029F                     CCPTMRS         equ	671	;# 
   666     030C                     SLRCONA         equ	780	;# 
   667     030D                     SLRCONB         equ	781	;# 
   668     030E                     SLRCONC         equ	782	;# 
   669     0311                     CCPR3           equ	785	;# 
   670     0311                     CCPR3L          equ	785	;# 
   671     0312                     CCPR3H          equ	786	;# 
   672     0313                     CCP3CON         equ	787	;# 
   673     0314                     CCP3CAP         equ	788	;# 
   674     0315                     CCPR4           equ	789	;# 
   675     0315                     CCPR4L          equ	789	;# 
   676     0316                     CCPR4H          equ	790	;# 
   677     0317                     CCP4CON         equ	791	;# 
   678     0318                     CCP4CAP         equ	792	;# 
   679     038C                     INLVLA          equ	908	;# 
   680     038D                     INLVLB          equ	909	;# 
   681     038E                     INLVLC          equ	910	;# 
   682     0391                     IOCAP           equ	913	;# 
   683     0392                     IOCAN           equ	914	;# 
   684     0393                     IOCAF           equ	915	;# 
   685     0394                     IOCBP           equ	916	;# 
   686     0395                     IOCBN           equ	917	;# 
   687     0396                     IOCBF           equ	918	;# 
   688     0397                     IOCCP           equ	919	;# 
   689     0398                     IOCCN           equ	920	;# 
   690     0399                     IOCCF           equ	921	;# 
   691     039A                     CLKRCON         equ	922	;# 
   692     039C                     MDCON           equ	924	;# 
   693     039D                     MDSRC           equ	925	;# 
   694     039E                     MDCARH          equ	926	;# 
   695     039F                     MDCARL          equ	927	;# 
   696     0411                     TMR3            equ	1041	;# 
   697     0411                     TMR3L           equ	1041	;# 
   698     0412                     TMR3H           equ	1042	;# 
   699     0413                     T3CON           equ	1043	;# 
   700     0414                     T3GCON          equ	1044	;# 
   701     0415                     TMR4            equ	1045	;# 
   702     0416                     PR4             equ	1046	;# 
   703     0417                     T4CON           equ	1047	;# 
   704     0418                     TMR5            equ	1048	;# 
   705     0418                     TMR5L           equ	1048	;# 
   706     0419                     TMR5H           equ	1049	;# 
   707     041A                     T5CON           equ	1050	;# 
   708     041B                     T5GCON          equ	1051	;# 
   709     041C                     TMR6            equ	1052	;# 
   710     041D                     PR6             equ	1053	;# 
   711     041E                     T6CON           equ	1054	;# 
   712     041F                     CCDCON          equ	1055	;# 
   713     0498                     NCO1ACC         equ	1176	;# 
   714     0498                     NCO1ACCL        equ	1176	;# 
   715     0499                     NCO1ACCH        equ	1177	;# 
   716     049A                     NCO1ACCU        equ	1178	;# 
   717     049B                     NCO1INC         equ	1179	;# 
   718     049B                     NCO1INCL        equ	1179	;# 
   719     049C                     NCO1INCH        equ	1180	;# 
   720     049D                     NCO1INCU        equ	1181	;# 
   721     049E                     NCO1CON         equ	1182	;# 
   722     049F                     NCO1CLK         equ	1183	;# 
   723     0617                     PWM5DCL         equ	1559	;# 
   724     0618                     PWM5DCH         equ	1560	;# 
   725     0619                     PWM5CON         equ	1561	;# 
   726     0619                     PWM5CON0        equ	1561	;# 
   727     061A                     PWM6DCL         equ	1562	;# 
   728     061B                     PWM6DCH         equ	1563	;# 
   729     061C                     PWM6CON         equ	1564	;# 
   730     061C                     PWM6CON0        equ	1564	;# 
   731     061F                     PWMTMRS         equ	1567	;# 
   732     0691                     CWG1CLKCON      equ	1681	;# 
   733     0692                     CWG1DAT         equ	1682	;# 
   734     0693                     CWG1DBR         equ	1683	;# 
   735     0694                     CWG1DBF         equ	1684	;# 
   736     0695                     CWG1CON0        equ	1685	;# 
   737     0696                     CWG1CON1        equ	1686	;# 
   738     0697                     CWG1AS0         equ	1687	;# 
   739     0698                     CWG1AS1         equ	1688	;# 
   740     0699                     CWG1STR         equ	1689	;# 
   741     0711                     CWG2CLKCON      equ	1809	;# 
   742     0712                     CWG2DAT         equ	1810	;# 
   743     0713                     CWG2DBR         equ	1811	;# 
   744     0714                     CWG2DBF         equ	1812	;# 
   745     0715                     CWG2CON0        equ	1813	;# 
   746     0716                     CWG2CON1        equ	1814	;# 
   747     0717                     CWG2AS0         equ	1815	;# 
   748     0718                     CWG2AS1         equ	1816	;# 
   749     0719                     CWG2STR         equ	1817	;# 
   750     0891                     NVMADR          equ	2193	;# 
   751     0891                     EEADR           equ	2193	;# 
   752     0891                     PMADR           equ	2193	;# 
   753     0891                     NVMADRL         equ	2193	;# 
   754     0891                     EEADRL          equ	2193	;# 
   755     0891                     PMADRL          equ	2193	;# 
   756     0892                     NVMADRH         equ	2194	;# 
   757     0892                     EEADRH          equ	2194	;# 
   758     0892                     PMADRH          equ	2194	;# 
   759     0893                     NVMDAT          equ	2195	;# 
   760     0893                     EEDAT           equ	2195	;# 
   761     0893                     PMDAT           equ	2195	;# 
   762     0893                     NVMDATL         equ	2195	;# 
   763     0893                     EEDATL          equ	2195	;# 
   764     0893                     PMDATL          equ	2195	;# 
   765     0894                     NVMDATH         equ	2196	;# 
   766     0894                     EEDATH          equ	2196	;# 
   767     0894                     PMDATH          equ	2196	;# 
   768     0895                     NVMCON1         equ	2197	;# 
   769     0895                     EECON1          equ	2197	;# 
   770     0895                     PMCON1          equ	2197	;# 
   771     0896                     NVMCON2         equ	2198	;# 
   772     0896                     EECON2          equ	2198	;# 
   773     0896                     PMCON2          equ	2198	;# 
   774     089B                     PCON0           equ	2203	;# 
   775     0911                     PMD0            equ	2321	;# 
   776     0912                     PMD1            equ	2322	;# 
   777     0913                     PMD2            equ	2323	;# 
   778     0914                     PMD3            equ	2324	;# 
   779     0915                     PMD4            equ	2325	;# 
   780     0916                     PMD5            equ	2326	;# 
   781     0918                     CPUDOZE         equ	2328	;# 
   782     0919                     OSCCON1         equ	2329	;# 
   783     091A                     OSCCON2         equ	2330	;# 
   784     091B                     OSCCON3         equ	2331	;# 
   785     091C                     OSCSTAT1        equ	2332	;# 
   786     091D                     OSCEN           equ	2333	;# 
   787     091E                     OSCTUNE         equ	2334	;# 
   788     091F                     OSCFRQ          equ	2335	;# 
   789     0E0F                     PPSLOCK         equ	3599	;# 
   790     0E10                     INTPPS          equ	3600	;# 
   791     0E11                     T0CKIPPS        equ	3601	;# 
   792     0E12                     T1CKIPPS        equ	3602	;# 
   793     0E13                     T1GPPS          equ	3603	;# 
   794     0E14                     CCP1PPS         equ	3604	;# 
   795     0E15                     CCP2PPS         equ	3605	;# 
   796     0E16                     CCP3PPS         equ	3606	;# 
   797     0E17                     CCP4PPS         equ	3607	;# 
   798     0E18                     CWG1PPS         equ	3608	;# 
   799     0E19                     CWG2PPS         equ	3609	;# 
   800     0E1A                     MDCIN1PPS       equ	3610	;# 
   801     0E1B                     MDCIN2PPS       equ	3611	;# 
   802     0E1C                     MDMINPPS        equ	3612	;# 
   803     0E1D                     SSP2CLKPPS      equ	3613	;# 
   804     0E1E                     SSP2DATPPS      equ	3614	;# 
   805     0E1F                     SSP2SSPPS       equ	3615	;# 
   806     0E20                     SSP1CLKPPS      equ	3616	;# 
   807     0E21                     SSP1DATPPS      equ	3617	;# 
   808     0E22                     SSP1SSPPS       equ	3618	;# 
   809     0E24                     RXPPS           equ	3620	;# 
   810     0E25                     TXPPS           equ	3621	;# 
   811     0E28                     CLCIN0PPS       equ	3624	;# 
   812     0E29                     CLCIN1PPS       equ	3625	;# 
   813     0E2A                     CLCIN2PPS       equ	3626	;# 
   814     0E2B                     CLCIN3PPS       equ	3627	;# 
   815     0E2C                     T3CKIPPS        equ	3628	;# 
   816     0E2D                     T3GPPS          equ	3629	;# 
   817     0E2E                     T5CKIPPS        equ	3630	;# 
   818     0E2F                     T5GPPS          equ	3631	;# 
   819     0E90                     RA0PPS          equ	3728	;# 
   820     0E91                     RA1PPS          equ	3729	;# 
   821     0E92                     RA2PPS          equ	3730	;# 
   822     0E94                     RA4PPS          equ	3732	;# 
   823     0E95                     RA5PPS          equ	3733	;# 
   824     0E9C                     RB4PPS          equ	3740	;# 
   825     0E9D                     RB5PPS          equ	3741	;# 
   826     0E9E                     RB6PPS          equ	3742	;# 
   827     0E9F                     RB7PPS          equ	3743	;# 
   828     0EA0                     RC0PPS          equ	3744	;# 
   829     0EA1                     RC1PPS          equ	3745	;# 
   830     0EA2                     RC2PPS          equ	3746	;# 
   831     0EA3                     RC3PPS          equ	3747	;# 
   832     0EA4                     RC4PPS          equ	3748	;# 
   833     0EA5                     RC5PPS          equ	3749	;# 
   834     0EA6                     RC6PPS          equ	3750	;# 
   835     0EA7                     RC7PPS          equ	3751	;# 
   836     0F0F                     CLCDATA         equ	3855	;# 
   837     0F10                     CLC1CON         equ	3856	;# 
   838     0F11                     CLC1POL         equ	3857	;# 
   839     0F12                     CLC1SEL0        equ	3858	;# 
   840     0F13                     CLC1SEL1        equ	3859	;# 
   841     0F14                     CLC1SEL2        equ	3860	;# 
   842     0F15                     CLC1SEL3        equ	3861	;# 
   843     0F16                     CLC1GLS0        equ	3862	;# 
   844     0F17                     CLC1GLS1        equ	3863	;# 
   845     0F18                     CLC1GLS2        equ	3864	;# 
   846     0F19                     CLC1GLS3        equ	3865	;# 
   847     0F1A                     CLC2CON         equ	3866	;# 
   848     0F1B                     CLC2POL         equ	3867	;# 
   849     0F1C                     CLC2SEL0        equ	3868	;# 
   850     0F1D                     CLC2SEL1        equ	3869	;# 
   851     0F1E                     CLC2SEL2        equ	3870	;# 
   852     0F1F                     CLC2SEL3        equ	3871	;# 
   853     0F20                     CLC2GLS0        equ	3872	;# 
   854     0F21                     CLC2GLS1        equ	3873	;# 
   855     0F22                     CLC2GLS2        equ	3874	;# 
   856     0F23                     CLC2GLS3        equ	3875	;# 
   857     0F24                     CLC3CON         equ	3876	;# 
   858     0F25                     CLC3POL         equ	3877	;# 
   859     0F26                     CLC3SEL0        equ	3878	;# 
   860     0F27                     CLC3SEL1        equ	3879	;# 
   861     0F28                     CLC3SEL2        equ	3880	;# 
   862     0F29                     CLC3SEL3        equ	3881	;# 
   863     0F2A                     CLC3GLS0        equ	3882	;# 
   864     0F2B                     CLC3GLS1        equ	3883	;# 
   865     0F2C                     CLC3GLS2        equ	3884	;# 
   866     0F2D                     CLC3GLS3        equ	3885	;# 
   867     0F2E                     CLC4CON         equ	3886	;# 
   868     0F2F                     CLC4POL         equ	3887	;# 
   869     0F30                     CLC4SEL0        equ	3888	;# 
   870     0F31                     CLC4SEL1        equ	3889	;# 
   871     0F32                     CLC4SEL2        equ	3890	;# 
   872     0F33                     CLC4SEL3        equ	3891	;# 
   873     0F34                     CLC4GLS0        equ	3892	;# 
   874     0F35                     CLC4GLS1        equ	3893	;# 
   875     0F36                     CLC4GLS2        equ	3894	;# 
   876     0F37                     CLC4GLS3        equ	3895	;# 
   877     0FE4                     STATUS_SHAD     equ	4068	;# 
   878     0FE5                     WREG_SHAD       equ	4069	;# 
   879     0FE6                     BSR_SHAD        equ	4070	;# 
   880     0FE7                     PCLATH_SHAD     equ	4071	;# 
   881     0FE8                     FSR0L_SHAD      equ	4072	;# 
   882     0FE9                     FSR0H_SHAD      equ	4073	;# 
   883     0FEA                     FSR1L_SHAD      equ	4074	;# 
   884     0FEB                     FSR1H_SHAD      equ	4075	;# 
   885     0FED                     STKPTR          equ	4077	;# 
   886     0FEE                     TOSL            equ	4078	;# 
   887     0FEF                     TOSH            equ	4079	;# 
   888     0000                     INDF0           equ	0	;# 
   889     0001                     INDF1           equ	1	;# 
   890     0002                     PCL             equ	2	;# 
   891     0003                     STATUS          equ	3	;# 
   892     0004                     FSR0L           equ	4	;# 
   893     0005                     FSR0H           equ	5	;# 
   894     0006                     FSR1L           equ	6	;# 
   895     0007                     FSR1H           equ	7	;# 
   896     0008                     BSR             equ	8	;# 
   897     0009                     WREG            equ	9	;# 
   898     000A                     PCLATH          equ	10	;# 
   899     000B                     INTCON          equ	11	;# 
   900     000C                     PORTA           equ	12	;# 
   901     000D                     PORTB           equ	13	;# 
   902     000E                     PORTC           equ	14	;# 
   903     0010                     PIR0            equ	16	;# 
   904     0011                     PIR1            equ	17	;# 
   905     0012                     PIR2            equ	18	;# 
   906     0013                     PIR3            equ	19	;# 
   907     0014                     PIR4            equ	20	;# 
   908     0015                     TMR0L           equ	21	;# 
   909     0015                     TMR0            equ	21	;# 
   910     0016                     TMR0H           equ	22	;# 
   911     0016                     PR0             equ	22	;# 
   912     0017                     T0CON0          equ	23	;# 
   913     0018                     T0CON1          equ	24	;# 
   914     0019                     TMR1            equ	25	;# 
   915     0019                     TMR1L           equ	25	;# 
   916     001A                     TMR1H           equ	26	;# 
   917     001B                     T1CON           equ	27	;# 
   918     001C                     T1GCON          equ	28	;# 
   919     001D                     TMR2            equ	29	;# 
   920     001E                     PR2             equ	30	;# 
   921     001F                     T2CON           equ	31	;# 
   922     008C                     TRISA           equ	140	;# 
   923     008D                     TRISB           equ	141	;# 
   924     008E                     TRISC           equ	142	;# 
   925     0090                     PIE0            equ	144	;# 
   926     0091                     PIE1            equ	145	;# 
   927     0092                     PIE2            equ	146	;# 
   928     0093                     PIE3            equ	147	;# 
   929     0094                     PIE4            equ	148	;# 
   930     0097                     WDTCON          equ	151	;# 
   931     009B                     ADRES           equ	155	;# 
   932     009B                     ADRESL          equ	155	;# 
   933     009C                     ADRESH          equ	156	;# 
   934     009D                     ADCON0          equ	157	;# 
   935     009E                     ADCON1          equ	158	;# 
   936     009F                     ADACT           equ	159	;# 
   937     010C                     LATA            equ	268	;# 
   938     010D                     LATB            equ	269	;# 
   939     010E                     LATC            equ	270	;# 
   940     0111                     CM1CON0         equ	273	;# 
   941     0112                     CM1CON1         equ	274	;# 
   942     0113                     CM2CON0         equ	275	;# 
   943     0114                     CM2CON1         equ	276	;# 
   944     0115                     CMOUT           equ	277	;# 
   945     0116                     BORCON          equ	278	;# 
   946     0117                     FVRCON          equ	279	;# 
   947     0118                     DACCON0         equ	280	;# 
   948     0119                     DACCON1         equ	281	;# 
   949     018C                     ANSELA          equ	396	;# 
   950     018D                     ANSELB          equ	397	;# 
   951     018E                     ANSELC          equ	398	;# 
   952     0197                     VREGCON         equ	407	;# 
   953     0199                     RC1REG          equ	409	;# 
   954     0199                     RCREG           equ	409	;# 
   955     0199                     RCREG1          equ	409	;# 
   956     019A                     TX1REG          equ	410	;# 
   957     019A                     TXREG1          equ	410	;# 
   958     019A                     TXREG           equ	410	;# 
   959     019B                     SP1BRG          equ	411	;# 
   960     019B                     SPBRG           equ	411	;# 
   961     019B                     SP1BRGL         equ	411	;# 
   962     019B                     SPBRG1          equ	411	;# 
   963     019B                     SPBRGL          equ	411	;# 
   964     019C                     SP1BRGH         equ	412	;# 
   965     019C                     SPBRGH          equ	412	;# 
   966     019C                     SPBRGH1         equ	412	;# 
   967     019D                     RC1STA          equ	413	;# 
   968     019D                     RCSTA1          equ	413	;# 
   969     019D                     RCSTA           equ	413	;# 
   970     019E                     TX1STA          equ	414	;# 
   971     019E                     TXSTA1          equ	414	;# 
   972     019E                     TXSTA           equ	414	;# 
   973     019F                     BAUD1CON        equ	415	;# 
   974     019F                     BAUDCON1        equ	415	;# 
   975     019F                     BAUDCTL1        equ	415	;# 
   976     019F                     BAUDCON         equ	415	;# 
   977     019F                     BAUDCTL         equ	415	;# 
   978     020C                     WPUA            equ	524	;# 
   979     020D                     WPUB            equ	525	;# 
   980     020E                     WPUC            equ	526	;# 
   981     0211                     SSP1BUF         equ	529	;# 
   982     0211                     SSPBUF          equ	529	;# 
   983     0212                     SSP1ADD         equ	530	;# 
   984     0212                     SSPADD          equ	530	;# 
   985     0213                     SSP1MSK         equ	531	;# 
   986     0213                     SSPMSK          equ	531	;# 
   987     0214                     SSP1STAT        equ	532	;# 
   988     0214                     SSPSTAT         equ	532	;# 
   989     0215                     SSP1CON1        equ	533	;# 
   990     0215                     SSPCON          equ	533	;# 
   991     0215                     SSPCON1         equ	533	;# 
   992     0215                     SSP1CON         equ	533	;# 
   993     0216                     SSP1CON2        equ	534	;# 
   994     0216                     SSPCON2         equ	534	;# 
   995     0217                     SSP1CON3        equ	535	;# 
   996     0217                     SSPCON3         equ	535	;# 
   997     0219                     SSP2BUF         equ	537	;# 
   998     021A                     SSP2ADD         equ	538	;# 
   999     021B                     SSP2MSK         equ	539	;# 
  1000     021C                     SSP2STAT        equ	540	;# 
  1001     021D                     SSP2CON1        equ	541	;# 
  1002     021D                     SSP2CON         equ	541	;# 
  1003     021E                     SSP2CON2        equ	542	;# 
  1004     021F                     SSP2CON3        equ	543	;# 
  1005     028C                     ODCONA          equ	652	;# 
  1006     028D                     ODCONB          equ	653	;# 
  1007     028E                     ODCONC          equ	654	;# 
  1008     0291                     CCPR1           equ	657	;# 
  1009     0291                     CCPR1L          equ	657	;# 
  1010     0292                     CCPR1H          equ	658	;# 
  1011     0293                     CCP1CON         equ	659	;# 
  1012     0294                     CCP1CAP         equ	660	;# 
  1013     0295                     CCPR2           equ	661	;# 
  1014     0295                     CCPR2L          equ	661	;# 
  1015     0296                     CCPR2H          equ	662	;# 
  1016     0297                     CCP2CON         equ	663	;# 
  1017     0298                     CCP2CAP         equ	664	;# 
  1018     029F                     CCPTMRS         equ	671	;# 
  1019     030C                     SLRCONA         equ	780	;# 
  1020     030D                     SLRCONB         equ	781	;# 
  1021     030E                     SLRCONC         equ	782	;# 
  1022     0311                     CCPR3           equ	785	;# 
  1023     0311                     CCPR3L          equ	785	;# 
  1024     0312                     CCPR3H          equ	786	;# 
  1025     0313                     CCP3CON         equ	787	;# 
  1026     0314                     CCP3CAP         equ	788	;# 
  1027     0315                     CCPR4           equ	789	;# 
  1028     0315                     CCPR4L          equ	789	;# 
  1029     0316                     CCPR4H          equ	790	;# 
  1030     0317                     CCP4CON         equ	791	;# 
  1031     0318                     CCP4CAP         equ	792	;# 
  1032     038C                     INLVLA          equ	908	;# 
  1033     038D                     INLVLB          equ	909	;# 
  1034     038E                     INLVLC          equ	910	;# 
  1035     0391                     IOCAP           equ	913	;# 
  1036     0392                     IOCAN           equ	914	;# 
  1037     0393                     IOCAF           equ	915	;# 
  1038     0394                     IOCBP           equ	916	;# 
  1039     0395                     IOCBN           equ	917	;# 
  1040     0396                     IOCBF           equ	918	;# 
  1041     0397                     IOCCP           equ	919	;# 
  1042     0398                     IOCCN           equ	920	;# 
  1043     0399                     IOCCF           equ	921	;# 
  1044     039A                     CLKRCON         equ	922	;# 
  1045     039C                     MDCON           equ	924	;# 
  1046     039D                     MDSRC           equ	925	;# 
  1047     039E                     MDCARH          equ	926	;# 
  1048     039F                     MDCARL          equ	927	;# 
  1049     0411                     TMR3            equ	1041	;# 
  1050     0411                     TMR3L           equ	1041	;# 
  1051     0412                     TMR3H           equ	1042	;# 
  1052     0413                     T3CON           equ	1043	;# 
  1053     0414                     T3GCON          equ	1044	;# 
  1054     0415                     TMR4            equ	1045	;# 
  1055     0416                     PR4             equ	1046	;# 
  1056     0417                     T4CON           equ	1047	;# 
  1057     0418                     TMR5            equ	1048	;# 
  1058     0418                     TMR5L           equ	1048	;# 
  1059     0419                     TMR5H           equ	1049	;# 
  1060     041A                     T5CON           equ	1050	;# 
  1061     041B                     T5GCON          equ	1051	;# 
  1062     041C                     TMR6            equ	1052	;# 
  1063     041D                     PR6             equ	1053	;# 
  1064     041E                     T6CON           equ	1054	;# 
  1065     041F                     CCDCON          equ	1055	;# 
  1066     0498                     NCO1ACC         equ	1176	;# 
  1067     0498                     NCO1ACCL        equ	1176	;# 
  1068     0499                     NCO1ACCH        equ	1177	;# 
  1069     049A                     NCO1ACCU        equ	1178	;# 
  1070     049B                     NCO1INC         equ	1179	;# 
  1071     049B                     NCO1INCL        equ	1179	;# 
  1072     049C                     NCO1INCH        equ	1180	;# 
  1073     049D                     NCO1INCU        equ	1181	;# 
  1074     049E                     NCO1CON         equ	1182	;# 
  1075     049F                     NCO1CLK         equ	1183	;# 
  1076     0617                     PWM5DCL         equ	1559	;# 
  1077     0618                     PWM5DCH         equ	1560	;# 
  1078     0619                     PWM5CON         equ	1561	;# 
  1079     0619                     PWM5CON0        equ	1561	;# 
  1080     061A                     PWM6DCL         equ	1562	;# 
  1081     061B                     PWM6DCH         equ	1563	;# 
  1082     061C                     PWM6CON         equ	1564	;# 
  1083     061C                     PWM6CON0        equ	1564	;# 
  1084     061F                     PWMTMRS         equ	1567	;# 
  1085     0691                     CWG1CLKCON      equ	1681	;# 
  1086     0692                     CWG1DAT         equ	1682	;# 
  1087     0693                     CWG1DBR         equ	1683	;# 
  1088     0694                     CWG1DBF         equ	1684	;# 
  1089     0695                     CWG1CON0        equ	1685	;# 
  1090     0696                     CWG1CON1        equ	1686	;# 
  1091     0697                     CWG1AS0         equ	1687	;# 
  1092     0698                     CWG1AS1         equ	1688	;# 
  1093     0699                     CWG1STR         equ	1689	;# 
  1094     0711                     CWG2CLKCON      equ	1809	;# 
  1095     0712                     CWG2DAT         equ	1810	;# 
  1096     0713                     CWG2DBR         equ	1811	;# 
  1097     0714                     CWG2DBF         equ	1812	;# 
  1098     0715                     CWG2CON0        equ	1813	;# 
  1099     0716                     CWG2CON1        equ	1814	;# 
  1100     0717                     CWG2AS0         equ	1815	;# 
  1101     0718                     CWG2AS1         equ	1816	;# 
  1102     0719                     CWG2STR         equ	1817	;# 
  1103     0891                     NVMADR          equ	2193	;# 
  1104     0891                     EEADR           equ	2193	;# 
  1105     0891                     PMADR           equ	2193	;# 
  1106     0891                     NVMADRL         equ	2193	;# 
  1107     0891                     EEADRL          equ	2193	;# 
  1108     0891                     PMADRL          equ	2193	;# 
  1109     0892                     NVMADRH         equ	2194	;# 
  1110     0892                     EEADRH          equ	2194	;# 
  1111     0892                     PMADRH          equ	2194	;# 
  1112     0893                     NVMDAT          equ	2195	;# 
  1113     0893                     EEDAT           equ	2195	;# 
  1114     0893                     PMDAT           equ	2195	;# 
  1115     0893                     NVMDATL         equ	2195	;# 
  1116     0893                     EEDATL          equ	2195	;# 
  1117     0893                     PMDATL          equ	2195	;# 
  1118     0894                     NVMDATH         equ	2196	;# 
  1119     0894                     EEDATH          equ	2196	;# 
  1120     0894                     PMDATH          equ	2196	;# 
  1121     0895                     NVMCON1         equ	2197	;# 
  1122     0895                     EECON1          equ	2197	;# 
  1123     0895                     PMCON1          equ	2197	;# 
  1124     0896                     NVMCON2         equ	2198	;# 
  1125     0896                     EECON2          equ	2198	;# 
  1126     0896                     PMCON2          equ	2198	;# 
  1127     089B                     PCON0           equ	2203	;# 
  1128     0911                     PMD0            equ	2321	;# 
  1129     0912                     PMD1            equ	2322	;# 
  1130     0913                     PMD2            equ	2323	;# 
  1131     0914                     PMD3            equ	2324	;# 
  1132     0915                     PMD4            equ	2325	;# 
  1133     0916                     PMD5            equ	2326	;# 
  1134     0918                     CPUDOZE         equ	2328	;# 
  1135     0919                     OSCCON1         equ	2329	;# 
  1136     091A                     OSCCON2         equ	2330	;# 
  1137     091B                     OSCCON3         equ	2331	;# 
  1138     091C                     OSCSTAT1        equ	2332	;# 
  1139     091D                     OSCEN           equ	2333	;# 
  1140     091E                     OSCTUNE         equ	2334	;# 
  1141     091F                     OSCFRQ          equ	2335	;# 
  1142     0E0F                     PPSLOCK         equ	3599	;# 
  1143     0E10                     INTPPS          equ	3600	;# 
  1144     0E11                     T0CKIPPS        equ	3601	;# 
  1145     0E12                     T1CKIPPS        equ	3602	;# 
  1146     0E13                     T1GPPS          equ	3603	;# 
  1147     0E14                     CCP1PPS         equ	3604	;# 
  1148     0E15                     CCP2PPS         equ	3605	;# 
  1149     0E16                     CCP3PPS         equ	3606	;# 
  1150     0E17                     CCP4PPS         equ	3607	;# 
  1151     0E18                     CWG1PPS         equ	3608	;# 
  1152     0E19                     CWG2PPS         equ	3609	;# 
  1153     0E1A                     MDCIN1PPS       equ	3610	;# 
  1154     0E1B                     MDCIN2PPS       equ	3611	;# 
  1155     0E1C                     MDMINPPS        equ	3612	;# 
  1156     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1157     0E1E                     SSP2DATPPS      equ	3614	;# 
  1158     0E1F                     SSP2SSPPS       equ	3615	;# 
  1159     0E20                     SSP1CLKPPS      equ	3616	;# 
  1160     0E21                     SSP1DATPPS      equ	3617	;# 
  1161     0E22                     SSP1SSPPS       equ	3618	;# 
  1162     0E24                     RXPPS           equ	3620	;# 
  1163     0E25                     TXPPS           equ	3621	;# 
  1164     0E28                     CLCIN0PPS       equ	3624	;# 
  1165     0E29                     CLCIN1PPS       equ	3625	;# 
  1166     0E2A                     CLCIN2PPS       equ	3626	;# 
  1167     0E2B                     CLCIN3PPS       equ	3627	;# 
  1168     0E2C                     T3CKIPPS        equ	3628	;# 
  1169     0E2D                     T3GPPS          equ	3629	;# 
  1170     0E2E                     T5CKIPPS        equ	3630	;# 
  1171     0E2F                     T5GPPS          equ	3631	;# 
  1172     0E90                     RA0PPS          equ	3728	;# 
  1173     0E91                     RA1PPS          equ	3729	;# 
  1174     0E92                     RA2PPS          equ	3730	;# 
  1175     0E94                     RA4PPS          equ	3732	;# 
  1176     0E95                     RA5PPS          equ	3733	;# 
  1177     0E9C                     RB4PPS          equ	3740	;# 
  1178     0E9D                     RB5PPS          equ	3741	;# 
  1179     0E9E                     RB6PPS          equ	3742	;# 
  1180     0E9F                     RB7PPS          equ	3743	;# 
  1181     0EA0                     RC0PPS          equ	3744	;# 
  1182     0EA1                     RC1PPS          equ	3745	;# 
  1183     0EA2                     RC2PPS          equ	3746	;# 
  1184     0EA3                     RC3PPS          equ	3747	;# 
  1185     0EA4                     RC4PPS          equ	3748	;# 
  1186     0EA5                     RC5PPS          equ	3749	;# 
  1187     0EA6                     RC6PPS          equ	3750	;# 
  1188     0EA7                     RC7PPS          equ	3751	;# 
  1189     0F0F                     CLCDATA         equ	3855	;# 
  1190     0F10                     CLC1CON         equ	3856	;# 
  1191     0F11                     CLC1POL         equ	3857	;# 
  1192     0F12                     CLC1SEL0        equ	3858	;# 
  1193     0F13                     CLC1SEL1        equ	3859	;# 
  1194     0F14                     CLC1SEL2        equ	3860	;# 
  1195     0F15                     CLC1SEL3        equ	3861	;# 
  1196     0F16                     CLC1GLS0        equ	3862	;# 
  1197     0F17                     CLC1GLS1        equ	3863	;# 
  1198     0F18                     CLC1GLS2        equ	3864	;# 
  1199     0F19                     CLC1GLS3        equ	3865	;# 
  1200     0F1A                     CLC2CON         equ	3866	;# 
  1201     0F1B                     CLC2POL         equ	3867	;# 
  1202     0F1C                     CLC2SEL0        equ	3868	;# 
  1203     0F1D                     CLC2SEL1        equ	3869	;# 
  1204     0F1E                     CLC2SEL2        equ	3870	;# 
  1205     0F1F                     CLC2SEL3        equ	3871	;# 
  1206     0F20                     CLC2GLS0        equ	3872	;# 
  1207     0F21                     CLC2GLS1        equ	3873	;# 
  1208     0F22                     CLC2GLS2        equ	3874	;# 
  1209     0F23                     CLC2GLS3        equ	3875	;# 
  1210     0F24                     CLC3CON         equ	3876	;# 
  1211     0F25                     CLC3POL         equ	3877	;# 
  1212     0F26                     CLC3SEL0        equ	3878	;# 
  1213     0F27                     CLC3SEL1        equ	3879	;# 
  1214     0F28                     CLC3SEL2        equ	3880	;# 
  1215     0F29                     CLC3SEL3        equ	3881	;# 
  1216     0F2A                     CLC3GLS0        equ	3882	;# 
  1217     0F2B                     CLC3GLS1        equ	3883	;# 
  1218     0F2C                     CLC3GLS2        equ	3884	;# 
  1219     0F2D                     CLC3GLS3        equ	3885	;# 
  1220     0F2E                     CLC4CON         equ	3886	;# 
  1221     0F2F                     CLC4POL         equ	3887	;# 
  1222     0F30                     CLC4SEL0        equ	3888	;# 
  1223     0F31                     CLC4SEL1        equ	3889	;# 
  1224     0F32                     CLC4SEL2        equ	3890	;# 
  1225     0F33                     CLC4SEL3        equ	3891	;# 
  1226     0F34                     CLC4GLS0        equ	3892	;# 
  1227     0F35                     CLC4GLS1        equ	3893	;# 
  1228     0F36                     CLC4GLS2        equ	3894	;# 
  1229     0F37                     CLC4GLS3        equ	3895	;# 
  1230     0FE4                     STATUS_SHAD     equ	4068	;# 
  1231     0FE5                     WREG_SHAD       equ	4069	;# 
  1232     0FE6                     BSR_SHAD        equ	4070	;# 
  1233     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1234     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1235     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1236     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1237     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1238     0FED                     STKPTR          equ	4077	;# 
  1239     0FEE                     TOSL            equ	4078	;# 
  1240     0FEF                     TOSH            equ	4079	;# 
  1241     0000                     INDF0           equ	0	;# 
  1242     0001                     INDF1           equ	1	;# 
  1243     0002                     PCL             equ	2	;# 
  1244     0003                     STATUS          equ	3	;# 
  1245     0004                     FSR0L           equ	4	;# 
  1246     0005                     FSR0H           equ	5	;# 
  1247     0006                     FSR1L           equ	6	;# 
  1248     0007                     FSR1H           equ	7	;# 
  1249     0008                     BSR             equ	8	;# 
  1250     0009                     WREG            equ	9	;# 
  1251     000A                     PCLATH          equ	10	;# 
  1252     000B                     INTCON          equ	11	;# 
  1253     000C                     PORTA           equ	12	;# 
  1254     000D                     PORTB           equ	13	;# 
  1255     000E                     PORTC           equ	14	;# 
  1256     0010                     PIR0            equ	16	;# 
  1257     0011                     PIR1            equ	17	;# 
  1258     0012                     PIR2            equ	18	;# 
  1259     0013                     PIR3            equ	19	;# 
  1260     0014                     PIR4            equ	20	;# 
  1261     0015                     TMR0L           equ	21	;# 
  1262     0015                     TMR0            equ	21	;# 
  1263     0016                     TMR0H           equ	22	;# 
  1264     0016                     PR0             equ	22	;# 
  1265     0017                     T0CON0          equ	23	;# 
  1266     0018                     T0CON1          equ	24	;# 
  1267     0019                     TMR1            equ	25	;# 
  1268     0019                     TMR1L           equ	25	;# 
  1269     001A                     TMR1H           equ	26	;# 
  1270     001B                     T1CON           equ	27	;# 
  1271     001C                     T1GCON          equ	28	;# 
  1272     001D                     TMR2            equ	29	;# 
  1273     001E                     PR2             equ	30	;# 
  1274     001F                     T2CON           equ	31	;# 
  1275     008C                     TRISA           equ	140	;# 
  1276     008D                     TRISB           equ	141	;# 
  1277     008E                     TRISC           equ	142	;# 
  1278     0090                     PIE0            equ	144	;# 
  1279     0091                     PIE1            equ	145	;# 
  1280     0092                     PIE2            equ	146	;# 
  1281     0093                     PIE3            equ	147	;# 
  1282     0094                     PIE4            equ	148	;# 
  1283     0097                     WDTCON          equ	151	;# 
  1284     009B                     ADRES           equ	155	;# 
  1285     009B                     ADRESL          equ	155	;# 
  1286     009C                     ADRESH          equ	156	;# 
  1287     009D                     ADCON0          equ	157	;# 
  1288     009E                     ADCON1          equ	158	;# 
  1289     009F                     ADACT           equ	159	;# 
  1290     010C                     LATA            equ	268	;# 
  1291     010D                     LATB            equ	269	;# 
  1292     010E                     LATC            equ	270	;# 
  1293     0111                     CM1CON0         equ	273	;# 
  1294     0112                     CM1CON1         equ	274	;# 
  1295     0113                     CM2CON0         equ	275	;# 
  1296     0114                     CM2CON1         equ	276	;# 
  1297     0115                     CMOUT           equ	277	;# 
  1298     0116                     BORCON          equ	278	;# 
  1299     0117                     FVRCON          equ	279	;# 
  1300     0118                     DACCON0         equ	280	;# 
  1301     0119                     DACCON1         equ	281	;# 
  1302     018C                     ANSELA          equ	396	;# 
  1303     018D                     ANSELB          equ	397	;# 
  1304     018E                     ANSELC          equ	398	;# 
  1305     0197                     VREGCON         equ	407	;# 
  1306     0199                     RC1REG          equ	409	;# 
  1307     0199                     RCREG           equ	409	;# 
  1308     0199                     RCREG1          equ	409	;# 
  1309     019A                     TX1REG          equ	410	;# 
  1310     019A                     TXREG1          equ	410	;# 
  1311     019A                     TXREG           equ	410	;# 
  1312     019B                     SP1BRG          equ	411	;# 
  1313     019B                     SPBRG           equ	411	;# 
  1314     019B                     SP1BRGL         equ	411	;# 
  1315     019B                     SPBRG1          equ	411	;# 
  1316     019B                     SPBRGL          equ	411	;# 
  1317     019C                     SP1BRGH         equ	412	;# 
  1318     019C                     SPBRGH          equ	412	;# 
  1319     019C                     SPBRGH1         equ	412	;# 
  1320     019D                     RC1STA          equ	413	;# 
  1321     019D                     RCSTA1          equ	413	;# 
  1322     019D                     RCSTA           equ	413	;# 
  1323     019E                     TX1STA          equ	414	;# 
  1324     019E                     TXSTA1          equ	414	;# 
  1325     019E                     TXSTA           equ	414	;# 
  1326     019F                     BAUD1CON        equ	415	;# 
  1327     019F                     BAUDCON1        equ	415	;# 
  1328     019F                     BAUDCTL1        equ	415	;# 
  1329     019F                     BAUDCON         equ	415	;# 
  1330     019F                     BAUDCTL         equ	415	;# 
  1331     020C                     WPUA            equ	524	;# 
  1332     020D                     WPUB            equ	525	;# 
  1333     020E                     WPUC            equ	526	;# 
  1334     0211                     SSP1BUF         equ	529	;# 
  1335     0211                     SSPBUF          equ	529	;# 
  1336     0212                     SSP1ADD         equ	530	;# 
  1337     0212                     SSPADD          equ	530	;# 
  1338     0213                     SSP1MSK         equ	531	;# 
  1339     0213                     SSPMSK          equ	531	;# 
  1340     0214                     SSP1STAT        equ	532	;# 
  1341     0214                     SSPSTAT         equ	532	;# 
  1342     0215                     SSP1CON1        equ	533	;# 
  1343     0215                     SSPCON          equ	533	;# 
  1344     0215                     SSPCON1         equ	533	;# 
  1345     0215                     SSP1CON         equ	533	;# 
  1346     0216                     SSP1CON2        equ	534	;# 
  1347     0216                     SSPCON2         equ	534	;# 
  1348     0217                     SSP1CON3        equ	535	;# 
  1349     0217                     SSPCON3         equ	535	;# 
  1350     0219                     SSP2BUF         equ	537	;# 
  1351     021A                     SSP2ADD         equ	538	;# 
  1352     021B                     SSP2MSK         equ	539	;# 
  1353     021C                     SSP2STAT        equ	540	;# 
  1354     021D                     SSP2CON1        equ	541	;# 
  1355     021D                     SSP2CON         equ	541	;# 
  1356     021E                     SSP2CON2        equ	542	;# 
  1357     021F                     SSP2CON3        equ	543	;# 
  1358     028C                     ODCONA          equ	652	;# 
  1359     028D                     ODCONB          equ	653	;# 
  1360     028E                     ODCONC          equ	654	;# 
  1361     0291                     CCPR1           equ	657	;# 
  1362     0291                     CCPR1L          equ	657	;# 
  1363     0292                     CCPR1H          equ	658	;# 
  1364     0293                     CCP1CON         equ	659	;# 
  1365     0294                     CCP1CAP         equ	660	;# 
  1366     0295                     CCPR2           equ	661	;# 
  1367     0295                     CCPR2L          equ	661	;# 
  1368     0296                     CCPR2H          equ	662	;# 
  1369     0297                     CCP2CON         equ	663	;# 
  1370     0298                     CCP2CAP         equ	664	;# 
  1371     029F                     CCPTMRS         equ	671	;# 
  1372     030C                     SLRCONA         equ	780	;# 
  1373     030D                     SLRCONB         equ	781	;# 
  1374     030E                     SLRCONC         equ	782	;# 
  1375     0311                     CCPR3           equ	785	;# 
  1376     0311                     CCPR3L          equ	785	;# 
  1377     0312                     CCPR3H          equ	786	;# 
  1378     0313                     CCP3CON         equ	787	;# 
  1379     0314                     CCP3CAP         equ	788	;# 
  1380     0315                     CCPR4           equ	789	;# 
  1381     0315                     CCPR4L          equ	789	;# 
  1382     0316                     CCPR4H          equ	790	;# 
  1383     0317                     CCP4CON         equ	791	;# 
  1384     0318                     CCP4CAP         equ	792	;# 
  1385     038C                     INLVLA          equ	908	;# 
  1386     038D                     INLVLB          equ	909	;# 
  1387     038E                     INLVLC          equ	910	;# 
  1388     0391                     IOCAP           equ	913	;# 
  1389     0392                     IOCAN           equ	914	;# 
  1390     0393                     IOCAF           equ	915	;# 
  1391     0394                     IOCBP           equ	916	;# 
  1392     0395                     IOCBN           equ	917	;# 
  1393     0396                     IOCBF           equ	918	;# 
  1394     0397                     IOCCP           equ	919	;# 
  1395     0398                     IOCCN           equ	920	;# 
  1396     0399                     IOCCF           equ	921	;# 
  1397     039A                     CLKRCON         equ	922	;# 
  1398     039C                     MDCON           equ	924	;# 
  1399     039D                     MDSRC           equ	925	;# 
  1400     039E                     MDCARH          equ	926	;# 
  1401     039F                     MDCARL          equ	927	;# 
  1402     0411                     TMR3            equ	1041	;# 
  1403     0411                     TMR3L           equ	1041	;# 
  1404     0412                     TMR3H           equ	1042	;# 
  1405     0413                     T3CON           equ	1043	;# 
  1406     0414                     T3GCON          equ	1044	;# 
  1407     0415                     TMR4            equ	1045	;# 
  1408     0416                     PR4             equ	1046	;# 
  1409     0417                     T4CON           equ	1047	;# 
  1410     0418                     TMR5            equ	1048	;# 
  1411     0418                     TMR5L           equ	1048	;# 
  1412     0419                     TMR5H           equ	1049	;# 
  1413     041A                     T5CON           equ	1050	;# 
  1414     041B                     T5GCON          equ	1051	;# 
  1415     041C                     TMR6            equ	1052	;# 
  1416     041D                     PR6             equ	1053	;# 
  1417     041E                     T6CON           equ	1054	;# 
  1418     041F                     CCDCON          equ	1055	;# 
  1419     0498                     NCO1ACC         equ	1176	;# 
  1420     0498                     NCO1ACCL        equ	1176	;# 
  1421     0499                     NCO1ACCH        equ	1177	;# 
  1422     049A                     NCO1ACCU        equ	1178	;# 
  1423     049B                     NCO1INC         equ	1179	;# 
  1424     049B                     NCO1INCL        equ	1179	;# 
  1425     049C                     NCO1INCH        equ	1180	;# 
  1426     049D                     NCO1INCU        equ	1181	;# 
  1427     049E                     NCO1CON         equ	1182	;# 
  1428     049F                     NCO1CLK         equ	1183	;# 
  1429     0617                     PWM5DCL         equ	1559	;# 
  1430     0618                     PWM5DCH         equ	1560	;# 
  1431     0619                     PWM5CON         equ	1561	;# 
  1432     0619                     PWM5CON0        equ	1561	;# 
  1433     061A                     PWM6DCL         equ	1562	;# 
  1434     061B                     PWM6DCH         equ	1563	;# 
  1435     061C                     PWM6CON         equ	1564	;# 
  1436     061C                     PWM6CON0        equ	1564	;# 
  1437     061F                     PWMTMRS         equ	1567	;# 
  1438     0691                     CWG1CLKCON      equ	1681	;# 
  1439     0692                     CWG1DAT         equ	1682	;# 
  1440     0693                     CWG1DBR         equ	1683	;# 
  1441     0694                     CWG1DBF         equ	1684	;# 
  1442     0695                     CWG1CON0        equ	1685	;# 
  1443     0696                     CWG1CON1        equ	1686	;# 
  1444     0697                     CWG1AS0         equ	1687	;# 
  1445     0698                     CWG1AS1         equ	1688	;# 
  1446     0699                     CWG1STR         equ	1689	;# 
  1447     0711                     CWG2CLKCON      equ	1809	;# 
  1448     0712                     CWG2DAT         equ	1810	;# 
  1449     0713                     CWG2DBR         equ	1811	;# 
  1450     0714                     CWG2DBF         equ	1812	;# 
  1451     0715                     CWG2CON0        equ	1813	;# 
  1452     0716                     CWG2CON1        equ	1814	;# 
  1453     0717                     CWG2AS0         equ	1815	;# 
  1454     0718                     CWG2AS1         equ	1816	;# 
  1455     0719                     CWG2STR         equ	1817	;# 
  1456     0891                     NVMADR          equ	2193	;# 
  1457     0891                     EEADR           equ	2193	;# 
  1458     0891                     PMADR           equ	2193	;# 
  1459     0891                     NVMADRL         equ	2193	;# 
  1460     0891                     EEADRL          equ	2193	;# 
  1461     0891                     PMADRL          equ	2193	;# 
  1462     0892                     NVMADRH         equ	2194	;# 
  1463     0892                     EEADRH          equ	2194	;# 
  1464     0892                     PMADRH          equ	2194	;# 
  1465     0893                     NVMDAT          equ	2195	;# 
  1466     0893                     EEDAT           equ	2195	;# 
  1467     0893                     PMDAT           equ	2195	;# 
  1468     0893                     NVMDATL         equ	2195	;# 
  1469     0893                     EEDATL          equ	2195	;# 
  1470     0893                     PMDATL          equ	2195	;# 
  1471     0894                     NVMDATH         equ	2196	;# 
  1472     0894                     EEDATH          equ	2196	;# 
  1473     0894                     PMDATH          equ	2196	;# 
  1474     0895                     NVMCON1         equ	2197	;# 
  1475     0895                     EECON1          equ	2197	;# 
  1476     0895                     PMCON1          equ	2197	;# 
  1477     0896                     NVMCON2         equ	2198	;# 
  1478     0896                     EECON2          equ	2198	;# 
  1479     0896                     PMCON2          equ	2198	;# 
  1480     089B                     PCON0           equ	2203	;# 
  1481     0911                     PMD0            equ	2321	;# 
  1482     0912                     PMD1            equ	2322	;# 
  1483     0913                     PMD2            equ	2323	;# 
  1484     0914                     PMD3            equ	2324	;# 
  1485     0915                     PMD4            equ	2325	;# 
  1486     0916                     PMD5            equ	2326	;# 
  1487     0918                     CPUDOZE         equ	2328	;# 
  1488     0919                     OSCCON1         equ	2329	;# 
  1489     091A                     OSCCON2         equ	2330	;# 
  1490     091B                     OSCCON3         equ	2331	;# 
  1491     091C                     OSCSTAT1        equ	2332	;# 
  1492     091D                     OSCEN           equ	2333	;# 
  1493     091E                     OSCTUNE         equ	2334	;# 
  1494     091F                     OSCFRQ          equ	2335	;# 
  1495     0E0F                     PPSLOCK         equ	3599	;# 
  1496     0E10                     INTPPS          equ	3600	;# 
  1497     0E11                     T0CKIPPS        equ	3601	;# 
  1498     0E12                     T1CKIPPS        equ	3602	;# 
  1499     0E13                     T1GPPS          equ	3603	;# 
  1500     0E14                     CCP1PPS         equ	3604	;# 
  1501     0E15                     CCP2PPS         equ	3605	;# 
  1502     0E16                     CCP3PPS         equ	3606	;# 
  1503     0E17                     CCP4PPS         equ	3607	;# 
  1504     0E18                     CWG1PPS         equ	3608	;# 
  1505     0E19                     CWG2PPS         equ	3609	;# 
  1506     0E1A                     MDCIN1PPS       equ	3610	;# 
  1507     0E1B                     MDCIN2PPS       equ	3611	;# 
  1508     0E1C                     MDMINPPS        equ	3612	;# 
  1509     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1510     0E1E                     SSP2DATPPS      equ	3614	;# 
  1511     0E1F                     SSP2SSPPS       equ	3615	;# 
  1512     0E20                     SSP1CLKPPS      equ	3616	;# 
  1513     0E21                     SSP1DATPPS      equ	3617	;# 
  1514     0E22                     SSP1SSPPS       equ	3618	;# 
  1515     0E24                     RXPPS           equ	3620	;# 
  1516     0E25                     TXPPS           equ	3621	;# 
  1517     0E28                     CLCIN0PPS       equ	3624	;# 
  1518     0E29                     CLCIN1PPS       equ	3625	;# 
  1519     0E2A                     CLCIN2PPS       equ	3626	;# 
  1520     0E2B                     CLCIN3PPS       equ	3627	;# 
  1521     0E2C                     T3CKIPPS        equ	3628	;# 
  1522     0E2D                     T3GPPS          equ	3629	;# 
  1523     0E2E                     T5CKIPPS        equ	3630	;# 
  1524     0E2F                     T5GPPS          equ	3631	;# 
  1525     0E90                     RA0PPS          equ	3728	;# 
  1526     0E91                     RA1PPS          equ	3729	;# 
  1527     0E92                     RA2PPS          equ	3730	;# 
  1528     0E94                     RA4PPS          equ	3732	;# 
  1529     0E95                     RA5PPS          equ	3733	;# 
  1530     0E9C                     RB4PPS          equ	3740	;# 
  1531     0E9D                     RB5PPS          equ	3741	;# 
  1532     0E9E                     RB6PPS          equ	3742	;# 
  1533     0E9F                     RB7PPS          equ	3743	;# 
  1534     0EA0                     RC0PPS          equ	3744	;# 
  1535     0EA1                     RC1PPS          equ	3745	;# 
  1536     0EA2                     RC2PPS          equ	3746	;# 
  1537     0EA3                     RC3PPS          equ	3747	;# 
  1538     0EA4                     RC4PPS          equ	3748	;# 
  1539     0EA5                     RC5PPS          equ	3749	;# 
  1540     0EA6                     RC6PPS          equ	3750	;# 
  1541     0EA7                     RC7PPS          equ	3751	;# 
  1542     0F0F                     CLCDATA         equ	3855	;# 
  1543     0F10                     CLC1CON         equ	3856	;# 
  1544     0F11                     CLC1POL         equ	3857	;# 
  1545     0F12                     CLC1SEL0        equ	3858	;# 
  1546     0F13                     CLC1SEL1        equ	3859	;# 
  1547     0F14                     CLC1SEL2        equ	3860	;# 
  1548     0F15                     CLC1SEL3        equ	3861	;# 
  1549     0F16                     CLC1GLS0        equ	3862	;# 
  1550     0F17                     CLC1GLS1        equ	3863	;# 
  1551     0F18                     CLC1GLS2        equ	3864	;# 
  1552     0F19                     CLC1GLS3        equ	3865	;# 
  1553     0F1A                     CLC2CON         equ	3866	;# 
  1554     0F1B                     CLC2POL         equ	3867	;# 
  1555     0F1C                     CLC2SEL0        equ	3868	;# 
  1556     0F1D                     CLC2SEL1        equ	3869	;# 
  1557     0F1E                     CLC2SEL2        equ	3870	;# 
  1558     0F1F                     CLC2SEL3        equ	3871	;# 
  1559     0F20                     CLC2GLS0        equ	3872	;# 
  1560     0F21                     CLC2GLS1        equ	3873	;# 
  1561     0F22                     CLC2GLS2        equ	3874	;# 
  1562     0F23                     CLC2GLS3        equ	3875	;# 
  1563     0F24                     CLC3CON         equ	3876	;# 
  1564     0F25                     CLC3POL         equ	3877	;# 
  1565     0F26                     CLC3SEL0        equ	3878	;# 
  1566     0F27                     CLC3SEL1        equ	3879	;# 
  1567     0F28                     CLC3SEL2        equ	3880	;# 
  1568     0F29                     CLC3SEL3        equ	3881	;# 
  1569     0F2A                     CLC3GLS0        equ	3882	;# 
  1570     0F2B                     CLC3GLS1        equ	3883	;# 
  1571     0F2C                     CLC3GLS2        equ	3884	;# 
  1572     0F2D                     CLC3GLS3        equ	3885	;# 
  1573     0F2E                     CLC4CON         equ	3886	;# 
  1574     0F2F                     CLC4POL         equ	3887	;# 
  1575     0F30                     CLC4SEL0        equ	3888	;# 
  1576     0F31                     CLC4SEL1        equ	3889	;# 
  1577     0F32                     CLC4SEL2        equ	3890	;# 
  1578     0F33                     CLC4SEL3        equ	3891	;# 
  1579     0F34                     CLC4GLS0        equ	3892	;# 
  1580     0F35                     CLC4GLS1        equ	3893	;# 
  1581     0F36                     CLC4GLS2        equ	3894	;# 
  1582     0F37                     CLC4GLS3        equ	3895	;# 
  1583     0FE4                     STATUS_SHAD     equ	4068	;# 
  1584     0FE5                     WREG_SHAD       equ	4069	;# 
  1585     0FE6                     BSR_SHAD        equ	4070	;# 
  1586     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1587     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1588     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1589     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1590     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1591     0FED                     STKPTR          equ	4077	;# 
  1592     0FEE                     TOSL            equ	4078	;# 
  1593     0FEF                     TOSH            equ	4079	;# 
  1594     0000                     INDF0           equ	0	;# 
  1595     0001                     INDF1           equ	1	;# 
  1596     0002                     PCL             equ	2	;# 
  1597     0003                     STATUS          equ	3	;# 
  1598     0004                     FSR0L           equ	4	;# 
  1599     0005                     FSR0H           equ	5	;# 
  1600     0006                     FSR1L           equ	6	;# 
  1601     0007                     FSR1H           equ	7	;# 
  1602     0008                     BSR             equ	8	;# 
  1603     0009                     WREG            equ	9	;# 
  1604     000A                     PCLATH          equ	10	;# 
  1605     000B                     INTCON          equ	11	;# 
  1606     000C                     PORTA           equ	12	;# 
  1607     000D                     PORTB           equ	13	;# 
  1608     000E                     PORTC           equ	14	;# 
  1609     0010                     PIR0            equ	16	;# 
  1610     0011                     PIR1            equ	17	;# 
  1611     0012                     PIR2            equ	18	;# 
  1612     0013                     PIR3            equ	19	;# 
  1613     0014                     PIR4            equ	20	;# 
  1614     0015                     TMR0L           equ	21	;# 
  1615     0015                     TMR0            equ	21	;# 
  1616     0016                     TMR0H           equ	22	;# 
  1617     0016                     PR0             equ	22	;# 
  1618     0017                     T0CON0          equ	23	;# 
  1619     0018                     T0CON1          equ	24	;# 
  1620     0019                     TMR1            equ	25	;# 
  1621     0019                     TMR1L           equ	25	;# 
  1622     001A                     TMR1H           equ	26	;# 
  1623     001B                     T1CON           equ	27	;# 
  1624     001C                     T1GCON          equ	28	;# 
  1625     001D                     TMR2            equ	29	;# 
  1626     001E                     PR2             equ	30	;# 
  1627     001F                     T2CON           equ	31	;# 
  1628     008C                     TRISA           equ	140	;# 
  1629     008D                     TRISB           equ	141	;# 
  1630     008E                     TRISC           equ	142	;# 
  1631     0090                     PIE0            equ	144	;# 
  1632     0091                     PIE1            equ	145	;# 
  1633     0092                     PIE2            equ	146	;# 
  1634     0093                     PIE3            equ	147	;# 
  1635     0094                     PIE4            equ	148	;# 
  1636     0097                     WDTCON          equ	151	;# 
  1637     009B                     ADRES           equ	155	;# 
  1638     009B                     ADRESL          equ	155	;# 
  1639     009C                     ADRESH          equ	156	;# 
  1640     009D                     ADCON0          equ	157	;# 
  1641     009E                     ADCON1          equ	158	;# 
  1642     009F                     ADACT           equ	159	;# 
  1643     010C                     LATA            equ	268	;# 
  1644     010D                     LATB            equ	269	;# 
  1645     010E                     LATC            equ	270	;# 
  1646     0111                     CM1CON0         equ	273	;# 
  1647     0112                     CM1CON1         equ	274	;# 
  1648     0113                     CM2CON0         equ	275	;# 
  1649     0114                     CM2CON1         equ	276	;# 
  1650     0115                     CMOUT           equ	277	;# 
  1651     0116                     BORCON          equ	278	;# 
  1652     0117                     FVRCON          equ	279	;# 
  1653     0118                     DACCON0         equ	280	;# 
  1654     0119                     DACCON1         equ	281	;# 
  1655     018C                     ANSELA          equ	396	;# 
  1656     018D                     ANSELB          equ	397	;# 
  1657     018E                     ANSELC          equ	398	;# 
  1658     0197                     VREGCON         equ	407	;# 
  1659     0199                     RC1REG          equ	409	;# 
  1660     0199                     RCREG           equ	409	;# 
  1661     0199                     RCREG1          equ	409	;# 
  1662     019A                     TX1REG          equ	410	;# 
  1663     019A                     TXREG1          equ	410	;# 
  1664     019A                     TXREG           equ	410	;# 
  1665     019B                     SP1BRG          equ	411	;# 
  1666     019B                     SPBRG           equ	411	;# 
  1667     019B                     SP1BRGL         equ	411	;# 
  1668     019B                     SPBRG1          equ	411	;# 
  1669     019B                     SPBRGL          equ	411	;# 
  1670     019C                     SP1BRGH         equ	412	;# 
  1671     019C                     SPBRGH          equ	412	;# 
  1672     019C                     SPBRGH1         equ	412	;# 
  1673     019D                     RC1STA          equ	413	;# 
  1674     019D                     RCSTA1          equ	413	;# 
  1675     019D                     RCSTA           equ	413	;# 
  1676     019E                     TX1STA          equ	414	;# 
  1677     019E                     TXSTA1          equ	414	;# 
  1678     019E                     TXSTA           equ	414	;# 
  1679     019F                     BAUD1CON        equ	415	;# 
  1680     019F                     BAUDCON1        equ	415	;# 
  1681     019F                     BAUDCTL1        equ	415	;# 
  1682     019F                     BAUDCON         equ	415	;# 
  1683     019F                     BAUDCTL         equ	415	;# 
  1684     020C                     WPUA            equ	524	;# 
  1685     020D                     WPUB            equ	525	;# 
  1686     020E                     WPUC            equ	526	;# 
  1687     0211                     SSP1BUF         equ	529	;# 
  1688     0211                     SSPBUF          equ	529	;# 
  1689     0212                     SSP1ADD         equ	530	;# 
  1690     0212                     SSPADD          equ	530	;# 
  1691     0213                     SSP1MSK         equ	531	;# 
  1692     0213                     SSPMSK          equ	531	;# 
  1693     0214                     SSP1STAT        equ	532	;# 
  1694     0214                     SSPSTAT         equ	532	;# 
  1695     0215                     SSP1CON1        equ	533	;# 
  1696     0215                     SSPCON          equ	533	;# 
  1697     0215                     SSPCON1         equ	533	;# 
  1698     0215                     SSP1CON         equ	533	;# 
  1699     0216                     SSP1CON2        equ	534	;# 
  1700     0216                     SSPCON2         equ	534	;# 
  1701     0217                     SSP1CON3        equ	535	;# 
  1702     0217                     SSPCON3         equ	535	;# 
  1703     0219                     SSP2BUF         equ	537	;# 
  1704     021A                     SSP2ADD         equ	538	;# 
  1705     021B                     SSP2MSK         equ	539	;# 
  1706     021C                     SSP2STAT        equ	540	;# 
  1707     021D                     SSP2CON1        equ	541	;# 
  1708     021D                     SSP2CON         equ	541	;# 
  1709     021E                     SSP2CON2        equ	542	;# 
  1710     021F                     SSP2CON3        equ	543	;# 
  1711     028C                     ODCONA          equ	652	;# 
  1712     028D                     ODCONB          equ	653	;# 
  1713     028E                     ODCONC          equ	654	;# 
  1714     0291                     CCPR1           equ	657	;# 
  1715     0291                     CCPR1L          equ	657	;# 
  1716     0292                     CCPR1H          equ	658	;# 
  1717     0293                     CCP1CON         equ	659	;# 
  1718     0294                     CCP1CAP         equ	660	;# 
  1719     0295                     CCPR2           equ	661	;# 
  1720     0295                     CCPR2L          equ	661	;# 
  1721     0296                     CCPR2H          equ	662	;# 
  1722     0297                     CCP2CON         equ	663	;# 
  1723     0298                     CCP2CAP         equ	664	;# 
  1724     029F                     CCPTMRS         equ	671	;# 
  1725     030C                     SLRCONA         equ	780	;# 
  1726     030D                     SLRCONB         equ	781	;# 
  1727     030E                     SLRCONC         equ	782	;# 
  1728     0311                     CCPR3           equ	785	;# 
  1729     0311                     CCPR3L          equ	785	;# 
  1730     0312                     CCPR3H          equ	786	;# 
  1731     0313                     CCP3CON         equ	787	;# 
  1732     0314                     CCP3CAP         equ	788	;# 
  1733     0315                     CCPR4           equ	789	;# 
  1734     0315                     CCPR4L          equ	789	;# 
  1735     0316                     CCPR4H          equ	790	;# 
  1736     0317                     CCP4CON         equ	791	;# 
  1737     0318                     CCP4CAP         equ	792	;# 
  1738     038C                     INLVLA          equ	908	;# 
  1739     038D                     INLVLB          equ	909	;# 
  1740     038E                     INLVLC          equ	910	;# 
  1741     0391                     IOCAP           equ	913	;# 
  1742     0392                     IOCAN           equ	914	;# 
  1743     0393                     IOCAF           equ	915	;# 
  1744     0394                     IOCBP           equ	916	;# 
  1745     0395                     IOCBN           equ	917	;# 
  1746     0396                     IOCBF           equ	918	;# 
  1747     0397                     IOCCP           equ	919	;# 
  1748     0398                     IOCCN           equ	920	;# 
  1749     0399                     IOCCF           equ	921	;# 
  1750     039A                     CLKRCON         equ	922	;# 
  1751     039C                     MDCON           equ	924	;# 
  1752     039D                     MDSRC           equ	925	;# 
  1753     039E                     MDCARH          equ	926	;# 
  1754     039F                     MDCARL          equ	927	;# 
  1755     0411                     TMR3            equ	1041	;# 
  1756     0411                     TMR3L           equ	1041	;# 
  1757     0412                     TMR3H           equ	1042	;# 
  1758     0413                     T3CON           equ	1043	;# 
  1759     0414                     T3GCON          equ	1044	;# 
  1760     0415                     TMR4            equ	1045	;# 
  1761     0416                     PR4             equ	1046	;# 
  1762     0417                     T4CON           equ	1047	;# 
  1763     0418                     TMR5            equ	1048	;# 
  1764     0418                     TMR5L           equ	1048	;# 
  1765     0419                     TMR5H           equ	1049	;# 
  1766     041A                     T5CON           equ	1050	;# 
  1767     041B                     T5GCON          equ	1051	;# 
  1768     041C                     TMR6            equ	1052	;# 
  1769     041D                     PR6             equ	1053	;# 
  1770     041E                     T6CON           equ	1054	;# 
  1771     041F                     CCDCON          equ	1055	;# 
  1772     0498                     NCO1ACC         equ	1176	;# 
  1773     0498                     NCO1ACCL        equ	1176	;# 
  1774     0499                     NCO1ACCH        equ	1177	;# 
  1775     049A                     NCO1ACCU        equ	1178	;# 
  1776     049B                     NCO1INC         equ	1179	;# 
  1777     049B                     NCO1INCL        equ	1179	;# 
  1778     049C                     NCO1INCH        equ	1180	;# 
  1779     049D                     NCO1INCU        equ	1181	;# 
  1780     049E                     NCO1CON         equ	1182	;# 
  1781     049F                     NCO1CLK         equ	1183	;# 
  1782     0617                     PWM5DCL         equ	1559	;# 
  1783     0618                     PWM5DCH         equ	1560	;# 
  1784     0619                     PWM5CON         equ	1561	;# 
  1785     0619                     PWM5CON0        equ	1561	;# 
  1786     061A                     PWM6DCL         equ	1562	;# 
  1787     061B                     PWM6DCH         equ	1563	;# 
  1788     061C                     PWM6CON         equ	1564	;# 
  1789     061C                     PWM6CON0        equ	1564	;# 
  1790     061F                     PWMTMRS         equ	1567	;# 
  1791     0691                     CWG1CLKCON      equ	1681	;# 
  1792     0692                     CWG1DAT         equ	1682	;# 
  1793     0693                     CWG1DBR         equ	1683	;# 
  1794     0694                     CWG1DBF         equ	1684	;# 
  1795     0695                     CWG1CON0        equ	1685	;# 
  1796     0696                     CWG1CON1        equ	1686	;# 
  1797     0697                     CWG1AS0         equ	1687	;# 
  1798     0698                     CWG1AS1         equ	1688	;# 
  1799     0699                     CWG1STR         equ	1689	;# 
  1800     0711                     CWG2CLKCON      equ	1809	;# 
  1801     0712                     CWG2DAT         equ	1810	;# 
  1802     0713                     CWG2DBR         equ	1811	;# 
  1803     0714                     CWG2DBF         equ	1812	;# 
  1804     0715                     CWG2CON0        equ	1813	;# 
  1805     0716                     CWG2CON1        equ	1814	;# 
  1806     0717                     CWG2AS0         equ	1815	;# 
  1807     0718                     CWG2AS1         equ	1816	;# 
  1808     0719                     CWG2STR         equ	1817	;# 
  1809     0891                     NVMADR          equ	2193	;# 
  1810     0891                     EEADR           equ	2193	;# 
  1811     0891                     PMADR           equ	2193	;# 
  1812     0891                     NVMADRL         equ	2193	;# 
  1813     0891                     EEADRL          equ	2193	;# 
  1814     0891                     PMADRL          equ	2193	;# 
  1815     0892                     NVMADRH         equ	2194	;# 
  1816     0892                     EEADRH          equ	2194	;# 
  1817     0892                     PMADRH          equ	2194	;# 
  1818     0893                     NVMDAT          equ	2195	;# 
  1819     0893                     EEDAT           equ	2195	;# 
  1820     0893                     PMDAT           equ	2195	;# 
  1821     0893                     NVMDATL         equ	2195	;# 
  1822     0893                     EEDATL          equ	2195	;# 
  1823     0893                     PMDATL          equ	2195	;# 
  1824     0894                     NVMDATH         equ	2196	;# 
  1825     0894                     EEDATH          equ	2196	;# 
  1826     0894                     PMDATH          equ	2196	;# 
  1827     0895                     NVMCON1         equ	2197	;# 
  1828     0895                     EECON1          equ	2197	;# 
  1829     0895                     PMCON1          equ	2197	;# 
  1830     0896                     NVMCON2         equ	2198	;# 
  1831     0896                     EECON2          equ	2198	;# 
  1832     0896                     PMCON2          equ	2198	;# 
  1833     089B                     PCON0           equ	2203	;# 
  1834     0911                     PMD0            equ	2321	;# 
  1835     0912                     PMD1            equ	2322	;# 
  1836     0913                     PMD2            equ	2323	;# 
  1837     0914                     PMD3            equ	2324	;# 
  1838     0915                     PMD4            equ	2325	;# 
  1839     0916                     PMD5            equ	2326	;# 
  1840     0918                     CPUDOZE         equ	2328	;# 
  1841     0919                     OSCCON1         equ	2329	;# 
  1842     091A                     OSCCON2         equ	2330	;# 
  1843     091B                     OSCCON3         equ	2331	;# 
  1844     091C                     OSCSTAT1        equ	2332	;# 
  1845     091D                     OSCEN           equ	2333	;# 
  1846     091E                     OSCTUNE         equ	2334	;# 
  1847     091F                     OSCFRQ          equ	2335	;# 
  1848     0E0F                     PPSLOCK         equ	3599	;# 
  1849     0E10                     INTPPS          equ	3600	;# 
  1850     0E11                     T0CKIPPS        equ	3601	;# 
  1851     0E12                     T1CKIPPS        equ	3602	;# 
  1852     0E13                     T1GPPS          equ	3603	;# 
  1853     0E14                     CCP1PPS         equ	3604	;# 
  1854     0E15                     CCP2PPS         equ	3605	;# 
  1855     0E16                     CCP3PPS         equ	3606	;# 
  1856     0E17                     CCP4PPS         equ	3607	;# 
  1857     0E18                     CWG1PPS         equ	3608	;# 
  1858     0E19                     CWG2PPS         equ	3609	;# 
  1859     0E1A                     MDCIN1PPS       equ	3610	;# 
  1860     0E1B                     MDCIN2PPS       equ	3611	;# 
  1861     0E1C                     MDMINPPS        equ	3612	;# 
  1862     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1863     0E1E                     SSP2DATPPS      equ	3614	;# 
  1864     0E1F                     SSP2SSPPS       equ	3615	;# 
  1865     0E20                     SSP1CLKPPS      equ	3616	;# 
  1866     0E21                     SSP1DATPPS      equ	3617	;# 
  1867     0E22                     SSP1SSPPS       equ	3618	;# 
  1868     0E24                     RXPPS           equ	3620	;# 
  1869     0E25                     TXPPS           equ	3621	;# 
  1870     0E28                     CLCIN0PPS       equ	3624	;# 
  1871     0E29                     CLCIN1PPS       equ	3625	;# 
  1872     0E2A                     CLCIN2PPS       equ	3626	;# 
  1873     0E2B                     CLCIN3PPS       equ	3627	;# 
  1874     0E2C                     T3CKIPPS        equ	3628	;# 
  1875     0E2D                     T3GPPS          equ	3629	;# 
  1876     0E2E                     T5CKIPPS        equ	3630	;# 
  1877     0E2F                     T5GPPS          equ	3631	;# 
  1878     0E90                     RA0PPS          equ	3728	;# 
  1879     0E91                     RA1PPS          equ	3729	;# 
  1880     0E92                     RA2PPS          equ	3730	;# 
  1881     0E94                     RA4PPS          equ	3732	;# 
  1882     0E95                     RA5PPS          equ	3733	;# 
  1883     0E9C                     RB4PPS          equ	3740	;# 
  1884     0E9D                     RB5PPS          equ	3741	;# 
  1885     0E9E                     RB6PPS          equ	3742	;# 
  1886     0E9F                     RB7PPS          equ	3743	;# 
  1887     0EA0                     RC0PPS          equ	3744	;# 
  1888     0EA1                     RC1PPS          equ	3745	;# 
  1889     0EA2                     RC2PPS          equ	3746	;# 
  1890     0EA3                     RC3PPS          equ	3747	;# 
  1891     0EA4                     RC4PPS          equ	3748	;# 
  1892     0EA5                     RC5PPS          equ	3749	;# 
  1893     0EA6                     RC6PPS          equ	3750	;# 
  1894     0EA7                     RC7PPS          equ	3751	;# 
  1895     0F0F                     CLCDATA         equ	3855	;# 
  1896     0F10                     CLC1CON         equ	3856	;# 
  1897     0F11                     CLC1POL         equ	3857	;# 
  1898     0F12                     CLC1SEL0        equ	3858	;# 
  1899     0F13                     CLC1SEL1        equ	3859	;# 
  1900     0F14                     CLC1SEL2        equ	3860	;# 
  1901     0F15                     CLC1SEL3        equ	3861	;# 
  1902     0F16                     CLC1GLS0        equ	3862	;# 
  1903     0F17                     CLC1GLS1        equ	3863	;# 
  1904     0F18                     CLC1GLS2        equ	3864	;# 
  1905     0F19                     CLC1GLS3        equ	3865	;# 
  1906     0F1A                     CLC2CON         equ	3866	;# 
  1907     0F1B                     CLC2POL         equ	3867	;# 
  1908     0F1C                     CLC2SEL0        equ	3868	;# 
  1909     0F1D                     CLC2SEL1        equ	3869	;# 
  1910     0F1E                     CLC2SEL2        equ	3870	;# 
  1911     0F1F                     CLC2SEL3        equ	3871	;# 
  1912     0F20                     CLC2GLS0        equ	3872	;# 
  1913     0F21                     CLC2GLS1        equ	3873	;# 
  1914     0F22                     CLC2GLS2        equ	3874	;# 
  1915     0F23                     CLC2GLS3        equ	3875	;# 
  1916     0F24                     CLC3CON         equ	3876	;# 
  1917     0F25                     CLC3POL         equ	3877	;# 
  1918     0F26                     CLC3SEL0        equ	3878	;# 
  1919     0F27                     CLC3SEL1        equ	3879	;# 
  1920     0F28                     CLC3SEL2        equ	3880	;# 
  1921     0F29                     CLC3SEL3        equ	3881	;# 
  1922     0F2A                     CLC3GLS0        equ	3882	;# 
  1923     0F2B                     CLC3GLS1        equ	3883	;# 
  1924     0F2C                     CLC3GLS2        equ	3884	;# 
  1925     0F2D                     CLC3GLS3        equ	3885	;# 
  1926     0F2E                     CLC4CON         equ	3886	;# 
  1927     0F2F                     CLC4POL         equ	3887	;# 
  1928     0F30                     CLC4SEL0        equ	3888	;# 
  1929     0F31                     CLC4SEL1        equ	3889	;# 
  1930     0F32                     CLC4SEL2        equ	3890	;# 
  1931     0F33                     CLC4SEL3        equ	3891	;# 
  1932     0F34                     CLC4GLS0        equ	3892	;# 
  1933     0F35                     CLC4GLS1        equ	3893	;# 
  1934     0F36                     CLC4GLS2        equ	3894	;# 
  1935     0F37                     CLC4GLS3        equ	3895	;# 
  1936     0FE4                     STATUS_SHAD     equ	4068	;# 
  1937     0FE5                     WREG_SHAD       equ	4069	;# 
  1938     0FE6                     BSR_SHAD        equ	4070	;# 
  1939     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1940     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1941     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1942     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1943     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1944     0FED                     STKPTR          equ	4077	;# 
  1945     0FEE                     TOSL            equ	4078	;# 
  1946     0FEF                     TOSH            equ	4079	;# 
  1947     0000                     INDF0           equ	0	;# 
  1948     0001                     INDF1           equ	1	;# 
  1949     0002                     PCL             equ	2	;# 
  1950     0003                     STATUS          equ	3	;# 
  1951     0004                     FSR0L           equ	4	;# 
  1952     0005                     FSR0H           equ	5	;# 
  1953     0006                     FSR1L           equ	6	;# 
  1954     0007                     FSR1H           equ	7	;# 
  1955     0008                     BSR             equ	8	;# 
  1956     0009                     WREG            equ	9	;# 
  1957     000A                     PCLATH          equ	10	;# 
  1958     000B                     INTCON          equ	11	;# 
  1959     000C                     PORTA           equ	12	;# 
  1960     000D                     PORTB           equ	13	;# 
  1961     000E                     PORTC           equ	14	;# 
  1962     0010                     PIR0            equ	16	;# 
  1963     0011                     PIR1            equ	17	;# 
  1964     0012                     PIR2            equ	18	;# 
  1965     0013                     PIR3            equ	19	;# 
  1966     0014                     PIR4            equ	20	;# 
  1967     0015                     TMR0L           equ	21	;# 
  1968     0015                     TMR0            equ	21	;# 
  1969     0016                     TMR0H           equ	22	;# 
  1970     0016                     PR0             equ	22	;# 
  1971     0017                     T0CON0          equ	23	;# 
  1972     0018                     T0CON1          equ	24	;# 
  1973     0019                     TMR1            equ	25	;# 
  1974     0019                     TMR1L           equ	25	;# 
  1975     001A                     TMR1H           equ	26	;# 
  1976     001B                     T1CON           equ	27	;# 
  1977     001C                     T1GCON          equ	28	;# 
  1978     001D                     TMR2            equ	29	;# 
  1979     001E                     PR2             equ	30	;# 
  1980     001F                     T2CON           equ	31	;# 
  1981     008C                     TRISA           equ	140	;# 
  1982     008D                     TRISB           equ	141	;# 
  1983     008E                     TRISC           equ	142	;# 
  1984     0090                     PIE0            equ	144	;# 
  1985     0091                     PIE1            equ	145	;# 
  1986     0092                     PIE2            equ	146	;# 
  1987     0093                     PIE3            equ	147	;# 
  1988     0094                     PIE4            equ	148	;# 
  1989     0097                     WDTCON          equ	151	;# 
  1990     009B                     ADRES           equ	155	;# 
  1991     009B                     ADRESL          equ	155	;# 
  1992     009C                     ADRESH          equ	156	;# 
  1993     009D                     ADCON0          equ	157	;# 
  1994     009E                     ADCON1          equ	158	;# 
  1995     009F                     ADACT           equ	159	;# 
  1996     010C                     LATA            equ	268	;# 
  1997     010D                     LATB            equ	269	;# 
  1998     010E                     LATC            equ	270	;# 
  1999     0111                     CM1CON0         equ	273	;# 
  2000     0112                     CM1CON1         equ	274	;# 
  2001     0113                     CM2CON0         equ	275	;# 
  2002     0114                     CM2CON1         equ	276	;# 
  2003     0115                     CMOUT           equ	277	;# 
  2004     0116                     BORCON          equ	278	;# 
  2005     0117                     FVRCON          equ	279	;# 
  2006     0118                     DACCON0         equ	280	;# 
  2007     0119                     DACCON1         equ	281	;# 
  2008     018C                     ANSELA          equ	396	;# 
  2009     018D                     ANSELB          equ	397	;# 
  2010     018E                     ANSELC          equ	398	;# 
  2011     0197                     VREGCON         equ	407	;# 
  2012     0199                     RC1REG          equ	409	;# 
  2013     0199                     RCREG           equ	409	;# 
  2014     0199                     RCREG1          equ	409	;# 
  2015     019A                     TX1REG          equ	410	;# 
  2016     019A                     TXREG1          equ	410	;# 
  2017     019A                     TXREG           equ	410	;# 
  2018     019B                     SP1BRG          equ	411	;# 
  2019     019B                     SPBRG           equ	411	;# 
  2020     019B                     SP1BRGL         equ	411	;# 
  2021     019B                     SPBRG1          equ	411	;# 
  2022     019B                     SPBRGL          equ	411	;# 
  2023     019C                     SP1BRGH         equ	412	;# 
  2024     019C                     SPBRGH          equ	412	;# 
  2025     019C                     SPBRGH1         equ	412	;# 
  2026     019D                     RC1STA          equ	413	;# 
  2027     019D                     RCSTA1          equ	413	;# 
  2028     019D                     RCSTA           equ	413	;# 
  2029     019E                     TX1STA          equ	414	;# 
  2030     019E                     TXSTA1          equ	414	;# 
  2031     019E                     TXSTA           equ	414	;# 
  2032     019F                     BAUD1CON        equ	415	;# 
  2033     019F                     BAUDCON1        equ	415	;# 
  2034     019F                     BAUDCTL1        equ	415	;# 
  2035     019F                     BAUDCON         equ	415	;# 
  2036     019F                     BAUDCTL         equ	415	;# 
  2037     020C                     WPUA            equ	524	;# 
  2038     020D                     WPUB            equ	525	;# 
  2039     020E                     WPUC            equ	526	;# 
  2040     0211                     SSP1BUF         equ	529	;# 
  2041     0211                     SSPBUF          equ	529	;# 
  2042     0212                     SSP1ADD         equ	530	;# 
  2043     0212                     SSPADD          equ	530	;# 
  2044     0213                     SSP1MSK         equ	531	;# 
  2045     0213                     SSPMSK          equ	531	;# 
  2046     0214                     SSP1STAT        equ	532	;# 
  2047     0214                     SSPSTAT         equ	532	;# 
  2048     0215                     SSP1CON1        equ	533	;# 
  2049     0215                     SSPCON          equ	533	;# 
  2050     0215                     SSPCON1         equ	533	;# 
  2051     0215                     SSP1CON         equ	533	;# 
  2052     0216                     SSP1CON2        equ	534	;# 
  2053     0216                     SSPCON2         equ	534	;# 
  2054     0217                     SSP1CON3        equ	535	;# 
  2055     0217                     SSPCON3         equ	535	;# 
  2056     0219                     SSP2BUF         equ	537	;# 
  2057     021A                     SSP2ADD         equ	538	;# 
  2058     021B                     SSP2MSK         equ	539	;# 
  2059     021C                     SSP2STAT        equ	540	;# 
  2060     021D                     SSP2CON1        equ	541	;# 
  2061     021D                     SSP2CON         equ	541	;# 
  2062     021E                     SSP2CON2        equ	542	;# 
  2063     021F                     SSP2CON3        equ	543	;# 
  2064     028C                     ODCONA          equ	652	;# 
  2065     028D                     ODCONB          equ	653	;# 
  2066     028E                     ODCONC          equ	654	;# 
  2067     0291                     CCPR1           equ	657	;# 
  2068     0291                     CCPR1L          equ	657	;# 
  2069     0292                     CCPR1H          equ	658	;# 
  2070     0293                     CCP1CON         equ	659	;# 
  2071     0294                     CCP1CAP         equ	660	;# 
  2072     0295                     CCPR2           equ	661	;# 
  2073     0295                     CCPR2L          equ	661	;# 
  2074     0296                     CCPR2H          equ	662	;# 
  2075     0297                     CCP2CON         equ	663	;# 
  2076     0298                     CCP2CAP         equ	664	;# 
  2077     029F                     CCPTMRS         equ	671	;# 
  2078     030C                     SLRCONA         equ	780	;# 
  2079     030D                     SLRCONB         equ	781	;# 
  2080     030E                     SLRCONC         equ	782	;# 
  2081     0311                     CCPR3           equ	785	;# 
  2082     0311                     CCPR3L          equ	785	;# 
  2083     0312                     CCPR3H          equ	786	;# 
  2084     0313                     CCP3CON         equ	787	;# 
  2085     0314                     CCP3CAP         equ	788	;# 
  2086     0315                     CCPR4           equ	789	;# 
  2087     0315                     CCPR4L          equ	789	;# 
  2088     0316                     CCPR4H          equ	790	;# 
  2089     0317                     CCP4CON         equ	791	;# 
  2090     0318                     CCP4CAP         equ	792	;# 
  2091     038C                     INLVLA          equ	908	;# 
  2092     038D                     INLVLB          equ	909	;# 
  2093     038E                     INLVLC          equ	910	;# 
  2094     0391                     IOCAP           equ	913	;# 
  2095     0392                     IOCAN           equ	914	;# 
  2096     0393                     IOCAF           equ	915	;# 
  2097     0394                     IOCBP           equ	916	;# 
  2098     0395                     IOCBN           equ	917	;# 
  2099     0396                     IOCBF           equ	918	;# 
  2100     0397                     IOCCP           equ	919	;# 
  2101     0398                     IOCCN           equ	920	;# 
  2102     0399                     IOCCF           equ	921	;# 
  2103     039A                     CLKRCON         equ	922	;# 
  2104     039C                     MDCON           equ	924	;# 
  2105     039D                     MDSRC           equ	925	;# 
  2106     039E                     MDCARH          equ	926	;# 
  2107     039F                     MDCARL          equ	927	;# 
  2108     0411                     TMR3            equ	1041	;# 
  2109     0411                     TMR3L           equ	1041	;# 
  2110     0412                     TMR3H           equ	1042	;# 
  2111     0413                     T3CON           equ	1043	;# 
  2112     0414                     T3GCON          equ	1044	;# 
  2113     0415                     TMR4            equ	1045	;# 
  2114     0416                     PR4             equ	1046	;# 
  2115     0417                     T4CON           equ	1047	;# 
  2116     0418                     TMR5            equ	1048	;# 
  2117     0418                     TMR5L           equ	1048	;# 
  2118     0419                     TMR5H           equ	1049	;# 
  2119     041A                     T5CON           equ	1050	;# 
  2120     041B                     T5GCON          equ	1051	;# 
  2121     041C                     TMR6            equ	1052	;# 
  2122     041D                     PR6             equ	1053	;# 
  2123     041E                     T6CON           equ	1054	;# 
  2124     041F                     CCDCON          equ	1055	;# 
  2125     0498                     NCO1ACC         equ	1176	;# 
  2126     0498                     NCO1ACCL        equ	1176	;# 
  2127     0499                     NCO1ACCH        equ	1177	;# 
  2128     049A                     NCO1ACCU        equ	1178	;# 
  2129     049B                     NCO1INC         equ	1179	;# 
  2130     049B                     NCO1INCL        equ	1179	;# 
  2131     049C                     NCO1INCH        equ	1180	;# 
  2132     049D                     NCO1INCU        equ	1181	;# 
  2133     049E                     NCO1CON         equ	1182	;# 
  2134     049F                     NCO1CLK         equ	1183	;# 
  2135     0617                     PWM5DCL         equ	1559	;# 
  2136     0618                     PWM5DCH         equ	1560	;# 
  2137     0619                     PWM5CON         equ	1561	;# 
  2138     0619                     PWM5CON0        equ	1561	;# 
  2139     061A                     PWM6DCL         equ	1562	;# 
  2140     061B                     PWM6DCH         equ	1563	;# 
  2141     061C                     PWM6CON         equ	1564	;# 
  2142     061C                     PWM6CON0        equ	1564	;# 
  2143     061F                     PWMTMRS         equ	1567	;# 
  2144     0691                     CWG1CLKCON      equ	1681	;# 
  2145     0692                     CWG1DAT         equ	1682	;# 
  2146     0693                     CWG1DBR         equ	1683	;# 
  2147     0694                     CWG1DBF         equ	1684	;# 
  2148     0695                     CWG1CON0        equ	1685	;# 
  2149     0696                     CWG1CON1        equ	1686	;# 
  2150     0697                     CWG1AS0         equ	1687	;# 
  2151     0698                     CWG1AS1         equ	1688	;# 
  2152     0699                     CWG1STR         equ	1689	;# 
  2153     0711                     CWG2CLKCON      equ	1809	;# 
  2154     0712                     CWG2DAT         equ	1810	;# 
  2155     0713                     CWG2DBR         equ	1811	;# 
  2156     0714                     CWG2DBF         equ	1812	;# 
  2157     0715                     CWG2CON0        equ	1813	;# 
  2158     0716                     CWG2CON1        equ	1814	;# 
  2159     0717                     CWG2AS0         equ	1815	;# 
  2160     0718                     CWG2AS1         equ	1816	;# 
  2161     0719                     CWG2STR         equ	1817	;# 
  2162     0891                     NVMADR          equ	2193	;# 
  2163     0891                     EEADR           equ	2193	;# 
  2164     0891                     PMADR           equ	2193	;# 
  2165     0891                     NVMADRL         equ	2193	;# 
  2166     0891                     EEADRL          equ	2193	;# 
  2167     0891                     PMADRL          equ	2193	;# 
  2168     0892                     NVMADRH         equ	2194	;# 
  2169     0892                     EEADRH          equ	2194	;# 
  2170     0892                     PMADRH          equ	2194	;# 
  2171     0893                     NVMDAT          equ	2195	;# 
  2172     0893                     EEDAT           equ	2195	;# 
  2173     0893                     PMDAT           equ	2195	;# 
  2174     0893                     NVMDATL         equ	2195	;# 
  2175     0893                     EEDATL          equ	2195	;# 
  2176     0893                     PMDATL          equ	2195	;# 
  2177     0894                     NVMDATH         equ	2196	;# 
  2178     0894                     EEDATH          equ	2196	;# 
  2179     0894                     PMDATH          equ	2196	;# 
  2180     0895                     NVMCON1         equ	2197	;# 
  2181     0895                     EECON1          equ	2197	;# 
  2182     0895                     PMCON1          equ	2197	;# 
  2183     0896                     NVMCON2         equ	2198	;# 
  2184     0896                     EECON2          equ	2198	;# 
  2185     0896                     PMCON2          equ	2198	;# 
  2186     089B                     PCON0           equ	2203	;# 
  2187     0911                     PMD0            equ	2321	;# 
  2188     0912                     PMD1            equ	2322	;# 
  2189     0913                     PMD2            equ	2323	;# 
  2190     0914                     PMD3            equ	2324	;# 
  2191     0915                     PMD4            equ	2325	;# 
  2192     0916                     PMD5            equ	2326	;# 
  2193     0918                     CPUDOZE         equ	2328	;# 
  2194     0919                     OSCCON1         equ	2329	;# 
  2195     091A                     OSCCON2         equ	2330	;# 
  2196     091B                     OSCCON3         equ	2331	;# 
  2197     091C                     OSCSTAT1        equ	2332	;# 
  2198     091D                     OSCEN           equ	2333	;# 
  2199     091E                     OSCTUNE         equ	2334	;# 
  2200     091F                     OSCFRQ          equ	2335	;# 
  2201     0E0F                     PPSLOCK         equ	3599	;# 
  2202     0E10                     INTPPS          equ	3600	;# 
  2203     0E11                     T0CKIPPS        equ	3601	;# 
  2204     0E12                     T1CKIPPS        equ	3602	;# 
  2205     0E13                     T1GPPS          equ	3603	;# 
  2206     0E14                     CCP1PPS         equ	3604	;# 
  2207     0E15                     CCP2PPS         equ	3605	;# 
  2208     0E16                     CCP3PPS         equ	3606	;# 
  2209     0E17                     CCP4PPS         equ	3607	;# 
  2210     0E18                     CWG1PPS         equ	3608	;# 
  2211     0E19                     CWG2PPS         equ	3609	;# 
  2212     0E1A                     MDCIN1PPS       equ	3610	;# 
  2213     0E1B                     MDCIN2PPS       equ	3611	;# 
  2214     0E1C                     MDMINPPS        equ	3612	;# 
  2215     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2216     0E1E                     SSP2DATPPS      equ	3614	;# 
  2217     0E1F                     SSP2SSPPS       equ	3615	;# 
  2218     0E20                     SSP1CLKPPS      equ	3616	;# 
  2219     0E21                     SSP1DATPPS      equ	3617	;# 
  2220     0E22                     SSP1SSPPS       equ	3618	;# 
  2221     0E24                     RXPPS           equ	3620	;# 
  2222     0E25                     TXPPS           equ	3621	;# 
  2223     0E28                     CLCIN0PPS       equ	3624	;# 
  2224     0E29                     CLCIN1PPS       equ	3625	;# 
  2225     0E2A                     CLCIN2PPS       equ	3626	;# 
  2226     0E2B                     CLCIN3PPS       equ	3627	;# 
  2227     0E2C                     T3CKIPPS        equ	3628	;# 
  2228     0E2D                     T3GPPS          equ	3629	;# 
  2229     0E2E                     T5CKIPPS        equ	3630	;# 
  2230     0E2F                     T5GPPS          equ	3631	;# 
  2231     0E90                     RA0PPS          equ	3728	;# 
  2232     0E91                     RA1PPS          equ	3729	;# 
  2233     0E92                     RA2PPS          equ	3730	;# 
  2234     0E94                     RA4PPS          equ	3732	;# 
  2235     0E95                     RA5PPS          equ	3733	;# 
  2236     0E9C                     RB4PPS          equ	3740	;# 
  2237     0E9D                     RB5PPS          equ	3741	;# 
  2238     0E9E                     RB6PPS          equ	3742	;# 
  2239     0E9F                     RB7PPS          equ	3743	;# 
  2240     0EA0                     RC0PPS          equ	3744	;# 
  2241     0EA1                     RC1PPS          equ	3745	;# 
  2242     0EA2                     RC2PPS          equ	3746	;# 
  2243     0EA3                     RC3PPS          equ	3747	;# 
  2244     0EA4                     RC4PPS          equ	3748	;# 
  2245     0EA5                     RC5PPS          equ	3749	;# 
  2246     0EA6                     RC6PPS          equ	3750	;# 
  2247     0EA7                     RC7PPS          equ	3751	;# 
  2248     0F0F                     CLCDATA         equ	3855	;# 
  2249     0F10                     CLC1CON         equ	3856	;# 
  2250     0F11                     CLC1POL         equ	3857	;# 
  2251     0F12                     CLC1SEL0        equ	3858	;# 
  2252     0F13                     CLC1SEL1        equ	3859	;# 
  2253     0F14                     CLC1SEL2        equ	3860	;# 
  2254     0F15                     CLC1SEL3        equ	3861	;# 
  2255     0F16                     CLC1GLS0        equ	3862	;# 
  2256     0F17                     CLC1GLS1        equ	3863	;# 
  2257     0F18                     CLC1GLS2        equ	3864	;# 
  2258     0F19                     CLC1GLS3        equ	3865	;# 
  2259     0F1A                     CLC2CON         equ	3866	;# 
  2260     0F1B                     CLC2POL         equ	3867	;# 
  2261     0F1C                     CLC2SEL0        equ	3868	;# 
  2262     0F1D                     CLC2SEL1        equ	3869	;# 
  2263     0F1E                     CLC2SEL2        equ	3870	;# 
  2264     0F1F                     CLC2SEL3        equ	3871	;# 
  2265     0F20                     CLC2GLS0        equ	3872	;# 
  2266     0F21                     CLC2GLS1        equ	3873	;# 
  2267     0F22                     CLC2GLS2        equ	3874	;# 
  2268     0F23                     CLC2GLS3        equ	3875	;# 
  2269     0F24                     CLC3CON         equ	3876	;# 
  2270     0F25                     CLC3POL         equ	3877	;# 
  2271     0F26                     CLC3SEL0        equ	3878	;# 
  2272     0F27                     CLC3SEL1        equ	3879	;# 
  2273     0F28                     CLC3SEL2        equ	3880	;# 
  2274     0F29                     CLC3SEL3        equ	3881	;# 
  2275     0F2A                     CLC3GLS0        equ	3882	;# 
  2276     0F2B                     CLC3GLS1        equ	3883	;# 
  2277     0F2C                     CLC3GLS2        equ	3884	;# 
  2278     0F2D                     CLC3GLS3        equ	3885	;# 
  2279     0F2E                     CLC4CON         equ	3886	;# 
  2280     0F2F                     CLC4POL         equ	3887	;# 
  2281     0F30                     CLC4SEL0        equ	3888	;# 
  2282     0F31                     CLC4SEL1        equ	3889	;# 
  2283     0F32                     CLC4SEL2        equ	3890	;# 
  2284     0F33                     CLC4SEL3        equ	3891	;# 
  2285     0F34                     CLC4GLS0        equ	3892	;# 
  2286     0F35                     CLC4GLS1        equ	3893	;# 
  2287     0F36                     CLC4GLS2        equ	3894	;# 
  2288     0F37                     CLC4GLS3        equ	3895	;# 
  2289     0FE4                     STATUS_SHAD     equ	4068	;# 
  2290     0FE5                     WREG_SHAD       equ	4069	;# 
  2291     0FE6                     BSR_SHAD        equ	4070	;# 
  2292     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2293     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2294     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2295     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2296     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2297     0FED                     STKPTR          equ	4077	;# 
  2298     0FEE                     TOSL            equ	4078	;# 
  2299     0FEF                     TOSH            equ	4079	;# 
  2300     0000                     INDF0           equ	0	;# 
  2301     0001                     INDF1           equ	1	;# 
  2302     0002                     PCL             equ	2	;# 
  2303     0003                     STATUS          equ	3	;# 
  2304     0004                     FSR0L           equ	4	;# 
  2305     0005                     FSR0H           equ	5	;# 
  2306     0006                     FSR1L           equ	6	;# 
  2307     0007                     FSR1H           equ	7	;# 
  2308     0008                     BSR             equ	8	;# 
  2309     0009                     WREG            equ	9	;# 
  2310     000A                     PCLATH          equ	10	;# 
  2311     000B                     INTCON          equ	11	;# 
  2312     000C                     PORTA           equ	12	;# 
  2313     000D                     PORTB           equ	13	;# 
  2314     000E                     PORTC           equ	14	;# 
  2315     0010                     PIR0            equ	16	;# 
  2316     0011                     PIR1            equ	17	;# 
  2317     0012                     PIR2            equ	18	;# 
  2318     0013                     PIR3            equ	19	;# 
  2319     0014                     PIR4            equ	20	;# 
  2320     0015                     TMR0L           equ	21	;# 
  2321     0015                     TMR0            equ	21	;# 
  2322     0016                     TMR0H           equ	22	;# 
  2323     0016                     PR0             equ	22	;# 
  2324     0017                     T0CON0          equ	23	;# 
  2325     0018                     T0CON1          equ	24	;# 
  2326     0019                     TMR1            equ	25	;# 
  2327     0019                     TMR1L           equ	25	;# 
  2328     001A                     TMR1H           equ	26	;# 
  2329     001B                     T1CON           equ	27	;# 
  2330     001C                     T1GCON          equ	28	;# 
  2331     001D                     TMR2            equ	29	;# 
  2332     001E                     PR2             equ	30	;# 
  2333     001F                     T2CON           equ	31	;# 
  2334     008C                     TRISA           equ	140	;# 
  2335     008D                     TRISB           equ	141	;# 
  2336     008E                     TRISC           equ	142	;# 
  2337     0090                     PIE0            equ	144	;# 
  2338     0091                     PIE1            equ	145	;# 
  2339     0092                     PIE2            equ	146	;# 
  2340     0093                     PIE3            equ	147	;# 
  2341     0094                     PIE4            equ	148	;# 
  2342     0097                     WDTCON          equ	151	;# 
  2343     009B                     ADRES           equ	155	;# 
  2344     009B                     ADRESL          equ	155	;# 
  2345     009C                     ADRESH          equ	156	;# 
  2346     009D                     ADCON0          equ	157	;# 
  2347     009E                     ADCON1          equ	158	;# 
  2348     009F                     ADACT           equ	159	;# 
  2349     010C                     LATA            equ	268	;# 
  2350     010D                     LATB            equ	269	;# 
  2351     010E                     LATC            equ	270	;# 
  2352     0111                     CM1CON0         equ	273	;# 
  2353     0112                     CM1CON1         equ	274	;# 
  2354     0113                     CM2CON0         equ	275	;# 
  2355     0114                     CM2CON1         equ	276	;# 
  2356     0115                     CMOUT           equ	277	;# 
  2357     0116                     BORCON          equ	278	;# 
  2358     0117                     FVRCON          equ	279	;# 
  2359     0118                     DACCON0         equ	280	;# 
  2360     0119                     DACCON1         equ	281	;# 
  2361     018C                     ANSELA          equ	396	;# 
  2362     018D                     ANSELB          equ	397	;# 
  2363     018E                     ANSELC          equ	398	;# 
  2364     0197                     VREGCON         equ	407	;# 
  2365     0199                     RC1REG          equ	409	;# 
  2366     0199                     RCREG           equ	409	;# 
  2367     0199                     RCREG1          equ	409	;# 
  2368     019A                     TX1REG          equ	410	;# 
  2369     019A                     TXREG1          equ	410	;# 
  2370     019A                     TXREG           equ	410	;# 
  2371     019B                     SP1BRG          equ	411	;# 
  2372     019B                     SPBRG           equ	411	;# 
  2373     019B                     SP1BRGL         equ	411	;# 
  2374     019B                     SPBRG1          equ	411	;# 
  2375     019B                     SPBRGL          equ	411	;# 
  2376     019C                     SP1BRGH         equ	412	;# 
  2377     019C                     SPBRGH          equ	412	;# 
  2378     019C                     SPBRGH1         equ	412	;# 
  2379     019D                     RC1STA          equ	413	;# 
  2380     019D                     RCSTA1          equ	413	;# 
  2381     019D                     RCSTA           equ	413	;# 
  2382     019E                     TX1STA          equ	414	;# 
  2383     019E                     TXSTA1          equ	414	;# 
  2384     019E                     TXSTA           equ	414	;# 
  2385     019F                     BAUD1CON        equ	415	;# 
  2386     019F                     BAUDCON1        equ	415	;# 
  2387     019F                     BAUDCTL1        equ	415	;# 
  2388     019F                     BAUDCON         equ	415	;# 
  2389     019F                     BAUDCTL         equ	415	;# 
  2390     020C                     WPUA            equ	524	;# 
  2391     020D                     WPUB            equ	525	;# 
  2392     020E                     WPUC            equ	526	;# 
  2393     0211                     SSP1BUF         equ	529	;# 
  2394     0211                     SSPBUF          equ	529	;# 
  2395     0212                     SSP1ADD         equ	530	;# 
  2396     0212                     SSPADD          equ	530	;# 
  2397     0213                     SSP1MSK         equ	531	;# 
  2398     0213                     SSPMSK          equ	531	;# 
  2399     0214                     SSP1STAT        equ	532	;# 
  2400     0214                     SSPSTAT         equ	532	;# 
  2401     0215                     SSP1CON1        equ	533	;# 
  2402     0215                     SSPCON          equ	533	;# 
  2403     0215                     SSPCON1         equ	533	;# 
  2404     0215                     SSP1CON         equ	533	;# 
  2405     0216                     SSP1CON2        equ	534	;# 
  2406     0216                     SSPCON2         equ	534	;# 
  2407     0217                     SSP1CON3        equ	535	;# 
  2408     0217                     SSPCON3         equ	535	;# 
  2409     0219                     SSP2BUF         equ	537	;# 
  2410     021A                     SSP2ADD         equ	538	;# 
  2411     021B                     SSP2MSK         equ	539	;# 
  2412     021C                     SSP2STAT        equ	540	;# 
  2413     021D                     SSP2CON1        equ	541	;# 
  2414     021D                     SSP2CON         equ	541	;# 
  2415     021E                     SSP2CON2        equ	542	;# 
  2416     021F                     SSP2CON3        equ	543	;# 
  2417     028C                     ODCONA          equ	652	;# 
  2418     028D                     ODCONB          equ	653	;# 
  2419     028E                     ODCONC          equ	654	;# 
  2420     0291                     CCPR1           equ	657	;# 
  2421     0291                     CCPR1L          equ	657	;# 
  2422     0292                     CCPR1H          equ	658	;# 
  2423     0293                     CCP1CON         equ	659	;# 
  2424     0294                     CCP1CAP         equ	660	;# 
  2425     0295                     CCPR2           equ	661	;# 
  2426     0295                     CCPR2L          equ	661	;# 
  2427     0296                     CCPR2H          equ	662	;# 
  2428     0297                     CCP2CON         equ	663	;# 
  2429     0298                     CCP2CAP         equ	664	;# 
  2430     029F                     CCPTMRS         equ	671	;# 
  2431     030C                     SLRCONA         equ	780	;# 
  2432     030D                     SLRCONB         equ	781	;# 
  2433     030E                     SLRCONC         equ	782	;# 
  2434     0311                     CCPR3           equ	785	;# 
  2435     0311                     CCPR3L          equ	785	;# 
  2436     0312                     CCPR3H          equ	786	;# 
  2437     0313                     CCP3CON         equ	787	;# 
  2438     0314                     CCP3CAP         equ	788	;# 
  2439     0315                     CCPR4           equ	789	;# 
  2440     0315                     CCPR4L          equ	789	;# 
  2441     0316                     CCPR4H          equ	790	;# 
  2442     0317                     CCP4CON         equ	791	;# 
  2443     0318                     CCP4CAP         equ	792	;# 
  2444     038C                     INLVLA          equ	908	;# 
  2445     038D                     INLVLB          equ	909	;# 
  2446     038E                     INLVLC          equ	910	;# 
  2447     0391                     IOCAP           equ	913	;# 
  2448     0392                     IOCAN           equ	914	;# 
  2449     0393                     IOCAF           equ	915	;# 
  2450     0394                     IOCBP           equ	916	;# 
  2451     0395                     IOCBN           equ	917	;# 
  2452     0396                     IOCBF           equ	918	;# 
  2453     0397                     IOCCP           equ	919	;# 
  2454     0398                     IOCCN           equ	920	;# 
  2455     0399                     IOCCF           equ	921	;# 
  2456     039A                     CLKRCON         equ	922	;# 
  2457     039C                     MDCON           equ	924	;# 
  2458     039D                     MDSRC           equ	925	;# 
  2459     039E                     MDCARH          equ	926	;# 
  2460     039F                     MDCARL          equ	927	;# 
  2461     0411                     TMR3            equ	1041	;# 
  2462     0411                     TMR3L           equ	1041	;# 
  2463     0412                     TMR3H           equ	1042	;# 
  2464     0413                     T3CON           equ	1043	;# 
  2465     0414                     T3GCON          equ	1044	;# 
  2466     0415                     TMR4            equ	1045	;# 
  2467     0416                     PR4             equ	1046	;# 
  2468     0417                     T4CON           equ	1047	;# 
  2469     0418                     TMR5            equ	1048	;# 
  2470     0418                     TMR5L           equ	1048	;# 
  2471     0419                     TMR5H           equ	1049	;# 
  2472     041A                     T5CON           equ	1050	;# 
  2473     041B                     T5GCON          equ	1051	;# 
  2474     041C                     TMR6            equ	1052	;# 
  2475     041D                     PR6             equ	1053	;# 
  2476     041E                     T6CON           equ	1054	;# 
  2477     041F                     CCDCON          equ	1055	;# 
  2478     0498                     NCO1ACC         equ	1176	;# 
  2479     0498                     NCO1ACCL        equ	1176	;# 
  2480     0499                     NCO1ACCH        equ	1177	;# 
  2481     049A                     NCO1ACCU        equ	1178	;# 
  2482     049B                     NCO1INC         equ	1179	;# 
  2483     049B                     NCO1INCL        equ	1179	;# 
  2484     049C                     NCO1INCH        equ	1180	;# 
  2485     049D                     NCO1INCU        equ	1181	;# 
  2486     049E                     NCO1CON         equ	1182	;# 
  2487     049F                     NCO1CLK         equ	1183	;# 
  2488     0617                     PWM5DCL         equ	1559	;# 
  2489     0618                     PWM5DCH         equ	1560	;# 
  2490     0619                     PWM5CON         equ	1561	;# 
  2491     0619                     PWM5CON0        equ	1561	;# 
  2492     061A                     PWM6DCL         equ	1562	;# 
  2493     061B                     PWM6DCH         equ	1563	;# 
  2494     061C                     PWM6CON         equ	1564	;# 
  2495     061C                     PWM6CON0        equ	1564	;# 
  2496     061F                     PWMTMRS         equ	1567	;# 
  2497     0691                     CWG1CLKCON      equ	1681	;# 
  2498     0692                     CWG1DAT         equ	1682	;# 
  2499     0693                     CWG1DBR         equ	1683	;# 
  2500     0694                     CWG1DBF         equ	1684	;# 
  2501     0695                     CWG1CON0        equ	1685	;# 
  2502     0696                     CWG1CON1        equ	1686	;# 
  2503     0697                     CWG1AS0         equ	1687	;# 
  2504     0698                     CWG1AS1         equ	1688	;# 
  2505     0699                     CWG1STR         equ	1689	;# 
  2506     0711                     CWG2CLKCON      equ	1809	;# 
  2507     0712                     CWG2DAT         equ	1810	;# 
  2508     0713                     CWG2DBR         equ	1811	;# 
  2509     0714                     CWG2DBF         equ	1812	;# 
  2510     0715                     CWG2CON0        equ	1813	;# 
  2511     0716                     CWG2CON1        equ	1814	;# 
  2512     0717                     CWG2AS0         equ	1815	;# 
  2513     0718                     CWG2AS1         equ	1816	;# 
  2514     0719                     CWG2STR         equ	1817	;# 
  2515     0891                     NVMADR          equ	2193	;# 
  2516     0891                     EEADR           equ	2193	;# 
  2517     0891                     PMADR           equ	2193	;# 
  2518     0891                     NVMADRL         equ	2193	;# 
  2519     0891                     EEADRL          equ	2193	;# 
  2520     0891                     PMADRL          equ	2193	;# 
  2521     0892                     NVMADRH         equ	2194	;# 
  2522     0892                     EEADRH          equ	2194	;# 
  2523     0892                     PMADRH          equ	2194	;# 
  2524     0893                     NVMDAT          equ	2195	;# 
  2525     0893                     EEDAT           equ	2195	;# 
  2526     0893                     PMDAT           equ	2195	;# 
  2527     0893                     NVMDATL         equ	2195	;# 
  2528     0893                     EEDATL          equ	2195	;# 
  2529     0893                     PMDATL          equ	2195	;# 
  2530     0894                     NVMDATH         equ	2196	;# 
  2531     0894                     EEDATH          equ	2196	;# 
  2532     0894                     PMDATH          equ	2196	;# 
  2533     0895                     NVMCON1         equ	2197	;# 
  2534     0895                     EECON1          equ	2197	;# 
  2535     0895                     PMCON1          equ	2197	;# 
  2536     0896                     NVMCON2         equ	2198	;# 
  2537     0896                     EECON2          equ	2198	;# 
  2538     0896                     PMCON2          equ	2198	;# 
  2539     089B                     PCON0           equ	2203	;# 
  2540     0911                     PMD0            equ	2321	;# 
  2541     0912                     PMD1            equ	2322	;# 
  2542     0913                     PMD2            equ	2323	;# 
  2543     0914                     PMD3            equ	2324	;# 
  2544     0915                     PMD4            equ	2325	;# 
  2545     0916                     PMD5            equ	2326	;# 
  2546     0918                     CPUDOZE         equ	2328	;# 
  2547     0919                     OSCCON1         equ	2329	;# 
  2548     091A                     OSCCON2         equ	2330	;# 
  2549     091B                     OSCCON3         equ	2331	;# 
  2550     091C                     OSCSTAT1        equ	2332	;# 
  2551     091D                     OSCEN           equ	2333	;# 
  2552     091E                     OSCTUNE         equ	2334	;# 
  2553     091F                     OSCFRQ          equ	2335	;# 
  2554     0E0F                     PPSLOCK         equ	3599	;# 
  2555     0E10                     INTPPS          equ	3600	;# 
  2556     0E11                     T0CKIPPS        equ	3601	;# 
  2557     0E12                     T1CKIPPS        equ	3602	;# 
  2558     0E13                     T1GPPS          equ	3603	;# 
  2559     0E14                     CCP1PPS         equ	3604	;# 
  2560     0E15                     CCP2PPS         equ	3605	;# 
  2561     0E16                     CCP3PPS         equ	3606	;# 
  2562     0E17                     CCP4PPS         equ	3607	;# 
  2563     0E18                     CWG1PPS         equ	3608	;# 
  2564     0E19                     CWG2PPS         equ	3609	;# 
  2565     0E1A                     MDCIN1PPS       equ	3610	;# 
  2566     0E1B                     MDCIN2PPS       equ	3611	;# 
  2567     0E1C                     MDMINPPS        equ	3612	;# 
  2568     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2569     0E1E                     SSP2DATPPS      equ	3614	;# 
  2570     0E1F                     SSP2SSPPS       equ	3615	;# 
  2571     0E20                     SSP1CLKPPS      equ	3616	;# 
  2572     0E21                     SSP1DATPPS      equ	3617	;# 
  2573     0E22                     SSP1SSPPS       equ	3618	;# 
  2574     0E24                     RXPPS           equ	3620	;# 
  2575     0E25                     TXPPS           equ	3621	;# 
  2576     0E28                     CLCIN0PPS       equ	3624	;# 
  2577     0E29                     CLCIN1PPS       equ	3625	;# 
  2578     0E2A                     CLCIN2PPS       equ	3626	;# 
  2579     0E2B                     CLCIN3PPS       equ	3627	;# 
  2580     0E2C                     T3CKIPPS        equ	3628	;# 
  2581     0E2D                     T3GPPS          equ	3629	;# 
  2582     0E2E                     T5CKIPPS        equ	3630	;# 
  2583     0E2F                     T5GPPS          equ	3631	;# 
  2584     0E90                     RA0PPS          equ	3728	;# 
  2585     0E91                     RA1PPS          equ	3729	;# 
  2586     0E92                     RA2PPS          equ	3730	;# 
  2587     0E94                     RA4PPS          equ	3732	;# 
  2588     0E95                     RA5PPS          equ	3733	;# 
  2589     0E9C                     RB4PPS          equ	3740	;# 
  2590     0E9D                     RB5PPS          equ	3741	;# 
  2591     0E9E                     RB6PPS          equ	3742	;# 
  2592     0E9F                     RB7PPS          equ	3743	;# 
  2593     0EA0                     RC0PPS          equ	3744	;# 
  2594     0EA1                     RC1PPS          equ	3745	;# 
  2595     0EA2                     RC2PPS          equ	3746	;# 
  2596     0EA3                     RC3PPS          equ	3747	;# 
  2597     0EA4                     RC4PPS          equ	3748	;# 
  2598     0EA5                     RC5PPS          equ	3749	;# 
  2599     0EA6                     RC6PPS          equ	3750	;# 
  2600     0EA7                     RC7PPS          equ	3751	;# 
  2601     0F0F                     CLCDATA         equ	3855	;# 
  2602     0F10                     CLC1CON         equ	3856	;# 
  2603     0F11                     CLC1POL         equ	3857	;# 
  2604     0F12                     CLC1SEL0        equ	3858	;# 
  2605     0F13                     CLC1SEL1        equ	3859	;# 
  2606     0F14                     CLC1SEL2        equ	3860	;# 
  2607     0F15                     CLC1SEL3        equ	3861	;# 
  2608     0F16                     CLC1GLS0        equ	3862	;# 
  2609     0F17                     CLC1GLS1        equ	3863	;# 
  2610     0F18                     CLC1GLS2        equ	3864	;# 
  2611     0F19                     CLC1GLS3        equ	3865	;# 
  2612     0F1A                     CLC2CON         equ	3866	;# 
  2613     0F1B                     CLC2POL         equ	3867	;# 
  2614     0F1C                     CLC2SEL0        equ	3868	;# 
  2615     0F1D                     CLC2SEL1        equ	3869	;# 
  2616     0F1E                     CLC2SEL2        equ	3870	;# 
  2617     0F1F                     CLC2SEL3        equ	3871	;# 
  2618     0F20                     CLC2GLS0        equ	3872	;# 
  2619     0F21                     CLC2GLS1        equ	3873	;# 
  2620     0F22                     CLC2GLS2        equ	3874	;# 
  2621     0F23                     CLC2GLS3        equ	3875	;# 
  2622     0F24                     CLC3CON         equ	3876	;# 
  2623     0F25                     CLC3POL         equ	3877	;# 
  2624     0F26                     CLC3SEL0        equ	3878	;# 
  2625     0F27                     CLC3SEL1        equ	3879	;# 
  2626     0F28                     CLC3SEL2        equ	3880	;# 
  2627     0F29                     CLC3SEL3        equ	3881	;# 
  2628     0F2A                     CLC3GLS0        equ	3882	;# 
  2629     0F2B                     CLC3GLS1        equ	3883	;# 
  2630     0F2C                     CLC3GLS2        equ	3884	;# 
  2631     0F2D                     CLC3GLS3        equ	3885	;# 
  2632     0F2E                     CLC4CON         equ	3886	;# 
  2633     0F2F                     CLC4POL         equ	3887	;# 
  2634     0F30                     CLC4SEL0        equ	3888	;# 
  2635     0F31                     CLC4SEL1        equ	3889	;# 
  2636     0F32                     CLC4SEL2        equ	3890	;# 
  2637     0F33                     CLC4SEL3        equ	3891	;# 
  2638     0F34                     CLC4GLS0        equ	3892	;# 
  2639     0F35                     CLC4GLS1        equ	3893	;# 
  2640     0F36                     CLC4GLS2        equ	3894	;# 
  2641     0F37                     CLC4GLS3        equ	3895	;# 
  2642     0FE4                     STATUS_SHAD     equ	4068	;# 
  2643     0FE5                     WREG_SHAD       equ	4069	;# 
  2644     0FE6                     BSR_SHAD        equ	4070	;# 
  2645     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2646     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2647     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2648     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2649     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2650     0FED                     STKPTR          equ	4077	;# 
  2651     0FEE                     TOSL            equ	4078	;# 
  2652     0FEF                     TOSH            equ	4079	;# 
  2653     0000                     INDF0           equ	0	;# 
  2654     0001                     INDF1           equ	1	;# 
  2655     0002                     PCL             equ	2	;# 
  2656     0003                     STATUS          equ	3	;# 
  2657     0004                     FSR0L           equ	4	;# 
  2658     0005                     FSR0H           equ	5	;# 
  2659     0006                     FSR1L           equ	6	;# 
  2660     0007                     FSR1H           equ	7	;# 
  2661     0008                     BSR             equ	8	;# 
  2662     0009                     WREG            equ	9	;# 
  2663     000A                     PCLATH          equ	10	;# 
  2664     000B                     INTCON          equ	11	;# 
  2665     000C                     PORTA           equ	12	;# 
  2666     000D                     PORTB           equ	13	;# 
  2667     000E                     PORTC           equ	14	;# 
  2668     0010                     PIR0            equ	16	;# 
  2669     0011                     PIR1            equ	17	;# 
  2670     0012                     PIR2            equ	18	;# 
  2671     0013                     PIR3            equ	19	;# 
  2672     0014                     PIR4            equ	20	;# 
  2673     0015                     TMR0L           equ	21	;# 
  2674     0015                     TMR0            equ	21	;# 
  2675     0016                     TMR0H           equ	22	;# 
  2676     0016                     PR0             equ	22	;# 
  2677     0017                     T0CON0          equ	23	;# 
  2678     0018                     T0CON1          equ	24	;# 
  2679     0019                     TMR1            equ	25	;# 
  2680     0019                     TMR1L           equ	25	;# 
  2681     001A                     TMR1H           equ	26	;# 
  2682     001B                     T1CON           equ	27	;# 
  2683     001C                     T1GCON          equ	28	;# 
  2684     001D                     TMR2            equ	29	;# 
  2685     001E                     PR2             equ	30	;# 
  2686     001F                     T2CON           equ	31	;# 
  2687     008C                     TRISA           equ	140	;# 
  2688     008D                     TRISB           equ	141	;# 
  2689     008E                     TRISC           equ	142	;# 
  2690     0090                     PIE0            equ	144	;# 
  2691     0091                     PIE1            equ	145	;# 
  2692     0092                     PIE2            equ	146	;# 
  2693     0093                     PIE3            equ	147	;# 
  2694     0094                     PIE4            equ	148	;# 
  2695     0097                     WDTCON          equ	151	;# 
  2696     009B                     ADRES           equ	155	;# 
  2697     009B                     ADRESL          equ	155	;# 
  2698     009C                     ADRESH          equ	156	;# 
  2699     009D                     ADCON0          equ	157	;# 
  2700     009E                     ADCON1          equ	158	;# 
  2701     009F                     ADACT           equ	159	;# 
  2702     010C                     LATA            equ	268	;# 
  2703     010D                     LATB            equ	269	;# 
  2704     010E                     LATC            equ	270	;# 
  2705     0111                     CM1CON0         equ	273	;# 
  2706     0112                     CM1CON1         equ	274	;# 
  2707     0113                     CM2CON0         equ	275	;# 
  2708     0114                     CM2CON1         equ	276	;# 
  2709     0115                     CMOUT           equ	277	;# 
  2710     0116                     BORCON          equ	278	;# 
  2711     0117                     FVRCON          equ	279	;# 
  2712     0118                     DACCON0         equ	280	;# 
  2713     0119                     DACCON1         equ	281	;# 
  2714     018C                     ANSELA          equ	396	;# 
  2715     018D                     ANSELB          equ	397	;# 
  2716     018E                     ANSELC          equ	398	;# 
  2717     0197                     VREGCON         equ	407	;# 
  2718     0199                     RC1REG          equ	409	;# 
  2719     0199                     RCREG           equ	409	;# 
  2720     0199                     RCREG1          equ	409	;# 
  2721     019A                     TX1REG          equ	410	;# 
  2722     019A                     TXREG1          equ	410	;# 
  2723     019A                     TXREG           equ	410	;# 
  2724     019B                     SP1BRG          equ	411	;# 
  2725     019B                     SPBRG           equ	411	;# 
  2726     019B                     SP1BRGL         equ	411	;# 
  2727     019B                     SPBRG1          equ	411	;# 
  2728     019B                     SPBRGL          equ	411	;# 
  2729     019C                     SP1BRGH         equ	412	;# 
  2730     019C                     SPBRGH          equ	412	;# 
  2731     019C                     SPBRGH1         equ	412	;# 
  2732     019D                     RC1STA          equ	413	;# 
  2733     019D                     RCSTA1          equ	413	;# 
  2734     019D                     RCSTA           equ	413	;# 
  2735     019E                     TX1STA          equ	414	;# 
  2736     019E                     TXSTA1          equ	414	;# 
  2737     019E                     TXSTA           equ	414	;# 
  2738     019F                     BAUD1CON        equ	415	;# 
  2739     019F                     BAUDCON1        equ	415	;# 
  2740     019F                     BAUDCTL1        equ	415	;# 
  2741     019F                     BAUDCON         equ	415	;# 
  2742     019F                     BAUDCTL         equ	415	;# 
  2743     020C                     WPUA            equ	524	;# 
  2744     020D                     WPUB            equ	525	;# 
  2745     020E                     WPUC            equ	526	;# 
  2746     0211                     SSP1BUF         equ	529	;# 
  2747     0211                     SSPBUF          equ	529	;# 
  2748     0212                     SSP1ADD         equ	530	;# 
  2749     0212                     SSPADD          equ	530	;# 
  2750     0213                     SSP1MSK         equ	531	;# 
  2751     0213                     SSPMSK          equ	531	;# 
  2752     0214                     SSP1STAT        equ	532	;# 
  2753     0214                     SSPSTAT         equ	532	;# 
  2754     0215                     SSP1CON1        equ	533	;# 
  2755     0215                     SSPCON          equ	533	;# 
  2756     0215                     SSPCON1         equ	533	;# 
  2757     0215                     SSP1CON         equ	533	;# 
  2758     0216                     SSP1CON2        equ	534	;# 
  2759     0216                     SSPCON2         equ	534	;# 
  2760     0217                     SSP1CON3        equ	535	;# 
  2761     0217                     SSPCON3         equ	535	;# 
  2762     0219                     SSP2BUF         equ	537	;# 
  2763     021A                     SSP2ADD         equ	538	;# 
  2764     021B                     SSP2MSK         equ	539	;# 
  2765     021C                     SSP2STAT        equ	540	;# 
  2766     021D                     SSP2CON1        equ	541	;# 
  2767     021D                     SSP2CON         equ	541	;# 
  2768     021E                     SSP2CON2        equ	542	;# 
  2769     021F                     SSP2CON3        equ	543	;# 
  2770     028C                     ODCONA          equ	652	;# 
  2771     028D                     ODCONB          equ	653	;# 
  2772     028E                     ODCONC          equ	654	;# 
  2773     0291                     CCPR1           equ	657	;# 
  2774     0291                     CCPR1L          equ	657	;# 
  2775     0292                     CCPR1H          equ	658	;# 
  2776     0293                     CCP1CON         equ	659	;# 
  2777     0294                     CCP1CAP         equ	660	;# 
  2778     0295                     CCPR2           equ	661	;# 
  2779     0295                     CCPR2L          equ	661	;# 
  2780     0296                     CCPR2H          equ	662	;# 
  2781     0297                     CCP2CON         equ	663	;# 
  2782     0298                     CCP2CAP         equ	664	;# 
  2783     029F                     CCPTMRS         equ	671	;# 
  2784     030C                     SLRCONA         equ	780	;# 
  2785     030D                     SLRCONB         equ	781	;# 
  2786     030E                     SLRCONC         equ	782	;# 
  2787     0311                     CCPR3           equ	785	;# 
  2788     0311                     CCPR3L          equ	785	;# 
  2789     0312                     CCPR3H          equ	786	;# 
  2790     0313                     CCP3CON         equ	787	;# 
  2791     0314                     CCP3CAP         equ	788	;# 
  2792     0315                     CCPR4           equ	789	;# 
  2793     0315                     CCPR4L          equ	789	;# 
  2794     0316                     CCPR4H          equ	790	;# 
  2795     0317                     CCP4CON         equ	791	;# 
  2796     0318                     CCP4CAP         equ	792	;# 
  2797     038C                     INLVLA          equ	908	;# 
  2798     038D                     INLVLB          equ	909	;# 
  2799     038E                     INLVLC          equ	910	;# 
  2800     0391                     IOCAP           equ	913	;# 
  2801     0392                     IOCAN           equ	914	;# 
  2802     0393                     IOCAF           equ	915	;# 
  2803     0394                     IOCBP           equ	916	;# 
  2804     0395                     IOCBN           equ	917	;# 
  2805     0396                     IOCBF           equ	918	;# 
  2806     0397                     IOCCP           equ	919	;# 
  2807     0398                     IOCCN           equ	920	;# 
  2808     0399                     IOCCF           equ	921	;# 
  2809     039A                     CLKRCON         equ	922	;# 
  2810     039C                     MDCON           equ	924	;# 
  2811     039D                     MDSRC           equ	925	;# 
  2812     039E                     MDCARH          equ	926	;# 
  2813     039F                     MDCARL          equ	927	;# 
  2814     0411                     TMR3            equ	1041	;# 
  2815     0411                     TMR3L           equ	1041	;# 
  2816     0412                     TMR3H           equ	1042	;# 
  2817     0413                     T3CON           equ	1043	;# 
  2818     0414                     T3GCON          equ	1044	;# 
  2819     0415                     TMR4            equ	1045	;# 
  2820     0416                     PR4             equ	1046	;# 
  2821     0417                     T4CON           equ	1047	;# 
  2822     0418                     TMR5            equ	1048	;# 
  2823     0418                     TMR5L           equ	1048	;# 
  2824     0419                     TMR5H           equ	1049	;# 
  2825     041A                     T5CON           equ	1050	;# 
  2826     041B                     T5GCON          equ	1051	;# 
  2827     041C                     TMR6            equ	1052	;# 
  2828     041D                     PR6             equ	1053	;# 
  2829     041E                     T6CON           equ	1054	;# 
  2830     041F                     CCDCON          equ	1055	;# 
  2831     0498                     NCO1ACC         equ	1176	;# 
  2832     0498                     NCO1ACCL        equ	1176	;# 
  2833     0499                     NCO1ACCH        equ	1177	;# 
  2834     049A                     NCO1ACCU        equ	1178	;# 
  2835     049B                     NCO1INC         equ	1179	;# 
  2836     049B                     NCO1INCL        equ	1179	;# 
  2837     049C                     NCO1INCH        equ	1180	;# 
  2838     049D                     NCO1INCU        equ	1181	;# 
  2839     049E                     NCO1CON         equ	1182	;# 
  2840     049F                     NCO1CLK         equ	1183	;# 
  2841     0617                     PWM5DCL         equ	1559	;# 
  2842     0618                     PWM5DCH         equ	1560	;# 
  2843     0619                     PWM5CON         equ	1561	;# 
  2844     0619                     PWM5CON0        equ	1561	;# 
  2845     061A                     PWM6DCL         equ	1562	;# 
  2846     061B                     PWM6DCH         equ	1563	;# 
  2847     061C                     PWM6CON         equ	1564	;# 
  2848     061C                     PWM6CON0        equ	1564	;# 
  2849     061F                     PWMTMRS         equ	1567	;# 
  2850     0691                     CWG1CLKCON      equ	1681	;# 
  2851     0692                     CWG1DAT         equ	1682	;# 
  2852     0693                     CWG1DBR         equ	1683	;# 
  2853     0694                     CWG1DBF         equ	1684	;# 
  2854     0695                     CWG1CON0        equ	1685	;# 
  2855     0696                     CWG1CON1        equ	1686	;# 
  2856     0697                     CWG1AS0         equ	1687	;# 
  2857     0698                     CWG1AS1         equ	1688	;# 
  2858     0699                     CWG1STR         equ	1689	;# 
  2859     0711                     CWG2CLKCON      equ	1809	;# 
  2860     0712                     CWG2DAT         equ	1810	;# 
  2861     0713                     CWG2DBR         equ	1811	;# 
  2862     0714                     CWG2DBF         equ	1812	;# 
  2863     0715                     CWG2CON0        equ	1813	;# 
  2864     0716                     CWG2CON1        equ	1814	;# 
  2865     0717                     CWG2AS0         equ	1815	;# 
  2866     0718                     CWG2AS1         equ	1816	;# 
  2867     0719                     CWG2STR         equ	1817	;# 
  2868     0891                     NVMADR          equ	2193	;# 
  2869     0891                     EEADR           equ	2193	;# 
  2870     0891                     PMADR           equ	2193	;# 
  2871     0891                     NVMADRL         equ	2193	;# 
  2872     0891                     EEADRL          equ	2193	;# 
  2873     0891                     PMADRL          equ	2193	;# 
  2874     0892                     NVMADRH         equ	2194	;# 
  2875     0892                     EEADRH          equ	2194	;# 
  2876     0892                     PMADRH          equ	2194	;# 
  2877     0893                     NVMDAT          equ	2195	;# 
  2878     0893                     EEDAT           equ	2195	;# 
  2879     0893                     PMDAT           equ	2195	;# 
  2880     0893                     NVMDATL         equ	2195	;# 
  2881     0893                     EEDATL          equ	2195	;# 
  2882     0893                     PMDATL          equ	2195	;# 
  2883     0894                     NVMDATH         equ	2196	;# 
  2884     0894                     EEDATH          equ	2196	;# 
  2885     0894                     PMDATH          equ	2196	;# 
  2886     0895                     NVMCON1         equ	2197	;# 
  2887     0895                     EECON1          equ	2197	;# 
  2888     0895                     PMCON1          equ	2197	;# 
  2889     0896                     NVMCON2         equ	2198	;# 
  2890     0896                     EECON2          equ	2198	;# 
  2891     0896                     PMCON2          equ	2198	;# 
  2892     089B                     PCON0           equ	2203	;# 
  2893     0911                     PMD0            equ	2321	;# 
  2894     0912                     PMD1            equ	2322	;# 
  2895     0913                     PMD2            equ	2323	;# 
  2896     0914                     PMD3            equ	2324	;# 
  2897     0915                     PMD4            equ	2325	;# 
  2898     0916                     PMD5            equ	2326	;# 
  2899     0918                     CPUDOZE         equ	2328	;# 
  2900     0919                     OSCCON1         equ	2329	;# 
  2901     091A                     OSCCON2         equ	2330	;# 
  2902     091B                     OSCCON3         equ	2331	;# 
  2903     091C                     OSCSTAT1        equ	2332	;# 
  2904     091D                     OSCEN           equ	2333	;# 
  2905     091E                     OSCTUNE         equ	2334	;# 
  2906     091F                     OSCFRQ          equ	2335	;# 
  2907     0E0F                     PPSLOCK         equ	3599	;# 
  2908     0E10                     INTPPS          equ	3600	;# 
  2909     0E11                     T0CKIPPS        equ	3601	;# 
  2910     0E12                     T1CKIPPS        equ	3602	;# 
  2911     0E13                     T1GPPS          equ	3603	;# 
  2912     0E14                     CCP1PPS         equ	3604	;# 
  2913     0E15                     CCP2PPS         equ	3605	;# 
  2914     0E16                     CCP3PPS         equ	3606	;# 
  2915     0E17                     CCP4PPS         equ	3607	;# 
  2916     0E18                     CWG1PPS         equ	3608	;# 
  2917     0E19                     CWG2PPS         equ	3609	;# 
  2918     0E1A                     MDCIN1PPS       equ	3610	;# 
  2919     0E1B                     MDCIN2PPS       equ	3611	;# 
  2920     0E1C                     MDMINPPS        equ	3612	;# 
  2921     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2922     0E1E                     SSP2DATPPS      equ	3614	;# 
  2923     0E1F                     SSP2SSPPS       equ	3615	;# 
  2924     0E20                     SSP1CLKPPS      equ	3616	;# 
  2925     0E21                     SSP1DATPPS      equ	3617	;# 
  2926     0E22                     SSP1SSPPS       equ	3618	;# 
  2927     0E24                     RXPPS           equ	3620	;# 
  2928     0E25                     TXPPS           equ	3621	;# 
  2929     0E28                     CLCIN0PPS       equ	3624	;# 
  2930     0E29                     CLCIN1PPS       equ	3625	;# 
  2931     0E2A                     CLCIN2PPS       equ	3626	;# 
  2932     0E2B                     CLCIN3PPS       equ	3627	;# 
  2933     0E2C                     T3CKIPPS        equ	3628	;# 
  2934     0E2D                     T3GPPS          equ	3629	;# 
  2935     0E2E                     T5CKIPPS        equ	3630	;# 
  2936     0E2F                     T5GPPS          equ	3631	;# 
  2937     0E90                     RA0PPS          equ	3728	;# 
  2938     0E91                     RA1PPS          equ	3729	;# 
  2939     0E92                     RA2PPS          equ	3730	;# 
  2940     0E94                     RA4PPS          equ	3732	;# 
  2941     0E95                     RA5PPS          equ	3733	;# 
  2942     0E9C                     RB4PPS          equ	3740	;# 
  2943     0E9D                     RB5PPS          equ	3741	;# 
  2944     0E9E                     RB6PPS          equ	3742	;# 
  2945     0E9F                     RB7PPS          equ	3743	;# 
  2946     0EA0                     RC0PPS          equ	3744	;# 
  2947     0EA1                     RC1PPS          equ	3745	;# 
  2948     0EA2                     RC2PPS          equ	3746	;# 
  2949     0EA3                     RC3PPS          equ	3747	;# 
  2950     0EA4                     RC4PPS          equ	3748	;# 
  2951     0EA5                     RC5PPS          equ	3749	;# 
  2952     0EA6                     RC6PPS          equ	3750	;# 
  2953     0EA7                     RC7PPS          equ	3751	;# 
  2954     0F0F                     CLCDATA         equ	3855	;# 
  2955     0F10                     CLC1CON         equ	3856	;# 
  2956     0F11                     CLC1POL         equ	3857	;# 
  2957     0F12                     CLC1SEL0        equ	3858	;# 
  2958     0F13                     CLC1SEL1        equ	3859	;# 
  2959     0F14                     CLC1SEL2        equ	3860	;# 
  2960     0F15                     CLC1SEL3        equ	3861	;# 
  2961     0F16                     CLC1GLS0        equ	3862	;# 
  2962     0F17                     CLC1GLS1        equ	3863	;# 
  2963     0F18                     CLC1GLS2        equ	3864	;# 
  2964     0F19                     CLC1GLS3        equ	3865	;# 
  2965     0F1A                     CLC2CON         equ	3866	;# 
  2966     0F1B                     CLC2POL         equ	3867	;# 
  2967     0F1C                     CLC2SEL0        equ	3868	;# 
  2968     0F1D                     CLC2SEL1        equ	3869	;# 
  2969     0F1E                     CLC2SEL2        equ	3870	;# 
  2970     0F1F                     CLC2SEL3        equ	3871	;# 
  2971     0F20                     CLC2GLS0        equ	3872	;# 
  2972     0F21                     CLC2GLS1        equ	3873	;# 
  2973     0F22                     CLC2GLS2        equ	3874	;# 
  2974     0F23                     CLC2GLS3        equ	3875	;# 
  2975     0F24                     CLC3CON         equ	3876	;# 
  2976     0F25                     CLC3POL         equ	3877	;# 
  2977     0F26                     CLC3SEL0        equ	3878	;# 
  2978     0F27                     CLC3SEL1        equ	3879	;# 
  2979     0F28                     CLC3SEL2        equ	3880	;# 
  2980     0F29                     CLC3SEL3        equ	3881	;# 
  2981     0F2A                     CLC3GLS0        equ	3882	;# 
  2982     0F2B                     CLC3GLS1        equ	3883	;# 
  2983     0F2C                     CLC3GLS2        equ	3884	;# 
  2984     0F2D                     CLC3GLS3        equ	3885	;# 
  2985     0F2E                     CLC4CON         equ	3886	;# 
  2986     0F2F                     CLC4POL         equ	3887	;# 
  2987     0F30                     CLC4SEL0        equ	3888	;# 
  2988     0F31                     CLC4SEL1        equ	3889	;# 
  2989     0F32                     CLC4SEL2        equ	3890	;# 
  2990     0F33                     CLC4SEL3        equ	3891	;# 
  2991     0F34                     CLC4GLS0        equ	3892	;# 
  2992     0F35                     CLC4GLS1        equ	3893	;# 
  2993     0F36                     CLC4GLS2        equ	3894	;# 
  2994     0F37                     CLC4GLS3        equ	3895	;# 
  2995     0FE4                     STATUS_SHAD     equ	4068	;# 
  2996     0FE5                     WREG_SHAD       equ	4069	;# 
  2997     0FE6                     BSR_SHAD        equ	4070	;# 
  2998     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2999     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3000     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3001     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3002     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3003     0FED                     STKPTR          equ	4077	;# 
  3004     0FEE                     TOSL            equ	4078	;# 
  3005     0FEF                     TOSH            equ	4079	;# 
  3006     0000                     INDF0           equ	0	;# 
  3007     0001                     INDF1           equ	1	;# 
  3008     0002                     PCL             equ	2	;# 
  3009     0003                     STATUS          equ	3	;# 
  3010     0004                     FSR0L           equ	4	;# 
  3011     0005                     FSR0H           equ	5	;# 
  3012     0006                     FSR1L           equ	6	;# 
  3013     0007                     FSR1H           equ	7	;# 
  3014     0008                     BSR             equ	8	;# 
  3015     0009                     WREG            equ	9	;# 
  3016     000A                     PCLATH          equ	10	;# 
  3017     000B                     INTCON          equ	11	;# 
  3018     000C                     PORTA           equ	12	;# 
  3019     000D                     PORTB           equ	13	;# 
  3020     000E                     PORTC           equ	14	;# 
  3021     0010                     PIR0            equ	16	;# 
  3022     0011                     PIR1            equ	17	;# 
  3023     0012                     PIR2            equ	18	;# 
  3024     0013                     PIR3            equ	19	;# 
  3025     0014                     PIR4            equ	20	;# 
  3026     0015                     TMR0L           equ	21	;# 
  3027     0015                     TMR0            equ	21	;# 
  3028     0016                     TMR0H           equ	22	;# 
  3029     0016                     PR0             equ	22	;# 
  3030     0017                     T0CON0          equ	23	;# 
  3031     0018                     T0CON1          equ	24	;# 
  3032     0019                     TMR1            equ	25	;# 
  3033     0019                     TMR1L           equ	25	;# 
  3034     001A                     TMR1H           equ	26	;# 
  3035     001B                     T1CON           equ	27	;# 
  3036     001C                     T1GCON          equ	28	;# 
  3037     001D                     TMR2            equ	29	;# 
  3038     001E                     PR2             equ	30	;# 
  3039     001F                     T2CON           equ	31	;# 
  3040     008C                     TRISA           equ	140	;# 
  3041     008D                     TRISB           equ	141	;# 
  3042     008E                     TRISC           equ	142	;# 
  3043     0090                     PIE0            equ	144	;# 
  3044     0091                     PIE1            equ	145	;# 
  3045     0092                     PIE2            equ	146	;# 
  3046     0093                     PIE3            equ	147	;# 
  3047     0094                     PIE4            equ	148	;# 
  3048     0097                     WDTCON          equ	151	;# 
  3049     009B                     ADRES           equ	155	;# 
  3050     009B                     ADRESL          equ	155	;# 
  3051     009C                     ADRESH          equ	156	;# 
  3052     009D                     ADCON0          equ	157	;# 
  3053     009E                     ADCON1          equ	158	;# 
  3054     009F                     ADACT           equ	159	;# 
  3055     010C                     LATA            equ	268	;# 
  3056     010D                     LATB            equ	269	;# 
  3057     010E                     LATC            equ	270	;# 
  3058     0111                     CM1CON0         equ	273	;# 
  3059     0112                     CM1CON1         equ	274	;# 
  3060     0113                     CM2CON0         equ	275	;# 
  3061     0114                     CM2CON1         equ	276	;# 
  3062     0115                     CMOUT           equ	277	;# 
  3063     0116                     BORCON          equ	278	;# 
  3064     0117                     FVRCON          equ	279	;# 
  3065     0118                     DACCON0         equ	280	;# 
  3066     0119                     DACCON1         equ	281	;# 
  3067     018C                     ANSELA          equ	396	;# 
  3068     018D                     ANSELB          equ	397	;# 
  3069     018E                     ANSELC          equ	398	;# 
  3070     0197                     VREGCON         equ	407	;# 
  3071     0199                     RC1REG          equ	409	;# 
  3072     0199                     RCREG           equ	409	;# 
  3073     0199                     RCREG1          equ	409	;# 
  3074     019A                     TX1REG          equ	410	;# 
  3075     019A                     TXREG1          equ	410	;# 
  3076     019A                     TXREG           equ	410	;# 
  3077     019B                     SP1BRG          equ	411	;# 
  3078     019B                     SPBRG           equ	411	;# 
  3079     019B                     SP1BRGL         equ	411	;# 
  3080     019B                     SPBRG1          equ	411	;# 
  3081     019B                     SPBRGL          equ	411	;# 
  3082     019C                     SP1BRGH         equ	412	;# 
  3083     019C                     SPBRGH          equ	412	;# 
  3084     019C                     SPBRGH1         equ	412	;# 
  3085     019D                     RC1STA          equ	413	;# 
  3086     019D                     RCSTA1          equ	413	;# 
  3087     019D                     RCSTA           equ	413	;# 
  3088     019E                     TX1STA          equ	414	;# 
  3089     019E                     TXSTA1          equ	414	;# 
  3090     019E                     TXSTA           equ	414	;# 
  3091     019F                     BAUD1CON        equ	415	;# 
  3092     019F                     BAUDCON1        equ	415	;# 
  3093     019F                     BAUDCTL1        equ	415	;# 
  3094     019F                     BAUDCON         equ	415	;# 
  3095     019F                     BAUDCTL         equ	415	;# 
  3096     020C                     WPUA            equ	524	;# 
  3097     020D                     WPUB            equ	525	;# 
  3098     020E                     WPUC            equ	526	;# 
  3099     0211                     SSP1BUF         equ	529	;# 
  3100     0211                     SSPBUF          equ	529	;# 
  3101     0212                     SSP1ADD         equ	530	;# 
  3102     0212                     SSPADD          equ	530	;# 
  3103     0213                     SSP1MSK         equ	531	;# 
  3104     0213                     SSPMSK          equ	531	;# 
  3105     0214                     SSP1STAT        equ	532	;# 
  3106     0214                     SSPSTAT         equ	532	;# 
  3107     0215                     SSP1CON1        equ	533	;# 
  3108     0215                     SSPCON          equ	533	;# 
  3109     0215                     SSPCON1         equ	533	;# 
  3110     0215                     SSP1CON         equ	533	;# 
  3111     0216                     SSP1CON2        equ	534	;# 
  3112     0216                     SSPCON2         equ	534	;# 
  3113     0217                     SSP1CON3        equ	535	;# 
  3114     0217                     SSPCON3         equ	535	;# 
  3115     0219                     SSP2BUF         equ	537	;# 
  3116     021A                     SSP2ADD         equ	538	;# 
  3117     021B                     SSP2MSK         equ	539	;# 
  3118     021C                     SSP2STAT        equ	540	;# 
  3119     021D                     SSP2CON1        equ	541	;# 
  3120     021D                     SSP2CON         equ	541	;# 
  3121     021E                     SSP2CON2        equ	542	;# 
  3122     021F                     SSP2CON3        equ	543	;# 
  3123     028C                     ODCONA          equ	652	;# 
  3124     028D                     ODCONB          equ	653	;# 
  3125     028E                     ODCONC          equ	654	;# 
  3126     0291                     CCPR1           equ	657	;# 
  3127     0291                     CCPR1L          equ	657	;# 
  3128     0292                     CCPR1H          equ	658	;# 
  3129     0293                     CCP1CON         equ	659	;# 
  3130     0294                     CCP1CAP         equ	660	;# 
  3131     0295                     CCPR2           equ	661	;# 
  3132     0295                     CCPR2L          equ	661	;# 
  3133     0296                     CCPR2H          equ	662	;# 
  3134     0297                     CCP2CON         equ	663	;# 
  3135     0298                     CCP2CAP         equ	664	;# 
  3136     029F                     CCPTMRS         equ	671	;# 
  3137     030C                     SLRCONA         equ	780	;# 
  3138     030D                     SLRCONB         equ	781	;# 
  3139     030E                     SLRCONC         equ	782	;# 
  3140     0311                     CCPR3           equ	785	;# 
  3141     0311                     CCPR3L          equ	785	;# 
  3142     0312                     CCPR3H          equ	786	;# 
  3143     0313                     CCP3CON         equ	787	;# 
  3144     0314                     CCP3CAP         equ	788	;# 
  3145     0315                     CCPR4           equ	789	;# 
  3146     0315                     CCPR4L          equ	789	;# 
  3147     0316                     CCPR4H          equ	790	;# 
  3148     0317                     CCP4CON         equ	791	;# 
  3149     0318                     CCP4CAP         equ	792	;# 
  3150     038C                     INLVLA          equ	908	;# 
  3151     038D                     INLVLB          equ	909	;# 
  3152     038E                     INLVLC          equ	910	;# 
  3153     0391                     IOCAP           equ	913	;# 
  3154     0392                     IOCAN           equ	914	;# 
  3155     0393                     IOCAF           equ	915	;# 
  3156     0394                     IOCBP           equ	916	;# 
  3157     0395                     IOCBN           equ	917	;# 
  3158     0396                     IOCBF           equ	918	;# 
  3159     0397                     IOCCP           equ	919	;# 
  3160     0398                     IOCCN           equ	920	;# 
  3161     0399                     IOCCF           equ	921	;# 
  3162     039A                     CLKRCON         equ	922	;# 
  3163     039C                     MDCON           equ	924	;# 
  3164     039D                     MDSRC           equ	925	;# 
  3165     039E                     MDCARH          equ	926	;# 
  3166     039F                     MDCARL          equ	927	;# 
  3167     0411                     TMR3            equ	1041	;# 
  3168     0411                     TMR3L           equ	1041	;# 
  3169     0412                     TMR3H           equ	1042	;# 
  3170     0413                     T3CON           equ	1043	;# 
  3171     0414                     T3GCON          equ	1044	;# 
  3172     0415                     TMR4            equ	1045	;# 
  3173     0416                     PR4             equ	1046	;# 
  3174     0417                     T4CON           equ	1047	;# 
  3175     0418                     TMR5            equ	1048	;# 
  3176     0418                     TMR5L           equ	1048	;# 
  3177     0419                     TMR5H           equ	1049	;# 
  3178     041A                     T5CON           equ	1050	;# 
  3179     041B                     T5GCON          equ	1051	;# 
  3180     041C                     TMR6            equ	1052	;# 
  3181     041D                     PR6             equ	1053	;# 
  3182     041E                     T6CON           equ	1054	;# 
  3183     041F                     CCDCON          equ	1055	;# 
  3184     0498                     NCO1ACC         equ	1176	;# 
  3185     0498                     NCO1ACCL        equ	1176	;# 
  3186     0499                     NCO1ACCH        equ	1177	;# 
  3187     049A                     NCO1ACCU        equ	1178	;# 
  3188     049B                     NCO1INC         equ	1179	;# 
  3189     049B                     NCO1INCL        equ	1179	;# 
  3190     049C                     NCO1INCH        equ	1180	;# 
  3191     049D                     NCO1INCU        equ	1181	;# 
  3192     049E                     NCO1CON         equ	1182	;# 
  3193     049F                     NCO1CLK         equ	1183	;# 
  3194     0617                     PWM5DCL         equ	1559	;# 
  3195     0618                     PWM5DCH         equ	1560	;# 
  3196     0619                     PWM5CON         equ	1561	;# 
  3197     0619                     PWM5CON0        equ	1561	;# 
  3198     061A                     PWM6DCL         equ	1562	;# 
  3199     061B                     PWM6DCH         equ	1563	;# 
  3200     061C                     PWM6CON         equ	1564	;# 
  3201     061C                     PWM6CON0        equ	1564	;# 
  3202     061F                     PWMTMRS         equ	1567	;# 
  3203     0691                     CWG1CLKCON      equ	1681	;# 
  3204     0692                     CWG1DAT         equ	1682	;# 
  3205     0693                     CWG1DBR         equ	1683	;# 
  3206     0694                     CWG1DBF         equ	1684	;# 
  3207     0695                     CWG1CON0        equ	1685	;# 
  3208     0696                     CWG1CON1        equ	1686	;# 
  3209     0697                     CWG1AS0         equ	1687	;# 
  3210     0698                     CWG1AS1         equ	1688	;# 
  3211     0699                     CWG1STR         equ	1689	;# 
  3212     0711                     CWG2CLKCON      equ	1809	;# 
  3213     0712                     CWG2DAT         equ	1810	;# 
  3214     0713                     CWG2DBR         equ	1811	;# 
  3215     0714                     CWG2DBF         equ	1812	;# 
  3216     0715                     CWG2CON0        equ	1813	;# 
  3217     0716                     CWG2CON1        equ	1814	;# 
  3218     0717                     CWG2AS0         equ	1815	;# 
  3219     0718                     CWG2AS1         equ	1816	;# 
  3220     0719                     CWG2STR         equ	1817	;# 
  3221     0891                     NVMADR          equ	2193	;# 
  3222     0891                     EEADR           equ	2193	;# 
  3223     0891                     PMADR           equ	2193	;# 
  3224     0891                     NVMADRL         equ	2193	;# 
  3225     0891                     EEADRL          equ	2193	;# 
  3226     0891                     PMADRL          equ	2193	;# 
  3227     0892                     NVMADRH         equ	2194	;# 
  3228     0892                     EEADRH          equ	2194	;# 
  3229     0892                     PMADRH          equ	2194	;# 
  3230     0893                     NVMDAT          equ	2195	;# 
  3231     0893                     EEDAT           equ	2195	;# 
  3232     0893                     PMDAT           equ	2195	;# 
  3233     0893                     NVMDATL         equ	2195	;# 
  3234     0893                     EEDATL          equ	2195	;# 
  3235     0893                     PMDATL          equ	2195	;# 
  3236     0894                     NVMDATH         equ	2196	;# 
  3237     0894                     EEDATH          equ	2196	;# 
  3238     0894                     PMDATH          equ	2196	;# 
  3239     0895                     NVMCON1         equ	2197	;# 
  3240     0895                     EECON1          equ	2197	;# 
  3241     0895                     PMCON1          equ	2197	;# 
  3242     0896                     NVMCON2         equ	2198	;# 
  3243     0896                     EECON2          equ	2198	;# 
  3244     0896                     PMCON2          equ	2198	;# 
  3245     089B                     PCON0           equ	2203	;# 
  3246     0911                     PMD0            equ	2321	;# 
  3247     0912                     PMD1            equ	2322	;# 
  3248     0913                     PMD2            equ	2323	;# 
  3249     0914                     PMD3            equ	2324	;# 
  3250     0915                     PMD4            equ	2325	;# 
  3251     0916                     PMD5            equ	2326	;# 
  3252     0918                     CPUDOZE         equ	2328	;# 
  3253     0919                     OSCCON1         equ	2329	;# 
  3254     091A                     OSCCON2         equ	2330	;# 
  3255     091B                     OSCCON3         equ	2331	;# 
  3256     091C                     OSCSTAT1        equ	2332	;# 
  3257     091D                     OSCEN           equ	2333	;# 
  3258     091E                     OSCTUNE         equ	2334	;# 
  3259     091F                     OSCFRQ          equ	2335	;# 
  3260     0E0F                     PPSLOCK         equ	3599	;# 
  3261     0E10                     INTPPS          equ	3600	;# 
  3262     0E11                     T0CKIPPS        equ	3601	;# 
  3263     0E12                     T1CKIPPS        equ	3602	;# 
  3264     0E13                     T1GPPS          equ	3603	;# 
  3265     0E14                     CCP1PPS         equ	3604	;# 
  3266     0E15                     CCP2PPS         equ	3605	;# 
  3267     0E16                     CCP3PPS         equ	3606	;# 
  3268     0E17                     CCP4PPS         equ	3607	;# 
  3269     0E18                     CWG1PPS         equ	3608	;# 
  3270     0E19                     CWG2PPS         equ	3609	;# 
  3271     0E1A                     MDCIN1PPS       equ	3610	;# 
  3272     0E1B                     MDCIN2PPS       equ	3611	;# 
  3273     0E1C                     MDMINPPS        equ	3612	;# 
  3274     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3275     0E1E                     SSP2DATPPS      equ	3614	;# 
  3276     0E1F                     SSP2SSPPS       equ	3615	;# 
  3277     0E20                     SSP1CLKPPS      equ	3616	;# 
  3278     0E21                     SSP1DATPPS      equ	3617	;# 
  3279     0E22                     SSP1SSPPS       equ	3618	;# 
  3280     0E24                     RXPPS           equ	3620	;# 
  3281     0E25                     TXPPS           equ	3621	;# 
  3282     0E28                     CLCIN0PPS       equ	3624	;# 
  3283     0E29                     CLCIN1PPS       equ	3625	;# 
  3284     0E2A                     CLCIN2PPS       equ	3626	;# 
  3285     0E2B                     CLCIN3PPS       equ	3627	;# 
  3286     0E2C                     T3CKIPPS        equ	3628	;# 
  3287     0E2D                     T3GPPS          equ	3629	;# 
  3288     0E2E                     T5CKIPPS        equ	3630	;# 
  3289     0E2F                     T5GPPS          equ	3631	;# 
  3290     0E90                     RA0PPS          equ	3728	;# 
  3291     0E91                     RA1PPS          equ	3729	;# 
  3292     0E92                     RA2PPS          equ	3730	;# 
  3293     0E94                     RA4PPS          equ	3732	;# 
  3294     0E95                     RA5PPS          equ	3733	;# 
  3295     0E9C                     RB4PPS          equ	3740	;# 
  3296     0E9D                     RB5PPS          equ	3741	;# 
  3297     0E9E                     RB6PPS          equ	3742	;# 
  3298     0E9F                     RB7PPS          equ	3743	;# 
  3299     0EA0                     RC0PPS          equ	3744	;# 
  3300     0EA1                     RC1PPS          equ	3745	;# 
  3301     0EA2                     RC2PPS          equ	3746	;# 
  3302     0EA3                     RC3PPS          equ	3747	;# 
  3303     0EA4                     RC4PPS          equ	3748	;# 
  3304     0EA5                     RC5PPS          equ	3749	;# 
  3305     0EA6                     RC6PPS          equ	3750	;# 
  3306     0EA7                     RC7PPS          equ	3751	;# 
  3307     0F0F                     CLCDATA         equ	3855	;# 
  3308     0F10                     CLC1CON         equ	3856	;# 
  3309     0F11                     CLC1POL         equ	3857	;# 
  3310     0F12                     CLC1SEL0        equ	3858	;# 
  3311     0F13                     CLC1SEL1        equ	3859	;# 
  3312     0F14                     CLC1SEL2        equ	3860	;# 
  3313     0F15                     CLC1SEL3        equ	3861	;# 
  3314     0F16                     CLC1GLS0        equ	3862	;# 
  3315     0F17                     CLC1GLS1        equ	3863	;# 
  3316     0F18                     CLC1GLS2        equ	3864	;# 
  3317     0F19                     CLC1GLS3        equ	3865	;# 
  3318     0F1A                     CLC2CON         equ	3866	;# 
  3319     0F1B                     CLC2POL         equ	3867	;# 
  3320     0F1C                     CLC2SEL0        equ	3868	;# 
  3321     0F1D                     CLC2SEL1        equ	3869	;# 
  3322     0F1E                     CLC2SEL2        equ	3870	;# 
  3323     0F1F                     CLC2SEL3        equ	3871	;# 
  3324     0F20                     CLC2GLS0        equ	3872	;# 
  3325     0F21                     CLC2GLS1        equ	3873	;# 
  3326     0F22                     CLC2GLS2        equ	3874	;# 
  3327     0F23                     CLC2GLS3        equ	3875	;# 
  3328     0F24                     CLC3CON         equ	3876	;# 
  3329     0F25                     CLC3POL         equ	3877	;# 
  3330     0F26                     CLC3SEL0        equ	3878	;# 
  3331     0F27                     CLC3SEL1        equ	3879	;# 
  3332     0F28                     CLC3SEL2        equ	3880	;# 
  3333     0F29                     CLC3SEL3        equ	3881	;# 
  3334     0F2A                     CLC3GLS0        equ	3882	;# 
  3335     0F2B                     CLC3GLS1        equ	3883	;# 
  3336     0F2C                     CLC3GLS2        equ	3884	;# 
  3337     0F2D                     CLC3GLS3        equ	3885	;# 
  3338     0F2E                     CLC4CON         equ	3886	;# 
  3339     0F2F                     CLC4POL         equ	3887	;# 
  3340     0F30                     CLC4SEL0        equ	3888	;# 
  3341     0F31                     CLC4SEL1        equ	3889	;# 
  3342     0F32                     CLC4SEL2        equ	3890	;# 
  3343     0F33                     CLC4SEL3        equ	3891	;# 
  3344     0F34                     CLC4GLS0        equ	3892	;# 
  3345     0F35                     CLC4GLS1        equ	3893	;# 
  3346     0F36                     CLC4GLS2        equ	3894	;# 
  3347     0F37                     CLC4GLS3        equ	3895	;# 
  3348     0FE4                     STATUS_SHAD     equ	4068	;# 
  3349     0FE5                     WREG_SHAD       equ	4069	;# 
  3350     0FE6                     BSR_SHAD        equ	4070	;# 
  3351     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3352     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3353     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3354     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3355     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3356     0FED                     STKPTR          equ	4077	;# 
  3357     0FEE                     TOSL            equ	4078	;# 
  3358     0FEF                     TOSH            equ	4079	;# 
  3359     0000                     INDF0           equ	0	;# 
  3360     0001                     INDF1           equ	1	;# 
  3361     0002                     PCL             equ	2	;# 
  3362     0003                     STATUS          equ	3	;# 
  3363     0004                     FSR0L           equ	4	;# 
  3364     0005                     FSR0H           equ	5	;# 
  3365     0006                     FSR1L           equ	6	;# 
  3366     0007                     FSR1H           equ	7	;# 
  3367     0008                     BSR             equ	8	;# 
  3368     0009                     WREG            equ	9	;# 
  3369     000A                     PCLATH          equ	10	;# 
  3370     000B                     INTCON          equ	11	;# 
  3371     000C                     PORTA           equ	12	;# 
  3372     000D                     PORTB           equ	13	;# 
  3373     000E                     PORTC           equ	14	;# 
  3374     0010                     PIR0            equ	16	;# 
  3375     0011                     PIR1            equ	17	;# 
  3376     0012                     PIR2            equ	18	;# 
  3377     0013                     PIR3            equ	19	;# 
  3378     0014                     PIR4            equ	20	;# 
  3379     0015                     TMR0L           equ	21	;# 
  3380     0015                     TMR0            equ	21	;# 
  3381     0016                     TMR0H           equ	22	;# 
  3382     0016                     PR0             equ	22	;# 
  3383     0017                     T0CON0          equ	23	;# 
  3384     0018                     T0CON1          equ	24	;# 
  3385     0019                     TMR1            equ	25	;# 
  3386     0019                     TMR1L           equ	25	;# 
  3387     001A                     TMR1H           equ	26	;# 
  3388     001B                     T1CON           equ	27	;# 
  3389     001C                     T1GCON          equ	28	;# 
  3390     001D                     TMR2            equ	29	;# 
  3391     001E                     PR2             equ	30	;# 
  3392     001F                     T2CON           equ	31	;# 
  3393     008C                     TRISA           equ	140	;# 
  3394     008D                     TRISB           equ	141	;# 
  3395     008E                     TRISC           equ	142	;# 
  3396     0090                     PIE0            equ	144	;# 
  3397     0091                     PIE1            equ	145	;# 
  3398     0092                     PIE2            equ	146	;# 
  3399     0093                     PIE3            equ	147	;# 
  3400     0094                     PIE4            equ	148	;# 
  3401     0097                     WDTCON          equ	151	;# 
  3402     009B                     ADRES           equ	155	;# 
  3403     009B                     ADRESL          equ	155	;# 
  3404     009C                     ADRESH          equ	156	;# 
  3405     009D                     ADCON0          equ	157	;# 
  3406     009E                     ADCON1          equ	158	;# 
  3407     009F                     ADACT           equ	159	;# 
  3408     010C                     LATA            equ	268	;# 
  3409     010D                     LATB            equ	269	;# 
  3410     010E                     LATC            equ	270	;# 
  3411     0111                     CM1CON0         equ	273	;# 
  3412     0112                     CM1CON1         equ	274	;# 
  3413     0113                     CM2CON0         equ	275	;# 
  3414     0114                     CM2CON1         equ	276	;# 
  3415     0115                     CMOUT           equ	277	;# 
  3416     0116                     BORCON          equ	278	;# 
  3417     0117                     FVRCON          equ	279	;# 
  3418     0118                     DACCON0         equ	280	;# 
  3419     0119                     DACCON1         equ	281	;# 
  3420     018C                     ANSELA          equ	396	;# 
  3421     018D                     ANSELB          equ	397	;# 
  3422     018E                     ANSELC          equ	398	;# 
  3423     0197                     VREGCON         equ	407	;# 
  3424     0199                     RC1REG          equ	409	;# 
  3425     0199                     RCREG           equ	409	;# 
  3426     0199                     RCREG1          equ	409	;# 
  3427     019A                     TX1REG          equ	410	;# 
  3428     019A                     TXREG1          equ	410	;# 
  3429     019A                     TXREG           equ	410	;# 
  3430     019B                     SP1BRG          equ	411	;# 
  3431     019B                     SPBRG           equ	411	;# 
  3432     019B                     SP1BRGL         equ	411	;# 
  3433     019B                     SPBRG1          equ	411	;# 
  3434     019B                     SPBRGL          equ	411	;# 
  3435     019C                     SP1BRGH         equ	412	;# 
  3436     019C                     SPBRGH          equ	412	;# 
  3437     019C                     SPBRGH1         equ	412	;# 
  3438     019D                     RC1STA          equ	413	;# 
  3439     019D                     RCSTA1          equ	413	;# 
  3440     019D                     RCSTA           equ	413	;# 
  3441     019E                     TX1STA          equ	414	;# 
  3442     019E                     TXSTA1          equ	414	;# 
  3443     019E                     TXSTA           equ	414	;# 
  3444     019F                     BAUD1CON        equ	415	;# 
  3445     019F                     BAUDCON1        equ	415	;# 
  3446     019F                     BAUDCTL1        equ	415	;# 
  3447     019F                     BAUDCON         equ	415	;# 
  3448     019F                     BAUDCTL         equ	415	;# 
  3449     020C                     WPUA            equ	524	;# 
  3450     020D                     WPUB            equ	525	;# 
  3451     020E                     WPUC            equ	526	;# 
  3452     0211                     SSP1BUF         equ	529	;# 
  3453     0211                     SSPBUF          equ	529	;# 
  3454     0212                     SSP1ADD         equ	530	;# 
  3455     0212                     SSPADD          equ	530	;# 
  3456     0213                     SSP1MSK         equ	531	;# 
  3457     0213                     SSPMSK          equ	531	;# 
  3458     0214                     SSP1STAT        equ	532	;# 
  3459     0214                     SSPSTAT         equ	532	;# 
  3460     0215                     SSP1CON1        equ	533	;# 
  3461     0215                     SSPCON          equ	533	;# 
  3462     0215                     SSPCON1         equ	533	;# 
  3463     0215                     SSP1CON         equ	533	;# 
  3464     0216                     SSP1CON2        equ	534	;# 
  3465     0216                     SSPCON2         equ	534	;# 
  3466     0217                     SSP1CON3        equ	535	;# 
  3467     0217                     SSPCON3         equ	535	;# 
  3468     0219                     SSP2BUF         equ	537	;# 
  3469     021A                     SSP2ADD         equ	538	;# 
  3470     021B                     SSP2MSK         equ	539	;# 
  3471     021C                     SSP2STAT        equ	540	;# 
  3472     021D                     SSP2CON1        equ	541	;# 
  3473     021D                     SSP2CON         equ	541	;# 
  3474     021E                     SSP2CON2        equ	542	;# 
  3475     021F                     SSP2CON3        equ	543	;# 
  3476     028C                     ODCONA          equ	652	;# 
  3477     028D                     ODCONB          equ	653	;# 
  3478     028E                     ODCONC          equ	654	;# 
  3479     0291                     CCPR1           equ	657	;# 
  3480     0291                     CCPR1L          equ	657	;# 
  3481     0292                     CCPR1H          equ	658	;# 
  3482     0293                     CCP1CON         equ	659	;# 
  3483     0294                     CCP1CAP         equ	660	;# 
  3484     0295                     CCPR2           equ	661	;# 
  3485     0295                     CCPR2L          equ	661	;# 
  3486     0296                     CCPR2H          equ	662	;# 
  3487     0297                     CCP2CON         equ	663	;# 
  3488     0298                     CCP2CAP         equ	664	;# 
  3489     029F                     CCPTMRS         equ	671	;# 
  3490     030C                     SLRCONA         equ	780	;# 
  3491     030D                     SLRCONB         equ	781	;# 
  3492     030E                     SLRCONC         equ	782	;# 
  3493     0311                     CCPR3           equ	785	;# 
  3494     0311                     CCPR3L          equ	785	;# 
  3495     0312                     CCPR3H          equ	786	;# 
  3496     0313                     CCP3CON         equ	787	;# 
  3497     0314                     CCP3CAP         equ	788	;# 
  3498     0315                     CCPR4           equ	789	;# 
  3499     0315                     CCPR4L          equ	789	;# 
  3500     0316                     CCPR4H          equ	790	;# 
  3501     0317                     CCP4CON         equ	791	;# 
  3502     0318                     CCP4CAP         equ	792	;# 
  3503     038C                     INLVLA          equ	908	;# 
  3504     038D                     INLVLB          equ	909	;# 
  3505     038E                     INLVLC          equ	910	;# 
  3506     0391                     IOCAP           equ	913	;# 
  3507     0392                     IOCAN           equ	914	;# 
  3508     0393                     IOCAF           equ	915	;# 
  3509     0394                     IOCBP           equ	916	;# 
  3510     0395                     IOCBN           equ	917	;# 
  3511     0396                     IOCBF           equ	918	;# 
  3512     0397                     IOCCP           equ	919	;# 
  3513     0398                     IOCCN           equ	920	;# 
  3514     0399                     IOCCF           equ	921	;# 
  3515     039A                     CLKRCON         equ	922	;# 
  3516     039C                     MDCON           equ	924	;# 
  3517     039D                     MDSRC           equ	925	;# 
  3518     039E                     MDCARH          equ	926	;# 
  3519     039F                     MDCARL          equ	927	;# 
  3520     0411                     TMR3            equ	1041	;# 
  3521     0411                     TMR3L           equ	1041	;# 
  3522     0412                     TMR3H           equ	1042	;# 
  3523     0413                     T3CON           equ	1043	;# 
  3524     0414                     T3GCON          equ	1044	;# 
  3525     0415                     TMR4            equ	1045	;# 
  3526     0416                     PR4             equ	1046	;# 
  3527     0417                     T4CON           equ	1047	;# 
  3528     0418                     TMR5            equ	1048	;# 
  3529     0418                     TMR5L           equ	1048	;# 
  3530     0419                     TMR5H           equ	1049	;# 
  3531     041A                     T5CON           equ	1050	;# 
  3532     041B                     T5GCON          equ	1051	;# 
  3533     041C                     TMR6            equ	1052	;# 
  3534     041D                     PR6             equ	1053	;# 
  3535     041E                     T6CON           equ	1054	;# 
  3536     041F                     CCDCON          equ	1055	;# 
  3537     0498                     NCO1ACC         equ	1176	;# 
  3538     0498                     NCO1ACCL        equ	1176	;# 
  3539     0499                     NCO1ACCH        equ	1177	;# 
  3540     049A                     NCO1ACCU        equ	1178	;# 
  3541     049B                     NCO1INC         equ	1179	;# 
  3542     049B                     NCO1INCL        equ	1179	;# 
  3543     049C                     NCO1INCH        equ	1180	;# 
  3544     049D                     NCO1INCU        equ	1181	;# 
  3545     049E                     NCO1CON         equ	1182	;# 
  3546     049F                     NCO1CLK         equ	1183	;# 
  3547     0617                     PWM5DCL         equ	1559	;# 
  3548     0618                     PWM5DCH         equ	1560	;# 
  3549     0619                     PWM5CON         equ	1561	;# 
  3550     0619                     PWM5CON0        equ	1561	;# 
  3551     061A                     PWM6DCL         equ	1562	;# 
  3552     061B                     PWM6DCH         equ	1563	;# 
  3553     061C                     PWM6CON         equ	1564	;# 
  3554     061C                     PWM6CON0        equ	1564	;# 
  3555     061F                     PWMTMRS         equ	1567	;# 
  3556     0691                     CWG1CLKCON      equ	1681	;# 
  3557     0692                     CWG1DAT         equ	1682	;# 
  3558     0693                     CWG1DBR         equ	1683	;# 
  3559     0694                     CWG1DBF         equ	1684	;# 
  3560     0695                     CWG1CON0        equ	1685	;# 
  3561     0696                     CWG1CON1        equ	1686	;# 
  3562     0697                     CWG1AS0         equ	1687	;# 
  3563     0698                     CWG1AS1         equ	1688	;# 
  3564     0699                     CWG1STR         equ	1689	;# 
  3565     0711                     CWG2CLKCON      equ	1809	;# 
  3566     0712                     CWG2DAT         equ	1810	;# 
  3567     0713                     CWG2DBR         equ	1811	;# 
  3568     0714                     CWG2DBF         equ	1812	;# 
  3569     0715                     CWG2CON0        equ	1813	;# 
  3570     0716                     CWG2CON1        equ	1814	;# 
  3571     0717                     CWG2AS0         equ	1815	;# 
  3572     0718                     CWG2AS1         equ	1816	;# 
  3573     0719                     CWG2STR         equ	1817	;# 
  3574     0891                     NVMADR          equ	2193	;# 
  3575     0891                     EEADR           equ	2193	;# 
  3576     0891                     PMADR           equ	2193	;# 
  3577     0891                     NVMADRL         equ	2193	;# 
  3578     0891                     EEADRL          equ	2193	;# 
  3579     0891                     PMADRL          equ	2193	;# 
  3580     0892                     NVMADRH         equ	2194	;# 
  3581     0892                     EEADRH          equ	2194	;# 
  3582     0892                     PMADRH          equ	2194	;# 
  3583     0893                     NVMDAT          equ	2195	;# 
  3584     0893                     EEDAT           equ	2195	;# 
  3585     0893                     PMDAT           equ	2195	;# 
  3586     0893                     NVMDATL         equ	2195	;# 
  3587     0893                     EEDATL          equ	2195	;# 
  3588     0893                     PMDATL          equ	2195	;# 
  3589     0894                     NVMDATH         equ	2196	;# 
  3590     0894                     EEDATH          equ	2196	;# 
  3591     0894                     PMDATH          equ	2196	;# 
  3592     0895                     NVMCON1         equ	2197	;# 
  3593     0895                     EECON1          equ	2197	;# 
  3594     0895                     PMCON1          equ	2197	;# 
  3595     0896                     NVMCON2         equ	2198	;# 
  3596     0896                     EECON2          equ	2198	;# 
  3597     0896                     PMCON2          equ	2198	;# 
  3598     089B                     PCON0           equ	2203	;# 
  3599     0911                     PMD0            equ	2321	;# 
  3600     0912                     PMD1            equ	2322	;# 
  3601     0913                     PMD2            equ	2323	;# 
  3602     0914                     PMD3            equ	2324	;# 
  3603     0915                     PMD4            equ	2325	;# 
  3604     0916                     PMD5            equ	2326	;# 
  3605     0918                     CPUDOZE         equ	2328	;# 
  3606     0919                     OSCCON1         equ	2329	;# 
  3607     091A                     OSCCON2         equ	2330	;# 
  3608     091B                     OSCCON3         equ	2331	;# 
  3609     091C                     OSCSTAT1        equ	2332	;# 
  3610     091D                     OSCEN           equ	2333	;# 
  3611     091E                     OSCTUNE         equ	2334	;# 
  3612     091F                     OSCFRQ          equ	2335	;# 
  3613     0E0F                     PPSLOCK         equ	3599	;# 
  3614     0E10                     INTPPS          equ	3600	;# 
  3615     0E11                     T0CKIPPS        equ	3601	;# 
  3616     0E12                     T1CKIPPS        equ	3602	;# 
  3617     0E13                     T1GPPS          equ	3603	;# 
  3618     0E14                     CCP1PPS         equ	3604	;# 
  3619     0E15                     CCP2PPS         equ	3605	;# 
  3620     0E16                     CCP3PPS         equ	3606	;# 
  3621     0E17                     CCP4PPS         equ	3607	;# 
  3622     0E18                     CWG1PPS         equ	3608	;# 
  3623     0E19                     CWG2PPS         equ	3609	;# 
  3624     0E1A                     MDCIN1PPS       equ	3610	;# 
  3625     0E1B                     MDCIN2PPS       equ	3611	;# 
  3626     0E1C                     MDMINPPS        equ	3612	;# 
  3627     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3628     0E1E                     SSP2DATPPS      equ	3614	;# 
  3629     0E1F                     SSP2SSPPS       equ	3615	;# 
  3630     0E20                     SSP1CLKPPS      equ	3616	;# 
  3631     0E21                     SSP1DATPPS      equ	3617	;# 
  3632     0E22                     SSP1SSPPS       equ	3618	;# 
  3633     0E24                     RXPPS           equ	3620	;# 
  3634     0E25                     TXPPS           equ	3621	;# 
  3635     0E28                     CLCIN0PPS       equ	3624	;# 
  3636     0E29                     CLCIN1PPS       equ	3625	;# 
  3637     0E2A                     CLCIN2PPS       equ	3626	;# 
  3638     0E2B                     CLCIN3PPS       equ	3627	;# 
  3639     0E2C                     T3CKIPPS        equ	3628	;# 
  3640     0E2D                     T3GPPS          equ	3629	;# 
  3641     0E2E                     T5CKIPPS        equ	3630	;# 
  3642     0E2F                     T5GPPS          equ	3631	;# 
  3643     0E90                     RA0PPS          equ	3728	;# 
  3644     0E91                     RA1PPS          equ	3729	;# 
  3645     0E92                     RA2PPS          equ	3730	;# 
  3646     0E94                     RA4PPS          equ	3732	;# 
  3647     0E95                     RA5PPS          equ	3733	;# 
  3648     0E9C                     RB4PPS          equ	3740	;# 
  3649     0E9D                     RB5PPS          equ	3741	;# 
  3650     0E9E                     RB6PPS          equ	3742	;# 
  3651     0E9F                     RB7PPS          equ	3743	;# 
  3652     0EA0                     RC0PPS          equ	3744	;# 
  3653     0EA1                     RC1PPS          equ	3745	;# 
  3654     0EA2                     RC2PPS          equ	3746	;# 
  3655     0EA3                     RC3PPS          equ	3747	;# 
  3656     0EA4                     RC4PPS          equ	3748	;# 
  3657     0EA5                     RC5PPS          equ	3749	;# 
  3658     0EA6                     RC6PPS          equ	3750	;# 
  3659     0EA7                     RC7PPS          equ	3751	;# 
  3660     0F0F                     CLCDATA         equ	3855	;# 
  3661     0F10                     CLC1CON         equ	3856	;# 
  3662     0F11                     CLC1POL         equ	3857	;# 
  3663     0F12                     CLC1SEL0        equ	3858	;# 
  3664     0F13                     CLC1SEL1        equ	3859	;# 
  3665     0F14                     CLC1SEL2        equ	3860	;# 
  3666     0F15                     CLC1SEL3        equ	3861	;# 
  3667     0F16                     CLC1GLS0        equ	3862	;# 
  3668     0F17                     CLC1GLS1        equ	3863	;# 
  3669     0F18                     CLC1GLS2        equ	3864	;# 
  3670     0F19                     CLC1GLS3        equ	3865	;# 
  3671     0F1A                     CLC2CON         equ	3866	;# 
  3672     0F1B                     CLC2POL         equ	3867	;# 
  3673     0F1C                     CLC2SEL0        equ	3868	;# 
  3674     0F1D                     CLC2SEL1        equ	3869	;# 
  3675     0F1E                     CLC2SEL2        equ	3870	;# 
  3676     0F1F                     CLC2SEL3        equ	3871	;# 
  3677     0F20                     CLC2GLS0        equ	3872	;# 
  3678     0F21                     CLC2GLS1        equ	3873	;# 
  3679     0F22                     CLC2GLS2        equ	3874	;# 
  3680     0F23                     CLC2GLS3        equ	3875	;# 
  3681     0F24                     CLC3CON         equ	3876	;# 
  3682     0F25                     CLC3POL         equ	3877	;# 
  3683     0F26                     CLC3SEL0        equ	3878	;# 
  3684     0F27                     CLC3SEL1        equ	3879	;# 
  3685     0F28                     CLC3SEL2        equ	3880	;# 
  3686     0F29                     CLC3SEL3        equ	3881	;# 
  3687     0F2A                     CLC3GLS0        equ	3882	;# 
  3688     0F2B                     CLC3GLS1        equ	3883	;# 
  3689     0F2C                     CLC3GLS2        equ	3884	;# 
  3690     0F2D                     CLC3GLS3        equ	3885	;# 
  3691     0F2E                     CLC4CON         equ	3886	;# 
  3692     0F2F                     CLC4POL         equ	3887	;# 
  3693     0F30                     CLC4SEL0        equ	3888	;# 
  3694     0F31                     CLC4SEL1        equ	3889	;# 
  3695     0F32                     CLC4SEL2        equ	3890	;# 
  3696     0F33                     CLC4SEL3        equ	3891	;# 
  3697     0F34                     CLC4GLS0        equ	3892	;# 
  3698     0F35                     CLC4GLS1        equ	3893	;# 
  3699     0F36                     CLC4GLS2        equ	3894	;# 
  3700     0F37                     CLC4GLS3        equ	3895	;# 
  3701     0FE4                     STATUS_SHAD     equ	4068	;# 
  3702     0FE5                     WREG_SHAD       equ	4069	;# 
  3703     0FE6                     BSR_SHAD        equ	4070	;# 
  3704     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3705     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3706     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3707     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3708     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3709     0FED                     STKPTR          equ	4077	;# 
  3710     0FEE                     TOSL            equ	4078	;# 
  3711     0FEF                     TOSH            equ	4079	;# 
  3712     0000                     INDF0           equ	0	;# 
  3713     0001                     INDF1           equ	1	;# 
  3714     0002                     PCL             equ	2	;# 
  3715     0003                     STATUS          equ	3	;# 
  3716     0004                     FSR0L           equ	4	;# 
  3717     0005                     FSR0H           equ	5	;# 
  3718     0006                     FSR1L           equ	6	;# 
  3719     0007                     FSR1H           equ	7	;# 
  3720     0008                     BSR             equ	8	;# 
  3721     0009                     WREG            equ	9	;# 
  3722     000A                     PCLATH          equ	10	;# 
  3723     000B                     INTCON          equ	11	;# 
  3724     000C                     PORTA           equ	12	;# 
  3725     000D                     PORTB           equ	13	;# 
  3726     000E                     PORTC           equ	14	;# 
  3727     0010                     PIR0            equ	16	;# 
  3728     0011                     PIR1            equ	17	;# 
  3729     0012                     PIR2            equ	18	;# 
  3730     0013                     PIR3            equ	19	;# 
  3731     0014                     PIR4            equ	20	;# 
  3732     0015                     TMR0L           equ	21	;# 
  3733     0015                     TMR0            equ	21	;# 
  3734     0016                     TMR0H           equ	22	;# 
  3735     0016                     PR0             equ	22	;# 
  3736     0017                     T0CON0          equ	23	;# 
  3737     0018                     T0CON1          equ	24	;# 
  3738     0019                     TMR1            equ	25	;# 
  3739     0019                     TMR1L           equ	25	;# 
  3740     001A                     TMR1H           equ	26	;# 
  3741     001B                     T1CON           equ	27	;# 
  3742     001C                     T1GCON          equ	28	;# 
  3743     001D                     TMR2            equ	29	;# 
  3744     001E                     PR2             equ	30	;# 
  3745     001F                     T2CON           equ	31	;# 
  3746     008C                     TRISA           equ	140	;# 
  3747     008D                     TRISB           equ	141	;# 
  3748     008E                     TRISC           equ	142	;# 
  3749     0090                     PIE0            equ	144	;# 
  3750     0091                     PIE1            equ	145	;# 
  3751     0092                     PIE2            equ	146	;# 
  3752     0093                     PIE3            equ	147	;# 
  3753     0094                     PIE4            equ	148	;# 
  3754     0097                     WDTCON          equ	151	;# 
  3755     009B                     ADRES           equ	155	;# 
  3756     009B                     ADRESL          equ	155	;# 
  3757     009C                     ADRESH          equ	156	;# 
  3758     009D                     ADCON0          equ	157	;# 
  3759     009E                     ADCON1          equ	158	;# 
  3760     009F                     ADACT           equ	159	;# 
  3761     010C                     LATA            equ	268	;# 
  3762     010D                     LATB            equ	269	;# 
  3763     010E                     LATC            equ	270	;# 
  3764     0111                     CM1CON0         equ	273	;# 
  3765     0112                     CM1CON1         equ	274	;# 
  3766     0113                     CM2CON0         equ	275	;# 
  3767     0114                     CM2CON1         equ	276	;# 
  3768     0115                     CMOUT           equ	277	;# 
  3769     0116                     BORCON          equ	278	;# 
  3770     0117                     FVRCON          equ	279	;# 
  3771     0118                     DACCON0         equ	280	;# 
  3772     0119                     DACCON1         equ	281	;# 
  3773     018C                     ANSELA          equ	396	;# 
  3774     018D                     ANSELB          equ	397	;# 
  3775     018E                     ANSELC          equ	398	;# 
  3776     0197                     VREGCON         equ	407	;# 
  3777     0199                     RC1REG          equ	409	;# 
  3778     0199                     RCREG           equ	409	;# 
  3779     0199                     RCREG1          equ	409	;# 
  3780     019A                     TX1REG          equ	410	;# 
  3781     019A                     TXREG1          equ	410	;# 
  3782     019A                     TXREG           equ	410	;# 
  3783     019B                     SP1BRG          equ	411	;# 
  3784     019B                     SPBRG           equ	411	;# 
  3785     019B                     SP1BRGL         equ	411	;# 
  3786     019B                     SPBRG1          equ	411	;# 
  3787     019B                     SPBRGL          equ	411	;# 
  3788     019C                     SP1BRGH         equ	412	;# 
  3789     019C                     SPBRGH          equ	412	;# 
  3790     019C                     SPBRGH1         equ	412	;# 
  3791     019D                     RC1STA          equ	413	;# 
  3792     019D                     RCSTA1          equ	413	;# 
  3793     019D                     RCSTA           equ	413	;# 
  3794     019E                     TX1STA          equ	414	;# 
  3795     019E                     TXSTA1          equ	414	;# 
  3796     019E                     TXSTA           equ	414	;# 
  3797     019F                     BAUD1CON        equ	415	;# 
  3798     019F                     BAUDCON1        equ	415	;# 
  3799     019F                     BAUDCTL1        equ	415	;# 
  3800     019F                     BAUDCON         equ	415	;# 
  3801     019F                     BAUDCTL         equ	415	;# 
  3802     020C                     WPUA            equ	524	;# 
  3803     020D                     WPUB            equ	525	;# 
  3804     020E                     WPUC            equ	526	;# 
  3805     0211                     SSP1BUF         equ	529	;# 
  3806     0211                     SSPBUF          equ	529	;# 
  3807     0212                     SSP1ADD         equ	530	;# 
  3808     0212                     SSPADD          equ	530	;# 
  3809     0213                     SSP1MSK         equ	531	;# 
  3810     0213                     SSPMSK          equ	531	;# 
  3811     0214                     SSP1STAT        equ	532	;# 
  3812     0214                     SSPSTAT         equ	532	;# 
  3813     0215                     SSP1CON1        equ	533	;# 
  3814     0215                     SSPCON          equ	533	;# 
  3815     0215                     SSPCON1         equ	533	;# 
  3816     0215                     SSP1CON         equ	533	;# 
  3817     0216                     SSP1CON2        equ	534	;# 
  3818     0216                     SSPCON2         equ	534	;# 
  3819     0217                     SSP1CON3        equ	535	;# 
  3820     0217                     SSPCON3         equ	535	;# 
  3821     0219                     SSP2BUF         equ	537	;# 
  3822     021A                     SSP2ADD         equ	538	;# 
  3823     021B                     SSP2MSK         equ	539	;# 
  3824     021C                     SSP2STAT        equ	540	;# 
  3825     021D                     SSP2CON1        equ	541	;# 
  3826     021D                     SSP2CON         equ	541	;# 
  3827     021E                     SSP2CON2        equ	542	;# 
  3828     021F                     SSP2CON3        equ	543	;# 
  3829     028C                     ODCONA          equ	652	;# 
  3830     028D                     ODCONB          equ	653	;# 
  3831     028E                     ODCONC          equ	654	;# 
  3832     0291                     CCPR1           equ	657	;# 
  3833     0291                     CCPR1L          equ	657	;# 
  3834     0292                     CCPR1H          equ	658	;# 
  3835     0293                     CCP1CON         equ	659	;# 
  3836     0294                     CCP1CAP         equ	660	;# 
  3837     0295                     CCPR2           equ	661	;# 
  3838     0295                     CCPR2L          equ	661	;# 
  3839     0296                     CCPR2H          equ	662	;# 
  3840     0297                     CCP2CON         equ	663	;# 
  3841     0298                     CCP2CAP         equ	664	;# 
  3842     029F                     CCPTMRS         equ	671	;# 
  3843     030C                     SLRCONA         equ	780	;# 
  3844     030D                     SLRCONB         equ	781	;# 
  3845     030E                     SLRCONC         equ	782	;# 
  3846     0311                     CCPR3           equ	785	;# 
  3847     0311                     CCPR3L          equ	785	;# 
  3848     0312                     CCPR3H          equ	786	;# 
  3849     0313                     CCP3CON         equ	787	;# 
  3850     0314                     CCP3CAP         equ	788	;# 
  3851     0315                     CCPR4           equ	789	;# 
  3852     0315                     CCPR4L          equ	789	;# 
  3853     0316                     CCPR4H          equ	790	;# 
  3854     0317                     CCP4CON         equ	791	;# 
  3855     0318                     CCP4CAP         equ	792	;# 
  3856     038C                     INLVLA          equ	908	;# 
  3857     038D                     INLVLB          equ	909	;# 
  3858     038E                     INLVLC          equ	910	;# 
  3859     0391                     IOCAP           equ	913	;# 
  3860     0392                     IOCAN           equ	914	;# 
  3861     0393                     IOCAF           equ	915	;# 
  3862     0394                     IOCBP           equ	916	;# 
  3863     0395                     IOCBN           equ	917	;# 
  3864     0396                     IOCBF           equ	918	;# 
  3865     0397                     IOCCP           equ	919	;# 
  3866     0398                     IOCCN           equ	920	;# 
  3867     0399                     IOCCF           equ	921	;# 
  3868     039A                     CLKRCON         equ	922	;# 
  3869     039C                     MDCON           equ	924	;# 
  3870     039D                     MDSRC           equ	925	;# 
  3871     039E                     MDCARH          equ	926	;# 
  3872     039F                     MDCARL          equ	927	;# 
  3873     0411                     TMR3            equ	1041	;# 
  3874     0411                     TMR3L           equ	1041	;# 
  3875     0412                     TMR3H           equ	1042	;# 
  3876     0413                     T3CON           equ	1043	;# 
  3877     0414                     T3GCON          equ	1044	;# 
  3878     0415                     TMR4            equ	1045	;# 
  3879     0416                     PR4             equ	1046	;# 
  3880     0417                     T4CON           equ	1047	;# 
  3881     0418                     TMR5            equ	1048	;# 
  3882     0418                     TMR5L           equ	1048	;# 
  3883     0419                     TMR5H           equ	1049	;# 
  3884     041A                     T5CON           equ	1050	;# 
  3885     041B                     T5GCON          equ	1051	;# 
  3886     041C                     TMR6            equ	1052	;# 
  3887     041D                     PR6             equ	1053	;# 
  3888     041E                     T6CON           equ	1054	;# 
  3889     041F                     CCDCON          equ	1055	;# 
  3890     0498                     NCO1ACC         equ	1176	;# 
  3891     0498                     NCO1ACCL        equ	1176	;# 
  3892     0499                     NCO1ACCH        equ	1177	;# 
  3893     049A                     NCO1ACCU        equ	1178	;# 
  3894     049B                     NCO1INC         equ	1179	;# 
  3895     049B                     NCO1INCL        equ	1179	;# 
  3896     049C                     NCO1INCH        equ	1180	;# 
  3897     049D                     NCO1INCU        equ	1181	;# 
  3898     049E                     NCO1CON         equ	1182	;# 
  3899     049F                     NCO1CLK         equ	1183	;# 
  3900     0617                     PWM5DCL         equ	1559	;# 
  3901     0618                     PWM5DCH         equ	1560	;# 
  3902     0619                     PWM5CON         equ	1561	;# 
  3903     0619                     PWM5CON0        equ	1561	;# 
  3904     061A                     PWM6DCL         equ	1562	;# 
  3905     061B                     PWM6DCH         equ	1563	;# 
  3906     061C                     PWM6CON         equ	1564	;# 
  3907     061C                     PWM6CON0        equ	1564	;# 
  3908     061F                     PWMTMRS         equ	1567	;# 
  3909     0691                     CWG1CLKCON      equ	1681	;# 
  3910     0692                     CWG1DAT         equ	1682	;# 
  3911     0693                     CWG1DBR         equ	1683	;# 
  3912     0694                     CWG1DBF         equ	1684	;# 
  3913     0695                     CWG1CON0        equ	1685	;# 
  3914     0696                     CWG1CON1        equ	1686	;# 
  3915     0697                     CWG1AS0         equ	1687	;# 
  3916     0698                     CWG1AS1         equ	1688	;# 
  3917     0699                     CWG1STR         equ	1689	;# 
  3918     0711                     CWG2CLKCON      equ	1809	;# 
  3919     0712                     CWG2DAT         equ	1810	;# 
  3920     0713                     CWG2DBR         equ	1811	;# 
  3921     0714                     CWG2DBF         equ	1812	;# 
  3922     0715                     CWG2CON0        equ	1813	;# 
  3923     0716                     CWG2CON1        equ	1814	;# 
  3924     0717                     CWG2AS0         equ	1815	;# 
  3925     0718                     CWG2AS1         equ	1816	;# 
  3926     0719                     CWG2STR         equ	1817	;# 
  3927     0891                     NVMADR          equ	2193	;# 
  3928     0891                     EEADR           equ	2193	;# 
  3929     0891                     PMADR           equ	2193	;# 
  3930     0891                     NVMADRL         equ	2193	;# 
  3931     0891                     EEADRL          equ	2193	;# 
  3932     0891                     PMADRL          equ	2193	;# 
  3933     0892                     NVMADRH         equ	2194	;# 
  3934     0892                     EEADRH          equ	2194	;# 
  3935     0892                     PMADRH          equ	2194	;# 
  3936     0893                     NVMDAT          equ	2195	;# 
  3937     0893                     EEDAT           equ	2195	;# 
  3938     0893                     PMDAT           equ	2195	;# 
  3939     0893                     NVMDATL         equ	2195	;# 
  3940     0893                     EEDATL          equ	2195	;# 
  3941     0893                     PMDATL          equ	2195	;# 
  3942     0894                     NVMDATH         equ	2196	;# 
  3943     0894                     EEDATH          equ	2196	;# 
  3944     0894                     PMDATH          equ	2196	;# 
  3945     0895                     NVMCON1         equ	2197	;# 
  3946     0895                     EECON1          equ	2197	;# 
  3947     0895                     PMCON1          equ	2197	;# 
  3948     0896                     NVMCON2         equ	2198	;# 
  3949     0896                     EECON2          equ	2198	;# 
  3950     0896                     PMCON2          equ	2198	;# 
  3951     089B                     PCON0           equ	2203	;# 
  3952     0911                     PMD0            equ	2321	;# 
  3953     0912                     PMD1            equ	2322	;# 
  3954     0913                     PMD2            equ	2323	;# 
  3955     0914                     PMD3            equ	2324	;# 
  3956     0915                     PMD4            equ	2325	;# 
  3957     0916                     PMD5            equ	2326	;# 
  3958     0918                     CPUDOZE         equ	2328	;# 
  3959     0919                     OSCCON1         equ	2329	;# 
  3960     091A                     OSCCON2         equ	2330	;# 
  3961     091B                     OSCCON3         equ	2331	;# 
  3962     091C                     OSCSTAT1        equ	2332	;# 
  3963     091D                     OSCEN           equ	2333	;# 
  3964     091E                     OSCTUNE         equ	2334	;# 
  3965     091F                     OSCFRQ          equ	2335	;# 
  3966     0E0F                     PPSLOCK         equ	3599	;# 
  3967     0E10                     INTPPS          equ	3600	;# 
  3968     0E11                     T0CKIPPS        equ	3601	;# 
  3969     0E12                     T1CKIPPS        equ	3602	;# 
  3970     0E13                     T1GPPS          equ	3603	;# 
  3971     0E14                     CCP1PPS         equ	3604	;# 
  3972     0E15                     CCP2PPS         equ	3605	;# 
  3973     0E16                     CCP3PPS         equ	3606	;# 
  3974     0E17                     CCP4PPS         equ	3607	;# 
  3975     0E18                     CWG1PPS         equ	3608	;# 
  3976     0E19                     CWG2PPS         equ	3609	;# 
  3977     0E1A                     MDCIN1PPS       equ	3610	;# 
  3978     0E1B                     MDCIN2PPS       equ	3611	;# 
  3979     0E1C                     MDMINPPS        equ	3612	;# 
  3980     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3981     0E1E                     SSP2DATPPS      equ	3614	;# 
  3982     0E1F                     SSP2SSPPS       equ	3615	;# 
  3983     0E20                     SSP1CLKPPS      equ	3616	;# 
  3984     0E21                     SSP1DATPPS      equ	3617	;# 
  3985     0E22                     SSP1SSPPS       equ	3618	;# 
  3986     0E24                     RXPPS           equ	3620	;# 
  3987     0E25                     TXPPS           equ	3621	;# 
  3988     0E28                     CLCIN0PPS       equ	3624	;# 
  3989     0E29                     CLCIN1PPS       equ	3625	;# 
  3990     0E2A                     CLCIN2PPS       equ	3626	;# 
  3991     0E2B                     CLCIN3PPS       equ	3627	;# 
  3992     0E2C                     T3CKIPPS        equ	3628	;# 
  3993     0E2D                     T3GPPS          equ	3629	;# 
  3994     0E2E                     T5CKIPPS        equ	3630	;# 
  3995     0E2F                     T5GPPS          equ	3631	;# 
  3996     0E90                     RA0PPS          equ	3728	;# 
  3997     0E91                     RA1PPS          equ	3729	;# 
  3998     0E92                     RA2PPS          equ	3730	;# 
  3999     0E94                     RA4PPS          equ	3732	;# 
  4000     0E95                     RA5PPS          equ	3733	;# 
  4001     0E9C                     RB4PPS          equ	3740	;# 
  4002     0E9D                     RB5PPS          equ	3741	;# 
  4003     0E9E                     RB6PPS          equ	3742	;# 
  4004     0E9F                     RB7PPS          equ	3743	;# 
  4005     0EA0                     RC0PPS          equ	3744	;# 
  4006     0EA1                     RC1PPS          equ	3745	;# 
  4007     0EA2                     RC2PPS          equ	3746	;# 
  4008     0EA3                     RC3PPS          equ	3747	;# 
  4009     0EA4                     RC4PPS          equ	3748	;# 
  4010     0EA5                     RC5PPS          equ	3749	;# 
  4011     0EA6                     RC6PPS          equ	3750	;# 
  4012     0EA7                     RC7PPS          equ	3751	;# 
  4013     0F0F                     CLCDATA         equ	3855	;# 
  4014     0F10                     CLC1CON         equ	3856	;# 
  4015     0F11                     CLC1POL         equ	3857	;# 
  4016     0F12                     CLC1SEL0        equ	3858	;# 
  4017     0F13                     CLC1SEL1        equ	3859	;# 
  4018     0F14                     CLC1SEL2        equ	3860	;# 
  4019     0F15                     CLC1SEL3        equ	3861	;# 
  4020     0F16                     CLC1GLS0        equ	3862	;# 
  4021     0F17                     CLC1GLS1        equ	3863	;# 
  4022     0F18                     CLC1GLS2        equ	3864	;# 
  4023     0F19                     CLC1GLS3        equ	3865	;# 
  4024     0F1A                     CLC2CON         equ	3866	;# 
  4025     0F1B                     CLC2POL         equ	3867	;# 
  4026     0F1C                     CLC2SEL0        equ	3868	;# 
  4027     0F1D                     CLC2SEL1        equ	3869	;# 
  4028     0F1E                     CLC2SEL2        equ	3870	;# 
  4029     0F1F                     CLC2SEL3        equ	3871	;# 
  4030     0F20                     CLC2GLS0        equ	3872	;# 
  4031     0F21                     CLC2GLS1        equ	3873	;# 
  4032     0F22                     CLC2GLS2        equ	3874	;# 
  4033     0F23                     CLC2GLS3        equ	3875	;# 
  4034     0F24                     CLC3CON         equ	3876	;# 
  4035     0F25                     CLC3POL         equ	3877	;# 
  4036     0F26                     CLC3SEL0        equ	3878	;# 
  4037     0F27                     CLC3SEL1        equ	3879	;# 
  4038     0F28                     CLC3SEL2        equ	3880	;# 
  4039     0F29                     CLC3SEL3        equ	3881	;# 
  4040     0F2A                     CLC3GLS0        equ	3882	;# 
  4041     0F2B                     CLC3GLS1        equ	3883	;# 
  4042     0F2C                     CLC3GLS2        equ	3884	;# 
  4043     0F2D                     CLC3GLS3        equ	3885	;# 
  4044     0F2E                     CLC4CON         equ	3886	;# 
  4045     0F2F                     CLC4POL         equ	3887	;# 
  4046     0F30                     CLC4SEL0        equ	3888	;# 
  4047     0F31                     CLC4SEL1        equ	3889	;# 
  4048     0F32                     CLC4SEL2        equ	3890	;# 
  4049     0F33                     CLC4SEL3        equ	3891	;# 
  4050     0F34                     CLC4GLS0        equ	3892	;# 
  4051     0F35                     CLC4GLS1        equ	3893	;# 
  4052     0F36                     CLC4GLS2        equ	3894	;# 
  4053     0F37                     CLC4GLS3        equ	3895	;# 
  4054     0FE4                     STATUS_SHAD     equ	4068	;# 
  4055     0FE5                     WREG_SHAD       equ	4069	;# 
  4056     0FE6                     BSR_SHAD        equ	4070	;# 
  4057     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4058     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4059     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4060     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4061     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4062     0FED                     STKPTR          equ	4077	;# 
  4063     0FEE                     TOSL            equ	4078	;# 
  4064     0FEF                     TOSH            equ	4079	;# 
  4065     0000                     INDF0           equ	0	;# 
  4066     0001                     INDF1           equ	1	;# 
  4067     0002                     PCL             equ	2	;# 
  4068     0003                     STATUS          equ	3	;# 
  4069     0004                     FSR0L           equ	4	;# 
  4070     0005                     FSR0H           equ	5	;# 
  4071     0006                     FSR1L           equ	6	;# 
  4072     0007                     FSR1H           equ	7	;# 
  4073     0008                     BSR             equ	8	;# 
  4074     0009                     WREG            equ	9	;# 
  4075     000A                     PCLATH          equ	10	;# 
  4076     000B                     INTCON          equ	11	;# 
  4077     000C                     PORTA           equ	12	;# 
  4078     000D                     PORTB           equ	13	;# 
  4079     000E                     PORTC           equ	14	;# 
  4080     0010                     PIR0            equ	16	;# 
  4081     0011                     PIR1            equ	17	;# 
  4082     0012                     PIR2            equ	18	;# 
  4083     0013                     PIR3            equ	19	;# 
  4084     0014                     PIR4            equ	20	;# 
  4085     0015                     TMR0L           equ	21	;# 
  4086     0015                     TMR0            equ	21	;# 
  4087     0016                     TMR0H           equ	22	;# 
  4088     0016                     PR0             equ	22	;# 
  4089     0017                     T0CON0          equ	23	;# 
  4090     0018                     T0CON1          equ	24	;# 
  4091     0019                     TMR1            equ	25	;# 
  4092     0019                     TMR1L           equ	25	;# 
  4093     001A                     TMR1H           equ	26	;# 
  4094     001B                     T1CON           equ	27	;# 
  4095     001C                     T1GCON          equ	28	;# 
  4096     001D                     TMR2            equ	29	;# 
  4097     001E                     PR2             equ	30	;# 
  4098     001F                     T2CON           equ	31	;# 
  4099     008C                     TRISA           equ	140	;# 
  4100     008D                     TRISB           equ	141	;# 
  4101     008E                     TRISC           equ	142	;# 
  4102     0090                     PIE0            equ	144	;# 
  4103     0091                     PIE1            equ	145	;# 
  4104     0092                     PIE2            equ	146	;# 
  4105     0093                     PIE3            equ	147	;# 
  4106     0094                     PIE4            equ	148	;# 
  4107     0097                     WDTCON          equ	151	;# 
  4108     009B                     ADRES           equ	155	;# 
  4109     009B                     ADRESL          equ	155	;# 
  4110     009C                     ADRESH          equ	156	;# 
  4111     009D                     ADCON0          equ	157	;# 
  4112     009E                     ADCON1          equ	158	;# 
  4113     009F                     ADACT           equ	159	;# 
  4114     010C                     LATA            equ	268	;# 
  4115     010D                     LATB            equ	269	;# 
  4116     010E                     LATC            equ	270	;# 
  4117     0111                     CM1CON0         equ	273	;# 
  4118     0112                     CM1CON1         equ	274	;# 
  4119     0113                     CM2CON0         equ	275	;# 
  4120     0114                     CM2CON1         equ	276	;# 
  4121     0115                     CMOUT           equ	277	;# 
  4122     0116                     BORCON          equ	278	;# 
  4123     0117                     FVRCON          equ	279	;# 
  4124     0118                     DACCON0         equ	280	;# 
  4125     0119                     DACCON1         equ	281	;# 
  4126     018C                     ANSELA          equ	396	;# 
  4127     018D                     ANSELB          equ	397	;# 
  4128     018E                     ANSELC          equ	398	;# 
  4129     0197                     VREGCON         equ	407	;# 
  4130     0199                     RC1REG          equ	409	;# 
  4131     0199                     RCREG           equ	409	;# 
  4132     0199                     RCREG1          equ	409	;# 
  4133     019A                     TX1REG          equ	410	;# 
  4134     019A                     TXREG1          equ	410	;# 
  4135     019A                     TXREG           equ	410	;# 
  4136     019B                     SP1BRG          equ	411	;# 
  4137     019B                     SPBRG           equ	411	;# 
  4138     019B                     SP1BRGL         equ	411	;# 
  4139     019B                     SPBRG1          equ	411	;# 
  4140     019B                     SPBRGL          equ	411	;# 
  4141     019C                     SP1BRGH         equ	412	;# 
  4142     019C                     SPBRGH          equ	412	;# 
  4143     019C                     SPBRGH1         equ	412	;# 
  4144     019D                     RC1STA          equ	413	;# 
  4145     019D                     RCSTA1          equ	413	;# 
  4146     019D                     RCSTA           equ	413	;# 
  4147     019E                     TX1STA          equ	414	;# 
  4148     019E                     TXSTA1          equ	414	;# 
  4149     019E                     TXSTA           equ	414	;# 
  4150     019F                     BAUD1CON        equ	415	;# 
  4151     019F                     BAUDCON1        equ	415	;# 
  4152     019F                     BAUDCTL1        equ	415	;# 
  4153     019F                     BAUDCON         equ	415	;# 
  4154     019F                     BAUDCTL         equ	415	;# 
  4155     020C                     WPUA            equ	524	;# 
  4156     020D                     WPUB            equ	525	;# 
  4157     020E                     WPUC            equ	526	;# 
  4158     0211                     SSP1BUF         equ	529	;# 
  4159     0211                     SSPBUF          equ	529	;# 
  4160     0212                     SSP1ADD         equ	530	;# 
  4161     0212                     SSPADD          equ	530	;# 
  4162     0213                     SSP1MSK         equ	531	;# 
  4163     0213                     SSPMSK          equ	531	;# 
  4164     0214                     SSP1STAT        equ	532	;# 
  4165     0214                     SSPSTAT         equ	532	;# 
  4166     0215                     SSP1CON1        equ	533	;# 
  4167     0215                     SSPCON          equ	533	;# 
  4168     0215                     SSPCON1         equ	533	;# 
  4169     0215                     SSP1CON         equ	533	;# 
  4170     0216                     SSP1CON2        equ	534	;# 
  4171     0216                     SSPCON2         equ	534	;# 
  4172     0217                     SSP1CON3        equ	535	;# 
  4173     0217                     SSPCON3         equ	535	;# 
  4174     0219                     SSP2BUF         equ	537	;# 
  4175     021A                     SSP2ADD         equ	538	;# 
  4176     021B                     SSP2MSK         equ	539	;# 
  4177     021C                     SSP2STAT        equ	540	;# 
  4178     021D                     SSP2CON1        equ	541	;# 
  4179     021D                     SSP2CON         equ	541	;# 
  4180     021E                     SSP2CON2        equ	542	;# 
  4181     021F                     SSP2CON3        equ	543	;# 
  4182     028C                     ODCONA          equ	652	;# 
  4183     028D                     ODCONB          equ	653	;# 
  4184     028E                     ODCONC          equ	654	;# 
  4185     0291                     CCPR1           equ	657	;# 
  4186     0291                     CCPR1L          equ	657	;# 
  4187     0292                     CCPR1H          equ	658	;# 
  4188     0293                     CCP1CON         equ	659	;# 
  4189     0294                     CCP1CAP         equ	660	;# 
  4190     0295                     CCPR2           equ	661	;# 
  4191     0295                     CCPR2L          equ	661	;# 
  4192     0296                     CCPR2H          equ	662	;# 
  4193     0297                     CCP2CON         equ	663	;# 
  4194     0298                     CCP2CAP         equ	664	;# 
  4195     029F                     CCPTMRS         equ	671	;# 
  4196     030C                     SLRCONA         equ	780	;# 
  4197     030D                     SLRCONB         equ	781	;# 
  4198     030E                     SLRCONC         equ	782	;# 
  4199     0311                     CCPR3           equ	785	;# 
  4200     0311                     CCPR3L          equ	785	;# 
  4201     0312                     CCPR3H          equ	786	;# 
  4202     0313                     CCP3CON         equ	787	;# 
  4203     0314                     CCP3CAP         equ	788	;# 
  4204     0315                     CCPR4           equ	789	;# 
  4205     0315                     CCPR4L          equ	789	;# 
  4206     0316                     CCPR4H          equ	790	;# 
  4207     0317                     CCP4CON         equ	791	;# 
  4208     0318                     CCP4CAP         equ	792	;# 
  4209     038C                     INLVLA          equ	908	;# 
  4210     038D                     INLVLB          equ	909	;# 
  4211     038E                     INLVLC          equ	910	;# 
  4212     0391                     IOCAP           equ	913	;# 
  4213     0392                     IOCAN           equ	914	;# 
  4214     0393                     IOCAF           equ	915	;# 
  4215     0394                     IOCBP           equ	916	;# 
  4216     0395                     IOCBN           equ	917	;# 
  4217     0396                     IOCBF           equ	918	;# 
  4218     0397                     IOCCP           equ	919	;# 
  4219     0398                     IOCCN           equ	920	;# 
  4220     0399                     IOCCF           equ	921	;# 
  4221     039A                     CLKRCON         equ	922	;# 
  4222     039C                     MDCON           equ	924	;# 
  4223     039D                     MDSRC           equ	925	;# 
  4224     039E                     MDCARH          equ	926	;# 
  4225     039F                     MDCARL          equ	927	;# 
  4226     0411                     TMR3            equ	1041	;# 
  4227     0411                     TMR3L           equ	1041	;# 
  4228     0412                     TMR3H           equ	1042	;# 
  4229     0413                     T3CON           equ	1043	;# 
  4230     0414                     T3GCON          equ	1044	;# 
  4231     0415                     TMR4            equ	1045	;# 
  4232     0416                     PR4             equ	1046	;# 
  4233     0417                     T4CON           equ	1047	;# 
  4234     0418                     TMR5            equ	1048	;# 
  4235     0418                     TMR5L           equ	1048	;# 
  4236     0419                     TMR5H           equ	1049	;# 
  4237     041A                     T5CON           equ	1050	;# 
  4238     041B                     T5GCON          equ	1051	;# 
  4239     041C                     TMR6            equ	1052	;# 
  4240     041D                     PR6             equ	1053	;# 
  4241     041E                     T6CON           equ	1054	;# 
  4242     041F                     CCDCON          equ	1055	;# 
  4243     0498                     NCO1ACC         equ	1176	;# 
  4244     0498                     NCO1ACCL        equ	1176	;# 
  4245     0499                     NCO1ACCH        equ	1177	;# 
  4246     049A                     NCO1ACCU        equ	1178	;# 
  4247     049B                     NCO1INC         equ	1179	;# 
  4248     049B                     NCO1INCL        equ	1179	;# 
  4249     049C                     NCO1INCH        equ	1180	;# 
  4250     049D                     NCO1INCU        equ	1181	;# 
  4251     049E                     NCO1CON         equ	1182	;# 
  4252     049F                     NCO1CLK         equ	1183	;# 
  4253     0617                     PWM5DCL         equ	1559	;# 
  4254     0618                     PWM5DCH         equ	1560	;# 
  4255     0619                     PWM5CON         equ	1561	;# 
  4256     0619                     PWM5CON0        equ	1561	;# 
  4257     061A                     PWM6DCL         equ	1562	;# 
  4258     061B                     PWM6DCH         equ	1563	;# 
  4259     061C                     PWM6CON         equ	1564	;# 
  4260     061C                     PWM6CON0        equ	1564	;# 
  4261     061F                     PWMTMRS         equ	1567	;# 
  4262     0691                     CWG1CLKCON      equ	1681	;# 
  4263     0692                     CWG1DAT         equ	1682	;# 
  4264     0693                     CWG1DBR         equ	1683	;# 
  4265     0694                     CWG1DBF         equ	1684	;# 
  4266     0695                     CWG1CON0        equ	1685	;# 
  4267     0696                     CWG1CON1        equ	1686	;# 
  4268     0697                     CWG1AS0         equ	1687	;# 
  4269     0698                     CWG1AS1         equ	1688	;# 
  4270     0699                     CWG1STR         equ	1689	;# 
  4271     0711                     CWG2CLKCON      equ	1809	;# 
  4272     0712                     CWG2DAT         equ	1810	;# 
  4273     0713                     CWG2DBR         equ	1811	;# 
  4274     0714                     CWG2DBF         equ	1812	;# 
  4275     0715                     CWG2CON0        equ	1813	;# 
  4276     0716                     CWG2CON1        equ	1814	;# 
  4277     0717                     CWG2AS0         equ	1815	;# 
  4278     0718                     CWG2AS1         equ	1816	;# 
  4279     0719                     CWG2STR         equ	1817	;# 
  4280     0891                     NVMADR          equ	2193	;# 
  4281     0891                     EEADR           equ	2193	;# 
  4282     0891                     PMADR           equ	2193	;# 
  4283     0891                     NVMADRL         equ	2193	;# 
  4284     0891                     EEADRL          equ	2193	;# 
  4285     0891                     PMADRL          equ	2193	;# 
  4286     0892                     NVMADRH         equ	2194	;# 
  4287     0892                     EEADRH          equ	2194	;# 
  4288     0892                     PMADRH          equ	2194	;# 
  4289     0893                     NVMDAT          equ	2195	;# 
  4290     0893                     EEDAT           equ	2195	;# 
  4291     0893                     PMDAT           equ	2195	;# 
  4292     0893                     NVMDATL         equ	2195	;# 
  4293     0893                     EEDATL          equ	2195	;# 
  4294     0893                     PMDATL          equ	2195	;# 
  4295     0894                     NVMDATH         equ	2196	;# 
  4296     0894                     EEDATH          equ	2196	;# 
  4297     0894                     PMDATH          equ	2196	;# 
  4298     0895                     NVMCON1         equ	2197	;# 
  4299     0895                     EECON1          equ	2197	;# 
  4300     0895                     PMCON1          equ	2197	;# 
  4301     0896                     NVMCON2         equ	2198	;# 
  4302     0896                     EECON2          equ	2198	;# 
  4303     0896                     PMCON2          equ	2198	;# 
  4304     089B                     PCON0           equ	2203	;# 
  4305     0911                     PMD0            equ	2321	;# 
  4306     0912                     PMD1            equ	2322	;# 
  4307     0913                     PMD2            equ	2323	;# 
  4308     0914                     PMD3            equ	2324	;# 
  4309     0915                     PMD4            equ	2325	;# 
  4310     0916                     PMD5            equ	2326	;# 
  4311     0918                     CPUDOZE         equ	2328	;# 
  4312     0919                     OSCCON1         equ	2329	;# 
  4313     091A                     OSCCON2         equ	2330	;# 
  4314     091B                     OSCCON3         equ	2331	;# 
  4315     091C                     OSCSTAT1        equ	2332	;# 
  4316     091D                     OSCEN           equ	2333	;# 
  4317     091E                     OSCTUNE         equ	2334	;# 
  4318     091F                     OSCFRQ          equ	2335	;# 
  4319     0E0F                     PPSLOCK         equ	3599	;# 
  4320     0E10                     INTPPS          equ	3600	;# 
  4321     0E11                     T0CKIPPS        equ	3601	;# 
  4322     0E12                     T1CKIPPS        equ	3602	;# 
  4323     0E13                     T1GPPS          equ	3603	;# 
  4324     0E14                     CCP1PPS         equ	3604	;# 
  4325     0E15                     CCP2PPS         equ	3605	;# 
  4326     0E16                     CCP3PPS         equ	3606	;# 
  4327     0E17                     CCP4PPS         equ	3607	;# 
  4328     0E18                     CWG1PPS         equ	3608	;# 
  4329     0E19                     CWG2PPS         equ	3609	;# 
  4330     0E1A                     MDCIN1PPS       equ	3610	;# 
  4331     0E1B                     MDCIN2PPS       equ	3611	;# 
  4332     0E1C                     MDMINPPS        equ	3612	;# 
  4333     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4334     0E1E                     SSP2DATPPS      equ	3614	;# 
  4335     0E1F                     SSP2SSPPS       equ	3615	;# 
  4336     0E20                     SSP1CLKPPS      equ	3616	;# 
  4337     0E21                     SSP1DATPPS      equ	3617	;# 
  4338     0E22                     SSP1SSPPS       equ	3618	;# 
  4339     0E24                     RXPPS           equ	3620	;# 
  4340     0E25                     TXPPS           equ	3621	;# 
  4341     0E28                     CLCIN0PPS       equ	3624	;# 
  4342     0E29                     CLCIN1PPS       equ	3625	;# 
  4343     0E2A                     CLCIN2PPS       equ	3626	;# 
  4344     0E2B                     CLCIN3PPS       equ	3627	;# 
  4345     0E2C                     T3CKIPPS        equ	3628	;# 
  4346     0E2D                     T3GPPS          equ	3629	;# 
  4347     0E2E                     T5CKIPPS        equ	3630	;# 
  4348     0E2F                     T5GPPS          equ	3631	;# 
  4349     0E90                     RA0PPS          equ	3728	;# 
  4350     0E91                     RA1PPS          equ	3729	;# 
  4351     0E92                     RA2PPS          equ	3730	;# 
  4352     0E94                     RA4PPS          equ	3732	;# 
  4353     0E95                     RA5PPS          equ	3733	;# 
  4354     0E9C                     RB4PPS          equ	3740	;# 
  4355     0E9D                     RB5PPS          equ	3741	;# 
  4356     0E9E                     RB6PPS          equ	3742	;# 
  4357     0E9F                     RB7PPS          equ	3743	;# 
  4358     0EA0                     RC0PPS          equ	3744	;# 
  4359     0EA1                     RC1PPS          equ	3745	;# 
  4360     0EA2                     RC2PPS          equ	3746	;# 
  4361     0EA3                     RC3PPS          equ	3747	;# 
  4362     0EA4                     RC4PPS          equ	3748	;# 
  4363     0EA5                     RC5PPS          equ	3749	;# 
  4364     0EA6                     RC6PPS          equ	3750	;# 
  4365     0EA7                     RC7PPS          equ	3751	;# 
  4366     0F0F                     CLCDATA         equ	3855	;# 
  4367     0F10                     CLC1CON         equ	3856	;# 
  4368     0F11                     CLC1POL         equ	3857	;# 
  4369     0F12                     CLC1SEL0        equ	3858	;# 
  4370     0F13                     CLC1SEL1        equ	3859	;# 
  4371     0F14                     CLC1SEL2        equ	3860	;# 
  4372     0F15                     CLC1SEL3        equ	3861	;# 
  4373     0F16                     CLC1GLS0        equ	3862	;# 
  4374     0F17                     CLC1GLS1        equ	3863	;# 
  4375     0F18                     CLC1GLS2        equ	3864	;# 
  4376     0F19                     CLC1GLS3        equ	3865	;# 
  4377     0F1A                     CLC2CON         equ	3866	;# 
  4378     0F1B                     CLC2POL         equ	3867	;# 
  4379     0F1C                     CLC2SEL0        equ	3868	;# 
  4380     0F1D                     CLC2SEL1        equ	3869	;# 
  4381     0F1E                     CLC2SEL2        equ	3870	;# 
  4382     0F1F                     CLC2SEL3        equ	3871	;# 
  4383     0F20                     CLC2GLS0        equ	3872	;# 
  4384     0F21                     CLC2GLS1        equ	3873	;# 
  4385     0F22                     CLC2GLS2        equ	3874	;# 
  4386     0F23                     CLC2GLS3        equ	3875	;# 
  4387     0F24                     CLC3CON         equ	3876	;# 
  4388     0F25                     CLC3POL         equ	3877	;# 
  4389     0F26                     CLC3SEL0        equ	3878	;# 
  4390     0F27                     CLC3SEL1        equ	3879	;# 
  4391     0F28                     CLC3SEL2        equ	3880	;# 
  4392     0F29                     CLC3SEL3        equ	3881	;# 
  4393     0F2A                     CLC3GLS0        equ	3882	;# 
  4394     0F2B                     CLC3GLS1        equ	3883	;# 
  4395     0F2C                     CLC3GLS2        equ	3884	;# 
  4396     0F2D                     CLC3GLS3        equ	3885	;# 
  4397     0F2E                     CLC4CON         equ	3886	;# 
  4398     0F2F                     CLC4POL         equ	3887	;# 
  4399     0F30                     CLC4SEL0        equ	3888	;# 
  4400     0F31                     CLC4SEL1        equ	3889	;# 
  4401     0F32                     CLC4SEL2        equ	3890	;# 
  4402     0F33                     CLC4SEL3        equ	3891	;# 
  4403     0F34                     CLC4GLS0        equ	3892	;# 
  4404     0F35                     CLC4GLS1        equ	3893	;# 
  4405     0F36                     CLC4GLS2        equ	3894	;# 
  4406     0F37                     CLC4GLS3        equ	3895	;# 
  4407     0FE4                     STATUS_SHAD     equ	4068	;# 
  4408     0FE5                     WREG_SHAD       equ	4069	;# 
  4409     0FE6                     BSR_SHAD        equ	4070	;# 
  4410     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4411     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4412     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4413     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4414     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4415     0FED                     STKPTR          equ	4077	;# 
  4416     0FEE                     TOSL            equ	4078	;# 
  4417     0FEF                     TOSH            equ	4079	;# 
  4418     0000                     INDF0           equ	0	;# 
  4419     0001                     INDF1           equ	1	;# 
  4420     0002                     PCL             equ	2	;# 
  4421     0003                     STATUS          equ	3	;# 
  4422     0004                     FSR0L           equ	4	;# 
  4423     0005                     FSR0H           equ	5	;# 
  4424     0006                     FSR1L           equ	6	;# 
  4425     0007                     FSR1H           equ	7	;# 
  4426     0008                     BSR             equ	8	;# 
  4427     0009                     WREG            equ	9	;# 
  4428     000A                     PCLATH          equ	10	;# 
  4429     000B                     INTCON          equ	11	;# 
  4430     000C                     PORTA           equ	12	;# 
  4431     000D                     PORTB           equ	13	;# 
  4432     000E                     PORTC           equ	14	;# 
  4433     0010                     PIR0            equ	16	;# 
  4434     0011                     PIR1            equ	17	;# 
  4435     0012                     PIR2            equ	18	;# 
  4436     0013                     PIR3            equ	19	;# 
  4437     0014                     PIR4            equ	20	;# 
  4438     0015                     TMR0L           equ	21	;# 
  4439     0015                     TMR0            equ	21	;# 
  4440     0016                     TMR0H           equ	22	;# 
  4441     0016                     PR0             equ	22	;# 
  4442     0017                     T0CON0          equ	23	;# 
  4443     0018                     T0CON1          equ	24	;# 
  4444     0019                     TMR1            equ	25	;# 
  4445     0019                     TMR1L           equ	25	;# 
  4446     001A                     TMR1H           equ	26	;# 
  4447     001B                     T1CON           equ	27	;# 
  4448     001C                     T1GCON          equ	28	;# 
  4449     001D                     TMR2            equ	29	;# 
  4450     001E                     PR2             equ	30	;# 
  4451     001F                     T2CON           equ	31	;# 
  4452     008C                     TRISA           equ	140	;# 
  4453     008D                     TRISB           equ	141	;# 
  4454     008E                     TRISC           equ	142	;# 
  4455     0090                     PIE0            equ	144	;# 
  4456     0091                     PIE1            equ	145	;# 
  4457     0092                     PIE2            equ	146	;# 
  4458     0093                     PIE3            equ	147	;# 
  4459     0094                     PIE4            equ	148	;# 
  4460     0097                     WDTCON          equ	151	;# 
  4461     009B                     ADRES           equ	155	;# 
  4462     009B                     ADRESL          equ	155	;# 
  4463     009C                     ADRESH          equ	156	;# 
  4464     009D                     ADCON0          equ	157	;# 
  4465     009E                     ADCON1          equ	158	;# 
  4466     009F                     ADACT           equ	159	;# 
  4467     010C                     LATA            equ	268	;# 
  4468     010D                     LATB            equ	269	;# 
  4469     010E                     LATC            equ	270	;# 
  4470     0111                     CM1CON0         equ	273	;# 
  4471     0112                     CM1CON1         equ	274	;# 
  4472     0113                     CM2CON0         equ	275	;# 
  4473     0114                     CM2CON1         equ	276	;# 
  4474     0115                     CMOUT           equ	277	;# 
  4475     0116                     BORCON          equ	278	;# 
  4476     0117                     FVRCON          equ	279	;# 
  4477     0118                     DACCON0         equ	280	;# 
  4478     0119                     DACCON1         equ	281	;# 
  4479     018C                     ANSELA          equ	396	;# 
  4480     018D                     ANSELB          equ	397	;# 
  4481     018E                     ANSELC          equ	398	;# 
  4482     0197                     VREGCON         equ	407	;# 
  4483     0199                     RC1REG          equ	409	;# 
  4484     0199                     RCREG           equ	409	;# 
  4485     0199                     RCREG1          equ	409	;# 
  4486     019A                     TX1REG          equ	410	;# 
  4487     019A                     TXREG1          equ	410	;# 
  4488     019A                     TXREG           equ	410	;# 
  4489     019B                     SP1BRG          equ	411	;# 
  4490     019B                     SPBRG           equ	411	;# 
  4491     019B                     SP1BRGL         equ	411	;# 
  4492     019B                     SPBRG1          equ	411	;# 
  4493     019B                     SPBRGL          equ	411	;# 
  4494     019C                     SP1BRGH         equ	412	;# 
  4495     019C                     SPBRGH          equ	412	;# 
  4496     019C                     SPBRGH1         equ	412	;# 
  4497     019D                     RC1STA          equ	413	;# 
  4498     019D                     RCSTA1          equ	413	;# 
  4499     019D                     RCSTA           equ	413	;# 
  4500     019E                     TX1STA          equ	414	;# 
  4501     019E                     TXSTA1          equ	414	;# 
  4502     019E                     TXSTA           equ	414	;# 
  4503     019F                     BAUD1CON        equ	415	;# 
  4504     019F                     BAUDCON1        equ	415	;# 
  4505     019F                     BAUDCTL1        equ	415	;# 
  4506     019F                     BAUDCON         equ	415	;# 
  4507     019F                     BAUDCTL         equ	415	;# 
  4508     020C                     WPUA            equ	524	;# 
  4509     020D                     WPUB            equ	525	;# 
  4510     020E                     WPUC            equ	526	;# 
  4511     0211                     SSP1BUF         equ	529	;# 
  4512     0211                     SSPBUF          equ	529	;# 
  4513     0212                     SSP1ADD         equ	530	;# 
  4514     0212                     SSPADD          equ	530	;# 
  4515     0213                     SSP1MSK         equ	531	;# 
  4516     0213                     SSPMSK          equ	531	;# 
  4517     0214                     SSP1STAT        equ	532	;# 
  4518     0214                     SSPSTAT         equ	532	;# 
  4519     0215                     SSP1CON1        equ	533	;# 
  4520     0215                     SSPCON          equ	533	;# 
  4521     0215                     SSPCON1         equ	533	;# 
  4522     0215                     SSP1CON         equ	533	;# 
  4523     0216                     SSP1CON2        equ	534	;# 
  4524     0216                     SSPCON2         equ	534	;# 
  4525     0217                     SSP1CON3        equ	535	;# 
  4526     0217                     SSPCON3         equ	535	;# 
  4527     0219                     SSP2BUF         equ	537	;# 
  4528     021A                     SSP2ADD         equ	538	;# 
  4529     021B                     SSP2MSK         equ	539	;# 
  4530     021C                     SSP2STAT        equ	540	;# 
  4531     021D                     SSP2CON1        equ	541	;# 
  4532     021D                     SSP2CON         equ	541	;# 
  4533     021E                     SSP2CON2        equ	542	;# 
  4534     021F                     SSP2CON3        equ	543	;# 
  4535     028C                     ODCONA          equ	652	;# 
  4536     028D                     ODCONB          equ	653	;# 
  4537     028E                     ODCONC          equ	654	;# 
  4538     0291                     CCPR1           equ	657	;# 
  4539     0291                     CCPR1L          equ	657	;# 
  4540     0292                     CCPR1H          equ	658	;# 
  4541     0293                     CCP1CON         equ	659	;# 
  4542     0294                     CCP1CAP         equ	660	;# 
  4543     0295                     CCPR2           equ	661	;# 
  4544     0295                     CCPR2L          equ	661	;# 
  4545     0296                     CCPR2H          equ	662	;# 
  4546     0297                     CCP2CON         equ	663	;# 
  4547     0298                     CCP2CAP         equ	664	;# 
  4548     029F                     CCPTMRS         equ	671	;# 
  4549     030C                     SLRCONA         equ	780	;# 
  4550     030D                     SLRCONB         equ	781	;# 
  4551     030E                     SLRCONC         equ	782	;# 
  4552     0311                     CCPR3           equ	785	;# 
  4553     0311                     CCPR3L          equ	785	;# 
  4554     0312                     CCPR3H          equ	786	;# 
  4555     0313                     CCP3CON         equ	787	;# 
  4556     0314                     CCP3CAP         equ	788	;# 
  4557     0315                     CCPR4           equ	789	;# 
  4558     0315                     CCPR4L          equ	789	;# 
  4559     0316                     CCPR4H          equ	790	;# 
  4560     0317                     CCP4CON         equ	791	;# 
  4561     0318                     CCP4CAP         equ	792	;# 
  4562     038C                     INLVLA          equ	908	;# 
  4563     038D                     INLVLB          equ	909	;# 
  4564     038E                     INLVLC          equ	910	;# 
  4565     0391                     IOCAP           equ	913	;# 
  4566     0392                     IOCAN           equ	914	;# 
  4567     0393                     IOCAF           equ	915	;# 
  4568     0394                     IOCBP           equ	916	;# 
  4569     0395                     IOCBN           equ	917	;# 
  4570     0396                     IOCBF           equ	918	;# 
  4571     0397                     IOCCP           equ	919	;# 
  4572     0398                     IOCCN           equ	920	;# 
  4573     0399                     IOCCF           equ	921	;# 
  4574     039A                     CLKRCON         equ	922	;# 
  4575     039C                     MDCON           equ	924	;# 
  4576     039D                     MDSRC           equ	925	;# 
  4577     039E                     MDCARH          equ	926	;# 
  4578     039F                     MDCARL          equ	927	;# 
  4579     0411                     TMR3            equ	1041	;# 
  4580     0411                     TMR3L           equ	1041	;# 
  4581     0412                     TMR3H           equ	1042	;# 
  4582     0413                     T3CON           equ	1043	;# 
  4583     0414                     T3GCON          equ	1044	;# 
  4584     0415                     TMR4            equ	1045	;# 
  4585     0416                     PR4             equ	1046	;# 
  4586     0417                     T4CON           equ	1047	;# 
  4587     0418                     TMR5            equ	1048	;# 
  4588     0418                     TMR5L           equ	1048	;# 
  4589     0419                     TMR5H           equ	1049	;# 
  4590     041A                     T5CON           equ	1050	;# 
  4591     041B                     T5GCON          equ	1051	;# 
  4592     041C                     TMR6            equ	1052	;# 
  4593     041D                     PR6             equ	1053	;# 
  4594     041E                     T6CON           equ	1054	;# 
  4595     041F                     CCDCON          equ	1055	;# 
  4596     0498                     NCO1ACC         equ	1176	;# 
  4597     0498                     NCO1ACCL        equ	1176	;# 
  4598     0499                     NCO1ACCH        equ	1177	;# 
  4599     049A                     NCO1ACCU        equ	1178	;# 
  4600     049B                     NCO1INC         equ	1179	;# 
  4601     049B                     NCO1INCL        equ	1179	;# 
  4602     049C                     NCO1INCH        equ	1180	;# 
  4603     049D                     NCO1INCU        equ	1181	;# 
  4604     049E                     NCO1CON         equ	1182	;# 
  4605     049F                     NCO1CLK         equ	1183	;# 
  4606     0617                     PWM5DCL         equ	1559	;# 
  4607     0618                     PWM5DCH         equ	1560	;# 
  4608     0619                     PWM5CON         equ	1561	;# 
  4609     0619                     PWM5CON0        equ	1561	;# 
  4610     061A                     PWM6DCL         equ	1562	;# 
  4611     061B                     PWM6DCH         equ	1563	;# 
  4612     061C                     PWM6CON         equ	1564	;# 
  4613     061C                     PWM6CON0        equ	1564	;# 
  4614     061F                     PWMTMRS         equ	1567	;# 
  4615     0691                     CWG1CLKCON      equ	1681	;# 
  4616     0692                     CWG1DAT         equ	1682	;# 
  4617     0693                     CWG1DBR         equ	1683	;# 
  4618     0694                     CWG1DBF         equ	1684	;# 
  4619     0695                     CWG1CON0        equ	1685	;# 
  4620     0696                     CWG1CON1        equ	1686	;# 
  4621     0697                     CWG1AS0         equ	1687	;# 
  4622     0698                     CWG1AS1         equ	1688	;# 
  4623     0699                     CWG1STR         equ	1689	;# 
  4624     0711                     CWG2CLKCON      equ	1809	;# 
  4625     0712                     CWG2DAT         equ	1810	;# 
  4626     0713                     CWG2DBR         equ	1811	;# 
  4627     0714                     CWG2DBF         equ	1812	;# 
  4628     0715                     CWG2CON0        equ	1813	;# 
  4629     0716                     CWG2CON1        equ	1814	;# 
  4630     0717                     CWG2AS0         equ	1815	;# 
  4631     0718                     CWG2AS1         equ	1816	;# 
  4632     0719                     CWG2STR         equ	1817	;# 
  4633     0891                     NVMADR          equ	2193	;# 
  4634     0891                     EEADR           equ	2193	;# 
  4635     0891                     PMADR           equ	2193	;# 
  4636     0891                     NVMADRL         equ	2193	;# 
  4637     0891                     EEADRL          equ	2193	;# 
  4638     0891                     PMADRL          equ	2193	;# 
  4639     0892                     NVMADRH         equ	2194	;# 
  4640     0892                     EEADRH          equ	2194	;# 
  4641     0892                     PMADRH          equ	2194	;# 
  4642     0893                     NVMDAT          equ	2195	;# 
  4643     0893                     EEDAT           equ	2195	;# 
  4644     0893                     PMDAT           equ	2195	;# 
  4645     0893                     NVMDATL         equ	2195	;# 
  4646     0893                     EEDATL          equ	2195	;# 
  4647     0893                     PMDATL          equ	2195	;# 
  4648     0894                     NVMDATH         equ	2196	;# 
  4649     0894                     EEDATH          equ	2196	;# 
  4650     0894                     PMDATH          equ	2196	;# 
  4651     0895                     NVMCON1         equ	2197	;# 
  4652     0895                     EECON1          equ	2197	;# 
  4653     0895                     PMCON1          equ	2197	;# 
  4654     0896                     NVMCON2         equ	2198	;# 
  4655     0896                     EECON2          equ	2198	;# 
  4656     0896                     PMCON2          equ	2198	;# 
  4657     089B                     PCON0           equ	2203	;# 
  4658     0911                     PMD0            equ	2321	;# 
  4659     0912                     PMD1            equ	2322	;# 
  4660     0913                     PMD2            equ	2323	;# 
  4661     0914                     PMD3            equ	2324	;# 
  4662     0915                     PMD4            equ	2325	;# 
  4663     0916                     PMD5            equ	2326	;# 
  4664     0918                     CPUDOZE         equ	2328	;# 
  4665     0919                     OSCCON1         equ	2329	;# 
  4666     091A                     OSCCON2         equ	2330	;# 
  4667     091B                     OSCCON3         equ	2331	;# 
  4668     091C                     OSCSTAT1        equ	2332	;# 
  4669     091D                     OSCEN           equ	2333	;# 
  4670     091E                     OSCTUNE         equ	2334	;# 
  4671     091F                     OSCFRQ          equ	2335	;# 
  4672     0E0F                     PPSLOCK         equ	3599	;# 
  4673     0E10                     INTPPS          equ	3600	;# 
  4674     0E11                     T0CKIPPS        equ	3601	;# 
  4675     0E12                     T1CKIPPS        equ	3602	;# 
  4676     0E13                     T1GPPS          equ	3603	;# 
  4677     0E14                     CCP1PPS         equ	3604	;# 
  4678     0E15                     CCP2PPS         equ	3605	;# 
  4679     0E16                     CCP3PPS         equ	3606	;# 
  4680     0E17                     CCP4PPS         equ	3607	;# 
  4681     0E18                     CWG1PPS         equ	3608	;# 
  4682     0E19                     CWG2PPS         equ	3609	;# 
  4683     0E1A                     MDCIN1PPS       equ	3610	;# 
  4684     0E1B                     MDCIN2PPS       equ	3611	;# 
  4685     0E1C                     MDMINPPS        equ	3612	;# 
  4686     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4687     0E1E                     SSP2DATPPS      equ	3614	;# 
  4688     0E1F                     SSP2SSPPS       equ	3615	;# 
  4689     0E20                     SSP1CLKPPS      equ	3616	;# 
  4690     0E21                     SSP1DATPPS      equ	3617	;# 
  4691     0E22                     SSP1SSPPS       equ	3618	;# 
  4692     0E24                     RXPPS           equ	3620	;# 
  4693     0E25                     TXPPS           equ	3621	;# 
  4694     0E28                     CLCIN0PPS       equ	3624	;# 
  4695     0E29                     CLCIN1PPS       equ	3625	;# 
  4696     0E2A                     CLCIN2PPS       equ	3626	;# 
  4697     0E2B                     CLCIN3PPS       equ	3627	;# 
  4698     0E2C                     T3CKIPPS        equ	3628	;# 
  4699     0E2D                     T3GPPS          equ	3629	;# 
  4700     0E2E                     T5CKIPPS        equ	3630	;# 
  4701     0E2F                     T5GPPS          equ	3631	;# 
  4702     0E90                     RA0PPS          equ	3728	;# 
  4703     0E91                     RA1PPS          equ	3729	;# 
  4704     0E92                     RA2PPS          equ	3730	;# 
  4705     0E94                     RA4PPS          equ	3732	;# 
  4706     0E95                     RA5PPS          equ	3733	;# 
  4707     0E9C                     RB4PPS          equ	3740	;# 
  4708     0E9D                     RB5PPS          equ	3741	;# 
  4709     0E9E                     RB6PPS          equ	3742	;# 
  4710     0E9F                     RB7PPS          equ	3743	;# 
  4711     0EA0                     RC0PPS          equ	3744	;# 
  4712     0EA1                     RC1PPS          equ	3745	;# 
  4713     0EA2                     RC2PPS          equ	3746	;# 
  4714     0EA3                     RC3PPS          equ	3747	;# 
  4715     0EA4                     RC4PPS          equ	3748	;# 
  4716     0EA5                     RC5PPS          equ	3749	;# 
  4717     0EA6                     RC6PPS          equ	3750	;# 
  4718     0EA7                     RC7PPS          equ	3751	;# 
  4719     0F0F                     CLCDATA         equ	3855	;# 
  4720     0F10                     CLC1CON         equ	3856	;# 
  4721     0F11                     CLC1POL         equ	3857	;# 
  4722     0F12                     CLC1SEL0        equ	3858	;# 
  4723     0F13                     CLC1SEL1        equ	3859	;# 
  4724     0F14                     CLC1SEL2        equ	3860	;# 
  4725     0F15                     CLC1SEL3        equ	3861	;# 
  4726     0F16                     CLC1GLS0        equ	3862	;# 
  4727     0F17                     CLC1GLS1        equ	3863	;# 
  4728     0F18                     CLC1GLS2        equ	3864	;# 
  4729     0F19                     CLC1GLS3        equ	3865	;# 
  4730     0F1A                     CLC2CON         equ	3866	;# 
  4731     0F1B                     CLC2POL         equ	3867	;# 
  4732     0F1C                     CLC2SEL0        equ	3868	;# 
  4733     0F1D                     CLC2SEL1        equ	3869	;# 
  4734     0F1E                     CLC2SEL2        equ	3870	;# 
  4735     0F1F                     CLC2SEL3        equ	3871	;# 
  4736     0F20                     CLC2GLS0        equ	3872	;# 
  4737     0F21                     CLC2GLS1        equ	3873	;# 
  4738     0F22                     CLC2GLS2        equ	3874	;# 
  4739     0F23                     CLC2GLS3        equ	3875	;# 
  4740     0F24                     CLC3CON         equ	3876	;# 
  4741     0F25                     CLC3POL         equ	3877	;# 
  4742     0F26                     CLC3SEL0        equ	3878	;# 
  4743     0F27                     CLC3SEL1        equ	3879	;# 
  4744     0F28                     CLC3SEL2        equ	3880	;# 
  4745     0F29                     CLC3SEL3        equ	3881	;# 
  4746     0F2A                     CLC3GLS0        equ	3882	;# 
  4747     0F2B                     CLC3GLS1        equ	3883	;# 
  4748     0F2C                     CLC3GLS2        equ	3884	;# 
  4749     0F2D                     CLC3GLS3        equ	3885	;# 
  4750     0F2E                     CLC4CON         equ	3886	;# 
  4751     0F2F                     CLC4POL         equ	3887	;# 
  4752     0F30                     CLC4SEL0        equ	3888	;# 
  4753     0F31                     CLC4SEL1        equ	3889	;# 
  4754     0F32                     CLC4SEL2        equ	3890	;# 
  4755     0F33                     CLC4SEL3        equ	3891	;# 
  4756     0F34                     CLC4GLS0        equ	3892	;# 
  4757     0F35                     CLC4GLS1        equ	3893	;# 
  4758     0F36                     CLC4GLS2        equ	3894	;# 
  4759     0F37                     CLC4GLS3        equ	3895	;# 
  4760     0FE4                     STATUS_SHAD     equ	4068	;# 
  4761     0FE5                     WREG_SHAD       equ	4069	;# 
  4762     0FE6                     BSR_SHAD        equ	4070	;# 
  4763     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4764     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4765     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4766     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4767     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4768     0FED                     STKPTR          equ	4077	;# 
  4769     0FEE                     TOSL            equ	4078	;# 
  4770     0FEF                     TOSH            equ	4079	;# 
  4771     0000                     INDF0           equ	0	;# 
  4772     0001                     INDF1           equ	1	;# 
  4773     0002                     PCL             equ	2	;# 
  4774     0003                     STATUS          equ	3	;# 
  4775     0004                     FSR0L           equ	4	;# 
  4776     0005                     FSR0H           equ	5	;# 
  4777     0006                     FSR1L           equ	6	;# 
  4778     0007                     FSR1H           equ	7	;# 
  4779     0008                     BSR             equ	8	;# 
  4780     0009                     WREG            equ	9	;# 
  4781     000A                     PCLATH          equ	10	;# 
  4782     000B                     INTCON          equ	11	;# 
  4783     000C                     PORTA           equ	12	;# 
  4784     000D                     PORTB           equ	13	;# 
  4785     000E                     PORTC           equ	14	;# 
  4786     0010                     PIR0            equ	16	;# 
  4787     0011                     PIR1            equ	17	;# 
  4788     0012                     PIR2            equ	18	;# 
  4789     0013                     PIR3            equ	19	;# 
  4790     0014                     PIR4            equ	20	;# 
  4791     0015                     TMR0L           equ	21	;# 
  4792     0015                     TMR0            equ	21	;# 
  4793     0016                     TMR0H           equ	22	;# 
  4794     0016                     PR0             equ	22	;# 
  4795     0017                     T0CON0          equ	23	;# 
  4796     0018                     T0CON1          equ	24	;# 
  4797     0019                     TMR1            equ	25	;# 
  4798     0019                     TMR1L           equ	25	;# 
  4799     001A                     TMR1H           equ	26	;# 
  4800     001B                     T1CON           equ	27	;# 
  4801     001C                     T1GCON          equ	28	;# 
  4802     001D                     TMR2            equ	29	;# 
  4803     001E                     PR2             equ	30	;# 
  4804     001F                     T2CON           equ	31	;# 
  4805     008C                     TRISA           equ	140	;# 
  4806     008D                     TRISB           equ	141	;# 
  4807     008E                     TRISC           equ	142	;# 
  4808     0090                     PIE0            equ	144	;# 
  4809     0091                     PIE1            equ	145	;# 
  4810     0092                     PIE2            equ	146	;# 
  4811     0093                     PIE3            equ	147	;# 
  4812     0094                     PIE4            equ	148	;# 
  4813     0097                     WDTCON          equ	151	;# 
  4814     009B                     ADRES           equ	155	;# 
  4815     009B                     ADRESL          equ	155	;# 
  4816     009C                     ADRESH          equ	156	;# 
  4817     009D                     ADCON0          equ	157	;# 
  4818     009E                     ADCON1          equ	158	;# 
  4819     009F                     ADACT           equ	159	;# 
  4820     010C                     LATA            equ	268	;# 
  4821     010D                     LATB            equ	269	;# 
  4822     010E                     LATC            equ	270	;# 
  4823     0111                     CM1CON0         equ	273	;# 
  4824     0112                     CM1CON1         equ	274	;# 
  4825     0113                     CM2CON0         equ	275	;# 
  4826     0114                     CM2CON1         equ	276	;# 
  4827     0115                     CMOUT           equ	277	;# 
  4828     0116                     BORCON          equ	278	;# 
  4829     0117                     FVRCON          equ	279	;# 
  4830     0118                     DACCON0         equ	280	;# 
  4831     0119                     DACCON1         equ	281	;# 
  4832     018C                     ANSELA          equ	396	;# 
  4833     018D                     ANSELB          equ	397	;# 
  4834     018E                     ANSELC          equ	398	;# 
  4835     0197                     VREGCON         equ	407	;# 
  4836     0199                     RC1REG          equ	409	;# 
  4837     0199                     RCREG           equ	409	;# 
  4838     0199                     RCREG1          equ	409	;# 
  4839     019A                     TX1REG          equ	410	;# 
  4840     019A                     TXREG1          equ	410	;# 
  4841     019A                     TXREG           equ	410	;# 
  4842     019B                     SP1BRG          equ	411	;# 
  4843     019B                     SPBRG           equ	411	;# 
  4844     019B                     SP1BRGL         equ	411	;# 
  4845     019B                     SPBRG1          equ	411	;# 
  4846     019B                     SPBRGL          equ	411	;# 
  4847     019C                     SP1BRGH         equ	412	;# 
  4848     019C                     SPBRGH          equ	412	;# 
  4849     019C                     SPBRGH1         equ	412	;# 
  4850     019D                     RC1STA          equ	413	;# 
  4851     019D                     RCSTA1          equ	413	;# 
  4852     019D                     RCSTA           equ	413	;# 
  4853     019E                     TX1STA          equ	414	;# 
  4854     019E                     TXSTA1          equ	414	;# 
  4855     019E                     TXSTA           equ	414	;# 
  4856     019F                     BAUD1CON        equ	415	;# 
  4857     019F                     BAUDCON1        equ	415	;# 
  4858     019F                     BAUDCTL1        equ	415	;# 
  4859     019F                     BAUDCON         equ	415	;# 
  4860     019F                     BAUDCTL         equ	415	;# 
  4861     020C                     WPUA            equ	524	;# 
  4862     020D                     WPUB            equ	525	;# 
  4863     020E                     WPUC            equ	526	;# 
  4864     0211                     SSP1BUF         equ	529	;# 
  4865     0211                     SSPBUF          equ	529	;# 
  4866     0212                     SSP1ADD         equ	530	;# 
  4867     0212                     SSPADD          equ	530	;# 
  4868     0213                     SSP1MSK         equ	531	;# 
  4869     0213                     SSPMSK          equ	531	;# 
  4870     0214                     SSP1STAT        equ	532	;# 
  4871     0214                     SSPSTAT         equ	532	;# 
  4872     0215                     SSP1CON1        equ	533	;# 
  4873     0215                     SSPCON          equ	533	;# 
  4874     0215                     SSPCON1         equ	533	;# 
  4875     0215                     SSP1CON         equ	533	;# 
  4876     0216                     SSP1CON2        equ	534	;# 
  4877     0216                     SSPCON2         equ	534	;# 
  4878     0217                     SSP1CON3        equ	535	;# 
  4879     0217                     SSPCON3         equ	535	;# 
  4880     0219                     SSP2BUF         equ	537	;# 
  4881     021A                     SSP2ADD         equ	538	;# 
  4882     021B                     SSP2MSK         equ	539	;# 
  4883     021C                     SSP2STAT        equ	540	;# 
  4884     021D                     SSP2CON1        equ	541	;# 
  4885     021D                     SSP2CON         equ	541	;# 
  4886     021E                     SSP2CON2        equ	542	;# 
  4887     021F                     SSP2CON3        equ	543	;# 
  4888     028C                     ODCONA          equ	652	;# 
  4889     028D                     ODCONB          equ	653	;# 
  4890     028E                     ODCONC          equ	654	;# 
  4891     0291                     CCPR1           equ	657	;# 
  4892     0291                     CCPR1L          equ	657	;# 
  4893     0292                     CCPR1H          equ	658	;# 
  4894     0293                     CCP1CON         equ	659	;# 
  4895     0294                     CCP1CAP         equ	660	;# 
  4896     0295                     CCPR2           equ	661	;# 
  4897     0295                     CCPR2L          equ	661	;# 
  4898     0296                     CCPR2H          equ	662	;# 
  4899     0297                     CCP2CON         equ	663	;# 
  4900     0298                     CCP2CAP         equ	664	;# 
  4901     029F                     CCPTMRS         equ	671	;# 
  4902     030C                     SLRCONA         equ	780	;# 
  4903     030D                     SLRCONB         equ	781	;# 
  4904     030E                     SLRCONC         equ	782	;# 
  4905     0311                     CCPR3           equ	785	;# 
  4906     0311                     CCPR3L          equ	785	;# 
  4907     0312                     CCPR3H          equ	786	;# 
  4908     0313                     CCP3CON         equ	787	;# 
  4909     0314                     CCP3CAP         equ	788	;# 
  4910     0315                     CCPR4           equ	789	;# 
  4911     0315                     CCPR4L          equ	789	;# 
  4912     0316                     CCPR4H          equ	790	;# 
  4913     0317                     CCP4CON         equ	791	;# 
  4914     0318                     CCP4CAP         equ	792	;# 
  4915     038C                     INLVLA          equ	908	;# 
  4916     038D                     INLVLB          equ	909	;# 
  4917     038E                     INLVLC          equ	910	;# 
  4918     0391                     IOCAP           equ	913	;# 
  4919     0392                     IOCAN           equ	914	;# 
  4920     0393                     IOCAF           equ	915	;# 
  4921     0394                     IOCBP           equ	916	;# 
  4922     0395                     IOCBN           equ	917	;# 
  4923     0396                     IOCBF           equ	918	;# 
  4924     0397                     IOCCP           equ	919	;# 
  4925     0398                     IOCCN           equ	920	;# 
  4926     0399                     IOCCF           equ	921	;# 
  4927     039A                     CLKRCON         equ	922	;# 
  4928     039C                     MDCON           equ	924	;# 
  4929     039D                     MDSRC           equ	925	;# 
  4930     039E                     MDCARH          equ	926	;# 
  4931     039F                     MDCARL          equ	927	;# 
  4932     0411                     TMR3            equ	1041	;# 
  4933     0411                     TMR3L           equ	1041	;# 
  4934     0412                     TMR3H           equ	1042	;# 
  4935     0413                     T3CON           equ	1043	;# 
  4936     0414                     T3GCON          equ	1044	;# 
  4937     0415                     TMR4            equ	1045	;# 
  4938     0416                     PR4             equ	1046	;# 
  4939     0417                     T4CON           equ	1047	;# 
  4940     0418                     TMR5            equ	1048	;# 
  4941     0418                     TMR5L           equ	1048	;# 
  4942     0419                     TMR5H           equ	1049	;# 
  4943     041A                     T5CON           equ	1050	;# 
  4944     041B                     T5GCON          equ	1051	;# 
  4945     041C                     TMR6            equ	1052	;# 
  4946     041D                     PR6             equ	1053	;# 
  4947     041E                     T6CON           equ	1054	;# 
  4948     041F                     CCDCON          equ	1055	;# 
  4949     0498                     NCO1ACC         equ	1176	;# 
  4950     0498                     NCO1ACCL        equ	1176	;# 
  4951     0499                     NCO1ACCH        equ	1177	;# 
  4952     049A                     NCO1ACCU        equ	1178	;# 
  4953     049B                     NCO1INC         equ	1179	;# 
  4954     049B                     NCO1INCL        equ	1179	;# 
  4955     049C                     NCO1INCH        equ	1180	;# 
  4956     049D                     NCO1INCU        equ	1181	;# 
  4957     049E                     NCO1CON         equ	1182	;# 
  4958     049F                     NCO1CLK         equ	1183	;# 
  4959     0617                     PWM5DCL         equ	1559	;# 
  4960     0618                     PWM5DCH         equ	1560	;# 
  4961     0619                     PWM5CON         equ	1561	;# 
  4962     0619                     PWM5CON0        equ	1561	;# 
  4963     061A                     PWM6DCL         equ	1562	;# 
  4964     061B                     PWM6DCH         equ	1563	;# 
  4965     061C                     PWM6CON         equ	1564	;# 
  4966     061C                     PWM6CON0        equ	1564	;# 
  4967     061F                     PWMTMRS         equ	1567	;# 
  4968     0691                     CWG1CLKCON      equ	1681	;# 
  4969     0692                     CWG1DAT         equ	1682	;# 
  4970     0693                     CWG1DBR         equ	1683	;# 
  4971     0694                     CWG1DBF         equ	1684	;# 
  4972     0695                     CWG1CON0        equ	1685	;# 
  4973     0696                     CWG1CON1        equ	1686	;# 
  4974     0697                     CWG1AS0         equ	1687	;# 
  4975     0698                     CWG1AS1         equ	1688	;# 
  4976     0699                     CWG1STR         equ	1689	;# 
  4977     0711                     CWG2CLKCON      equ	1809	;# 
  4978     0712                     CWG2DAT         equ	1810	;# 
  4979     0713                     CWG2DBR         equ	1811	;# 
  4980     0714                     CWG2DBF         equ	1812	;# 
  4981     0715                     CWG2CON0        equ	1813	;# 
  4982     0716                     CWG2CON1        equ	1814	;# 
  4983     0717                     CWG2AS0         equ	1815	;# 
  4984     0718                     CWG2AS1         equ	1816	;# 
  4985     0719                     CWG2STR         equ	1817	;# 
  4986     0891                     NVMADR          equ	2193	;# 
  4987     0891                     EEADR           equ	2193	;# 
  4988     0891                     PMADR           equ	2193	;# 
  4989     0891                     NVMADRL         equ	2193	;# 
  4990     0891                     EEADRL          equ	2193	;# 
  4991     0891                     PMADRL          equ	2193	;# 
  4992     0892                     NVMADRH         equ	2194	;# 
  4993     0892                     EEADRH          equ	2194	;# 
  4994     0892                     PMADRH          equ	2194	;# 
  4995     0893                     NVMDAT          equ	2195	;# 
  4996     0893                     EEDAT           equ	2195	;# 
  4997     0893                     PMDAT           equ	2195	;# 
  4998     0893                     NVMDATL         equ	2195	;# 
  4999     0893                     EEDATL          equ	2195	;# 
  5000     0893                     PMDATL          equ	2195	;# 
  5001     0894                     NVMDATH         equ	2196	;# 
  5002     0894                     EEDATH          equ	2196	;# 
  5003     0894                     PMDATH          equ	2196	;# 
  5004     0895                     NVMCON1         equ	2197	;# 
  5005     0895                     EECON1          equ	2197	;# 
  5006     0895                     PMCON1          equ	2197	;# 
  5007     0896                     NVMCON2         equ	2198	;# 
  5008     0896                     EECON2          equ	2198	;# 
  5009     0896                     PMCON2          equ	2198	;# 
  5010     089B                     PCON0           equ	2203	;# 
  5011     0911                     PMD0            equ	2321	;# 
  5012     0912                     PMD1            equ	2322	;# 
  5013     0913                     PMD2            equ	2323	;# 
  5014     0914                     PMD3            equ	2324	;# 
  5015     0915                     PMD4            equ	2325	;# 
  5016     0916                     PMD5            equ	2326	;# 
  5017     0918                     CPUDOZE         equ	2328	;# 
  5018     0919                     OSCCON1         equ	2329	;# 
  5019     091A                     OSCCON2         equ	2330	;# 
  5020     091B                     OSCCON3         equ	2331	;# 
  5021     091C                     OSCSTAT1        equ	2332	;# 
  5022     091D                     OSCEN           equ	2333	;# 
  5023     091E                     OSCTUNE         equ	2334	;# 
  5024     091F                     OSCFRQ          equ	2335	;# 
  5025     0E0F                     PPSLOCK         equ	3599	;# 
  5026     0E10                     INTPPS          equ	3600	;# 
  5027     0E11                     T0CKIPPS        equ	3601	;# 
  5028     0E12                     T1CKIPPS        equ	3602	;# 
  5029     0E13                     T1GPPS          equ	3603	;# 
  5030     0E14                     CCP1PPS         equ	3604	;# 
  5031     0E15                     CCP2PPS         equ	3605	;# 
  5032     0E16                     CCP3PPS         equ	3606	;# 
  5033     0E17                     CCP4PPS         equ	3607	;# 
  5034     0E18                     CWG1PPS         equ	3608	;# 
  5035     0E19                     CWG2PPS         equ	3609	;# 
  5036     0E1A                     MDCIN1PPS       equ	3610	;# 
  5037     0E1B                     MDCIN2PPS       equ	3611	;# 
  5038     0E1C                     MDMINPPS        equ	3612	;# 
  5039     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5040     0E1E                     SSP2DATPPS      equ	3614	;# 
  5041     0E1F                     SSP2SSPPS       equ	3615	;# 
  5042     0E20                     SSP1CLKPPS      equ	3616	;# 
  5043     0E21                     SSP1DATPPS      equ	3617	;# 
  5044     0E22                     SSP1SSPPS       equ	3618	;# 
  5045     0E24                     RXPPS           equ	3620	;# 
  5046     0E25                     TXPPS           equ	3621	;# 
  5047     0E28                     CLCIN0PPS       equ	3624	;# 
  5048     0E29                     CLCIN1PPS       equ	3625	;# 
  5049     0E2A                     CLCIN2PPS       equ	3626	;# 
  5050     0E2B                     CLCIN3PPS       equ	3627	;# 
  5051     0E2C                     T3CKIPPS        equ	3628	;# 
  5052     0E2D                     T3GPPS          equ	3629	;# 
  5053     0E2E                     T5CKIPPS        equ	3630	;# 
  5054     0E2F                     T5GPPS          equ	3631	;# 
  5055     0E90                     RA0PPS          equ	3728	;# 
  5056     0E91                     RA1PPS          equ	3729	;# 
  5057     0E92                     RA2PPS          equ	3730	;# 
  5058     0E94                     RA4PPS          equ	3732	;# 
  5059     0E95                     RA5PPS          equ	3733	;# 
  5060     0E9C                     RB4PPS          equ	3740	;# 
  5061     0E9D                     RB5PPS          equ	3741	;# 
  5062     0E9E                     RB6PPS          equ	3742	;# 
  5063     0E9F                     RB7PPS          equ	3743	;# 
  5064     0EA0                     RC0PPS          equ	3744	;# 
  5065     0EA1                     RC1PPS          equ	3745	;# 
  5066     0EA2                     RC2PPS          equ	3746	;# 
  5067     0EA3                     RC3PPS          equ	3747	;# 
  5068     0EA4                     RC4PPS          equ	3748	;# 
  5069     0EA5                     RC5PPS          equ	3749	;# 
  5070     0EA6                     RC6PPS          equ	3750	;# 
  5071     0EA7                     RC7PPS          equ	3751	;# 
  5072     0F0F                     CLCDATA         equ	3855	;# 
  5073     0F10                     CLC1CON         equ	3856	;# 
  5074     0F11                     CLC1POL         equ	3857	;# 
  5075     0F12                     CLC1SEL0        equ	3858	;# 
  5076     0F13                     CLC1SEL1        equ	3859	;# 
  5077     0F14                     CLC1SEL2        equ	3860	;# 
  5078     0F15                     CLC1SEL3        equ	3861	;# 
  5079     0F16                     CLC1GLS0        equ	3862	;# 
  5080     0F17                     CLC1GLS1        equ	3863	;# 
  5081     0F18                     CLC1GLS2        equ	3864	;# 
  5082     0F19                     CLC1GLS3        equ	3865	;# 
  5083     0F1A                     CLC2CON         equ	3866	;# 
  5084     0F1B                     CLC2POL         equ	3867	;# 
  5085     0F1C                     CLC2SEL0        equ	3868	;# 
  5086     0F1D                     CLC2SEL1        equ	3869	;# 
  5087     0F1E                     CLC2SEL2        equ	3870	;# 
  5088     0F1F                     CLC2SEL3        equ	3871	;# 
  5089     0F20                     CLC2GLS0        equ	3872	;# 
  5090     0F21                     CLC2GLS1        equ	3873	;# 
  5091     0F22                     CLC2GLS2        equ	3874	;# 
  5092     0F23                     CLC2GLS3        equ	3875	;# 
  5093     0F24                     CLC3CON         equ	3876	;# 
  5094     0F25                     CLC3POL         equ	3877	;# 
  5095     0F26                     CLC3SEL0        equ	3878	;# 
  5096     0F27                     CLC3SEL1        equ	3879	;# 
  5097     0F28                     CLC3SEL2        equ	3880	;# 
  5098     0F29                     CLC3SEL3        equ	3881	;# 
  5099     0F2A                     CLC3GLS0        equ	3882	;# 
  5100     0F2B                     CLC3GLS1        equ	3883	;# 
  5101     0F2C                     CLC3GLS2        equ	3884	;# 
  5102     0F2D                     CLC3GLS3        equ	3885	;# 
  5103     0F2E                     CLC4CON         equ	3886	;# 
  5104     0F2F                     CLC4POL         equ	3887	;# 
  5105     0F30                     CLC4SEL0        equ	3888	;# 
  5106     0F31                     CLC4SEL1        equ	3889	;# 
  5107     0F32                     CLC4SEL2        equ	3890	;# 
  5108     0F33                     CLC4SEL3        equ	3891	;# 
  5109     0F34                     CLC4GLS0        equ	3892	;# 
  5110     0F35                     CLC4GLS1        equ	3893	;# 
  5111     0F36                     CLC4GLS2        equ	3894	;# 
  5112     0F37                     CLC4GLS3        equ	3895	;# 
  5113     0FE4                     STATUS_SHAD     equ	4068	;# 
  5114     0FE5                     WREG_SHAD       equ	4069	;# 
  5115     0FE6                     BSR_SHAD        equ	4070	;# 
  5116     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5117     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5118     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5119     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5120     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5121     0FED                     STKPTR          equ	4077	;# 
  5122     0FEE                     TOSL            equ	4078	;# 
  5123     0FEF                     TOSH            equ	4079	;# 
  5124     0000                     INDF0           equ	0	;# 
  5125     0001                     INDF1           equ	1	;# 
  5126     0002                     PCL             equ	2	;# 
  5127     0003                     STATUS          equ	3	;# 
  5128     0004                     FSR0L           equ	4	;# 
  5129     0005                     FSR0H           equ	5	;# 
  5130     0006                     FSR1L           equ	6	;# 
  5131     0007                     FSR1H           equ	7	;# 
  5132     0008                     BSR             equ	8	;# 
  5133     0009                     WREG            equ	9	;# 
  5134     000A                     PCLATH          equ	10	;# 
  5135     000B                     INTCON          equ	11	;# 
  5136     000C                     PORTA           equ	12	;# 
  5137     000D                     PORTB           equ	13	;# 
  5138     000E                     PORTC           equ	14	;# 
  5139     0010                     PIR0            equ	16	;# 
  5140     0011                     PIR1            equ	17	;# 
  5141     0012                     PIR2            equ	18	;# 
  5142     0013                     PIR3            equ	19	;# 
  5143     0014                     PIR4            equ	20	;# 
  5144     0015                     TMR0L           equ	21	;# 
  5145     0015                     TMR0            equ	21	;# 
  5146     0016                     TMR0H           equ	22	;# 
  5147     0016                     PR0             equ	22	;# 
  5148     0017                     T0CON0          equ	23	;# 
  5149     0018                     T0CON1          equ	24	;# 
  5150     0019                     TMR1            equ	25	;# 
  5151     0019                     TMR1L           equ	25	;# 
  5152     001A                     TMR1H           equ	26	;# 
  5153     001B                     T1CON           equ	27	;# 
  5154     001C                     T1GCON          equ	28	;# 
  5155     001D                     TMR2            equ	29	;# 
  5156     001E                     PR2             equ	30	;# 
  5157     001F                     T2CON           equ	31	;# 
  5158     008C                     TRISA           equ	140	;# 
  5159     008D                     TRISB           equ	141	;# 
  5160     008E                     TRISC           equ	142	;# 
  5161     0090                     PIE0            equ	144	;# 
  5162     0091                     PIE1            equ	145	;# 
  5163     0092                     PIE2            equ	146	;# 
  5164     0093                     PIE3            equ	147	;# 
  5165     0094                     PIE4            equ	148	;# 
  5166     0097                     WDTCON          equ	151	;# 
  5167     009B                     ADRES           equ	155	;# 
  5168     009B                     ADRESL          equ	155	;# 
  5169     009C                     ADRESH          equ	156	;# 
  5170     009D                     ADCON0          equ	157	;# 
  5171     009E                     ADCON1          equ	158	;# 
  5172     009F                     ADACT           equ	159	;# 
  5173     010C                     LATA            equ	268	;# 
  5174     010D                     LATB            equ	269	;# 
  5175     010E                     LATC            equ	270	;# 
  5176     0111                     CM1CON0         equ	273	;# 
  5177     0112                     CM1CON1         equ	274	;# 
  5178     0113                     CM2CON0         equ	275	;# 
  5179     0114                     CM2CON1         equ	276	;# 
  5180     0115                     CMOUT           equ	277	;# 
  5181     0116                     BORCON          equ	278	;# 
  5182     0117                     FVRCON          equ	279	;# 
  5183     0118                     DACCON0         equ	280	;# 
  5184     0119                     DACCON1         equ	281	;# 
  5185     018C                     ANSELA          equ	396	;# 
  5186     018D                     ANSELB          equ	397	;# 
  5187     018E                     ANSELC          equ	398	;# 
  5188     0197                     VREGCON         equ	407	;# 
  5189     0199                     RC1REG          equ	409	;# 
  5190     0199                     RCREG           equ	409	;# 
  5191     0199                     RCREG1          equ	409	;# 
  5192     019A                     TX1REG          equ	410	;# 
  5193     019A                     TXREG1          equ	410	;# 
  5194     019A                     TXREG           equ	410	;# 
  5195     019B                     SP1BRG          equ	411	;# 
  5196     019B                     SPBRG           equ	411	;# 
  5197     019B                     SP1BRGL         equ	411	;# 
  5198     019B                     SPBRG1          equ	411	;# 
  5199     019B                     SPBRGL          equ	411	;# 
  5200     019C                     SP1BRGH         equ	412	;# 
  5201     019C                     SPBRGH          equ	412	;# 
  5202     019C                     SPBRGH1         equ	412	;# 
  5203     019D                     RC1STA          equ	413	;# 
  5204     019D                     RCSTA1          equ	413	;# 
  5205     019D                     RCSTA           equ	413	;# 
  5206     019E                     TX1STA          equ	414	;# 
  5207     019E                     TXSTA1          equ	414	;# 
  5208     019E                     TXSTA           equ	414	;# 
  5209     019F                     BAUD1CON        equ	415	;# 
  5210     019F                     BAUDCON1        equ	415	;# 
  5211     019F                     BAUDCTL1        equ	415	;# 
  5212     019F                     BAUDCON         equ	415	;# 
  5213     019F                     BAUDCTL         equ	415	;# 
  5214     020C                     WPUA            equ	524	;# 
  5215     020D                     WPUB            equ	525	;# 
  5216     020E                     WPUC            equ	526	;# 
  5217     0211                     SSP1BUF         equ	529	;# 
  5218     0211                     SSPBUF          equ	529	;# 
  5219     0212                     SSP1ADD         equ	530	;# 
  5220     0212                     SSPADD          equ	530	;# 
  5221     0213                     SSP1MSK         equ	531	;# 
  5222     0213                     SSPMSK          equ	531	;# 
  5223     0214                     SSP1STAT        equ	532	;# 
  5224     0214                     SSPSTAT         equ	532	;# 
  5225     0215                     SSP1CON1        equ	533	;# 
  5226     0215                     SSPCON          equ	533	;# 
  5227     0215                     SSPCON1         equ	533	;# 
  5228     0215                     SSP1CON         equ	533	;# 
  5229     0216                     SSP1CON2        equ	534	;# 
  5230     0216                     SSPCON2         equ	534	;# 
  5231     0217                     SSP1CON3        equ	535	;# 
  5232     0217                     SSPCON3         equ	535	;# 
  5233     0219                     SSP2BUF         equ	537	;# 
  5234     021A                     SSP2ADD         equ	538	;# 
  5235     021B                     SSP2MSK         equ	539	;# 
  5236     021C                     SSP2STAT        equ	540	;# 
  5237     021D                     SSP2CON1        equ	541	;# 
  5238     021D                     SSP2CON         equ	541	;# 
  5239     021E                     SSP2CON2        equ	542	;# 
  5240     021F                     SSP2CON3        equ	543	;# 
  5241     028C                     ODCONA          equ	652	;# 
  5242     028D                     ODCONB          equ	653	;# 
  5243     028E                     ODCONC          equ	654	;# 
  5244     0291                     CCPR1           equ	657	;# 
  5245     0291                     CCPR1L          equ	657	;# 
  5246     0292                     CCPR1H          equ	658	;# 
  5247     0293                     CCP1CON         equ	659	;# 
  5248     0294                     CCP1CAP         equ	660	;# 
  5249     0295                     CCPR2           equ	661	;# 
  5250     0295                     CCPR2L          equ	661	;# 
  5251     0296                     CCPR2H          equ	662	;# 
  5252     0297                     CCP2CON         equ	663	;# 
  5253     0298                     CCP2CAP         equ	664	;# 
  5254     029F                     CCPTMRS         equ	671	;# 
  5255     030C                     SLRCONA         equ	780	;# 
  5256     030D                     SLRCONB         equ	781	;# 
  5257     030E                     SLRCONC         equ	782	;# 
  5258     0311                     CCPR3           equ	785	;# 
  5259     0311                     CCPR3L          equ	785	;# 
  5260     0312                     CCPR3H          equ	786	;# 
  5261     0313                     CCP3CON         equ	787	;# 
  5262     0314                     CCP3CAP         equ	788	;# 
  5263     0315                     CCPR4           equ	789	;# 
  5264     0315                     CCPR4L          equ	789	;# 
  5265     0316                     CCPR4H          equ	790	;# 
  5266     0317                     CCP4CON         equ	791	;# 
  5267     0318                     CCP4CAP         equ	792	;# 
  5268     038C                     INLVLA          equ	908	;# 
  5269     038D                     INLVLB          equ	909	;# 
  5270     038E                     INLVLC          equ	910	;# 
  5271     0391                     IOCAP           equ	913	;# 
  5272     0392                     IOCAN           equ	914	;# 
  5273     0393                     IOCAF           equ	915	;# 
  5274     0394                     IOCBP           equ	916	;# 
  5275     0395                     IOCBN           equ	917	;# 
  5276     0396                     IOCBF           equ	918	;# 
  5277     0397                     IOCCP           equ	919	;# 
  5278     0398                     IOCCN           equ	920	;# 
  5279     0399                     IOCCF           equ	921	;# 
  5280     039A                     CLKRCON         equ	922	;# 
  5281     039C                     MDCON           equ	924	;# 
  5282     039D                     MDSRC           equ	925	;# 
  5283     039E                     MDCARH          equ	926	;# 
  5284     039F                     MDCARL          equ	927	;# 
  5285     0411                     TMR3            equ	1041	;# 
  5286     0411                     TMR3L           equ	1041	;# 
  5287     0412                     TMR3H           equ	1042	;# 
  5288     0413                     T3CON           equ	1043	;# 
  5289     0414                     T3GCON          equ	1044	;# 
  5290     0415                     TMR4            equ	1045	;# 
  5291     0416                     PR4             equ	1046	;# 
  5292     0417                     T4CON           equ	1047	;# 
  5293     0418                     TMR5            equ	1048	;# 
  5294     0418                     TMR5L           equ	1048	;# 
  5295     0419                     TMR5H           equ	1049	;# 
  5296     041A                     T5CON           equ	1050	;# 
  5297     041B                     T5GCON          equ	1051	;# 
  5298     041C                     TMR6            equ	1052	;# 
  5299     041D                     PR6             equ	1053	;# 
  5300     041E                     T6CON           equ	1054	;# 
  5301     041F                     CCDCON          equ	1055	;# 
  5302     0498                     NCO1ACC         equ	1176	;# 
  5303     0498                     NCO1ACCL        equ	1176	;# 
  5304     0499                     NCO1ACCH        equ	1177	;# 
  5305     049A                     NCO1ACCU        equ	1178	;# 
  5306     049B                     NCO1INC         equ	1179	;# 
  5307     049B                     NCO1INCL        equ	1179	;# 
  5308     049C                     NCO1INCH        equ	1180	;# 
  5309     049D                     NCO1INCU        equ	1181	;# 
  5310     049E                     NCO1CON         equ	1182	;# 
  5311     049F                     NCO1CLK         equ	1183	;# 
  5312     0617                     PWM5DCL         equ	1559	;# 
  5313     0618                     PWM5DCH         equ	1560	;# 
  5314     0619                     PWM5CON         equ	1561	;# 
  5315     0619                     PWM5CON0        equ	1561	;# 
  5316     061A                     PWM6DCL         equ	1562	;# 
  5317     061B                     PWM6DCH         equ	1563	;# 
  5318     061C                     PWM6CON         equ	1564	;# 
  5319     061C                     PWM6CON0        equ	1564	;# 
  5320     061F                     PWMTMRS         equ	1567	;# 
  5321     0691                     CWG1CLKCON      equ	1681	;# 
  5322     0692                     CWG1DAT         equ	1682	;# 
  5323     0693                     CWG1DBR         equ	1683	;# 
  5324     0694                     CWG1DBF         equ	1684	;# 
  5325     0695                     CWG1CON0        equ	1685	;# 
  5326     0696                     CWG1CON1        equ	1686	;# 
  5327     0697                     CWG1AS0         equ	1687	;# 
  5328     0698                     CWG1AS1         equ	1688	;# 
  5329     0699                     CWG1STR         equ	1689	;# 
  5330     0711                     CWG2CLKCON      equ	1809	;# 
  5331     0712                     CWG2DAT         equ	1810	;# 
  5332     0713                     CWG2DBR         equ	1811	;# 
  5333     0714                     CWG2DBF         equ	1812	;# 
  5334     0715                     CWG2CON0        equ	1813	;# 
  5335     0716                     CWG2CON1        equ	1814	;# 
  5336     0717                     CWG2AS0         equ	1815	;# 
  5337     0718                     CWG2AS1         equ	1816	;# 
  5338     0719                     CWG2STR         equ	1817	;# 
  5339     0891                     NVMADR          equ	2193	;# 
  5340     0891                     EEADR           equ	2193	;# 
  5341     0891                     PMADR           equ	2193	;# 
  5342     0891                     NVMADRL         equ	2193	;# 
  5343     0891                     EEADRL          equ	2193	;# 
  5344     0891                     PMADRL          equ	2193	;# 
  5345     0892                     NVMADRH         equ	2194	;# 
  5346     0892                     EEADRH          equ	2194	;# 
  5347     0892                     PMADRH          equ	2194	;# 
  5348     0893                     NVMDAT          equ	2195	;# 
  5349     0893                     EEDAT           equ	2195	;# 
  5350     0893                     PMDAT           equ	2195	;# 
  5351     0893                     NVMDATL         equ	2195	;# 
  5352     0893                     EEDATL          equ	2195	;# 
  5353     0893                     PMDATL          equ	2195	;# 
  5354     0894                     NVMDATH         equ	2196	;# 
  5355     0894                     EEDATH          equ	2196	;# 
  5356     0894                     PMDATH          equ	2196	;# 
  5357     0895                     NVMCON1         equ	2197	;# 
  5358     0895                     EECON1          equ	2197	;# 
  5359     0895                     PMCON1          equ	2197	;# 
  5360     0896                     NVMCON2         equ	2198	;# 
  5361     0896                     EECON2          equ	2198	;# 
  5362     0896                     PMCON2          equ	2198	;# 
  5363     089B                     PCON0           equ	2203	;# 
  5364     0911                     PMD0            equ	2321	;# 
  5365     0912                     PMD1            equ	2322	;# 
  5366     0913                     PMD2            equ	2323	;# 
  5367     0914                     PMD3            equ	2324	;# 
  5368     0915                     PMD4            equ	2325	;# 
  5369     0916                     PMD5            equ	2326	;# 
  5370     0918                     CPUDOZE         equ	2328	;# 
  5371     0919                     OSCCON1         equ	2329	;# 
  5372     091A                     OSCCON2         equ	2330	;# 
  5373     091B                     OSCCON3         equ	2331	;# 
  5374     091C                     OSCSTAT1        equ	2332	;# 
  5375     091D                     OSCEN           equ	2333	;# 
  5376     091E                     OSCTUNE         equ	2334	;# 
  5377     091F                     OSCFRQ          equ	2335	;# 
  5378     0E0F                     PPSLOCK         equ	3599	;# 
  5379     0E10                     INTPPS          equ	3600	;# 
  5380     0E11                     T0CKIPPS        equ	3601	;# 
  5381     0E12                     T1CKIPPS        equ	3602	;# 
  5382     0E13                     T1GPPS          equ	3603	;# 
  5383     0E14                     CCP1PPS         equ	3604	;# 
  5384     0E15                     CCP2PPS         equ	3605	;# 
  5385     0E16                     CCP3PPS         equ	3606	;# 
  5386     0E17                     CCP4PPS         equ	3607	;# 
  5387     0E18                     CWG1PPS         equ	3608	;# 
  5388     0E19                     CWG2PPS         equ	3609	;# 
  5389     0E1A                     MDCIN1PPS       equ	3610	;# 
  5390     0E1B                     MDCIN2PPS       equ	3611	;# 
  5391     0E1C                     MDMINPPS        equ	3612	;# 
  5392     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5393     0E1E                     SSP2DATPPS      equ	3614	;# 
  5394     0E1F                     SSP2SSPPS       equ	3615	;# 
  5395     0E20                     SSP1CLKPPS      equ	3616	;# 
  5396     0E21                     SSP1DATPPS      equ	3617	;# 
  5397     0E22                     SSP1SSPPS       equ	3618	;# 
  5398     0E24                     RXPPS           equ	3620	;# 
  5399     0E25                     TXPPS           equ	3621	;# 
  5400     0E28                     CLCIN0PPS       equ	3624	;# 
  5401     0E29                     CLCIN1PPS       equ	3625	;# 
  5402     0E2A                     CLCIN2PPS       equ	3626	;# 
  5403     0E2B                     CLCIN3PPS       equ	3627	;# 
  5404     0E2C                     T3CKIPPS        equ	3628	;# 
  5405     0E2D                     T3GPPS          equ	3629	;# 
  5406     0E2E                     T5CKIPPS        equ	3630	;# 
  5407     0E2F                     T5GPPS          equ	3631	;# 
  5408     0E90                     RA0PPS          equ	3728	;# 
  5409     0E91                     RA1PPS          equ	3729	;# 
  5410     0E92                     RA2PPS          equ	3730	;# 
  5411     0E94                     RA4PPS          equ	3732	;# 
  5412     0E95                     RA5PPS          equ	3733	;# 
  5413     0E9C                     RB4PPS          equ	3740	;# 
  5414     0E9D                     RB5PPS          equ	3741	;# 
  5415     0E9E                     RB6PPS          equ	3742	;# 
  5416     0E9F                     RB7PPS          equ	3743	;# 
  5417     0EA0                     RC0PPS          equ	3744	;# 
  5418     0EA1                     RC1PPS          equ	3745	;# 
  5419     0EA2                     RC2PPS          equ	3746	;# 
  5420     0EA3                     RC3PPS          equ	3747	;# 
  5421     0EA4                     RC4PPS          equ	3748	;# 
  5422     0EA5                     RC5PPS          equ	3749	;# 
  5423     0EA6                     RC6PPS          equ	3750	;# 
  5424     0EA7                     RC7PPS          equ	3751	;# 
  5425     0F0F                     CLCDATA         equ	3855	;# 
  5426     0F10                     CLC1CON         equ	3856	;# 
  5427     0F11                     CLC1POL         equ	3857	;# 
  5428     0F12                     CLC1SEL0        equ	3858	;# 
  5429     0F13                     CLC1SEL1        equ	3859	;# 
  5430     0F14                     CLC1SEL2        equ	3860	;# 
  5431     0F15                     CLC1SEL3        equ	3861	;# 
  5432     0F16                     CLC1GLS0        equ	3862	;# 
  5433     0F17                     CLC1GLS1        equ	3863	;# 
  5434     0F18                     CLC1GLS2        equ	3864	;# 
  5435     0F19                     CLC1GLS3        equ	3865	;# 
  5436     0F1A                     CLC2CON         equ	3866	;# 
  5437     0F1B                     CLC2POL         equ	3867	;# 
  5438     0F1C                     CLC2SEL0        equ	3868	;# 
  5439     0F1D                     CLC2SEL1        equ	3869	;# 
  5440     0F1E                     CLC2SEL2        equ	3870	;# 
  5441     0F1F                     CLC2SEL3        equ	3871	;# 
  5442     0F20                     CLC2GLS0        equ	3872	;# 
  5443     0F21                     CLC2GLS1        equ	3873	;# 
  5444     0F22                     CLC2GLS2        equ	3874	;# 
  5445     0F23                     CLC2GLS3        equ	3875	;# 
  5446     0F24                     CLC3CON         equ	3876	;# 
  5447     0F25                     CLC3POL         equ	3877	;# 
  5448     0F26                     CLC3SEL0        equ	3878	;# 
  5449     0F27                     CLC3SEL1        equ	3879	;# 
  5450     0F28                     CLC3SEL2        equ	3880	;# 
  5451     0F29                     CLC3SEL3        equ	3881	;# 
  5452     0F2A                     CLC3GLS0        equ	3882	;# 
  5453     0F2B                     CLC3GLS1        equ	3883	;# 
  5454     0F2C                     CLC3GLS2        equ	3884	;# 
  5455     0F2D                     CLC3GLS3        equ	3885	;# 
  5456     0F2E                     CLC4CON         equ	3886	;# 
  5457     0F2F                     CLC4POL         equ	3887	;# 
  5458     0F30                     CLC4SEL0        equ	3888	;# 
  5459     0F31                     CLC4SEL1        equ	3889	;# 
  5460     0F32                     CLC4SEL2        equ	3890	;# 
  5461     0F33                     CLC4SEL3        equ	3891	;# 
  5462     0F34                     CLC4GLS0        equ	3892	;# 
  5463     0F35                     CLC4GLS1        equ	3893	;# 
  5464     0F36                     CLC4GLS2        equ	3894	;# 
  5465     0F37                     CLC4GLS3        equ	3895	;# 
  5466     0FE4                     STATUS_SHAD     equ	4068	;# 
  5467     0FE5                     WREG_SHAD       equ	4069	;# 
  5468     0FE6                     BSR_SHAD        equ	4070	;# 
  5469     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5470     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5471     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5472     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5473     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5474     0FED                     STKPTR          equ	4077	;# 
  5475     0FEE                     TOSL            equ	4078	;# 
  5476     0FEF                     TOSH            equ	4079	;# 
  5477     0000                     INDF0           equ	0	;# 
  5478     0001                     INDF1           equ	1	;# 
  5479     0002                     PCL             equ	2	;# 
  5480     0003                     STATUS          equ	3	;# 
  5481     0004                     FSR0L           equ	4	;# 
  5482     0005                     FSR0H           equ	5	;# 
  5483     0006                     FSR1L           equ	6	;# 
  5484     0007                     FSR1H           equ	7	;# 
  5485     0008                     BSR             equ	8	;# 
  5486     0009                     WREG            equ	9	;# 
  5487     000A                     PCLATH          equ	10	;# 
  5488     000B                     INTCON          equ	11	;# 
  5489     000C                     PORTA           equ	12	;# 
  5490     000D                     PORTB           equ	13	;# 
  5491     000E                     PORTC           equ	14	;# 
  5492     0010                     PIR0            equ	16	;# 
  5493     0011                     PIR1            equ	17	;# 
  5494     0012                     PIR2            equ	18	;# 
  5495     0013                     PIR3            equ	19	;# 
  5496     0014                     PIR4            equ	20	;# 
  5497     0015                     TMR0L           equ	21	;# 
  5498     0015                     TMR0            equ	21	;# 
  5499     0016                     TMR0H           equ	22	;# 
  5500     0016                     PR0             equ	22	;# 
  5501     0017                     T0CON0          equ	23	;# 
  5502     0018                     T0CON1          equ	24	;# 
  5503     0019                     TMR1            equ	25	;# 
  5504     0019                     TMR1L           equ	25	;# 
  5505     001A                     TMR1H           equ	26	;# 
  5506     001B                     T1CON           equ	27	;# 
  5507     001C                     T1GCON          equ	28	;# 
  5508     001D                     TMR2            equ	29	;# 
  5509     001E                     PR2             equ	30	;# 
  5510     001F                     T2CON           equ	31	;# 
  5511     008C                     TRISA           equ	140	;# 
  5512     008D                     TRISB           equ	141	;# 
  5513     008E                     TRISC           equ	142	;# 
  5514     0090                     PIE0            equ	144	;# 
  5515     0091                     PIE1            equ	145	;# 
  5516     0092                     PIE2            equ	146	;# 
  5517     0093                     PIE3            equ	147	;# 
  5518     0094                     PIE4            equ	148	;# 
  5519     0097                     WDTCON          equ	151	;# 
  5520     009B                     ADRES           equ	155	;# 
  5521     009B                     ADRESL          equ	155	;# 
  5522     009C                     ADRESH          equ	156	;# 
  5523     009D                     ADCON0          equ	157	;# 
  5524     009E                     ADCON1          equ	158	;# 
  5525     009F                     ADACT           equ	159	;# 
  5526     010C                     LATA            equ	268	;# 
  5527     010D                     LATB            equ	269	;# 
  5528     010E                     LATC            equ	270	;# 
  5529     0111                     CM1CON0         equ	273	;# 
  5530     0112                     CM1CON1         equ	274	;# 
  5531     0113                     CM2CON0         equ	275	;# 
  5532     0114                     CM2CON1         equ	276	;# 
  5533     0115                     CMOUT           equ	277	;# 
  5534     0116                     BORCON          equ	278	;# 
  5535     0117                     FVRCON          equ	279	;# 
  5536     0118                     DACCON0         equ	280	;# 
  5537     0119                     DACCON1         equ	281	;# 
  5538     018C                     ANSELA          equ	396	;# 
  5539     018D                     ANSELB          equ	397	;# 
  5540     018E                     ANSELC          equ	398	;# 
  5541     0197                     VREGCON         equ	407	;# 
  5542     0199                     RC1REG          equ	409	;# 
  5543     0199                     RCREG           equ	409	;# 
  5544     0199                     RCREG1          equ	409	;# 
  5545     019A                     TX1REG          equ	410	;# 
  5546     019A                     TXREG1          equ	410	;# 
  5547     019A                     TXREG           equ	410	;# 
  5548     019B                     SP1BRG          equ	411	;# 
  5549     019B                     SPBRG           equ	411	;# 
  5550     019B                     SP1BRGL         equ	411	;# 
  5551     019B                     SPBRG1          equ	411	;# 
  5552     019B                     SPBRGL          equ	411	;# 
  5553     019C                     SP1BRGH         equ	412	;# 
  5554     019C                     SPBRGH          equ	412	;# 
  5555     019C                     SPBRGH1         equ	412	;# 
  5556     019D                     RC1STA          equ	413	;# 
  5557     019D                     RCSTA1          equ	413	;# 
  5558     019D                     RCSTA           equ	413	;# 
  5559     019E                     TX1STA          equ	414	;# 
  5560     019E                     TXSTA1          equ	414	;# 
  5561     019E                     TXSTA           equ	414	;# 
  5562     019F                     BAUD1CON        equ	415	;# 
  5563     019F                     BAUDCON1        equ	415	;# 
  5564     019F                     BAUDCTL1        equ	415	;# 
  5565     019F                     BAUDCON         equ	415	;# 
  5566     019F                     BAUDCTL         equ	415	;# 
  5567     020C                     WPUA            equ	524	;# 
  5568     020D                     WPUB            equ	525	;# 
  5569     020E                     WPUC            equ	526	;# 
  5570     0211                     SSP1BUF         equ	529	;# 
  5571     0211                     SSPBUF          equ	529	;# 
  5572     0212                     SSP1ADD         equ	530	;# 
  5573     0212                     SSPADD          equ	530	;# 
  5574     0213                     SSP1MSK         equ	531	;# 
  5575     0213                     SSPMSK          equ	531	;# 
  5576     0214                     SSP1STAT        equ	532	;# 
  5577     0214                     SSPSTAT         equ	532	;# 
  5578     0215                     SSP1CON1        equ	533	;# 
  5579     0215                     SSPCON          equ	533	;# 
  5580     0215                     SSPCON1         equ	533	;# 
  5581     0215                     SSP1CON         equ	533	;# 
  5582     0216                     SSP1CON2        equ	534	;# 
  5583     0216                     SSPCON2         equ	534	;# 
  5584     0217                     SSP1CON3        equ	535	;# 
  5585     0217                     SSPCON3         equ	535	;# 
  5586     0219                     SSP2BUF         equ	537	;# 
  5587     021A                     SSP2ADD         equ	538	;# 
  5588     021B                     SSP2MSK         equ	539	;# 
  5589     021C                     SSP2STAT        equ	540	;# 
  5590     021D                     SSP2CON1        equ	541	;# 
  5591     021D                     SSP2CON         equ	541	;# 
  5592     021E                     SSP2CON2        equ	542	;# 
  5593     021F                     SSP2CON3        equ	543	;# 
  5594     028C                     ODCONA          equ	652	;# 
  5595     028D                     ODCONB          equ	653	;# 
  5596     028E                     ODCONC          equ	654	;# 
  5597     0291                     CCPR1           equ	657	;# 
  5598     0291                     CCPR1L          equ	657	;# 
  5599     0292                     CCPR1H          equ	658	;# 
  5600     0293                     CCP1CON         equ	659	;# 
  5601     0294                     CCP1CAP         equ	660	;# 
  5602     0295                     CCPR2           equ	661	;# 
  5603     0295                     CCPR2L          equ	661	;# 
  5604     0296                     CCPR2H          equ	662	;# 
  5605     0297                     CCP2CON         equ	663	;# 
  5606     0298                     CCP2CAP         equ	664	;# 
  5607     029F                     CCPTMRS         equ	671	;# 
  5608     030C                     SLRCONA         equ	780	;# 
  5609     030D                     SLRCONB         equ	781	;# 
  5610     030E                     SLRCONC         equ	782	;# 
  5611     0311                     CCPR3           equ	785	;# 
  5612     0311                     CCPR3L          equ	785	;# 
  5613     0312                     CCPR3H          equ	786	;# 
  5614     0313                     CCP3CON         equ	787	;# 
  5615     0314                     CCP3CAP         equ	788	;# 
  5616     0315                     CCPR4           equ	789	;# 
  5617     0315                     CCPR4L          equ	789	;# 
  5618     0316                     CCPR4H          equ	790	;# 
  5619     0317                     CCP4CON         equ	791	;# 
  5620     0318                     CCP4CAP         equ	792	;# 
  5621     038C                     INLVLA          equ	908	;# 
  5622     038D                     INLVLB          equ	909	;# 
  5623     038E                     INLVLC          equ	910	;# 
  5624     0391                     IOCAP           equ	913	;# 
  5625     0392                     IOCAN           equ	914	;# 
  5626     0393                     IOCAF           equ	915	;# 
  5627     0394                     IOCBP           equ	916	;# 
  5628     0395                     IOCBN           equ	917	;# 
  5629     0396                     IOCBF           equ	918	;# 
  5630     0397                     IOCCP           equ	919	;# 
  5631     0398                     IOCCN           equ	920	;# 
  5632     0399                     IOCCF           equ	921	;# 
  5633     039A                     CLKRCON         equ	922	;# 
  5634     039C                     MDCON           equ	924	;# 
  5635     039D                     MDSRC           equ	925	;# 
  5636     039E                     MDCARH          equ	926	;# 
  5637     039F                     MDCARL          equ	927	;# 
  5638     0411                     TMR3            equ	1041	;# 
  5639     0411                     TMR3L           equ	1041	;# 
  5640     0412                     TMR3H           equ	1042	;# 
  5641     0413                     T3CON           equ	1043	;# 
  5642     0414                     T3GCON          equ	1044	;# 
  5643     0415                     TMR4            equ	1045	;# 
  5644     0416                     PR4             equ	1046	;# 
  5645     0417                     T4CON           equ	1047	;# 
  5646     0418                     TMR5            equ	1048	;# 
  5647     0418                     TMR5L           equ	1048	;# 
  5648     0419                     TMR5H           equ	1049	;# 
  5649     041A                     T5CON           equ	1050	;# 
  5650     041B                     T5GCON          equ	1051	;# 
  5651     041C                     TMR6            equ	1052	;# 
  5652     041D                     PR6             equ	1053	;# 
  5653     041E                     T6CON           equ	1054	;# 
  5654     041F                     CCDCON          equ	1055	;# 
  5655     0498                     NCO1ACC         equ	1176	;# 
  5656     0498                     NCO1ACCL        equ	1176	;# 
  5657     0499                     NCO1ACCH        equ	1177	;# 
  5658     049A                     NCO1ACCU        equ	1178	;# 
  5659     049B                     NCO1INC         equ	1179	;# 
  5660     049B                     NCO1INCL        equ	1179	;# 
  5661     049C                     NCO1INCH        equ	1180	;# 
  5662     049D                     NCO1INCU        equ	1181	;# 
  5663     049E                     NCO1CON         equ	1182	;# 
  5664     049F                     NCO1CLK         equ	1183	;# 
  5665     0617                     PWM5DCL         equ	1559	;# 
  5666     0618                     PWM5DCH         equ	1560	;# 
  5667     0619                     PWM5CON         equ	1561	;# 
  5668     0619                     PWM5CON0        equ	1561	;# 
  5669     061A                     PWM6DCL         equ	1562	;# 
  5670     061B                     PWM6DCH         equ	1563	;# 
  5671     061C                     PWM6CON         equ	1564	;# 
  5672     061C                     PWM6CON0        equ	1564	;# 
  5673     061F                     PWMTMRS         equ	1567	;# 
  5674     0691                     CWG1CLKCON      equ	1681	;# 
  5675     0692                     CWG1DAT         equ	1682	;# 
  5676     0693                     CWG1DBR         equ	1683	;# 
  5677     0694                     CWG1DBF         equ	1684	;# 
  5678     0695                     CWG1CON0        equ	1685	;# 
  5679     0696                     CWG1CON1        equ	1686	;# 
  5680     0697                     CWG1AS0         equ	1687	;# 
  5681     0698                     CWG1AS1         equ	1688	;# 
  5682     0699                     CWG1STR         equ	1689	;# 
  5683     0711                     CWG2CLKCON      equ	1809	;# 
  5684     0712                     CWG2DAT         equ	1810	;# 
  5685     0713                     CWG2DBR         equ	1811	;# 
  5686     0714                     CWG2DBF         equ	1812	;# 
  5687     0715                     CWG2CON0        equ	1813	;# 
  5688     0716                     CWG2CON1        equ	1814	;# 
  5689     0717                     CWG2AS0         equ	1815	;# 
  5690     0718                     CWG2AS1         equ	1816	;# 
  5691     0719                     CWG2STR         equ	1817	;# 
  5692     0891                     NVMADR          equ	2193	;# 
  5693     0891                     EEADR           equ	2193	;# 
  5694     0891                     PMADR           equ	2193	;# 
  5695     0891                     NVMADRL         equ	2193	;# 
  5696     0891                     EEADRL          equ	2193	;# 
  5697     0891                     PMADRL          equ	2193	;# 
  5698     0892                     NVMADRH         equ	2194	;# 
  5699     0892                     EEADRH          equ	2194	;# 
  5700     0892                     PMADRH          equ	2194	;# 
  5701     0893                     NVMDAT          equ	2195	;# 
  5702     0893                     EEDAT           equ	2195	;# 
  5703     0893                     PMDAT           equ	2195	;# 
  5704     0893                     NVMDATL         equ	2195	;# 
  5705     0893                     EEDATL          equ	2195	;# 
  5706     0893                     PMDATL          equ	2195	;# 
  5707     0894                     NVMDATH         equ	2196	;# 
  5708     0894                     EEDATH          equ	2196	;# 
  5709     0894                     PMDATH          equ	2196	;# 
  5710     0895                     NVMCON1         equ	2197	;# 
  5711     0895                     EECON1          equ	2197	;# 
  5712     0895                     PMCON1          equ	2197	;# 
  5713     0896                     NVMCON2         equ	2198	;# 
  5714     0896                     EECON2          equ	2198	;# 
  5715     0896                     PMCON2          equ	2198	;# 
  5716     089B                     PCON0           equ	2203	;# 
  5717     0911                     PMD0            equ	2321	;# 
  5718     0912                     PMD1            equ	2322	;# 
  5719     0913                     PMD2            equ	2323	;# 
  5720     0914                     PMD3            equ	2324	;# 
  5721     0915                     PMD4            equ	2325	;# 
  5722     0916                     PMD5            equ	2326	;# 
  5723     0918                     CPUDOZE         equ	2328	;# 
  5724     0919                     OSCCON1         equ	2329	;# 
  5725     091A                     OSCCON2         equ	2330	;# 
  5726     091B                     OSCCON3         equ	2331	;# 
  5727     091C                     OSCSTAT1        equ	2332	;# 
  5728     091D                     OSCEN           equ	2333	;# 
  5729     091E                     OSCTUNE         equ	2334	;# 
  5730     091F                     OSCFRQ          equ	2335	;# 
  5731     0E0F                     PPSLOCK         equ	3599	;# 
  5732     0E10                     INTPPS          equ	3600	;# 
  5733     0E11                     T0CKIPPS        equ	3601	;# 
  5734     0E12                     T1CKIPPS        equ	3602	;# 
  5735     0E13                     T1GPPS          equ	3603	;# 
  5736     0E14                     CCP1PPS         equ	3604	;# 
  5737     0E15                     CCP2PPS         equ	3605	;# 
  5738     0E16                     CCP3PPS         equ	3606	;# 
  5739     0E17                     CCP4PPS         equ	3607	;# 
  5740     0E18                     CWG1PPS         equ	3608	;# 
  5741     0E19                     CWG2PPS         equ	3609	;# 
  5742     0E1A                     MDCIN1PPS       equ	3610	;# 
  5743     0E1B                     MDCIN2PPS       equ	3611	;# 
  5744     0E1C                     MDMINPPS        equ	3612	;# 
  5745     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5746     0E1E                     SSP2DATPPS      equ	3614	;# 
  5747     0E1F                     SSP2SSPPS       equ	3615	;# 
  5748     0E20                     SSP1CLKPPS      equ	3616	;# 
  5749     0E21                     SSP1DATPPS      equ	3617	;# 
  5750     0E22                     SSP1SSPPS       equ	3618	;# 
  5751     0E24                     RXPPS           equ	3620	;# 
  5752     0E25                     TXPPS           equ	3621	;# 
  5753     0E28                     CLCIN0PPS       equ	3624	;# 
  5754     0E29                     CLCIN1PPS       equ	3625	;# 
  5755     0E2A                     CLCIN2PPS       equ	3626	;# 
  5756     0E2B                     CLCIN3PPS       equ	3627	;# 
  5757     0E2C                     T3CKIPPS        equ	3628	;# 
  5758     0E2D                     T3GPPS          equ	3629	;# 
  5759     0E2E                     T5CKIPPS        equ	3630	;# 
  5760     0E2F                     T5GPPS          equ	3631	;# 
  5761     0E90                     RA0PPS          equ	3728	;# 
  5762     0E91                     RA1PPS          equ	3729	;# 
  5763     0E92                     RA2PPS          equ	3730	;# 
  5764     0E94                     RA4PPS          equ	3732	;# 
  5765     0E95                     RA5PPS          equ	3733	;# 
  5766     0E9C                     RB4PPS          equ	3740	;# 
  5767     0E9D                     RB5PPS          equ	3741	;# 
  5768     0E9E                     RB6PPS          equ	3742	;# 
  5769     0E9F                     RB7PPS          equ	3743	;# 
  5770     0EA0                     RC0PPS          equ	3744	;# 
  5771     0EA1                     RC1PPS          equ	3745	;# 
  5772     0EA2                     RC2PPS          equ	3746	;# 
  5773     0EA3                     RC3PPS          equ	3747	;# 
  5774     0EA4                     RC4PPS          equ	3748	;# 
  5775     0EA5                     RC5PPS          equ	3749	;# 
  5776     0EA6                     RC6PPS          equ	3750	;# 
  5777     0EA7                     RC7PPS          equ	3751	;# 
  5778     0F0F                     CLCDATA         equ	3855	;# 
  5779     0F10                     CLC1CON         equ	3856	;# 
  5780     0F11                     CLC1POL         equ	3857	;# 
  5781     0F12                     CLC1SEL0        equ	3858	;# 
  5782     0F13                     CLC1SEL1        equ	3859	;# 
  5783     0F14                     CLC1SEL2        equ	3860	;# 
  5784     0F15                     CLC1SEL3        equ	3861	;# 
  5785     0F16                     CLC1GLS0        equ	3862	;# 
  5786     0F17                     CLC1GLS1        equ	3863	;# 
  5787     0F18                     CLC1GLS2        equ	3864	;# 
  5788     0F19                     CLC1GLS3        equ	3865	;# 
  5789     0F1A                     CLC2CON         equ	3866	;# 
  5790     0F1B                     CLC2POL         equ	3867	;# 
  5791     0F1C                     CLC2SEL0        equ	3868	;# 
  5792     0F1D                     CLC2SEL1        equ	3869	;# 
  5793     0F1E                     CLC2SEL2        equ	3870	;# 
  5794     0F1F                     CLC2SEL3        equ	3871	;# 
  5795     0F20                     CLC2GLS0        equ	3872	;# 
  5796     0F21                     CLC2GLS1        equ	3873	;# 
  5797     0F22                     CLC2GLS2        equ	3874	;# 
  5798     0F23                     CLC2GLS3        equ	3875	;# 
  5799     0F24                     CLC3CON         equ	3876	;# 
  5800     0F25                     CLC3POL         equ	3877	;# 
  5801     0F26                     CLC3SEL0        equ	3878	;# 
  5802     0F27                     CLC3SEL1        equ	3879	;# 
  5803     0F28                     CLC3SEL2        equ	3880	;# 
  5804     0F29                     CLC3SEL3        equ	3881	;# 
  5805     0F2A                     CLC3GLS0        equ	3882	;# 
  5806     0F2B                     CLC3GLS1        equ	3883	;# 
  5807     0F2C                     CLC3GLS2        equ	3884	;# 
  5808     0F2D                     CLC3GLS3        equ	3885	;# 
  5809     0F2E                     CLC4CON         equ	3886	;# 
  5810     0F2F                     CLC4POL         equ	3887	;# 
  5811     0F30                     CLC4SEL0        equ	3888	;# 
  5812     0F31                     CLC4SEL1        equ	3889	;# 
  5813     0F32                     CLC4SEL2        equ	3890	;# 
  5814     0F33                     CLC4SEL3        equ	3891	;# 
  5815     0F34                     CLC4GLS0        equ	3892	;# 
  5816     0F35                     CLC4GLS1        equ	3893	;# 
  5817     0F36                     CLC4GLS2        equ	3894	;# 
  5818     0F37                     CLC4GLS3        equ	3895	;# 
  5819     0FE4                     STATUS_SHAD     equ	4068	;# 
  5820     0FE5                     WREG_SHAD       equ	4069	;# 
  5821     0FE6                     BSR_SHAD        equ	4070	;# 
  5822     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5823     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5824     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5825     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5826     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5827     0FED                     STKPTR          equ	4077	;# 
  5828     0FEE                     TOSL            equ	4078	;# 
  5829     0FEF                     TOSH            equ	4079	;# 
  5830                           
  5831 ;; Function _SPI1_Deinitialize is unused but had its address taken
  5832     0000                     _SPI1_Deinitialize equ	0
  5833                           
  5834 ;; Function _SPI1_Close is unused but had its address taken
  5835     0000                     _SPI1_Close     equ	0
  5836                           
  5837 ;; Function _SPI1_BufferExchange is unused but had its address taken
  5838     0000                     _SPI1_BufferExchange equ	0
  5839                           
  5840 ;; Function _SPI1_BufferWrite is unused but had its address taken
  5841     0000                     _SPI1_BufferWrite equ	0
  5842                           
  5843 ;; Function _SPI1_BufferRead is unused but had its address taken
  5844     0000                     _SPI1_BufferRead equ	0
  5845                           
  5846 ;; Function _SPI1_ByteWrite is unused but had its address taken
  5847     0000                     _SPI1_ByteWrite equ	0
  5848                           
  5849 ;; Function _SPI1_ByteRead is unused but had its address taken
  5850     0000                     _SPI1_ByteRead  equ	0
  5851                           
  5852 ;; Function _SPI1_IsRxReady is unused but had its address taken
  5853     0000                     _SPI1_IsRxReady equ	0
  5854                           
  5855 ;; Function _SPI1_IsTxReady is unused but had its address taken
  5856     0000                     _SPI1_IsTxReady equ	0
  5857                           
  5858 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  5859     0000                     _INT_DefaultInterruptHandler equ	0
  5860                           
  5861 ;; Function _EUSART_Deinitialize is unused but had its address taken
  5862     0000                     _EUSART_Deinitialize equ	0
  5863                           
  5864 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  5865     0000                     _EUSART_TransmitEnable equ	0
  5866                           
  5867 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  5868     0000                     _EUSART_TransmitDisable equ	0
  5869                           
  5870 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  5871     0000                     _EUSART_AutoBaudSet equ	0
  5872                           
  5873 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  5874     0000                     _EUSART_AutoBaudQuery equ	0
  5875                           
  5876 ;; Function _EUSART_IsTxDone is unused but had its address taken
  5877     0000                     _EUSART_IsTxDone equ	0
  5878                           
  5879 ;; Function _EUSART_ErrorGet is unused but had its address taken
  5880     0000                     _EUSART_ErrorGet equ	0
  5881                           
  5882 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  5883     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  5884                           
  5885 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  5886     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  5887                           
  5888                           	psect	idataBANK0
  5889     07FC                     __pidataBANK0:
  5890                           
  5891                           ;initializer for _setpoint
  5892     07FC  34C2               	retlw	194
  5893     07FD  3401               	retlw	1
  5894                           
  5895                           ;initializer for _mustPrintLogs
  5896     07FE  3401               	retlw	1
  5897                           
  5898                           ;initializer for adcConversionDoneHandler@new_channel
  5899     07FF  3410               	retlw	16
  5900                           
  5901                           	psect	idataBANK2
  5902     1F8C                     __pidataBANK2:
  5903                           
  5904                           ;initializer for _ki
  5905     1F8C  3400               	retlw	0
  5906     1F8D  3400               	retlw	0
  5907     1F8E  34A0               	retlw	160
  5908     1F8F  3440               	retlw	64
  5909                           
  5910                           ;initializer for _kp
  5911     1F90  3466               	retlw	102
  5912     1F91  3466               	retlw	102
  5913     1F92  3466               	retlw	102
  5914     1F93  343F               	retlw	63
  5915                           
  5916                           	psect	stringtext1
  5917     1800                     __pstringtext1:
  5918     1800                     _UART1:
  5919     1800  34E3               	retlw	low _EUSART_Initialize
  5920     1801  3412               	retlw	high _EUSART_Initialize
  5921     1802  3400               	retlw	0
  5922     1803  3400               	retlw	0
  5923     1804  34E0               	retlw	low _EUSART_Read
  5924     1805  3411               	retlw	high _EUSART_Read
  5925     1806  34D9               	retlw	low _EUSART_Write
  5926     1807  3407               	retlw	high _EUSART_Write
  5927     1808  347C               	retlw	low _EUSART_IsRxReady
  5928     1809  341F               	retlw	high _EUSART_IsRxReady
  5929     180A  3474               	retlw	low _EUSART_IsTxReady
  5930     180B  341F               	retlw	high _EUSART_IsTxReady
  5931     180C  3400               	retlw	0
  5932     180D  3400               	retlw	0
  5933     180E  3400               	retlw	0
  5934     180F  3400               	retlw	0
  5935     1810  3400               	retlw	0
  5936     1811  3400               	retlw	0
  5937     1812  3400               	retlw	0
  5938     1813  3400               	retlw	0
  5939     1814  3400               	retlw	0
  5940     1815  3400               	retlw	0
  5941     1816  3400               	retlw	0
  5942     1817  3400               	retlw	0
  5943     1818  3400               	retlw	0
  5944     1819  3400               	retlw	0
  5945     181A  3400               	retlw	0
  5946     181B  3400               	retlw	0
  5947     181C  3400               	retlw	0
  5948     181D  3400               	retlw	0
  5949     181E  3400               	retlw	0
  5950     181F  3400               	retlw	0
  5951     1820  3400               	retlw	0
  5952     1821  3400               	retlw	0
  5953     1822  3400               	retlw	0
  5954     1823  3400               	retlw	0
  5955     1824  3400               	retlw	0
  5956     1825  3400               	retlw	0
  5957     1826  3400               	retlw	0
  5958     1827  3400               	retlw	0
  5959     1828  3415               	retlw	low _EUSART_FramingErrorCallbackRegister
  5960     1829  3410               	retlw	high _EUSART_FramingErrorCallbackRegister
  5961     182A  3421               	retlw	low _EUSART_OverrunErrorCallbackRegister
  5962     182B  3410               	retlw	high _EUSART_OverrunErrorCallbackRegister
  5963     182C  3400               	retlw	0
  5964     182D  3400               	retlw	0
  5965     182E  3400               	retlw	0
  5966     182F  3400               	retlw	0
  5967     1830                     __end_of_UART1:
  5968                           
  5969                           	psect	stringtext2
  5970     1830                     __pstringtext2:
  5971     1830                     _ledstrip:
  5972     1830  34CA               	retlw	low _SPI1_Initialize
  5973     1831  341F               	retlw	high _SPI1_Initialize
  5974     1832  3400               	retlw	0
  5975     1833  3400               	retlw	0
  5976     1834  342E               	retlw	low _SPI1_Open
  5977     1835  3417               	retlw	high _SPI1_Open
  5978     1836  3400               	retlw	0
  5979     1837  3400               	retlw	0
  5980     1838  3400               	retlw	0
  5981     1839  3400               	retlw	0
  5982     183A  3400               	retlw	0
  5983     183B  3400               	retlw	0
  5984     183C  3400               	retlw	0
  5985     183D  3400               	retlw	0
  5986     183E  34D4               	retlw	low _SPI1_ByteExchange
  5987     183F  341F               	retlw	high _SPI1_ByteExchange
  5988     1840  3400               	retlw	0
  5989     1841  3400               	retlw	0
  5990     1842  3400               	retlw	0
  5991     1843  3400               	retlw	0
  5992     1844  3400               	retlw	0
  5993     1845  3400               	retlw	0
  5994     1846  3400               	retlw	0
  5995     1847  3400               	retlw	0
  5996     1848  3400               	retlw	0
  5997     1849  3400               	retlw	0
  5998     184A  3400               	retlw	0
  5999     184B  3400               	retlw	0
  6000     184C                     __end_of_ledstrip:
  6001                           
  6002                           	psect	stringtext3
  6003     18E2                     __pstringtext3:
  6004     18E2                     _spi1_configuration:
  6005     18E2  3440               	retlw	64
  6006     18E3  340A               	retlw	10
  6007     18E4  3410               	retlw	16
  6008     18E5  3407               	retlw	7
  6009     18E6  3400               	retlw	0
  6010     18E7  3464               	retlw	100
  6011     18E8  3400               	retlw	0
  6012     18E9  3410               	retlw	16
  6013     18EA  3401               	retlw	1
  6014     18EB  3400               	retlw	0
  6015     18EC                     __end_of_spi1_configuration:
  6016                           
  6017                           	psect	nvBANK2
  6018     015E                     __pnvBANK2:
  6019     015E                     _TMR6_PeriodMatchCallback:
  6020     015E                     	ds	2
  6021     0160                     _TMR4_PeriodMatchCallback:
  6022     0160                     	ds	2
  6023     0162                     _TMR2_PeriodMatchCallback:
  6024     0162                     	ds	2
  6025     0164                     _EUSART_TxInterruptHandler:
  6026     0164                     	ds	2
  6027     0166                     _ADC_InterruptHandler:
  6028     0166                     	ds	2
  6029                           
  6030                           	psect	nvBANK3
  6031     01D4                     __pnvBANK3:
  6032     01D4                     _EUSART_RxInterruptHandler:
  6033     01D4                     	ds	2
  6034     001F                     _T2CON          set	31
  6035     001D                     _TMR2           set	29
  6036     001E                     _PR2            set	30
  6037     0012                     _PIR2bits       set	18
  6038     000B                     _INTCONbits     set	11
  6039     0010                     _PIR0bits       set	16
  6040     0011                     _PIR1bits       set	17
  6041     008E                     _TRISC          set	142
  6042     008D                     _TRISB          set	141
  6043     008C                     _TRISA          set	140
  6044     0092                     _PIE2bits       set	146
  6045     009D                     _ADCON0bits     set	157
  6046     0091                     _PIE1bits       set	145
  6047     009D                     _ADCON0         set	157
  6048     009F                     _ADACT          set	159
  6049     009C                     _ADRESH         set	156
  6050     009B                     _ADRESL         set	155
  6051     009E                     _ADCON1         set	158
  6052     010C                     _LATAbits       set	268
  6053     010E                     _LATC           set	270
  6054     010D                     _LATB           set	269
  6055     010C                     _LATA           set	268
  6056     019A                     _TX1REG         set	410
  6057     0199                     _RC1REG         set	409
  6058     019F                     _BAUD1CONbits   set	415
  6059     019E                     _TX1STAbits     set	414
  6060     019D                     _RC1STAbits     set	413
  6061     019C                     _SP1BRGH        set	412
  6062     019B                     _SP1BRGL        set	411
  6063     019E                     _TX1STA         set	414
  6064     019D                     _RC1STA         set	413
  6065     019F                     _BAUD1CON       set	415
  6066     018E                     _ANSELC         set	398
  6067     018D                     _ANSELB         set	397
  6068     018C                     _ANSELA         set	396
  6069     020E                     _WPUC           set	526
  6070     020D                     _WPUB           set	525
  6071     020C                     _WPUA           set	524
  6072     0211                     _SSP1BUF        set	529
  6073     0215                     _SSP1CON1bits   set	533
  6074     0212                     _SSP1ADD        set	530
  6075     0217                     _SSP1CON3       set	535
  6076     0215                     _SSP1CON1       set	533
  6077     0214                     _SSP1STAT       set	532
  6078     028E                     _ODCONC         set	654
  6079     028D                     _ODCONB         set	653
  6080     028C                     _ODCONA         set	652
  6081     030E                     _SLRCONC        set	782
  6082     030D                     _SLRCONB        set	781
  6083     030C                     _SLRCONA        set	780
  6084     0399                     _IOCCF          set	921
  6085     0398                     _IOCCN          set	920
  6086     0397                     _IOCCP          set	919
  6087     0396                     _IOCBF          set	918
  6088     0395                     _IOCBN          set	917
  6089     0394                     _IOCBP          set	916
  6090     0393                     _IOCAF          set	915
  6091     0392                     _IOCAN          set	914
  6092     0391                     _IOCAP          set	913
  6093     038E                     _INLVLC         set	910
  6094     038D                     _INLVLB         set	909
  6095     038C                     _INLVLA         set	908
  6096     041E                     _T6CON          set	1054
  6097     041C                     _TMR6           set	1052
  6098     041D                     _PR6            set	1053
  6099     0417                     _T4CON          set	1047
  6100     0415                     _TMR4           set	1045
  6101     0416                     _PR4            set	1046
  6102     061F                     _PWMTMRSbits    set	1567
  6103     0617                     _PWM5DCL        set	1559
  6104     0618                     _PWM5DCH        set	1560
  6105     0619                     _PWM5CON        set	1561
  6106     091E                     _OSCTUNE        set	2334
  6107     091C                     _OSCSTAT1       set	2332
  6108     091F                     _OSCFRQ         set	2335
  6109     091D                     _OSCEN          set	2333
  6110     091B                     _OSCCON3        set	2331
  6111     0919                     _OSCCON1        set	2329
  6112     0E20                     _SSP1CLKPPS     set	3616
  6113     0E24                     _RXPPS          set	3620
  6114     0E21                     _SSP1DATPPS     set	3617
  6115     0E9E                     _RB6PPS         set	3742
  6116     0E9F                     _RB7PPS         set	3743
  6117     0EA5                     _RC5PPS         set	3749
  6118     0E9C                     _RB4PPS         set	3740
  6119                           
  6120                           	psect	stringtext4
  6121     184C                     __pstringtext4:
  6122     184C                     STR_9:
  6123     184C  3463               	retlw	99	;'c'
  6124     184D  3468               	retlw	104	;'h'
  6125     184E  3461               	retlw	97	;'a'
  6126     184F  346E               	retlw	110	;'n'
  6127     1850  3467               	retlw	103	;'g'
  6128     1851  3465               	retlw	101	;'e'
  6129     1852  3464               	retlw	100	;'d'
  6130     1853  3420               	retlw	32	;' '
  6131     1854  3473               	retlw	115	;'s'
  6132     1855  3465               	retlw	101	;'e'
  6133     1856  3474               	retlw	116	;'t'
  6134     1857  3470               	retlw	112	;'p'
  6135     1858  346F               	retlw	111	;'o'
  6136     1859  3469               	retlw	105	;'i'
  6137     185A  346E               	retlw	110	;'n'
  6138     185B  3474               	retlw	116	;'t'
  6139     185C  3420               	retlw	32	;' '
  6140     185D  3474               	retlw	116	;'t'
  6141     185E  346F               	retlw	111	;'o'
  6142     185F  3420               	retlw	32	;' '
  6143     1860  3425               	retlw	37	;'%'
  6144     1861  3475               	retlw	117	;'u'
  6145     1862  340D               	retlw	13
  6146     1863  340A               	retlw	10
  6147     1864  3400               	retlw	0
  6148                           
  6149                           	psect	stringtext5
  6150     1865                     __pstringtext5:
  6151     1865                     STR_2:
  6152     1865  3469               	retlw	105	;'i'
  6153     1866  346E               	retlw	110	;'n'
  6154     1867  3470               	retlw	112	;'p'
  6155     1868  3475               	retlw	117	;'u'
  6156     1869  3474               	retlw	116	;'t'
  6157     186A  3420               	retlw	32	;' '
  6158     186B  3462               	retlw	98	;'b'
  6159     186C  3475               	retlw	117	;'u'
  6160     186D  3466               	retlw	102	;'f'
  6161     186E  3466               	retlw	102	;'f'
  6162     186F  3465               	retlw	101	;'e'
  6163     1870  3472               	retlw	114	;'r'
  6164     1871  3420               	retlw	32	;' '
  6165     1872  346F               	retlw	111	;'o'
  6166     1873  3476               	retlw	118	;'v'
  6167     1874  3465               	retlw	101	;'e'
  6168     1875  3472               	retlw	114	;'r'
  6169     1876  3466               	retlw	102	;'f'
  6170     1877  346C               	retlw	108	;'l'
  6171     1878  346F               	retlw	111	;'o'
  6172     1879  3477               	retlw	119	;'w'
  6173     187A  340D               	retlw	13
  6174     187B  340A               	retlw	10
  6175     187C  3400               	retlw	0
  6176                           
  6177                           	psect	stringtext6
  6178     187D                     __pstringtext6:
  6179     187D                     STR_13:
  6180     187D  3455               	retlw	85	;'U'
  6181     187E  346E               	retlw	110	;'n'
  6182     187F  346B               	retlw	107	;'k'
  6183     1880  346F               	retlw	111	;'o'
  6184     1881  3477               	retlw	119	;'w'
  6185     1882  346E               	retlw	110	;'n'
  6186     1883  3420               	retlw	32	;' '
  6187     1884  3463               	retlw	99	;'c'
  6188     1885  346F               	retlw	111	;'o'
  6189     1886  346D               	retlw	109	;'m'
  6190     1887  346D               	retlw	109	;'m'
  6191     1888  3461               	retlw	97	;'a'
  6192     1889  346E               	retlw	110	;'n'
  6193     188A  3464               	retlw	100	;'d'
  6194     188B  340D               	retlw	13
  6195     188C  340A               	retlw	10
  6196     188D  3400               	retlw	0
  6197                           
  6198                           	psect	stringtext7
  6199     188E                     __pstringtext7:
  6200     188E                     STR_5:
  6201     188E  342C               	retlw	44	;','
  6202     188F  3420               	retlw	32	;' '
  6203     1890  3464               	retlw	100	;'d'
  6204     1891  3475               	retlw	117	;'u'
  6205     1892  3474               	retlw	116	;'t'
  6206     1893  3479               	retlw	121	;'y'
  6207     1894  3420               	retlw	32	;' '
  6208     1895  3463               	retlw	99	;'c'
  6209     1896  3479               	retlw	121	;'y'
  6210     1897  3463               	retlw	99	;'c'
  6211     1898  346C               	retlw	108	;'l'
  6212     1899  3465               	retlw	101	;'e'
  6213     189A  343A               	retlw	58	;':'
  6214     189B  3420               	retlw	32	;' '
  6215     189C  3425               	retlw	37	;'%'
  6216     189D  3475               	retlw	117	;'u'
  6217     189E  3400               	retlw	0
  6218                           
  6219                           	psect	stringtext8
  6220     189F                     __pstringtext8:
  6221     189F                     STR_12:
  6222     189F  346C               	retlw	108	;'l'
  6223     18A0  346F               	retlw	111	;'o'
  6224     18A1  3467               	retlw	103	;'g'
  6225     18A2  3473               	retlw	115	;'s'
  6226     18A3  3420               	retlw	32	;' '
  6227     18A4  3474               	retlw	116	;'t'
  6228     18A5  346F               	retlw	111	;'o'
  6229     18A6  3467               	retlw	103	;'g'
  6230     18A7  3467               	retlw	103	;'g'
  6231     18A8  346C               	retlw	108	;'l'
  6232     18A9  3465               	retlw	101	;'e'
  6233     18AA  3464               	retlw	100	;'d'
  6234     18AB  340D               	retlw	13
  6235     18AC  340A               	retlw	10
  6236     18AD  3400               	retlw	0
  6237                           
  6238                           	psect	stringtext9
  6239     18AE                     __pstringtext9:
  6240     18AE                     STR_4:
  6241     18AE  342C               	retlw	44	;','
  6242     18AF  3420               	retlw	32	;' '
  6243     18B0  3473               	retlw	115	;'s'
  6244     18B1  3465               	retlw	101	;'e'
  6245     18B2  3474               	retlw	116	;'t'
  6246     18B3  3470               	retlw	112	;'p'
  6247     18B4  346F               	retlw	111	;'o'
  6248     18B5  3469               	retlw	105	;'i'
  6249     18B6  346E               	retlw	110	;'n'
  6250     18B7  3474               	retlw	116	;'t'
  6251     18B8  343A               	retlw	58	;':'
  6252     18B9  3420               	retlw	32	;' '
  6253     18BA  3425               	retlw	37	;'%'
  6254     18BB  3475               	retlw	117	;'u'
  6255     18BC  3400               	retlw	0
  6256                           
  6257                           	psect	stringtext10
  6258     18BD                     __pstringtext10:
  6259     18BD                     STR_11:
  6260     18BD  3463               	retlw	99	;'c'
  6261     18BE  3468               	retlw	104	;'h'
  6262     18BF  3461               	retlw	97	;'a'
  6263     18C0  346E               	retlw	110	;'n'
  6264     18C1  3467               	retlw	103	;'g'
  6265     18C2  3465               	retlw	101	;'e'
  6266     18C3  3464               	retlw	100	;'d'
  6267     18C4  3420               	retlw	32	;' '
  6268     18C5  346B               	retlw	107	;'k'
  6269     18C6  3469               	retlw	105	;'i'
  6270     18C7  340D               	retlw	13
  6271     18C8  340A               	retlw	10
  6272     18C9  3400               	retlw	0
  6273                           
  6274                           	psect	stringtext11
  6275     18CA                     __pstringtext11:
  6276     18CA                     STR_10:
  6277     18CA  3463               	retlw	99	;'c'
  6278     18CB  3468               	retlw	104	;'h'
  6279     18CC  3461               	retlw	97	;'a'
  6280     18CD  346E               	retlw	110	;'n'
  6281     18CE  3467               	retlw	103	;'g'
  6282     18CF  3465               	retlw	101	;'e'
  6283     18D0  3464               	retlw	100	;'d'
  6284     18D1  3420               	retlw	32	;' '
  6285     18D2  346B               	retlw	107	;'k'
  6286     18D3  3470               	retlw	112	;'p'
  6287     18D4  340D               	retlw	13
  6288     18D5  340A               	retlw	10
  6289     18D6  3400               	retlw	0
  6290                           
  6291                           	psect	stringtext12
  6292     18D7                     __pstringtext12:
  6293     18D7                     STR_3:
  6294     18D7  3468               	retlw	104	;'h'
  6295     18D8  346F               	retlw	111	;'o'
  6296     18D9  346F               	retlw	111	;'o'
  6297     18DA  3467               	retlw	103	;'g'
  6298     18DB  3474               	retlw	116	;'t'
  6299     18DC  3465               	retlw	101	;'e'
  6300     18DD  343A               	retlw	58	;':'
  6301     18DE  3420               	retlw	32	;' '
  6302     18DF  3425               	retlw	37	;'%'
  6303     18E0  3475               	retlw	117	;'u'
  6304     18E1  3400               	retlw	0
  6305                           
  6306                           	psect	stringtext13
  6307     18EC                     __pstringtext13:
  6308     18EC                     STR_1:
  6309     18EC  3425               	retlw	37	;'%'
  6310     18ED  3469               	retlw	105	;'i'
  6311     18EE  342E               	retlw	46	;'.'
  6312     18EF  3425               	retlw	37	;'%'
  6313     18F0  3430               	retlw	48	;'0'
  6314     18F1  3433               	retlw	51	;'3'
  6315     18F2  3475               	retlw	117	;'u'
  6316     18F3  3400               	retlw	0
  6317                           
  6318                           	psect	stringtext14
  6319     18F4                     __pstringtext14:
  6320     18F4                     STR_7:
  6321     18F4  342C               	retlw	44	;','
  6322     18F5  3420               	retlw	32	;' '
  6323     18F6  346B               	retlw	107	;'k'
  6324     18F7  3469               	retlw	105	;'i'
  6325     18F8  343A               	retlw	58	;':'
  6326     18F9  3420               	retlw	32	;' '
  6327     18FA  3400               	retlw	0
  6328                           
  6329                           	psect	stringtext15
  6330     18FB                     __pstringtext15:
  6331     18FB                     STR_6:
  6332     18FB  342C               	retlw	44	;','
  6333     18FC  3420               	retlw	32	;' '
  6334     18FD  346B               	retlw	107	;'k'
  6335     18FE  3470               	retlw	112	;'p'
  6336     18FF  343A               	retlw	58	;':'
  6337     1900  3420               	retlw	32	;' '
  6338     1901  3400               	retlw	0
  6339                           
  6340                           	psect	stringtext16
  6341     0000                     __pstringtext16:
  6342     18AB                     STR_8           equ	STR_12+12
  6343                           
  6344                           	psect	cinit
  6345     0042                     start_initialization:	
  6346                           ; #config settings
  6347                           
  6348     0042                     __initialization:
  6349                           
  6350                           ; Initialize objects allocated to BANK0
  6351     0042  30FC               	movlw	low __pidataBANK0
  6352     0043  0084               	movwf	4
  6353     0044  3087               	movlw	(high __pidataBANK0)| (0+128)
  6354     0045  0085               	movwf	5
  6355     0046  306C               	movlw	low __pdataBANK0
  6356     0047  0086               	movwf	6
  6357     0048  3000               	movlw	high __pdataBANK0
  6358     0049  0087               	movwf	7
  6359     004A  3004               	movlw	4
  6360     004B  319F  274E  3180   	fcall	init_ram
  6361                           
  6362                           ; Initialize objects allocated to BANK2
  6363     004E  308C               	movlw	low __pidataBANK2
  6364     004F  0084               	movwf	4
  6365     0050  309F               	movlw	(high __pidataBANK2)| (0+128)
  6366     0051  0085               	movwf	5
  6367     0052  3068               	movlw	low __pdataBANK2
  6368     0053  0086               	movwf	6
  6369     0054  3001               	movlw	high __pdataBANK2
  6370     0055  0087               	movwf	7
  6371     0056  3008               	movlw	8
  6372     0057  319F  274E  3180   	fcall	init_ram
  6373                           
  6374                           ; Clear objects allocated to BANK0
  6375     005A  3055               	movlw	low __pbssBANK0
  6376     005B  0084               	movwf	4
  6377     005C  3000               	movlw	high __pbssBANK0
  6378     005D  0085               	movwf	5
  6379     005E  3017               	movlw	23
  6380     005F  319F  2748  3180   	fcall	clear_ram0
  6381                           
  6382                           ; Clear objects allocated to BANK2
  6383     0062  3020               	movlw	low __pbssBANK2
  6384     0063  0084               	movwf	4
  6385     0064  3001               	movlw	high __pbssBANK2
  6386     0065  0085               	movwf	5
  6387     0066  302E               	movlw	46
  6388     0067  319F  2748  3180   	fcall	clear_ram0
  6389                           
  6390                           ; Clear objects allocated to BANK3
  6391     006A  30A0               	movlw	low __pbssBANK3
  6392     006B  0084               	movwf	4
  6393     006C  3001               	movlw	high __pbssBANK3
  6394     006D  0085               	movwf	5
  6395     006E  3034               	movlw	52
  6396     006F  319F  2748         	fcall	clear_ram0
  6397     0071                     end_of_initialization:	
  6398                           ;End of C runtime variable initialization code
  6399                           
  6400     0071                     __end_of__initialization:
  6401     0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6402     0072  0020               	movlb	0
  6403     0073  3194  2C25         	ljmp	_main	;jump to C main() function
  6404                           
  6405                           	psect	bssBANK0
  6406     0055                     __pbssBANK0:
  6407     0055                     _width:
  6408     0055                     	ds	2
  6409     0057                     _dutycycle:
  6410     0057                     	ds	2
  6411     0059                     _ADC_hoogtesensor:
  6412     0059                     	ds	2
  6413     005B                     _ADC_potentiometer:
  6414     005B                     	ds	2
  6415     005D                     _EUSART_OverrunErrorHandler:
  6416     005D                     	ds	2
  6417     005F                     _EUSART_FramingErrorHandler:
  6418     005F                     	ds	2
  6419     0061                     _EUSART_TxCompleteInterruptHandler:
  6420     0061                     	ds	2
  6421     0063                     _flags:
  6422     0063                     	ds	1
  6423     0064                     _is_on_target:
  6424     0064                     	ds	1
  6425     0065                     readLine@index:
  6426     0065                     	ds	1
  6427     0066                     _eusartRxCount:
  6428     0066                     	ds	1
  6429     0067                     _eusartRxTail:
  6430     0067                     	ds	1
  6431     0068                     _eusartRxHead:
  6432     0068                     	ds	1
  6433     0069                     _eusartTxBufferRemaining:
  6434     0069                     	ds	1
  6435     006A                     _eusartTxTail:
  6436     006A                     	ds	1
  6437     006B                     _eusartTxHead:
  6438     006B                     	ds	1
  6439                           
  6440                           	psect	dataBANK0
  6441     006C                     __pdataBANK0:
  6442     006C                     _setpoint:
  6443     006C                     	ds	2
  6444     006E                     _mustPrintLogs:
  6445     006E                     	ds	1
  6446     006F                     adcConversionDoneHandler@new_channel:
  6447     006F                     	ds	1
  6448                           
  6449                           	psect	bssBANK2
  6450     0120                     __pbssBANK2:
  6451     0120                     _eusartRxStatusBuffer:
  6452     0120                     	ds	16
  6453     0130                     _eusartRxBuffer:
  6454     0130                     	ds	8
  6455     0138                     _eusartTxBuffer:
  6456     0138                     	ds	8
  6457     0140                     _integraal:
  6458     0140                     	ds	4
  6459     0144                     _prec:
  6460     0144                     	ds	2
  6461     0146                     _hoogte_bal:
  6462     0146                     	ds	2
  6463     0148                     _EUSART_RxCompleteInterruptHandler:
  6464     0148                     	ds	2
  6465     014A                     _eusartRxLastError:
  6466     014A                     	ds	2
  6467     014C                     _INT_InterruptHandler:
  6468     014C                     	ds	2
  6469                           
  6470                           	psect	dataBANK2
  6471     0168                     __pdataBANK2:
  6472     0168                     _ki:
  6473     0168                     	ds	4
  6474     016C                     _kp:
  6475     016C                     	ds	4
  6476                           
  6477                           	psect	bssBANK3
  6478     01A0                     __pbssBANK3:
  6479     01A0                     _dbuf:
  6480     01A0                     	ds	32
  6481     01C0                     _line:
  6482     01C0                     	ds	20
  6483                           
  6484                           	psect	inittext
  6485     1F4E                     init_ram:
  6486     1F4E  00FE               	movwf	126
  6487     1F4F                     initloop:
  6488     1F4F  0012               	moviw fsr0++
  6489     1F50  001E               	movwi fsr1++
  6490     1F51  0BFE               	decfsz	126,f
  6491     1F52  2F4F               	goto	initloop
  6492     1F53  3400               	retlw	0
  6493                           
  6494                           	psect	clrtext
  6495     1F48                     clear_ram0:	
  6496                           ;	Called with FSR0 containing the base address, and
  6497                           ;	WREG with the size to clear
  6498                           
  6499     1F48  0064               	clrwdt	;clear the watchdog before getting into this loop
  6500     1F49                     clrloop0:
  6501     1F49  0180               	clrf	0	;clear RAM location pointed to by FSR
  6502     1F4A  3101               	addfsr 0,1
  6503     1F4B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6504     1F4C  2F49               	goto	clrloop0	;have we reached the end yet?
  6505     1F4D  3400               	retlw	0	;all done for this memory range, return
  6506                           
  6507                           	psect	cstackBANK2
  6508     014E                     __pcstackBANK2:
  6509     014E                     ?_setKp:
  6510     014E                     ?_setKi:	
  6511                           ; 1 bytes @ 0x0
  6512                           
  6513     014E                     ?_printFloat:	
  6514                           ; 1 bytes @ 0x0
  6515                           
  6516     014E                     printFloat@number:	
  6517                           ; 1 bytes @ 0x0
  6518                           
  6519     014E                     setKp@new_kp:	
  6520                           ; 4 bytes @ 0x0
  6521                           
  6522     014E                     setKi@new_ki:	
  6523                           ; 4 bytes @ 0x0
  6524                           
  6525     014E                     getLedNumber@result:	
  6526                           ; 4 bytes @ 0x0
  6527                           
  6528                           
  6529                           ; 4 bytes @ 0x0
  6530     014E                     	ds	4
  6531     0152                     uartHandler@str:
  6532     0152                     printFloat@fractional_part:	
  6533                           ; 1 bytes @ 0x4
  6534                           
  6535     0152                     ??_position_led_strip:	
  6536                           ; 2 bytes @ 0x4
  6537                           
  6538                           
  6539                           ; 1 bytes @ 0x4
  6540     0152                     	ds	2
  6541     0154                     printFloat@integer_part:
  6542                           
  6543                           ; 1 bytes @ 0x6
  6544     0154                     	ds	1
  6545     0155                     position_led_strip@target:
  6546                           
  6547                           ; 2 bytes @ 0x7
  6548     0155                     	ds	2
  6549     0157                     position_led_strip@led:
  6550                           
  6551                           ; 1 bytes @ 0x9
  6552     0157                     	ds	1
  6553     0158                     position_led_strip@led_on:
  6554                           
  6555                           ; 2 bytes @ 0xA
  6556     0158                     	ds	2
  6557     015A                     ??_main:
  6558                           
  6559                           ; 1 bytes @ 0xC
  6560     015A                     	ds	2
  6561     015C                     main@potwaarde:
  6562                           
  6563                           ; 2 bytes @ 0xE
  6564     015C                     	ds	2
  6565                           
  6566                           	psect	cstackBANK1
  6567     00A0                     __pcstackBANK1:
  6568     00A0                     ?_ADC_SetInterruptHandler:
  6569     00A0                     ?_SPI1_ByteExchange:	
  6570                           ; 1 bytes @ 0x0
  6571                           
  6572     00A0                     ?_INT_SetInterruptHandler:	
  6573                           ; 1 bytes @ 0x0
  6574                           
  6575     00A0                     ?_EUSART_Write:	
  6576                           ; 1 bytes @ 0x0
  6577                           
  6578     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6579                           ; 1 bytes @ 0x0
  6580                           
  6581     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  6582                           ; 1 bytes @ 0x0
  6583                           
  6584     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  6585                           ; 1 bytes @ 0x0
  6586                           
  6587     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  6588                           ; 1 bytes @ 0x0
  6589                           
  6590     00A0                     ?_getPotentiometer:	
  6591                           ; 1 bytes @ 0x0
  6592                           
  6593     00A0                     ?_getSetpoint:	
  6594                           ; 2 bytes @ 0x0
  6595                           
  6596     00A0                     ?_getDutycycle:	
  6597                           ; 2 bytes @ 0x0
  6598                           
  6599     00A0                     ?__Umul8_16:	
  6600                           ; 2 bytes @ 0x0
  6601                           
  6602     00A0                     ?_getHoogtesensor:	
  6603                           ; 2 bytes @ 0x0
  6604                           
  6605     00A0                     ?___wmul:	
  6606                           ; 2 bytes @ 0x0
  6607                           
  6608     00A0                     ?___awdiv:	
  6609                           ; 2 bytes @ 0x0
  6610                           
  6611     00A0                     ?___awmod:	
  6612                           ; 2 bytes @ 0x0
  6613                           
  6614     00A0                     ?___lwdiv:	
  6615                           ; 2 bytes @ 0x0
  6616                           
  6617     00A0                     ?___lwmod:	
  6618                           ; 2 bytes @ 0x0
  6619                           
  6620     00A0                     ?_getKp:	
  6621                           ; 2 bytes @ 0x0
  6622                           
  6623     00A0                     ?_getKi:	
  6624                           ; 4 bytes @ 0x0
  6625                           
  6626     00A0                     ?___fldiv:	
  6627                           ; 4 bytes @ 0x0
  6628                           
  6629     00A0                     ?___xxtofl:	
  6630                           ; 4 bytes @ 0x0
  6631                           
  6632     00A0                     SPI1_ByteExchange@byteData:	
  6633                           ; 4 bytes @ 0x0
  6634                           
  6635     00A0                     EUSART_Read@tempRxTail:	
  6636                           ; 1 bytes @ 0x0
  6637                           
  6638     00A0                     EUSART_Write@txData:	
  6639                           ; 1 bytes @ 0x0
  6640                           
  6641     00A0                     __Umul8_16@multiplicand:	
  6642                           ; 1 bytes @ 0x0
  6643                           
  6644     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  6645                           ; 1 bytes @ 0x0
  6646                           
  6647     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  6648                           ; 2 bytes @ 0x0
  6649                           
  6650     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  6651                           ; 2 bytes @ 0x0
  6652                           
  6653     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  6654                           ; 2 bytes @ 0x0
  6655                           
  6656     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  6657                           ; 2 bytes @ 0x0
  6658                           
  6659     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  6660                           ; 2 bytes @ 0x0
  6661                           
  6662     00A0                     ___wmul@multiplier:	
  6663                           ; 2 bytes @ 0x0
  6664                           
  6665     00A0                     ___awdiv@divisor:	
  6666                           ; 2 bytes @ 0x0
  6667                           
  6668     00A0                     ___awmod@divisor:	
  6669                           ; 2 bytes @ 0x0
  6670                           
  6671     00A0                     ___lwdiv@divisor:	
  6672                           ; 2 bytes @ 0x0
  6673                           
  6674     00A0                     ___lwmod@divisor:	
  6675                           ; 2 bytes @ 0x0
  6676                           
  6677     00A0                     ___fldiv@a:	
  6678                           ; 2 bytes @ 0x0
  6679                           
  6680     00A0                     ___xxtofl@val:	
  6681                           ; 4 bytes @ 0x0
  6682                           
  6683     00A0                     ??_SPI1_Initialize:	
  6684                           ; 4 bytes @ 0x0
  6685                           
  6686     00A0                     ??_TMR2_Initialize:	
  6687                           ; 1 bytes @ 0x0
  6688                           
  6689     00A0                     ??_TMR4_Initialize:	
  6690                           ; 1 bytes @ 0x0
  6691                           
  6692     00A0                     ??_TMR6_Initialize:	
  6693                           ; 1 bytes @ 0x0
  6694                           
  6695     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  6696                           ; 1 bytes @ 0x0
  6697                           
  6698     00A0                     ??_EUSART_Read:	
  6699                           ; 1 bytes @ 0x0
  6700                           
  6701     00A0                     ??_EUSART_IsRxReady:	
  6702                           ; 1 bytes @ 0x0
  6703                           
  6704     00A0                     ??_EUSART_IsTxReady:	
  6705                           ; 1 bytes @ 0x0
  6706                           
  6707     00A0                     ??_ADC_SelectChannel:	
  6708                           ; 1 bytes @ 0x0
  6709                           
  6710     00A0                     ??_pwm_fan_Initialize:	
  6711                           ; 1 bytes @ 0x0
  6712                           
  6713     00A0                     ??_CLOCK_Initialize:	
  6714                           ; 1 bytes @ 0x0
  6715                           
  6716     00A0                     ??_PIN_MANAGER_Initialize:	
  6717                           ; 1 bytes @ 0x0
  6718                           
  6719                           
  6720                           ; 1 bytes @ 0x0
  6721     00A0                     	ds	1
  6722     00A1                     ?_sendLedstripFrame:
  6723     00A1                     ADC_SelectChannel@channel:	
  6724                           ; 1 bytes @ 0x1
  6725                           
  6726     00A1                     EUSART_Read@readValue:	
  6727                           ; 1 bytes @ 0x1
  6728                           
  6729     00A1                     EUSART_Write@tempTxHead:	
  6730                           ; 1 bytes @ 0x1
  6731                           
  6732     00A1                     sendLedstripFrame@green:	
  6733                           ; 1 bytes @ 0x1
  6734                           
  6735     00A1                     ??_SPI1_ByteExchange:	
  6736                           ; 1 bytes @ 0x1
  6737                           
  6738     00A1                     ??_EUSART_Write:	
  6739                           ; 1 bytes @ 0x1
  6740                           
  6741     00A1                     ??_sendLedstripStartFrame:	
  6742                           ; 1 bytes @ 0x1
  6743                           
  6744     00A1                     ??_sendLedstripEndFrame:	
  6745                           ; 1 bytes @ 0x1
  6746                           
  6747                           
  6748                           ; 1 bytes @ 0x1
  6749     00A1                     	ds	1
  6750     00A2                     putch@txData:
  6751     00A2                     sendLedstripFrame@blue:	
  6752                           ; 1 bytes @ 0x2
  6753                           
  6754     00A2                     ___wmul@multiplicand:	
  6755                           ; 1 bytes @ 0x2
  6756                           
  6757     00A2                     ___awdiv@dividend:	
  6758                           ; 2 bytes @ 0x2
  6759                           
  6760     00A2                     ___awmod@dividend:	
  6761                           ; 2 bytes @ 0x2
  6762                           
  6763     00A2                     ___lwdiv@dividend:	
  6764                           ; 2 bytes @ 0x2
  6765                           
  6766     00A2                     ___lwmod@dividend:	
  6767                           ; 2 bytes @ 0x2
  6768                           
  6769     00A2                     ??_ADC_SetInterruptHandler:	
  6770                           ; 2 bytes @ 0x2
  6771                           
  6772     00A2                     ??_INT_SetInterruptHandler:	
  6773                           ; 1 bytes @ 0x2
  6774                           
  6775     00A2                     ??_EUSART_Initialize:	
  6776                           ; 1 bytes @ 0x2
  6777                           
  6778     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  6779                           ; 1 bytes @ 0x2
  6780                           
  6781     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  6782                           ; 1 bytes @ 0x2
  6783                           
  6784     00A2                     ??_initAdcMultiplexer:	
  6785                           ; 1 bytes @ 0x2
  6786                           
  6787     00A2                     ??_getPotentiometer:	
  6788                           ; 1 bytes @ 0x2
  6789                           
  6790     00A2                     ??_getSetpoint:	
  6791                           ; 1 bytes @ 0x2
  6792                           
  6793     00A2                     ??_getDutycycle:	
  6794                           ; 1 bytes @ 0x2
  6795                           
  6796     00A2                     ??__Umul8_16:	
  6797                           ; 1 bytes @ 0x2
  6798                           
  6799     00A2                     ??_ADC_Initialize:	
  6800                           ; 1 bytes @ 0x2
  6801                           
  6802     00A2                     ??_INTERRUPT_Initialize:	
  6803                           ; 1 bytes @ 0x2
  6804                           
  6805     00A2                     ??_SYSTEM_Initialize:	
  6806                           ; 1 bytes @ 0x2
  6807                           
  6808     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  6809                           ; 1 bytes @ 0x2
  6810                           
  6811     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  6812                           ; 1 bytes @ 0x2
  6813                           
  6814     00A2                     ??_putch:	
  6815                           ; 1 bytes @ 0x2
  6816                           
  6817     00A2                     ??_getHoogtesensor:	
  6818                           ; 1 bytes @ 0x2
  6819                           
  6820                           
  6821                           ; 1 bytes @ 0x2
  6822     00A2                     	ds	1
  6823     00A3                     ?_fputc:
  6824     00A3                     sendLedstripFrame@intensity:	
  6825                           ; 2 bytes @ 0x3
  6826                           
  6827     00A3                     fputc@c:	
  6828                           ; 1 bytes @ 0x3
  6829                           
  6830                           
  6831                           ; 2 bytes @ 0x3
  6832     00A3                     	ds	1
  6833     00A4                     sendLedstripFrame@red:
  6834     00A4                     ___awdiv@counter:	
  6835                           ; 1 bytes @ 0x4
  6836                           
  6837     00A4                     ___awmod@counter:	
  6838                           ; 1 bytes @ 0x4
  6839                           
  6840     00A4                     ___lwmod@counter:	
  6841                           ; 1 bytes @ 0x4
  6842                           
  6843     00A4                     ___wmul@product:	
  6844                           ; 1 bytes @ 0x4
  6845                           
  6846     00A4                     ___lwdiv@quotient:	
  6847                           ; 2 bytes @ 0x4
  6848                           
  6849     00A4                     __Umul8_16@product:	
  6850                           ; 2 bytes @ 0x4
  6851                           
  6852     00A4                     ___fldiv@b:	
  6853                           ; 2 bytes @ 0x4
  6854                           
  6855     00A4                     ??_getKp:	
  6856                           ; 4 bytes @ 0x4
  6857                           
  6858     00A4                     ??_getKi:	
  6859                           ; 1 bytes @ 0x4
  6860                           
  6861     00A4                     ??_sendLedstripFrame:	
  6862                           ; 1 bytes @ 0x4
  6863                           
  6864     00A4                     ??___wmul:	
  6865                           ; 1 bytes @ 0x4
  6866                           
  6867     00A4                     ??___awdiv:	
  6868                           ; 1 bytes @ 0x4
  6869                           
  6870     00A4                     ??___awmod:	
  6871                           ; 1 bytes @ 0x4
  6872                           
  6873     00A4                     ??___lwdiv:	
  6874                           ; 1 bytes @ 0x4
  6875                           
  6876     00A4                     ??___lwmod:	
  6877                           ; 1 bytes @ 0x4
  6878                           
  6879     00A4                     ??___xxtofl:	
  6880                           ; 1 bytes @ 0x4
  6881                           
  6882                           
  6883                           ; 1 bytes @ 0x4
  6884     00A4                     	ds	1
  6885     00A5                     ___awdiv@sign:
  6886     00A5                     ___awmod@sign:	
  6887                           ; 1 bytes @ 0x5
  6888                           
  6889     00A5                     fputc@fp:	
  6890                           ; 1 bytes @ 0x5
  6891                           
  6892                           
  6893                           ; 2 bytes @ 0x5
  6894     00A5                     	ds	1
  6895     00A6                     ?_SPI1_Open:
  6896     00A6                     ?_atoi:	
  6897                           ; 1 bytes @ 0x6
  6898                           
  6899     00A6                     ?_abs:	
  6900                           ; 2 bytes @ 0x6
  6901                           
  6902     00A6                     ?_read_prec_or_width:	
  6903                           ; 2 bytes @ 0x6
  6904                           
  6905     00A6                     SPI1_Open@spiConfigIndex:	
  6906                           ; 2 bytes @ 0x6
  6907                           
  6908     00A6                     ___lwdiv@counter:	
  6909                           ; 1 bytes @ 0x6
  6910                           
  6911     00A6                     atoi@s:	
  6912                           ; 1 bytes @ 0x6
  6913                           
  6914     00A6                     read_prec_or_width@fmt:	
  6915                           ; 1 bytes @ 0x6
  6916                           
  6917     00A6                     ___awdiv@quotient:	
  6918                           ; 1 bytes @ 0x6
  6919                           
  6920     00A6                     __Umul8_16@word_mpld:	
  6921                           ; 2 bytes @ 0x6
  6922                           
  6923     00A6                     abs@a:	
  6924                           ; 2 bytes @ 0x6
  6925                           
  6926                           
  6927                           ; 2 bytes @ 0x6
  6928     00A6                     	ds	1
  6929     00A7                     read_prec_or_width@ap:
  6930     00A7                     ??_SPI1_Open:	
  6931                           ; 1 bytes @ 0x7
  6932                           
  6933     00A7                     ??_fputc:	
  6934                           ; 1 bytes @ 0x7
  6935                           
  6936                           
  6937                           ; 1 bytes @ 0x7
  6938     00A7                     	ds	1
  6939     00A8                     __Umul8_16@multiplier:
  6940     00A8                     ___xxtofl@sign:	
  6941                           ; 1 bytes @ 0x8
  6942                           
  6943     00A8                     ??_atoi:	
  6944                           ; 1 bytes @ 0x8
  6945                           
  6946     00A8                     ??_abs:	
  6947                           ; 1 bytes @ 0x8
  6948                           
  6949     00A8                     ??___fldiv:	
  6950                           ; 1 bytes @ 0x8
  6951                           
  6952     00A8                     ??_read_prec_or_width:	
  6953                           ; 1 bytes @ 0x8
  6954                           
  6955                           
  6956                           ; 1 bytes @ 0x8
  6957     00A8                     	ds	1
  6958     00A9                     ___xxtofl@exp:
  6959     00A9                     ??_initLedstrip:	
  6960                           ; 1 bytes @ 0x9
  6961                           
  6962                           
  6963                           ; 1 bytes @ 0x9
  6964     00A9                     	ds	1
  6965     00AA                     atoi@neg:
  6966     00AA                     ___xxtofl@arg:	
  6967                           ; 1 bytes @ 0xA
  6968                           
  6969                           
  6970                           ; 4 bytes @ 0xA
  6971     00AA                     	ds	1
  6972     00AB                     read_prec_or_width@c:
  6973     00AB                     atoi@n:	
  6974                           ; 1 bytes @ 0xB
  6975                           
  6976                           
  6977                           ; 2 bytes @ 0xB
  6978     00AB                     	ds	1
  6979     00AC                     ?_fputs:
  6980     00AC                     fputs@s:	
  6981                           ; 2 bytes @ 0xC
  6982                           
  6983     00AC                     read_prec_or_width@n:	
  6984                           ; 1 bytes @ 0xC
  6985                           
  6986                           
  6987                           ; 2 bytes @ 0xC
  6988     00AC                     	ds	1
  6989     00AD                     ?_setSetpoint:
  6990     00AD                     setSetpoint@new_setpoint:	
  6991                           ; 1 bytes @ 0xD
  6992                           
  6993     00AD                     fputs@fp:	
  6994                           ; 2 bytes @ 0xD
  6995                           
  6996     00AD                     ___fldiv@rem:	
  6997                           ; 2 bytes @ 0xD
  6998                           
  6999                           
  7000                           ; 4 bytes @ 0xD
  7001     00AD                     	ds	1
  7002     00AE                     ?___fladd:
  7003     00AE                     ___fladd@b:	
  7004                           ; 4 bytes @ 0xE
  7005                           
  7006                           
  7007                           ; 4 bytes @ 0xE
  7008     00AE                     	ds	1
  7009     00AF                     ??_setSetpoint:
  7010     00AF                     ??_fputs:	
  7011                           ; 1 bytes @ 0xF
  7012                           
  7013                           
  7014                           ; 1 bytes @ 0xF
  7015     00AF                     	ds	2
  7016     00B1                     ___fldiv@sign:
  7017     00B1                     fputs@c:	
  7018                           ; 1 bytes @ 0x11
  7019                           
  7020                           
  7021                           ; 1 bytes @ 0x11
  7022     00B1                     	ds	1
  7023     00B2                     ___fldiv@new_exp:
  7024     00B2                     fputs@i:	
  7025                           ; 2 bytes @ 0x12
  7026                           
  7027     00B2                     ___fladd@a:	
  7028                           ; 2 bytes @ 0x12
  7029                           
  7030                           
  7031                           ; 4 bytes @ 0x12
  7032     00B2                     	ds	2
  7033     00B4                     ?_pad:
  7034     00B4                     pad@fp:	
  7035                           ; 1 bytes @ 0x14
  7036                           
  7037     00B4                     ___fldiv@grs:	
  7038                           ; 2 bytes @ 0x14
  7039                           
  7040                           
  7041                           ; 4 bytes @ 0x14
  7042     00B4                     	ds	2
  7043     00B6                     pad@buf:
  7044     00B6                     ??___fladd:	
  7045                           ; 1 bytes @ 0x16
  7046                           
  7047                           
  7048                           ; 1 bytes @ 0x16
  7049     00B6                     	ds	1
  7050     00B7                     pad@p:
  7051                           
  7052                           ; 2 bytes @ 0x17
  7053     00B7                     	ds	1
  7054     00B8                     ___fldiv@bexp:
  7055                           
  7056                           ; 1 bytes @ 0x18
  7057     00B8                     	ds	1
  7058     00B9                     ___fldiv@aexp:
  7059     00B9                     ??_pad:	
  7060                           ; 1 bytes @ 0x19
  7061                           
  7062                           
  7063                           ; 1 bytes @ 0x19
  7064     00B9                     	ds	1
  7065     00BA                     pad@i:
  7066                           
  7067                           ; 2 bytes @ 0x1A
  7068     00BA                     	ds	2
  7069     00BC                     ?_dtoa:
  7070     00BC                     ?_utoa:	
  7071                           ; 1 bytes @ 0x1C
  7072                           
  7073     00BC                     dtoa@fp:	
  7074                           ; 1 bytes @ 0x1C
  7075                           
  7076     00BC                     utoa@fp:	
  7077                           ; 2 bytes @ 0x1C
  7078                           
  7079                           
  7080                           ; 2 bytes @ 0x1C
  7081     00BC                     	ds	2
  7082     00BE                     ___fladd@signs:
  7083     00BE                     dtoa@d:	
  7084                           ; 1 bytes @ 0x1E
  7085                           
  7086     00BE                     utoa@d:	
  7087                           ; 2 bytes @ 0x1E
  7088                           
  7089                           
  7090                           ; 2 bytes @ 0x1E
  7091     00BE                     	ds	1
  7092     00BF                     ___fladd@aexp:
  7093                           
  7094                           ; 1 bytes @ 0x1F
  7095     00BF                     	ds	1
  7096     00C0                     ___fladd@bexp:
  7097     00C0                     ??_dtoa:	
  7098                           ; 1 bytes @ 0x20
  7099                           
  7100     00C0                     ??_utoa:	
  7101                           ; 1 bytes @ 0x20
  7102                           
  7103                           
  7104                           ; 1 bytes @ 0x20
  7105     00C0                     	ds	1
  7106     00C1                     ___fladd@grs:
  7107     00C1                     utoa@p:	
  7108                           ; 1 bytes @ 0x21
  7109                           
  7110     00C1                     _dtoa$2128:	
  7111                           ; 1 bytes @ 0x21
  7112                           
  7113                           
  7114                           ; 2 bytes @ 0x21
  7115     00C1                     	ds	1
  7116     00C2                     ?___flsub:
  7117     00C2                     utoa@w:	
  7118                           ; 4 bytes @ 0x22
  7119                           
  7120     00C2                     ___flsub@a:	
  7121                           ; 2 bytes @ 0x22
  7122                           
  7123                           
  7124                           ; 4 bytes @ 0x22
  7125     00C2                     	ds	1
  7126     00C3                     dtoa@p:
  7127                           
  7128                           ; 1 bytes @ 0x23
  7129     00C3                     	ds	1
  7130     00C4                     dtoa@w:
  7131     00C4                     utoa@i:	
  7132                           ; 2 bytes @ 0x24
  7133                           
  7134                           
  7135                           ; 2 bytes @ 0x24
  7136     00C4                     	ds	2
  7137     00C6                     dtoa@s:
  7138     00C6                     ___flsub@b:	
  7139                           ; 1 bytes @ 0x26
  7140                           
  7141                           
  7142                           ; 4 bytes @ 0x26
  7143     00C6                     	ds	1
  7144     00C7                     dtoa@i:
  7145                           
  7146                           ; 2 bytes @ 0x27
  7147     00C7                     	ds	2
  7148     00C9                     ?_vfpfcnvrt:
  7149     00C9                     vfpfcnvrt@fp:	
  7150                           ; 1 bytes @ 0x29
  7151                           
  7152                           
  7153                           ; 2 bytes @ 0x29
  7154     00C9                     	ds	1
  7155     00CA                     ?___flmul:
  7156     00CA                     ___flmul@b:	
  7157                           ; 4 bytes @ 0x2A
  7158                           
  7159     00CA                     ??___flsub:	
  7160                           ; 4 bytes @ 0x2A
  7161                           
  7162                           
  7163                           ; 1 bytes @ 0x2A
  7164     00CA                     	ds	1
  7165     00CB                     vfpfcnvrt@fmt:
  7166                           
  7167                           ; 1 bytes @ 0x2B
  7168     00CB                     	ds	1
  7169     00CC                     vfpfcnvrt@ap:
  7170                           
  7171                           ; 1 bytes @ 0x2C
  7172     00CC                     	ds	1
  7173     00CD                     ??_vfpfcnvrt:
  7174                           
  7175                           ; 1 bytes @ 0x2D
  7176     00CD                     	ds	1
  7177     00CE                     ___flmul@a:
  7178                           
  7179                           ; 4 bytes @ 0x2E
  7180     00CE                     	ds	3
  7181     00D1                     vfpfcnvrt@done:
  7182                           
  7183                           ; 1 bytes @ 0x31
  7184     00D1                     	ds	1
  7185     00D2                     vfpfcnvrt@convarg:
  7186     00D2                     ??___flmul:	
  7187                           ; 4 bytes @ 0x32
  7188                           
  7189                           
  7190                           ; 1 bytes @ 0x32
  7191     00D2                     	ds	4
  7192     00D6                     vfpfcnvrt@cp:
  7193                           
  7194                           ; 2 bytes @ 0x36
  7195     00D6                     	ds	1
  7196     00D7                     ___flmul@sign:
  7197                           
  7198                           ; 1 bytes @ 0x37
  7199     00D7                     	ds	1
  7200     00D8                     ?_vfprintf:
  7201     00D8                     ___flmul@aexp:	
  7202                           ; 2 bytes @ 0x38
  7203                           
  7204     00D8                     vfprintf@fp:	
  7205                           ; 1 bytes @ 0x38
  7206                           
  7207                           
  7208                           ; 2 bytes @ 0x38
  7209     00D8                     	ds	1
  7210     00D9                     ___flmul@grs:
  7211                           
  7212                           ; 4 bytes @ 0x39
  7213     00D9                     	ds	1
  7214     00DA                     vfprintf@fmt:
  7215                           
  7216                           ; 2 bytes @ 0x3A
  7217     00DA                     	ds	2
  7218     00DC                     vfprintf@ap:
  7219                           
  7220                           ; 1 bytes @ 0x3C
  7221     00DC                     	ds	1
  7222     00DD                     ___flmul@bexp:
  7223     00DD                     ??_vfprintf:	
  7224                           ; 1 bytes @ 0x3D
  7225                           
  7226                           
  7227                           ; 1 bytes @ 0x3D
  7228     00DD                     	ds	1
  7229     00DE                     vfprintf@cfmt:
  7230     00DE                     ___flmul@prod:	
  7231                           ; 2 bytes @ 0x3E
  7232                           
  7233                           
  7234                           ; 4 bytes @ 0x3E
  7235     00DE                     	ds	2
  7236     00E0                     ?_printf:
  7237     00E0                     printf@fmt:	
  7238                           ; 2 bytes @ 0x40
  7239                           
  7240                           
  7241                           ; 2 bytes @ 0x40
  7242     00E0                     	ds	2
  7243     00E2                     ___flmul@temp:
  7244                           
  7245                           ; 2 bytes @ 0x42
  7246     00E2                     	ds	2
  7247     00E4                     ?_str2float:
  7248     00E4                     ?___fltol:	
  7249                           ; 4 bytes @ 0x44
  7250                           
  7251     00E4                     str2float@str:	
  7252                           ; 4 bytes @ 0x44
  7253                           
  7254     00E4                     ___fltol@f1:	
  7255                           ; 1 bytes @ 0x44
  7256                           
  7257                           
  7258                           ; 4 bytes @ 0x44
  7259     00E4                     	ds	2
  7260     00E6                     printf@ap:
  7261     00E6                     ??_printf:	
  7262                           ; 1 bytes @ 0x46
  7263                           
  7264                           
  7265                           ; 1 bytes @ 0x46
  7266     00E6                     	ds	1
  7267     00E7                     ?_readLine:
  7268                           
  7269                           ; 1 bytes @ 0x47
  7270     00E7                     	ds	1
  7271     00E8                     str2float@decimal_separator:
  7272     00E8                     ??_str2float:	
  7273                           ; 1 bytes @ 0x48
  7274                           
  7275     00E8                     ??___fltol:	
  7276                           ; 1 bytes @ 0x48
  7277                           
  7278                           
  7279                           ; 1 bytes @ 0x48
  7280     00E8                     	ds	1
  7281     00E9                     str2float@multiplier:
  7282     00E9                     ??_readLine:	
  7283                           ; 1 bytes @ 0x49
  7284                           
  7285                           
  7286                           ; 1 bytes @ 0x49
  7287     00E9                     	ds	1
  7288     00EA                     str2float@i:
  7289                           
  7290                           ; 1 bytes @ 0x4A
  7291     00EA                     	ds	1
  7292     00EB                     str2float@number:
  7293                           
  7294                           ; 4 bytes @ 0x4B
  7295     00EB                     	ds	1
  7296     00EC                     ___fltol@sign1:
  7297                           
  7298                           ; 1 bytes @ 0x4C
  7299     00EC                     	ds	1
  7300     00ED                     ___fltol@exp1:
  7301                           
  7302                           ; 1 bytes @ 0x4D
  7303     00ED                     	ds	1
  7304     00EE                     ?_getLedNumber:
  7305     00EE                     getLedNumber@height:	
  7306                           ; 2 bytes @ 0x4E
  7307                           
  7308     00EE                     ??_printFloat:	
  7309                           ; 2 bytes @ 0x4E
  7310                           
  7311                           
  7312                           ; 1 bytes @ 0x4E
  7313     00EE                     	ds	1
  7314     00EF                     str2float@digit:
  7315                           
  7316                           ; 1 bytes @ 0x4F
  7317     00EF                     	ds	1
  7318     00F0                     ??_uartHandler:
  7319     00F0                     ??_printLogs:	
  7320                           ; 1 bytes @ 0x50
  7321                           
  7322     00F0                     ??_setKp:	
  7323                           ; 1 bytes @ 0x50
  7324                           
  7325     00F0                     ??_setKi:	
  7326                           ; 1 bytes @ 0x50
  7327                           
  7328     00F0                     ??_TMR6_Tasks:	
  7329                           ; 1 bytes @ 0x50
  7330                           
  7331     00F0                     ??_getLedNumber:	
  7332                           ; 1 bytes @ 0x50
  7333                           
  7334     00F0                     ??_updateLedstripAnimation:	
  7335                           ; 1 bytes @ 0x50
  7336                           
  7337                           
  7338                           	psect	cstackCOMMON
  7339     0070                     __pcstackCOMMON:	
  7340                           ; 1 bytes @ 0x50
  7341                           
  7342     0070                     ?_ADC_DefaultInterruptHandler:
  7343     0070                     ?_SPI1_Initialize:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346     0070                     ?_TMR4_ISR:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349     0070                     ?_TMR2_ISR:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352     0070                     ?_TMR2_Initialize:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355     0070                     ?_TMR4_Initialize:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358     0070                     ?_TMR6_Initialize:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361     0070                     ?_EUSART_Initialize:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373     0070                     ?_EUSART_Read:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376     0070                     ?_EUSART_IsRxReady:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379     0070                     ?_EUSART_IsTxReady:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382     0070                     ?_EUSART_ReceiveISR:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385     0070                     ?_EUSART_TransmitISR:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394     0070                     ?_initAdcMultiplexer:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397     0070                     ?_controller:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400     0070                     ?_initLedstrip:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403     0070                     ?_uartHandler:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406     0070                     ?_printLogs:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409     0070                     ?_ADC_Initialize:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412     0070                     ?_ADC_SelectChannel:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415     0070                     ?_ADC_ISR:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418     0070                     ?_pwm_fan_Initialize:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421     0070                     ?_pwm_fan_LoadDutyValue:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424     0070                     ?_INTERRUPT_Initialize:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427     0070                     ?_INTERRUPT_InterruptManager:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430     0070                     ?_CLOCK_Initialize:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433     0070                     ?_PIN_MANAGER_Initialize:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436     0070                     ?_SYSTEM_Initialize:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439     0070                     ?_TMR6_Tasks:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442     0070                     ?_putch:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445     0070                     ?_adcConversionDoneHandler:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448     0070                     ?_sendLedstripStartFrame:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451     0070                     ?_sendLedstripEndFrame:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454     0070                     ?_position_led_strip:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457     0070                     ?_updateLedstripAnimation:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460     0070                     ?i1_ADC_SelectChannel:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463     0070                     ?_ADC_GetConversionResult:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466     0070                     ?_main:	
  7467                           ; 2 bytes @ 0x0
  7468                           
  7469     0070                     ?i1_getHoogtesensor:	
  7470                           ; 2 bytes @ 0x0
  7471                           
  7472     0070                     ?i1__Umul8_16:	
  7473                           ; 2 bytes @ 0x0
  7474                           
  7475     0070                     ?i1___xxtofl:	
  7476                           ; 2 bytes @ 0x0
  7477                           
  7478     0070                     EUSART_ReceiveISR@regValue:	
  7479                           ; 4 bytes @ 0x0
  7480                           
  7481     0070                     EUSART_TransmitISR@tempTxTail:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484     0070                     i1__Umul8_16@multiplicand:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490     0070                     i1___xxtofl@val:	
  7491                           ; 2 bytes @ 0x0
  7492                           
  7493     0070                     ??_ADC_DefaultInterruptHandler:	
  7494                           ; 4 bytes @ 0x0
  7495                           
  7496     0070                     ??_TMR2_ISR:	
  7497                           ; 1 bytes @ 0x0
  7498                           
  7499     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7500                           ; 1 bytes @ 0x0
  7501                           
  7502     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505     0070                     ??_EUSART_ReceiveISR:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508     0070                     ??_EUSART_TransmitISR:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517     0070                     ??i1_ADC_SelectChannel:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520                           
  7521                           ; 1 bytes @ 0x0
  7522     0070                     	ds	1
  7523     0071                     EUSART_ReceiveISR@tempRxHead:
  7524     0071                     i1ADC_SelectChannel@channel:	
  7525                           ; 1 bytes @ 0x1
  7526                           
  7527                           
  7528                           ; 1 bytes @ 0x1
  7529     0071                     	ds	1
  7530     0072                     ??_ADC_GetConversionResult:
  7531     0072                     ??_pwm_fan_LoadDutyValue:	
  7532                           ; 1 bytes @ 0x2
  7533                           
  7534     0072                     ??_adcConversionDoneHandler:	
  7535                           ; 1 bytes @ 0x2
  7536                           
  7537     0072                     ??i1_getHoogtesensor:	
  7538                           ; 1 bytes @ 0x2
  7539                           
  7540     0072                     ??i1__Umul8_16:	
  7541                           ; 1 bytes @ 0x2
  7542                           
  7543                           
  7544                           ; 1 bytes @ 0x2
  7545     0072                     	ds	2
  7546     0074                     i1__Umul8_16@product:
  7547     0074                     ??_ADC_ISR:	
  7548                           ; 2 bytes @ 0x4
  7549                           
  7550     0074                     ??i1___xxtofl:	
  7551                           ; 1 bytes @ 0x4
  7552                           
  7553                           
  7554                           ; 1 bytes @ 0x4
  7555     0074                     	ds	2
  7556     0076                     i1__Umul8_16@word_mpld:
  7557                           
  7558                           ; 2 bytes @ 0x6
  7559     0076                     	ds	2
  7560     0078                     i1__Umul8_16@multiplier:
  7561     0078                     i1___xxtofl@sign:	
  7562                           ; 1 bytes @ 0x8
  7563                           
  7564                           
  7565                           ; 1 bytes @ 0x8
  7566     0078                     	ds	1
  7567     0079                     i1___xxtofl@exp:
  7568                           
  7569                           ; 1 bytes @ 0x9
  7570     0079                     	ds	1
  7571     007A                     i1___xxtofl@arg:
  7572                           
  7573                           ; 4 bytes @ 0xA
  7574     007A                     	ds	4
  7575     007E                     ??_TMR4_ISR:
  7576     007E                     ??_INTERRUPT_InterruptManager:	
  7577                           ; 1 bytes @ 0xE
  7578                           
  7579                           
  7580                           	psect	cstackBANK0
  7581     0020                     __pcstackBANK0:	
  7582                           ; 1 bytes @ 0xE
  7583                           
  7584     0020                     ?i1___flmul:
  7585     0020                     i1___flmul@b:	
  7586                           ; 4 bytes @ 0x0
  7587                           
  7588                           
  7589                           ; 4 bytes @ 0x0
  7590     0020                     	ds	4
  7591     0024                     i1___flmul@a:
  7592                           
  7593                           ; 4 bytes @ 0x4
  7594     0024                     	ds	4
  7595     0028                     ??i1___flmul:
  7596                           
  7597                           ; 1 bytes @ 0x8
  7598     0028                     	ds	5
  7599     002D                     i1___flmul@sign:
  7600                           
  7601                           ; 1 bytes @ 0xD
  7602     002D                     	ds	1
  7603     002E                     i1___flmul@aexp:
  7604                           
  7605                           ; 1 bytes @ 0xE
  7606     002E                     	ds	1
  7607     002F                     i1___flmul@grs:
  7608                           
  7609                           ; 4 bytes @ 0xF
  7610     002F                     	ds	4
  7611     0033                     i1___flmul@bexp:
  7612                           
  7613                           ; 1 bytes @ 0x13
  7614     0033                     	ds	1
  7615     0034                     i1___flmul@prod:
  7616                           
  7617                           ; 4 bytes @ 0x14
  7618     0034                     	ds	4
  7619     0038                     i1___flmul@temp:
  7620                           
  7621                           ; 2 bytes @ 0x18
  7622     0038                     	ds	2
  7623     003A                     ?i1___fltol:
  7624     003A                     ?i1___fladd:	
  7625                           ; 4 bytes @ 0x1A
  7626                           
  7627     003A                     i1___fltol@f1:	
  7628                           ; 4 bytes @ 0x1A
  7629                           
  7630     003A                     i1___fladd@b:	
  7631                           ; 4 bytes @ 0x1A
  7632                           
  7633                           
  7634                           ; 4 bytes @ 0x1A
  7635     003A                     	ds	4
  7636     003E                     i1___fladd@a:
  7637     003E                     ??i1___fltol:	
  7638                           ; 4 bytes @ 0x1E
  7639                           
  7640                           
  7641                           ; 1 bytes @ 0x1E
  7642     003E                     	ds	4
  7643     0042                     i1___fltol@sign1:
  7644     0042                     ??i1___fladd:	
  7645                           ; 1 bytes @ 0x22
  7646                           
  7647                           
  7648                           ; 1 bytes @ 0x22
  7649     0042                     	ds	1
  7650     0043                     i1___fltol@exp1:
  7651                           
  7652                           ; 1 bytes @ 0x23
  7653     0043                     	ds	7
  7654     004A                     i1___fladd@signs:
  7655                           
  7656                           ; 1 bytes @ 0x2A
  7657     004A                     	ds	1
  7658     004B                     i1___fladd@aexp:
  7659                           
  7660                           ; 1 bytes @ 0x2B
  7661     004B                     	ds	1
  7662     004C                     i1___fladd@bexp:
  7663                           
  7664                           ; 1 bytes @ 0x2C
  7665     004C                     	ds	1
  7666     004D                     i1___fladd@grs:
  7667                           
  7668                           ; 1 bytes @ 0x2D
  7669     004D                     	ds	1
  7670     004E                     ??_controller:
  7671                           
  7672                           ; 1 bytes @ 0x2E
  7673     004E                     	ds	1
  7674     004F                     controller@P:
  7675                           
  7676                           ; 2 bytes @ 0x2F
  7677     004F                     	ds	2
  7678     0051                     controller@I:
  7679                           
  7680                           ; 2 bytes @ 0x31
  7681     0051                     	ds	2
  7682     0053                     controller@error:
  7683                           
  7684                           ; 2 bytes @ 0x33
  7685     0053                     	ds	2
  7686                           
  7687                           	psect	maintext
  7688     1425                     __pmaintext:	
  7689 ;;
  7690 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7691 ;;
  7692 ;; *************** function _main *****************
  7693 ;; Defined at:
  7694 ;;		line 49 in file "main.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  potwaarde       2   14[BANK2 ] unsigned short 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  2  792[None  ] int 
  7701 ;; Registers used:
  7702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7703 ;; Tracked objects:
  7704 ;;		On entry : B1F/0
  7705 ;;		On exit  : 1F/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;Total ram usage:        4 bytes
  7713 ;; Hardware stack levels required when called: 16
  7714 ;; This function calls:
  7715 ;;		_SYSTEM_Initialize
  7716 ;;		_TMR4_PeriodMatchCallbackRegister
  7717 ;;		_TMR6_Tasks
  7718 ;;		_getPotentiometer
  7719 ;;		_initAdcMultiplexer
  7720 ;;		_initLedstrip
  7721 ;;		_printLogs
  7722 ;;		_uartHandler
  7723 ;; This function is called by:
  7724 ;;		Startup code after reset
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728     1425                     _main:	
  7729                           ;psect for function _main
  7730                           
  7731                           
  7732                           ;main.c: 51:     SYSTEM_Initialize();
  7733                           
  7734                           ;incstack = 0
  7735                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7736     1425  3191  21C2  3194   	fcall	_SYSTEM_Initialize
  7737                           
  7738                           ;main.c: 57:     (INTCONbits.GIE = 1);
  7739     1428  178B               	bsf	11,7	;volatile
  7740                           
  7741                           ;main.c: 63:     (INTCONbits.PEIE = 1);
  7742     1429  170B               	bsf	11,6	;volatile
  7743                           
  7744                           ;main.c: 68:     initAdcMultiplexer();
  7745     142A  319F  27E9  3194   	fcall	_initAdcMultiplexer
  7746                           
  7747                           ;main.c: 69:     TMR4_PeriodMatchCallbackRegister(controller);
  7748     142D  30A0               	movlw	low _controller
  7749     142E  0021               	movlb	1	; select bank1
  7750     142F  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  7751     1430  300D               	movlw	high _controller
  7752     1431  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  7753     1432  319F  2764  3194   	fcall	_TMR4_PeriodMatchCallbackRegister
  7754                           
  7755                           ;main.c: 70:     initLedstrip();
  7756     1435  3190  205F  3194   	fcall	_initLedstrip
  7757     1438                     l5971:
  7758                           
  7759                           ;main.c: 73:     {;main.c: 74:         uartHandler();
  7760     1438  318B  234E  3194   	fcall	_uartHandler
  7761     143B  0022               	movlb	2	; select bank2
  7762     143C  128C               	bcf	12,5	;volatile
  7763     143D  108C               	bcf	12,1	;volatile
  7764     143E  110C               	bcf	12,2	;volatile
  7765                           
  7766                           ;main.c: 80:         uint16_t potwaarde = getPotentiometer();
  7767     143F  319F  27AF  3194   	fcall	_getPotentiometer
  7768     1442  0821               	movf	(?_getPotentiometer+1)^(0+128),w
  7769     1443  0022               	movlb	2	; select bank2
  7770     1444  00DD               	movwf	(main@potwaarde+1)^(0+256)
  7771     1445  0021               	movlb	1	; select bank1
  7772     1446  0820               	movf	?_getPotentiometer^(0+128),w
  7773     1447  0022               	movlb	2	; select bank2
  7774     1448  00DC               	movwf	main@potwaarde^(0+256)
  7775                           
  7776                           ;main.c: 82:         if (potwaarde > 256) {
  7777     1449  3001               	movlw	1
  7778     144A  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7779     144B  3001               	movlw	1
  7780     144C  1903               	skipnz
  7781     144D  025C               	subwf	main@potwaarde^(0+256),w
  7782     144E  1803               	btfsc	3,0
  7783                           
  7784                           ;main.c: 83:             do { LATAbits.LATA5 = 1; } while(0);
  7785     144F  168C               	bsf	12,5	;volatile
  7786                           
  7787                           ;main.c: 85:         if (potwaarde > 512) {
  7788     1450  3002               	movlw	2
  7789     1451  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7790     1452  3001               	movlw	1
  7791     1453  1903               	skipnz
  7792     1454  025C               	subwf	main@potwaarde^(0+256),w
  7793     1455  1803               	btfsc	3,0
  7794                           
  7795                           ;main.c: 86:             do { LATAbits.LATA1 = 1; } while(0);
  7796     1456  148C               	bsf	12,1	;volatile
  7797                           
  7798                           ;main.c: 88:         if (potwaarde > 768) {
  7799     1457  3003               	movlw	3
  7800     1458  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7801     1459  3001               	movlw	1
  7802     145A  1903               	skipnz
  7803     145B  025C               	subwf	main@potwaarde^(0+256),w
  7804     145C  1803               	btfsc	3,0
  7805                           
  7806                           ;main.c: 89:             do { LATAbits.LATA2 = 1; } while(0);
  7807     145D  150C               	bsf	12,2	;volatile
  7808                           
  7809                           ;main.c: 91:         _delay((unsigned long)((100)*(32000000U/4000.0)));
  7810     145E  3005               	movlw	5
  7811     145F  0022               	movlb	2	; select bank2
  7812     1460  00DB               	movwf	(??_main^(0+256)+1)
  7813     1461  300F               	movlw	15
  7814     1462  00DA               	movwf	??_main^(0+256)
  7815     1463  30F1               	movlw	241
  7816     1464                     u7577:
  7817     1464  0B89               	decfsz	9,f
  7818     1465  2C64               	goto	u7577
  7819     1466  0BDA               	decfsz	??_main^(0+256),f
  7820     1467  2C64               	goto	u7577
  7821     1468  0BDB               	decfsz	(??_main^(0+256)+1),f
  7822     1469  2C64               	goto	u7577
  7823                           
  7824                           ;main.c: 93:         printLogs();
  7825     146A  3188  2012  3194   	fcall	_printLogs
  7826                           
  7827                           ;main.c: 94:         TMR6_Tasks();
  7828     146D  3190  20A3  3194   	fcall	_TMR6_Tasks
  7829     1470  2C38               	goto	l5971
  7830     1471                     __end_of_main:
  7831                           
  7832                           	psect	text1
  7833     0B4E                     __ptext1:	
  7834 ;; *************** function _uartHandler *****************
  7835 ;; Defined at:
  7836 ;;		line 93 in file "UART.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;		None
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  str             1    4[BANK2 ] PTR unsigned char 
  7841 ;;		 -> line(20), 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 1D/2
  7848 ;;		On exit  : 1C/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;Total ram usage:        1 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; Hardware stack levels required when called: 15
  7858 ;; This function calls:
  7859 ;;		_atoi
  7860 ;;		_printf
  7861 ;;		_readLine
  7862 ;;		_setKi
  7863 ;;		_setKp
  7864 ;;		_setSetpoint
  7865 ;;		_str2float
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871     0B4E                     _uartHandler:	
  7872                           ;psect for function _uartHandler
  7873                           
  7874                           
  7875                           ;UART.c: 94:     char *str = readLine();
  7876                           
  7877                           ;incstack = 0
  7878                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7879     0B4E  3194  24BE  318B   	fcall	_readLine
  7880     0B51  0022               	movlb	2	; select bank2
  7881     0B52  00D2               	movwf	uartHandler@str^(0+256)
  7882                           
  7883                           ;UART.c: 95:     switch (*str) {
  7884     0B53  2BD0               	goto	l5917
  7885     0B54                     l5899:
  7886                           
  7887                           ;UART.c: 101:             setSetpoint((uint16_t) atoi(str + 1));
  7888     0B54  0852               	movf	uartHandler@str^(0+256),w
  7889     0B55  3E01               	addlw	1
  7890     0B56  0021               	movlb	1	; select bank1
  7891     0B57  00A6               	movwf	atoi@s^(0+128)
  7892     0B58  3197  2796  318B   	fcall	_atoi
  7893     0B5B  0827               	movf	(?_atoi+1)^(0+128),w
  7894     0B5C  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  7895     0B5D  0826               	movf	?_atoi^(0+128),w
  7896     0B5E  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  7897     0B5F  319F  2784  318B   	fcall	_setSetpoint
  7898                           
  7899                           ;UART.c: 102:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  7900     0B62  304C               	movlw	low (STR_9| (0+32768))
  7901     0B63  0021               	movlb	1	; select bank1
  7902     0B64  00E0               	movwf	printf@fmt^(0+128)
  7903     0B65  3098               	movlw	high (STR_9| (0+32768))
  7904     0B66  00E1               	movwf	(printf@fmt^(0+128)+1)
  7905     0B67  0022               	movlb	2	; select bank2
  7906     0B68  0852               	movf	uartHandler@str^(0+256),w
  7907     0B69  3E01               	addlw	1
  7908     0B6A  0021               	movlb	1	; select bank1
  7909     0B6B  00A6               	movwf	atoi@s^(0+128)
  7910     0B6C  3197  2796  318B   	fcall	_atoi
  7911     0B6F  0827               	movf	(?_atoi+1)^(0+128),w
  7912     0B70  00E3               	movwf	((?_printf+1)^(0+128)+2)
  7913     0B71  0826               	movf	?_atoi^(0+128),w
  7914     0B72  00E2               	movwf	(?_printf^(0+128)+2)
  7915     0B73  3190  2095         	fcall	_printf
  7916                           
  7917                           ;UART.c: 103:             break;
  7918     0B75  0008               	return
  7919     0B76                     l5903:
  7920                           
  7921                           ;UART.c: 107:             setKp(str2float(str + 1));
  7922     0B76  0852               	movf	uartHandler@str^(0+256),w
  7923     0B77  3E01               	addlw	1
  7924     0B78  0021               	movlb	1	; select bank1
  7925     0B79  00E4               	movwf	str2float@str^(0+128)
  7926     0B7A  318A  2219  318B   	fcall	_str2float
  7927     0B7D  0867               	movf	(?_str2float+3)^(0+128),w
  7928     0B7E  0022               	movlb	2	; select bank2
  7929     0B7F  00D1               	movwf	(setKp@new_kp+3)^(0+256)
  7930     0B80  0021               	movlb	1	; select bank1
  7931     0B81  0866               	movf	(?_str2float+2)^(0+128),w
  7932     0B82  0022               	movlb	2	; select bank2
  7933     0B83  00D0               	movwf	(setKp@new_kp+2)^(0+256)
  7934     0B84  0021               	movlb	1	; select bank1
  7935     0B85  0865               	movf	(?_str2float+1)^(0+128),w
  7936     0B86  0022               	movlb	2	; select bank2
  7937     0B87  00CF               	movwf	(setKp@new_kp+1)^(0+256)
  7938     0B88  0021               	movlb	1	; select bank1
  7939     0B89  0864               	movf	?_str2float^(0+128),w
  7940     0B8A  0022               	movlb	2	; select bank2
  7941     0B8B  00CE               	movwf	setKp@new_kp^(0+256)
  7942     0B8C  3190  2000  318B   	fcall	_setKp
  7943                           
  7944                           ;UART.c: 108:             printf("changed kp\r\n");
  7945     0B8F  30CA               	movlw	low (STR_10| (0+32768))
  7946     0B90  0021               	movlb	1	; select bank1
  7947     0B91  00E0               	movwf	printf@fmt^(0+128)
  7948     0B92  3098               	movlw	high (STR_10| (0+32768))
  7949     0B93  00E1               	movwf	(printf@fmt^(0+128)+1)
  7950     0B94  3190  2095         	fcall	_printf
  7951                           
  7952                           ;UART.c: 109:             break;
  7953     0B96  0008               	return
  7954     0B97                     l5907:
  7955                           
  7956                           ;UART.c: 112:             setKi(str2float(str + 1));
  7957     0B97  0852               	movf	uartHandler@str^(0+256),w
  7958     0B98  3E01               	addlw	1
  7959     0B99  0021               	movlb	1	; select bank1
  7960     0B9A  00E4               	movwf	str2float@str^(0+128)
  7961     0B9B  318A  2219  318B   	fcall	_str2float
  7962     0B9E  0867               	movf	(?_str2float+3)^(0+128),w
  7963     0B9F  0022               	movlb	2	; select bank2
  7964     0BA0  00D1               	movwf	(setKi@new_ki+3)^(0+256)
  7965     0BA1  0021               	movlb	1	; select bank1
  7966     0BA2  0866               	movf	(?_str2float+2)^(0+128),w
  7967     0BA3  0022               	movlb	2	; select bank2
  7968     0BA4  00D0               	movwf	(setKi@new_ki+2)^(0+256)
  7969     0BA5  0021               	movlb	1	; select bank1
  7970     0BA6  0865               	movf	(?_str2float+1)^(0+128),w
  7971     0BA7  0022               	movlb	2	; select bank2
  7972     0BA8  00CF               	movwf	(setKi@new_ki+1)^(0+256)
  7973     0BA9  0021               	movlb	1	; select bank1
  7974     0BAA  0864               	movf	?_str2float^(0+128),w
  7975     0BAB  0022               	movlb	2	; select bank2
  7976     0BAC  00CE               	movwf	setKi@new_ki^(0+256)
  7977     0BAD  319F  27C1  318B   	fcall	_setKi
  7978                           
  7979                           ;UART.c: 113:             printf("changed ki\r\n");
  7980     0BB0  30BD               	movlw	low (STR_11| (0+32768))
  7981     0BB1  0021               	movlb	1	; select bank1
  7982     0BB2  00E0               	movwf	printf@fmt^(0+128)
  7983     0BB3  3098               	movlw	high (STR_11| (0+32768))
  7984     0BB4  00E1               	movwf	(printf@fmt^(0+128)+1)
  7985     0BB5  3190  2095         	fcall	_printf
  7986                           
  7987                           ;UART.c: 114:             break;
  7988     0BB7  0008               	return
  7989     0BB8                     l5911:
  7990                           
  7991                           ;UART.c: 117:             mustPrintLogs = !mustPrintLogs;
  7992     0BB8  0020               	movlb	0	; select bank0
  7993     0BB9  086E               	movf	_mustPrintLogs,w
  7994     0BBA  1D03               	btfss	3,2
  7995     0BBB  2BBE               	goto	u7380
  7996     0BBC  3001               	movlw	1
  7997     0BBD  2BBF               	goto	u7390
  7998     0BBE                     u7380:
  7999     0BBE  3000               	movlw	0
  8000     0BBF                     u7390:
  8001     0BBF  00EE               	movwf	_mustPrintLogs
  8002                           
  8003                           ;UART.c: 118:             printf("logs toggled\r\n");
  8004     0BC0  309F               	movlw	low (STR_12| (0+32768))
  8005     0BC1  0021               	movlb	1	; select bank1
  8006     0BC2  00E0               	movwf	printf@fmt^(0+128)
  8007     0BC3  3098               	movlw	high (STR_12| (0+32768))
  8008     0BC4  00E1               	movwf	(printf@fmt^(0+128)+1)
  8009     0BC5  3190  2095         	fcall	_printf
  8010                           
  8011                           ;UART.c: 119:             break;
  8012     0BC7  0008               	return
  8013     0BC8                     l5915:
  8014                           
  8015                           ;UART.c: 123:             printf("Unkown command\r\n");
  8016     0BC8  307D               	movlw	low (STR_13| (0+32768))
  8017     0BC9  0021               	movlb	1	; select bank1
  8018     0BCA  00E0               	movwf	printf@fmt^(0+128)
  8019     0BCB  3098               	movlw	high (STR_13| (0+32768))
  8020     0BCC  00E1               	movwf	(printf@fmt^(0+128)+1)
  8021     0BCD  3190  2095         	fcall	_printf
  8022                           
  8023                           ;UART.c: 124:     };
  8024     0BCF  0008               	return
  8025     0BD0                     l5917:
  8026     0BD0  0852               	movf	uartHandler@str^(0+256),w
  8027     0BD1  0086               	movwf	6
  8028     0BD2  3001               	movlw	1	; select bank2/3
  8029     0BD3  0087               	movwf	7
  8030     0BD4  0801               	movf	1,w
  8031                           
  8032                           ; Switch size 1, requested type "simple"
  8033                           ; Number of cases is 9, Range of values is 0 to 115
  8034                           ; switch strategies available:
  8035                           ; Name         Instructions Cycles
  8036                           ; simple_byte           28    15 (average)
  8037                           ; direct_byte          238     6 (fixed)
  8038                           ; jumptable            260     6 (fixed)
  8039                           ;	Chosen strategy is simple_byte
  8040     0BD5  3A00               	xorlw	0	; case 0
  8041     0BD6  1903               	skipnz
  8042     0BD7  2BF1               	goto	l920
  8043     0BD8  3A49               	xorlw	73	; case 73
  8044     0BD9  1903               	skipnz
  8045     0BDA  2B97               	goto	l5907
  8046     0BDB  3A05               	xorlw	5	; case 76
  8047     0BDC  1903               	skipnz
  8048     0BDD  2BB8               	goto	l5911
  8049     0BDE  3A1C               	xorlw	28	; case 80
  8050     0BDF  1903               	skipnz
  8051     0BE0  2B76               	goto	l5903
  8052     0BE1  3A03               	xorlw	3	; case 83
  8053     0BE2  1903               	skipnz
  8054     0BE3  2B54               	goto	l5899
  8055     0BE4  3A3A               	xorlw	58	; case 105
  8056     0BE5  1903               	skipnz
  8057     0BE6  2B97               	goto	l5907
  8058     0BE7  3A05               	xorlw	5	; case 108
  8059     0BE8  1903               	skipnz
  8060     0BE9  2BB8               	goto	l5911
  8061     0BEA  3A1C               	xorlw	28	; case 112
  8062     0BEB  1903               	skipnz
  8063     0BEC  2B76               	goto	l5903
  8064     0BED  3A03               	xorlw	3	; case 115
  8065     0BEE  1903               	skipnz
  8066     0BEF  2B54               	goto	l5899
  8067     0BF0  2BC8               	goto	l5915
  8068     0BF1                     l920:
  8069     0BF1  0008               	return
  8070     0BF2                     __end_of_uartHandler:
  8071                           
  8072                           	psect	text2
  8073     0A19                     __ptext2:	
  8074 ;; *************** function _str2float *****************
  8075 ;; Defined at:
  8076 ;;		line 25 in file "UART.c"
  8077 ;; Parameters:    Size  Location     Type
  8078 ;;  str             1   68[BANK1 ] PTR unsigned char 
  8079 ;;		 -> line(20), 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  i               1   74[BANK1 ] unsigned char 
  8082 ;;  digit           1   79[BANK1 ] unsigned char 
  8083 ;;  number          4   75[BANK1 ] float 
  8084 ;;  multiplier      1   73[BANK1 ] unsigned char 
  8085 ;;  decimal_sepa    1   72[BANK1 ] _Bool 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  4   68[BANK1 ] float 
  8088 ;; Registers used:
  8089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 1F/1
  8092 ;;		On exit  : 1F/1
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8095 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;Total ram usage:       12 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 7
  8102 ;; This function calls:
  8103 ;;		___fladd
  8104 ;;		___fldiv
  8105 ;;		___flmul
  8106 ;;		___xxtofl
  8107 ;; This function is called by:
  8108 ;;		_uartHandler
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112     0A19                     _str2float:	
  8113                           ;psect for function _str2float
  8114                           
  8115                           
  8116                           ;UART.c: 26:     float number = 0;
  8117                           
  8118                           ;incstack = 0
  8119                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8120     0A19  3000               	movlw	0
  8121     0A1A  00EE               	movwf	(str2float@number+3)^(0+128)
  8122     0A1B  3000               	movlw	0
  8123     0A1C  00ED               	movwf	(str2float@number+2)^(0+128)
  8124     0A1D  3000               	movlw	0
  8125     0A1E  00EC               	movwf	(str2float@number+1)^(0+128)
  8126     0A1F  3000               	movlw	0
  8127     0A20  00EB               	movwf	str2float@number^(0+128)
  8128                           
  8129                           ;UART.c: 27:     _Bool decimal_separator = 0;
  8130     0A21  01E8               	clrf	str2float@decimal_separator^(0+128)
  8131     0A22  2A6C               	goto	l5649
  8132     0A23                     l5655:
  8133     0A23  303A               	movlw	58
  8134     0A24  026F               	subwf	str2float@digit^(0+128),w
  8135     0A25  1803               	skipnc
  8136     0A26  2A78               	goto	l5661
  8137                           
  8138                           ;UART.c: 32:             number *= 10;
  8139     0A27  3041               	movlw	65
  8140     0A28  00CD               	movwf	(___flmul@b+3)^(0+128)
  8141     0A29  3020               	movlw	32
  8142     0A2A  00CC               	movwf	(___flmul@b+2)^(0+128)
  8143     0A2B  3000               	movlw	0
  8144     0A2C  00CB               	movwf	(___flmul@b+1)^(0+128)
  8145     0A2D  3000               	movlw	0
  8146     0A2E  00CA               	movwf	___flmul@b^(0+128)
  8147     0A2F  086E               	movf	(str2float@number+3)^(0+128),w
  8148     0A30  00D1               	movwf	(___flmul@a+3)^(0+128)
  8149     0A31  086D               	movf	(str2float@number+2)^(0+128),w
  8150     0A32  00D0               	movwf	(___flmul@a+2)^(0+128)
  8151     0A33  086C               	movf	(str2float@number+1)^(0+128),w
  8152     0A34  00CF               	movwf	(___flmul@a+1)^(0+128)
  8153     0A35  086B               	movf	str2float@number^(0+128),w
  8154     0A36  00CE               	movwf	___flmul@a^(0+128)
  8155     0A37  3180  2075  318A   	fcall	___flmul
  8156     0A3A  084D               	movf	(?___flmul+3)^(0+128),w
  8157     0A3B  00EE               	movwf	(str2float@number+3)^(0+128)
  8158     0A3C  084C               	movf	(?___flmul+2)^(0+128),w
  8159     0A3D  00ED               	movwf	(str2float@number+2)^(0+128)
  8160     0A3E  084B               	movf	(?___flmul+1)^(0+128),w
  8161     0A3F  00EC               	movwf	(str2float@number+1)^(0+128)
  8162     0A40  084A               	movf	?___flmul^(0+128),w
  8163     0A41  00EB               	movwf	str2float@number^(0+128)
  8164                           
  8165                           ;UART.c: 33:             number += digit - '0';
  8166     0A42  086F               	movf	str2float@digit^(0+128),w
  8167     0A43  3ED0               	addlw	208
  8168     0A44  00A0               	movwf	___xxtofl@val^(0+128)
  8169     0A45  30FF               	movlw	255
  8170     0A46  1803               	skipnc
  8171     0A47  3000               	movlw	0
  8172     0A48  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8173     0A49  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8174     0A4A  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8175     0A4B  3000               	movlw	0
  8176     0A4C  3189  218C  318A   	fcall	___xxtofl
  8177     0A4F  0823               	movf	(?___xxtofl+3)^(0+128),w
  8178     0A50  00B1               	movwf	(___fladd@b+3)^(0+128)
  8179     0A51  0822               	movf	(?___xxtofl+2)^(0+128),w
  8180     0A52  00B0               	movwf	(___fladd@b+2)^(0+128)
  8181     0A53  0821               	movf	(?___xxtofl+1)^(0+128),w
  8182     0A54  00AF               	movwf	(___fladd@b+1)^(0+128)
  8183     0A55  0820               	movf	?___xxtofl^(0+128),w
  8184     0A56  00AE               	movwf	___fladd@b^(0+128)
  8185     0A57  086E               	movf	(str2float@number+3)^(0+128),w
  8186     0A58  00B5               	movwf	(___fladd@a+3)^(0+128)
  8187     0A59  086D               	movf	(str2float@number+2)^(0+128),w
  8188     0A5A  00B4               	movwf	(___fladd@a+2)^(0+128)
  8189     0A5B  086C               	movf	(str2float@number+1)^(0+128),w
  8190     0A5C  00B3               	movwf	(___fladd@a+1)^(0+128)
  8191     0A5D  086B               	movf	str2float@number^(0+128),w
  8192     0A5E  00B2               	movwf	___fladd@a^(0+128)
  8193     0A5F  3184  246D  318A   	fcall	___fladd
  8194     0A62  0831               	movf	(?___fladd+3)^(0+128),w
  8195     0A63  00EE               	movwf	(str2float@number+3)^(0+128)
  8196     0A64  0830               	movf	(?___fladd+2)^(0+128),w
  8197     0A65  00ED               	movwf	(str2float@number+2)^(0+128)
  8198     0A66  082F               	movf	(?___fladd+1)^(0+128),w
  8199     0A67  00EC               	movwf	(str2float@number+1)^(0+128)
  8200     0A68  082E               	movf	?___fladd^(0+128),w
  8201     0A69  00EB               	movwf	str2float@number^(0+128)
  8202                           
  8203                           ;UART.c: 34:             multiplier++;
  8204     0A6A  3001               	movlw	1
  8205     0A6B  07E9               	addwf	str2float@multiplier^(0+128),f
  8206     0A6C                     l5649:	
  8207                           ;UART.c: 35:         } else if (digit == ',' || digit == '.') {
  8208                           
  8209                           
  8210                           ;UART.c: 30:         char digit = *str++;
  8211     0A6C  0864               	movf	str2float@str^(0+128),w
  8212     0A6D  0086               	movwf	6
  8213     0A6E  3001               	movlw	1	; select bank2/3
  8214     0A6F  0087               	movwf	7
  8215     0A70  0801               	movf	1,w
  8216     0A71  00EF               	movwf	str2float@digit^(0+128)
  8217     0A72  3001               	movlw	1
  8218     0A73  07E4               	addwf	str2float@str^(0+128),f
  8219                           
  8220                           ;UART.c: 31:         if ('0' <= digit && digit <= '9') {
  8221     0A74  3030               	movlw	48
  8222     0A75  026F               	subwf	str2float@digit^(0+128),w
  8223     0A76  1803               	btfsc	3,0
  8224     0A77  2A23               	goto	l5655
  8225     0A78                     l5661:
  8226     0A78  302C               	movlw	44
  8227     0A79  066F               	xorwf	str2float@digit^(0+128),w
  8228     0A7A  1903               	btfsc	3,2
  8229     0A7B  2A80               	goto	l878
  8230     0A7C  302E               	movlw	46
  8231     0A7D  066F               	xorwf	str2float@digit^(0+128),w
  8232     0A7E  1D03               	btfss	3,2
  8233     0A7F  2A84               	goto	l5667
  8234     0A80                     l878:
  8235                           
  8236                           ;UART.c: 36:             decimal_separator = 1;
  8237     0A80  3001               	movlw	1
  8238     0A81  00E8               	movwf	str2float@decimal_separator^(0+128)
  8239                           
  8240                           ;UART.c: 37:             multiplier = 0;
  8241     0A82  01E9               	clrf	str2float@multiplier^(0+128)
  8242                           
  8243                           ;UART.c: 38:         } else {
  8244     0A83  2A6C               	goto	l5649
  8245     0A84                     l5667:
  8246                           
  8247                           ;UART.c: 43:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8248     0A84  01EA               	clrf	str2float@i^(0+128)
  8249     0A85  2AA7               	goto	l5673
  8250     0A86                     l5675:
  8251     0A86  0869               	movf	str2float@multiplier^(0+128),w
  8252     0A87  026A               	subwf	str2float@i^(0+128),w
  8253     0A88  1803               	btfsc	3,0
  8254     0A89  2AAA               	goto	l5677
  8255                           
  8256                           ;UART.c: 44:         number /= 10;
  8257     0A8A  3041               	movlw	65
  8258     0A8B  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8259     0A8C  3020               	movlw	32
  8260     0A8D  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8261     0A8E  3000               	movlw	0
  8262     0A8F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8263     0A90  3000               	movlw	0
  8264     0A91  00A0               	movwf	___fldiv@a^(0+128)
  8265     0A92  086E               	movf	(str2float@number+3)^(0+128),w
  8266     0A93  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8267     0A94  086D               	movf	(str2float@number+2)^(0+128),w
  8268     0A95  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8269     0A96  086C               	movf	(str2float@number+1)^(0+128),w
  8270     0A97  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8271     0A98  086B               	movf	str2float@number^(0+128),w
  8272     0A99  00A4               	movwf	___fldiv@b^(0+128)
  8273     0A9A  318E  2695  318A   	fcall	___fldiv
  8274     0A9D  0823               	movf	(?___fldiv+3)^(0+128),w
  8275     0A9E  00EE               	movwf	(str2float@number+3)^(0+128)
  8276     0A9F  0822               	movf	(?___fldiv+2)^(0+128),w
  8277     0AA0  00ED               	movwf	(str2float@number+2)^(0+128)
  8278     0AA1  0821               	movf	(?___fldiv+1)^(0+128),w
  8279     0AA2  00EC               	movwf	(str2float@number+1)^(0+128)
  8280     0AA3  0820               	movf	?___fldiv^(0+128),w
  8281     0AA4  00EB               	movwf	str2float@number^(0+128)
  8282                           
  8283                           ;UART.c: 45:     }
  8284     0AA5  3001               	movlw	1
  8285     0AA6  07EA               	addwf	str2float@i^(0+128),f
  8286     0AA7                     l5673:
  8287     0AA7  0868               	movf	str2float@decimal_separator^(0+128),w
  8288     0AA8  1D03               	btfss	3,2
  8289     0AA9  2A86               	goto	l5675
  8290     0AAA                     l5677:
  8291                           
  8292                           ;UART.c: 46:     return number;
  8293     0AAA  086E               	movf	(str2float@number+3)^(0+128),w
  8294     0AAB  00E7               	movwf	(?_str2float+3)^(0+128)
  8295     0AAC  086D               	movf	(str2float@number+2)^(0+128),w
  8296     0AAD  00E6               	movwf	(?_str2float+2)^(0+128)
  8297     0AAE  086C               	movf	(str2float@number+1)^(0+128),w
  8298     0AAF  00E5               	movwf	(?_str2float+1)^(0+128)
  8299     0AB0  086B               	movf	str2float@number^(0+128),w
  8300     0AB1  00E4               	movwf	?_str2float^(0+128)
  8301     0AB2  0008               	return
  8302     0AB3                     __end_of_str2float:
  8303                           
  8304                           	psect	text3
  8305     0E95                     __ptext3:	
  8306 ;; *************** function ___fldiv *****************
  8307 ;; Defined at:
  8308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  a               4    0[BANK1 ] float 
  8311 ;;  b               4    4[BANK1 ] float 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  grs             4   20[BANK1 ] unsigned long 
  8314 ;;  rem             4   13[BANK1 ] unsigned long 
  8315 ;;  new_exp         2   18[BANK1 ] short 
  8316 ;;  aexp            1   25[BANK1 ] unsigned char 
  8317 ;;  bexp            1   24[BANK1 ] unsigned char 
  8318 ;;  sign            1   17[BANK1 ] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  4    0[BANK1 ] unsigned char 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0
  8323 ;; Tracked objects:
  8324 ;;		On entry : 1F/1
  8325 ;;		On exit  : 1F/1
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8328 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;Total ram usage:       26 bytes
  8333 ;; Hardware stack levels used: 1
  8334 ;; Hardware stack levels required when called: 5
  8335 ;; This function calls:
  8336 ;;		Nothing
  8337 ;; This function is called by:
  8338 ;;		_str2float
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342     0E95                     ___fldiv:	
  8343                           ;psect for function ___fldiv
  8344                           
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8348     0E95  0827               	movf	(___fldiv@b^(0+128)+3),w
  8349     0E96  3980               	andlw	128
  8350     0E97  00B1               	movwf	___fldiv@sign^(0+128)
  8351     0E98  3527               	lslf	(___fldiv@b^(0+128)+3),w
  8352     0E99  00B8               	movwf	___fldiv@bexp^(0+128)
  8353     0E9A  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  8354     0E9B  1438               	bsf	___fldiv@bexp^(0+128),0
  8355     0E9C  0838               	movf	___fldiv@bexp^(0+128),w
  8356     0E9D  1903               	btfsc	3,2
  8357     0E9E  2EAD               	goto	l4923
  8358     0E9F  0A38               	incf	___fldiv@bexp^(0+128),w
  8359     0EA0  1D03               	btfss	3,2
  8360     0EA1  2EAA               	goto	l4919
  8361     0EA2  3000               	movlw	0
  8362     0EA3  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8363     0EA4  3000               	movlw	0
  8364     0EA5  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8365     0EA6  3000               	movlw	0
  8366     0EA7  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8367     0EA8  3000               	movlw	0
  8368     0EA9  00A4               	movwf	___fldiv@b^(0+128)
  8369     0EAA                     l4919:
  8370     0EAA  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8371     0EAB  01A7               	clrf	(___fldiv@b^(0+128)+3)
  8372     0EAC  2EB5               	goto	l4925
  8373     0EAD                     l4923:
  8374     0EAD  3000               	movlw	0
  8375     0EAE  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8376     0EAF  3000               	movlw	0
  8377     0EB0  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8378     0EB1  3000               	movlw	0
  8379     0EB2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8380     0EB3  3000               	movlw	0
  8381     0EB4  00A4               	movwf	___fldiv@b^(0+128)
  8382     0EB5                     l4925:
  8383     0EB5  0823               	movf	(___fldiv@a^(0+128)+3),w
  8384     0EB6  3980               	andlw	128
  8385     0EB7  06B1               	xorwf	___fldiv@sign^(0+128),f
  8386     0EB8  3523               	lslf	(___fldiv@a^(0+128)+3),w
  8387     0EB9  00B9               	movwf	___fldiv@aexp^(0+128)
  8388     0EBA  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  8389     0EBB  1439               	bsf	___fldiv@aexp^(0+128),0
  8390     0EBC  0839               	movf	___fldiv@aexp^(0+128),w
  8391     0EBD  1903               	btfsc	3,2
  8392     0EBE  2ECD               	goto	l4943
  8393     0EBF  0A39               	incf	___fldiv@aexp^(0+128),w
  8394     0EC0  1D03               	btfss	3,2
  8395     0EC1  2ECA               	goto	l4939
  8396     0EC2  3000               	movlw	0
  8397     0EC3  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8398     0EC4  3000               	movlw	0
  8399     0EC5  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8400     0EC6  3000               	movlw	0
  8401     0EC7  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8402     0EC8  3000               	movlw	0
  8403     0EC9  00A0               	movwf	___fldiv@a^(0+128)
  8404     0ECA                     l4939:
  8405     0ECA  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  8406     0ECB  01A3               	clrf	(___fldiv@a^(0+128)+3)
  8407     0ECC  2ED5               	goto	l1538
  8408     0ECD                     l4943:
  8409     0ECD  3000               	movlw	0
  8410     0ECE  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8411     0ECF  3000               	movlw	0
  8412     0ED0  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8413     0ED1  3000               	movlw	0
  8414     0ED2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8415     0ED3  3000               	movlw	0
  8416     0ED4  00A0               	movwf	___fldiv@a^(0+128)
  8417     0ED5                     l1538:
  8418     0ED5  0823               	movf	(___fldiv@a+3)^(0+128),w
  8419     0ED6  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  8420     0ED7  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  8421     0ED8  0420               	iorwf	___fldiv@a^(0+128),w
  8422     0ED9  1D03               	skipz
  8423     0EDA  2EF2               	goto	l4953
  8424     0EDB  3000               	movlw	0
  8425     0EDC  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8426     0EDD  3000               	movlw	0
  8427     0EDE  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8428     0EDF  3000               	movlw	0
  8429     0EE0  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8430     0EE1  3000               	movlw	0
  8431     0EE2  00A4               	movwf	___fldiv@b^(0+128)
  8432     0EE3  3080               	movlw	128
  8433     0EE4  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  8434     0EE5  307F               	movlw	127
  8435     0EE6  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  8436     0EE7                     L1:
  8437     0EE7  0831               	movf	___fldiv@sign^(0+128),w
  8438     0EE8  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8439     0EE9  0827               	movf	(___fldiv@b+3)^(0+128),w
  8440     0EEA  00A3               	movwf	(?___fldiv+3)^(0+128)
  8441     0EEB  0826               	movf	(___fldiv@b+2)^(0+128),w
  8442     0EEC  00A2               	movwf	(?___fldiv+2)^(0+128)
  8443     0EED  0825               	movf	(___fldiv@b+1)^(0+128),w
  8444     0EEE  00A1               	movwf	(?___fldiv+1)^(0+128)
  8445     0EEF  0824               	movf	___fldiv@b^(0+128),w
  8446     0EF0  00A0               	movwf	?___fldiv^(0+128)
  8447     0EF1  0008               	return
  8448     0EF2                     l4953:
  8449     0EF2  0838               	movf	___fldiv@bexp^(0+128),w
  8450     0EF3  1D03               	btfss	3,2
  8451     0EF4  2EFE               	goto	l4959
  8452     0EF5  3000               	movlw	0
  8453     0EF6  00A3               	movwf	(?___fldiv+3)^(0+128)
  8454     0EF7  3000               	movlw	0
  8455     0EF8  00A2               	movwf	(?___fldiv+2)^(0+128)
  8456     0EF9  3000               	movlw	0
  8457     0EFA  00A1               	movwf	(?___fldiv+1)^(0+128)
  8458     0EFB  3000               	movlw	0
  8459     0EFC  00A0               	movwf	?___fldiv^(0+128)
  8460     0EFD  0008               	return
  8461     0EFE                     l4959:
  8462     0EFE  0838               	movf	___fldiv@bexp^(0+128),w
  8463     0EFF  00A8               	movwf	??___fldiv^(0+128)
  8464     0F00  01A9               	clrf	(??___fldiv^(0+128)+1)
  8465     0F01  0829               	movf	(??___fldiv+1)^(0+128),w
  8466     0F02  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  8467     0F03  0839               	movf	___fldiv@aexp^(0+128),w
  8468     0F04  0228               	subwf	??___fldiv^(0+128),w
  8469     0F05  00AA               	movwf	(??___fldiv+2)^(0+128)
  8470     0F06  1C03               	skipc
  8471     0F07  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  8472     0F08  082A               	movf	(??___fldiv+2)^(0+128),w
  8473     0F09  3E7F               	addlw	127
  8474     0F0A  00B2               	movwf	___fldiv@new_exp^(0+128)
  8475     0F0B  3000               	movlw	0
  8476     0F0C  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
  8477     0F0D  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  8478     0F0E  0827               	movf	(___fldiv@b+3)^(0+128),w
  8479     0F0F  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  8480     0F10  0826               	movf	(___fldiv@b+2)^(0+128),w
  8481     0F11  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  8482     0F12  0825               	movf	(___fldiv@b+1)^(0+128),w
  8483     0F13  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  8484     0F14  0824               	movf	___fldiv@b^(0+128),w
  8485     0F15  00AD               	movwf	___fldiv@rem^(0+128)
  8486     0F16  3000               	movlw	0
  8487     0F17  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8488     0F18  3000               	movlw	0
  8489     0F19  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8490     0F1A  3000               	movlw	0
  8491     0F1B  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8492     0F1C  3000               	movlw	0
  8493     0F1D  00A4               	movwf	___fldiv@b^(0+128)
  8494     0F1E  3000               	movlw	0
  8495     0F1F  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  8496     0F20  3000               	movlw	0
  8497     0F21  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  8498     0F22  3000               	movlw	0
  8499     0F23  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  8500     0F24  3000               	movlw	0
  8501     0F25  00B4               	movwf	___fldiv@grs^(0+128)
  8502     0F26  01B9               	clrf	___fldiv@aexp^(0+128)
  8503     0F27                     l4987:
  8504     0F27  301A               	movlw	26
  8505     0F28  0239               	subwf	___fldiv@aexp^(0+128),w
  8506     0F29  1803               	btfsc	3,0
  8507     0F2A  2F61               	goto	l4989
  8508     0F2B  0839               	movf	___fldiv@aexp^(0+128),w
  8509     0F2C  1903               	btfsc	3,2
  8510     0F2D  2F45               	goto	l4979
  8511     0F2E  3001               	movlw	1
  8512     0F2F                     u5895:
  8513     0F2F  35AD               	lslf	___fldiv@rem^(0+128),f
  8514     0F30  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  8515     0F31  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  8516     0F32  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  8517     0F33  0B89               	decfsz	9,f
  8518     0F34  2F2F               	goto	u5895
  8519     0F35  3001               	movlw	1
  8520     0F36                     u5905:
  8521     0F36  35A4               	lslf	___fldiv@b^(0+128),f
  8522     0F37  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8523     0F38  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8524     0F39  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8525     0F3A  0B89               	decfsz	9,f
  8526     0F3B  2F36               	goto	u5905
  8527     0F3C  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  8528     0F3D  1424               	bsf	___fldiv@b^(0+128),0
  8529     0F3E  3001               	movlw	1
  8530     0F3F                     u5925:
  8531     0F3F  35B4               	lslf	___fldiv@grs^(0+128),f
  8532     0F40  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8533     0F41  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8534     0F42  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8535     0F43  0B89               	decfsz	9,f
  8536     0F44  2F3F               	goto	u5925
  8537     0F45                     l4979:
  8538     0F45  0823               	movf	(___fldiv@a+3)^(0+128),w
  8539     0F46  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  8540     0F47  1D03               	skipz
  8541     0F48  2F53               	goto	u5935
  8542     0F49  0822               	movf	(___fldiv@a+2)^(0+128),w
  8543     0F4A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  8544     0F4B  1D03               	skipz
  8545     0F4C  2F53               	goto	u5935
  8546     0F4D  0821               	movf	(___fldiv@a+1)^(0+128),w
  8547     0F4E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  8548     0F4F  1D03               	skipz
  8549     0F50  2F53               	goto	u5935
  8550     0F51  0820               	movf	___fldiv@a^(0+128),w
  8551     0F52  022D               	subwf	___fldiv@rem^(0+128),w
  8552     0F53                     u5935:
  8553     0F53  1C03               	skipc
  8554     0F54  2F5E               	goto	l4985
  8555     0F55  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  8556     0F56  0820               	movf	___fldiv@a^(0+128),w
  8557     0F57  02AD               	subwf	___fldiv@rem^(0+128),f
  8558     0F58  0821               	movf	(___fldiv@a+1)^(0+128),w
  8559     0F59  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
  8560     0F5A  0822               	movf	(___fldiv@a+2)^(0+128),w
  8561     0F5B  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
  8562     0F5C  0823               	movf	(___fldiv@a+3)^(0+128),w
  8563     0F5D  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
  8564     0F5E                     l4985:
  8565     0F5E  3001               	movlw	1
  8566     0F5F  07B9               	addwf	___fldiv@aexp^(0+128),f
  8567     0F60  2F27               	goto	l4987
  8568     0F61                     l4989:
  8569     0F61  0830               	movf	(___fldiv@rem+3)^(0+128),w
  8570     0F62  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  8571     0F63  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  8572     0F64  042D               	iorwf	___fldiv@rem^(0+128),w
  8573     0F65  1D03               	btfss	3,2
  8574     0F66  1434               	bsf	___fldiv@grs^(0+128),0
  8575     0F67                     l5003:
  8576     0F67  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  8577     0F68  2F7E               	goto	l5005
  8578     0F69  3001               	movlw	1
  8579     0F6A                     u5965:
  8580     0F6A  35A4               	lslf	___fldiv@b^(0+128),f
  8581     0F6B  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8582     0F6C  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8583     0F6D  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8584     0F6E  0B89               	decfsz	9,f
  8585     0F6F  2F6A               	goto	u5965
  8586     0F70  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  8587     0F71  1424               	bsf	___fldiv@b^(0+128),0
  8588     0F72  3001               	movlw	1
  8589     0F73                     u5985:
  8590     0F73  35B4               	lslf	___fldiv@grs^(0+128),f
  8591     0F74  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8592     0F75  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8593     0F76  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8594     0F77  0B89               	decfsz	9,f
  8595     0F78  2F73               	goto	u5985
  8596     0F79  30FF               	movlw	255
  8597     0F7A  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8598     0F7B  30FF               	movlw	255
  8599     0F7C  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8600     0F7D  2F67               	goto	l5003
  8601     0F7E                     l5005:
  8602     0F7E  01B9               	clrf	___fldiv@aexp^(0+128)
  8603     0F7F  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8604     0F80  2F97               	goto	l5015
  8605     0F81  30FF               	movlw	255
  8606     0F82  0534               	andwf	___fldiv@grs^(0+128),w
  8607     0F83  00A8               	movwf	??___fldiv^(0+128)
  8608     0F84  30FF               	movlw	255
  8609     0F85  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  8610     0F86  00A9               	movwf	(??___fldiv^(0+128)+1)
  8611     0F87  30FF               	movlw	255
  8612     0F88  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  8613     0F89  00AA               	movwf	(??___fldiv^(0+128)+2)
  8614     0F8A  307F               	movlw	127
  8615     0F8B  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  8616     0F8C  00AB               	movwf	(??___fldiv^(0+128)+3)
  8617     0F8D  082B               	movf	(??___fldiv+3)^(0+128),w
  8618     0F8E  042A               	iorwf	(??___fldiv+2)^(0+128),w
  8619     0F8F  0429               	iorwf	(??___fldiv+1)^(0+128),w
  8620     0F90  0428               	iorwf	??___fldiv^(0+128),w
  8621     0F91  1903               	skipnz
  8622     0F92  1824               	btfsc	___fldiv@b^(0+128),0
  8623     0F93  2F95               	goto	l5011
  8624     0F94  2F97               	goto	l5015
  8625     0F95                     l5011:
  8626     0F95  3001               	movlw	1
  8627     0F96  00B9               	movwf	___fldiv@aexp^(0+128)
  8628     0F97                     l5015:
  8629     0F97  0839               	movf	___fldiv@aexp^(0+128),w
  8630     0F98  1903               	btfsc	3,2
  8631     0F99  2FBE               	goto	l5025
  8632     0F9A  3001               	movlw	1
  8633     0F9B  07A4               	addwf	___fldiv@b^(0+128),f
  8634     0F9C  3000               	movlw	0
  8635     0F9D  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
  8636     0F9E  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
  8637     0F9F  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
  8638     0FA0  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  8639     0FA1  2FBE               	goto	l5025
  8640     0FA2  0824               	movf	___fldiv@b^(0+128),w
  8641     0FA3  00A8               	movwf	??___fldiv^(0+128)
  8642     0FA4  0825               	movf	(___fldiv@b+1)^(0+128),w
  8643     0FA5  00A9               	movwf	(??___fldiv^(0+128)+1)
  8644     0FA6  0826               	movf	(___fldiv@b+2)^(0+128),w
  8645     0FA7  00AA               	movwf	(??___fldiv^(0+128)+2)
  8646     0FA8  0827               	movf	(___fldiv@b+3)^(0+128),w
  8647     0FA9  00AB               	movwf	(??___fldiv^(0+128)+3)
  8648     0FAA  3001               	movlw	1
  8649     0FAB  00AC               	movwf	(??___fldiv+4)^(0+128)
  8650     0FAC                     u6055:
  8651     0FAC  37AB               	asrf	(??___fldiv^(0+128)+3),f
  8652     0FAD  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  8653     0FAE  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  8654     0FAF  0CA8               	rrf	??___fldiv^(0+128),f
  8655     0FB0  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  8656     0FB1  2FAC               	goto	u6055
  8657     0FB2  082B               	movf	(??___fldiv+3)^(0+128),w
  8658     0FB3  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8659     0FB4  082A               	movf	(??___fldiv+2)^(0+128),w
  8660     0FB5  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8661     0FB6  0829               	movf	(??___fldiv+1)^(0+128),w
  8662     0FB7  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8663     0FB8  0828               	movf	??___fldiv^(0+128),w
  8664     0FB9  00A4               	movwf	___fldiv@b^(0+128)
  8665     0FBA  3001               	movlw	1
  8666     0FBB  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8667     0FBC  3000               	movlw	0
  8668     0FBD  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8669     0FBE                     l5025:
  8670     0FBE  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8671     0FBF  3A80               	xorlw	128
  8672     0FC0  00A8               	movwf	??___fldiv^(0+128)
  8673     0FC1  3080               	movlw	128
  8674     0FC2  0228               	subwf	??___fldiv^(0+128),w
  8675     0FC3  1D03               	skipz
  8676     0FC4  2FC7               	goto	u6065
  8677     0FC5  30FF               	movlw	255
  8678     0FC6  0232               	subwf	___fldiv@new_exp^(0+128),w
  8679     0FC7                     u6065:
  8680     0FC7  1C03               	skipc
  8681     0FC8  2FD6               	goto	l1559
  8682     0FC9  30FF               	movlw	255
  8683     0FCA  0021               	movlb	1	; select bank1
  8684     0FCB  00B2               	movwf	___fldiv@new_exp^(0+128)
  8685     0FCC  3000               	movlw	0
  8686     0FCD  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  8687     0FCE  3000               	movlw	0
  8688     0FCF  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8689     0FD0  3000               	movlw	0
  8690     0FD1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8691     0FD2  3000               	movlw	0
  8692     0FD3  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8693     0FD4  3000               	movlw	0
  8694     0FD5  00A4               	movwf	___fldiv@b^(0+128)
  8695     0FD6                     l1559:
  8696     0FD6  0021               	movlb	1	; select bank1
  8697     0FD7  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8698     0FD8  3A80               	xorlw	128
  8699     0FD9  00A8               	movwf	??___fldiv^(0+128)
  8700     0FDA  3080               	movlw	128
  8701     0FDB  0228               	subwf	??___fldiv^(0+128),w
  8702     0FDC  1D03               	skipz
  8703     0FDD  2FE0               	goto	u6075
  8704     0FDE  3001               	movlw	1
  8705     0FDF  0232               	subwf	___fldiv@new_exp^(0+128),w
  8706     0FE0                     u6075:
  8707     0FE0  1803               	skipnc
  8708     0FE1  2FEE               	goto	l1560
  8709     0FE2  0021               	movlb	1	; select bank1
  8710     0FE3  01B2               	clrf	___fldiv@new_exp^(0+128)
  8711     0FE4  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  8712     0FE5  3000               	movlw	0
  8713     0FE6  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8714     0FE7  3000               	movlw	0
  8715     0FE8  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8716     0FE9  3000               	movlw	0
  8717     0FEA  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8718     0FEB  3000               	movlw	0
  8719     0FEC  00A4               	movwf	___fldiv@b^(0+128)
  8720     0FED  01B1               	clrf	___fldiv@sign^(0+128)
  8721     0FEE                     l1560:
  8722     0FEE  0021               	movlb	1	; select bank1
  8723     0FEF  0832               	movf	___fldiv@new_exp^(0+128),w
  8724     0FF0  00B8               	movwf	___fldiv@bexp^(0+128)
  8725     0FF1  1C38               	btfss	___fldiv@bexp^(0+128),0
  8726     0FF2  2FF5               	goto	l5039
  8727     0FF3  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8728     0FF4  2FF7               	goto	l1562
  8729     0FF5                     l5039:
  8730     0FF5  307F               	movlw	127
  8731     0FF6  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  8732     0FF7                     l1562:
  8733     0FF7  0838               	movf	___fldiv@bexp^(0+128),w
  8734     0FF8  00A8               	movwf	??___fldiv^(0+128)
  8735     0FF9  3001               	movlw	1
  8736     0FFA                     u6095:
  8737     0FFA  36A8               	lsrf	??___fldiv^(0+128),f
  8738     0FFB  0B89               	decfsz	9,f
  8739     0FFC  2FFA               	goto	u6095
  8740     0FFD  0828               	movf	??___fldiv^(0+128),w
  8741     0FFE  00A7               	movwf	(___fldiv@b^(0+128)+3)
  8742     0FFF  2EE7               	goto	L1
  8743     1000                     __end_of___fldiv:
  8744                           
  8745                           	psect	text4
  8746     1F84                     __ptext4:	
  8747 ;; *************** function _setSetpoint *****************
  8748 ;; Defined at:
  8749 ;;		line 45 in file "controller.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  1    wreg      void 
  8756 ;; Registers used:
  8757 ;;		wreg
  8758 ;; Tracked objects:
  8759 ;;		On entry : 1F/1
  8760 ;;		On exit  : 1F/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8763 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;Total ram usage:        2 bytes
  8768 ;; Hardware stack levels used: 1
  8769 ;; Hardware stack levels required when called: 5
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_uartHandler
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777     1F84                     _setSetpoint:	
  8778                           ;psect for function _setSetpoint
  8779                           
  8780                           
  8781                           ;incstack = 0
  8782                           ; Regs used in _setSetpoint: [wreg]
  8783     1F84  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
  8784     1F85  0020               	movlb	0	; select bank0
  8785     1F86  00ED               	movwf	_setpoint+1
  8786     1F87  0021               	movlb	1	; select bank1
  8787     1F88  082D               	movf	setSetpoint@new_setpoint^(0+128),w
  8788     1F89  0020               	movlb	0	; select bank0
  8789     1F8A  00EC               	movwf	_setpoint
  8790     1F8B  0008               	return
  8791     1F8C                     __end_of_setSetpoint:
  8792                           
  8793                           	psect	text5
  8794     1000                     __ptext5:	
  8795 ;; *************** function _setKp *****************
  8796 ;; Defined at:
  8797 ;;		line 47 in file "controller.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  new_kp          4    0[BANK2 ] float 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg
  8806 ;; Tracked objects:
  8807 ;;		On entry : 1F/2
  8808 ;;		On exit  : 1F/2
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8811 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;Total ram usage:        4 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; Hardware stack levels required when called: 5
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_uartHandler
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825     1000                     _setKp:	
  8826                           ;psect for function _setKp
  8827                           
  8828                           
  8829                           ;incstack = 0
  8830                           ; Regs used in _setKp: [wreg]
  8831     1000  0851               	movf	(setKp@new_kp+3)^(0+256),w
  8832     1001  00EF               	movwf	(_kp+3)^(0+256)
  8833     1002  0850               	movf	(setKp@new_kp+2)^(0+256),w
  8834     1003  00EE               	movwf	(_kp+2)^(0+256)
  8835     1004  084F               	movf	(setKp@new_kp+1)^(0+256),w
  8836     1005  00ED               	movwf	(_kp+1)^(0+256)
  8837     1006  084E               	movf	setKp@new_kp^(0+256),w
  8838     1007  00EC               	movwf	_kp^(0+256)
  8839     1008  0008               	return
  8840     1009                     __end_of_setKp:
  8841                           
  8842                           	psect	text6
  8843     1FC1                     __ptext6:	
  8844 ;; *************** function _setKi *****************
  8845 ;; Defined at:
  8846 ;;		line 48 in file "controller.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  new_ki          4    0[BANK2 ] float 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg
  8855 ;; Tracked objects:
  8856 ;;		On entry : 1F/2
  8857 ;;		On exit  : 1F/2
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8860 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8864 ;;Total ram usage:        4 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; Hardware stack levels required when called: 5
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_uartHandler
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874     1FC1                     _setKi:	
  8875                           ;psect for function _setKi
  8876                           
  8877                           
  8878                           ;incstack = 0
  8879                           ; Regs used in _setKi: [wreg]
  8880     1FC1  0851               	movf	(setKi@new_ki+3)^(0+256),w
  8881     1FC2  00EB               	movwf	(_ki+3)^(0+256)
  8882     1FC3  0850               	movf	(setKi@new_ki+2)^(0+256),w
  8883     1FC4  00EA               	movwf	(_ki+2)^(0+256)
  8884     1FC5  084F               	movf	(setKi@new_ki+1)^(0+256),w
  8885     1FC6  00E9               	movwf	(_ki+1)^(0+256)
  8886     1FC7  084E               	movf	setKi@new_ki^(0+256),w
  8887     1FC8  00E8               	movwf	_ki^(0+256)
  8888     1FC9  0008               	return
  8889     1FCA                     __end_of_setKi:
  8890                           
  8891                           	psect	text7
  8892     14BE                     __ptext7:	
  8893 ;; *************** function _readLine *****************
  8894 ;; Defined at:
  8895 ;;		line 50 in file "UART.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;		None
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;		None
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1   71[BANK1 ] PTR unsigned char 
  8902 ;; Registers used:
  8903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8904 ;; Tracked objects:
  8905 ;;		On entry : 1D/2
  8906 ;;		On exit  : 1C/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8909 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8912 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8913 ;;Total ram usage:        3 bytes
  8914 ;; Hardware stack levels used: 1
  8915 ;; Hardware stack levels required when called: 14
  8916 ;; This function calls:
  8917 ;;		_EUSART_IsRxReady
  8918 ;;		_EUSART_Read
  8919 ;;		_printf
  8920 ;; This function is called by:
  8921 ;;		_uartHandler
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925     14BE                     _readLine:	
  8926                           ;psect for function _readLine
  8927                           
  8928     14BE                     l892:	
  8929                           ;incstack = 0
  8930                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8931                           ;UART.c: 51:     static uint8_t index = 0;;UART.c: 52:     while (1) {
  8932                           
  8933                           
  8934                           ;UART.c: 53:         if (!EUSART_IsRxReady()) {
  8935     14BE  319F  277C  3194   	fcall	_EUSART_IsRxReady
  8936     14C1  3A00               	xorlw	0
  8937     14C2  1D03               	skipz
  8938     14C3  2CCD               	goto	l5689
  8939                           
  8940                           ;UART.c: 54:             line[index] = 0;
  8941     14C4  0865               	movf	readLine@index,w
  8942     14C5  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  8943     14C6  0086               	movwf	6
  8944     14C7  3001               	movlw	1	; select bank3/4
  8945     14C8  0087               	movwf	7
  8946     14C9  0181               	clrf	1
  8947                           
  8948                           ;UART.c: 55:             return line + index;
  8949     14CA  0865               	movf	readLine@index,w
  8950     14CB  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  8951     14CC  0008               	return
  8952     14CD                     l5689:
  8953                           
  8954                           ;UART.c: 57:         if (index >= 20 - 1) {
  8955     14CD  3013               	movlw	19
  8956     14CE  0265               	subwf	readLine@index,w
  8957     14CF  1803               	btfsc	3,0
  8958     14D0  2CD5               	goto	l5695
  8959     14D1  2CF1               	goto	l5707
  8960     14D2                     l5693:
  8961                           
  8962                           ;UART.c: 59:                 EUSART_Read();
  8963     14D2  3191  21E0  3194   	fcall	_EUSART_Read
  8964     14D5                     l5695:
  8965                           
  8966                           ;UART.c: 58:             while (EUSART_IsRxReady()) {
  8967     14D5  319F  277C  3194   	fcall	_EUSART_IsRxReady
  8968     14D8  3A00               	xorlw	0
  8969     14D9  1D03               	skipz
  8970     14DA  2CD2               	goto	l5693
  8971                           
  8972                           ;UART.c: 61:             printf("input buffer overflow\r\n");
  8973     14DB  3065               	movlw	low (STR_2| (0+32768))
  8974     14DC  0021               	movlb	1	; select bank1
  8975     14DD  00E0               	movwf	printf@fmt^(0+128)
  8976     14DE  3098               	movlw	high (STR_2| (0+32768))
  8977     14DF  00E1               	movwf	(printf@fmt^(0+128)+1)
  8978     14E0  3190  2095  3194   	fcall	_printf
  8979                           
  8980                           ;UART.c: 62:             index = 0;
  8981     14E3  0020               	movlb	0	; select bank0
  8982     14E4  01E5               	clrf	readLine@index
  8983                           
  8984                           ;UART.c: 63:             line[index] = 0;
  8985     14E5  0023               	movlb	3	; select bank3
  8986     14E6  01C0               	clrf	_line^(0+384)
  8987     14E7  2CEF               	goto	l5703
  8988     14E8                     l5711:
  8989                           
  8990                           ;UART.c: 69:             line[index + 1] = 0;
  8991     14E8  0865               	movf	readLine@index,w
  8992     14E9  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
  8993     14EA  0086               	movwf	6
  8994     14EB  3001               	movlw	1	; select bank3/4
  8995     14EC  0087               	movwf	7
  8996     14ED  0181               	clrf	1
  8997                           
  8998                           ;UART.c: 70:             index = 0;
  8999     14EE  01E5               	clrf	readLine@index
  9000     14EF                     l5703:
  9001                           
  9002                           ;UART.c: 64:             return line;
  9003     14EF  30C0               	movlw	(low (_line| (0+256)))& (0+255)
  9004     14F0  0008               	return
  9005     14F1                     l5707:
  9006                           
  9007                           ;UART.c: 67:         line[index] = EUSART_Read();
  9008     14F1  3191  21E0  3194   	fcall	_EUSART_Read
  9009     14F4  00E9               	movwf	??_readLine^(0+128)
  9010     14F5  0020               	movlb	0	; select bank0
  9011     14F6  0865               	movf	readLine@index,w
  9012     14F7  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9013     14F8  0086               	movwf	6
  9014     14F9  3001               	movlw	1	; select bank3/4
  9015     14FA  0087               	movwf	7
  9016     14FB  0021               	movlb	1	; select bank1
  9017     14FC  0869               	movf	??_readLine^(0+128),w
  9018     14FD  0081               	movwf	1
  9019                           
  9020                           ;UART.c: 68:         if (line[index] == '\n') {
  9021     14FE  0020               	movlb	0	; select bank0
  9022     14FF  0865               	movf	readLine@index,w
  9023     1500  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9024     1501  0086               	movwf	6
  9025     1502  3001               	movlw	1	; select bank3/4
  9026     1503  0087               	movwf	7
  9027     1504  300A               	movlw	10
  9028     1505  0601               	xorwf	1,w
  9029     1506  1903               	btfsc	3,2
  9030     1507  2CE8               	goto	l5711
  9031                           
  9032                           ;UART.c: 73:         index++;
  9033     1508  3001               	movlw	1
  9034     1509  07E5               	addwf	readLine@index,f
  9035     150A  2CBE               	goto	l892
  9036     150B                     __end_of_readLine:
  9037                           
  9038                           	psect	text8
  9039     11E0                     __ptext8:	
  9040 ;; *************** function _EUSART_Read *****************
  9041 ;; Defined at:
  9042 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;		None
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  readValue       1    1[BANK1 ] unsigned char 
  9047 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      unsigned char 
  9050 ;; Registers used:
  9051 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9052 ;; Tracked objects:
  9053 ;;		On entry : 1D/0
  9054 ;;		On exit  : 1F/1
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;Total ram usage:        2 bytes
  9062 ;; Hardware stack levels used: 1
  9063 ;; Hardware stack levels required when called: 5
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_readLine
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071     11E0                     _EUSART_Read:	
  9072                           ;psect for function _EUSART_Read
  9073                           
  9074                           
  9075                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
  9076                           
  9077                           ;incstack = 0
  9078                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9079     11E0  0020               	movlb	0	; select bank0
  9080     11E1  0867               	movf	_eusartRxTail,w
  9081     11E2  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  9082     11E3  0086               	movwf	6
  9083     11E4  3001               	movlw	1	; select bank2/3
  9084     11E5  0087               	movwf	7
  9085     11E6  0801               	movf	1,w
  9086     11E7  0021               	movlb	1	; select bank1
  9087     11E8  00A1               	movwf	EUSART_Read@readValue^(0+128)
  9088                           
  9089                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
  9090     11E9  0020               	movlb	0	; select bank0
  9091     11EA  0867               	movf	_eusartRxTail,w	;volatile
  9092     11EB  3E01               	addlw	1
  9093     11EC  3907               	andlw	7
  9094     11ED  0021               	movlb	1	; select bank1
  9095     11EE  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
  9096                           
  9097                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
  9098     11EF  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
  9099     11F0  0020               	movlb	0	; select bank0
  9100     11F1  00E7               	movwf	_eusartRxTail	;volatile
  9101                           
  9102                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
  9103     11F2  0021               	movlb	1	; select bank1
  9104     11F3  1291               	bcf	17,5	;volatile
  9105                           
  9106                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
  9107     11F4  0020               	movlb	0	; select bank0
  9108     11F5  0866               	movf	_eusartRxCount,w
  9109     11F6  1903               	btfsc	3,2
  9110     11F7  29FA               	goto	l4817
  9111                           
  9112                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
  9113     11F8  3001               	movlw	1
  9114     11F9  02E6               	subwf	_eusartRxCount,f	;volatile
  9115     11FA                     l4817:
  9116                           
  9117                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
  9118     11FA  0021               	movlb	1	; select bank1
  9119     11FB  1691               	bsf	17,5	;volatile
  9120                           
  9121                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
  9122     11FC  0821               	movf	EUSART_Read@readValue^(0+128),w
  9123     11FD  0008               	return
  9124     11FE                     __end_of_EUSART_Read:
  9125                           
  9126                           	psect	text9
  9127     1F7C                     __ptext9:	
  9128 ;; *************** function _EUSART_IsRxReady *****************
  9129 ;; Defined at:
  9130 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      _Bool 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0
  9139 ;; Tracked objects:
  9140 ;;		On entry : 1C/2
  9141 ;;		On exit  : 1F/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; Hardware stack levels required when called: 5
  9151 ;; This function calls:
  9152 ;;		Nothing
  9153 ;; This function is called by:
  9154 ;;		_readLine
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158     1F7C                     _EUSART_IsRxReady:	
  9159                           ;psect for function _EUSART_IsRxReady
  9160                           
  9161                           
  9162                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
  9163                           
  9164                           ;incstack = 0
  9165                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
  9166     1F7C  0020               	movlb	0	; select bank0
  9167     1F7D  0866               	movf	_eusartRxCount,w	;volatile
  9168     1F7E  1903               	btfsc	3,2
  9169     1F7F  2F82               	goto	u5650
  9170     1F80  3001               	movlw	1
  9171     1F81  0008               	return
  9172     1F82                     u5650:
  9173     1F82  3000               	movlw	0
  9174     1F83  0008               	return
  9175     1F84                     __end_of_EUSART_IsRxReady:
  9176                           
  9177                           	psect	text10
  9178     1796                     __ptext10:	
  9179 ;; *************** function _atoi *****************
  9180 ;; Defined at:
  9181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  s               1    6[BANK1 ] PTR const unsigned char 
  9184 ;;		 -> line(20), 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  n               2   11[BANK1 ] int 
  9187 ;;  neg             1   10[BANK1 ] _Bool 
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  2    6[BANK1 ] int 
  9190 ;; Registers used:
  9191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9192 ;; Tracked objects:
  9193 ;;		On entry : 1F/1
  9194 ;;		On exit  : 1F/1
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9197 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;Total ram usage:        7 bytes
  9202 ;; Hardware stack levels used: 1
  9203 ;; Hardware stack levels required when called: 6
  9204 ;; This function calls:
  9205 ;;		___wmul
  9206 ;; This function is called by:
  9207 ;;		_uartHandler
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211     1796                     _atoi:	
  9212                           ;psect for function _atoi
  9213                           
  9214                           
  9215                           ;incstack = 0
  9216                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9217     1796  01AB               	clrf	atoi@n^(0+128)
  9218     1797  01AC               	clrf	(atoi@n+1)^(0+128)
  9219     1798  01AA               	clrf	atoi@neg^(0+128)
  9220     1799                     l5737:
  9221     1799  0826               	movf	atoi@s^(0+128),w
  9222     179A  0086               	movwf	6
  9223     179B  3001               	movlw	1	; select bank2/3
  9224     179C  0087               	movwf	7
  9225     179D  3020               	movlw	32
  9226     179E  0601               	xorwf	1,w
  9227     179F  1D03               	btfss	3,2
  9228     17A0  2FA4               	goto	l5739
  9229     17A1                     l5735:
  9230     17A1  3001               	movlw	1
  9231     17A2  07A6               	addwf	atoi@s^(0+128),f
  9232     17A3  2F99               	goto	l5737
  9233     17A4                     l5739:
  9234     17A4  0826               	movf	atoi@s^(0+128),w
  9235     17A5  0086               	movwf	6
  9236     17A6  3001               	movlw	1	; select bank2/3
  9237     17A7  0087               	movwf	7
  9238     17A8  30F7               	movlw	247
  9239     17A9  0701               	addwf	1,w
  9240     17AA  00A8               	movwf	??_atoi^(0+128)
  9241     17AB  3005               	movlw	5
  9242     17AC  0228               	subwf	??_atoi^(0+128),w
  9243     17AD  1C03               	skipc
  9244     17AE  2FA1               	goto	l5735
  9245     17AF  0826               	movf	atoi@s^(0+128),w
  9246     17B0  0086               	movwf	6
  9247     17B1  3001               	movlw	1	; select bank2/3
  9248     17B2  0087               	movwf	7
  9249     17B3  302D               	movlw	45
  9250     17B4  0601               	xorwf	1,w
  9251     17B5  1D03               	btfss	3,2
  9252     17B6  2FBA               	goto	l5747
  9253     17B7  3001               	movlw	1
  9254     17B8  00AA               	movwf	atoi@neg^(0+128)
  9255     17B9  2FE9               	goto	l5745
  9256     17BA                     l5747:
  9257     17BA  0826               	movf	atoi@s^(0+128),w
  9258     17BB  0086               	movwf	6
  9259     17BC  3001               	movlw	1	; select bank2/3
  9260     17BD  0087               	movwf	7
  9261     17BE  302B               	movlw	43
  9262     17BF  0601               	xorwf	1,w
  9263     17C0  1903               	btfsc	3,2
  9264     17C1  2FE9               	goto	l5745
  9265     17C2                     l5755:
  9266     17C2  0826               	movf	atoi@s^(0+128),w
  9267     17C3  0086               	movwf	6
  9268     17C4  3001               	movlw	1	; select bank2/3
  9269     17C5  0087               	movwf	7
  9270     17C6  30D0               	movlw	208
  9271     17C7  0701               	addwf	1,w
  9272     17C8  00A8               	movwf	??_atoi^(0+128)
  9273     17C9  300A               	movlw	10
  9274     17CA  0228               	subwf	??_atoi^(0+128),w
  9275     17CB  1803               	btfsc	3,0
  9276     17CC  2FEC               	goto	l5757
  9277     17CD  0826               	movf	atoi@s^(0+128),w
  9278     17CE  0086               	movwf	6
  9279     17CF  3001               	movlw	1	; select bank2/3
  9280     17D0  0087               	movwf	7
  9281     17D1  082C               	movf	(atoi@n+1)^(0+128),w
  9282     17D2  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  9283     17D3  082B               	movf	atoi@n^(0+128),w
  9284     17D4  00A0               	movwf	___wmul@multiplier^(0+128)
  9285     17D5  300A               	movlw	10
  9286     17D6  00A2               	movwf	___wmul@multiplicand^(0+128)
  9287     17D7  3000               	movlw	0
  9288     17D8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  9289     17D9  3191  216F  3197   	fcall	___wmul
  9290     17DC  0821               	movf	(?___wmul+1)^(0+128),w
  9291     17DD  00A9               	movwf	(??_atoi^(0+128)+1)
  9292     17DE  0801               	movf	1,w
  9293     17DF  0220               	subwf	?___wmul^(0+128),w
  9294     17E0  00A8               	movwf	??_atoi^(0+128)
  9295     17E1  1C03               	skipc
  9296     17E2  03A9               	decf	(??_atoi^(0+128)+1),f
  9297     17E3  0828               	movf	??_atoi^(0+128),w
  9298     17E4  3E30               	addlw	48
  9299     17E5  00AB               	movwf	atoi@n^(0+128)
  9300     17E6  3000               	movlw	0
  9301     17E7  3D29               	addwfc	(??_atoi+1)^(0+128),w
  9302     17E8  00AC               	movwf	(atoi@n+1)^(0+128)
  9303     17E9                     l5745:
  9304     17E9  3001               	movlw	1
  9305     17EA  07A6               	addwf	atoi@s^(0+128),f
  9306     17EB  2FC2               	goto	l5755
  9307     17EC                     l5757:
  9308     17EC  082A               	movf	atoi@neg^(0+128),w
  9309     17ED  1D03               	btfss	3,2
  9310     17EE  2FFB               	goto	l5761
  9311     17EF  092B               	comf	atoi@n^(0+128),w
  9312     17F0  00A8               	movwf	??_atoi^(0+128)
  9313     17F1  092C               	comf	(atoi@n+1)^(0+128),w
  9314     17F2  00A9               	movwf	(??_atoi^(0+128)+1)
  9315     17F3  0AA8               	incf	??_atoi^(0+128),f
  9316     17F4  1903               	skipnz
  9317     17F5  0AA9               	incf	(??_atoi^(0+128)+1),f
  9318     17F6  0828               	movf	??_atoi^(0+128),w
  9319     17F7  00A6               	movwf	?_atoi^(0+128)
  9320     17F8  0829               	movf	(??_atoi+1)^(0+128),w
  9321     17F9  00A7               	movwf	(?_atoi+1)^(0+128)
  9322     17FA  0008               	return
  9323     17FB                     l5761:
  9324     17FB  082C               	movf	(atoi@n+1)^(0+128),w
  9325     17FC  00A7               	movwf	(?_atoi+1)^(0+128)
  9326     17FD  082B               	movf	atoi@n^(0+128),w
  9327     17FE  00A6               	movwf	?_atoi^(0+128)
  9328     17FF  0008               	return
  9329     1800                     __end_of_atoi:
  9330                           
  9331                           	psect	text11
  9332     0812                     __ptext11:	
  9333 ;; *************** function _printLogs *****************
  9334 ;; Defined at:
  9335 ;;		line 77 in file "UART.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/2
  9346 ;;		On exit  : 1E/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used: 1
  9355 ;; Hardware stack levels required when called: 15
  9356 ;; This function calls:
  9357 ;;		_getDutycycle
  9358 ;;		_getHoogtesensor
  9359 ;;		_getKi
  9360 ;;		_getKp
  9361 ;;		_getSetpoint
  9362 ;;		_printFloat
  9363 ;;		_printf
  9364 ;; This function is called by:
  9365 ;;		_main
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369     0812                     _printLogs:	
  9370                           ;psect for function _printLogs
  9371                           
  9372                           
  9373                           ;UART.c: 79:     if (mustPrintLogs) {
  9374                           
  9375                           ;incstack = 0
  9376                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9377     0812  0020               	movlb	0	; select bank0
  9378     0813  086E               	movf	_mustPrintLogs,w
  9379     0814  1903               	btfsc	3,2
  9380     0815  0008               	return
  9381                           
  9382                           ;UART.c: 80:         printf("hoogte: %u", getHoogtesensor());
  9383     0816  30D7               	movlw	low (STR_3| (0+32768))
  9384     0817  0021               	movlb	1	; select bank1
  9385     0818  00E0               	movwf	printf@fmt^(0+128)
  9386     0819  3098               	movlw	high (STR_3| (0+32768))
  9387     081A  00E1               	movwf	(printf@fmt^(0+128)+1)
  9388     081B  319F  279D  3188   	fcall	_getHoogtesensor
  9389     081E  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
  9390     081F  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9391     0820  0820               	movf	?_getHoogtesensor^(0+128),w
  9392     0821  00E2               	movwf	(?_printf^(0+128)+2)
  9393     0822  3190  2095  3188   	fcall	_printf
  9394                           
  9395                           ;UART.c: 81:         printf(", setpoint: %u", getSetpoint());
  9396     0825  30AE               	movlw	low (STR_4| (0+32768))
  9397     0826  00E0               	movwf	printf@fmt^(0+128)
  9398     0827  3098               	movlw	high (STR_4| (0+32768))
  9399     0828  00E1               	movwf	(printf@fmt^(0+128)+1)
  9400     0829  319F  27A6  3188   	fcall	_getSetpoint
  9401     082C  0821               	movf	(?_getSetpoint+1)^(0+128),w
  9402     082D  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9403     082E  0820               	movf	?_getSetpoint^(0+128),w
  9404     082F  00E2               	movwf	(?_printf^(0+128)+2)
  9405     0830  3190  2095  3188   	fcall	_printf
  9406                           
  9407                           ;UART.c: 82:         printf(", duty cycle: %u", getDutycycle());
  9408     0833  308E               	movlw	low (STR_5| (0+32768))
  9409     0834  00E0               	movwf	printf@fmt^(0+128)
  9410     0835  3098               	movlw	high (STR_5| (0+32768))
  9411     0836  00E1               	movwf	(printf@fmt^(0+128)+1)
  9412     0837  319F  27B8  3188   	fcall	_getDutycycle
  9413     083A  0821               	movf	(?_getDutycycle+1)^(0+128),w
  9414     083B  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9415     083C  0820               	movf	?_getDutycycle^(0+128),w
  9416     083D  00E2               	movwf	(?_printf^(0+128)+2)
  9417     083E  3190  2095  3188   	fcall	_printf
  9418                           
  9419                           ;UART.c: 85:         printf(", kp: "); printFloat(getKp());
  9420     0841  30FB               	movlw	low (STR_6| (0+32768))
  9421     0842  00E0               	movwf	printf@fmt^(0+128)
  9422     0843  3098               	movlw	high (STR_6| (0+32768))
  9423     0844  00E1               	movwf	(printf@fmt^(0+128)+1)
  9424     0845  3190  2095  3188   	fcall	_printf
  9425     0848  3188  2001  3188   	fcall	_getKp
  9426     084B  0823               	movf	(?_getKp+3)^(0+128),w
  9427     084C  0022               	movlb	2	; select bank2
  9428     084D  00D1               	movwf	(printFloat@number+3)^(0+256)
  9429     084E  0021               	movlb	1	; select bank1
  9430     084F  0822               	movf	(?_getKp+2)^(0+128),w
  9431     0850  0022               	movlb	2	; select bank2
  9432     0851  00D0               	movwf	(printFloat@number+2)^(0+256)
  9433     0852  0021               	movlb	1	; select bank1
  9434     0853  0821               	movf	(?_getKp+1)^(0+128),w
  9435     0854  0022               	movlb	2	; select bank2
  9436     0855  00CF               	movwf	(printFloat@number+1)^(0+256)
  9437     0856  0021               	movlb	1	; select bank1
  9438     0857  0820               	movf	?_getKp^(0+128),w
  9439     0858  0022               	movlb	2	; select bank2
  9440     0859  00CE               	movwf	printFloat@number^(0+256)
  9441     085A  3188  2080  3188   	fcall	_printFloat
  9442                           
  9443                           ;UART.c: 86:         printf(", ki: "); printFloat(getKi());
  9444     085D  30F4               	movlw	low (STR_7| (0+32768))
  9445     085E  00E0               	movwf	printf@fmt^(0+128)
  9446     085F  3098               	movlw	high (STR_7| (0+32768))
  9447     0860  00E1               	movwf	(printf@fmt^(0+128)+1)
  9448     0861  3190  2095  3188   	fcall	_printf
  9449     0864  3190  20D5  3188   	fcall	_getKi
  9450     0867  0823               	movf	(?_getKi+3)^(0+128),w
  9451     0868  0022               	movlb	2	; select bank2
  9452     0869  00D1               	movwf	(printFloat@number+3)^(0+256)
  9453     086A  0021               	movlb	1	; select bank1
  9454     086B  0822               	movf	(?_getKi+2)^(0+128),w
  9455     086C  0022               	movlb	2	; select bank2
  9456     086D  00D0               	movwf	(printFloat@number+2)^(0+256)
  9457     086E  0021               	movlb	1	; select bank1
  9458     086F  0821               	movf	(?_getKi+1)^(0+128),w
  9459     0870  0022               	movlb	2	; select bank2
  9460     0871  00CF               	movwf	(printFloat@number+1)^(0+256)
  9461     0872  0021               	movlb	1	; select bank1
  9462     0873  0820               	movf	?_getKi^(0+128),w
  9463     0874  0022               	movlb	2	; select bank2
  9464     0875  00CE               	movwf	printFloat@number^(0+256)
  9465     0876  3188  2080  3188   	fcall	_printFloat
  9466                           
  9467                           ;UART.c: 87:         printf("\r\n");
  9468     0879  30AB               	movlw	low ((STR_12+12)| (0+32768))
  9469     087A  00E0               	movwf	printf@fmt^(0+128)
  9470     087B  3098               	movlw	high ((STR_12+12)| (0+32768))
  9471     087C  00E1               	movwf	(printf@fmt^(0+128)+1)
  9472     087D  3190  2095         	fcall	_printf
  9473     087F  0008               	return
  9474     0880                     __end_of_printLogs:
  9475                           
  9476                           	psect	text12
  9477     0880                     __ptext12:	
  9478 ;; *************** function _printFloat *****************
  9479 ;; Defined at:
  9480 ;;		line 14 in file "UART.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  number          4    0[BANK2 ] float 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  fractional_p    2    4[BANK2 ] unsigned short 
  9485 ;;  integer_part    1    6[BANK2 ] char 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 1F/2
  9492 ;;		On exit  : 1F/1
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9495 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;Total ram usage:        9 bytes
  9500 ;; Hardware stack levels used: 1
  9501 ;; Hardware stack levels required when called: 14
  9502 ;; This function calls:
  9503 ;;		___flmul
  9504 ;;		___flsub
  9505 ;;		___fltol
  9506 ;;		___xxtofl
  9507 ;;		_printf
  9508 ;; This function is called by:
  9509 ;;		_printLogs
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513     0880                     _printFloat:	
  9514                           ;psect for function _printFloat
  9515                           
  9516                           
  9517                           ;UART.c: 15:     int8_t integer_part = (int8_t) number;
  9518                           
  9519                           ;incstack = 0
  9520                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9521     0880  0851               	movf	(printFloat@number+3)^(0+256),w
  9522     0881  0021               	movlb	1	; select bank1
  9523     0882  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9524     0883  0022               	movlb	2	; select bank2
  9525     0884  0850               	movf	(printFloat@number+2)^(0+256),w
  9526     0885  0021               	movlb	1	; select bank1
  9527     0886  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9528     0887  0022               	movlb	2	; select bank2
  9529     0888  084F               	movf	(printFloat@number+1)^(0+256),w
  9530     0889  0021               	movlb	1	; select bank1
  9531     088A  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9532     088B  0022               	movlb	2	; select bank2
  9533     088C  084E               	movf	printFloat@number^(0+256),w
  9534     088D  0021               	movlb	1	; select bank1
  9535     088E  00E4               	movwf	___fltol@f1^(0+128)
  9536     088F  3196  2669  3188   	fcall	___fltol
  9537     0892  0864               	movf	?___fltol^(0+128),w
  9538     0893  0022               	movlb	2	; select bank2
  9539     0894  00D4               	movwf	printFloat@integer_part^(0+256)
  9540                           
  9541                           ;UART.c: 16:     uint16_t fractional_part = (uint16_t) ((number - integer_part) * 1000);
  9542     0895  0851               	movf	(printFloat@number+3)^(0+256),w
  9543     0896  0021               	movlb	1	; select bank1
  9544     0897  00C9               	movwf	(___flsub@b+3)^(0+128)
  9545     0898  0022               	movlb	2	; select bank2
  9546     0899  0850               	movf	(printFloat@number+2)^(0+256),w
  9547     089A  0021               	movlb	1	; select bank1
  9548     089B  00C8               	movwf	(___flsub@b+2)^(0+128)
  9549     089C  0022               	movlb	2	; select bank2
  9550     089D  084F               	movf	(printFloat@number+1)^(0+256),w
  9551     089E  0021               	movlb	1	; select bank1
  9552     089F  00C7               	movwf	(___flsub@b+1)^(0+128)
  9553     08A0  0022               	movlb	2	; select bank2
  9554     08A1  084E               	movf	printFloat@number^(0+256),w
  9555     08A2  0021               	movlb	1	; select bank1
  9556     08A3  00C6               	movwf	___flsub@b^(0+128)
  9557     08A4  0022               	movlb	2	; select bank2
  9558     08A5  0854               	movf	printFloat@integer_part^(0+256),w
  9559     08A6  0021               	movlb	1	; select bank1
  9560     08A7  00EE               	movwf	??_printFloat^(0+128)
  9561     08A8  01EF               	clrf	(??_printFloat^(0+128)+1)
  9562     08A9  1BEE               	btfsc	??_printFloat^(0+128),7
  9563     08AA  03EF               	decf	(??_printFloat^(0+128)+1),f
  9564     08AB  086E               	movf	??_printFloat^(0+128),w
  9565     08AC  00A0               	movwf	___xxtofl@val^(0+128)
  9566     08AD  086F               	movf	(??_printFloat+1)^(0+128),w
  9567     08AE  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  9568     08AF  0D89               	rlf	9,f
  9569     08B0  3B89               	subwfb	9,f
  9570     08B1  0989               	comf	9,f
  9571     08B2  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  9572     08B3  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  9573     08B4  3001               	movlw	1
  9574     08B5  3189  218C  3188   	fcall	___xxtofl
  9575     08B8  0823               	movf	(?___xxtofl+3)^(0+128),w
  9576     08B9  00C5               	movwf	(___flsub@a+3)^(0+128)
  9577     08BA  0822               	movf	(?___xxtofl+2)^(0+128),w
  9578     08BB  00C4               	movwf	(___flsub@a+2)^(0+128)
  9579     08BC  0821               	movf	(?___xxtofl+1)^(0+128),w
  9580     08BD  00C3               	movwf	(___flsub@a+1)^(0+128)
  9581     08BE  0820               	movf	?___xxtofl^(0+128),w
  9582     08BF  00C2               	movwf	___flsub@a^(0+128)
  9583     08C0  3191  21A5  3188   	fcall	___flsub
  9584     08C3  0845               	movf	(?___flsub+3)^(0+128),w
  9585     08C4  00D1               	movwf	(___flmul@a+3)^(0+128)
  9586     08C5  0844               	movf	(?___flsub+2)^(0+128),w
  9587     08C6  00D0               	movwf	(___flmul@a+2)^(0+128)
  9588     08C7  0843               	movf	(?___flsub+1)^(0+128),w
  9589     08C8  00CF               	movwf	(___flmul@a+1)^(0+128)
  9590     08C9  0842               	movf	?___flsub^(0+128),w
  9591     08CA  00CE               	movwf	___flmul@a^(0+128)
  9592     08CB  3044               	movlw	68
  9593     08CC  00CD               	movwf	(___flmul@b+3)^(0+128)
  9594     08CD  307A               	movlw	122
  9595     08CE  00CC               	movwf	(___flmul@b+2)^(0+128)
  9596     08CF  3000               	movlw	0
  9597     08D0  00CB               	movwf	(___flmul@b+1)^(0+128)
  9598     08D1  3000               	movlw	0
  9599     08D2  00CA               	movwf	___flmul@b^(0+128)
  9600     08D3  3180  2075  3188   	fcall	___flmul
  9601     08D6  084D               	movf	(?___flmul+3)^(0+128),w
  9602     08D7  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9603     08D8  084C               	movf	(?___flmul+2)^(0+128),w
  9604     08D9  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9605     08DA  084B               	movf	(?___flmul+1)^(0+128),w
  9606     08DB  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9607     08DC  084A               	movf	?___flmul^(0+128),w
  9608     08DD  00E4               	movwf	___fltol@f1^(0+128)
  9609     08DE  3196  2669  3188   	fcall	___fltol
  9610     08E1  0865               	movf	(?___fltol+1)^(0+128),w
  9611     08E2  0022               	movlb	2	; select bank2
  9612     08E3  00D3               	movwf	(printFloat@fractional_part+1)^(0+256)
  9613     08E4  0021               	movlb	1	; select bank1
  9614     08E5  0864               	movf	?___fltol^(0+128),w
  9615     08E6  0022               	movlb	2	; select bank2
  9616     08E7  00D2               	movwf	printFloat@fractional_part^(0+256)
  9617                           
  9618                           ;UART.c: 17:     printf("%i.%03u", integer_part, fractional_part);
  9619     08E8  30EC               	movlw	low (STR_1| (0+32768))
  9620     08E9  0021               	movlb	1	; select bank1
  9621     08EA  00E0               	movwf	printf@fmt^(0+128)
  9622     08EB  3098               	movlw	high (STR_1| (0+32768))
  9623     08EC  00E1               	movwf	(printf@fmt^(0+128)+1)
  9624     08ED  0022               	movlb	2	; select bank2
  9625     08EE  0854               	movf	printFloat@integer_part^(0+256),w
  9626     08EF  0021               	movlb	1	; select bank1
  9627     08F0  00E2               	movwf	(?_printf^(0+128)+2)
  9628     08F1  01E3               	clrf	((?_printf+1)^(0+128)+2)
  9629     08F2  1BE2               	btfsc	(?_printf^(0+128)+2),7
  9630     08F3  03E3               	decf	((?_printf+1)^(0+128)+2),f
  9631     08F4  0022               	movlb	2	; select bank2
  9632     08F5  0853               	movf	(printFloat@fractional_part+1)^(0+256),w
  9633     08F6  0021               	movlb	1	; select bank1
  9634     08F7  00E5               	movwf	((?_printf+1)^(0+128)+4)
  9635     08F8  0022               	movlb	2	; select bank2
  9636     08F9  0852               	movf	printFloat@fractional_part^(0+256),w
  9637     08FA  0021               	movlb	1	; select bank1
  9638     08FB  00E4               	movwf	(?_printf^(0+128)+4)
  9639     08FC  3190  2095         	fcall	_printf
  9640     08FE  0008               	return
  9641     08FF                     __end_of_printFloat:
  9642                           
  9643                           	psect	text13
  9644     1095                     __ptext13:	
  9645 ;; *************** function _printf *****************
  9646 ;; Defined at:
  9647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  fmt             2   64[BANK1 ] PTR const unsigned char 
  9650 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9651 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9652 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9653 ;;		 -> STR_1(8), 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  ret             2    0        int 
  9656 ;;  ap              1   70[BANK1 ] PTR void [1]
  9657 ;;		 -> ?_printf(2), 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  2   64[BANK1 ] int 
  9660 ;; Registers used:
  9661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 1F/1
  9664 ;;		On exit  : 1F/1
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9667 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;Total ram usage:        7 bytes
  9672 ;; Hardware stack levels used: 1
  9673 ;; Hardware stack levels required when called: 13
  9674 ;; This function calls:
  9675 ;;		_vfprintf
  9676 ;; This function is called by:
  9677 ;;		_printFloat
  9678 ;;		_readLine
  9679 ;;		_printLogs
  9680 ;;		_uartHandler
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684     1095                     _printf:	
  9685                           ;psect for function _printf
  9686                           
  9687                           
  9688                           ;incstack = 0
  9689                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9690     1095  30E2               	movlw	(low ((?_printf| 0+2)))& (0+255)
  9691     1096  00E6               	movwf	printf@ap^(0+128)
  9692     1097  3000               	movlw	0
  9693     1098  00D8               	movwf	vfprintf@fp^(0+128)
  9694     1099  00D9               	movwf	(vfprintf@fp+1)^(0+128)
  9695     109A  0861               	movf	(printf@fmt+1)^(0+128),w
  9696     109B  00DB               	movwf	(vfprintf@fmt+1)^(0+128)
  9697     109C  0860               	movf	printf@fmt^(0+128),w
  9698     109D  00DA               	movwf	vfprintf@fmt^(0+128)
  9699     109E  30E6               	movlw	(low (printf@ap| 0))& (0+255)
  9700     109F  00DC               	movwf	vfprintf@ap^(0+128)
  9701     10A0  3191  218A         	fcall	_vfprintf
  9702     10A2  0008               	return
  9703     10A3                     __end_of_printf:
  9704                           
  9705                           	psect	text14
  9706     118A                     __ptext14:	
  9707 ;; *************** function _vfprintf *****************
  9708 ;; Defined at:
  9709 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  fp              2   56[BANK1 ] PTR struct _IO_FILE
  9712 ;;		 -> NULL(0), 
  9713 ;;  fmt             2   58[BANK1 ] PTR const unsigned char 
  9714 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9715 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9716 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9717 ;;		 -> STR_1(8), 
  9718 ;;  ap              1   60[BANK1 ] PTR PTR void 
  9719 ;;		 -> printf@ap(1), 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;  cfmt            2   62[BANK1 ] PTR unsigned char 
  9722 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9723 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9724 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9725 ;;		 -> STR_1(8), 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2   56[BANK1 ] int 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 1F/1
  9732 ;;		On exit  : 1F/1
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:        8 bytes
  9740 ;; Hardware stack levels used: 1
  9741 ;; Hardware stack levels required when called: 12
  9742 ;; This function calls:
  9743 ;;		_vfpfcnvrt
  9744 ;; This function is called by:
  9745 ;;		_printf
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749     118A                     _vfprintf:	
  9750                           ;psect for function _vfprintf
  9751                           
  9752                           
  9753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9754                           
  9755                           ;incstack = 0
  9756                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9757     118A  085B               	movf	(vfprintf@fmt+1)^(0+128),w
  9758     118B  00DF               	movwf	(vfprintf@cfmt+1)^(0+128)
  9759     118C  085A               	movf	vfprintf@fmt^(0+128),w
  9760     118D  00DE               	movwf	vfprintf@cfmt^(0+128)
  9761     118E                     l4761:	
  9762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9763                           
  9764                           
  9765                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9766     118E  0021               	movlb	1	; select bank1
  9767     118F  085E               	movf	vfprintf@cfmt^(0+128),w
  9768     1190  0084               	movwf	4
  9769     1191  085F               	movf	(vfprintf@cfmt+1)^(0+128),w
  9770     1192  0085               	movwf	5
  9771     1193  0012               	moviw fsr0++
  9772     1194  1903               	btfsc	3,2
  9773     1195  29A2               	goto	l4763
  9774                           
  9775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9776     1196  0859               	movf	(vfprintf@fp+1)^(0+128),w
  9777     1197  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  9778     1198  0858               	movf	vfprintf@fp^(0+128),w
  9779     1199  00C9               	movwf	vfpfcnvrt@fp^(0+128)
  9780     119A  30DE               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9781     119B  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
  9782     119C  085C               	movf	vfprintf@ap^(0+128),w
  9783     119D  00CC               	movwf	vfpfcnvrt@ap^(0+128)
  9784     119E  318C  24AE  3191   	fcall	_vfpfcnvrt
  9785     11A1  298E               	goto	l4761
  9786     11A2                     l4763:
  9787                           
  9788                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9789     11A2  01D8               	clrf	?_vfprintf^(0+128)
  9790     11A3  01D9               	clrf	(?_vfprintf+1)^(0+128)
  9791     11A4  0008               	return
  9792     11A5                     __end_of_vfprintf:
  9793                           
  9794                           	psect	text15
  9795     0CAE                     __ptext15:	
  9796 ;; *************** function _vfpfcnvrt *****************
  9797 ;; Defined at:
  9798 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
  9801 ;;		 -> NULL(0), 
  9802 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
  9803 ;;		 -> vfprintf@cfmt(2), 
  9804 ;;  ap              1   44[BANK1 ] PTR PTR void 
  9805 ;;		 -> printf@ap(1), 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  convarg         4   50[BANK1 ] struct .
  9808 ;;  cp              2   54[BANK1 ] PTR unsigned char 
  9809 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9810 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9811 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9812 ;;		 -> STR_1(8), 
  9813 ;;  done            1   49[BANK1 ] _Bool 
  9814 ;;  c               1    0        unsigned char 
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9819 ;; Tracked objects:
  9820 ;;		On entry : 1F/1
  9821 ;;		On exit  : 1E/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9824 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;Total ram usage:       15 bytes
  9829 ;; Hardware stack levels used: 1
  9830 ;; Hardware stack levels required when called: 11
  9831 ;; This function calls:
  9832 ;;		_dtoa
  9833 ;;		_fputc
  9834 ;;		_read_prec_or_width
  9835 ;;		_utoa
  9836 ;; This function is called by:
  9837 ;;		_vfprintf
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841     0CAE                     _vfpfcnvrt:	
  9842                           ;psect for function _vfpfcnvrt
  9843                           
  9844                           
  9845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9846                           
  9847                           ;incstack = 0
  9848                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9849     0CAE  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9850     0CAF  0086               	movwf	6
  9851     0CB0  0187               	clrf	7
  9852     0CB1  3F40               	moviw [0]fsr1
  9853     0CB2  00CD               	movwf	??_vfpfcnvrt^(0+128)
  9854     0CB3  3F41               	moviw [1]fsr1
  9855     0CB4  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  9856     0CB5  084D               	movf	??_vfpfcnvrt^(0+128),w
  9857     0CB6  0084               	movwf	4
  9858     0CB7  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  9859     0CB8  0085               	movwf	5
  9860     0CB9  0012               	moviw fsr0++
  9861     0CBA  3A25               	xorlw	37
  9862     0CBB  1D03               	btfss	3,2
  9863     0CBC  2D86               	goto	l4733
  9864                           
  9865                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9866     0CBD  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9867     0CBE  0086               	movwf	6
  9868     0CBF  0187               	clrf	7
  9869     0CC0  3001               	movlw	1
  9870     0CC1  0781               	addwf	1,f
  9871     0CC2  3141               	addfsr 1,1
  9872     0CC3  1803               	skipnc
  9873     0CC4  0A81               	incf	1,f
  9874                           
  9875                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9876     0CC5  0020               	movlb	0	; select bank0
  9877     0CC6  01D5               	clrf	_width
  9878     0CC7  01D6               	clrf	_width+1
  9879     0CC8  3000               	movlw	0
  9880     0CC9  00E3               	movwf	_flags
  9881                           
  9882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9883     0CCA  30FF               	movlw	255
  9884     0CCB  0022               	movlb	2	; select bank2
  9885     0CCC  00C4               	movwf	_prec^(0+256)
  9886     0CCD  30FF               	movlw	255
  9887     0CCE  00C5               	movwf	(_prec^(0+256)+1)
  9888                           
  9889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  9890     0CCF  0021               	movlb	1	; select bank1
  9891     0CD0  01D1               	clrf	vfpfcnvrt@done^(0+128)
  9892                           
  9893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  9894     0CD1  2CE0               	goto	l4691
  9895     0CD2                     l1726:	
  9896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  9897                           
  9898                           
  9899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  9900     0CD2  0020               	movlb	0	; select bank0
  9901     0CD3  14E3               	bsf	_flags,1
  9902                           
  9903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  9904     0CD4  0021               	movlb	1	; select bank1
  9905     0CD5  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9906     0CD6  0086               	movwf	6
  9907     0CD7  0187               	clrf	7
  9908     0CD8  3001               	movlw	1
  9909     0CD9  0781               	addwf	1,f
  9910     0CDA  3141               	addfsr 1,1
  9911     0CDB  1803               	skipnc
  9912     0CDC  0A81               	incf	1,f
  9913                           
  9914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  9915     0CDD  2CE0               	goto	l4691
  9916     0CDE                     l1728:	
  9917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  9918                           
  9919                           
  9920                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  9921     0CDE  3001               	movlw	1
  9922     0CDF  00D1               	movwf	vfpfcnvrt@done^(0+128)
  9923     0CE0                     l4691:	
  9924                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  9925                           
  9926                           
  9927                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  9928     0CE0  0851               	movf	vfpfcnvrt@done^(0+128),w
  9929     0CE1  1D03               	btfss	3,2
  9930     0CE2  2CF4               	goto	l4693
  9931     0CE3  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9932     0CE4  0086               	movwf	6
  9933     0CE5  0187               	clrf	7
  9934     0CE6  3F40               	moviw [0]fsr1
  9935     0CE7  00CD               	movwf	??_vfpfcnvrt^(0+128)
  9936     0CE8  3F41               	moviw [1]fsr1
  9937     0CE9  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  9938     0CEA  084D               	movf	??_vfpfcnvrt^(0+128),w
  9939     0CEB  0084               	movwf	4
  9940     0CEC  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  9941     0CED  0085               	movwf	5
  9942     0CEE  0800               	movf	0,w	;code access
  9943                           
  9944                           ; Switch size 1, requested type "simple"
  9945                           ; Number of cases is 1, Range of values is 48 to 48
  9946                           ; switch strategies available:
  9947                           ; Name         Instructions Cycles
  9948                           ; simple_byte            4     3 (average)
  9949                           ; direct_byte           11     9 (fixed)
  9950                           ; jumptable            263     9 (fixed)
  9951                           ;	Chosen strategy is simple_byte
  9952     0CEF  3A30               	xorlw	48	; case 48
  9953     0CF0  1903               	skipnz
  9954     0CF1  2CD2               	goto	l1726
  9955     0CF2  2CDE               	goto	l1728
  9956     0CF3  2CE0               	goto	l4691
  9957     0CF4                     l4693:
  9958                           
  9959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  9960     0CF4  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9961     0CF5  00A6               	movwf	read_prec_or_width@fmt^(0+128)
  9962     0CF6  084C               	movf	vfpfcnvrt@ap^(0+128),w
  9963     0CF7  00A7               	movwf	read_prec_or_width@ap^(0+128)
  9964     0CF8  3195  25B4  318C   	fcall	_read_prec_or_width
  9965     0CFB  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
  9966     0CFC  0020               	movlb	0	; select bank0
  9967     0CFD  00D6               	movwf	_width+1
  9968     0CFE  0021               	movlb	1	; select bank1
  9969     0CFF  0826               	movf	?_read_prec_or_width^(0+128),w
  9970     0D00  0020               	movlb	0	; select bank0
  9971     0D01  00D5               	movwf	_width
  9972                           
  9973                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  9974     0D02  1FD6               	btfss	_width+1,7
  9975     0D03  2D0A               	goto	l4701
  9976                           
  9977                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  9978     0D04  1463               	bsf	_flags,0
  9979                           
  9980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  9981     0D05  09D5               	comf	_width,f
  9982     0D06  09D6               	comf	_width+1,f
  9983     0D07  0AD5               	incf	_width,f
  9984     0D08  1903               	skipnz
  9985     0D09  0AD6               	incf	_width+1,f
  9986     0D0A                     l4701:
  9987                           
  9988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  9989     0D0A  0021               	movlb	1	; select bank1
  9990     0D0B  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9991     0D0C  0086               	movwf	6
  9992     0D0D  0187               	clrf	7
  9993     0D0E  3F40               	moviw [0]fsr1
  9994     0D0F  00D6               	movwf	vfpfcnvrt@cp^(0+128)
  9995     0D10  3F41               	moviw [1]fsr1
  9996     0D11  00D7               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  9997                           
  9998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  9999     0D12  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10000     0D13  0084               	movwf	4
 10001     0D14  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10002     0D15  0085               	movwf	5
 10003     0D16  0012               	moviw fsr0++
 10004     0D17  3A64               	xorlw	100
 10005     0D18  1903               	btfsc	3,2
 10006     0D19  2D22               	goto	l4707
 10007     0D1A  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10008     0D1B  0084               	movwf	4
 10009     0D1C  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10010     0D1D  0085               	movwf	5
 10011     0D1E  0012               	moviw fsr0++
 10012     0D1F  3A69               	xorlw	105
 10013     0D20  1D03               	btfss	3,2
 10014     0D21  2D46               	goto	l4715
 10015     0D22                     l4707:
 10016                           
 10017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10018     0D22  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10019     0D23  0086               	movwf	6
 10020     0D24  0187               	clrf	7
 10021     0D25  0801               	movf	1,w
 10022     0D26  0084               	movwf	4
 10023     0D27  0185               	clrf	5
 10024     0D28  3002               	movlw	2
 10025     0D29  0781               	addwf	1,f
 10026     0D2A  3F00               	moviw [0]fsr0
 10027     0D2B  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
 10028     0D2C  3F01               	moviw [1]fsr0
 10029     0D2D  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10030                           
 10031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10032     0D2E  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10033     0D2F  3E01               	addlw	1
 10034     0D30  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10035     0D31  3000               	movlw	0
 10036     0D32  3D57               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10037     0D33  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10038     0D34  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10039     0D35  0086               	movwf	6
 10040     0D36  0187               	clrf	7
 10041     0D37  084D               	movf	??_vfpfcnvrt^(0+128),w
 10042     0D38  3FC0               	movwi [0]fsr1
 10043     0D39  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10044     0D3A  3FC1               	movwi [1]fsr1
 10045                           
 10046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10047     0D3B  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10048     0D3C  00BD               	movwf	(dtoa@fp+1)^(0+128)
 10049     0D3D  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10050     0D3E  00BC               	movwf	dtoa@fp^(0+128)
 10051     0D3F  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10052     0D40  00BF               	movwf	(dtoa@d+1)^(0+128)
 10053     0D41  0852               	movf	vfpfcnvrt@convarg^(0+128),w
 10054     0D42  00BE               	movwf	dtoa@d^(0+128)
 10055     0D43  318A  22B3         	fcall	_dtoa
 10056     0D45  0008               	return
 10057     0D46                     l4715:
 10058     0D46  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10059     0D47  0084               	movwf	4
 10060     0D48  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10061     0D49  0085               	movwf	5
 10062     0D4A  0012               	moviw fsr0++
 10063     0D4B  3A75               	xorlw	117
 10064     0D4C  1D03               	btfss	3,2
 10065     0D4D  2D7C               	goto	l4729
 10066                           
 10067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 10068     0D4E  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10069     0D4F  0086               	movwf	6
 10070     0D50  0187               	clrf	7
 10071     0D51  0801               	movf	1,w
 10072     0D52  0084               	movwf	4
 10073     0D53  0185               	clrf	5
 10074     0D54  3002               	movlw	2
 10075     0D55  0781               	addwf	1,f
 10076     0D56  3F00               	moviw [0]fsr0
 10077     0D57  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
 10078     0D58  3F01               	moviw [1]fsr0
 10079     0D59  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10080                           
 10081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10082     0D5A  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10083     0D5B  3E01               	addlw	1
 10084     0D5C  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10085     0D5D  3000               	movlw	0
 10086     0D5E  3D57               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10087     0D5F  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10088     0D60  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10089     0D61  0086               	movwf	6
 10090     0D62  0187               	clrf	7
 10091     0D63  084D               	movf	??_vfpfcnvrt^(0+128),w
 10092     0D64  3FC0               	movwi [0]fsr1
 10093     0D65  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10094     0D66  3FC1               	movwi [1]fsr1
 10095                           
 10096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10097     0D67  2D73               	goto	l4727
 10098     0D68                     l4721:
 10099                           
 10100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10101     0D68  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10102     0D69  00BD               	movwf	(utoa@fp+1)^(0+128)
 10103     0D6A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10104     0D6B  00BC               	movwf	utoa@fp^(0+128)
 10105     0D6C  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10106     0D6D  00BF               	movwf	(utoa@d+1)^(0+128)
 10107     0D6E  0852               	movf	vfpfcnvrt@convarg^(0+128),w
 10108     0D6F  00BE               	movwf	utoa@d^(0+128)
 10109     0D70  3196  26C8         	fcall	_utoa
 10110     0D72  0008               	return
 10111     0D73                     l4727:
 10112     0D73  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10113     0D74  0084               	movwf	4
 10114     0D75  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10115     0D76  0085               	movwf	5
 10116     0D77  0800               	movf	0,w	;code access
 10117                           
 10118                           ; Switch size 1, requested type "simple"
 10119                           ; Number of cases is 1, Range of values is 117 to 117
 10120                           ; switch strategies available:
 10121                           ; Name         Instructions Cycles
 10122                           ; simple_byte            4     3 (average)
 10123                           ; direct_byte           11     9 (fixed)
 10124                           ; jumptable            263     9 (fixed)
 10125                           ;	Chosen strategy is simple_byte
 10126     0D78  3A75               	xorlw	117	; case 117
 10127     0D79  1903               	skipnz
 10128     0D7A  2D68               	goto	l4721
 10129     0D7B  2D7C               	goto	l4729
 10130     0D7C                     l4729:
 10131                           
 10132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10133     0D7C  0021               	movlb	1	; select bank1
 10134     0D7D  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10135     0D7E  0086               	movwf	6
 10136     0D7F  0187               	clrf	7
 10137     0D80  3001               	movlw	1
 10138     0D81  0781               	addwf	1,f
 10139     0D82  3141               	addfsr 1,1
 10140     0D83  1803               	skipnc
 10141     0D84  0A81               	incf	1,f
 10142     0D85  0008               	return
 10143     0D86                     l4733:
 10144                           
 10145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10146     0D86  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10147     0D87  0086               	movwf	6
 10148     0D88  0187               	clrf	7
 10149     0D89  3F40               	moviw [0]fsr1
 10150     0D8A  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10151     0D8B  3F41               	moviw [1]fsr1
 10152     0D8C  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10153     0D8D  084D               	movf	??_vfpfcnvrt^(0+128),w
 10154     0D8E  0084               	movwf	4
 10155     0D8F  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10156     0D90  0085               	movwf	5
 10157     0D91  0800               	movf	0,w	;code access
 10158     0D92  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
 10159     0D93  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 10160     0D94  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
 10161     0D95  00A3               	movwf	fputc@c^(0+128)
 10162     0D96  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
 10163     0D97  00A4               	movwf	(fputc@c+1)^(0+128)
 10164     0D98  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10165     0D99  00A6               	movwf	(fputc@fp+1)^(0+128)
 10166     0D9A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10167     0D9B  00A5               	movwf	fputc@fp^(0+128)
 10168     0D9C  3195  250B  318C   	fcall	_fputc
 10169     0D9F  2D7C               	goto	l4729
 10170     0DA0                     __end_of_vfpfcnvrt:
 10171                           
 10172                           	psect	text16
 10173     16C8                     __ptext16:	
 10174 ;; *************** function _utoa *****************
 10175 ;; Defined at:
 10176 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 10179 ;;		 -> NULL(0), 
 10180 ;;  d               2   30[BANK1 ] unsigned int 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;  i               2   36[BANK1 ] int 
 10183 ;;  w               2   34[BANK1 ] int 
 10184 ;;  p               1   33[BANK1 ] _Bool 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  1    wreg      void 
 10187 ;; Registers used:
 10188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : 1F/1
 10191 ;;		On exit  : 1E/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10194 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;Total ram usage:       10 bytes
 10199 ;; Hardware stack levels used: 1
 10200 ;; Hardware stack levels required when called: 10
 10201 ;; This function calls:
 10202 ;;		___lwdiv
 10203 ;;		___lwmod
 10204 ;;		_pad
 10205 ;; This function is called by:
 10206 ;;		_vfpfcnvrt
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210     16C8                     _utoa:	
 10211                           ;psect for function _utoa
 10212                           
 10213                           
 10214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
 10215                           
 10216                           ;incstack = 0
 10217                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10218     16C8  3001               	movlw	1
 10219     16C9  00C1               	movwf	utoa@p^(0+128)
 10220                           
 10221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10222     16CA  0020               	movlb	0	; select bank0
 10223     16CB  0856               	movf	_width+1,w
 10224     16CC  0021               	movlb	1	; select bank1
 10225     16CD  00C3               	movwf	(utoa@w+1)^(0+128)
 10226     16CE  0020               	movlb	0	; select bank0
 10227     16CF  0855               	movf	_width,w
 10228     16D0  0021               	movlb	1	; select bank1
 10229     16D1  00C2               	movwf	utoa@w^(0+128)
 10230                           
 10231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10232     16D2  301F               	movlw	31
 10233     16D3  00C4               	movwf	utoa@i^(0+128)
 10234     16D4  3000               	movlw	0
 10235     16D5  00C5               	movwf	(utoa@i^(0+128)+1)
 10236                           
 10237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10238     16D6  0023               	movlb	3	; select bank3
 10239     16D7  01BF               	clrf	(_dbuf^(0+384)+31)
 10240                           
 10241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10242     16D8  2F1A               	goto	l4225
 10243     16D9                     l4227:
 10244     16D9  083E               	movf	utoa@d^(0+128),w
 10245     16DA  043F               	iorwf	(utoa@d+1)^(0+128),w
 10246     16DB  1D03               	btfss	3,2
 10247     16DC  2EEE               	goto	l4215
 10248     16DD  0841               	movf	utoa@p^(0+128),w
 10249     16DE  1D03               	btfss	3,2
 10250     16DF  2EEE               	goto	l4215
 10251     16E0  0843               	movf	(utoa@w+1)^(0+128),w
 10252     16E1  3A80               	xorlw	128
 10253     16E2  00C0               	movwf	??_utoa^(0+128)
 10254     16E3  3080               	movlw	128
 10255     16E4  0240               	subwf	??_utoa^(0+128),w
 10256     16E5  1D03               	skipz
 10257     16E6  2EE9               	goto	u4515
 10258     16E7  3001               	movlw	1
 10259     16E8  0242               	subwf	utoa@w^(0+128),w
 10260     16E9                     u4515:
 10261     16E9  1C03               	skipc
 10262     16EA  2F1F               	goto	l4235
 10263     16EB  0020               	movlb	0	; select bank0
 10264     16EC  1CE3               	btfss	_flags,1
 10265     16ED  2F1F               	goto	l4235
 10266     16EE                     l4215:
 10267                           
 10268                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10269     16EE  30FF               	movlw	255
 10270     16EF  0021               	movlb	1	; select bank1
 10271     16F0  07C4               	addwf	utoa@i^(0+128),f
 10272     16F1  30FF               	movlw	255
 10273     16F2  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 10274                           
 10275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10276     16F3  0844               	movf	utoa@i^(0+128),w
 10277     16F4  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10278     16F5  0086               	movwf	6
 10279     16F6  3001               	movlw	1	; select bank3/4
 10280     16F7  0087               	movwf	7
 10281     16F8  300A               	movlw	10
 10282     16F9  00A0               	movwf	___lwmod@divisor^(0+128)
 10283     16FA  3000               	movlw	0
 10284     16FB  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 10285     16FC  083F               	movf	(utoa@d+1)^(0+128),w
 10286     16FD  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 10287     16FE  083E               	movf	utoa@d^(0+128),w
 10288     16FF  00A2               	movwf	___lwmod@dividend^(0+128)
 10289     1700  3192  225C  3196   	fcall	___lwmod
 10290     1703  0820               	movf	?___lwmod^(0+128),w
 10291     1704  3E30               	addlw	48
 10292     1705  0081               	movwf	1
 10293                           
 10294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 10295     1706  01C1               	clrf	utoa@p^(0+128)
 10296                           
 10297                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10298     1707  30FF               	movlw	255
 10299     1708  07C2               	addwf	utoa@w^(0+128),f
 10300     1709  30FF               	movlw	255
 10301     170A  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 10302                           
 10303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10304     170B  300A               	movlw	10
 10305     170C  00A0               	movwf	___lwdiv@divisor^(0+128)
 10306     170D  3000               	movlw	0
 10307     170E  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 10308     170F  083F               	movf	(utoa@d+1)^(0+128),w
 10309     1710  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 10310     1711  083E               	movf	utoa@d^(0+128),w
 10311     1712  00A2               	movwf	___lwdiv@dividend^(0+128)
 10312     1713  3192  22B1  3196   	fcall	___lwdiv
 10313     1716  0821               	movf	(?___lwdiv+1)^(0+128),w
 10314     1717  00BF               	movwf	(utoa@d+1)^(0+128)
 10315     1718  0820               	movf	?___lwdiv^(0+128),w
 10316     1719  00BE               	movwf	utoa@d^(0+128)
 10317     171A                     l4225:
 10318                           
 10319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10320     171A  0021               	movlb	1	; select bank1
 10321     171B  0844               	movf	utoa@i^(0+128),w
 10322     171C  0445               	iorwf	(utoa@i+1)^(0+128),w
 10323     171D  1D03               	btfss	3,2
 10324     171E  2ED9               	goto	l4227
 10325     171F                     l4235:
 10326                           
 10327                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10328     171F  0021               	movlb	1	; select bank1
 10329     1720  083D               	movf	(utoa@fp+1)^(0+128),w
 10330     1721  00B5               	movwf	(pad@fp+1)^(0+128)
 10331     1722  083C               	movf	utoa@fp^(0+128),w
 10332     1723  00B4               	movwf	pad@fp^(0+128)
 10333     1724  0844               	movf	utoa@i^(0+128),w
 10334     1725  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10335     1726  00B6               	movwf	pad@buf^(0+128)
 10336     1727  0843               	movf	(utoa@w+1)^(0+128),w
 10337     1728  00B8               	movwf	(pad@p+1)^(0+128)
 10338     1729  0842               	movf	utoa@w^(0+128),w
 10339     172A  00B7               	movwf	pad@p^(0+128)
 10340     172B  3193  2318         	fcall	_pad
 10341     172D  0008               	return
 10342     172E                     __end_of_utoa:
 10343                           
 10344                           	psect	text17
 10345     125C                     __ptext17:	
 10346 ;; *************** function ___lwmod *****************
 10347 ;; Defined at:
 10348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  divisor         2    0[BANK1 ] unsigned int 
 10351 ;;  dividend        2    2[BANK1 ] unsigned int 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;  counter         1    4[BANK1 ] unsigned char 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  2    0[BANK1 ] unsigned int 
 10356 ;; Registers used:
 10357 ;;		wreg, status,2, status,0
 10358 ;; Tracked objects:
 10359 ;;		On entry : 1F/1
 10360 ;;		On exit  : 1F/1
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10363 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;Total ram usage:        5 bytes
 10368 ;; Hardware stack levels used: 1
 10369 ;; Hardware stack levels required when called: 5
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_utoa
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377     125C                     ___lwmod:	
 10378                           ;psect for function ___lwmod
 10379                           
 10380                           
 10381                           ;incstack = 0
 10382                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10383     125C  0820               	movf	___lwmod@divisor^(0+128),w
 10384     125D  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 10385     125E  1903               	btfsc	3,2
 10386     125F  2A81               	goto	l4121
 10387     1260  3001               	movlw	1
 10388     1261  00A4               	movwf	___lwmod@counter^(0+128)
 10389     1262                     l4111:
 10390     1262  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
 10391     1263  2A6C               	goto	l4113
 10392     1264  3001               	movlw	1
 10393     1265                     u4255:
 10394     1265  35A0               	lslf	___lwmod@divisor^(0+128),f
 10395     1266  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 10396     1267  0B89               	decfsz	9,f
 10397     1268  2A65               	goto	u4255
 10398     1269  3001               	movlw	1
 10399     126A  07A4               	addwf	___lwmod@counter^(0+128),f
 10400     126B  2A62               	goto	l4111
 10401     126C                     l4113:
 10402     126C  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10403     126D  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 10404     126E  1D03               	skipz
 10405     126F  2A72               	goto	u4275
 10406     1270  0820               	movf	___lwmod@divisor^(0+128),w
 10407     1271  0222               	subwf	___lwmod@dividend^(0+128),w
 10408     1272                     u4275:
 10409     1272  1C03               	skipc
 10410     1273  2A78               	goto	l4117
 10411     1274  0820               	movf	___lwmod@divisor^(0+128),w
 10412     1275  02A2               	subwf	___lwmod@dividend^(0+128),f
 10413     1276  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10414     1277  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 10415     1278                     l4117:
 10416     1278  3001               	movlw	1
 10417     1279                     u4285:
 10418     1279  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 10419     127A  0CA0               	rrf	___lwmod@divisor^(0+128),f
 10420     127B  0B89               	decfsz	9,f
 10421     127C  2A79               	goto	u4285
 10422     127D  3001               	movlw	1
 10423     127E  02A4               	subwf	___lwmod@counter^(0+128),f
 10424     127F  1D03               	btfss	3,2
 10425     1280  2A6C               	goto	l4113
 10426     1281                     l4121:
 10427     1281  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 10428     1282  00A1               	movwf	(?___lwmod+1)^(0+128)
 10429     1283  0822               	movf	___lwmod@dividend^(0+128),w
 10430     1284  00A0               	movwf	?___lwmod^(0+128)
 10431     1285  0008               	return
 10432     1286                     __end_of___lwmod:
 10433                           
 10434                           	psect	text18
 10435     12B1                     __ptext18:	
 10436 ;; *************** function ___lwdiv *****************
 10437 ;; Defined at:
 10438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;  divisor         2    0[BANK1 ] unsigned int 
 10441 ;;  dividend        2    2[BANK1 ] unsigned int 
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;  quotient        2    4[BANK1 ] unsigned int 
 10444 ;;  counter         1    6[BANK1 ] unsigned char 
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  2    0[BANK1 ] unsigned int 
 10447 ;; Registers used:
 10448 ;;		wreg, status,2, status,0
 10449 ;; Tracked objects:
 10450 ;;		On entry : 1F/1
 10451 ;;		On exit  : 1F/1
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10454 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10455 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10457 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10458 ;;Total ram usage:        7 bytes
 10459 ;; Hardware stack levels used: 1
 10460 ;; Hardware stack levels required when called: 5
 10461 ;; This function calls:
 10462 ;;		Nothing
 10463 ;; This function is called by:
 10464 ;;		_utoa
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468     12B1                     ___lwdiv:	
 10469                           ;psect for function ___lwdiv
 10470                           
 10471                           
 10472                           ;incstack = 0
 10473                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10474     12B1  01A4               	clrf	___lwdiv@quotient^(0+128)
 10475     12B2  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 10476     12B3  0820               	movf	___lwdiv@divisor^(0+128),w
 10477     12B4  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 10478     12B5  1903               	btfsc	3,2
 10479     12B6  2ADE               	goto	l4099
 10480     12B7  3001               	movlw	1
 10481     12B8  00A6               	movwf	___lwdiv@counter^(0+128)
 10482     12B9                     l4087:
 10483     12B9  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
 10484     12BA  2AC3               	goto	l4089
 10485     12BB  3001               	movlw	1
 10486     12BC                     u4185:
 10487     12BC  35A0               	lslf	___lwdiv@divisor^(0+128),f
 10488     12BD  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 10489     12BE  0B89               	decfsz	9,f
 10490     12BF  2ABC               	goto	u4185
 10491     12C0  3001               	movlw	1
 10492     12C1  07A6               	addwf	___lwdiv@counter^(0+128),f
 10493     12C2  2AB9               	goto	l4087
 10494     12C3                     l4089:
 10495     12C3  3001               	movlw	1
 10496     12C4                     u4205:
 10497     12C4  35A4               	lslf	___lwdiv@quotient^(0+128),f
 10498     12C5  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 10499     12C6  0B89               	decfsz	9,f
 10500     12C7  2AC4               	goto	u4205
 10501     12C8  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 10502     12C9  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 10503     12CA  1D03               	skipz
 10504     12CB  2ACE               	goto	u4215
 10505     12CC  0820               	movf	___lwdiv@divisor^(0+128),w
 10506     12CD  0222               	subwf	___lwdiv@dividend^(0+128),w
 10507     12CE                     u4215:
 10508     12CE  1C03               	skipc
 10509     12CF  2AD5               	goto	l4095
 10510     12D0  0820               	movf	___lwdiv@divisor^(0+128),w
 10511     12D1  02A2               	subwf	___lwdiv@dividend^(0+128),f
 10512     12D2  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 10513     12D3  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 10514     12D4  1424               	bsf	___lwdiv@quotient^(0+128),0
 10515     12D5                     l4095:
 10516     12D5  3001               	movlw	1
 10517     12D6                     u4225:
 10518     12D6  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 10519     12D7  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 10520     12D8  0B89               	decfsz	9,f
 10521     12D9  2AD6               	goto	u4225
 10522     12DA  3001               	movlw	1
 10523     12DB  02A6               	subwf	___lwdiv@counter^(0+128),f
 10524     12DC  1D03               	btfss	3,2
 10525     12DD  2AC3               	goto	l4089
 10526     12DE                     l4099:
 10527     12DE  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 10528     12DF  00A1               	movwf	(?___lwdiv+1)^(0+128)
 10529     12E0  0824               	movf	___lwdiv@quotient^(0+128),w
 10530     12E1  00A0               	movwf	?___lwdiv^(0+128)
 10531     12E2  0008               	return
 10532     12E3                     __end_of___lwdiv:
 10533                           
 10534                           	psect	text19
 10535     15B4                     __ptext19:	
 10536 ;; *************** function _read_prec_or_width *****************
 10537 ;; Defined at:
 10538 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 10541 ;;		 -> vfprintf@cfmt(2), 
 10542 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
 10543 ;;		 -> printf@ap(1), 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  c               1   11[BANK1 ] unsigned char 
 10546 ;;  n               2   12[BANK1 ] int 
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  2    6[BANK1 ] int 
 10549 ;; Registers used:
 10550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10551 ;; Tracked objects:
 10552 ;;		On entry : 1F/1
 10553 ;;		On exit  : 1F/1
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10556 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;Total ram usage:        8 bytes
 10561 ;; Hardware stack levels used: 1
 10562 ;; Hardware stack levels required when called: 6
 10563 ;; This function calls:
 10564 ;;		___wmul
 10565 ;; This function is called by:
 10566 ;;		_vfpfcnvrt
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570     15B4                     _read_prec_or_width:	
 10571                           ;psect for function _read_prec_or_width
 10572                           
 10573                           
 10574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 10575                           
 10576                           ;incstack = 0
 10577                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10578     15B4  01AC               	clrf	read_prec_or_width@n^(0+128)
 10579     15B5  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
 10580                           
 10581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 10582     15B6  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10583     15B7  0086               	movwf	6
 10584     15B8  0187               	clrf	7
 10585     15B9  3F40               	moviw [0]fsr1
 10586     15BA  00A8               	movwf	??_read_prec_or_width^(0+128)
 10587     15BB  3F41               	moviw [1]fsr1
 10588     15BC  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 10589     15BD  0828               	movf	??_read_prec_or_width^(0+128),w
 10590     15BE  0084               	movwf	4
 10591     15BF  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 10592     15C0  0085               	movwf	5
 10593     15C1  0012               	moviw fsr0++
 10594     15C2  3A2A               	xorlw	42
 10595     15C3  1D03               	btfss	3,2
 10596     15C4  2DF3               	goto	l4251
 10597                           
 10598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 10599     15C5  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10600     15C6  0086               	movwf	6
 10601     15C7  0187               	clrf	7
 10602     15C8  3001               	movlw	1
 10603     15C9  0781               	addwf	1,f
 10604     15CA  3141               	addfsr 1,1
 10605     15CB  1803               	skipnc
 10606     15CC  0A81               	incf	1,f
 10607                           
 10608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 10609     15CD  0827               	movf	read_prec_or_width@ap^(0+128),w
 10610     15CE  0086               	movwf	6
 10611     15CF  0187               	clrf	7
 10612     15D0  0801               	movf	1,w
 10613     15D1  0084               	movwf	4
 10614     15D2  0185               	clrf	5
 10615     15D3  3002               	movlw	2
 10616     15D4  0781               	addwf	1,f
 10617     15D5  3F00               	moviw [0]fsr0
 10618     15D6  00AC               	movwf	read_prec_or_width@n^(0+128)
 10619     15D7  3F01               	moviw [1]fsr0
 10620     15D8  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 10621                           
 10622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 10623     15D9  2E05               	goto	l4253
 10624     15DA                     l4247:
 10625                           
 10626                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 10627     15DA  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 10628     15DB  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 10629     15DC  082C               	movf	read_prec_or_width@n^(0+128),w
 10630     15DD  00A0               	movwf	___wmul@multiplier^(0+128)
 10631     15DE  300A               	movlw	10
 10632     15DF  00A2               	movwf	___wmul@multiplicand^(0+128)
 10633     15E0  3000               	movlw	0
 10634     15E1  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 10635     15E2  3191  216F  3195   	fcall	___wmul
 10636     15E5  082B               	movf	read_prec_or_width@c^(0+128),w
 10637     15E6  0720               	addwf	?___wmul^(0+128),w
 10638     15E7  00AC               	movwf	read_prec_or_width@n^(0+128)
 10639     15E8  3000               	movlw	0
 10640     15E9  3D21               	addwfc	(?___wmul+1)^(0+128),w
 10641     15EA  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 10642                           
 10643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 10644     15EB  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10645     15EC  0086               	movwf	6
 10646     15ED  0187               	clrf	7
 10647     15EE  3001               	movlw	1
 10648     15EF  0781               	addwf	1,f
 10649     15F0  3141               	addfsr 1,1
 10650     15F1  1803               	skipnc
 10651     15F2  0A81               	incf	1,f
 10652     15F3                     l4251:
 10653                           
 10654                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 10655     15F3  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10656     15F4  0086               	movwf	6
 10657     15F5  0187               	clrf	7
 10658     15F6  3F40               	moviw [0]fsr1
 10659     15F7  00A8               	movwf	??_read_prec_or_width^(0+128)
 10660     15F8  3F41               	moviw [1]fsr1
 10661     15F9  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 10662     15FA  0828               	movf	??_read_prec_or_width^(0+128),w
 10663     15FB  0084               	movwf	4
 10664     15FC  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 10665     15FD  0085               	movwf	5
 10666     15FE  0800               	movf	0,w	;code access
 10667     15FF  3ED0               	addlw	208
 10668     1600  00AB               	movwf	read_prec_or_width@c^(0+128)
 10669     1601  300A               	movlw	10
 10670     1602  022B               	subwf	read_prec_or_width@c^(0+128),w
 10671     1603  1C03               	skipc
 10672     1604  2DDA               	goto	l4247
 10673     1605                     l4253:
 10674                           
 10675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 10676     1605  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 10677     1606  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 10678     1607  082C               	movf	read_prec_or_width@n^(0+128),w
 10679     1608  00A6               	movwf	?_read_prec_or_width^(0+128)
 10680     1609  0008               	return
 10681     160A                     __end_of_read_prec_or_width:
 10682                           
 10683                           	psect	text20
 10684     0AB3                     __ptext20:	
 10685 ;; *************** function _dtoa *****************
 10686 ;; Defined at:
 10687 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 10690 ;;		 -> NULL(0), 
 10691 ;;  d               2   30[BANK1 ] int 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  i               2   39[BANK1 ] int 
 10694 ;;  w               2   36[BANK1 ] int 
 10695 ;;  s               1   38[BANK1 ] unsigned char 
 10696 ;;  p               1   35[BANK1 ] _Bool 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      void 
 10699 ;; Registers used:
 10700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10701 ;; Tracked objects:
 10702 ;;		On entry : 1F/1
 10703 ;;		On exit  : 1E/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10706 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;Total ram usage:       13 bytes
 10711 ;; Hardware stack levels used: 1
 10712 ;; Hardware stack levels required when called: 10
 10713 ;; This function calls:
 10714 ;;		___awdiv
 10715 ;;		___awmod
 10716 ;;		_abs
 10717 ;;		_pad
 10718 ;; This function is called by:
 10719 ;;		_vfpfcnvrt
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723     0AB3                     _dtoa:	
 10724                           ;psect for function _dtoa
 10725                           
 10726                           
 10727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 10728                           
 10729                           ;incstack = 0
 10730                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10731     0AB3  3001               	movlw	1
 10732     0AB4  00C3               	movwf	dtoa@p^(0+128)
 10733                           
 10734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 10735     0AB5  1FBF               	btfss	(dtoa@d+1)^(0+128),7
 10736     0AB6  2AB9               	goto	u4380
 10737     0AB7  3001               	movlw	1
 10738     0AB8  2ABA               	goto	u4390
 10739     0AB9                     u4380:
 10740     0AB9  3000               	movlw	0
 10741     0ABA                     u4390:
 10742     0ABA  00C6               	movwf	dtoa@s^(0+128)
 10743                           
 10744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 10745     0ABB  0020               	movlb	0	; select bank0
 10746     0ABC  0856               	movf	_width+1,w
 10747     0ABD  0021               	movlb	1	; select bank1
 10748     0ABE  00C5               	movwf	(dtoa@w+1)^(0+128)
 10749     0ABF  0020               	movlb	0	; select bank0
 10750     0AC0  0855               	movf	_width,w
 10751     0AC1  0021               	movlb	1	; select bank1
 10752     0AC2  00C4               	movwf	dtoa@w^(0+128)
 10753                           
 10754                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 10755     0AC3  0846               	movf	dtoa@s^(0+128),w
 10756     0AC4  1903               	btfsc	3,2
 10757     0AC5  2AD5               	goto	l1688
 10758                           
 10759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 10760     0AC6  30FF               	movlw	255
 10761     0AC7  07C4               	addwf	dtoa@w^(0+128),f
 10762     0AC8  30FF               	movlw	255
 10763     0AC9  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 10764                           
 10765                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 10766     0ACA  0846               	movf	dtoa@s^(0+128),w
 10767     0ACB  1D03               	btfss	3,2
 10768     0ACC  2ACF               	goto	l4175
 10769     0ACD  302B               	movlw	43
 10770     0ACE  2AD0               	goto	L2
 10771     0ACF                     l4175:
 10772     0ACF  302D               	movlw	45
 10773     0AD0                     L2:
 10774     0AD0  00C1               	movwf	_dtoa$2128^(0+128)
 10775     0AD1  3000               	movlw	0
 10776     0AD2  00C2               	movwf	(_dtoa$2128^(0+128)+1)
 10777     0AD3  0841               	movf	_dtoa$2128^(0+128),w
 10778     0AD4  00C6               	movwf	dtoa@s^(0+128)
 10779     0AD5                     l1688:	
 10780                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 10781                           
 10782                           
 10783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 10784     0AD5  301F               	movlw	31
 10785     0AD6  00C7               	movwf	dtoa@i^(0+128)
 10786     0AD7  3000               	movlw	0
 10787     0AD8  00C8               	movwf	(dtoa@i^(0+128)+1)
 10788                           
 10789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 10790     0AD9  0023               	movlb	3	; select bank3
 10791     0ADA  01BF               	clrf	(_dbuf^(0+384)+31)
 10792                           
 10793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10794     0ADB  2B25               	goto	l4189
 10795     0ADC                     l4191:
 10796     0ADC  0021               	movlb	1	; select bank1
 10797     0ADD  083E               	movf	dtoa@d^(0+128),w
 10798     0ADE  043F               	iorwf	(dtoa@d+1)^(0+128),w
 10799     0ADF  1D03               	btfss	3,2
 10800     0AE0  2AF2               	goto	l4179
 10801     0AE1  0843               	movf	dtoa@p^(0+128),w
 10802     0AE2  1D03               	btfss	3,2
 10803     0AE3  2AF2               	goto	l4179
 10804     0AE4  0845               	movf	(dtoa@w+1)^(0+128),w
 10805     0AE5  3A80               	xorlw	128
 10806     0AE6  00C0               	movwf	??_dtoa^(0+128)
 10807     0AE7  3080               	movlw	128
 10808     0AE8  0240               	subwf	??_dtoa^(0+128),w
 10809     0AE9  1D03               	skipz
 10810     0AEA  2AED               	goto	u4455
 10811     0AEB  3001               	movlw	1
 10812     0AEC  0244               	subwf	dtoa@w^(0+128),w
 10813     0AED                     u4455:
 10814     0AED  1C03               	skipc
 10815     0AEE  2B31               	goto	l4199
 10816     0AEF  0020               	movlb	0	; select bank0
 10817     0AF0  1CE3               	btfss	_flags,1
 10818     0AF1  2B31               	goto	l4199
 10819     0AF2                     l4179:
 10820                           
 10821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 10822     0AF2  30FF               	movlw	255
 10823     0AF3  0021               	movlb	1	; select bank1
 10824     0AF4  07C7               	addwf	dtoa@i^(0+128),f
 10825     0AF5  30FF               	movlw	255
 10826     0AF6  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 10827                           
 10828                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 10829     0AF7  0847               	movf	dtoa@i^(0+128),w
 10830     0AF8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10831     0AF9  0086               	movwf	6
 10832     0AFA  3001               	movlw	1	; select bank3/4
 10833     0AFB  0087               	movwf	7
 10834     0AFC  300A               	movlw	10
 10835     0AFD  00A0               	movwf	___awmod@divisor^(0+128)
 10836     0AFE  3000               	movlw	0
 10837     0AFF  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 10838     0B00  083F               	movf	(dtoa@d+1)^(0+128),w
 10839     0B01  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 10840     0B02  083E               	movf	dtoa@d^(0+128),w
 10841     0B03  00A2               	movwf	___awmod@dividend^(0+128)
 10842     0B04  3193  2357  318A   	fcall	___awmod
 10843     0B07  0821               	movf	(?___awmod+1)^(0+128),w
 10844     0B08  00A7               	movwf	(abs@a+1)^(0+128)
 10845     0B09  0820               	movf	?___awmod^(0+128),w
 10846     0B0A  00A6               	movwf	abs@a^(0+128)
 10847     0B0B  3190  2087  318A   	fcall	_abs
 10848     0B0E  0826               	movf	?_abs^(0+128),w
 10849     0B0F  3E30               	addlw	48
 10850     0B10  0081               	movwf	1
 10851                           
 10852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 10853     0B11  01C3               	clrf	dtoa@p^(0+128)
 10854                           
 10855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 10856     0B12  30FF               	movlw	255
 10857     0B13  07C4               	addwf	dtoa@w^(0+128),f
 10858     0B14  30FF               	movlw	255
 10859     0B15  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 10860                           
 10861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 10862     0B16  300A               	movlw	10
 10863     0B17  00A0               	movwf	___awdiv@divisor^(0+128)
 10864     0B18  3000               	movlw	0
 10865     0B19  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 10866     0B1A  083F               	movf	(dtoa@d+1)^(0+128),w
 10867     0B1B  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 10868     0B1C  083E               	movf	dtoa@d^(0+128),w
 10869     0B1D  00A2               	movwf	___awdiv@dividend^(0+128)
 10870     0B1E  3194  2471  318A   	fcall	___awdiv
 10871     0B21  0821               	movf	(?___awdiv+1)^(0+128),w
 10872     0B22  00BF               	movwf	(dtoa@d+1)^(0+128)
 10873     0B23  0820               	movf	?___awdiv^(0+128),w
 10874     0B24  00BE               	movwf	dtoa@d^(0+128)
 10875     0B25                     l4189:
 10876                           
 10877                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10878     0B25  0021               	movlb	1	; select bank1
 10879     0B26  0848               	movf	(dtoa@i+1)^(0+128),w
 10880     0B27  3A80               	xorlw	128
 10881     0B28  00C0               	movwf	??_dtoa^(0+128)
 10882     0B29  3080               	movlw	128
 10883     0B2A  0240               	subwf	??_dtoa^(0+128),w
 10884     0B2B  1D03               	skipz
 10885     0B2C  2B2F               	goto	u4425
 10886     0B2D  3001               	movlw	1
 10887     0B2E  0247               	subwf	dtoa@i^(0+128),w
 10888     0B2F                     u4425:
 10889     0B2F  1803               	btfsc	3,0
 10890     0B30  2ADC               	goto	l4191
 10891     0B31                     l4199:
 10892                           
 10893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 10894     0B31  0021               	movlb	1	; select bank1
 10895     0B32  0846               	movf	dtoa@s^(0+128),w
 10896     0B33  1903               	btfsc	3,2
 10897     0B34  2B40               	goto	l4205
 10898                           
 10899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 10900     0B35  30FF               	movlw	255
 10901     0B36  07C7               	addwf	dtoa@i^(0+128),f
 10902     0B37  30FF               	movlw	255
 10903     0B38  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 10904                           
 10905                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 10906     0B39  0847               	movf	dtoa@i^(0+128),w
 10907     0B3A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10908     0B3B  0086               	movwf	6
 10909     0B3C  3001               	movlw	1	; select bank3/4
 10910     0B3D  0087               	movwf	7
 10911     0B3E  0846               	movf	dtoa@s^(0+128),w
 10912     0B3F  0081               	movwf	1
 10913     0B40                     l4205:
 10914                           
 10915                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 10916     0B40  083D               	movf	(dtoa@fp+1)^(0+128),w
 10917     0B41  00B5               	movwf	(pad@fp+1)^(0+128)
 10918     0B42  083C               	movf	dtoa@fp^(0+128),w
 10919     0B43  00B4               	movwf	pad@fp^(0+128)
 10920     0B44  0847               	movf	dtoa@i^(0+128),w
 10921     0B45  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10922     0B46  00B6               	movwf	pad@buf^(0+128)
 10923     0B47  0845               	movf	(dtoa@w+1)^(0+128),w
 10924     0B48  00B8               	movwf	(pad@p+1)^(0+128)
 10925     0B49  0844               	movf	dtoa@w^(0+128),w
 10926     0B4A  00B7               	movwf	pad@p^(0+128)
 10927     0B4B  3193  2318         	fcall	_pad
 10928     0B4D  0008               	return
 10929     0B4E                     __end_of_dtoa:
 10930                           
 10931                           	psect	text21
 10932     1318                     __ptext21:	
 10933 ;; *************** function _pad *****************
 10934 ;; Defined at:
 10935 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 10938 ;;		 -> NULL(0), 
 10939 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 10940 ;;		 -> dbuf(32), 
 10941 ;;  p               2   23[BANK1 ] int 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  i               2   26[BANK1 ] int 
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  1    wreg      void 
 10946 ;; Registers used:
 10947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10948 ;; Tracked objects:
 10949 ;;		On entry : 1F/1
 10950 ;;		On exit  : 1E/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10953 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;Total ram usage:        8 bytes
 10958 ;; Hardware stack levels used: 1
 10959 ;; Hardware stack levels required when called: 9
 10960 ;; This function calls:
 10961 ;;		_fputc
 10962 ;;		_fputs
 10963 ;; This function is called by:
 10964 ;;		_dtoa
 10965 ;;		_utoa
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969     1318                     _pad:	
 10970                           ;psect for function _pad
 10971                           
 10972                           
 10973                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 10974                           
 10975                           ;incstack = 0
 10976                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10977     1318  0020               	movlb	0	; select bank0
 10978     1319  1C63               	btfss	_flags,0
 10979     131A  2B25               	goto	l4129
 10980                           
 10981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 10982     131B  0021               	movlb	1	; select bank1
 10983     131C  0836               	movf	pad@buf^(0+128),w
 10984     131D  00AC               	movwf	fputs@s^(0+128)
 10985     131E  0835               	movf	(pad@fp+1)^(0+128),w
 10986     131F  00AE               	movwf	(fputs@fp+1)^(0+128)
 10987     1320  0834               	movf	pad@fp^(0+128),w
 10988     1321  00AD               	movwf	fputs@fp^(0+128)
 10989     1322  3192  223C  3193   	fcall	_fputs
 10990     1325                     l4129:
 10991                           
 10992                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 10993     1325  0021               	movlb	1	; select bank1
 10994     1326  1FB8               	btfss	(pad@p+1)^(0+128),7
 10995     1327  2B2A               	goto	l1680
 10996                           
 10997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 10998     1328  01B7               	clrf	pad@p^(0+128)
 10999     1329  01B8               	clrf	(pad@p+1)^(0+128)
 11000     132A                     l1680:	
 11001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 11002                           
 11003                           
 11004                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11005     132A  01BA               	clrf	pad@i^(0+128)
 11006     132B  01BB               	clrf	(pad@i+1)^(0+128)
 11007     132C                     l4137:	
 11008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11009                           
 11010                           
 11011                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11012     132C  083B               	movf	(pad@i+1)^(0+128),w
 11013     132D  3A80               	xorlw	128
 11014     132E  00B9               	movwf	??_pad^(0+128)
 11015     132F  0838               	movf	(pad@p+1)^(0+128),w
 11016     1330  3A80               	xorlw	128
 11017     1331  0239               	subwf	??_pad^(0+128),w
 11018     1332  1D03               	skipz
 11019     1333  2B36               	goto	u4325
 11020     1334  0837               	movf	pad@p^(0+128),w
 11021     1335  023A               	subwf	pad@i^(0+128),w
 11022     1336                     u4325:
 11023     1336  1803               	btfsc	3,0
 11024     1337  2B4A               	goto	l1683
 11025                           
 11026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11027     1338  3020               	movlw	32
 11028     1339  0021               	movlb	1	; select bank1
 11029     133A  00A3               	movwf	fputc@c^(0+128)
 11030     133B  3000               	movlw	0
 11031     133C  00A4               	movwf	(fputc@c^(0+128)+1)
 11032     133D  0835               	movf	(pad@fp+1)^(0+128),w
 11033     133E  00A6               	movwf	(fputc@fp+1)^(0+128)
 11034     133F  0834               	movf	pad@fp^(0+128),w
 11035     1340  00A5               	movwf	fputc@fp^(0+128)
 11036     1341  3195  250B  3193   	fcall	_fputc
 11037                           
 11038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11039     1344  3001               	movlw	1
 11040     1345  0021               	movlb	1	; select bank1
 11041     1346  07BA               	addwf	pad@i^(0+128),f
 11042     1347  3000               	movlw	0
 11043     1348  3DBB               	addwfc	(pad@i+1)^(0+128),f
 11044     1349  2B2C               	goto	l4137
 11045     134A                     l1683:
 11046                           
 11047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 11048     134A  0020               	movlb	0	; select bank0
 11049     134B  1863               	btfsc	_flags,0
 11050     134C  0008               	return
 11051                           
 11052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11053     134D  0021               	movlb	1	; select bank1
 11054     134E  0836               	movf	pad@buf^(0+128),w
 11055     134F  00AC               	movwf	fputs@s^(0+128)
 11056     1350  0835               	movf	(pad@fp+1)^(0+128),w
 11057     1351  00AE               	movwf	(fputs@fp+1)^(0+128)
 11058     1352  0834               	movf	pad@fp^(0+128),w
 11059     1353  00AD               	movwf	fputs@fp^(0+128)
 11060     1354  3192  223C         	fcall	_fputs
 11061     1356  0008               	return
 11062     1357                     __end_of_pad:
 11063                           
 11064                           	psect	text22
 11065     123C                     __ptext22:	
 11066 ;; *************** function _fputs *****************
 11067 ;; Defined at:
 11068 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 11071 ;;		 -> dbuf(32), 
 11072 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 11073 ;;		 -> NULL(0), 
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;  i               2   18[BANK1 ] int 
 11076 ;;  c               1   17[BANK1 ] unsigned char 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  2   12[BANK1 ] int 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 1F/1
 11083 ;;		On exit  : 1F/1
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11086 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11088 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11089 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;Total ram usage:        8 bytes
 11091 ;; Hardware stack levels used: 1
 11092 ;; Hardware stack levels required when called: 8
 11093 ;; This function calls:
 11094 ;;		_fputc
 11095 ;; This function is called by:
 11096 ;;		_pad
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100     123C                     _fputs:	
 11101                           ;psect for function _fputs
 11102                           
 11103                           
 11104                           ;incstack = 0
 11105                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11106     123C  01B2               	clrf	fputs@i^(0+128)
 11107     123D  01B3               	clrf	(fputs@i+1)^(0+128)
 11108     123E                     l3979:
 11109     123E  082C               	movf	fputs@s^(0+128),w
 11110     123F  0732               	addwf	fputs@i^(0+128),w
 11111     1240  0086               	movwf	6
 11112     1241  3001               	movlw	1	; select bank2/3
 11113     1242  0087               	movwf	7
 11114     1243  0801               	movf	1,w
 11115     1244  00B1               	movwf	fputs@c^(0+128)
 11116     1245  0831               	movf	fputs@c^(0+128),w
 11117     1246  1903               	btfsc	3,2
 11118     1247  0008               	return
 11119     1248  0831               	movf	fputs@c^(0+128),w
 11120     1249  00AF               	movwf	??_fputs^(0+128)
 11121     124A  01B0               	clrf	(??_fputs^(0+128)+1)
 11122     124B  082F               	movf	??_fputs^(0+128),w
 11123     124C  00A3               	movwf	fputc@c^(0+128)
 11124     124D  0830               	movf	(??_fputs+1)^(0+128),w
 11125     124E  00A4               	movwf	(fputc@c+1)^(0+128)
 11126     124F  082E               	movf	(fputs@fp+1)^(0+128),w
 11127     1250  00A6               	movwf	(fputc@fp+1)^(0+128)
 11128     1251  082D               	movf	fputs@fp^(0+128),w
 11129     1252  00A5               	movwf	fputc@fp^(0+128)
 11130     1253  3195  250B  3192   	fcall	_fputc
 11131     1256  3001               	movlw	1
 11132     1257  0021               	movlb	1	; select bank1
 11133     1258  07B2               	addwf	fputs@i^(0+128),f
 11134     1259  3000               	movlw	0
 11135     125A  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 11136     125B  2A3E               	goto	l3979
 11137     125C                     __end_of_fputs:
 11138                           
 11139                           	psect	text23
 11140     150B                     __ptext23:	
 11141 ;; *************** function _fputc *****************
 11142 ;; Defined at:
 11143 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;  c               2    3[BANK1 ] int 
 11146 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 11147 ;;		 -> NULL(0), 
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;		None
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  2    3[BANK1 ] int 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11154 ;; Tracked objects:
 11155 ;;		On entry : 1F/1
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11159 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;Total ram usage:        9 bytes
 11164 ;; Hardware stack levels used: 1
 11165 ;; Hardware stack levels required when called: 7
 11166 ;; This function calls:
 11167 ;;		_putch
 11168 ;; This function is called by:
 11169 ;;		_pad
 11170 ;;		_vfpfcnvrt
 11171 ;;		_fputs
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175     150B                     _fputc:	
 11176                           ;psect for function _fputc
 11177                           
 11178                           
 11179                           ;incstack = 0
 11180                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11181     150B  0825               	movf	fputc@fp^(0+128),w
 11182     150C  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11183     150D  1903               	btfsc	3,2
 11184     150E  2D13               	goto	l3961
 11185     150F  0825               	movf	fputc@fp^(0+128),w
 11186     1510  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11187     1511  1D03               	btfss	3,2
 11188     1512  2D17               	goto	l3963
 11189     1513                     l3961:
 11190     1513  0823               	movf	fputc@c^(0+128),w
 11191     1514  3190  206C         	fcall	_putch
 11192     1516  0008               	return
 11193     1517                     l3963:
 11194     1517  0825               	movf	fputc@fp^(0+128),w
 11195     1518  0086               	movwf	6
 11196     1519  0826               	movf	(fputc@fp+1)^(0+128),w
 11197     151A  0087               	movwf	7
 11198     151B  3149               	addfsr 1,9
 11199     151C  0016               	moviw fsr1++
 11200     151D  0401               	iorwf	1,w
 11201     151E  1903               	btfsc	3,2
 11202     151F  2D3E               	goto	l3967
 11203     1520  0825               	movf	fputc@fp^(0+128),w
 11204     1521  0086               	movwf	6
 11205     1522  0826               	movf	(fputc@fp+1)^(0+128),w
 11206     1523  0087               	movwf	7
 11207     1524  3149               	addfsr 1,9
 11208     1525  3F40               	moviw [0]fsr1
 11209     1526  00A7               	movwf	??_fputc^(0+128)
 11210     1527  3F41               	moviw [1]fsr1
 11211     1528  00A8               	movwf	(??_fputc^(0+128)+1)
 11212     1529  0825               	movf	fputc@fp^(0+128),w
 11213     152A  0086               	movwf	6
 11214     152B  0826               	movf	(fputc@fp+1)^(0+128),w
 11215     152C  0087               	movwf	7
 11216     152D  3142               	addfsr 1,2
 11217     152E  3F40               	moviw [0]fsr1
 11218     152F  00A9               	movwf	(??_fputc+2)^(0+128)
 11219     1530  3F41               	moviw [1]fsr1
 11220     1531  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 11221     1532  082A               	movf	(??_fputc+3)^(0+128),w
 11222     1533  3A80               	xorlw	128
 11223     1534  00AB               	movwf	(??_fputc+4)^(0+128)
 11224     1535  0828               	movf	(??_fputc+1)^(0+128),w
 11225     1536  3A80               	xorlw	128
 11226     1537  022B               	subwf	(??_fputc+4)^(0+128),w
 11227     1538  1D03               	skipz
 11228     1539  2D3C               	goto	u3925
 11229     153A  0827               	movf	??_fputc^(0+128),w
 11230     153B  0229               	subwf	(??_fputc+2)^(0+128),w
 11231     153C                     u3925:
 11232     153C  1803               	skipnc
 11233     153D  0008               	return
 11234     153E                     l3967:
 11235     153E  0021               	movlb	1	; select bank1
 11236     153F  0825               	movf	fputc@fp^(0+128),w
 11237     1540  0086               	movwf	6
 11238     1541  0826               	movf	(fputc@fp+1)^(0+128),w
 11239     1542  0087               	movwf	7
 11240     1543  3142               	addfsr 1,2
 11241     1544  0825               	movf	fputc@fp^(0+128),w
 11242     1545  0084               	movwf	4
 11243     1546  0826               	movf	(fputc@fp+1)^(0+128),w
 11244     1547  0085               	movwf	5
 11245     1548  3F00               	moviw [0]fsr0
 11246     1549  00A7               	movwf	??_fputc^(0+128)
 11247     154A  3F01               	moviw [1]fsr0
 11248     154B  00A8               	movwf	(??_fputc^(0+128)+1)
 11249     154C  3F40               	moviw [0]fsr1
 11250     154D  0727               	addwf	??_fputc^(0+128),w
 11251     154E  0084               	movwf	4
 11252     154F  3F41               	moviw [1]fsr1
 11253     1550  3D28               	addwfc	(??_fputc+1)^(0+128),w
 11254     1551  0085               	movwf	5
 11255     1552  0823               	movf	fputc@c^(0+128),w
 11256     1553  0080               	movwf	0
 11257     1554  0825               	movf	fputc@fp^(0+128),w
 11258     1555  0086               	movwf	6
 11259     1556  0826               	movf	(fputc@fp+1)^(0+128),w
 11260     1557  0087               	movwf	7
 11261     1558  3142               	addfsr 1,2
 11262     1559  3001               	movlw	1
 11263     155A  0781               	addwf	1,f
 11264     155B  3141               	addfsr 1,1
 11265     155C  1803               	skipnc
 11266     155D  0A81               	incf	1,f
 11267     155E  0008               	return
 11268     155F                     __end_of_fputc:
 11269                           
 11270                           	psect	text24
 11271     106C                     __ptext24:	
 11272 ;; *************** function _putch *****************
 11273 ;; Defined at:
 11274 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  txData          1    wreg     unsigned char 
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;  txData          1    2[BANK1 ] unsigned char 
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 1F/1
 11285 ;;		On exit  : 1F/1
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;Total ram usage:        1 bytes
 11293 ;; Hardware stack levels used: 1
 11294 ;; Hardware stack levels required when called: 6
 11295 ;; This function calls:
 11296 ;;		_EUSART_IsTxReady
 11297 ;;		_EUSART_Write
 11298 ;; This function is called by:
 11299 ;;		_fputc
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303     106C                     _putch:	
 11304                           ;psect for function _putch
 11305                           
 11306                           
 11307                           ;incstack = 0
 11308                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11309                           ;putch@txData stored from wreg
 11310     106C  00A2               	movwf	putch@txData^(0+128)
 11311     106D                     l3951:	
 11312                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 11313                           
 11314                           
 11315                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 11316     106D  319F  2774  3190   	fcall	_EUSART_IsTxReady
 11317     1070  3A00               	xorlw	0
 11318     1071  1903               	skipnz
 11319     1072  286D               	goto	l3951
 11320                           
 11321                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 11322     1073  0021               	movlb	1	; select bank1
 11323     1074  0822               	movf	putch@txData^(0+128),w
 11324     1075  00A0               	movwf	EUSART_Write@txData^(0+128)
 11325     1076  3187  27D9         	fcall	_EUSART_Write
 11326     1078  0008               	return
 11327     1079                     __end_of_putch:
 11328                           
 11329                           	psect	text25
 11330     07D9                     __ptext25:	
 11331 ;; *************** function _EUSART_Write *****************
 11332 ;; Defined at:
 11333 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  txData          1    0[BANK1 ] unsigned char 
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 11338 ;; Return value:  Size  Location     Type
 11339 ;;                  1    wreg      void 
 11340 ;; Registers used:
 11341 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11342 ;; Tracked objects:
 11343 ;;		On entry : 1F/1
 11344 ;;		On exit  : 1F/1
 11345 ;;		Unchanged: 0/0
 11346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11347 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;Total ram usage:        2 bytes
 11352 ;; Hardware stack levels used: 1
 11353 ;; Hardware stack levels required when called: 5
 11354 ;; This function calls:
 11355 ;;		Nothing
 11356 ;; This function is called by:
 11357 ;;		_putch
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361     07D9                     _EUSART_Write:	
 11362                           ;psect for function _EUSART_Write
 11363                           
 11364                           
 11365                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 11366                           
 11367                           ;incstack = 0
 11368                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11369     07D9  1A11               	btfsc	17,4	;volatile
 11370     07DA  2FDF               	goto	l3937
 11371                           
 11372                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 11373     07DB  0820               	movf	EUSART_Write@txData^(0+128),w
 11374     07DC  0023               	movlb	3	; select bank3
 11375     07DD  009A               	movwf	26	;volatile
 11376                           
 11377                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 11378     07DE  2FF9               	goto	l721
 11379     07DF                     l3937:
 11380     07DF  0020               	movlb	0	; select bank0
 11381     07E0  0869               	movf	_eusartTxBufferRemaining,w
 11382     07E1  1903               	btfsc	3,2
 11383     07E2  2FF9               	goto	l721
 11384                           
 11385                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 11386     07E3  086B               	movf	_eusartTxHead,w
 11387     07E4  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11388     07E5  0086               	movwf	6
 11389     07E6  3001               	movlw	1	; select bank2/3
 11390     07E7  0087               	movwf	7
 11391     07E8  0021               	movlb	1	; select bank1
 11392     07E9  0820               	movf	EUSART_Write@txData^(0+128),w
 11393     07EA  0081               	movwf	1
 11394                           
 11395                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 11396     07EB  0020               	movlb	0	; select bank0
 11397     07EC  086B               	movf	_eusartTxHead,w	;volatile
 11398     07ED  3E01               	addlw	1
 11399     07EE  3907               	andlw	7
 11400     07EF  0021               	movlb	1	; select bank1
 11401     07F0  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 11402                           
 11403                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 11404     07F1  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 11405     07F2  0020               	movlb	0	; select bank0
 11406     07F3  00EB               	movwf	_eusartTxHead	;volatile
 11407                           
 11408                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 11409     07F4  0021               	movlb	1	; select bank1
 11410     07F5  1211               	bcf	17,4	;volatile
 11411                           
 11412                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 11413     07F6  3001               	movlw	1
 11414     07F7  0020               	movlb	0	; select bank0
 11415     07F8  02E9               	subwf	_eusartTxBufferRemaining,f	;volatile
 11416     07F9                     l721:	
 11417                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 11418                           
 11419                           
 11420                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 11421     07F9  0021               	movlb	1	; select bank1
 11422     07FA  1611               	bsf	17,4	;volatile
 11423     07FB  0008               	return
 11424     07FC                     __end_of_EUSART_Write:
 11425                           
 11426                           	psect	text26
 11427     1F74                     __ptext26:	
 11428 ;; *************** function _EUSART_IsTxReady *****************
 11429 ;; Defined at:
 11430 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      _Bool 
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0
 11439 ;; Tracked objects:
 11440 ;;		On entry : 1E/1
 11441 ;;		On exit  : 1F/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;Total ram usage:        0 bytes
 11449 ;; Hardware stack levels used: 1
 11450 ;; Hardware stack levels required when called: 5
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_putch
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458     1F74                     _EUSART_IsTxReady:	
 11459                           ;psect for function _EUSART_IsTxReady
 11460                           
 11461                           
 11462                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 11463                           
 11464                           ;incstack = 0
 11465                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 11466     1F74  0020               	movlb	0	; select bank0
 11467     1F75  0869               	movf	_eusartTxBufferRemaining,w	;volatile
 11468     1F76  1903               	btfsc	3,2
 11469     1F77  2F7A               	goto	u3840
 11470     1F78  3001               	movlw	1
 11471     1F79  0008               	return
 11472     1F7A                     u3840:
 11473     1F7A  3000               	movlw	0
 11474     1F7B  0008               	return
 11475     1F7C                     __end_of_EUSART_IsTxReady:
 11476                           
 11477                           	psect	text27
 11478     1087                     __ptext27:	
 11479 ;; *************** function _abs *****************
 11480 ;; Defined at:
 11481 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  a               2    6[BANK1 ] int 
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;		None
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  2    6[BANK1 ] int 
 11488 ;; Registers used:
 11489 ;;		wreg, status,2, status,0
 11490 ;; Tracked objects:
 11491 ;;		On entry : 1F/1
 11492 ;;		On exit  : 1F/1
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:        4 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 5
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_dtoa
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509     1087                     _abs:	
 11510                           ;psect for function _abs
 11511                           
 11512                           
 11513                           ;incstack = 0
 11514                           ; Regs used in _abs: [wreg+status,2+status,0]
 11515     1087  1FA7               	btfss	(abs@a+1)^(0+128),7
 11516     1088  0008               	return
 11517     1089  0926               	comf	abs@a^(0+128),w
 11518     108A  00A8               	movwf	??_abs^(0+128)
 11519     108B  0927               	comf	(abs@a+1)^(0+128),w
 11520     108C  00A9               	movwf	(??_abs^(0+128)+1)
 11521     108D  0AA8               	incf	??_abs^(0+128),f
 11522     108E  1903               	skipnz
 11523     108F  0AA9               	incf	(??_abs^(0+128)+1),f
 11524     1090  0828               	movf	??_abs^(0+128),w
 11525     1091  00A6               	movwf	?_abs^(0+128)
 11526     1092  0829               	movf	(??_abs+1)^(0+128),w
 11527     1093  00A7               	movwf	(?_abs+1)^(0+128)
 11528     1094  0008               	return
 11529     1095                     __end_of_abs:
 11530                           
 11531                           	psect	text28
 11532     1357                     __ptext28:	
 11533 ;; *************** function ___awmod *****************
 11534 ;; Defined at:
 11535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  divisor         2    0[BANK1 ] int 
 11538 ;;  dividend        2    2[BANK1 ] int 
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;  sign            1    5[BANK1 ] unsigned char 
 11541 ;;  counter         1    4[BANK1 ] unsigned char 
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  2    0[BANK1 ] int 
 11544 ;; Registers used:
 11545 ;;		wreg, status,2, status,0
 11546 ;; Tracked objects:
 11547 ;;		On entry : 1F/1
 11548 ;;		On exit  : 1F/1
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11551 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;Total ram usage:        6 bytes
 11556 ;; Hardware stack levels used: 1
 11557 ;; Hardware stack levels required when called: 5
 11558 ;; This function calls:
 11559 ;;		Nothing
 11560 ;; This function is called by:
 11561 ;;		_dtoa
 11562 ;; This function uses a non-reentrant model
 11563 ;;
 11564                           
 11565     1357                     ___awmod:	
 11566                           ;psect for function ___awmod
 11567                           
 11568                           
 11569                           ;incstack = 0
 11570                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11571     1357  01A5               	clrf	___awmod@sign^(0+128)
 11572     1358  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 11573     1359  2B61               	goto	l4047
 11574     135A  09A2               	comf	___awmod@dividend^(0+128),f
 11575     135B  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 11576     135C  0AA2               	incf	___awmod@dividend^(0+128),f
 11577     135D  1903               	skipnz
 11578     135E  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 11579     135F  3001               	movlw	1
 11580     1360  00A5               	movwf	___awmod@sign^(0+128)
 11581     1361                     l4047:
 11582     1361  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 11583     1362  2B68               	goto	l4051
 11584     1363  09A0               	comf	___awmod@divisor^(0+128),f
 11585     1364  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 11586     1365  0AA0               	incf	___awmod@divisor^(0+128),f
 11587     1366  1903               	skipnz
 11588     1367  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 11589     1368                     l4051:
 11590     1368  0820               	movf	___awmod@divisor^(0+128),w
 11591     1369  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 11592     136A  1903               	btfsc	3,2
 11593     136B  2B8D               	goto	l4069
 11594     136C  3001               	movlw	1
 11595     136D  00A4               	movwf	___awmod@counter^(0+128)
 11596     136E                     l4059:
 11597     136E  1BA1               	btfsc	(___awmod@divisor+1)^(0+128),7
 11598     136F  2B78               	goto	l4061
 11599     1370  3001               	movlw	1
 11600     1371                     u4115:
 11601     1371  35A0               	lslf	___awmod@divisor^(0+128),f
 11602     1372  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 11603     1373  0B89               	decfsz	9,f
 11604     1374  2B71               	goto	u4115
 11605     1375  3001               	movlw	1
 11606     1376  07A4               	addwf	___awmod@counter^(0+128),f
 11607     1377  2B6E               	goto	l4059
 11608     1378                     l4061:
 11609     1378  0821               	movf	(___awmod@divisor+1)^(0+128),w
 11610     1379  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 11611     137A  1D03               	skipz
 11612     137B  2B7E               	goto	u4135
 11613     137C  0820               	movf	___awmod@divisor^(0+128),w
 11614     137D  0222               	subwf	___awmod@dividend^(0+128),w
 11615     137E                     u4135:
 11616     137E  1C03               	skipc
 11617     137F  2B84               	goto	l4065
 11618     1380  0820               	movf	___awmod@divisor^(0+128),w
 11619     1381  02A2               	subwf	___awmod@dividend^(0+128),f
 11620     1382  0821               	movf	(___awmod@divisor+1)^(0+128),w
 11621     1383  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 11622     1384                     l4065:
 11623     1384  3001               	movlw	1
 11624     1385                     u4145:
 11625     1385  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 11626     1386  0CA0               	rrf	___awmod@divisor^(0+128),f
 11627     1387  0B89               	decfsz	9,f
 11628     1388  2B85               	goto	u4145
 11629     1389  3001               	movlw	1
 11630     138A  02A4               	subwf	___awmod@counter^(0+128),f
 11631     138B  1D03               	btfss	3,2
 11632     138C  2B78               	goto	l4061
 11633     138D                     l4069:
 11634     138D  0825               	movf	___awmod@sign^(0+128),w
 11635     138E  1903               	btfsc	3,2
 11636     138F  2B95               	goto	l4073
 11637     1390  09A2               	comf	___awmod@dividend^(0+128),f
 11638     1391  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 11639     1392  0AA2               	incf	___awmod@dividend^(0+128),f
 11640     1393  1903               	skipnz
 11641     1394  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 11642     1395                     l4073:
 11643     1395  0823               	movf	(___awmod@dividend+1)^(0+128),w
 11644     1396  00A1               	movwf	(?___awmod+1)^(0+128)
 11645     1397  0822               	movf	___awmod@dividend^(0+128),w
 11646     1398  00A0               	movwf	?___awmod^(0+128)
 11647     1399  0008               	return
 11648     139A                     __end_of___awmod:
 11649                           
 11650                           	psect	text29
 11651     1471                     __ptext29:	
 11652 ;; *************** function ___awdiv *****************
 11653 ;; Defined at:
 11654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;  divisor         2    0[BANK1 ] int 
 11657 ;;  dividend        2    2[BANK1 ] int 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;  quotient        2    6[BANK1 ] int 
 11660 ;;  sign            1    5[BANK1 ] unsigned char 
 11661 ;;  counter         1    4[BANK1 ] unsigned char 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  2    0[BANK1 ] int 
 11664 ;; Registers used:
 11665 ;;		wreg, status,2, status,0
 11666 ;; Tracked objects:
 11667 ;;		On entry : 1F/1
 11668 ;;		On exit  : 1F/1
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11671 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;Total ram usage:        8 bytes
 11676 ;; Hardware stack levels used: 1
 11677 ;; Hardware stack levels required when called: 5
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_dtoa
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685     1471                     ___awdiv:	
 11686                           ;psect for function ___awdiv
 11687                           
 11688                           
 11689                           ;incstack = 0
 11690                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11691     1471  01A5               	clrf	___awdiv@sign^(0+128)
 11692     1472  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 11693     1473  2C7B               	goto	l4003
 11694     1474  09A0               	comf	___awdiv@divisor^(0+128),f
 11695     1475  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 11696     1476  0AA0               	incf	___awdiv@divisor^(0+128),f
 11697     1477  1903               	skipnz
 11698     1478  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 11699     1479  3001               	movlw	1
 11700     147A  00A5               	movwf	___awdiv@sign^(0+128)
 11701     147B                     l4003:
 11702     147B  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 11703     147C  2C84               	goto	l4009
 11704     147D  09A2               	comf	___awdiv@dividend^(0+128),f
 11705     147E  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 11706     147F  0AA2               	incf	___awdiv@dividend^(0+128),f
 11707     1480  1903               	skipnz
 11708     1481  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 11709     1482  3001               	movlw	1
 11710     1483  06A5               	xorwf	___awdiv@sign^(0+128),f
 11711     1484                     l4009:
 11712     1484  01A6               	clrf	___awdiv@quotient^(0+128)
 11713     1485  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 11714     1486  0820               	movf	___awdiv@divisor^(0+128),w
 11715     1487  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 11716     1488  1903               	btfsc	3,2
 11717     1489  2CB1               	goto	l4031
 11718     148A  3001               	movlw	1
 11719     148B  00A4               	movwf	___awdiv@counter^(0+128)
 11720     148C                     l4019:
 11721     148C  1BA1               	btfsc	(___awdiv@divisor+1)^(0+128),7
 11722     148D  2C96               	goto	l4021
 11723     148E  3001               	movlw	1
 11724     148F                     u4015:
 11725     148F  35A0               	lslf	___awdiv@divisor^(0+128),f
 11726     1490  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 11727     1491  0B89               	decfsz	9,f
 11728     1492  2C8F               	goto	u4015
 11729     1493  3001               	movlw	1
 11730     1494  07A4               	addwf	___awdiv@counter^(0+128),f
 11731     1495  2C8C               	goto	l4019
 11732     1496                     l4021:
 11733     1496  3001               	movlw	1
 11734     1497                     u4035:
 11735     1497  35A6               	lslf	___awdiv@quotient^(0+128),f
 11736     1498  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 11737     1499  0B89               	decfsz	9,f
 11738     149A  2C97               	goto	u4035
 11739     149B  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 11740     149C  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 11741     149D  1D03               	skipz
 11742     149E  2CA1               	goto	u4045
 11743     149F  0820               	movf	___awdiv@divisor^(0+128),w
 11744     14A0  0222               	subwf	___awdiv@dividend^(0+128),w
 11745     14A1                     u4045:
 11746     14A1  1C03               	skipc
 11747     14A2  2CA8               	goto	l4027
 11748     14A3  0820               	movf	___awdiv@divisor^(0+128),w
 11749     14A4  02A2               	subwf	___awdiv@dividend^(0+128),f
 11750     14A5  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 11751     14A6  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 11752     14A7  1426               	bsf	___awdiv@quotient^(0+128),0
 11753     14A8                     l4027:
 11754     14A8  3001               	movlw	1
 11755     14A9                     u4055:
 11756     14A9  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 11757     14AA  0CA0               	rrf	___awdiv@divisor^(0+128),f
 11758     14AB  0B89               	decfsz	9,f
 11759     14AC  2CA9               	goto	u4055
 11760     14AD  3001               	movlw	1
 11761     14AE  02A4               	subwf	___awdiv@counter^(0+128),f
 11762     14AF  1D03               	btfss	3,2
 11763     14B0  2C96               	goto	l4021
 11764     14B1                     l4031:
 11765     14B1  0825               	movf	___awdiv@sign^(0+128),w
 11766     14B2  1903               	btfsc	3,2
 11767     14B3  2CB9               	goto	l4035
 11768     14B4  09A6               	comf	___awdiv@quotient^(0+128),f
 11769     14B5  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 11770     14B6  0AA6               	incf	___awdiv@quotient^(0+128),f
 11771     14B7  1903               	skipnz
 11772     14B8  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 11773     14B9                     l4035:
 11774     14B9  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 11775     14BA  00A1               	movwf	(?___awdiv+1)^(0+128)
 11776     14BB  0826               	movf	___awdiv@quotient^(0+128),w
 11777     14BC  00A0               	movwf	?___awdiv^(0+128)
 11778     14BD  0008               	return
 11779     14BE                     __end_of___awdiv:
 11780                           
 11781                           	psect	text30
 11782     11A5                     __ptext30:	
 11783 ;; *************** function ___flsub *****************
 11784 ;; Defined at:
 11785 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;  a               4   34[BANK1 ] int 
 11788 ;;  b               4   38[BANK1 ] int 
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;		None
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  4   34[BANK1 ] int 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2, status,0, pclath, cstack
 11795 ;; Tracked objects:
 11796 ;;		On entry : 1F/1
 11797 ;;		On exit  : 1F/1
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11800 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;Total ram usage:        8 bytes
 11805 ;; Hardware stack levels used: 1
 11806 ;; Hardware stack levels required when called: 6
 11807 ;; This function calls:
 11808 ;;		___fladd
 11809 ;; This function is called by:
 11810 ;;		_printFloat
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814     11A5                     ___flsub:	
 11815                           ;psect for function ___flsub
 11816                           
 11817                           
 11818                           ;incstack = 0
 11819                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11820     11A5  3080               	movlw	128
 11821     11A6  06C5               	xorwf	(___flsub@a+3)^(0+128),f
 11822     11A7  0849               	movf	(___flsub@b+3)^(0+128),w
 11823     11A8  00B1               	movwf	(___fladd@b+3)^(0+128)
 11824     11A9  0848               	movf	(___flsub@b+2)^(0+128),w
 11825     11AA  00B0               	movwf	(___fladd@b+2)^(0+128)
 11826     11AB  0847               	movf	(___flsub@b+1)^(0+128),w
 11827     11AC  00AF               	movwf	(___fladd@b+1)^(0+128)
 11828     11AD  0846               	movf	___flsub@b^(0+128),w
 11829     11AE  00AE               	movwf	___fladd@b^(0+128)
 11830     11AF  0845               	movf	(___flsub@a+3)^(0+128),w
 11831     11B0  00B5               	movwf	(___fladd@a+3)^(0+128)
 11832     11B1  0844               	movf	(___flsub@a+2)^(0+128),w
 11833     11B2  00B4               	movwf	(___fladd@a+2)^(0+128)
 11834     11B3  0843               	movf	(___flsub@a+1)^(0+128),w
 11835     11B4  00B3               	movwf	(___fladd@a+1)^(0+128)
 11836     11B5  0842               	movf	___flsub@a^(0+128),w
 11837     11B6  00B2               	movwf	___fladd@a^(0+128)
 11838     11B7  3184  246D         	fcall	___fladd
 11839     11B9  0831               	movf	(?___fladd+3)^(0+128),w
 11840     11BA  00C5               	movwf	(?___flsub+3)^(0+128)
 11841     11BB  0830               	movf	(?___fladd+2)^(0+128),w
 11842     11BC  00C4               	movwf	(?___flsub+2)^(0+128)
 11843     11BD  082F               	movf	(?___fladd+1)^(0+128),w
 11844     11BE  00C3               	movwf	(?___flsub+1)^(0+128)
 11845     11BF  082E               	movf	?___fladd^(0+128),w
 11846     11C0  00C2               	movwf	?___flsub^(0+128)
 11847     11C1  0008               	return
 11848     11C2                     __end_of___flsub:
 11849                           
 11850                           	psect	text31
 11851     0801                     __ptext31:	
 11852 ;; *************** function _getKp *****************
 11853 ;; Defined at:
 11854 ;;		line 41 in file "controller.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;		None
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;		None
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  4    0[BANK1 ] float 
 11861 ;; Registers used:
 11862 ;;		wreg
 11863 ;; Tracked objects:
 11864 ;;		On entry : 1F/1
 11865 ;;		On exit  : 1F/1
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11868 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11871 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;Total ram usage:        4 bytes
 11873 ;; Hardware stack levels used: 1
 11874 ;; Hardware stack levels required when called: 5
 11875 ;; This function calls:
 11876 ;;		Nothing
 11877 ;; This function is called by:
 11878 ;;		_printLogs
 11879 ;; This function uses a non-reentrant model
 11880 ;;
 11881                           
 11882     0801                     _getKp:	
 11883                           ;psect for function _getKp
 11884                           
 11885                           
 11886                           ;incstack = 0
 11887                           ; Regs used in _getKp: [wreg]
 11888     0801  0022               	movlb	2	; select bank2
 11889     0802  086F               	movf	(_kp+3)^(0+256),w
 11890     0803  0021               	movlb	1	; select bank1
 11891     0804  00A3               	movwf	(?_getKp+3)^(0+128)
 11892     0805  0022               	movlb	2	; select bank2
 11893     0806  086E               	movf	(_kp+2)^(0+256),w
 11894     0807  0021               	movlb	1	; select bank1
 11895     0808  00A2               	movwf	(?_getKp+2)^(0+128)
 11896     0809  0022               	movlb	2	; select bank2
 11897     080A  086D               	movf	(_kp+1)^(0+256),w
 11898     080B  0021               	movlb	1	; select bank1
 11899     080C  00A1               	movwf	(?_getKp+1)^(0+128)
 11900     080D  0022               	movlb	2	; select bank2
 11901     080E  086C               	movf	_kp^(0+256),w
 11902     080F  0021               	movlb	1	; select bank1
 11903     0810  00A0               	movwf	?_getKp^(0+128)
 11904     0811  0008               	return
 11905     0812                     __end_of_getKp:
 11906                           
 11907                           	psect	text32
 11908     10D5                     __ptext32:	
 11909 ;; *************** function _getKi *****************
 11910 ;; Defined at:
 11911 ;;		line 42 in file "controller.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;		None
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;		None
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  4    0[BANK1 ] float 
 11918 ;; Registers used:
 11919 ;;		wreg
 11920 ;; Tracked objects:
 11921 ;;		On entry : 1F/1
 11922 ;;		On exit  : 1F/1
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11925 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;Total ram usage:        4 bytes
 11930 ;; Hardware stack levels used: 1
 11931 ;; Hardware stack levels required when called: 5
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_printLogs
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939     10D5                     _getKi:	
 11940                           ;psect for function _getKi
 11941                           
 11942                           
 11943                           ;incstack = 0
 11944                           ; Regs used in _getKi: [wreg]
 11945     10D5  0022               	movlb	2	; select bank2
 11946     10D6  086B               	movf	(_ki+3)^(0+256),w
 11947     10D7  0021               	movlb	1	; select bank1
 11948     10D8  00A3               	movwf	(?_getKi+3)^(0+128)
 11949     10D9  0022               	movlb	2	; select bank2
 11950     10DA  086A               	movf	(_ki+2)^(0+256),w
 11951     10DB  0021               	movlb	1	; select bank1
 11952     10DC  00A2               	movwf	(?_getKi+2)^(0+128)
 11953     10DD  0022               	movlb	2	; select bank2
 11954     10DE  0869               	movf	(_ki+1)^(0+256),w
 11955     10DF  0021               	movlb	1	; select bank1
 11956     10E0  00A1               	movwf	(?_getKi+1)^(0+128)
 11957     10E1  0022               	movlb	2	; select bank2
 11958     10E2  0868               	movf	_ki^(0+256),w
 11959     10E3  0021               	movlb	1	; select bank1
 11960     10E4  00A0               	movwf	?_getKi^(0+128)
 11961     10E5  0008               	return
 11962     10E6                     __end_of_getKi:
 11963                           
 11964                           	psect	text33
 11965     1FB8                     __ptext33:	
 11966 ;; *************** function _getDutycycle *****************
 11967 ;; Defined at:
 11968 ;;		line 40 in file "controller.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;		None
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;		None
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  2    0[BANK1 ] unsigned short 
 11975 ;; Registers used:
 11976 ;;		wreg
 11977 ;; Tracked objects:
 11978 ;;		On entry : 1F/1
 11979 ;;		On exit  : 1F/1
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11982 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;Total ram usage:        2 bytes
 11987 ;; Hardware stack levels used: 1
 11988 ;; Hardware stack levels required when called: 5
 11989 ;; This function calls:
 11990 ;;		Nothing
 11991 ;; This function is called by:
 11992 ;;		_printLogs
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996     1FB8                     _getDutycycle:	
 11997                           ;psect for function _getDutycycle
 11998                           
 11999                           
 12000                           ;incstack = 0
 12001                           ; Regs used in _getDutycycle: [wreg]
 12002     1FB8  0020               	movlb	0	; select bank0
 12003     1FB9  0858               	movf	_dutycycle+1,w
 12004     1FBA  0021               	movlb	1	; select bank1
 12005     1FBB  00A1               	movwf	(?_getDutycycle+1)^(0+128)
 12006     1FBC  0020               	movlb	0	; select bank0
 12007     1FBD  0857               	movf	_dutycycle,w
 12008     1FBE  0021               	movlb	1	; select bank1
 12009     1FBF  00A0               	movwf	?_getDutycycle^(0+128)
 12010     1FC0  0008               	return
 12011     1FC1                     __end_of_getDutycycle:
 12012                           
 12013                           	psect	text34
 12014     105F                     __ptext34:	
 12015 ;; *************** function _initLedstrip *****************
 12016 ;; Defined at:
 12017 ;;		line 116 in file "ledstrip.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;		None
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;		None
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  1    wreg      void 
 12024 ;; Registers used:
 12025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12026 ;; Tracked objects:
 12027 ;;		On entry : 1F/2
 12028 ;;		On exit  : 1F/2
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;Total ram usage:        0 bytes
 12036 ;; Hardware stack levels used: 1
 12037 ;; Hardware stack levels required when called: 7
 12038 ;; This function calls:
 12039 ;;		_SPI1_Open
 12040 ;;		_TMR6_PeriodMatchCallbackRegister
 12041 ;; This function is called by:
 12042 ;;		_main
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046     105F                     _initLedstrip:	
 12047                           ;psect for function _initLedstrip
 12048                           
 12049                           
 12050                           ;ledstrip.c: 117:     SPI1_Open(HOST_CONFIG);
 12051                           
 12052                           ;incstack = 0
 12053                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12054     105F  0021               	movlb	1	; select bank1
 12055     1060  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 12056     1061  3197  272E  3190   	fcall	_SPI1_Open
 12057                           
 12058                           ;ledstrip.c: 118:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 12059     1064  3035               	movlw	low _updateLedstripAnimation
 12060     1065  0021               	movlb	1	; select bank1
 12061     1066  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 12062     1067  301F               	movlw	high _updateLedstripAnimation
 12063     1068  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 12064     1069  319F  276C         	fcall	_TMR6_PeriodMatchCallbackRegister
 12065     106B  0008               	return
 12066     106C                     __end_of_initLedstrip:
 12067                           
 12068                           	psect	text35
 12069     1F6C                     __ptext35:	
 12070 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 12071 ;; Defined at:
 12072 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 12073 ;; Parameters:    Size  Location     Type
 12074 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 12075 ;;		 -> updateLedstripAnimation(1), 
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;		None
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      void 
 12080 ;; Registers used:
 12081 ;;		wreg
 12082 ;; Tracked objects:
 12083 ;;		On entry : 1F/1
 12084 ;;		On exit  : 1F/2
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12087 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12090 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;Total ram usage:        2 bytes
 12092 ;; Hardware stack levels used: 1
 12093 ;; Hardware stack levels required when called: 5
 12094 ;; This function calls:
 12095 ;;		Nothing
 12096 ;; This function is called by:
 12097 ;;		_initLedstrip
 12098 ;; This function uses a non-reentrant model
 12099 ;;
 12100                           
 12101     1F6C                     _TMR6_PeriodMatchCallbackRegister:	
 12102                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 12103                           
 12104                           
 12105                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 12106                           
 12107                           ;incstack = 0
 12108                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 12109     1F6C  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 12110     1F6D  0022               	movlb	2	; select bank2
 12111     1F6E  00DF               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 12112     1F6F  0021               	movlb	1	; select bank1
 12113     1F70  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 12114     1F71  0022               	movlb	2	; select bank2
 12115     1F72  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 12116     1F73  0008               	return
 12117     1F74                     __end_of_TMR6_PeriodMatchCallbackRegister:
 12118                           
 12119                           	psect	text36
 12120     172E                     __ptext36:	
 12121 ;; *************** function _SPI1_Open *****************
 12122 ;; Defined at:
 12123 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;  returnValue     1    0        _Bool 
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      _Bool 
 12130 ;; Registers used:
 12131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12132 ;; Tracked objects:
 12133 ;;		On entry : 1F/1
 12134 ;;		On exit  : 1F/4
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12137 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12139 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12141 ;;Total ram usage:        3 bytes
 12142 ;; Hardware stack levels used: 1
 12143 ;; Hardware stack levels required when called: 6
 12144 ;; This function calls:
 12145 ;;		___wmul
 12146 ;; This function is called by:
 12147 ;;		_initLedstrip
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151     172E                     _SPI1_Open:	
 12152                           ;psect for function _SPI1_Open
 12153                           
 12154                           
 12155                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 12156                           
 12157                           ;incstack = 0
 12158                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12159     172E  0024               	movlb	4	; select bank4
 12160     172F  1A95               	btfsc	21,5	;volatile
 12161     1730  0008               	return
 12162                           
 12163                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 12164     1731  0021               	movlb	1	; select bank1
 12165     1732  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12166     1733  00A7               	movwf	??_SPI1_Open^(0+128)
 12167     1734  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12168     1735  0827               	movf	??_SPI1_Open^(0+128),w
 12169     1736  00A0               	movwf	___wmul@multiplier^(0+128)
 12170     1737  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12171     1738  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12172     1739  3005               	movlw	5
 12173     173A  00A2               	movwf	___wmul@multiplicand^(0+128)
 12174     173B  3000               	movlw	0
 12175     173C  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12176     173D  3191  216F  3197   	fcall	___wmul
 12177     1740  30E2               	movlw	low _spi1_configuration
 12178     1741  0720               	addwf	?___wmul^(0+128),w
 12179     1742  0084               	movwf	4
 12180     1743  3018               	movlw	high _spi1_configuration
 12181     1744  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12182     1745  3880               	iorlw	128
 12183     1746  0085               	movwf	5
 12184     1747  0800               	movf	0,w	;code access
 12185     1748  0024               	movlb	4	; select bank4
 12186     1749  0094               	movwf	20	;volatile
 12187                           
 12188                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 12189     174A  0021               	movlb	1	; select bank1
 12190     174B  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12191     174C  00A7               	movwf	??_SPI1_Open^(0+128)
 12192     174D  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12193     174E  0827               	movf	??_SPI1_Open^(0+128),w
 12194     174F  00A0               	movwf	___wmul@multiplier^(0+128)
 12195     1750  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12196     1751  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12197     1752  3005               	movlw	5
 12198     1753  00A2               	movwf	___wmul@multiplicand^(0+128)
 12199     1754  3000               	movlw	0
 12200     1755  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12201     1756  3191  216F  3197   	fcall	___wmul
 12202     1759  30E3               	movlw	low (_spi1_configuration+1)
 12203     175A  0720               	addwf	?___wmul^(0+128),w
 12204     175B  0084               	movwf	4
 12205     175C  3018               	movlw	high (_spi1_configuration+1)
 12206     175D  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12207     175E  3880               	iorlw	128
 12208     175F  0085               	movwf	5
 12209     1760  0800               	movf	0,w	;code access
 12210     1761  0024               	movlb	4	; select bank4
 12211     1762  0095               	movwf	21	;volatile
 12212                           
 12213                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 12214     1763  0021               	movlb	1	; select bank1
 12215     1764  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12216     1765  00A7               	movwf	??_SPI1_Open^(0+128)
 12217     1766  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12218     1767  0827               	movf	??_SPI1_Open^(0+128),w
 12219     1768  00A0               	movwf	___wmul@multiplier^(0+128)
 12220     1769  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12221     176A  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12222     176B  3005               	movlw	5
 12223     176C  00A2               	movwf	___wmul@multiplicand^(0+128)
 12224     176D  3000               	movlw	0
 12225     176E  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12226     176F  3191  216F  3197   	fcall	___wmul
 12227     1772  30E4               	movlw	low (_spi1_configuration+2)
 12228     1773  0720               	addwf	?___wmul^(0+128),w
 12229     1774  0084               	movwf	4
 12230     1775  3018               	movlw	high (_spi1_configuration+2)
 12231     1776  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12232     1777  3880               	iorlw	128
 12233     1778  0085               	movwf	5
 12234     1779  0800               	movf	0,w	;code access
 12235     177A  0024               	movlb	4	; select bank4
 12236     177B  0097               	movwf	23	;volatile
 12237                           
 12238                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 12239     177C  0021               	movlb	1	; select bank1
 12240     177D  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12241     177E  00A7               	movwf	??_SPI1_Open^(0+128)
 12242     177F  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12243     1780  0827               	movf	??_SPI1_Open^(0+128),w
 12244     1781  00A0               	movwf	___wmul@multiplier^(0+128)
 12245     1782  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12246     1783  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12247     1784  3005               	movlw	5
 12248     1785  00A2               	movwf	___wmul@multiplicand^(0+128)
 12249     1786  3000               	movlw	0
 12250     1787  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12251     1788  3191  216F         	fcall	___wmul
 12252     178A  30E5               	movlw	low (_spi1_configuration+3)
 12253     178B  0720               	addwf	?___wmul^(0+128),w
 12254     178C  0084               	movwf	4
 12255     178D  3018               	movlw	high (_spi1_configuration+3)
 12256     178E  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12257     178F  3880               	iorlw	128
 12258     1790  0085               	movwf	5
 12259     1791  0800               	movf	0,w	;code access
 12260     1792  0024               	movlb	4	; select bank4
 12261     1793  0092               	movwf	18	;volatile
 12262                           
 12263                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 12264     1794  1695               	bsf	21,5	;volatile
 12265                           
 12266                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 12267     1795  0008               	return
 12268     1796                     __end_of_SPI1_Open:
 12269                           
 12270                           	psect	text37
 12271     116F                     __ptext37:	
 12272 ;; *************** function ___wmul *****************
 12273 ;; Defined at:
 12274 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 12275 ;; Parameters:    Size  Location     Type
 12276 ;;  multiplier      2    0[BANK1 ] unsigned int 
 12277 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;  product         2    4[BANK1 ] unsigned int 
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  2    0[BANK1 ] unsigned int 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0
 12284 ;; Tracked objects:
 12285 ;;		On entry : 1F/1
 12286 ;;		On exit  : 1F/1
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12289 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;Total ram usage:        6 bytes
 12294 ;; Hardware stack levels used: 1
 12295 ;; Hardware stack levels required when called: 5
 12296 ;; This function calls:
 12297 ;;		Nothing
 12298 ;; This function is called by:
 12299 ;;		_SPI1_Open
 12300 ;;		_atoi
 12301 ;;		_read_prec_or_width
 12302 ;; This function uses a non-reentrant model
 12303 ;;
 12304                           
 12305     116F                     ___wmul:	
 12306                           ;psect for function ___wmul
 12307                           
 12308                           
 12309                           ;incstack = 0
 12310                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12311     116F  01A4               	clrf	___wmul@product^(0+128)
 12312     1170  01A5               	clrf	(___wmul@product+1)^(0+128)
 12313     1171                     l3983:
 12314     1171  1C20               	btfss	___wmul@multiplier^(0+128),0
 12315     1172  2977               	goto	l1181
 12316     1173  0822               	movf	___wmul@multiplicand^(0+128),w
 12317     1174  07A4               	addwf	___wmul@product^(0+128),f
 12318     1175  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 12319     1176  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 12320     1177                     l1181:
 12321     1177  3001               	movlw	1
 12322     1178                     u3955:
 12323     1178  35A2               	lslf	___wmul@multiplicand^(0+128),f
 12324     1179  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 12325     117A  0B89               	decfsz	9,f
 12326     117B  2978               	goto	u3955
 12327     117C  3001               	movlw	1
 12328     117D                     u3965:
 12329     117D  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 12330     117E  0CA0               	rrf	___wmul@multiplier^(0+128),f
 12331     117F  0B89               	decfsz	9,f
 12332     1180  297D               	goto	u3965
 12333     1181  0820               	movf	___wmul@multiplier^(0+128),w
 12334     1182  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 12335     1183  1D03               	btfss	3,2
 12336     1184  2971               	goto	l3983
 12337     1185  0825               	movf	(___wmul@product+1)^(0+128),w
 12338     1186  00A1               	movwf	(?___wmul+1)^(0+128)
 12339     1187  0824               	movf	___wmul@product^(0+128),w
 12340     1188  00A0               	movwf	?___wmul^(0+128)
 12341     1189  0008               	return
 12342     118A                     __end_of___wmul:
 12343                           
 12344                           	psect	text38
 12345     1FE9                     __ptext38:	
 12346 ;; *************** function _initAdcMultiplexer *****************
 12347 ;; Defined at:
 12348 ;;		line 24 in file "adcMeasurements.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		wreg, status,2, status,0, pclath, cstack
 12357 ;; Tracked objects:
 12358 ;;		On entry : 1F/2
 12359 ;;		On exit  : 1F/2
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used: 1
 12368 ;; Hardware stack levels required when called: 6
 12369 ;; This function calls:
 12370 ;;		_ADC_SelectChannel
 12371 ;;		_ADC_SetInterruptHandler
 12372 ;; This function is called by:
 12373 ;;		_main
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377     1FE9                     _initAdcMultiplexer:	
 12378                           ;psect for function _initAdcMultiplexer
 12379                           
 12380                           
 12381                           ;adcMeasurements.c: 25:     ADC_SelectChannel(potentiometer);
 12382                           
 12383                           ;incstack = 0
 12384                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 12385     1FE9  3010               	movlw	16
 12386     1FEA  3190  2039  319F   	fcall	_ADC_SelectChannel
 12387                           
 12388                           ;adcMeasurements.c: 26:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 12389     1FED  3086               	movlw	low _adcConversionDoneHandler
 12390     1FEE  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 12391     1FEF  3012               	movlw	high _adcConversionDoneHandler
 12392     1FF0  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 12393     1FF1  319F  2754         	fcall	_ADC_SetInterruptHandler
 12394     1FF3  0008               	return
 12395     1FF4                     __end_of_initAdcMultiplexer:
 12396                           
 12397                           	psect	text39
 12398     1039                     __ptext39:	
 12399 ;; *************** function _ADC_SelectChannel *****************
 12400 ;; Defined at:
 12401 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  channel         1    wreg     enum E6663
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  channel         1    1[BANK1 ] enum E6663
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      void 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2, status,0
 12410 ;; Tracked objects:
 12411 ;;		On entry : 1F/2
 12412 ;;		On exit  : 1F/1
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;Total ram usage:        2 bytes
 12420 ;; Hardware stack levels used: 1
 12421 ;; Hardware stack levels required when called: 5
 12422 ;; This function calls:
 12423 ;;		Nothing
 12424 ;; This function is called by:
 12425 ;;		_initAdcMultiplexer
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429     1039                     _ADC_SelectChannel:	
 12430                           ;psect for function _ADC_SelectChannel
 12431                           
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 12435                           ;ADC_SelectChannel@channel stored from wreg
 12436     1039  0021               	movlb	1	; select bank1
 12437     103A  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 12438                           
 12439                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 12440     103B  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 12441     103C  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 12442     103D  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 12443     103E  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 12444     103F  081D               	movf	29,w	;volatile
 12445     1040  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 12446     1041  3903               	andlw	-253
 12447     1042  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 12448     1043  009D               	movwf	29	;volatile
 12449     1044  0008               	return
 12450     1045                     __end_of_ADC_SelectChannel:
 12451                           
 12452                           	psect	text40
 12453     1FAF                     __ptext40:	
 12454 ;; *************** function _getPotentiometer *****************
 12455 ;; Defined at:
 12456 ;;		line 29 in file "adcMeasurements.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;		None
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  2    0[BANK1 ] unsigned short 
 12463 ;; Registers used:
 12464 ;;		wreg
 12465 ;; Tracked objects:
 12466 ;;		On entry : 1F/2
 12467 ;;		On exit  : 1F/1
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        2 bytes
 12475 ;; Hardware stack levels used: 1
 12476 ;; Hardware stack levels required when called: 5
 12477 ;; This function calls:
 12478 ;;		Nothing
 12479 ;; This function is called by:
 12480 ;;		_main
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484     1FAF                     _getPotentiometer:	
 12485                           ;psect for function _getPotentiometer
 12486                           
 12487                           
 12488                           ;adcMeasurements.c: 30:     return ADC_potentiometer;
 12489                           
 12490                           ;incstack = 0
 12491                           ; Regs used in _getPotentiometer: [wreg]
 12492     1FAF  0020               	movlb	0	; select bank0
 12493     1FB0  085C               	movf	_ADC_potentiometer+1,w	;volatile
 12494     1FB1  0021               	movlb	1	; select bank1
 12495     1FB2  00A1               	movwf	(?_getPotentiometer+1)^(0+128)
 12496     1FB3  0020               	movlb	0	; select bank0
 12497     1FB4  085B               	movf	_ADC_potentiometer,w	;volatile
 12498     1FB5  0021               	movlb	1	; select bank1
 12499     1FB6  00A0               	movwf	?_getPotentiometer^(0+128)
 12500     1FB7  0008               	return
 12501     1FB8                     __end_of_getPotentiometer:
 12502                           
 12503                           	psect	text41
 12504     10A3                     __ptext41:	
 12505 ;; *************** function _TMR6_Tasks *****************
 12506 ;; Defined at:
 12507 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;		None
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;		None
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      void 
 12514 ;; Registers used:
 12515 ;;		wreg, status,2, status,0, pclath, cstack
 12516 ;; Tracked objects:
 12517 ;;		On entry : 1E/0
 12518 ;;		On exit  : 1F/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12525 ;;Total ram usage:        0 bytes
 12526 ;; Hardware stack levels used: 1
 12527 ;; Hardware stack levels required when called: 10
 12528 ;; This function calls:
 12529 ;;		NULL
 12530 ;;		_TMR6_DefaultPeriodMatchCallback
 12531 ;;		_updateLedstripAnimation
 12532 ;; This function is called by:
 12533 ;;		_main
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537     10A3                     _TMR6_Tasks:	
 12538                           ;psect for function _TMR6_Tasks
 12539                           
 12540                           
 12541                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 12542                           
 12543                           ;incstack = 0
 12544                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 12545     10A3  0020               	movlb	0	; select bank0
 12546     10A4  1F92               	btfss	18,7	;volatile
 12547     10A5  0008               	return
 12548                           
 12549                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 12550     10A6  0022               	movlb	2	; select bank2
 12551     10A7  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 12552     10A8  045F               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 12553     10A9  1903               	btfsc	3,2
 12554     10AA  28B0               	goto	l5843
 12555                           
 12556                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 12557     10AB  085F               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 12558     10AC  008A               	movwf	10
 12559     10AD  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 12560     10AE  000A               	callw
 12561     10AF  3190               	pagesel	$
 12562     10B0                     l5843:
 12563                           
 12564                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 12565     10B0  0020               	movlb	0	; select bank0
 12566     10B1  1392               	bcf	18,7	;volatile
 12567     10B2  0008               	return
 12568     10B3                     __end_of_TMR6_Tasks:
 12569                           
 12570                           	psect	text42
 12571     0003                     __ptext42:	
 12572 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 12573 ;; Defined at:
 12574 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;		None
 12577 ;; Auto vars:     Size  Location     Type
 12578 ;;		None
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  1    wreg      void 
 12581 ;; Registers used:
 12582 ;;		None
 12583 ;; Tracked objects:
 12584 ;;		On entry : 1F/2
 12585 ;;		On exit  : 1F/2
 12586 ;;		Unchanged: 1F/0
 12587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;Total ram usage:        0 bytes
 12593 ;; Hardware stack levels used: 1
 12594 ;; Hardware stack levels required when called: 5
 12595 ;; This function calls:
 12596 ;;		Nothing
 12597 ;; This function is called by:
 12598 ;;		_TMR6_Initialize
 12599 ;;		_TMR6_Tasks
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603     0003                     _TMR6_DefaultPeriodMatchCallback:	
 12604                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 12605                           
 12606                           
 12607                           ;incstack = 0
 12608                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 12609     0003  0008               	return
 12610     0004                     __end_of_TMR6_DefaultPeriodMatchCallback:
 12611                           
 12612                           	psect	text43
 12613     1F35                     __ptext43:	
 12614 ;; *************** function _updateLedstripAnimation *****************
 12615 ;; Defined at:
 12616 ;;		line 112 in file "ledstrip.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;		None
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;		None
 12621 ;; Return value:  Size  Location     Type
 12622 ;;                  1    wreg      void 
 12623 ;; Registers used:
 12624 ;;		wreg, status,2, status,0, pclath, cstack
 12625 ;; Tracked objects:
 12626 ;;		On entry : 1F/2
 12627 ;;		On exit  : 1F/4
 12628 ;;		Unchanged: 0/0
 12629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;Total ram usage:        0 bytes
 12635 ;; Hardware stack levels used: 1
 12636 ;; Hardware stack levels required when called: 9
 12637 ;; This function calls:
 12638 ;;		_position_led_strip
 12639 ;; This function is called by:
 12640 ;;		_initLedstrip
 12641 ;;		_TMR6_Tasks
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645     1F35                     _updateLedstripAnimation:	
 12646                           ;psect for function _updateLedstripAnimation
 12647                           
 12648                           
 12649                           ;ledstrip.c: 113:     position_led_strip();
 12650                           
 12651                           ;incstack = 0
 12652                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 12653     1F35  318B  23F2         	fcall	_position_led_strip
 12654     1F37  0008               	return
 12655     1F38                     __end_of_updateLedstripAnimation:
 12656                           
 12657                           	psect	text44
 12658     0BF2                     __ptext44:	
 12659 ;; *************** function _position_led_strip *****************
 12660 ;; Defined at:
 12661 ;;		line 60 in file "ledstrip.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;		None
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  led             1    9[BANK2 ] unsigned char 
 12666 ;;  led_on          2   10[BANK2 ] int 
 12667 ;;  target          2    7[BANK2 ] int 
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  1    wreg      void 
 12670 ;; Registers used:
 12671 ;;		wreg, status,2, status,0, pclath, cstack
 12672 ;; Tracked objects:
 12673 ;;		On entry : 1F/2
 12674 ;;		On exit  : 1F/4
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 12680 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 12681 ;;Total ram usage:        8 bytes
 12682 ;; Hardware stack levels used: 1
 12683 ;; Hardware stack levels required when called: 8
 12684 ;; This function calls:
 12685 ;;		_getHoogtesensor
 12686 ;;		_getLedNumber
 12687 ;;		_getSetpoint
 12688 ;;		_sendLedstripEndFrame
 12689 ;;		_sendLedstripFrame
 12690 ;;		_sendLedstripStartFrame
 12691 ;; This function is called by:
 12692 ;;		_updateLedstripAnimation
 12693 ;; This function uses a non-reentrant model
 12694 ;;
 12695                           
 12696     0BF2                     _position_led_strip:	
 12697                           ;psect for function _position_led_strip
 12698                           
 12699                           
 12700                           ;ledstrip.c: 61:     int led_on = getLedNumber(getHoogtesensor());
 12701                           
 12702                           ;incstack = 0
 12703                           ; Regs used in _position_led_strip: [wreg+status,2+status,0+pclath+cstack]
 12704     0BF2  319F  279D  318B   	fcall	_getHoogtesensor
 12705     0BF5  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 12706     0BF6  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 12707     0BF7  0820               	movf	?_getHoogtesensor^(0+128),w
 12708     0BF8  00EE               	movwf	getLedNumber@height^(0+128)
 12709     0BF9  3195  255F  318B   	fcall	_getLedNumber
 12710     0BFC  086F               	movf	(?_getLedNumber+1)^(0+128),w
 12711     0BFD  0022               	movlb	2	; select bank2
 12712     0BFE  00D9               	movwf	(position_led_strip@led_on+1)^(0+256)
 12713     0BFF  0021               	movlb	1	; select bank1
 12714     0C00  086E               	movf	?_getLedNumber^(0+128),w
 12715     0C01  0022               	movlb	2	; select bank2
 12716     0C02  00D8               	movwf	position_led_strip@led_on^(0+256)
 12717                           
 12718                           ;ledstrip.c: 62:     if (led_on < 0) {
 12719     0C03  1FD9               	btfss	(position_led_strip@led_on+1)^(0+256),7
 12720     0C04  2C08               	goto	l4835
 12721                           
 12722                           ;ledstrip.c: 63:         led_on = 0;
 12723     0C05  01D8               	clrf	position_led_strip@led_on^(0+256)
 12724     0C06  01D9               	clrf	(position_led_strip@led_on+1)^(0+256)
 12725                           
 12726                           ;ledstrip.c: 64:     } else if (led_on > 59) {
 12727     0C07  2C18               	goto	l4839
 12728     0C08                     l4835:
 12729     0C08  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12730     0C09  3A80               	xorlw	128
 12731     0C0A  00D2               	movwf	??_position_led_strip^(0+256)
 12732     0C0B  3080               	movlw	128
 12733     0C0C  0252               	subwf	??_position_led_strip^(0+256),w
 12734     0C0D  1D03               	skipz
 12735     0C0E  2C11               	goto	u5695
 12736     0C0F  303C               	movlw	60
 12737     0C10  0258               	subwf	position_led_strip@led_on^(0+256),w
 12738     0C11                     u5695:
 12739     0C11  1C03               	skipc
 12740     0C12  2C18               	goto	l4839
 12741                           
 12742                           ;ledstrip.c: 65:         led_on = 59;
 12743     0C13  303B               	movlw	59
 12744     0C14  0022               	movlb	2	; select bank2
 12745     0C15  00D8               	movwf	position_led_strip@led_on^(0+256)
 12746     0C16  3000               	movlw	0
 12747     0C17  00D9               	movwf	(position_led_strip@led_on^(0+256)+1)
 12748     0C18                     l4839:
 12749                           
 12750                           ;ledstrip.c: 68:     int target = getLedNumber(getSetpoint());
 12751     0C18  319F  27A6  318B   	fcall	_getSetpoint
 12752     0C1B  0821               	movf	(?_getSetpoint+1)^(0+128),w
 12753     0C1C  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 12754     0C1D  0820               	movf	?_getSetpoint^(0+128),w
 12755     0C1E  00EE               	movwf	getLedNumber@height^(0+128)
 12756     0C1F  3195  255F  318B   	fcall	_getLedNumber
 12757     0C22  086F               	movf	(?_getLedNumber+1)^(0+128),w
 12758     0C23  0022               	movlb	2	; select bank2
 12759     0C24  00D6               	movwf	(position_led_strip@target+1)^(0+256)
 12760     0C25  0021               	movlb	1	; select bank1
 12761     0C26  086E               	movf	?_getLedNumber^(0+128),w
 12762     0C27  0022               	movlb	2	; select bank2
 12763     0C28  00D5               	movwf	position_led_strip@target^(0+256)
 12764                           
 12765                           ;ledstrip.c: 69:     if (target < 0) {
 12766     0C29  1FD6               	btfss	(position_led_strip@target+1)^(0+256),7
 12767     0C2A  2C2D               	goto	l4845
 12768                           
 12769                           ;ledstrip.c: 70:         target = 0;
 12770     0C2B  01D5               	clrf	position_led_strip@target^(0+256)
 12771     0C2C  01D6               	clrf	(position_led_strip@target+1)^(0+256)
 12772     0C2D                     l4845:
 12773                           
 12774                           ;ledstrip.c: 74:     sendLedstripStartFrame();
 12775     0C2D  3190  20E6  318B   	fcall	_sendLedstripStartFrame
 12776                           
 12777                           ;ledstrip.c: 75:     for (uint8_t led = 0; led < 59; led++) {
 12778     0C30  0022               	movlb	2	; select bank2
 12779     0C31  01D7               	clrf	position_led_strip@led^(0+256)
 12780     0C32                     l4853:
 12781                           
 12782                           ;ledstrip.c: 78:         if (led_on == target) {
 12783     0C32  0856               	movf	(position_led_strip@target+1)^(0+256),w
 12784     0C33  0659               	xorwf	(position_led_strip@led_on+1)^(0+256),w
 12785     0C34  1D03               	skipz
 12786     0C35  2C38               	goto	u5715
 12787     0C36  0855               	movf	position_led_strip@target^(0+256),w
 12788     0C37  0658               	xorwf	position_led_strip@led_on^(0+256),w
 12789     0C38                     u5715:
 12790     0C38  1D03               	skipz
 12791     0C39  2C3D               	goto	l4857
 12792                           
 12793                           ;ledstrip.c: 79:             is_on_target = 1;
 12794     0C3A  3001               	movlw	1
 12795     0C3B  0020               	movlb	0	; select bank0
 12796     0C3C  00E4               	movwf	_is_on_target
 12797     0C3D                     l4857:
 12798                           
 12799                           ;ledstrip.c: 81:         if (is_on_target){
 12800     0C3D  0020               	movlb	0	; select bank0
 12801     0C3E  0864               	movf	_is_on_target,w
 12802     0C3F  1903               	btfsc	3,2
 12803     0C40  2C72               	goto	l4877
 12804                           
 12805                           ;ledstrip.c: 82:             if (led_on >= target - 1 && led_on <= target + 1) {
 12806     0C41  0022               	movlb	2	; select bank2
 12807     0C42  0855               	movf	position_led_strip@target^(0+256),w
 12808     0C43  3EFF               	addlw	255
 12809     0C44  00D2               	movwf	??_position_led_strip^(0+256)
 12810     0C45  30FF               	movlw	255
 12811     0C46  3D56               	addwfc	(position_led_strip@target+1)^(0+256),w
 12812     0C47  00D3               	movwf	(??_position_led_strip+1)^(0+256)
 12813     0C48  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12814     0C49  3A80               	xorlw	128
 12815     0C4A  00D4               	movwf	(??_position_led_strip+2)^(0+256)
 12816     0C4B  0853               	movf	(??_position_led_strip+1)^(0+256),w
 12817     0C4C  3A80               	xorlw	128
 12818     0C4D  0254               	subwf	(??_position_led_strip+2)^(0+256),w
 12819     0C4E  1D03               	skipz
 12820     0C4F  2C52               	goto	u5735
 12821     0C50  0852               	movf	??_position_led_strip^(0+256),w
 12822     0C51  0258               	subwf	position_led_strip@led_on^(0+256),w
 12823     0C52                     u5735:
 12824     0C52  1C03               	skipc
 12825     0C53  2C72               	goto	l4877
 12826     0C54  0022               	movlb	2	; select bank2
 12827     0C55  0855               	movf	position_led_strip@target^(0+256),w
 12828     0C56  3E01               	addlw	1
 12829     0C57  00D2               	movwf	??_position_led_strip^(0+256)
 12830     0C58  3000               	movlw	0
 12831     0C59  3D56               	addwfc	(position_led_strip@target+1)^(0+256),w
 12832     0C5A  00D3               	movwf	(??_position_led_strip+1)^(0+256)
 12833     0C5B  0853               	movf	(??_position_led_strip+1)^(0+256),w
 12834     0C5C  3A80               	xorlw	128
 12835     0C5D  00D4               	movwf	(??_position_led_strip+2)^(0+256)
 12836     0C5E  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12837     0C5F  3A80               	xorlw	128
 12838     0C60  0254               	subwf	(??_position_led_strip+2)^(0+256),w
 12839     0C61  1D03               	skipz
 12840     0C62  2C65               	goto	u5745
 12841     0C63  0858               	movf	position_led_strip@led_on^(0+256),w
 12842     0C64  0252               	subwf	??_position_led_strip^(0+256),w
 12843     0C65                     u5745:
 12844     0C65  1C03               	skipc
 12845     0C66  2C72               	goto	l4877
 12846                           
 12847                           ;ledstrip.c: 83:                 sendLedstripFrame(0x00, 0xFF, 0x00, 0x05);
 12848     0C67  30FF               	movlw	255
 12849     0C68  0021               	movlb	1	; select bank1
 12850     0C69  00A1               	movwf	sendLedstripFrame@green^(0+128)
 12851     0C6A  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 12852     0C6B  3005               	movlw	5
 12853     0C6C  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 12854     0C6D  3000               	movlw	0
 12855     0C6E  3191  213C  318B   	fcall	_sendLedstripFrame
 12856                           
 12857                           ;ledstrip.c: 84:             }
 12858     0C71  2CA4               	goto	l4893
 12859     0C72                     l4877:	
 12860                           ;ledstrip.c: 91:                     sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 12861                           
 12862                           ;ledstrip.c: 90:         } else {
 12863                           
 12864                           ;ledstrip.c: 89:                     sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 12865                           
 12866                           ;ledstrip.c: 88:         } else if (led == target) {
 12867                           
 12868                           ;ledstrip.c: 87:                     sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 12869                           
 12870                           ;ledstrip.c: 86:                 if (led == led_on) {
 12871                           
 12872     0C72  0022               	movlb	2	; select bank2
 12873     0C73  0857               	movf	position_led_strip@led^(0+256),w
 12874     0C74  00D2               	movwf	??_position_led_strip^(0+256)
 12875     0C75  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 12876     0C76  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12877     0C77  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 12878     0C78  1D03               	skipz
 12879     0C79  2C7C               	goto	u5775
 12880     0C7A  0858               	movf	position_led_strip@led_on^(0+256),w
 12881     0C7B  0652               	xorwf	??_position_led_strip^(0+256),w
 12882     0C7C                     u5775:
 12883     0C7C  1D03               	skipz
 12884     0C7D  2C87               	goto	l4883
 12885                           
 12886                           ;ledstrip.c: 97:             sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 12887     0C7E  3044               	movlw	68
 12888     0C7F  0021               	movlb	1	; select bank1
 12889     0C80  00A1               	movwf	sendLedstripFrame@green^(0+128)
 12890     0C81  3044               	movlw	68
 12891     0C82  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 12892     0C83  3005               	movlw	5
 12893     0C84  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 12894     0C85  3044               	movlw	68
 12895     0C86  2C9F               	goto	L4
 12896     0C87                     l4883:
 12897     0C87  0857               	movf	position_led_strip@led^(0+256),w
 12898     0C88  00D2               	movwf	??_position_led_strip^(0+256)
 12899     0C89  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 12900     0C8A  0856               	movf	(position_led_strip@target+1)^(0+256),w
 12901     0C8B  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 12902     0C8C  1D03               	skipz
 12903     0C8D  2C90               	goto	u5785
 12904     0C8E  0855               	movf	position_led_strip@target^(0+256),w
 12905     0C8F  0652               	xorwf	??_position_led_strip^(0+256),w
 12906     0C90                     u5785:
 12907     0C90  1D03               	skipz
 12908     0C91  2C99               	goto	l4889
 12909                           
 12910                           ;ledstrip.c: 100:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 12911     0C92  0021               	movlb	1	; select bank1
 12912     0C93  01A1               	clrf	sendLedstripFrame@green^(0+128)
 12913     0C94  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 12914     0C95  3005               	movlw	5
 12915     0C96  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 12916     0C97  30FF               	movlw	255
 12917     0C98  2C9F               	goto	L4
 12918     0C99                     l4889:
 12919                           
 12920                           ;ledstrip.c: 103:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 12921     0C99  0021               	movlb	1	; select bank1
 12922     0C9A  01A1               	clrf	sendLedstripFrame@green^(0+128)
 12923     0C9B  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 12924     0C9C  3005               	movlw	5
 12925     0C9D  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 12926     0C9E  3000               	movlw	0
 12927     0C9F                     L4:
 12928     0C9F  3191  213C  318B   	fcall	_sendLedstripFrame
 12929                           
 12930                           ;ledstrip.c: 93:                 is_on_target = 0;
 12931     0CA2  0020               	movlb	0	; select bank0
 12932     0CA3  01E4               	clrf	_is_on_target
 12933     0CA4                     l4893:
 12934                           
 12935                           ;ledstrip.c: 106:     }
 12936     0CA4  3001               	movlw	1
 12937     0CA5  0022               	movlb	2	; select bank2
 12938     0CA6  07D7               	addwf	position_led_strip@led^(0+256),f
 12939     0CA7  303B               	movlw	59
 12940     0CA8  0257               	subwf	position_led_strip@led^(0+256),w
 12941     0CA9  1C03               	skipc
 12942     0CAA  2C32               	goto	l4853
 12943                           
 12944                           ;ledstrip.c: 108:     sendLedstripEndFrame();
 12945     0CAB  3191  2124         	fcall	_sendLedstripEndFrame
 12946     0CAD  0008               	return
 12947     0CAE                     __end_of_position_led_strip:
 12948                           
 12949                           	psect	text45
 12950     10E6                     __ptext45:	
 12951 ;; *************** function _sendLedstripStartFrame *****************
 12952 ;; Defined at:
 12953 ;;		line 6 in file "ledstrip.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;		None
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;		None
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  1    wreg      void 
 12960 ;; Registers used:
 12961 ;;		wreg, status,2, status,0, pclath, cstack
 12962 ;; Tracked objects:
 12963 ;;		On entry : 1F/2
 12964 ;;		On exit  : 1F/4
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12971 ;;Total ram usage:        0 bytes
 12972 ;; Hardware stack levels used: 1
 12973 ;; Hardware stack levels required when called: 6
 12974 ;; This function calls:
 12975 ;;		_SPI1_ByteExchange
 12976 ;; This function is called by:
 12977 ;;		_position_led_strip
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981     10E6                     _sendLedstripStartFrame:	
 12982                           ;psect for function _sendLedstripStartFrame
 12983                           
 12984                           
 12985                           ;ledstrip.c: 8:     SPI1_ByteExchange(0x00);
 12986                           
 12987                           ;incstack = 0
 12988                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 12989     10E6  0021               	movlb	1	; select bank1
 12990     10E7  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 12991     10E8  319F  27D4  3190   	fcall	_SPI1_ByteExchange
 12992                           
 12993                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 12994     10EB  0021               	movlb	1	; select bank1
 12995     10EC  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 12996     10ED  319F  27D4  3190   	fcall	_SPI1_ByteExchange
 12997                           
 12998                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 12999     10F0  0021               	movlb	1	; select bank1
 13000     10F1  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13001     10F2  319F  27D4  3190   	fcall	_SPI1_ByteExchange
 13002                           
 13003                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 13004     10F5  0021               	movlb	1	; select bank1
 13005     10F6  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13006     10F7  319F  27D4         	fcall	_SPI1_ByteExchange
 13007     10F9  0008               	return
 13008     10FA                     __end_of_sendLedstripStartFrame:
 13009                           
 13010                           	psect	text46
 13011     113C                     __ptext46:	
 13012 ;; *************** function _sendLedstripFrame *****************
 13013 ;; Defined at:
 13014 ;;		line 22 in file "ledstrip.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  red             1    wreg     unsigned char 
 13017 ;;  green           1    1[BANK1 ] unsigned char 
 13018 ;;  blue            1    2[BANK1 ] unsigned char 
 13019 ;;  intensity       1    3[BANK1 ] unsigned char 
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;  red             1    4[BANK1 ] unsigned char 
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  1    wreg      void 
 13024 ;; Registers used:
 13025 ;;		wreg, status,2, status,0, pclath, cstack
 13026 ;; Tracked objects:
 13027 ;;		On entry : 1F/1
 13028 ;;		On exit  : 1F/4
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13031 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;Total ram usage:        4 bytes
 13036 ;; Hardware stack levels used: 1
 13037 ;; Hardware stack levels required when called: 6
 13038 ;; This function calls:
 13039 ;;		_SPI1_ByteExchange
 13040 ;; This function is called by:
 13041 ;;		_position_led_strip
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045     113C                     _sendLedstripFrame:	
 13046                           ;psect for function _sendLedstripFrame
 13047                           
 13048                           
 13049                           ;incstack = 0
 13050                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 13051                           ;sendLedstripFrame@red stored from wreg
 13052     113C  00A4               	movwf	sendLedstripFrame@red^(0+128)
 13053                           
 13054                           ;ledstrip.c: 23:     SPI1_ByteExchange(0xE0 | intensity);
 13055     113D  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 13056     113E  38E0               	iorlw	224
 13057     113F  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13058     1140  319F  27D4  3191   	fcall	_SPI1_ByteExchange
 13059                           
 13060                           ;ledstrip.c: 25:     SPI1_ByteExchange(blue);
 13061     1143  0021               	movlb	1	; select bank1
 13062     1144  0822               	movf	sendLedstripFrame@blue^(0+128),w
 13063     1145  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13064     1146  319F  27D4  3191   	fcall	_SPI1_ByteExchange
 13065                           
 13066                           ;ledstrip.c: 26:     SPI1_ByteExchange(green);
 13067     1149  0021               	movlb	1	; select bank1
 13068     114A  0821               	movf	sendLedstripFrame@green^(0+128),w
 13069     114B  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13070     114C  319F  27D4  3191   	fcall	_SPI1_ByteExchange
 13071                           
 13072                           ;ledstrip.c: 27:     SPI1_ByteExchange(red);
 13073     114F  0021               	movlb	1	; select bank1
 13074     1150  0824               	movf	sendLedstripFrame@red^(0+128),w
 13075     1151  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13076     1152  319F  27D4         	fcall	_SPI1_ByteExchange
 13077     1154  0008               	return
 13078     1155                     __end_of_sendLedstripFrame:
 13079                           
 13080                           	psect	text47
 13081     1124                     __ptext47:	
 13082 ;; *************** function _sendLedstripEndFrame *****************
 13083 ;; Defined at:
 13084 ;;		line 14 in file "ledstrip.c"
 13085 ;; Parameters:    Size  Location     Type
 13086 ;;		None
 13087 ;; Auto vars:     Size  Location     Type
 13088 ;;		None
 13089 ;; Return value:  Size  Location     Type
 13090 ;;                  1    wreg      void 
 13091 ;; Registers used:
 13092 ;;		wreg, status,2, status,0, pclath, cstack
 13093 ;; Tracked objects:
 13094 ;;		On entry : 1F/2
 13095 ;;		On exit  : 1F/4
 13096 ;;		Unchanged: 0/0
 13097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13102 ;;Total ram usage:        0 bytes
 13103 ;; Hardware stack levels used: 1
 13104 ;; Hardware stack levels required when called: 6
 13105 ;; This function calls:
 13106 ;;		_SPI1_ByteExchange
 13107 ;; This function is called by:
 13108 ;;		_position_led_strip
 13109 ;; This function uses a non-reentrant model
 13110 ;;
 13111                           
 13112     1124                     _sendLedstripEndFrame:	
 13113                           ;psect for function _sendLedstripEndFrame
 13114                           
 13115                           
 13116                           ;ledstrip.c: 16:     SPI1_ByteExchange(0xFF);
 13117                           
 13118                           ;incstack = 0
 13119                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 13120     1124  30FF               	movlw	255
 13121     1125  0021               	movlb	1	; select bank1
 13122     1126  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13123     1127  319F  27D4  3191   	fcall	_SPI1_ByteExchange
 13124                           
 13125                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 13126     112A  30FF               	movlw	255
 13127     112B  0021               	movlb	1	; select bank1
 13128     112C  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13129     112D  319F  27D4  3191   	fcall	_SPI1_ByteExchange
 13130                           
 13131                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 13132     1130  30FF               	movlw	255
 13133     1131  0021               	movlb	1	; select bank1
 13134     1132  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13135     1133  319F  27D4  3191   	fcall	_SPI1_ByteExchange
 13136                           
 13137                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 13138     1136  30FF               	movlw	255
 13139     1137  0021               	movlb	1	; select bank1
 13140     1138  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13141     1139  319F  27D4         	fcall	_SPI1_ByteExchange
 13142     113B  0008               	return
 13143     113C                     __end_of_sendLedstripEndFrame:
 13144                           
 13145                           	psect	text48
 13146     1FD4                     __ptext48:	
 13147 ;; *************** function _SPI1_ByteExchange *****************
 13148 ;; Defined at:
 13149 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;  byteData        1    0[BANK1 ] unsigned char 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      unsigned char 
 13156 ;; Registers used:
 13157 ;;		wreg
 13158 ;; Tracked objects:
 13159 ;;		On entry : 1F/1
 13160 ;;		On exit  : 1F/4
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13163 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;Total ram usage:        1 bytes
 13168 ;; Hardware stack levels used: 1
 13169 ;; Hardware stack levels required when called: 5
 13170 ;; This function calls:
 13171 ;;		Nothing
 13172 ;; This function is called by:
 13173 ;;		_sendLedstripStartFrame
 13174 ;;		_sendLedstripEndFrame
 13175 ;;		_sendLedstripFrame
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179     1FD4                     _SPI1_ByteExchange:	
 13180                           ;psect for function _SPI1_ByteExchange
 13181                           
 13182                           
 13183                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 13184                           
 13185                           ;incstack = 0
 13186                           ; Regs used in _SPI1_ByteExchange: [wreg]
 13187     1FD4  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 13188     1FD5  0024               	movlb	4	; select bank4
 13189     1FD6  0091               	movwf	17	;volatile
 13190     1FD7                     l160:	
 13191                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 13192                           
 13193                           
 13194                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 13195     1FD7  0020               	movlb	0	; select bank0
 13196     1FD8  1D91               	btfss	17,3	;volatile
 13197     1FD9  2FD7               	goto	l160
 13198                           
 13199                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 13200     1FDA  1191               	bcf	17,3	;volatile
 13201                           
 13202                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 13203     1FDB  0024               	movlb	4	; select bank4
 13204     1FDC  0811               	movf	17,w	;volatile
 13205     1FDD  0008               	return
 13206     1FDE                     __end_of_SPI1_ByteExchange:
 13207                           
 13208                           	psect	text49
 13209     1FA6                     __ptext49:	
 13210 ;; *************** function _getSetpoint *****************
 13211 ;; Defined at:
 13212 ;;		line 39 in file "controller.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;		None
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;		None
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  2    0[BANK1 ] unsigned short 
 13219 ;; Registers used:
 13220 ;;		wreg
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/1
 13223 ;;		On exit  : 1F/1
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13226 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13229 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13230 ;;Total ram usage:        2 bytes
 13231 ;; Hardware stack levels used: 1
 13232 ;; Hardware stack levels required when called: 5
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_printLogs
 13237 ;;		_position_led_strip
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241     1FA6                     _getSetpoint:	
 13242                           ;psect for function _getSetpoint
 13243                           
 13244                           
 13245                           ;incstack = 0
 13246                           ; Regs used in _getSetpoint: [wreg]
 13247     1FA6  0020               	movlb	0	; select bank0
 13248     1FA7  086D               	movf	_setpoint+1,w
 13249     1FA8  0021               	movlb	1	; select bank1
 13250     1FA9  00A1               	movwf	(?_getSetpoint+1)^(0+128)
 13251     1FAA  0020               	movlb	0	; select bank0
 13252     1FAB  086C               	movf	_setpoint,w
 13253     1FAC  0021               	movlb	1	; select bank1
 13254     1FAD  00A0               	movwf	?_getSetpoint^(0+128)
 13255     1FAE  0008               	return
 13256     1FAF                     __end_of_getSetpoint:
 13257                           
 13258                           	psect	text50
 13259     155F                     __ptext50:	
 13260 ;; *************** function _getLedNumber *****************
 13261 ;; Defined at:
 13262 ;;		line 33 in file "ledstrip.c"
 13263 ;; Parameters:    Size  Location     Type
 13264 ;;  height          2   78[BANK1 ] unsigned short 
 13265 ;; Auto vars:     Size  Location     Type
 13266 ;;  result          4    0[BANK2 ] float 
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  2   78[BANK1 ] int 
 13269 ;; Registers used:
 13270 ;;		wreg, status,2, status,0, pclath, cstack
 13271 ;; Tracked objects:
 13272 ;;		On entry : 1F/1
 13273 ;;		On exit  : 1F/1
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13276 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 13278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;Total ram usage:        6 bytes
 13281 ;; Hardware stack levels used: 1
 13282 ;; Hardware stack levels required when called: 7
 13283 ;; This function calls:
 13284 ;;		___fladd
 13285 ;;		___flmul
 13286 ;;		___fltol
 13287 ;;		___xxtofl
 13288 ;; This function is called by:
 13289 ;;		_position_led_strip
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293     155F                     _getLedNumber:	
 13294                           ;psect for function _getLedNumber
 13295                           
 13296                           
 13297                           ;ledstrip.c: 34:     float result = (0.068104825 * height - 5.4876957494);
 13298                           
 13299                           ;incstack = 0
 13300                           ; Regs used in _getLedNumber: [wreg+status,2+status,0+pclath+cstack]
 13301     155F  30C0               	movlw	192
 13302     1560  00B1               	movwf	(___fladd@b+3)^(0+128)
 13303     1561  30AF               	movlw	175
 13304     1562  00B0               	movwf	(___fladd@b+2)^(0+128)
 13305     1563  309B               	movlw	155
 13306     1564  00AF               	movwf	(___fladd@b+1)^(0+128)
 13307     1565  3034               	movlw	52
 13308     1566  00AE               	movwf	___fladd@b^(0+128)
 13309     1567  303D               	movlw	61
 13310     1568  00CD               	movwf	(___flmul@b+3)^(0+128)
 13311     1569  308B               	movlw	139
 13312     156A  00CC               	movwf	(___flmul@b+2)^(0+128)
 13313     156B  307A               	movlw	122
 13314     156C  00CB               	movwf	(___flmul@b+1)^(0+128)
 13315     156D  308B               	movlw	139
 13316     156E  00CA               	movwf	___flmul@b^(0+128)
 13317     156F  086E               	movf	getLedNumber@height^(0+128),w
 13318     1570  00A0               	movwf	___xxtofl@val^(0+128)
 13319     1571  086F               	movf	(getLedNumber@height+1)^(0+128),w
 13320     1572  00A1               	movwf	(___xxtofl@val^(0+128)+1)
 13321     1573  01A2               	clrf	(___xxtofl@val^(0+128)+2)
 13322     1574  01A3               	clrf	(___xxtofl@val^(0+128)+3)
 13323     1575  3000               	movlw	0
 13324     1576  3189  218C  3195   	fcall	___xxtofl
 13325     1579  0823               	movf	(?___xxtofl+3)^(0+128),w
 13326     157A  00D1               	movwf	(___flmul@a+3)^(0+128)
 13327     157B  0822               	movf	(?___xxtofl+2)^(0+128),w
 13328     157C  00D0               	movwf	(___flmul@a+2)^(0+128)
 13329     157D  0821               	movf	(?___xxtofl+1)^(0+128),w
 13330     157E  00CF               	movwf	(___flmul@a+1)^(0+128)
 13331     157F  0820               	movf	?___xxtofl^(0+128),w
 13332     1580  00CE               	movwf	___flmul@a^(0+128)
 13333     1581  3180  2075  3195   	fcall	___flmul
 13334     1584  084D               	movf	(?___flmul+3)^(0+128),w
 13335     1585  00B5               	movwf	(___fladd@a+3)^(0+128)
 13336     1586  084C               	movf	(?___flmul+2)^(0+128),w
 13337     1587  00B4               	movwf	(___fladd@a+2)^(0+128)
 13338     1588  084B               	movf	(?___flmul+1)^(0+128),w
 13339     1589  00B3               	movwf	(___fladd@a+1)^(0+128)
 13340     158A  084A               	movf	?___flmul^(0+128),w
 13341     158B  00B2               	movwf	___fladd@a^(0+128)
 13342     158C  3184  246D  3195   	fcall	___fladd
 13343     158F  0831               	movf	(?___fladd+3)^(0+128),w
 13344     1590  0022               	movlb	2	; select bank2
 13345     1591  00D1               	movwf	(getLedNumber@result+3)^(0+256)
 13346     1592  0021               	movlb	1	; select bank1
 13347     1593  0830               	movf	(?___fladd+2)^(0+128),w
 13348     1594  0022               	movlb	2	; select bank2
 13349     1595  00D0               	movwf	(getLedNumber@result+2)^(0+256)
 13350     1596  0021               	movlb	1	; select bank1
 13351     1597  082F               	movf	(?___fladd+1)^(0+128),w
 13352     1598  0022               	movlb	2	; select bank2
 13353     1599  00CF               	movwf	(getLedNumber@result+1)^(0+256)
 13354     159A  0021               	movlb	1	; select bank1
 13355     159B  082E               	movf	?___fladd^(0+128),w
 13356     159C  0022               	movlb	2	; select bank2
 13357     159D  00CE               	movwf	getLedNumber@result^(0+256)
 13358                           
 13359                           ;ledstrip.c: 35:     return result;
 13360     159E  0851               	movf	(getLedNumber@result+3)^(0+256),w
 13361     159F  0021               	movlb	1	; select bank1
 13362     15A0  00E7               	movwf	(___fltol@f1+3)^(0+128)
 13363     15A1  0022               	movlb	2	; select bank2
 13364     15A2  0850               	movf	(getLedNumber@result+2)^(0+256),w
 13365     15A3  0021               	movlb	1	; select bank1
 13366     15A4  00E6               	movwf	(___fltol@f1+2)^(0+128)
 13367     15A5  0022               	movlb	2	; select bank2
 13368     15A6  084F               	movf	(getLedNumber@result+1)^(0+256),w
 13369     15A7  0021               	movlb	1	; select bank1
 13370     15A8  00E5               	movwf	(___fltol@f1+1)^(0+128)
 13371     15A9  0022               	movlb	2	; select bank2
 13372     15AA  084E               	movf	getLedNumber@result^(0+256),w
 13373     15AB  0021               	movlb	1	; select bank1
 13374     15AC  00E4               	movwf	___fltol@f1^(0+128)
 13375     15AD  3196  2669         	fcall	___fltol
 13376     15AF  0865               	movf	(?___fltol+1)^(0+128),w
 13377     15B0  00EF               	movwf	(?_getLedNumber+1)^(0+128)
 13378     15B1  0864               	movf	?___fltol^(0+128),w
 13379     15B2  00EE               	movwf	?_getLedNumber^(0+128)
 13380     15B3  0008               	return
 13381     15B4                     __end_of_getLedNumber:
 13382                           
 13383                           	psect	text51
 13384     098C                     __ptext51:	
 13385 ;; *************** function ___xxtofl *****************
 13386 ;; Defined at:
 13387 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 13388 ;; Parameters:    Size  Location     Type
 13389 ;;  sign            1    wreg     unsigned char 
 13390 ;;  val             4    0[BANK1 ] long 
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;  sign            1    8[BANK1 ] unsigned char 
 13393 ;;  arg             4   10[BANK1 ] unsigned long 
 13394 ;;  exp             1    9[BANK1 ] unsigned char 
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  4    0[BANK1 ] unsigned char 
 13397 ;; Registers used:
 13398 ;;		wreg, status,2, status,0
 13399 ;; Tracked objects:
 13400 ;;		On entry : 1F/1
 13401 ;;		On exit  : 1F/1
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13404 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13405 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13406 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;Total ram usage:       14 bytes
 13409 ;; Hardware stack levels used: 1
 13410 ;; Hardware stack levels required when called: 5
 13411 ;; This function calls:
 13412 ;;		Nothing
 13413 ;; This function is called by:
 13414 ;;		_printFloat
 13415 ;;		_str2float
 13416 ;;		_getLedNumber
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420     098C                     ___xxtofl:	
 13421                           ;psect for function ___xxtofl
 13422                           
 13423                           
 13424                           ;incstack = 0
 13425                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13426                           ;___xxtofl@sign stored from wreg
 13427     098C  00A8               	movwf	___xxtofl@sign^(0+128)
 13428     098D  0828               	movf	___xxtofl@sign^(0+128),w
 13429     098E  1D03               	btfss	3,2
 13430     098F  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 13431     0990  29A1               	goto	l4641
 13432     0991  0920               	comf	___xxtofl@val^(0+128),w
 13433     0992  00AA               	movwf	___xxtofl@arg^(0+128)
 13434     0993  0921               	comf	(___xxtofl@val^(0+128)+1),w
 13435     0994  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 13436     0995  0922               	comf	(___xxtofl@val^(0+128)+2),w
 13437     0996  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 13438     0997  0923               	comf	(___xxtofl@val^(0+128)+3),w
 13439     0998  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 13440     0999  0AAA               	incf	___xxtofl@arg^(0+128),f
 13441     099A  1903               	skipnz
 13442     099B  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
 13443     099C  1903               	skipnz
 13444     099D  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
 13445     099E  1903               	skipnz
 13446     099F  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
 13447     09A0  29A9               	goto	l1622
 13448     09A1                     l4641:
 13449     09A1  0823               	movf	(___xxtofl@val+3)^(0+128),w
 13450     09A2  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 13451     09A3  0822               	movf	(___xxtofl@val+2)^(0+128),w
 13452     09A4  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 13453     09A5  0821               	movf	(___xxtofl@val+1)^(0+128),w
 13454     09A6  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 13455     09A7  0820               	movf	___xxtofl@val^(0+128),w
 13456     09A8  00AA               	movwf	___xxtofl@arg^(0+128)
 13457     09A9                     l1622:
 13458     09A9  0823               	movf	(___xxtofl@val+3)^(0+128),w
 13459     09AA  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
 13460     09AB  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
 13461     09AC  0420               	iorwf	___xxtofl@val^(0+128),w
 13462     09AD  1D03               	skipz
 13463     09AE  29B8               	goto	l1623
 13464     09AF  3000               	movlw	0
 13465     09B0  00A3               	movwf	(?___xxtofl+3)^(0+128)
 13466     09B1  3000               	movlw	0
 13467     09B2  00A2               	movwf	(?___xxtofl+2)^(0+128)
 13468     09B3  3000               	movlw	0
 13469     09B4  00A1               	movwf	(?___xxtofl+1)^(0+128)
 13470     09B5  3000               	movlw	0
 13471     09B6  00A0               	movwf	?___xxtofl^(0+128)
 13472     09B7  0008               	return
 13473     09B8                     l1623:
 13474     09B8  3096               	movlw	150
 13475     09B9  00A9               	movwf	___xxtofl@exp^(0+128)
 13476     09BA                     l4649:
 13477     09BA  30FE               	movlw	254
 13478     09BB  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 13479     09BC  1903               	btfsc	3,2
 13480     09BD  29D7               	goto	l4653
 13481     09BE  3001               	movlw	1
 13482     09BF  07A9               	addwf	___xxtofl@exp^(0+128),f
 13483     09C0  3001               	movlw	1
 13484     09C1                     u5415:
 13485     09C1  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 13486     09C2  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 13487     09C3  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 13488     09C4  0CAA               	rrf	___xxtofl@arg^(0+128),f
 13489     09C5  0B89               	decfsz	9,f
 13490     09C6  29C1               	goto	u5415
 13491     09C7  29BA               	goto	l4649
 13492     09C8                     l4651:
 13493     09C8  3001               	movlw	1
 13494     09C9  07A9               	addwf	___xxtofl@exp^(0+128),f
 13495     09CA  3001               	movlw	1
 13496     09CB  07AA               	addwf	___xxtofl@arg^(0+128),f
 13497     09CC  3000               	movlw	0
 13498     09CD  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
 13499     09CE  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
 13500     09CF  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
 13501     09D0  3001               	movlw	1
 13502     09D1                     u5435:
 13503     09D1  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 13504     09D2  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 13505     09D3  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 13506     09D4  0CAA               	rrf	___xxtofl@arg^(0+128),f
 13507     09D5  0B89               	decfsz	9,f
 13508     09D6  29D1               	goto	u5435
 13509     09D7                     l4653:
 13510     09D7  30FF               	movlw	255
 13511     09D8  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 13512     09D9  1903               	btfsc	3,2
 13513     09DA  29E9               	goto	l4657
 13514     09DB  29C8               	goto	l4651
 13515     09DC                     l4659:
 13516     09DC  3002               	movlw	2
 13517     09DD  0229               	subwf	___xxtofl@exp^(0+128),w
 13518     09DE  1C03               	btfss	3,0
 13519     09DF  29EB               	goto	l1635
 13520     09E0  3001               	movlw	1
 13521     09E1  02A9               	subwf	___xxtofl@exp^(0+128),f
 13522     09E2  3001               	movlw	1
 13523     09E3                     u5455:
 13524     09E3  35AA               	lslf	___xxtofl@arg^(0+128),f
 13525     09E4  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
 13526     09E5  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
 13527     09E6  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
 13528     09E7  0B89               	decfsz	9,f
 13529     09E8  29E3               	goto	u5455
 13530     09E9                     l4657:
 13531     09E9  1FAC               	btfss	(___xxtofl@arg+2)^(0+128),7
 13532     09EA  29DC               	goto	l4659
 13533     09EB                     l1635:
 13534     09EB  1829               	btfsc	___xxtofl@exp^(0+128),0
 13535     09EC  29F5               	goto	l1636
 13536     09ED  30FF               	movlw	255
 13537     09EE  05AA               	andwf	___xxtofl@arg^(0+128),f
 13538     09EF  30FF               	movlw	255
 13539     09F0  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
 13540     09F1  307F               	movlw	127
 13541     09F2  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
 13542     09F3  30FF               	movlw	255
 13543     09F4  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
 13544     09F5                     l1636:
 13545     09F5  1003               	clrc
 13546     09F6  0CA9               	rrf	___xxtofl@exp^(0+128),f
 13547     09F7  0829               	movf	___xxtofl@exp^(0+128),w
 13548     09F8  00A4               	movwf	??___xxtofl^(0+128)
 13549     09F9  01A5               	clrf	(??___xxtofl^(0+128)+1)
 13550     09FA  01A6               	clrf	(??___xxtofl^(0+128)+2)
 13551     09FB  01A7               	clrf	(??___xxtofl^(0+128)+3)
 13552     09FC  3018               	movlw	24
 13553     09FD                     u5495:
 13554     09FD  35A4               	lslf	??___xxtofl^(0+128),f
 13555     09FE  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
 13556     09FF  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
 13557     0A00  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
 13558     0A01  0B89               	decfsz	9,f
 13559     0A02  29FD               	goto	u5495
 13560     0A03  0824               	movf	??___xxtofl^(0+128),w
 13561     0A04  04AA               	iorwf	___xxtofl@arg^(0+128),f
 13562     0A05  0825               	movf	(??___xxtofl+1)^(0+128),w
 13563     0A06  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
 13564     0A07  0826               	movf	(??___xxtofl+2)^(0+128),w
 13565     0A08  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
 13566     0A09  0827               	movf	(??___xxtofl+3)^(0+128),w
 13567     0A0A  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
 13568     0A0B  0828               	movf	___xxtofl@sign^(0+128),w
 13569     0A0C  1D03               	btfss	3,2
 13570     0A0D  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 13571     0A0E  2A10               	goto	l4671
 13572     0A0F  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
 13573     0A10                     l4671:
 13574     0A10  082D               	movf	(___xxtofl@arg+3)^(0+128),w
 13575     0A11  00A3               	movwf	(?___xxtofl+3)^(0+128)
 13576     0A12  082C               	movf	(___xxtofl@arg+2)^(0+128),w
 13577     0A13  00A2               	movwf	(?___xxtofl+2)^(0+128)
 13578     0A14  082B               	movf	(___xxtofl@arg+1)^(0+128),w
 13579     0A15  00A1               	movwf	(?___xxtofl+1)^(0+128)
 13580     0A16  082A               	movf	___xxtofl@arg^(0+128),w
 13581     0A17  00A0               	movwf	?___xxtofl^(0+128)
 13582     0A18  0008               	return
 13583     0A19                     __end_of___xxtofl:
 13584                           
 13585                           	psect	text52
 13586     1669                     __ptext52:	
 13587 ;; *************** function ___fltol *****************
 13588 ;; Defined at:
 13589 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 13590 ;; Parameters:    Size  Location     Type
 13591 ;;  f1              4   68[BANK1 ] unsigned char 
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;  exp1            1   77[BANK1 ] unsigned char 
 13594 ;;  sign1           1   76[BANK1 ] unsigned char 
 13595 ;; Return value:  Size  Location     Type
 13596 ;;                  4   68[BANK1 ] long 
 13597 ;; Registers used:
 13598 ;;		wreg, status,2, status,0
 13599 ;; Tracked objects:
 13600 ;;		On entry : 1F/1
 13601 ;;		On exit  : 1F/1
 13602 ;;		Unchanged: 0/0
 13603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13604 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13605 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13606 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13607 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 13608 ;;Total ram usage:       10 bytes
 13609 ;; Hardware stack levels used: 1
 13610 ;; Hardware stack levels required when called: 5
 13611 ;; This function calls:
 13612 ;;		Nothing
 13613 ;; This function is called by:
 13614 ;;		_printFloat
 13615 ;;		_getLedNumber
 13616 ;; This function uses a non-reentrant model
 13617 ;;
 13618                           
 13619     1669                     ___fltol:	
 13620                           ;psect for function ___fltol
 13621                           
 13622                           
 13623                           ;incstack = 0
 13624                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13625     1669  1003               	clrc
 13626     166A  0D66               	rlf	(___fltol@f1+2)^(0+128),w
 13627     166B  0D67               	rlf	(___fltol@f1+3)^(0+128),w
 13628     166C  00ED               	movwf	___fltol@exp1^(0+128)
 13629     166D  086D               	movf	___fltol@exp1^(0+128),w
 13630     166E  1D03               	btfss	3,2
 13631     166F  2E79               	goto	l4269
 13632     1670                     l4265:
 13633     1670  3000               	movlw	0
 13634     1671  00E7               	movwf	(?___fltol+3)^(0+128)
 13635     1672  3000               	movlw	0
 13636     1673  00E6               	movwf	(?___fltol+2)^(0+128)
 13637     1674  3000               	movlw	0
 13638     1675  00E5               	movwf	(?___fltol+1)^(0+128)
 13639     1676  3000               	movlw	0
 13640     1677  00E4               	movwf	?___fltol^(0+128)
 13641     1678  0008               	return
 13642     1679                     l4269:
 13643     1679  0864               	movf	___fltol@f1^(0+128),w
 13644     167A  00E8               	movwf	??___fltol^(0+128)
 13645     167B  0865               	movf	(___fltol@f1+1)^(0+128),w
 13646     167C  00E9               	movwf	(??___fltol^(0+128)+1)
 13647     167D  0866               	movf	(___fltol@f1+2)^(0+128),w
 13648     167E  00EA               	movwf	(??___fltol^(0+128)+2)
 13649     167F  0867               	movf	(___fltol@f1+3)^(0+128),w
 13650     1680  00EB               	movwf	(??___fltol^(0+128)+3)
 13651     1681  301F               	movlw	31
 13652     1682                     u4575:
 13653     1682  36EB               	lsrf	(??___fltol^(0+128)+3),f
 13654     1683  0CEA               	rrf	(??___fltol^(0+128)+2),f
 13655     1684  0CE9               	rrf	(??___fltol^(0+128)+1),f
 13656     1685  0CE8               	rrf	??___fltol^(0+128),f
 13657     1686  0B89               	decfsz	9,f
 13658     1687  2E82               	goto	u4575
 13659     1688  0868               	movf	??___fltol^(0+128),w
 13660     1689  00EC               	movwf	___fltol@sign1^(0+128)
 13661     168A  17E6               	bsf	(___fltol@f1^(0+128)+2),7
 13662     168B  30FF               	movlw	255
 13663     168C  05E4               	andwf	___fltol@f1^(0+128),f
 13664     168D  30FF               	movlw	255
 13665     168E  05E5               	andwf	(___fltol@f1+1)^(0+128),f
 13666     168F  30FF               	movlw	255
 13667     1690  05E6               	andwf	(___fltol@f1+2)^(0+128),f
 13668     1691  3000               	movlw	0
 13669     1692  05E7               	andwf	(___fltol@f1+3)^(0+128),f
 13670     1693  3096               	movlw	150
 13671     1694  02ED               	subwf	___fltol@exp1^(0+128),f
 13672     1695  1FED               	btfss	___fltol@exp1^(0+128),7
 13673     1696  2EA8               	goto	l4287
 13674     1697  086D               	movf	___fltol@exp1^(0+128),w
 13675     1698  3A80               	xorlw	128
 13676     1699  3E97               	addlw	151
 13677     169A  1C03               	btfss	3,0
 13678     169B  2E70               	goto	l4265
 13679     169C                     l4285:
 13680     169C  3001               	movlw	1
 13681     169D                     u4605:
 13682     169D  36E7               	lsrf	(___fltol@f1+3)^(0+128),f
 13683     169E  0CE6               	rrf	(___fltol@f1+2)^(0+128),f
 13684     169F  0CE5               	rrf	(___fltol@f1+1)^(0+128),f
 13685     16A0  0CE4               	rrf	___fltol@f1^(0+128),f
 13686     16A1  0B89               	decfsz	9,f
 13687     16A2  2E9D               	goto	u4605
 13688     16A3  3001               	movlw	1
 13689     16A4  07ED               	addwf	___fltol@exp1^(0+128),f
 13690     16A5  1903               	btfsc	3,2
 13691     16A6  2EB9               	goto	l4295
 13692     16A7  2E9C               	goto	l4285
 13693     16A8                     l4287:
 13694     16A8  3020               	movlw	32
 13695     16A9  026D               	subwf	___fltol@exp1^(0+128),w
 13696     16AA  1803               	btfsc	3,0
 13697     16AB  2E70               	goto	l4265
 13698     16AC                     l1382:
 13699     16AC  086D               	movf	___fltol@exp1^(0+128),w
 13700     16AD  1903               	btfsc	3,2
 13701     16AE  2EB9               	goto	l4295
 13702     16AF  3001               	movlw	1
 13703     16B0                     u4635:
 13704     16B0  35E4               	lslf	___fltol@f1^(0+128),f
 13705     16B1  0DE5               	rlf	(___fltol@f1+1)^(0+128),f
 13706     16B2  0DE6               	rlf	(___fltol@f1+2)^(0+128),f
 13707     16B3  0DE7               	rlf	(___fltol@f1+3)^(0+128),f
 13708     16B4  0B89               	decfsz	9,f
 13709     16B5  2EB0               	goto	u4635
 13710     16B6  3001               	movlw	1
 13711     16B7  02ED               	subwf	___fltol@exp1^(0+128),f
 13712     16B8  2EAC               	goto	l1382
 13713     16B9                     l4295:
 13714     16B9  086C               	movf	___fltol@sign1^(0+128),w
 13715     16BA  1903               	btfsc	3,2
 13716     16BB  0008               	return
 13717     16BC  09E4               	comf	___fltol@f1^(0+128),f
 13718     16BD  09E5               	comf	(___fltol@f1+1)^(0+128),f
 13719     16BE  09E6               	comf	(___fltol@f1+2)^(0+128),f
 13720     16BF  09E7               	comf	(___fltol@f1+3)^(0+128),f
 13721     16C0  0AE4               	incf	___fltol@f1^(0+128),f
 13722     16C1  1903               	skipnz
 13723     16C2  0AE5               	incf	(___fltol@f1+1)^(0+128),f
 13724     16C3  1903               	skipnz
 13725     16C4  0AE6               	incf	(___fltol@f1+2)^(0+128),f
 13726     16C5  1903               	skipnz
 13727     16C6  0AE7               	incf	(___fltol@f1+3)^(0+128),f
 13728     16C7  0008               	return
 13729     16C8                     __end_of___fltol:
 13730                           
 13731                           	psect	text53
 13732     0075                     __ptext53:	
 13733 ;; *************** function ___flmul *****************
 13734 ;; Defined at:
 13735 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 13736 ;; Parameters:    Size  Location     Type
 13737 ;;  b               4   42[BANK1 ] long 
 13738 ;;  a               4   46[BANK1 ] long 
 13739 ;; Auto vars:     Size  Location     Type
 13740 ;;  prod            4   62[BANK1 ] struct .
 13741 ;;  grs             4   57[BANK1 ] unsigned long 
 13742 ;;  temp            2   66[BANK1 ] struct .
 13743 ;;  bexp            1   61[BANK1 ] unsigned char 
 13744 ;;  aexp            1   56[BANK1 ] unsigned char 
 13745 ;;  sign            1   55[BANK1 ] unsigned char 
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  4   42[BANK1 ] unsigned char 
 13748 ;; Registers used:
 13749 ;;		wreg, status,2, status,0, pclath, cstack
 13750 ;; Tracked objects:
 13751 ;;		On entry : 1F/1
 13752 ;;		On exit  : 1F/1
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13755 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13756 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13757 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13758 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 13759 ;;Total ram usage:       26 bytes
 13760 ;; Hardware stack levels used: 1
 13761 ;; Hardware stack levels required when called: 6
 13762 ;; This function calls:
 13763 ;;		__Umul8_16
 13764 ;; This function is called by:
 13765 ;;		_printFloat
 13766 ;;		_str2float
 13767 ;;		_getLedNumber
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771     0075                     ___flmul:	
 13772                           ;psect for function ___flmul
 13773                           
 13774                           
 13775                           ;incstack = 0
 13776                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13777     0075  084D               	movf	(___flmul@b^(0+128)+3),w
 13778     0076  3980               	andlw	128
 13779     0077  00D7               	movwf	___flmul@sign^(0+128)
 13780     0078  354D               	lslf	(___flmul@b^(0+128)+3),w
 13781     0079  00DD               	movwf	___flmul@bexp^(0+128)
 13782     007A  1BCC               	btfsc	(___flmul@b^(0+128)+2),7
 13783     007B  145D               	bsf	___flmul@bexp^(0+128),0
 13784     007C  085D               	movf	___flmul@bexp^(0+128),w
 13785     007D  1903               	btfsc	3,2
 13786     007E  288C               	goto	l4511
 13787     007F  0A5D               	incf	___flmul@bexp^(0+128),w
 13788     0080  1D03               	btfss	3,2
 13789     0081  288A               	goto	l4509
 13790     0082  3000               	movlw	0
 13791     0083  00CD               	movwf	(___flmul@b+3)^(0+128)
 13792     0084  3000               	movlw	0
 13793     0085  00CC               	movwf	(___flmul@b+2)^(0+128)
 13794     0086  3000               	movlw	0
 13795     0087  00CB               	movwf	(___flmul@b+1)^(0+128)
 13796     0088  3000               	movlw	0
 13797     0089  00CA               	movwf	___flmul@b^(0+128)
 13798     008A                     l4509:
 13799     008A  17CC               	bsf	(___flmul@b^(0+128)+2),7
 13800     008B  2894               	goto	l4513
 13801     008C                     l4511:
 13802     008C  3000               	movlw	0
 13803     008D  00CD               	movwf	(___flmul@b+3)^(0+128)
 13804     008E  3000               	movlw	0
 13805     008F  00CC               	movwf	(___flmul@b+2)^(0+128)
 13806     0090  3000               	movlw	0
 13807     0091  00CB               	movwf	(___flmul@b+1)^(0+128)
 13808     0092  3000               	movlw	0
 13809     0093  00CA               	movwf	___flmul@b^(0+128)
 13810     0094                     l4513:
 13811     0094  0851               	movf	(___flmul@a^(0+128)+3),w
 13812     0095  3980               	andlw	128
 13813     0096  06D7               	xorwf	___flmul@sign^(0+128),f
 13814     0097  3551               	lslf	(___flmul@a^(0+128)+3),w
 13815     0098  00D8               	movwf	___flmul@aexp^(0+128)
 13816     0099  1BD0               	btfsc	(___flmul@a^(0+128)+2),7
 13817     009A  1458               	bsf	___flmul@aexp^(0+128),0
 13818     009B  0858               	movf	___flmul@aexp^(0+128),w
 13819     009C  1903               	btfsc	3,2
 13820     009D  28AB               	goto	l4529
 13821     009E  0A58               	incf	___flmul@aexp^(0+128),w
 13822     009F  1D03               	btfss	3,2
 13823     00A0  28A9               	goto	l4527
 13824     00A1  3000               	movlw	0
 13825     00A2  00D1               	movwf	(___flmul@a+3)^(0+128)
 13826     00A3  3000               	movlw	0
 13827     00A4  00D0               	movwf	(___flmul@a+2)^(0+128)
 13828     00A5  3000               	movlw	0
 13829     00A6  00CF               	movwf	(___flmul@a+1)^(0+128)
 13830     00A7  3000               	movlw	0
 13831     00A8  00CE               	movwf	___flmul@a^(0+128)
 13832     00A9                     l4527:
 13833     00A9  17D0               	bsf	(___flmul@a^(0+128)+2),7
 13834     00AA  28B3               	goto	l4531
 13835     00AB                     l4529:
 13836     00AB  3000               	movlw	0
 13837     00AC  00D1               	movwf	(___flmul@a+3)^(0+128)
 13838     00AD  3000               	movlw	0
 13839     00AE  00D0               	movwf	(___flmul@a+2)^(0+128)
 13840     00AF  3000               	movlw	0
 13841     00B0  00CF               	movwf	(___flmul@a+1)^(0+128)
 13842     00B1  3000               	movlw	0
 13843     00B2  00CE               	movwf	___flmul@a^(0+128)
 13844     00B3                     l4531:
 13845     00B3  0858               	movf	___flmul@aexp^(0+128),w
 13846     00B4  1D03               	btfss	3,2
 13847     00B5  085D               	movf	___flmul@bexp^(0+128),w
 13848     00B6  1D03               	btfss	3,2
 13849     00B7  28C1               	goto	l4539
 13850     00B8  3000               	movlw	0
 13851     00B9  00CD               	movwf	(?___flmul+3)^(0+128)
 13852     00BA  3000               	movlw	0
 13853     00BB  00CC               	movwf	(?___flmul+2)^(0+128)
 13854     00BC  3000               	movlw	0
 13855     00BD  00CB               	movwf	(?___flmul+1)^(0+128)
 13856     00BE  3000               	movlw	0
 13857     00BF  00CA               	movwf	?___flmul^(0+128)
 13858     00C0  0008               	return
 13859     00C1                     l4539:
 13860     00C1  084A               	movf	___flmul@b^(0+128),w
 13861     00C2  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 13862     00C3  0850               	movf	(___flmul@a^(0+128)+2),w
 13863     00C4  3192  221D  3180   	fcall	__Umul8_16
 13864     00C7  0821               	movf	(?__Umul8_16+1)^(0+128),w
 13865     00C8  00E3               	movwf	(___flmul@temp+1)^(0+128)
 13866     00C9  0820               	movf	?__Umul8_16^(0+128),w
 13867     00CA  00E2               	movwf	___flmul@temp^(0+128)
 13868     00CB  0862               	movf	___flmul@temp^(0+128),w
 13869     00CC  00D2               	movwf	??___flmul^(0+128)
 13870     00CD  01D3               	clrf	(??___flmul^(0+128)+1)
 13871     00CE  01D4               	clrf	(??___flmul^(0+128)+2)
 13872     00CF  01D5               	clrf	(??___flmul^(0+128)+3)
 13873     00D0  0855               	movf	(??___flmul+3)^(0+128),w
 13874     00D1  00DC               	movwf	(___flmul@grs+3)^(0+128)
 13875     00D2  0854               	movf	(??___flmul+2)^(0+128),w
 13876     00D3  00DB               	movwf	(___flmul@grs+2)^(0+128)
 13877     00D4  0853               	movf	(??___flmul+1)^(0+128),w
 13878     00D5  00DA               	movwf	(___flmul@grs+1)^(0+128)
 13879     00D6  0852               	movf	??___flmul^(0+128),w
 13880     00D7  00D9               	movwf	___flmul@grs^(0+128)
 13881     00D8  0863               	movf	(___flmul@temp^(0+128)+1),w
 13882     00D9  00D2               	movwf	??___flmul^(0+128)
 13883     00DA  01D3               	clrf	(??___flmul^(0+128)+1)
 13884     00DB  01D4               	clrf	(??___flmul^(0+128)+2)
 13885     00DC  01D5               	clrf	(??___flmul^(0+128)+3)
 13886     00DD  0855               	movf	(??___flmul+3)^(0+128),w
 13887     00DE  00E1               	movwf	(___flmul@prod+3)^(0+128)
 13888     00DF  0854               	movf	(??___flmul+2)^(0+128),w
 13889     00E0  00E0               	movwf	(___flmul@prod+2)^(0+128)
 13890     00E1  0853               	movf	(??___flmul+1)^(0+128),w
 13891     00E2  00DF               	movwf	(___flmul@prod+1)^(0+128)
 13892     00E3  0852               	movf	??___flmul^(0+128),w
 13893     00E4  00DE               	movwf	___flmul@prod^(0+128)
 13894     00E5  084B               	movf	(___flmul@b^(0+128)+1),w
 13895     00E6  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 13896     00E7  084F               	movf	(___flmul@a^(0+128)+1),w
 13897     00E8  3192  221D  3180   	fcall	__Umul8_16
 13898     00EB  0821               	movf	(?__Umul8_16+1)^(0+128),w
 13899     00EC  00E3               	movwf	(___flmul@temp+1)^(0+128)
 13900     00ED  0820               	movf	?__Umul8_16^(0+128),w
 13901     00EE  00E2               	movwf	___flmul@temp^(0+128)
 13902     00EF  0862               	movf	___flmul@temp^(0+128),w
 13903     00F0  00D2               	movwf	??___flmul^(0+128)
 13904     00F1  01D3               	clrf	(??___flmul^(0+128)+1)
 13905     00F2  01D4               	clrf	(??___flmul^(0+128)+2)
 13906     00F3  01D5               	clrf	(??___flmul^(0+128)+3)
 13907     00F4  0852               	movf	??___flmul^(0+128),w
 13908     00F5  07D9               	addwf	___flmul@grs^(0+128),f
 13909     00F6  0853               	movf	(??___flmul+1)^(0+128),w
 13910     00F7  3DDA               	addwfc	(___flmul@grs+1)^(0+128),f
 13911     00F8  0854               	movf	(??___flmul+2)^(0+128),w
 13912     00F9  3DDB               	addwfc	(___flmul@grs+2)^(0+128),f
 13913     00FA  0855               	movf	(??___flmul+3)^(0+128),w
 13914     00FB  3DDC               	addwfc	(___flmul@grs+3)^(0+128),f
 13915     00FC  0863               	movf	(___flmul@temp^(0+128)+1),w
 13916     00FD  00D2               	movwf	??___flmul^(0+128)
 13917     00FE  01D3               	clrf	(??___flmul^(0+128)+1)
 13918     00FF  01D4               	clrf	(??___flmul^(0+128)+2)
 13919     0100  01D5               	clrf	(??___flmul^(0+128)+3)
 13920     0101  0852               	movf	??___flmul^(0+128),w
 13921     0102  07DE               	addwf	___flmul@prod^(0+128),f
 13922     0103  0853               	movf	(??___flmul+1)^(0+128),w
 13923     0104  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 13924     0105  0854               	movf	(??___flmul+2)^(0+128),w
 13925     0106  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 13926     0107  0855               	movf	(??___flmul+3)^(0+128),w
 13927     0108  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 13928     0109  084C               	movf	(___flmul@b^(0+128)+2),w
 13929     010A  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 13930     010B  084E               	movf	___flmul@a^(0+128),w
 13931     010C  3192  221D  3180   	fcall	__Umul8_16
 13932     010F  0821               	movf	(?__Umul8_16+1)^(0+128),w
 13933     0110  00E3               	movwf	(___flmul@temp+1)^(0+128)
 13934     0111  0820               	movf	?__Umul8_16^(0+128),w
 13935     0112  00E2               	movwf	___flmul@temp^(0+128)
 13936     0113  0862               	movf	___flmul@temp^(0+128),w
 13937     0114  00D2               	movwf	??___flmul^(0+128)
 13938     0115  01D3               	clrf	(??___flmul^(0+128)+1)
 13939     0116  01D4               	clrf	(??___flmul^(0+128)+2)
 13940     0117  01D5               	clrf	(??___flmul^(0+128)+3)
 13941     0118  0852               	movf	??___flmul^(0+128),w
 13942     0119  07D9               	addwf	___flmul@grs^(0+128),f
 13943     011A  0853               	movf	(??___flmul+1)^(0+128),w
 13944     011B  3DDA               	addwfc	(___flmul@grs+1)^(0+128),f
 13945     011C  0854               	movf	(??___flmul+2)^(0+128),w
 13946     011D  3DDB               	addwfc	(___flmul@grs+2)^(0+128),f
 13947     011E  0855               	movf	(??___flmul+3)^(0+128),w
 13948     011F  3DDC               	addwfc	(___flmul@grs+3)^(0+128),f
 13949     0120  0863               	movf	(___flmul@temp^(0+128)+1),w
 13950     0121  00D2               	movwf	??___flmul^(0+128)
 13951     0122  01D3               	clrf	(??___flmul^(0+128)+1)
 13952     0123  01D4               	clrf	(??___flmul^(0+128)+2)
 13953     0124  01D5               	clrf	(??___flmul^(0+128)+3)
 13954     0125  0852               	movf	??___flmul^(0+128),w
 13955     0126  07DE               	addwf	___flmul@prod^(0+128),f
 13956     0127  0853               	movf	(??___flmul+1)^(0+128),w
 13957     0128  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 13958     0129  0854               	movf	(??___flmul+2)^(0+128),w
 13959     012A  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 13960     012B  0855               	movf	(??___flmul+3)^(0+128),w
 13961     012C  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 13962     012D  3008               	movlw	8
 13963     012E                     u5205:
 13964     012E  35D9               	lslf	___flmul@grs^(0+128),f
 13965     012F  0DDA               	rlf	(___flmul@grs+1)^(0+128),f
 13966     0130  0DDB               	rlf	(___flmul@grs+2)^(0+128),f
 13967     0131  0DDC               	rlf	(___flmul@grs+3)^(0+128),f
 13968     0132  0B89               	decfsz	9,f
 13969     0133  292E               	goto	u5205
 13970     0134  084B               	movf	(___flmul@b^(0+128)+1),w
 13971     0135  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 13972     0136  084E               	movf	___flmul@a^(0+128),w
 13973     0137  3192  221D  3180   	fcall	__Umul8_16
 13974     013A  0821               	movf	(?__Umul8_16+1)^(0+128),w
 13975     013B  00E3               	movwf	(___flmul@temp+1)^(0+128)
 13976     013C  0820               	movf	?__Umul8_16^(0+128),w
 13977     013D  00E2               	movwf	___flmul@temp^(0+128)
 13978     013E  0862               	movf	___flmul@temp^(0+128),w
 13979     013F  07D9               	addwf	___flmul@grs^(0+128),f
 13980     0140  0863               	movf	(___flmul@temp+1)^(0+128),w
 13981     0141  3DDA               	addwfc	(___flmul@grs+1)^(0+128),f
 13982     0142  3000               	movlw	0
 13983     0143  3DDB               	addwfc	(___flmul@grs+2)^(0+128),f
 13984     0144  3DDC               	addwfc	(___flmul@grs+3)^(0+128),f
 13985     0145  084A               	movf	___flmul@b^(0+128),w
 13986     0146  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 13987     0147  084F               	movf	(___flmul@a^(0+128)+1),w
 13988     0148  3192  221D  3180   	fcall	__Umul8_16
 13989     014B  0821               	movf	(?__Umul8_16+1)^(0+128),w
 13990     014C  00E3               	movwf	(___flmul@temp+1)^(0+128)
 13991     014D  0820               	movf	?__Umul8_16^(0+128),w
 13992     014E  00E2               	movwf	___flmul@temp^(0+128)
 13993     014F  0862               	movf	___flmul@temp^(0+128),w
 13994     0150  07D9               	addwf	___flmul@grs^(0+128),f
 13995     0151  0863               	movf	(___flmul@temp+1)^(0+128),w
 13996     0152  3DDA               	addwfc	(___flmul@grs+1)^(0+128),f
 13997     0153  3000               	movlw	0
 13998     0154  3DDB               	addwfc	(___flmul@grs+2)^(0+128),f
 13999     0155  3DDC               	addwfc	(___flmul@grs+3)^(0+128),f
 14000     0156  3008               	movlw	8
 14001     0157                     u5215:
 14002     0157  35D9               	lslf	___flmul@grs^(0+128),f
 14003     0158  0DDA               	rlf	(___flmul@grs+1)^(0+128),f
 14004     0159  0DDB               	rlf	(___flmul@grs+2)^(0+128),f
 14005     015A  0DDC               	rlf	(___flmul@grs+3)^(0+128),f
 14006     015B  0B89               	decfsz	9,f
 14007     015C  2957               	goto	u5215
 14008     015D  084A               	movf	___flmul@b^(0+128),w
 14009     015E  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14010     015F  084E               	movf	___flmul@a^(0+128),w
 14011     0160  3192  221D  3180   	fcall	__Umul8_16
 14012     0163  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14013     0164  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14014     0165  0820               	movf	?__Umul8_16^(0+128),w
 14015     0166  00E2               	movwf	___flmul@temp^(0+128)
 14016     0167  0862               	movf	___flmul@temp^(0+128),w
 14017     0168  07D9               	addwf	___flmul@grs^(0+128),f
 14018     0169  0863               	movf	(___flmul@temp+1)^(0+128),w
 14019     016A  3DDA               	addwfc	(___flmul@grs+1)^(0+128),f
 14020     016B  3000               	movlw	0
 14021     016C  3DDB               	addwfc	(___flmul@grs+2)^(0+128),f
 14022     016D  3DDC               	addwfc	(___flmul@grs+3)^(0+128),f
 14023     016E  084B               	movf	(___flmul@b^(0+128)+1),w
 14024     016F  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14025     0170  0850               	movf	(___flmul@a^(0+128)+2),w
 14026     0171  3192  221D  3180   	fcall	__Umul8_16
 14027     0174  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14028     0175  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14029     0176  0820               	movf	?__Umul8_16^(0+128),w
 14030     0177  00E2               	movwf	___flmul@temp^(0+128)
 14031     0178  0862               	movf	___flmul@temp^(0+128),w
 14032     0179  07DE               	addwf	___flmul@prod^(0+128),f
 14033     017A  0863               	movf	(___flmul@temp+1)^(0+128),w
 14034     017B  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14035     017C  3000               	movlw	0
 14036     017D  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14037     017E  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14038     017F  084C               	movf	(___flmul@b^(0+128)+2),w
 14039     0180  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14040     0181  084F               	movf	(___flmul@a^(0+128)+1),w
 14041     0182  3192  221D  3180   	fcall	__Umul8_16
 14042     0185  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14043     0186  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14044     0187  0820               	movf	?__Umul8_16^(0+128),w
 14045     0188  00E2               	movwf	___flmul@temp^(0+128)
 14046     0189  0862               	movf	___flmul@temp^(0+128),w
 14047     018A  07DE               	addwf	___flmul@prod^(0+128),f
 14048     018B  0863               	movf	(___flmul@temp+1)^(0+128),w
 14049     018C  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14050     018D  3000               	movlw	0
 14051     018E  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14052     018F  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14053     0190  084C               	movf	(___flmul@b^(0+128)+2),w
 14054     0191  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14055     0192  0850               	movf	(___flmul@a^(0+128)+2),w
 14056     0193  3192  221D  3180   	fcall	__Umul8_16
 14057     0196  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14058     0197  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14059     0198  0820               	movf	?__Umul8_16^(0+128),w
 14060     0199  00E2               	movwf	___flmul@temp^(0+128)
 14061     019A  0862               	movf	___flmul@temp^(0+128),w
 14062     019B  00D2               	movwf	??___flmul^(0+128)
 14063     019C  0863               	movf	(___flmul@temp+1)^(0+128),w
 14064     019D  00D3               	movwf	(??___flmul^(0+128)+1)
 14065     019E  01D4               	clrf	(??___flmul^(0+128)+2)
 14066     019F  01D5               	clrf	(??___flmul^(0+128)+3)
 14067     01A0  3008               	movlw	8
 14068     01A1                     u5225:
 14069     01A1  35D2               	lslf	??___flmul^(0+128),f
 14070     01A2  0DD3               	rlf	(??___flmul^(0+128)+1),f
 14071     01A3  0DD4               	rlf	(??___flmul^(0+128)+2),f
 14072     01A4  0DD5               	rlf	(??___flmul^(0+128)+3),f
 14073     01A5  0B89               	decfsz	9,f
 14074     01A6  29A1               	goto	u5225
 14075     01A7  0852               	movf	??___flmul^(0+128),w
 14076     01A8  07DE               	addwf	___flmul@prod^(0+128),f
 14077     01A9  0853               	movf	(??___flmul+1)^(0+128),w
 14078     01AA  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14079     01AB  0854               	movf	(??___flmul+2)^(0+128),w
 14080     01AC  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14081     01AD  0855               	movf	(??___flmul+3)^(0+128),w
 14082     01AE  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14083     01AF  085C               	movf	(___flmul@grs^(0+128)+3),w
 14084     01B0  00D2               	movwf	??___flmul^(0+128)
 14085     01B1  01D3               	clrf	(??___flmul^(0+128)+1)
 14086     01B2  01D4               	clrf	(??___flmul^(0+128)+2)
 14087     01B3  01D5               	clrf	(??___flmul^(0+128)+3)
 14088     01B4  0852               	movf	??___flmul^(0+128),w
 14089     01B5  07DE               	addwf	___flmul@prod^(0+128),f
 14090     01B6  0853               	movf	(??___flmul+1)^(0+128),w
 14091     01B7  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14092     01B8  0854               	movf	(??___flmul+2)^(0+128),w
 14093     01B9  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14094     01BA  0855               	movf	(??___flmul+3)^(0+128),w
 14095     01BB  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14096     01BC  3008               	movlw	8
 14097     01BD                     u5235:
 14098     01BD  35D9               	lslf	___flmul@grs^(0+128),f
 14099     01BE  0DDA               	rlf	(___flmul@grs+1)^(0+128),f
 14100     01BF  0DDB               	rlf	(___flmul@grs+2)^(0+128),f
 14101     01C0  0DDC               	rlf	(___flmul@grs+3)^(0+128),f
 14102     01C1  0B89               	decfsz	9,f
 14103     01C2  29BD               	goto	u5235
 14104     01C3  085D               	movf	___flmul@bexp^(0+128),w
 14105     01C4  0758               	addwf	___flmul@aexp^(0+128),w
 14106     01C5  00D2               	movwf	??___flmul^(0+128)
 14107     01C6  01D3               	clrf	(??___flmul^(0+128)+1)
 14108     01C7  0DD3               	rlf	(??___flmul+1)^(0+128),f
 14109     01C8  0852               	movf	??___flmul^(0+128),w
 14110     01C9  3E82               	addlw	130
 14111     01CA  00E2               	movwf	___flmul@temp^(0+128)
 14112     01CB  30FF               	movlw	255
 14113     01CC  3D53               	addwfc	(??___flmul+1)^(0+128),w
 14114     01CD  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14115     01CE                     l4591:
 14116     01CE  1BE0               	btfsc	(___flmul@prod+2)^(0+128),7
 14117     01CF  29E5               	goto	l4593
 14118     01D0  3001               	movlw	1
 14119     01D1                     u5245:
 14120     01D1  35DE               	lslf	___flmul@prod^(0+128),f
 14121     01D2  0DDF               	rlf	(___flmul@prod+1)^(0+128),f
 14122     01D3  0DE0               	rlf	(___flmul@prod+2)^(0+128),f
 14123     01D4  0DE1               	rlf	(___flmul@prod+3)^(0+128),f
 14124     01D5  0B89               	decfsz	9,f
 14125     01D6  29D1               	goto	u5245
 14126     01D7  1BDC               	btfsc	(___flmul@grs+3)^(0+128),7
 14127     01D8  145E               	bsf	___flmul@prod^(0+128),0
 14128     01D9  3001               	movlw	1
 14129     01DA                     u5265:
 14130     01DA  35D9               	lslf	___flmul@grs^(0+128),f
 14131     01DB  0DDA               	rlf	(___flmul@grs+1)^(0+128),f
 14132     01DC  0DDB               	rlf	(___flmul@grs+2)^(0+128),f
 14133     01DD  0DDC               	rlf	(___flmul@grs+3)^(0+128),f
 14134     01DE  0B89               	decfsz	9,f
 14135     01DF  29DA               	goto	u5265
 14136     01E0  30FF               	movlw	255
 14137     01E1  07E2               	addwf	___flmul@temp^(0+128),f
 14138     01E2  30FF               	movlw	255
 14139     01E3  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 14140     01E4  29CE               	goto	l4591
 14141     01E5                     l4593:
 14142     01E5  01D8               	clrf	___flmul@aexp^(0+128)
 14143     01E6  1FDC               	btfss	(___flmul@grs+3)^(0+128),7
 14144     01E7  29FE               	goto	l4603
 14145     01E8  30FF               	movlw	255
 14146     01E9  0559               	andwf	___flmul@grs^(0+128),w
 14147     01EA  00D2               	movwf	??___flmul^(0+128)
 14148     01EB  30FF               	movlw	255
 14149     01EC  055A               	andwf	(___flmul@grs+1)^(0+128),w
 14150     01ED  00D3               	movwf	(??___flmul^(0+128)+1)
 14151     01EE  30FF               	movlw	255
 14152     01EF  055B               	andwf	(___flmul@grs+2)^(0+128),w
 14153     01F0  00D4               	movwf	(??___flmul^(0+128)+2)
 14154     01F1  307F               	movlw	127
 14155     01F2  055C               	andwf	(___flmul@grs+3)^(0+128),w
 14156     01F3  00D5               	movwf	(??___flmul^(0+128)+3)
 14157     01F4  0855               	movf	(??___flmul+3)^(0+128),w
 14158     01F5  0454               	iorwf	(??___flmul+2)^(0+128),w
 14159     01F6  0453               	iorwf	(??___flmul+1)^(0+128),w
 14160     01F7  0452               	iorwf	??___flmul^(0+128),w
 14161     01F8  1903               	skipnz
 14162     01F9  185E               	btfsc	___flmul@prod^(0+128),0
 14163     01FA  29FC               	goto	l4599
 14164     01FB  29FE               	goto	l4603
 14165     01FC                     l4599:
 14166     01FC  3001               	movlw	1
 14167     01FD  00D8               	movwf	___flmul@aexp^(0+128)
 14168     01FE                     l4603:
 14169     01FE  0858               	movf	___flmul@aexp^(0+128),w
 14170     01FF  1903               	btfsc	3,2
 14171     0200  2A25               	goto	l4613
 14172     0201  3001               	movlw	1
 14173     0202  07DE               	addwf	___flmul@prod^(0+128),f
 14174     0203  3000               	movlw	0
 14175     0204  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14176     0205  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14177     0206  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14178     0207  1C61               	btfss	(___flmul@prod+3)^(0+128),0
 14179     0208  2A25               	goto	l4613
 14180     0209  085E               	movf	___flmul@prod^(0+128),w
 14181     020A  00D2               	movwf	??___flmul^(0+128)
 14182     020B  085F               	movf	(___flmul@prod+1)^(0+128),w
 14183     020C  00D3               	movwf	(??___flmul^(0+128)+1)
 14184     020D  0860               	movf	(___flmul@prod+2)^(0+128),w
 14185     020E  00D4               	movwf	(??___flmul^(0+128)+2)
 14186     020F  0861               	movf	(___flmul@prod+3)^(0+128),w
 14187     0210  00D5               	movwf	(??___flmul^(0+128)+3)
 14188     0211  3001               	movlw	1
 14189     0212  00D6               	movwf	(??___flmul+4)^(0+128)
 14190     0213                     u5335:
 14191     0213  37D5               	asrf	(??___flmul^(0+128)+3),f
 14192     0214  0CD4               	rrf	(??___flmul^(0+128)+2),f
 14193     0215  0CD3               	rrf	(??___flmul^(0+128)+1),f
 14194     0216  0CD2               	rrf	??___flmul^(0+128),f
 14195     0217  0BD6               	decfsz	(??___flmul+4)^(0+128),f
 14196     0218  2A13               	goto	u5335
 14197     0219  0855               	movf	(??___flmul+3)^(0+128),w
 14198     021A  00E1               	movwf	(___flmul@prod+3)^(0+128)
 14199     021B  0854               	movf	(??___flmul+2)^(0+128),w
 14200     021C  00E0               	movwf	(___flmul@prod+2)^(0+128)
 14201     021D  0853               	movf	(??___flmul+1)^(0+128),w
 14202     021E  00DF               	movwf	(___flmul@prod+1)^(0+128)
 14203     021F  0852               	movf	??___flmul^(0+128),w
 14204     0220  00DE               	movwf	___flmul@prod^(0+128)
 14205     0221  3001               	movlw	1
 14206     0222  07E2               	addwf	___flmul@temp^(0+128),f
 14207     0223  3000               	movlw	0
 14208     0224  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 14209     0225                     l4613:
 14210     0225  0863               	movf	(___flmul@temp+1)^(0+128),w
 14211     0226  3A80               	xorlw	128
 14212     0227  00D2               	movwf	??___flmul^(0+128)
 14213     0228  3080               	movlw	128
 14214     0229  0252               	subwf	??___flmul^(0+128),w
 14215     022A  1D03               	skipz
 14216     022B  2A2E               	goto	u5345
 14217     022C  30FF               	movlw	255
 14218     022D  0262               	subwf	___flmul@temp^(0+128),w
 14219     022E                     u5345:
 14220     022E  1C03               	skipc
 14221     022F  2A3A               	goto	l4617
 14222     0230  307F               	movlw	127
 14223     0231  0021               	movlb	1	; select bank1
 14224     0232  00E1               	movwf	(___flmul@prod+3)^(0+128)
 14225     0233  3080               	movlw	128
 14226     0234  00E0               	movwf	(___flmul@prod+2)^(0+128)
 14227     0235  3000               	movlw	0
 14228     0236  00DF               	movwf	(___flmul@prod+1)^(0+128)
 14229     0237  3000               	movlw	0
 14230     0238  00DE               	movwf	___flmul@prod^(0+128)
 14231     0239  2A66               	goto	l1590
 14232     023A                     l4617:
 14233     023A  0021               	movlb	1	; select bank1
 14234     023B  0863               	movf	(___flmul@temp+1)^(0+128),w
 14235     023C  3A80               	xorlw	128
 14236     023D  00D2               	movwf	??___flmul^(0+128)
 14237     023E  3080               	movlw	128
 14238     023F  0252               	subwf	??___flmul^(0+128),w
 14239     0240  1D03               	skipz
 14240     0241  2A44               	goto	u5355
 14241     0242  3001               	movlw	1
 14242     0243  0262               	subwf	___flmul@temp^(0+128),w
 14243     0244                     u5355:
 14244     0244  1803               	skipnc
 14245     0245  2A51               	goto	l4623
 14246     0246  3000               	movlw	0
 14247     0247  0021               	movlb	1	; select bank1
 14248     0248  00E1               	movwf	(___flmul@prod+3)^(0+128)
 14249     0249  3000               	movlw	0
 14250     024A  00E0               	movwf	(___flmul@prod+2)^(0+128)
 14251     024B  3000               	movlw	0
 14252     024C  00DF               	movwf	(___flmul@prod+1)^(0+128)
 14253     024D  3000               	movlw	0
 14254     024E  00DE               	movwf	___flmul@prod^(0+128)
 14255     024F  01D7               	clrf	___flmul@sign^(0+128)
 14256     0250  2A66               	goto	l1590
 14257     0251                     l4623:
 14258     0251  0021               	movlb	1	; select bank1
 14259     0252  0862               	movf	___flmul@temp^(0+128),w
 14260     0253  00DD               	movwf	___flmul@bexp^(0+128)
 14261     0254  30FF               	movlw	255
 14262     0255  05DE               	andwf	___flmul@prod^(0+128),f
 14263     0256  30FF               	movlw	255
 14264     0257  05DF               	andwf	(___flmul@prod+1)^(0+128),f
 14265     0258  307F               	movlw	127
 14266     0259  05E0               	andwf	(___flmul@prod+2)^(0+128),f
 14267     025A  3000               	movlw	0
 14268     025B  05E1               	andwf	(___flmul@prod+3)^(0+128),f
 14269     025C  185D               	btfsc	___flmul@bexp^(0+128),0
 14270     025D  17E0               	bsf	(___flmul@prod^(0+128)+2),7
 14271     025E  085D               	movf	___flmul@bexp^(0+128),w
 14272     025F  00D2               	movwf	??___flmul^(0+128)
 14273     0260  3001               	movlw	1
 14274     0261                     u5375:
 14275     0261  36D2               	lsrf	??___flmul^(0+128),f
 14276     0262  0B89               	decfsz	9,f
 14277     0263  2A61               	goto	u5375
 14278     0264  0852               	movf	??___flmul^(0+128),w
 14279     0265  00E1               	movwf	(___flmul@prod^(0+128)+3)
 14280     0266                     l1590:
 14281     0266  0857               	movf	___flmul@sign^(0+128),w
 14282     0267  04E1               	iorwf	(___flmul@prod^(0+128)+3),f
 14283     0268  0861               	movf	(___flmul@prod+3)^(0+128),w
 14284     0269  00CD               	movwf	(?___flmul+3)^(0+128)
 14285     026A  0860               	movf	(___flmul@prod+2)^(0+128),w
 14286     026B  00CC               	movwf	(?___flmul+2)^(0+128)
 14287     026C  085F               	movf	(___flmul@prod+1)^(0+128),w
 14288     026D  00CB               	movwf	(?___flmul+1)^(0+128)
 14289     026E  085E               	movf	___flmul@prod^(0+128),w
 14290     026F  00CA               	movwf	?___flmul^(0+128)
 14291     0270  0008               	return
 14292     0271                     __end_of___flmul:
 14293                           
 14294                           	psect	text54
 14295     121D                     __ptext54:	
 14296 ;; *************** function __Umul8_16 *****************
 14297 ;; Defined at:
 14298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  multiplier      1    wreg     unsigned char 
 14301 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;  multiplier      1    8[BANK1 ] unsigned char 
 14304 ;;  word_mpld       2    6[BANK1 ] unsigned short 
 14305 ;;  product         2    4[BANK1 ] unsigned short 
 14306 ;; Return value:  Size  Location     Type
 14307 ;;                  2    0[BANK1 ] unsigned int 
 14308 ;; Registers used:
 14309 ;;		wreg, status,2, status,0
 14310 ;; Tracked objects:
 14311 ;;		On entry : 1F/1
 14312 ;;		On exit  : 1F/1
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14315 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14316 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14317 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 14319 ;;Total ram usage:        9 bytes
 14320 ;; Hardware stack levels used: 1
 14321 ;; Hardware stack levels required when called: 5
 14322 ;; This function calls:
 14323 ;;		Nothing
 14324 ;; This function is called by:
 14325 ;;		___flmul
 14326 ;; This function uses a non-reentrant model
 14327 ;;
 14328                           
 14329     121D                     __Umul8_16:	
 14330                           ;psect for function __Umul8_16
 14331                           
 14332                           
 14333                           ;incstack = 0
 14334                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14335                           ;__Umul8_16@multiplier stored from wreg
 14336     121D  00A8               	movwf	__Umul8_16@multiplier^(0+128)
 14337     121E  01A4               	clrf	__Umul8_16@product^(0+128)
 14338     121F  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
 14339     1220  0820               	movf	__Umul8_16@multiplicand^(0+128),w
 14340     1221  00A2               	movwf	??__Umul8_16^(0+128)
 14341     1222  01A3               	clrf	(??__Umul8_16^(0+128)+1)
 14342     1223  0822               	movf	??__Umul8_16^(0+128),w
 14343     1224  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
 14344     1225  0823               	movf	(??__Umul8_16+1)^(0+128),w
 14345     1226  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
 14346     1227                     l4153:
 14347     1227  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
 14348     1228  2A2D               	goto	l1597
 14349     1229  0826               	movf	__Umul8_16@word_mpld^(0+128),w
 14350     122A  07A4               	addwf	__Umul8_16@product^(0+128),f
 14351     122B  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
 14352     122C  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
 14353     122D                     l1597:
 14354     122D  3001               	movlw	1
 14355     122E                     u4365:
 14356     122E  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
 14357     122F  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
 14358     1230  0B89               	decfsz	9,f
 14359     1231  2A2E               	goto	u4365
 14360     1232  1003               	clrc
 14361     1233  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
 14362     1234  0828               	movf	__Umul8_16@multiplier^(0+128),w
 14363     1235  1D03               	btfss	3,2
 14364     1236  2A27               	goto	l4153
 14365     1237  0825               	movf	(__Umul8_16@product+1)^(0+128),w
 14366     1238  00A1               	movwf	(?__Umul8_16+1)^(0+128)
 14367     1239  0824               	movf	__Umul8_16@product^(0+128),w
 14368     123A  00A0               	movwf	?__Umul8_16^(0+128)
 14369     123B  0008               	return
 14370     123C                     __end_of__Umul8_16:
 14371                           
 14372                           	psect	text55
 14373     046D                     __ptext55:	
 14374 ;; *************** function ___fladd *****************
 14375 ;; Defined at:
 14376 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  b               4   14[BANK1 ] unsigned int 
 14379 ;;  a               4   18[BANK1 ] unsigned int 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;  grs             1   33[BANK1 ] unsigned char 
 14382 ;;  bexp            1   32[BANK1 ] unsigned char 
 14383 ;;  aexp            1   31[BANK1 ] unsigned char 
 14384 ;;  signs           1   30[BANK1 ] unsigned char 
 14385 ;; Return value:  Size  Location     Type
 14386 ;;                  4   14[BANK1 ] unsigned char 
 14387 ;; Registers used:
 14388 ;;		wreg, status,2, status,0
 14389 ;; Tracked objects:
 14390 ;;		On entry : 1F/1
 14391 ;;		On exit  : 1F/1
 14392 ;;		Unchanged: 0/0
 14393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14394 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;Total ram usage:       20 bytes
 14399 ;; Hardware stack levels used: 1
 14400 ;; Hardware stack levels required when called: 5
 14401 ;; This function calls:
 14402 ;;		Nothing
 14403 ;; This function is called by:
 14404 ;;		_str2float
 14405 ;;		_getLedNumber
 14406 ;;		___flsub
 14407 ;; This function uses a non-reentrant model
 14408 ;;
 14409                           
 14410     046D                     ___fladd:	
 14411                           ;psect for function ___fladd
 14412                           
 14413                           
 14414                           ;incstack = 0
 14415                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14416     046D  0831               	movf	(___fladd@b^(0+128)+3),w
 14417     046E  3980               	andlw	128
 14418     046F  00BE               	movwf	___fladd@signs^(0+128)
 14419     0470  3531               	lslf	(___fladd@b^(0+128)+3),w
 14420     0471  00C0               	movwf	___fladd@bexp^(0+128)
 14421     0472  1BB0               	btfsc	(___fladd@b^(0+128)+2),7
 14422     0473  1440               	bsf	___fladd@bexp^(0+128),0
 14423     0474  0840               	movf	___fladd@bexp^(0+128),w
 14424     0475  1903               	btfsc	3,2
 14425     0476  2C85               	goto	l4317
 14426     0477  0A40               	incf	___fladd@bexp^(0+128),w
 14427     0478  1D03               	btfss	3,2
 14428     0479  2C82               	goto	l4313
 14429     047A  3000               	movlw	0
 14430     047B  00B1               	movwf	(___fladd@b+3)^(0+128)
 14431     047C  3000               	movlw	0
 14432     047D  00B0               	movwf	(___fladd@b+2)^(0+128)
 14433     047E  3000               	movlw	0
 14434     047F  00AF               	movwf	(___fladd@b+1)^(0+128)
 14435     0480  3000               	movlw	0
 14436     0481  00AE               	movwf	___fladd@b^(0+128)
 14437     0482                     l4313:
 14438     0482  17B0               	bsf	(___fladd@b^(0+128)+2),7
 14439     0483  01B1               	clrf	(___fladd@b^(0+128)+3)
 14440     0484  2C8D               	goto	l4319
 14441     0485                     l4317:
 14442     0485  3000               	movlw	0
 14443     0486  00B1               	movwf	(___fladd@b+3)^(0+128)
 14444     0487  3000               	movlw	0
 14445     0488  00B0               	movwf	(___fladd@b+2)^(0+128)
 14446     0489  3000               	movlw	0
 14447     048A  00AF               	movwf	(___fladd@b+1)^(0+128)
 14448     048B  3000               	movlw	0
 14449     048C  00AE               	movwf	___fladd@b^(0+128)
 14450     048D                     l4319:
 14451     048D  0835               	movf	(___fladd@a^(0+128)+3),w
 14452     048E  3980               	andlw	128
 14453     048F  00BF               	movwf	___fladd@aexp^(0+128)
 14454     0490  083F               	movf	___fladd@aexp^(0+128),w
 14455     0491  063E               	xorwf	___fladd@signs^(0+128),w
 14456     0492  1D03               	btfss	3,2
 14457     0493  173E               	bsf	___fladd@signs^(0+128),6
 14458     0494  3535               	lslf	(___fladd@a^(0+128)+3),w
 14459     0495  00BF               	movwf	___fladd@aexp^(0+128)
 14460     0496  1BB4               	btfsc	(___fladd@a^(0+128)+2),7
 14461     0497  143F               	bsf	___fladd@aexp^(0+128),0
 14462     0498  083F               	movf	___fladd@aexp^(0+128),w
 14463     0499  1903               	btfsc	3,2
 14464     049A  2CA9               	goto	l4341
 14465     049B  0A3F               	incf	___fladd@aexp^(0+128),w
 14466     049C  1D03               	btfss	3,2
 14467     049D  2CA6               	goto	l4337
 14468     049E  3000               	movlw	0
 14469     049F  00B5               	movwf	(___fladd@a+3)^(0+128)
 14470     04A0  3000               	movlw	0
 14471     04A1  00B4               	movwf	(___fladd@a+2)^(0+128)
 14472     04A2  3000               	movlw	0
 14473     04A3  00B3               	movwf	(___fladd@a+1)^(0+128)
 14474     04A4  3000               	movlw	0
 14475     04A5  00B2               	movwf	___fladd@a^(0+128)
 14476     04A6                     l4337:
 14477     04A6  17B4               	bsf	(___fladd@a^(0+128)+2),7
 14478     04A7  01B5               	clrf	(___fladd@a^(0+128)+3)
 14479     04A8  2CB1               	goto	l1482
 14480     04A9                     l4341:
 14481     04A9  3000               	movlw	0
 14482     04AA  00B5               	movwf	(___fladd@a+3)^(0+128)
 14483     04AB  3000               	movlw	0
 14484     04AC  00B4               	movwf	(___fladd@a+2)^(0+128)
 14485     04AD  3000               	movlw	0
 14486     04AE  00B3               	movwf	(___fladd@a+1)^(0+128)
 14487     04AF  3000               	movlw	0
 14488     04B0  00B2               	movwf	___fladd@a^(0+128)
 14489     04B1                     l1482:
 14490     04B1  0840               	movf	___fladd@bexp^(0+128),w
 14491     04B2  023F               	subwf	___fladd@aexp^(0+128),w
 14492     04B3  1803               	skipnc
 14493     04B4  2CD7               	goto	l4377
 14494     04B5  1F3E               	btfss	___fladd@signs^(0+128),6
 14495     04B6  2CB9               	goto	l4347
 14496     04B7  3080               	movlw	128
 14497     04B8  06BE               	xorwf	___fladd@signs^(0+128),f
 14498     04B9                     l4347:
 14499     04B9  0840               	movf	___fladd@bexp^(0+128),w
 14500     04BA  00C1               	movwf	___fladd@grs^(0+128)
 14501     04BB  083F               	movf	___fladd@aexp^(0+128),w
 14502     04BC  00C0               	movwf	___fladd@bexp^(0+128)
 14503     04BD  0841               	movf	___fladd@grs^(0+128),w
 14504     04BE  00BF               	movwf	___fladd@aexp^(0+128)
 14505     04BF  082E               	movf	___fladd@b^(0+128),w
 14506     04C0  00C1               	movwf	___fladd@grs^(0+128)
 14507     04C1  0832               	movf	___fladd@a^(0+128),w
 14508     04C2  00AE               	movwf	___fladd@b^(0+128)
 14509     04C3  0841               	movf	___fladd@grs^(0+128),w
 14510     04C4  00B2               	movwf	___fladd@a^(0+128)
 14511     04C5  082F               	movf	(___fladd@b^(0+128)+1),w
 14512     04C6  00C1               	movwf	___fladd@grs^(0+128)
 14513     04C7  0833               	movf	(___fladd@a^(0+128)+1),w
 14514     04C8  00AF               	movwf	(___fladd@b^(0+128)+1)
 14515     04C9  0841               	movf	___fladd@grs^(0+128),w
 14516     04CA  00B3               	movwf	(___fladd@a^(0+128)+1)
 14517     04CB  0830               	movf	(___fladd@b^(0+128)+2),w
 14518     04CC  00C1               	movwf	___fladd@grs^(0+128)
 14519     04CD  0834               	movf	(___fladd@a^(0+128)+2),w
 14520     04CE  00B0               	movwf	(___fladd@b^(0+128)+2)
 14521     04CF  0841               	movf	___fladd@grs^(0+128),w
 14522     04D0  00B4               	movwf	(___fladd@a^(0+128)+2)
 14523     04D1  0831               	movf	(___fladd@b^(0+128)+3),w
 14524     04D2  00C1               	movwf	___fladd@grs^(0+128)
 14525     04D3  0835               	movf	(___fladd@a^(0+128)+3),w
 14526     04D4  00B1               	movwf	(___fladd@b^(0+128)+3)
 14527     04D5  0841               	movf	___fladd@grs^(0+128),w
 14528     04D6  00B5               	movwf	(___fladd@a^(0+128)+3)
 14529     04D7                     l4377:
 14530     04D7  01C1               	clrf	___fladd@grs^(0+128)
 14531     04D8  083F               	movf	___fladd@aexp^(0+128),w
 14532     04D9  00B6               	movwf	??___fladd^(0+128)
 14533     04DA  01B7               	clrf	(??___fladd^(0+128)+1)
 14534     04DB  0837               	movf	(??___fladd+1)^(0+128),w
 14535     04DC  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 14536     04DD  0840               	movf	___fladd@bexp^(0+128),w
 14537     04DE  0236               	subwf	??___fladd^(0+128),w
 14538     04DF  00B8               	movwf	(??___fladd+2)^(0+128)
 14539     04E0  1C03               	skipc
 14540     04E1  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 14541     04E2  0839               	movf	(??___fladd+3)^(0+128),w
 14542     04E3  3A80               	xorlw	128
 14543     04E4  00BA               	movwf	(??___fladd+4)^(0+128)
 14544     04E5  3080               	movlw	128
 14545     04E6  023A               	subwf	(??___fladd+4)^(0+128),w
 14546     04E7  1D03               	skipz
 14547     04E8  2CEB               	goto	u4755
 14548     04E9  301A               	movlw	26
 14549     04EA  0238               	subwf	(??___fladd+2)^(0+128),w
 14550     04EB                     u4755:
 14551     04EB  1C03               	skipc
 14552     04EC  2D1D               	goto	l4395
 14553     04ED  0021               	movlb	1	; select bank1
 14554     04EE  0831               	movf	(___fladd@b+3)^(0+128),w
 14555     04EF  0430               	iorwf	(___fladd@b+2)^(0+128),w
 14556     04F0  042F               	iorwf	(___fladd@b+1)^(0+128),w
 14557     04F1  042E               	iorwf	___fladd@b^(0+128),w
 14558     04F2  1903               	btfsc	3,2
 14559     04F3  2CF6               	goto	u4760
 14560     04F4  3001               	movlw	1
 14561     04F5  2CF7               	goto	u4770
 14562     04F6                     u4760:
 14563     04F6  3000               	movlw	0
 14564     04F7                     u4770:
 14565     04F7  00C1               	movwf	___fladd@grs^(0+128)
 14566     04F8  3000               	movlw	0
 14567     04F9  00B1               	movwf	(___fladd@b+3)^(0+128)
 14568     04FA  3000               	movlw	0
 14569     04FB  00B0               	movwf	(___fladd@b+2)^(0+128)
 14570     04FC  3000               	movlw	0
 14571     04FD  00AF               	movwf	(___fladd@b+1)^(0+128)
 14572     04FE  3000               	movlw	0
 14573     04FF  00AE               	movwf	___fladd@b^(0+128)
 14574     0500  083F               	movf	___fladd@aexp^(0+128),w
 14575     0501  00C0               	movwf	___fladd@bexp^(0+128)
 14576     0502  2D22               	goto	l1486
 14577     0503                     l1488:
 14578     0503  1C41               	btfss	___fladd@grs^(0+128),0
 14579     0504  2D0F               	goto	l4385
 14580     0505  0841               	movf	___fladd@grs^(0+128),w
 14581     0506  00B6               	movwf	??___fladd^(0+128)
 14582     0507  3001               	movlw	1
 14583     0508                     u4795:
 14584     0508  36B6               	lsrf	??___fladd^(0+128),f
 14585     0509  0B89               	decfsz	9,f
 14586     050A  2D08               	goto	u4795
 14587     050B  0836               	movf	??___fladd^(0+128),w
 14588     050C  3801               	iorlw	1
 14589     050D  00C1               	movwf	___fladd@grs^(0+128)
 14590     050E  2D11               	goto	l4387
 14591     050F                     l4385:
 14592     050F  1003               	clrc
 14593     0510  0CC1               	rrf	___fladd@grs^(0+128),f
 14594     0511                     l4387:
 14595     0511  182E               	btfsc	___fladd@b^(0+128),0
 14596     0512  17C1               	bsf	___fladd@grs^(0+128),7
 14597     0513  3001               	movlw	1
 14598     0514  00B6               	movwf	??___fladd^(0+128)
 14599     0515                     u4815:
 14600     0515  37B1               	asrf	(___fladd@b+3)^(0+128),f
 14601     0516  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 14602     0517  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 14603     0518  0CAE               	rrf	___fladd@b^(0+128),f
 14604     0519  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 14605     051A  2D15               	goto	u4815
 14606     051B  3001               	movlw	1
 14607     051C  07C0               	addwf	___fladd@bexp^(0+128),f
 14608     051D                     l4395:
 14609     051D  0021               	movlb	1	; select bank1
 14610     051E  083F               	movf	___fladd@aexp^(0+128),w
 14611     051F  0240               	subwf	___fladd@bexp^(0+128),w
 14612     0520  1C03               	skipc
 14613     0521  2D03               	goto	l1488
 14614     0522                     l1486:
 14615     0522  1B3E               	btfsc	___fladd@signs^(0+128),6
 14616     0523  2D55               	goto	l4421
 14617     0524  0840               	movf	___fladd@bexp^(0+128),w
 14618     0525  1D03               	btfss	3,2
 14619     0526  2D30               	goto	l4403
 14620     0527  3000               	movlw	0
 14621     0528  00B1               	movwf	(?___fladd+3)^(0+128)
 14622     0529  3000               	movlw	0
 14623     052A  00B0               	movwf	(?___fladd+2)^(0+128)
 14624     052B  3000               	movlw	0
 14625     052C  00AF               	movwf	(?___fladd+1)^(0+128)
 14626     052D  3000               	movlw	0
 14627     052E  00AE               	movwf	?___fladd^(0+128)
 14628     052F  0008               	return
 14629     0530                     l4403:
 14630     0530  0832               	movf	___fladd@a^(0+128),w
 14631     0531  07AE               	addwf	___fladd@b^(0+128),f
 14632     0532  0833               	movf	(___fladd@a+1)^(0+128),w
 14633     0533  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 14634     0534  0834               	movf	(___fladd@a+2)^(0+128),w
 14635     0535  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 14636     0536  0835               	movf	(___fladd@a+3)^(0+128),w
 14637     0537  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 14638     0538  1C31               	btfss	(___fladd@b+3)^(0+128),0
 14639     0539  2DCE               	goto	l4457
 14640     053A  1C41               	btfss	___fladd@grs^(0+128),0
 14641     053B  2D46               	goto	l4411
 14642     053C  0841               	movf	___fladd@grs^(0+128),w
 14643     053D  00B6               	movwf	??___fladd^(0+128)
 14644     053E  3001               	movlw	1
 14645     053F                     u4875:
 14646     053F  36B6               	lsrf	??___fladd^(0+128),f
 14647     0540  0B89               	decfsz	9,f
 14648     0541  2D3F               	goto	u4875
 14649     0542  0836               	movf	??___fladd^(0+128),w
 14650     0543  3801               	iorlw	1
 14651     0544  00C1               	movwf	___fladd@grs^(0+128)
 14652     0545  2D48               	goto	l4413
 14653     0546                     l4411:
 14654     0546  1003               	clrc
 14655     0547  0CC1               	rrf	___fladd@grs^(0+128),f
 14656     0548                     l4413:
 14657     0548  182E               	btfsc	___fladd@b^(0+128),0
 14658     0549  17C1               	bsf	___fladd@grs^(0+128),7
 14659     054A  3001               	movlw	1
 14660     054B  00B6               	movwf	??___fladd^(0+128)
 14661     054C                     u4895:
 14662     054C  37B1               	asrf	(___fladd@b+3)^(0+128),f
 14663     054D  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 14664     054E  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 14665     054F  0CAE               	rrf	___fladd@b^(0+128),f
 14666     0550  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 14667     0551  2D4C               	goto	u4895
 14668     0552  3001               	movlw	1
 14669     0553  07C0               	addwf	___fladd@bexp^(0+128),f
 14670     0554  2DCE               	goto	l4457
 14671     0555                     l4421:
 14672     0555  0831               	movf	(___fladd@b+3)^(0+128),w
 14673     0556  3A80               	xorlw	128
 14674     0557  00B6               	movwf	??___fladd^(0+128)
 14675     0558  0835               	movf	(___fladd@a+3)^(0+128),w
 14676     0559  3A80               	xorlw	128
 14677     055A  0236               	subwf	??___fladd^(0+128),w
 14678     055B  1D03               	skipz
 14679     055C  2D67               	goto	u4903
 14680     055D  0834               	movf	(___fladd@a+2)^(0+128),w
 14681     055E  0230               	subwf	(___fladd@b+2)^(0+128),w
 14682     055F  1D03               	skipz
 14683     0560  2D67               	goto	u4903
 14684     0561  0833               	movf	(___fladd@a+1)^(0+128),w
 14685     0562  022F               	subwf	(___fladd@b+1)^(0+128),w
 14686     0563  1D03               	skipz
 14687     0564  2D67               	goto	u4903
 14688     0565  0832               	movf	___fladd@a^(0+128),w
 14689     0566  022E               	subwf	___fladd@b^(0+128),w
 14690     0567                     u4903:
 14691     0567  1803               	skipnc
 14692     0568  2D9C               	goto	l4433
 14693     0569  30FF               	movlw	255
 14694     056A  00B6               	movwf	??___fladd^(0+128)
 14695     056B  30FF               	movlw	255
 14696     056C  00B7               	movwf	(??___fladd^(0+128)+1)
 14697     056D  30FF               	movlw	255
 14698     056E  00B8               	movwf	(??___fladd^(0+128)+2)
 14699     056F  30FF               	movlw	255
 14700     0570  00B9               	movwf	(??___fladd^(0+128)+3)
 14701     0571  082E               	movf	___fladd@b^(0+128),w
 14702     0572  0232               	subwf	___fladd@a^(0+128),w
 14703     0573  00BA               	movwf	(??___fladd+4)^(0+128)
 14704     0574  082F               	movf	(___fladd@b+1)^(0+128),w
 14705     0575  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 14706     0576  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 14707     0577  0830               	movf	(___fladd@b+2)^(0+128),w
 14708     0578  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 14709     0579  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 14710     057A  0831               	movf	(___fladd@b+3)^(0+128),w
 14711     057B  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 14712     057C  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 14713     057D  083A               	movf	(??___fladd+4)^(0+128),w
 14714     057E  07B6               	addwf	??___fladd^(0+128),f
 14715     057F  083B               	movf	(??___fladd+5)^(0+128),w
 14716     0580  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 14717     0581  083C               	movf	(??___fladd+6)^(0+128),w
 14718     0582  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 14719     0583  083D               	movf	(??___fladd+7)^(0+128),w
 14720     0584  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 14721     0585  0839               	movf	(??___fladd+3)^(0+128),w
 14722     0586  00B1               	movwf	(___fladd@b+3)^(0+128)
 14723     0587  0838               	movf	(??___fladd+2)^(0+128),w
 14724     0588  00B0               	movwf	(___fladd@b+2)^(0+128)
 14725     0589  0837               	movf	(??___fladd+1)^(0+128),w
 14726     058A  00AF               	movwf	(___fladd@b+1)^(0+128)
 14727     058B  0836               	movf	??___fladd^(0+128),w
 14728     058C  00AE               	movwf	___fladd@b^(0+128)
 14729     058D  3080               	movlw	128
 14730     058E  06BE               	xorwf	___fladd@signs^(0+128),f
 14731     058F  0341               	decf	___fladd@grs^(0+128),w
 14732     0590  3AFF               	xorlw	255
 14733     0591  00C1               	movwf	___fladd@grs^(0+128)
 14734     0592  0841               	movf	___fladd@grs^(0+128),w
 14735     0593  1D03               	btfss	3,2
 14736     0594  2DA4               	goto	l1503
 14737     0595  3001               	movlw	1
 14738     0596  07AE               	addwf	___fladd@b^(0+128),f
 14739     0597  3000               	movlw	0
 14740     0598  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 14741     0599  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 14742     059A  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 14743     059B  2DA4               	goto	l1503
 14744     059C                     l4433:
 14745     059C  0832               	movf	___fladd@a^(0+128),w
 14746     059D  02AE               	subwf	___fladd@b^(0+128),f
 14747     059E  0833               	movf	(___fladd@a+1)^(0+128),w
 14748     059F  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 14749     05A0  0834               	movf	(___fladd@a+2)^(0+128),w
 14750     05A1  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 14751     05A2  0835               	movf	(___fladd@a+3)^(0+128),w
 14752     05A3  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 14753     05A4                     l1503:
 14754     05A4  0831               	movf	(___fladd@b+3)^(0+128),w
 14755     05A5  0430               	iorwf	(___fladd@b+2)^(0+128),w
 14756     05A6  042F               	iorwf	(___fladd@b+1)^(0+128),w
 14757     05A7  042E               	iorwf	___fladd@b^(0+128),w
 14758     05A8  1D03               	skipz
 14759     05A9  2DCC               	goto	l4455
 14760     05AA  0841               	movf	___fladd@grs^(0+128),w
 14761     05AB  1D03               	btfss	3,2
 14762     05AC  2DCC               	goto	l4455
 14763     05AD  3000               	movlw	0
 14764     05AE  00B1               	movwf	(?___fladd+3)^(0+128)
 14765     05AF  3000               	movlw	0
 14766     05B0  00B0               	movwf	(?___fladd+2)^(0+128)
 14767     05B1  3000               	movlw	0
 14768     05B2  00AF               	movwf	(?___fladd+1)^(0+128)
 14769     05B3  3000               	movlw	0
 14770     05B4  00AE               	movwf	?___fladd^(0+128)
 14771     05B5  0008               	return
 14772     05B6                     l4441:
 14773     05B6  3001               	movlw	1
 14774     05B7                     u4945:
 14775     05B7  35AE               	lslf	___fladd@b^(0+128),f
 14776     05B8  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 14777     05B9  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 14778     05BA  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 14779     05BB  0B89               	decfsz	9,f
 14780     05BC  2DB7               	goto	u4945
 14781     05BD  1BC1               	btfsc	___fladd@grs^(0+128),7
 14782     05BE  142E               	bsf	___fladd@b^(0+128),0
 14783     05BF  1C41               	btfss	___fladd@grs^(0+128),0
 14784     05C0  2DC5               	goto	l4449
 14785     05C1  1403               	setc
 14786     05C2  0D41               	rlf	___fladd@grs^(0+128),w
 14787     05C3  00C1               	movwf	___fladd@grs^(0+128)
 14788     05C4  2DC7               	goto	l4451
 14789     05C5                     l4449:
 14790     05C5  1003               	clrc
 14791     05C6  0DC1               	rlf	___fladd@grs^(0+128),f
 14792     05C7                     l4451:
 14793     05C7  0840               	movf	___fladd@bexp^(0+128),w
 14794     05C8  1903               	btfsc	3,2
 14795     05C9  2DCC               	goto	l4455
 14796     05CA  3001               	movlw	1
 14797     05CB  02C0               	subwf	___fladd@bexp^(0+128),f
 14798     05CC                     l4455:
 14799     05CC  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 14800     05CD  2DB6               	goto	l4441
 14801     05CE                     l4457:
 14802     05CE  01BF               	clrf	___fladd@aexp^(0+128)
 14803     05CF  1FC1               	btfss	___fladd@grs^(0+128),7
 14804     05D0  2DD9               	goto	l4467
 14805     05D1  0841               	movf	___fladd@grs^(0+128),w
 14806     05D2  397F               	andlw	127
 14807     05D3  1903               	btfsc	3,2
 14808     05D4  182E               	btfsc	___fladd@b^(0+128),0
 14809     05D5  2DD7               	goto	l4463
 14810     05D6  2DD9               	goto	l4467
 14811     05D7                     l4463:
 14812     05D7  3001               	movlw	1
 14813     05D8  00BF               	movwf	___fladd@aexp^(0+128)
 14814     05D9                     l4467:
 14815     05D9  083F               	movf	___fladd@aexp^(0+128),w
 14816     05DA  1903               	btfsc	3,2
 14817     05DB  2E01               	goto	l1516
 14818     05DC  3001               	movlw	1
 14819     05DD  07AE               	addwf	___fladd@b^(0+128),f
 14820     05DE  3000               	movlw	0
 14821     05DF  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 14822     05E0  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 14823     05E1  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 14824     05E2  1C31               	btfss	(___fladd@b+3)^(0+128),0
 14825     05E3  2E01               	goto	l1516
 14826     05E4  082E               	movf	___fladd@b^(0+128),w
 14827     05E5  00B6               	movwf	??___fladd^(0+128)
 14828     05E6  082F               	movf	(___fladd@b+1)^(0+128),w
 14829     05E7  00B7               	movwf	(??___fladd^(0+128)+1)
 14830     05E8  0830               	movf	(___fladd@b+2)^(0+128),w
 14831     05E9  00B8               	movwf	(??___fladd^(0+128)+2)
 14832     05EA  0831               	movf	(___fladd@b+3)^(0+128),w
 14833     05EB  00B9               	movwf	(??___fladd^(0+128)+3)
 14834     05EC  3001               	movlw	1
 14835     05ED  00BA               	movwf	(??___fladd+4)^(0+128)
 14836     05EE                     u5045:
 14837     05EE  37B9               	asrf	(??___fladd^(0+128)+3),f
 14838     05EF  0CB8               	rrf	(??___fladd^(0+128)+2),f
 14839     05F0  0CB7               	rrf	(??___fladd^(0+128)+1),f
 14840     05F1  0CB6               	rrf	??___fladd^(0+128),f
 14841     05F2  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 14842     05F3  2DEE               	goto	u5045
 14843     05F4  0839               	movf	(??___fladd+3)^(0+128),w
 14844     05F5  00B1               	movwf	(___fladd@b+3)^(0+128)
 14845     05F6  0838               	movf	(??___fladd+2)^(0+128),w
 14846     05F7  00B0               	movwf	(___fladd@b+2)^(0+128)
 14847     05F8  0837               	movf	(??___fladd+1)^(0+128),w
 14848     05F9  00AF               	movwf	(___fladd@b+1)^(0+128)
 14849     05FA  0836               	movf	??___fladd^(0+128),w
 14850     05FB  00AE               	movwf	___fladd@b^(0+128)
 14851     05FC  0A40               	incf	___fladd@bexp^(0+128),w
 14852     05FD  1903               	btfsc	3,2
 14853     05FE  2E01               	goto	l1516
 14854     05FF  3001               	movlw	1
 14855     0600  07C0               	addwf	___fladd@bexp^(0+128),f
 14856     0601                     l1516:
 14857     0601  0A40               	incf	___fladd@bexp^(0+128),w
 14858     0602  1D03               	btfss	3,2
 14859     0603  0840               	movf	___fladd@bexp^(0+128),w
 14860     0604  1D03               	btfss	3,2
 14861     0605  2E11               	goto	l4485
 14862     0606  3000               	movlw	0
 14863     0607  00B1               	movwf	(___fladd@b+3)^(0+128)
 14864     0608  3000               	movlw	0
 14865     0609  00B0               	movwf	(___fladd@b+2)^(0+128)
 14866     060A  3000               	movlw	0
 14867     060B  00AF               	movwf	(___fladd@b+1)^(0+128)
 14868     060C  3000               	movlw	0
 14869     060D  00AE               	movwf	___fladd@b^(0+128)
 14870     060E  0840               	movf	___fladd@bexp^(0+128),w
 14871     060F  1903               	btfsc	3,2
 14872     0610  01BE               	clrf	___fladd@signs^(0+128)
 14873     0611                     l4485:
 14874     0611  1C40               	btfss	___fladd@bexp^(0+128),0
 14875     0612  2E15               	goto	l4489
 14876     0613  17B0               	bsf	(___fladd@b^(0+128)+2),7
 14877     0614  2E17               	goto	l1524
 14878     0615                     l4489:
 14879     0615  307F               	movlw	127
 14880     0616  05B0               	andwf	(___fladd@b^(0+128)+2),f
 14881     0617                     l1524:
 14882     0617  0840               	movf	___fladd@bexp^(0+128),w
 14883     0618  00B6               	movwf	??___fladd^(0+128)
 14884     0619  3001               	movlw	1
 14885     061A                     u5105:
 14886     061A  36B6               	lsrf	??___fladd^(0+128),f
 14887     061B  0B89               	decfsz	9,f
 14888     061C  2E1A               	goto	u5105
 14889     061D  0836               	movf	??___fladd^(0+128),w
 14890     061E  00B1               	movwf	(___fladd@b^(0+128)+3)
 14891     061F  1FBE               	btfss	___fladd@signs^(0+128),7
 14892     0620  0008               	return
 14893     0621  17B1               	bsf	(___fladd@b^(0+128)+3),7
 14894     0622  0008               	return
 14895     0623                     __end_of___fladd:
 14896                           
 14897                           	psect	text56
 14898     1F9D                     __ptext56:	
 14899 ;; *************** function _getHoogtesensor *****************
 14900 ;; Defined at:
 14901 ;;		line 33 in file "adcMeasurements.c"
 14902 ;; Parameters:    Size  Location     Type
 14903 ;;		None
 14904 ;; Auto vars:     Size  Location     Type
 14905 ;;		None
 14906 ;; Return value:  Size  Location     Type
 14907 ;;                  2    0[BANK1 ] unsigned short 
 14908 ;; Registers used:
 14909 ;;		wreg
 14910 ;; Tracked objects:
 14911 ;;		On entry : 1C/1
 14912 ;;		On exit  : 1F/1
 14913 ;;		Unchanged: 0/0
 14914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14915 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14918 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14919 ;;Total ram usage:        2 bytes
 14920 ;; Hardware stack levels used: 1
 14921 ;; Hardware stack levels required when called: 5
 14922 ;; This function calls:
 14923 ;;		Nothing
 14924 ;; This function is called by:
 14925 ;;		_printLogs
 14926 ;;		_position_led_strip
 14927 ;; This function uses a non-reentrant model
 14928 ;;
 14929                           
 14930     1F9D                     _getHoogtesensor:	
 14931                           ;psect for function _getHoogtesensor
 14932                           
 14933                           
 14934                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 14935                           
 14936                           ;incstack = 0
 14937                           ; Regs used in _getHoogtesensor: [wreg]
 14938     1F9D  0020               	movlb	0	; select bank0
 14939     1F9E  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 14940     1F9F  0021               	movlb	1	; select bank1
 14941     1FA0  00A1               	movwf	(?_getHoogtesensor+1)^(0+128)
 14942     1FA1  0020               	movlb	0	; select bank0
 14943     1FA2  0859               	movf	_ADC_hoogtesensor,w	;volatile
 14944     1FA3  0021               	movlb	1	; select bank1
 14945     1FA4  00A0               	movwf	?_getHoogtesensor^(0+128)
 14946     1FA5  0008               	return
 14947     1FA6                     __end_of_getHoogtesensor:
 14948                           
 14949                           	psect	text57
 14950     1F64                     __ptext57:	
 14951 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 14952 ;; Defined at:
 14953 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 14954 ;; Parameters:    Size  Location     Type
 14955 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 14956 ;;		 -> controller(1), 
 14957 ;; Auto vars:     Size  Location     Type
 14958 ;;		None
 14959 ;; Return value:  Size  Location     Type
 14960 ;;                  1    wreg      void 
 14961 ;; Registers used:
 14962 ;;		wreg
 14963 ;; Tracked objects:
 14964 ;;		On entry : 1F/1
 14965 ;;		On exit  : 1F/2
 14966 ;;		Unchanged: 0/0
 14967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14968 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14971 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14972 ;;Total ram usage:        2 bytes
 14973 ;; Hardware stack levels used: 1
 14974 ;; Hardware stack levels required when called: 5
 14975 ;; This function calls:
 14976 ;;		Nothing
 14977 ;; This function is called by:
 14978 ;;		_main
 14979 ;; This function uses a non-reentrant model
 14980 ;;
 14981                           
 14982     1F64                     _TMR4_PeriodMatchCallbackRegister:	
 14983                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 14984                           
 14985                           
 14986                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 14987                           
 14988                           ;incstack = 0
 14989                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 14990     1F64  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 14991     1F65  0022               	movlb	2	; select bank2
 14992     1F66  00E1               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 14993     1F67  0021               	movlb	1	; select bank1
 14994     1F68  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 14995     1F69  0022               	movlb	2	; select bank2
 14996     1F6A  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 14997     1F6B  0008               	return
 14998     1F6C                     __end_of_TMR4_PeriodMatchCallbackRegister:
 14999                           
 15000                           	psect	text58
 15001     11C2                     __ptext58:	
 15002 ;; *************** function _SYSTEM_Initialize *****************
 15003 ;; Defined at:
 15004 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;		None
 15007 ;; Auto vars:     Size  Location     Type
 15008 ;;		None
 15009 ;; Return value:  Size  Location     Type
 15010 ;;                  1    wreg      void 
 15011 ;; Registers used:
 15012 ;;		wreg, status,2, status,0, pclath, cstack
 15013 ;; Tracked objects:
 15014 ;;		On entry : B1F/0
 15015 ;;		On exit  : 1F/2
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;Total ram usage:        0 bytes
 15023 ;; Hardware stack levels used: 1
 15024 ;; Hardware stack levels required when called: 7
 15025 ;; This function calls:
 15026 ;;		_ADC_Initialize
 15027 ;;		_CLOCK_Initialize
 15028 ;;		_EUSART_Initialize
 15029 ;;		_INTERRUPT_Initialize
 15030 ;;		_PIN_MANAGER_Initialize
 15031 ;;		_SPI1_Initialize
 15032 ;;		_TMR2_Initialize
 15033 ;;		_TMR4_Initialize
 15034 ;;		_TMR6_Initialize
 15035 ;;		_pwm_fan_Initialize
 15036 ;; This function is called by:
 15037 ;;		_main
 15038 ;; This function uses a non-reentrant model
 15039 ;;
 15040                           
 15041     11C2                     _SYSTEM_Initialize:	
 15042                           ;psect for function _SYSTEM_Initialize
 15043                           
 15044                           
 15045                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 15046                           
 15047                           ;incstack = 0
 15048                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15049     11C2  319F  2794  3191   	fcall	_CLOCK_Initialize
 15050                           
 15051                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 15052     11C5  3193  239A  3191   	fcall	_PIN_MANAGER_Initialize
 15053                           
 15054                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 15055     11C8  3190  20B3  3191   	fcall	_TMR2_Initialize
 15056                           
 15057                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 15058     11CB  3190  20C4  3191   	fcall	_TMR4_Initialize
 15059                           
 15060                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 15061     11CE  3190  2079  3191   	fcall	_TMR6_Initialize
 15062                           
 15063                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 15064     11D1  3191  210F  3191   	fcall	_ADC_Initialize
 15065                           
 15066                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 15067     11D4  3192  22E3  3191   	fcall	_EUSART_Initialize
 15068                           
 15069                           ;mcc_generated_files/system/src/system.c: 48:     pwm_fan_Initialize();
 15070     11D7  3190  202D  3191   	fcall	_pwm_fan_Initialize
 15071                           
 15072                           ;mcc_generated_files/system/src/system.c: 49:     SPI1_Initialize();
 15073     11DA  319F  27CA  3191   	fcall	_SPI1_Initialize
 15074                           
 15075                           ;mcc_generated_files/system/src/system.c: 50:     INTERRUPT_Initialize();
 15076     11DD  319F  27DE         	fcall	_INTERRUPT_Initialize
 15077     11DF  0008               	return
 15078     11E0                     __end_of_SYSTEM_Initialize:
 15079                           
 15080                           	psect	text59
 15081     102D                     __ptext59:	
 15082 ;; *************** function _pwm_fan_Initialize *****************
 15083 ;; Defined at:
 15084 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 15085 ;; Parameters:    Size  Location     Type
 15086 ;;		None
 15087 ;; Auto vars:     Size  Location     Type
 15088 ;;		None
 15089 ;; Return value:  Size  Location     Type
 15090 ;;                  1    wreg      void 
 15091 ;; Registers used:
 15092 ;;		wreg, status,2, status,0
 15093 ;; Tracked objects:
 15094 ;;		On entry : 1F/1
 15095 ;;		On exit  : 1F/C
 15096 ;;		Unchanged: 0/0
 15097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;Total ram usage:        0 bytes
 15103 ;; Hardware stack levels used: 1
 15104 ;; Hardware stack levels required when called: 5
 15105 ;; This function calls:
 15106 ;;		Nothing
 15107 ;; This function is called by:
 15108 ;;		_SYSTEM_Initialize
 15109 ;; This function uses a non-reentrant model
 15110 ;;
 15111                           
 15112     102D                     _pwm_fan_Initialize:	
 15113                           ;psect for function _pwm_fan_Initialize
 15114                           
 15115                           
 15116                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 15117                           
 15118                           ;incstack = 0
 15119                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 15120     102D  3080               	movlw	128
 15121     102E  002C               	movlb	12	; select bank12
 15122     102F  0099               	movwf	25	;volatile
 15123                           
 15124                           ;mcc_generated_files/pwm/src/pwm5.c: 53:     PWM5DCH = 0x7F;
 15125     1030  307F               	movlw	127
 15126     1031  0098               	movwf	24	;volatile
 15127                           
 15128                           ;mcc_generated_files/pwm/src/pwm5.c: 56:     PWM5DCL = 0xC0;
 15129     1032  30C0               	movlw	192
 15130     1033  0097               	movwf	23	;volatile
 15131                           
 15132                           ;mcc_generated_files/pwm/src/pwm5.c: 60:     PWMTMRSbits.P5TSEL = 0x1;
 15133     1034  081F               	movf	31,w	;volatile
 15134     1035  39FC               	andlw	-4
 15135     1036  3801               	iorlw	1
 15136     1037  009F               	movwf	31	;volatile
 15137     1038  0008               	return
 15138     1039                     __end_of_pwm_fan_Initialize:
 15139                           
 15140                           	psect	text60
 15141     1079                     __ptext60:	
 15142 ;; *************** function _TMR6_Initialize *****************
 15143 ;; Defined at:
 15144 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 15145 ;; Parameters:    Size  Location     Type
 15146 ;;		None
 15147 ;; Auto vars:     Size  Location     Type
 15148 ;;		None
 15149 ;; Return value:  Size  Location     Type
 15150 ;;                  1    wreg      void 
 15151 ;; Registers used:
 15152 ;;		wreg, status,2
 15153 ;; Tracked objects:
 15154 ;;		On entry : B1F/8
 15155 ;;		On exit  : B1F/8
 15156 ;;		Unchanged: B00/0
 15157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15162 ;;Total ram usage:        0 bytes
 15163 ;; Hardware stack levels used: 1
 15164 ;; Hardware stack levels required when called: 5
 15165 ;; This function calls:
 15166 ;;		Nothing
 15167 ;; This function is called by:
 15168 ;;		_SYSTEM_Initialize
 15169 ;; This function uses a non-reentrant model
 15170 ;;
 15171                           
 15172     1079                     _TMR6_Initialize:	
 15173                           ;psect for function _TMR6_Initialize
 15174                           
 15175                           
 15176                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 15177                           
 15178                           ;incstack = 0
 15179                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 15180     1079  300E               	movlw	14
 15181     107A  009D               	movwf	29	;volatile
 15182                           
 15183                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 15184     107B  019C               	clrf	28	;volatile
 15185                           
 15186                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 15187     107C  3003               	movlw	low _TMR6_DefaultPeriodMatchCallback
 15188     107D  0022               	movlb	2	; select bank2
 15189     107E  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 15190     107F  3000               	movlw	high _TMR6_DefaultPeriodMatchCallback
 15191     1080  00DF               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 15192                           
 15193                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 15194     1081  0020               	movlb	0	; select bank0
 15195     1082  1392               	bcf	18,7	;volatile
 15196                           
 15197                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 15198     1083  301D               	movlw	29
 15199     1084  0028               	movlb	8	; select bank8
 15200     1085  009E               	movwf	30	;volatile
 15201     1086  0008               	return
 15202     1087                     __end_of_TMR6_Initialize:
 15203                           
 15204                           	psect	text61
 15205     10C4                     __ptext61:	
 15206 ;; *************** function _TMR4_Initialize *****************
 15207 ;; Defined at:
 15208 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 15209 ;; Parameters:    Size  Location     Type
 15210 ;;		None
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;		None
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  1    wreg      void 
 15215 ;; Registers used:
 15216 ;;		wreg, status,2
 15217 ;; Tracked objects:
 15218 ;;		On entry : B1F/0
 15219 ;;		On exit  : B1F/8
 15220 ;;		Unchanged: B00/0
 15221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15226 ;;Total ram usage:        0 bytes
 15227 ;; Hardware stack levels used: 1
 15228 ;; Hardware stack levels required when called: 5
 15229 ;; This function calls:
 15230 ;;		Nothing
 15231 ;; This function is called by:
 15232 ;;		_SYSTEM_Initialize
 15233 ;; This function uses a non-reentrant model
 15234 ;;
 15235                           
 15236     10C4                     _TMR4_Initialize:	
 15237                           ;psect for function _TMR4_Initialize
 15238                           
 15239                           
 15240                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xFF;
 15241                           
 15242                           ;incstack = 0
 15243                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 15244     10C4  30FF               	movlw	255
 15245     10C5  0028               	movlb	8	; select bank8
 15246     10C6  0096               	movwf	22	;volatile
 15247                           
 15248                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 15249     10C7  0195               	clrf	21	;volatile
 15250                           
 15251                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 15252     10C8  3002               	movlw	low _TMR4_DefaultPeriodMatchCallback
 15253     10C9  0022               	movlb	2	; select bank2
 15254     10CA  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 15255     10CB  3000               	movlw	high _TMR4_DefaultPeriodMatchCallback
 15256     10CC  00E1               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 15257                           
 15258                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 15259     10CD  0020               	movlb	0	; select bank0
 15260     10CE  1092               	bcf	18,1	;volatile
 15261                           
 15262                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 15263     10CF  0021               	movlb	1	; select bank1
 15264     10D0  1492               	bsf	18,1	;volatile
 15265                           
 15266                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (2 << 0x0)
 15267     10D1  3076               	movlw	118
 15268     10D2  0028               	movlb	8	; select bank8
 15269     10D3  0097               	movwf	23	;volatile
 15270     10D4  0008               	return
 15271     10D5                     __end_of_TMR4_Initialize:
 15272                           
 15273                           	psect	text62
 15274     10B3                     __ptext62:	
 15275 ;; *************** function _TMR2_Initialize *****************
 15276 ;; Defined at:
 15277 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 15278 ;; Parameters:    Size  Location     Type
 15279 ;;		None
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;		None
 15282 ;; Return value:  Size  Location     Type
 15283 ;;                  1    wreg      void 
 15284 ;; Registers used:
 15285 ;;		wreg, status,2
 15286 ;; Tracked objects:
 15287 ;;		On entry : B1F/7
 15288 ;;		On exit  : B1F/0
 15289 ;;		Unchanged: B00/0
 15290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;Total ram usage:        0 bytes
 15296 ;; Hardware stack levels used: 1
 15297 ;; Hardware stack levels required when called: 5
 15298 ;; This function calls:
 15299 ;;		Nothing
 15300 ;; This function is called by:
 15301 ;;		_SYSTEM_Initialize
 15302 ;; This function uses a non-reentrant model
 15303 ;;
 15304                           
 15305     10B3                     _TMR2_Initialize:	
 15306                           ;psect for function _TMR2_Initialize
 15307                           
 15308                           
 15309                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xFF;
 15310                           
 15311                           ;incstack = 0
 15312                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 15313     10B3  30FF               	movlw	255
 15314     10B4  0020               	movlb	0	; select bank0
 15315     10B5  009E               	movwf	30	;volatile
 15316                           
 15317                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 15318     10B6  019D               	clrf	29	;volatile
 15319                           
 15320                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 15321     10B7  3000               	movlw	low _TMR2_DefaultPeriodMatchCallback
 15322     10B8  0022               	movlb	2	; select bank2
 15323     10B9  00E2               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 15324     10BA  3008               	movlw	high _TMR2_DefaultPeriodMatchCallback
 15325     10BB  00E3               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 15326                           
 15327                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 15328     10BC  0020               	movlb	0	; select bank0
 15329     10BD  1091               	bcf	17,1	;volatile
 15330                           
 15331                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 15332     10BE  0021               	movlb	1	; select bank1
 15333     10BF  1491               	bsf	17,1	;volatile
 15334                           
 15335                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (1 << 0x0)
 15336     10C0  301D               	movlw	29
 15337     10C1  0020               	movlb	0	; select bank0
 15338     10C2  009F               	movwf	31	;volatile
 15339     10C3  0008               	return
 15340     10C4                     __end_of_TMR2_Initialize:
 15341                           
 15342                           	psect	text63
 15343     1FCA                     __ptext63:	
 15344 ;; *************** function _SPI1_Initialize *****************
 15345 ;; Defined at:
 15346 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 15347 ;; Parameters:    Size  Location     Type
 15348 ;;		None
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;		None
 15351 ;; Return value:  Size  Location     Type
 15352 ;;                  1    wreg      void 
 15353 ;; Registers used:
 15354 ;;		status,2
 15355 ;; Tracked objects:
 15356 ;;		On entry : 1F/C
 15357 ;;		On exit  : 1F/4
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;Total ram usage:        0 bytes
 15365 ;; Hardware stack levels used: 1
 15366 ;; Hardware stack levels required when called: 5
 15367 ;; This function calls:
 15368 ;;		Nothing
 15369 ;; This function is called by:
 15370 ;;		_SYSTEM_Initialize
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374     1FCA                     _SPI1_Initialize:	
 15375                           ;psect for function _SPI1_Initialize
 15376                           
 15377                           
 15378                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 15379                           
 15380                           ;incstack = 0
 15381                           ; Regs used in _SPI1_Initialize: [status,2]
 15382     1FCA  0021               	movlb	1	; select bank1
 15383     1FCB  1191               	bcf	17,3	;volatile
 15384                           
 15385                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 15386     1FCC  0020               	movlb	0	; select bank0
 15387     1FCD  1191               	bcf	17,3	;volatile
 15388                           
 15389                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 15390     1FCE  0024               	movlb	4	; select bank4
 15391     1FCF  0194               	clrf	20	;volatile
 15392                           
 15393                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 15394     1FD0  0195               	clrf	21	;volatile
 15395                           
 15396                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 15397     1FD1  0197               	clrf	23	;volatile
 15398                           
 15399                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 15400     1FD2  0192               	clrf	18	;volatile
 15401     1FD3  0008               	return
 15402     1FD4                     __end_of_SPI1_Initialize:
 15403                           
 15404                           	psect	text64
 15405     139A                     __ptext64:	
 15406 ;; *************** function _PIN_MANAGER_Initialize *****************
 15407 ;; Defined at:
 15408 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 15409 ;; Parameters:    Size  Location     Type
 15410 ;;		None
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		status,2
 15417 ;; Tracked objects:
 15418 ;;		On entry : B1F/12
 15419 ;;		On exit  : B1F/7
 15420 ;;		Unchanged: B00/0
 15421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15426 ;;Total ram usage:        0 bytes
 15427 ;; Hardware stack levels used: 1
 15428 ;; Hardware stack levels required when called: 5
 15429 ;; This function calls:
 15430 ;;		Nothing
 15431 ;; This function is called by:
 15432 ;;		_SYSTEM_Initialize
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436     139A                     _PIN_MANAGER_Initialize:	
 15437                           ;psect for function _PIN_MANAGER_Initialize
 15438                           
 15439                           
 15440                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 15441                           
 15442                           ;incstack = 0
 15443                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 15444     139A  0022               	movlb	2	; select bank2
 15445     139B  018C               	clrf	12	;volatile
 15446                           
 15447                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 15448     139C  018D               	clrf	13	;volatile
 15449                           
 15450                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 15451     139D  018E               	clrf	14	;volatile
 15452                           
 15453                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 15454     139E  3019               	movlw	25
 15455     139F  0021               	movlb	1	; select bank1
 15456     13A0  008C               	movwf	12	;volatile
 15457                           
 15458                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 15459     13A1  3020               	movlw	32
 15460     13A2  008D               	movwf	13	;volatile
 15461                           
 15462                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xDF;
 15463     13A3  30DF               	movlw	223
 15464     13A4  008E               	movwf	14	;volatile
 15465                           
 15466                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 15467     13A5  3010               	movlw	16
 15468     13A6  0023               	movlb	3	; select bank3
 15469     13A7  008C               	movwf	12	;volatile
 15470                           
 15471                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 15472     13A8  3080               	movlw	128
 15473     13A9  008D               	movwf	13	;volatile
 15474                           
 15475                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xFF;
 15476     13AA  30FF               	movlw	255
 15477     13AB  008E               	movwf	14	;volatile
 15478                           
 15479                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 15480     13AC  0024               	movlb	4	; select bank4
 15481     13AD  018C               	clrf	12	;volatile
 15482                           
 15483                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 15484     13AE  018D               	clrf	13	;volatile
 15485                           
 15486                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 15487     13AF  018E               	clrf	14	;volatile
 15488                           
 15489                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 15490     13B0  0025               	movlb	5	; select bank5
 15491     13B1  018C               	clrf	12	;volatile
 15492                           
 15493                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 15494     13B2  018D               	clrf	13	;volatile
 15495                           
 15496                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 15497     13B3  018E               	clrf	14	;volatile
 15498                           
 15499                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 15500     13B4  3037               	movlw	55
 15501     13B5  0026               	movlb	6	; select bank6
 15502     13B6  008C               	movwf	12	;volatile
 15503                           
 15504                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 15505     13B7  30F0               	movlw	240
 15506     13B8  008D               	movwf	13	;volatile
 15507                           
 15508                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 15509     13B9  30FF               	movlw	255
 15510     13BA  008E               	movwf	14	;volatile
 15511                           
 15512                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 15513     13BB  303F               	movlw	63
 15514     13BC  0027               	movlb	7	; select bank7
 15515     13BD  008C               	movwf	12	;volatile
 15516                           
 15517                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 15518     13BE  30F0               	movlw	240
 15519     13BF  008D               	movwf	13	;volatile
 15520                           
 15521                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 15522     13C0  30FF               	movlw	255
 15523     13C1  008E               	movwf	14	;volatile
 15524                           
 15525                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 15526     13C2  003C               	movlb	28	; select bank28
 15527     13C3  01A1               	clrf	33	;volatile
 15528                           
 15529                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 15530     13C4  300D               	movlw	13
 15531     13C5  00A4               	movwf	36	;volatile
 15532                           
 15533                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 15534     13C6  3019               	movlw	25
 15535     13C7  003D               	movlb	29	; select bank29
 15536     13C8  009C               	movwf	28	;volatile
 15537                           
 15538                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 15539     13C9  3002               	movlw	2
 15540     13CA  00A5               	movwf	37	;volatile
 15541                           
 15542                           ;mcc_generated_files/system/src/pins.c: 95:     RB7PPS = 20;
 15543     13CB  3014               	movlw	20
 15544     13CC  009F               	movwf	31	;volatile
 15545                           
 15546                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xE;
 15547     13CD  300E               	movlw	14
 15548     13CE  003C               	movlb	28	; select bank28
 15549     13CF  00A0               	movwf	32	;volatile
 15550                           
 15551                           ;mcc_generated_files/system/src/pins.c: 97:     RB6PPS = 24;
 15552     13D0  3018               	movlw	24
 15553     13D1  003D               	movlb	29	; select bank29
 15554     13D2  009E               	movwf	30	;volatile
 15555                           
 15556                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
 15557     13D3  0027               	movlb	7	; select bank7
 15558     13D4  0191               	clrf	17	;volatile
 15559                           
 15560                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
 15561     13D5  0192               	clrf	18	;volatile
 15562                           
 15563                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
 15564     13D6  0193               	clrf	19	;volatile
 15565                           
 15566                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
 15567     13D7  0194               	clrf	20	;volatile
 15568                           
 15569                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
 15570     13D8  0195               	clrf	21	;volatile
 15571                           
 15572                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
 15573     13D9  0196               	clrf	22	;volatile
 15574                           
 15575                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
 15576     13DA  0197               	clrf	23	;volatile
 15577                           
 15578                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
 15579     13DB  0198               	clrf	24	;volatile
 15580                           
 15581                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
 15582     13DC  0199               	clrf	25	;volatile
 15583     13DD  0008               	return
 15584     13DE                     __end_of_PIN_MANAGER_Initialize:
 15585                           
 15586                           	psect	text65
 15587     1FDE                     __ptext65:	
 15588 ;; *************** function _INTERRUPT_Initialize *****************
 15589 ;; Defined at:
 15590 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 15591 ;; Parameters:    Size  Location     Type
 15592 ;;		None
 15593 ;; Auto vars:     Size  Location     Type
 15594 ;;		None
 15595 ;; Return value:  Size  Location     Type
 15596 ;;                  1    wreg      void 
 15597 ;; Registers used:
 15598 ;;		wreg, status,2, status,0, pclath, cstack
 15599 ;; Tracked objects:
 15600 ;;		On entry : 1F/4
 15601 ;;		On exit  : 1F/2
 15602 ;;		Unchanged: 0/0
 15603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;Total ram usage:        0 bytes
 15609 ;; Hardware stack levels used: 1
 15610 ;; Hardware stack levels required when called: 6
 15611 ;; This function calls:
 15612 ;;		_INT_SetInterruptHandler
 15613 ;; This function is called by:
 15614 ;;		_SYSTEM_Initialize
 15615 ;; This function uses a non-reentrant model
 15616 ;;
 15617                           
 15618     1FDE                     _INTERRUPT_Initialize:	
 15619                           ;psect for function _INTERRUPT_Initialize
 15620                           
 15621                           
 15622                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 15623                           
 15624                           ;incstack = 0
 15625                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15626     1FDE  0020               	movlb	0	; select bank0
 15627     1FDF  1010               	bcf	16,0	;volatile
 15628                           
 15629                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 15630     1FE0  140B               	bsf	11,0	;volatile
 15631                           
 15632                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 15633     1FE1  3000               	movlw	0
 15634     1FE2  0021               	movlb	1	; select bank1
 15635     1FE3  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 15636     1FE4  3000               	movlw	0
 15637     1FE5  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15638     1FE6  319F  275C         	fcall	_INT_SetInterruptHandler
 15639     1FE8  0008               	return
 15640     1FE9                     __end_of_INTERRUPT_Initialize:
 15641                           
 15642                           	psect	text66
 15643     1F5C                     __ptext66:	
 15644 ;; *************** function _INT_SetInterruptHandler *****************
 15645 ;; Defined at:
 15646 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 15649 ;;		 -> INT_DefaultInterruptHandler(1), 
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;		None
 15652 ;; Return value:  Size  Location     Type
 15653 ;;                  1    wreg      void 
 15654 ;; Registers used:
 15655 ;;		wreg
 15656 ;; Tracked objects:
 15657 ;;		On entry : 1F/1
 15658 ;;		On exit  : 1F/2
 15659 ;;		Unchanged: 0/0
 15660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15661 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;Total ram usage:        2 bytes
 15666 ;; Hardware stack levels used: 1
 15667 ;; Hardware stack levels required when called: 5
 15668 ;; This function calls:
 15669 ;;		Nothing
 15670 ;; This function is called by:
 15671 ;;		_INTERRUPT_Initialize
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675     1F5C                     _INT_SetInterruptHandler:	
 15676                           ;psect for function _INT_SetInterruptHandler
 15677                           
 15678                           
 15679                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 15680                           
 15681                           ;incstack = 0
 15682                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 15683     1F5C  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 15684     1F5D  0022               	movlb	2	; select bank2
 15685     1F5E  00CD               	movwf	(_INT_InterruptHandler+1)^(0+256)
 15686     1F5F  0021               	movlb	1	; select bank1
 15687     1F60  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 15688     1F61  0022               	movlb	2	; select bank2
 15689     1F62  00CC               	movwf	_INT_InterruptHandler^(0+256)
 15690     1F63  0008               	return
 15691     1F64                     __end_of_INT_SetInterruptHandler:
 15692                           
 15693                           	psect	text67
 15694     12E3                     __ptext67:	
 15695 ;; *************** function _EUSART_Initialize *****************
 15696 ;; Defined at:
 15697 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 15698 ;; Parameters:    Size  Location     Type
 15699 ;;		None
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;		None
 15702 ;; Return value:  Size  Location     Type
 15703 ;;                  1    wreg      void 
 15704 ;; Registers used:
 15705 ;;		wreg, status,2, status,0, pclath, cstack
 15706 ;; Tracked objects:
 15707 ;;		On entry : 1F/1
 15708 ;;		On exit  : 1F/1
 15709 ;;		Unchanged: 0/0
 15710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15715 ;;Total ram usage:        0 bytes
 15716 ;; Hardware stack levels used: 1
 15717 ;; Hardware stack levels required when called: 6
 15718 ;; This function calls:
 15719 ;;		_EUSART_FramingErrorCallbackRegister
 15720 ;;		_EUSART_OverrunErrorCallbackRegister
 15721 ;; This function is called by:
 15722 ;;		_SYSTEM_Initialize
 15723 ;; This function uses a non-reentrant model
 15724 ;;
 15725                           
 15726     12E3                     _EUSART_Initialize:	
 15727                           ;psect for function _EUSART_Initialize
 15728                           
 15729                           
 15730                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 15731                           
 15732                           ;incstack = 0
 15733                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15734     12E3  1291               	bcf	17,5	;volatile
 15735                           
 15736                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 15737     12E4  30DE               	movlw	low _EUSART_ReceiveISR
 15738     12E5  0023               	movlb	3	; select bank3
 15739     12E6  00D4               	movwf	_EUSART_RxInterruptHandler^(0+384)
 15740     12E7  3013               	movlw	high _EUSART_ReceiveISR
 15741     12E8  00D5               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 15742                           
 15743                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 15744     12E9  0021               	movlb	1	; select bank1
 15745     12EA  1211               	bcf	17,4	;volatile
 15746                           
 15747                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 15748     12EB  3055               	movlw	low _EUSART_TransmitISR
 15749     12EC  0022               	movlb	2	; select bank2
 15750     12ED  00E4               	movwf	_EUSART_TxInterruptHandler^(0+256)
 15751     12EE  3011               	movlw	high _EUSART_TransmitISR
 15752     12EF  00E5               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 15753                           
 15754                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 15755     12F0  3048               	movlw	72
 15756     12F1  0023               	movlb	3	; select bank3
 15757     12F2  009F               	movwf	31	;volatile
 15758                           
 15759                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 15760     12F3  3090               	movlw	144
 15761     12F4  009D               	movwf	29	;volatile
 15762                           
 15763                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 15764     12F5  3026               	movlw	38
 15765     12F6  009E               	movwf	30	;volatile
 15766                           
 15767                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 15768     12F7  3040               	movlw	64
 15769     12F8  009B               	movwf	27	;volatile
 15770                           
 15771                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 15772     12F9  3003               	movlw	3
 15773     12FA  009C               	movwf	28	;volatile
 15774                           
 15775                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 15776     12FB  3034               	movlw	low _EUSART_DefaultFramingErrorCallback
 15777     12FC  0021               	movlb	1	; select bank1
 15778     12FD  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 15779     12FE  301F               	movlw	high _EUSART_DefaultFramingErrorCallback
 15780     12FF  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 15781     1300  3190  2015  3192   	fcall	_EUSART_FramingErrorCallbackRegister
 15782                           
 15783                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 15784     1303  3038               	movlw	low _EUSART_DefaultOverrunErrorCallback
 15785     1304  0021               	movlb	1	; select bank1
 15786     1305  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 15787     1306  301F               	movlw	high _EUSART_DefaultOverrunErrorCallback
 15788     1307  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 15789     1308  3190  2021         	fcall	_EUSART_OverrunErrorCallbackRegister
 15790                           
 15791                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 15792     130A  0022               	movlb	2	; select bank2
 15793     130B  01CA               	clrf	_eusartRxLastError^(0+256)	;volatile
 15794     130C  01CB               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 15795                           
 15796                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 15797     130D  0020               	movlb	0	; select bank0
 15798     130E  01EB               	clrf	_eusartTxHead	;volatile
 15799                           
 15800                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 15801     130F  01EA               	clrf	_eusartTxTail	;volatile
 15802                           
 15803                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 15804     1310  3008               	movlw	8
 15805     1311  00E9               	movwf	_eusartTxBufferRemaining	;volatile
 15806                           
 15807                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 15808     1312  01E8               	clrf	_eusartRxHead	;volatile
 15809                           
 15810                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 15811     1313  01E7               	clrf	_eusartRxTail	;volatile
 15812                           
 15813                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 15814     1314  01E6               	clrf	_eusartRxCount	;volatile
 15815                           
 15816                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 15817     1315  0021               	movlb	1	; select bank1
 15818     1316  1691               	bsf	17,5	;volatile
 15819     1317  0008               	return
 15820     1318                     __end_of_EUSART_Initialize:
 15821                           
 15822                           	psect	text68
 15823     1021                     __ptext68:	
 15824 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 15825 ;; Defined at:
 15826 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 15827 ;; Parameters:    Size  Location     Type
 15828 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 15829 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 15830 ;; Auto vars:     Size  Location     Type
 15831 ;;		None
 15832 ;; Return value:  Size  Location     Type
 15833 ;;                  1    wreg      void 
 15834 ;; Registers used:
 15835 ;;		wreg, status,2, status,0
 15836 ;; Tracked objects:
 15837 ;;		On entry : 1F/1
 15838 ;;		On exit  : 1E/0
 15839 ;;		Unchanged: 0/0
 15840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15841 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15844 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;Total ram usage:        2 bytes
 15846 ;; Hardware stack levels used: 1
 15847 ;; Hardware stack levels required when called: 5
 15848 ;; This function calls:
 15849 ;;		Nothing
 15850 ;; This function is called by:
 15851 ;;		_EUSART_Initialize
 15852 ;; This function uses a non-reentrant model
 15853 ;;
 15854                           
 15855     1021                     _EUSART_OverrunErrorCallbackRegister:	
 15856                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 15857                           
 15858                           
 15859                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 15860                           
 15861                           ;incstack = 0
 15862                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 15863     1021  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 15864     1022  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15865     1023  1903               	btfsc	3,2
 15866     1024  0008               	return
 15867                           
 15868                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 15869     1025  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15870     1026  0020               	movlb	0	; select bank0
 15871     1027  00DE               	movwf	_EUSART_OverrunErrorHandler+1
 15872     1028  0021               	movlb	1	; select bank1
 15873     1029  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 15874     102A  0020               	movlb	0	; select bank0
 15875     102B  00DD               	movwf	_EUSART_OverrunErrorHandler
 15876     102C  0008               	return
 15877     102D                     __end_of_EUSART_OverrunErrorCallbackRegister:
 15878                           
 15879                           	psect	text69
 15880     1015                     __ptext69:	
 15881 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 15882 ;; Defined at:
 15883 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 15886 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 15887 ;; Auto vars:     Size  Location     Type
 15888 ;;		None
 15889 ;; Return value:  Size  Location     Type
 15890 ;;                  1    wreg      void 
 15891 ;; Registers used:
 15892 ;;		wreg, status,2, status,0
 15893 ;; Tracked objects:
 15894 ;;		On entry : 1F/1
 15895 ;;		On exit  : 1E/0
 15896 ;;		Unchanged: 0/0
 15897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15898 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;Total ram usage:        2 bytes
 15903 ;; Hardware stack levels used: 1
 15904 ;; Hardware stack levels required when called: 5
 15905 ;; This function calls:
 15906 ;;		Nothing
 15907 ;; This function is called by:
 15908 ;;		_EUSART_Initialize
 15909 ;; This function uses a non-reentrant model
 15910 ;;
 15911                           
 15912     1015                     _EUSART_FramingErrorCallbackRegister:	
 15913                           ;psect for function _EUSART_FramingErrorCallbackRegister
 15914                           
 15915                           
 15916                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 15917                           
 15918                           ;incstack = 0
 15919                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 15920     1015  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 15921     1016  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15922     1017  1903               	btfsc	3,2
 15923     1018  0008               	return
 15924                           
 15925                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 15926     1019  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15927     101A  0020               	movlb	0	; select bank0
 15928     101B  00E0               	movwf	_EUSART_FramingErrorHandler+1
 15929     101C  0021               	movlb	1	; select bank1
 15930     101D  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 15931     101E  0020               	movlb	0	; select bank0
 15932     101F  00DF               	movwf	_EUSART_FramingErrorHandler
 15933     1020  0008               	return
 15934     1021                     __end_of_EUSART_FramingErrorCallbackRegister:
 15935                           
 15936                           	psect	text70
 15937     1F94                     __ptext70:	
 15938 ;; *************** function _CLOCK_Initialize *****************
 15939 ;; Defined at:
 15940 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 15941 ;; Parameters:    Size  Location     Type
 15942 ;;		None
 15943 ;; Auto vars:     Size  Location     Type
 15944 ;;		None
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  1    wreg      void 
 15947 ;; Registers used:
 15948 ;;		status,2
 15949 ;; Tracked objects:
 15950 ;;		On entry : B1F/0
 15951 ;;		On exit  : B1F/12
 15952 ;;		Unchanged: B00/0
 15953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15958 ;;Total ram usage:        0 bytes
 15959 ;; Hardware stack levels used: 1
 15960 ;; Hardware stack levels required when called: 5
 15961 ;; This function calls:
 15962 ;;		Nothing
 15963 ;; This function is called by:
 15964 ;;		_SYSTEM_Initialize
 15965 ;; This function uses a non-reentrant model
 15966 ;;
 15967                           
 15968     1F94                     _CLOCK_Initialize:	
 15969                           ;psect for function _CLOCK_Initialize
 15970                           
 15971                           
 15972                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 15973                           
 15974                           ;incstack = 0
 15975                           ; Regs used in _CLOCK_Initialize: [status,2]
 15976     1F94  0032               	movlb	18	; select bank18
 15977     1F95  0199               	clrf	25	;volatile
 15978                           
 15979                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 15980     1F96  019B               	clrf	27	;volatile
 15981                           
 15982                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 15983     1F97  019D               	clrf	29	;volatile
 15984                           
 15985                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 15986     1F98  3006               	movlw	6
 15987     1F99  009F               	movwf	31	;volatile
 15988                           
 15989                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 15990     1F9A  019E               	clrf	30	;volatile
 15991     1F9B  019C               	clrf	28	;volatile
 15992     1F9C  0008               	return
 15993     1F9D                     __end_of_CLOCK_Initialize:
 15994                           
 15995                           	psect	text71
 15996     110F                     __ptext71:	
 15997 ;; *************** function _ADC_Initialize *****************
 15998 ;; Defined at:
 15999 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 16000 ;; Parameters:    Size  Location     Type
 16001 ;;		None
 16002 ;; Auto vars:     Size  Location     Type
 16003 ;;		None
 16004 ;; Return value:  Size  Location     Type
 16005 ;;                  1    wreg      void 
 16006 ;; Registers used:
 16007 ;;		wreg, status,2, status,0, pclath, cstack
 16008 ;; Tracked objects:
 16009 ;;		On entry : B1F/8
 16010 ;;		On exit  : 1F/1
 16011 ;;		Unchanged: 0/0
 16012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16017 ;;Total ram usage:        0 bytes
 16018 ;; Hardware stack levels used: 1
 16019 ;; Hardware stack levels required when called: 6
 16020 ;; This function calls:
 16021 ;;		_ADC_SetInterruptHandler
 16022 ;; This function is called by:
 16023 ;;		_SYSTEM_Initialize
 16024 ;; This function uses a non-reentrant model
 16025 ;;
 16026                           
 16027     110F                     _ADC_Initialize:	
 16028                           ;psect for function _ADC_Initialize
 16029                           
 16030                           
 16031                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 16032                           
 16033                           ;incstack = 0
 16034                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16035     110F  30A0               	movlw	160
 16036     1110  0021               	movlb	1	; select bank1
 16037     1111  009E               	movwf	30	;volatile
 16038                           
 16039                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 16040     1112  019B               	clrf	27	;volatile
 16041                           
 16042                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 16043     1113  019C               	clrf	28	;volatile
 16044                           
 16045                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 16046     1114  3005               	movlw	5
 16047     1115  009F               	movwf	31	;volatile
 16048                           
 16049                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 16050     1116  3001               	movlw	1
 16051     1117  009D               	movwf	29	;volatile
 16052                           
 16053                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 16054     1118  0020               	movlb	0	; select bank0
 16055     1119  1311               	bcf	17,6	;volatile
 16056                           
 16057                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 16058     111A  3033               	movlw	low _ADC_DefaultInterruptHandler
 16059     111B  0021               	movlb	1	; select bank1
 16060     111C  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 16061     111D  301F               	movlw	high _ADC_DefaultInterruptHandler
 16062     111E  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 16063     111F  319F  2754         	fcall	_ADC_SetInterruptHandler
 16064                           
 16065                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 16066     1121  0021               	movlb	1	; select bank1
 16067     1122  1711               	bsf	17,6	;volatile
 16068     1123  0008               	return
 16069     1124                     __end_of_ADC_Initialize:
 16070                           
 16071                           	psect	text72
 16072     1F54                     __ptext72:	
 16073 ;; *************** function _ADC_SetInterruptHandler *****************
 16074 ;; Defined at:
 16075 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 16076 ;; Parameters:    Size  Location     Type
 16077 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 16078 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 16079 ;; Auto vars:     Size  Location     Type
 16080 ;;		None
 16081 ;; Return value:  Size  Location     Type
 16082 ;;                  1    wreg      void 
 16083 ;; Registers used:
 16084 ;;		wreg
 16085 ;; Tracked objects:
 16086 ;;		On entry : 1F/1
 16087 ;;		On exit  : 1F/2
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16090 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16093 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;Total ram usage:        2 bytes
 16095 ;; Hardware stack levels used: 1
 16096 ;; Hardware stack levels required when called: 5
 16097 ;; This function calls:
 16098 ;;		Nothing
 16099 ;; This function is called by:
 16100 ;;		_ADC_Initialize
 16101 ;;		_initAdcMultiplexer
 16102 ;; This function uses a non-reentrant model
 16103 ;;
 16104                           
 16105     1F54                     _ADC_SetInterruptHandler:	
 16106                           ;psect for function _ADC_SetInterruptHandler
 16107                           
 16108                           
 16109                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 16110                           
 16111                           ;incstack = 0
 16112                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 16113     1F54  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 16114     1F55  0022               	movlb	2	; select bank2
 16115     1F56  00E7               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 16116     1F57  0021               	movlb	1	; select bank1
 16117     1F58  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 16118     1F59  0022               	movlb	2	; select bank2
 16119     1F5A  00E6               	movwf	_ADC_InterruptHandler^(0+256)
 16120     1F5B  0008               	return
 16121     1F5C                     __end_of_ADC_SetInterruptHandler:
 16122                           
 16123                           	psect	intentry
 16124     0004                     __pintentry:	
 16125 ;; *************** function _INTERRUPT_InterruptManager *****************
 16126 ;; Defined at:
 16127 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;		None
 16130 ;; Auto vars:     Size  Location     Type
 16131 ;;		None
 16132 ;; Return value:  Size  Location     Type
 16133 ;;                  1    wreg      void 
 16134 ;; Registers used:
 16135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16136 ;; Tracked objects:
 16137 ;;		On entry : 0/0
 16138 ;;		On exit  : 0/0
 16139 ;;		Unchanged: 0/0
 16140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16145 ;;Total ram usage:        0 bytes
 16146 ;; Hardware stack levels used: 1
 16147 ;; Hardware stack levels required when called: 4
 16148 ;; This function calls:
 16149 ;;		NULL
 16150 ;;		_ADC_ISR
 16151 ;;		_EUSART_ReceiveISR
 16152 ;;		_EUSART_TransmitISR
 16153 ;;		_TMR2_ISR
 16154 ;;		_TMR4_ISR
 16155 ;; This function is called by:
 16156 ;;		Interrupt level 1
 16157 ;; This function uses a non-reentrant model
 16158 ;;
 16159                           
 16160     0004                     _INTERRUPT_InterruptManager:
 16161                           
 16162                           ;incstack = 0
 16163     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16164                           
 16165                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16166     0005  3180               	pagesel	$
 16167                           
 16168                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 16169     0006  1F0B               	btfss	11,6	;volatile
 16170     0007  283E               	goto	i1l230
 16171                           
 16172                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 16173     0008  0021               	movlb	1	; select bank1
 16174     0009  1E11               	btfss	17,4	;volatile
 16175     000A  2815               	goto	i1l219
 16176     000B  0020               	movlb	0	; select bank0
 16177     000C  1E11               	btfss	17,4	;volatile
 16178     000D  2815               	goto	i1l219
 16179                           
 16180                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 16181     000E  0022               	movlb	2	; select bank2
 16182     000F  0865               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 16183     0010  008A               	movwf	10
 16184     0011  0864               	movf	_EUSART_TxInterruptHandler^(0+256),w
 16185     0012  000A               	callw
 16186     0013  3180               	pagesel	$
 16187                           
 16188                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 16189     0014  283E               	goto	i1l230
 16190     0015                     i1l219:	
 16191                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 16192                           
 16193     0015  0021               	movlb	1	; select bank1
 16194     0016  1E91               	btfss	17,5	;volatile
 16195     0017  2822               	goto	i1l221
 16196     0018  0020               	movlb	0	; select bank0
 16197     0019  1E91               	btfss	17,5	;volatile
 16198     001A  2822               	goto	i1l221
 16199                           
 16200                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 16201     001B  0023               	movlb	3	; select bank3
 16202     001C  0855               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 16203     001D  008A               	movwf	10
 16204     001E  0854               	movf	_EUSART_RxInterruptHandler^(0+384),w
 16205     001F  000A               	callw
 16206     0020  3180               	pagesel	$
 16207                           
 16208                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 16209     0021  283E               	goto	i1l230
 16210     0022                     i1l221:	
 16211                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 16212                           
 16213     0022  0021               	movlb	1	; select bank1
 16214     0023  1C92               	btfss	18,1	;volatile
 16215     0024  282C               	goto	i1l223
 16216     0025  0020               	movlb	0	; select bank0
 16217     0026  1C92               	btfss	18,1	;volatile
 16218     0027  282C               	goto	i1l223
 16219                           
 16220                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 16221     0028  3190  2052  3180   	fcall	_TMR4_ISR
 16222                           
 16223                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 16224     002B  283E               	goto	i1l230
 16225     002C                     i1l223:	
 16226                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 16227                           
 16228     002C  0021               	movlb	1	; select bank1
 16229     002D  1C91               	btfss	17,1	;volatile
 16230     002E  2836               	goto	i1l225
 16231     002F  0020               	movlb	0	; select bank0
 16232     0030  1C91               	btfss	17,1	;volatile
 16233     0031  2836               	goto	i1l225
 16234                           
 16235                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 16236     0032  3190  2045  3180   	fcall	_TMR2_ISR
 16237                           
 16238                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 16239     0035  283E               	goto	i1l230
 16240     0036                     i1l225:	
 16241                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 16242                           
 16243     0036  0021               	movlb	1	; select bank1
 16244     0037  1F11               	btfss	17,6	;volatile
 16245     0038  283E               	goto	i1l230
 16246     0039  0020               	movlb	0	; select bank0
 16247     003A  1F11               	btfss	17,6	;volatile
 16248     003B  283E               	goto	i1l230
 16249                           
 16250                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 16251     003C  3190  2009         	fcall	_ADC_ISR
 16252     003E                     i1l230:	
 16253                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 16254                           
 16255     003E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16256     003F  0009               	retfie
 16257     0040                     __end_of_INTERRUPT_InterruptManager:
 16258                           
 16259                           	psect	text74
 16260     1052                     __ptext74:	
 16261 ;; *************** function _TMR4_ISR *****************
 16262 ;; Defined at:
 16263 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;		None
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      void 
 16270 ;; Registers used:
 16271 ;;		wreg, status,2, status,0, pclath, cstack
 16272 ;; Tracked objects:
 16273 ;;		On entry : 1F/0
 16274 ;;		On exit  : 1F/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;Total ram usage:        0 bytes
 16282 ;; Hardware stack levels used: 1
 16283 ;; Hardware stack levels required when called: 3
 16284 ;; This function calls:
 16285 ;;		NULL
 16286 ;;		_TMR4_DefaultPeriodMatchCallback
 16287 ;;		_controller
 16288 ;; This function is called by:
 16289 ;;		_INTERRUPT_InterruptManager
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293     1052                     _TMR4_ISR:	
 16294                           ;psect for function _TMR4_ISR
 16295                           
 16296                           
 16297                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 16298                           
 16299                           ;incstack = 0
 16300                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 16301     1052  0022               	movlb	2	; select bank2
 16302     1053  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 16303     1054  0461               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 16304     1055  1903               	btfsc	3,2
 16305     1056  285C               	goto	i1l5811
 16306                           
 16307                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 16308     1057  0861               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 16309     1058  008A               	movwf	10
 16310     1059  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 16311     105A  000A               	callw
 16312     105B  3190               	pagesel	$
 16313     105C                     i1l5811:
 16314                           
 16315                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 16316     105C  0020               	movlb	0	; select bank0
 16317     105D  1092               	bcf	18,1	;volatile
 16318     105E  0008               	return
 16319     105F                     __end_of_TMR4_ISR:
 16320                           
 16321                           	psect	text75
 16322     0002                     __ptext75:	
 16323 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 16324 ;; Defined at:
 16325 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 16326 ;; Parameters:    Size  Location     Type
 16327 ;;		None
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;		None
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      void 
 16332 ;; Registers used:
 16333 ;;		None
 16334 ;; Tracked objects:
 16335 ;;		On entry : 1F/2
 16336 ;;		On exit  : 1F/2
 16337 ;;		Unchanged: 1F/0
 16338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;Total ram usage:        0 bytes
 16344 ;; Hardware stack levels used: 1
 16345 ;; This function calls:
 16346 ;;		Nothing
 16347 ;; This function is called by:
 16348 ;;		_TMR4_Initialize
 16349 ;;		_TMR4_ISR
 16350 ;; This function uses a non-reentrant model
 16351 ;;
 16352                           
 16353     0002                     _TMR4_DefaultPeriodMatchCallback:	
 16354                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 16355                           
 16356                           
 16357                           ;incstack = 0
 16358                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 16359     0002  0008               	return
 16360     0003                     __end_of_TMR4_DefaultPeriodMatchCallback:
 16361                           
 16362                           	psect	text76
 16363     0DA0                     __ptext76:	
 16364 ;; *************** function _controller *****************
 16365 ;; Defined at:
 16366 ;;		line 13 in file "controller.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;		None
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;  error           2   51[BANK0 ] short 
 16371 ;;  I               2   49[BANK0 ] short 
 16372 ;;  P               2   47[BANK0 ] short 
 16373 ;; Return value:  Size  Location     Type
 16374 ;;                  1    wreg      void 
 16375 ;; Registers used:
 16376 ;;		wreg, status,2, status,0, pclath, cstack
 16377 ;; Tracked objects:
 16378 ;;		On entry : 1F/2
 16379 ;;		On exit  : 1F/C
 16380 ;;		Unchanged: 0/0
 16381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16383 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16385 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;Total ram usage:        7 bytes
 16387 ;; Hardware stack levels used: 1
 16388 ;; Hardware stack levels required when called: 2
 16389 ;; This function calls:
 16390 ;;		_pwm_fan_LoadDutyValue
 16391 ;;		i1___fladd
 16392 ;;		i1___flmul
 16393 ;;		i1___fltol
 16394 ;;		i1___xxtofl
 16395 ;;		i1_getHoogtesensor
 16396 ;; This function is called by:
 16397 ;;		_main
 16398 ;;		_TMR4_ISR
 16399 ;; This function uses a non-reentrant model
 16400 ;;
 16401                           
 16402     0DA0                     _controller:	
 16403                           ;psect for function _controller
 16404                           
 16405                           
 16406                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 16407                           
 16408                           ;incstack = 0
 16409                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 16410     0DA0  319F  2742  318D   	fcall	i1_getHoogtesensor
 16411     0DA3  0871               	movf	?i1_getHoogtesensor+1,w
 16412     0DA4  0022               	movlb	2	; select bank2
 16413     0DA5  00C7               	movwf	(_hoogte_bal+1)^(0+256)
 16414     0DA6  0870               	movf	?i1_getHoogtesensor,w
 16415     0DA7  00C6               	movwf	_hoogte_bal^(0+256)
 16416                           
 16417                           ;controller.c: 18:     int16_t error = setpoint - hoogte_bal;
 16418     0DA8  0846               	movf	_hoogte_bal^(0+256),w
 16419     0DA9  0020               	movlb	0	; select bank0
 16420     0DAA  026C               	subwf	_setpoint,w
 16421     0DAB  00D3               	movwf	controller@error
 16422     0DAC  0022               	movlb	2	; select bank2
 16423     0DAD  0847               	movf	(_hoogte_bal+1)^(0+256),w
 16424     0DAE  0020               	movlb	0	; select bank0
 16425     0DAF  3B6D               	subwfb	_setpoint+1,w
 16426     0DB0  00D4               	movwf	controller@error+1
 16427                           
 16428                           ;controller.c: 20:     integraal += error * 0.0005;
 16429     0DB1  0853               	movf	controller@error,w
 16430     0DB2  00F0               	movwf	i1___xxtofl@val
 16431     0DB3  0854               	movf	controller@error+1,w
 16432     0DB4  00F1               	movwf	i1___xxtofl@val+1
 16433     0DB5  0D89               	rlf	9,f
 16434     0DB6  3B89               	subwfb	9,f
 16435     0DB7  0989               	comf	9,f
 16436     0DB8  00F2               	movwf	i1___xxtofl@val+2
 16437     0DB9  00F3               	movwf	i1___xxtofl@val+3
 16438     0DBA  3001               	movlw	1
 16439     0DBB  3188  20FF  318D   	fcall	i1___xxtofl
 16440     0DBE  0873               	movf	?i1___xxtofl+3,w
 16441     0DBF  00A7               	movwf	i1___flmul@a+3
 16442     0DC0  0872               	movf	?i1___xxtofl+2,w
 16443     0DC1  00A6               	movwf	i1___flmul@a+2
 16444     0DC2  0871               	movf	?i1___xxtofl+1,w
 16445     0DC3  00A5               	movwf	i1___flmul@a+1
 16446     0DC4  0870               	movf	?i1___xxtofl,w
 16447     0DC5  00A4               	movwf	i1___flmul@a
 16448     0DC6  303A               	movlw	58
 16449     0DC7  00A3               	movwf	i1___flmul@b+3
 16450     0DC8  3003               	movlw	3
 16451     0DC9  00A2               	movwf	i1___flmul@b+2
 16452     0DCA  3012               	movlw	18
 16453     0DCB  00A1               	movwf	i1___flmul@b+1
 16454     0DCC  306F               	movlw	111
 16455     0DCD  00A0               	movwf	i1___flmul@b
 16456     0DCE  3182  2271  318D   	fcall	i1___flmul
 16457     0DD1  0823               	movf	?i1___flmul+3,w
 16458     0DD2  00BD               	movwf	i1___fladd@b+3
 16459     0DD3  0822               	movf	?i1___flmul+2,w
 16460     0DD4  00BC               	movwf	i1___fladd@b+2
 16461     0DD5  0821               	movf	?i1___flmul+1,w
 16462     0DD6  00BB               	movwf	i1___fladd@b+1
 16463     0DD7  0820               	movf	?i1___flmul,w
 16464     0DD8  00BA               	movwf	i1___fladd@b
 16465     0DD9  0022               	movlb	2	; select bank2
 16466     0DDA  0843               	movf	(_integraal+3)^(0+256),w
 16467     0DDB  0020               	movlb	0	; select bank0
 16468     0DDC  00C1               	movwf	i1___fladd@a+3
 16469     0DDD  0022               	movlb	2	; select bank2
 16470     0DDE  0842               	movf	(_integraal+2)^(0+256),w
 16471     0DDF  0020               	movlb	0	; select bank0
 16472     0DE0  00C0               	movwf	i1___fladd@a+2
 16473     0DE1  0022               	movlb	2	; select bank2
 16474     0DE2  0841               	movf	(_integraal+1)^(0+256),w
 16475     0DE3  0020               	movlb	0	; select bank0
 16476     0DE4  00BF               	movwf	i1___fladd@a+1
 16477     0DE5  0022               	movlb	2	; select bank2
 16478     0DE6  0840               	movf	_integraal^(0+256),w
 16479     0DE7  0020               	movlb	0	; select bank0
 16480     0DE8  00BE               	movwf	i1___fladd@a
 16481     0DE9  3186  2623  318D   	fcall	i1___fladd
 16482     0DEC  083D               	movf	?i1___fladd+3,w
 16483     0DED  0022               	movlb	2	; select bank2
 16484     0DEE  00C3               	movwf	(_integraal+3)^(0+256)
 16485     0DEF  0020               	movlb	0	; select bank0
 16486     0DF0  083C               	movf	?i1___fladd+2,w
 16487     0DF1  0022               	movlb	2	; select bank2
 16488     0DF2  00C2               	movwf	(_integraal+2)^(0+256)
 16489     0DF3  0020               	movlb	0	; select bank0
 16490     0DF4  083B               	movf	?i1___fladd+1,w
 16491     0DF5  0022               	movlb	2	; select bank2
 16492     0DF6  00C1               	movwf	(_integraal+1)^(0+256)
 16493     0DF7  0020               	movlb	0	; select bank0
 16494     0DF8  083A               	movf	?i1___fladd,w
 16495     0DF9  0022               	movlb	2	; select bank2
 16496     0DFA  00C0               	movwf	_integraal^(0+256)
 16497                           
 16498                           ;controller.c: 22:     int16_t P = kp * error;
 16499     0DFB  0020               	movlb	0	; select bank0
 16500     0DFC  0853               	movf	controller@error,w
 16501     0DFD  00F0               	movwf	i1___xxtofl@val
 16502     0DFE  0854               	movf	controller@error+1,w
 16503     0DFF  00F1               	movwf	i1___xxtofl@val+1
 16504     0E00  0D89               	rlf	9,f
 16505     0E01  3B89               	subwfb	9,f
 16506     0E02  0989               	comf	9,f
 16507     0E03  00F2               	movwf	i1___xxtofl@val+2
 16508     0E04  00F3               	movwf	i1___xxtofl@val+3
 16509     0E05  3001               	movlw	1
 16510     0E06  3188  20FF  318D   	fcall	i1___xxtofl
 16511     0E09  0873               	movf	?i1___xxtofl+3,w
 16512     0E0A  00A7               	movwf	i1___flmul@a+3
 16513     0E0B  0872               	movf	?i1___xxtofl+2,w
 16514     0E0C  00A6               	movwf	i1___flmul@a+2
 16515     0E0D  0871               	movf	?i1___xxtofl+1,w
 16516     0E0E  00A5               	movwf	i1___flmul@a+1
 16517     0E0F  0870               	movf	?i1___xxtofl,w
 16518     0E10  00A4               	movwf	i1___flmul@a
 16519     0E11  0022               	movlb	2	; select bank2
 16520     0E12  086F               	movf	(_kp+3)^(0+256),w
 16521     0E13  0020               	movlb	0	; select bank0
 16522     0E14  00A3               	movwf	i1___flmul@b+3
 16523     0E15  0022               	movlb	2	; select bank2
 16524     0E16  086E               	movf	(_kp+2)^(0+256),w
 16525     0E17  0020               	movlb	0	; select bank0
 16526     0E18  00A2               	movwf	i1___flmul@b+2
 16527     0E19  0022               	movlb	2	; select bank2
 16528     0E1A  086D               	movf	(_kp+1)^(0+256),w
 16529     0E1B  0020               	movlb	0	; select bank0
 16530     0E1C  00A1               	movwf	i1___flmul@b+1
 16531     0E1D  0022               	movlb	2	; select bank2
 16532     0E1E  086C               	movf	_kp^(0+256),w
 16533     0E1F  0020               	movlb	0	; select bank0
 16534     0E20  00A0               	movwf	i1___flmul@b
 16535     0E21  3182  2271  318D   	fcall	i1___flmul
 16536     0E24  0823               	movf	?i1___flmul+3,w
 16537     0E25  00BD               	movwf	i1___fltol@f1+3
 16538     0E26  0822               	movf	?i1___flmul+2,w
 16539     0E27  00BC               	movwf	i1___fltol@f1+2
 16540     0E28  0821               	movf	?i1___flmul+1,w
 16541     0E29  00BB               	movwf	i1___fltol@f1+1
 16542     0E2A  0820               	movf	?i1___flmul,w
 16543     0E2B  00BA               	movwf	i1___fltol@f1
 16544     0E2C  3196  260A  318D   	fcall	i1___fltol
 16545     0E2F  083B               	movf	?i1___fltol+1,w
 16546     0E30  00D0               	movwf	controller@P+1
 16547     0E31  083A               	movf	?i1___fltol,w
 16548     0E32  00CF               	movwf	controller@P
 16549                           
 16550                           ;controller.c: 23:     int16_t I = ki * integraal;
 16551     0E33  0022               	movlb	2	; select bank2
 16552     0E34  086B               	movf	(_ki+3)^(0+256),w
 16553     0E35  0020               	movlb	0	; select bank0
 16554     0E36  00A7               	movwf	i1___flmul@a+3
 16555     0E37  0022               	movlb	2	; select bank2
 16556     0E38  086A               	movf	(_ki+2)^(0+256),w
 16557     0E39  0020               	movlb	0	; select bank0
 16558     0E3A  00A6               	movwf	i1___flmul@a+2
 16559     0E3B  0022               	movlb	2	; select bank2
 16560     0E3C  0869               	movf	(_ki+1)^(0+256),w
 16561     0E3D  0020               	movlb	0	; select bank0
 16562     0E3E  00A5               	movwf	i1___flmul@a+1
 16563     0E3F  0022               	movlb	2	; select bank2
 16564     0E40  0868               	movf	_ki^(0+256),w
 16565     0E41  0020               	movlb	0	; select bank0
 16566     0E42  00A4               	movwf	i1___flmul@a
 16567     0E43  0022               	movlb	2	; select bank2
 16568     0E44  0843               	movf	(_integraal+3)^(0+256),w
 16569     0E45  0020               	movlb	0	; select bank0
 16570     0E46  00A3               	movwf	i1___flmul@b+3
 16571     0E47  0022               	movlb	2	; select bank2
 16572     0E48  0842               	movf	(_integraal+2)^(0+256),w
 16573     0E49  0020               	movlb	0	; select bank0
 16574     0E4A  00A2               	movwf	i1___flmul@b+2
 16575     0E4B  0022               	movlb	2	; select bank2
 16576     0E4C  0841               	movf	(_integraal+1)^(0+256),w
 16577     0E4D  0020               	movlb	0	; select bank0
 16578     0E4E  00A1               	movwf	i1___flmul@b+1
 16579     0E4F  0022               	movlb	2	; select bank2
 16580     0E50  0840               	movf	_integraal^(0+256),w
 16581     0E51  0020               	movlb	0	; select bank0
 16582     0E52  00A0               	movwf	i1___flmul@b
 16583     0E53  3182  2271  318D   	fcall	i1___flmul
 16584     0E56  0823               	movf	?i1___flmul+3,w
 16585     0E57  00BD               	movwf	i1___fltol@f1+3
 16586     0E58  0822               	movf	?i1___flmul+2,w
 16587     0E59  00BC               	movwf	i1___fltol@f1+2
 16588     0E5A  0821               	movf	?i1___flmul+1,w
 16589     0E5B  00BB               	movwf	i1___fltol@f1+1
 16590     0E5C  0820               	movf	?i1___flmul,w
 16591     0E5D  00BA               	movwf	i1___fltol@f1
 16592     0E5E  3196  260A  318D   	fcall	i1___fltol
 16593     0E61  083B               	movf	?i1___fltol+1,w
 16594     0E62  00D2               	movwf	controller@I+1
 16595     0E63  083A               	movf	?i1___fltol,w
 16596     0E64  00D1               	movwf	controller@I
 16597                           
 16598                           ;controller.c: 25:     dutycycle = P + I;
 16599     0E65  0851               	movf	controller@I,w
 16600     0E66  074F               	addwf	controller@P,w
 16601     0E67  00D7               	movwf	_dutycycle
 16602     0E68  0852               	movf	controller@I+1,w
 16603     0E69  3D50               	addwfc	controller@P+1,w
 16604     0E6A  00D8               	movwf	_dutycycle+1
 16605                           
 16606                           ;controller.c: 27:     if (dutycycle > 1023 && error > 0) {
 16607     0E6B  3004               	movlw	4
 16608     0E6C  0258               	subwf	_dutycycle+1,w
 16609     0E6D  3000               	movlw	0
 16610     0E6E  1903               	skipnz
 16611     0E6F  0257               	subwf	_dutycycle,w
 16612     0E70  1C03               	skipc
 16613     0E71  2E83               	goto	i1l5789
 16614     0E72  0854               	movf	controller@error+1,w
 16615     0E73  3A80               	xorlw	128
 16616     0E74  00CE               	movwf	??_controller
 16617     0E75  3080               	movlw	128
 16618     0E76  024E               	subwf	??_controller,w
 16619     0E77  1D03               	skipz
 16620     0E78  2E7B               	goto	u724_25
 16621     0E79  3001               	movlw	1
 16622     0E7A  0253               	subwf	controller@error,w
 16623     0E7B                     u724_25:
 16624     0E7B  1C03               	skipc
 16625     0E7C  2E83               	goto	i1l5789
 16626                           
 16627                           ;controller.c: 28:         dutycycle = 1023;
 16628     0E7D  30FF               	movlw	255
 16629     0E7E  0020               	movlb	0	; select bank0
 16630     0E7F  00D7               	movwf	_dutycycle
 16631     0E80  3003               	movlw	3
 16632     0E81  00D8               	movwf	_dutycycle+1
 16633                           
 16634                           ;controller.c: 29:     } else if (dutycycle > 1023 && error < 0) {
 16635     0E82  2E8E               	goto	i1l5797
 16636     0E83                     i1l5789:
 16637     0E83  3004               	movlw	4
 16638     0E84  0020               	movlb	0	; select bank0
 16639     0E85  0258               	subwf	_dutycycle+1,w
 16640     0E86  3000               	movlw	0
 16641     0E87  1903               	skipnz
 16642     0E88  0257               	subwf	_dutycycle,w
 16643     0E89  1803               	btfsc	3,0
 16644     0E8A  1FD4               	btfss	controller@error+1,7
 16645     0E8B  2E8E               	goto	i1l5797
 16646                           
 16647                           ;controller.c: 30:         dutycycle = 0;
 16648     0E8C  01D7               	clrf	_dutycycle
 16649     0E8D  01D8               	clrf	_dutycycle+1
 16650     0E8E                     i1l5797:	
 16651                           ;controller.c: 31:     } else if (dutycycle < 0) {
 16652                           
 16653                           
 16654                           ;controller.c: 35:     pwm_fan_LoadDutyValue(dutycycle);
 16655     0E8E  0858               	movf	_dutycycle+1,w
 16656     0E8F  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 16657     0E90  0857               	movf	_dutycycle,w
 16658     0E91  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 16659     0E92  3190  20FA         	fcall	_pwm_fan_LoadDutyValue
 16660     0E94  0008               	return
 16661     0E95                     __end_of_controller:
 16662                           
 16663                           	psect	text77
 16664     1F42                     __ptext77:	
 16665 ;; *************** function i1_getHoogtesensor *****************
 16666 ;; Defined at:
 16667 ;;		line 33 in file "adcMeasurements.c"
 16668 ;; Parameters:    Size  Location     Type
 16669 ;;		None
 16670 ;; Auto vars:     Size  Location     Type
 16671 ;;		None
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  2    0[COMMON] unsigned short 
 16674 ;; Registers used:
 16675 ;;		wreg
 16676 ;; Tracked objects:
 16677 ;;		On entry : 1F/2
 16678 ;;		On exit  : 1F/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;Total ram usage:        2 bytes
 16686 ;; Hardware stack levels used: 1
 16687 ;; This function calls:
 16688 ;;		Nothing
 16689 ;; This function is called by:
 16690 ;;		_controller
 16691 ;; This function uses a non-reentrant model
 16692 ;;
 16693                           
 16694     1F42                     i1_getHoogtesensor:	
 16695                           ;psect for function i1_getHoogtesensor
 16696                           
 16697                           
 16698                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 16699                           
 16700                           ;incstack = 0
 16701                           ; Regs used in i1_getHoogtesensor: [wreg]
 16702     1F42  0020               	movlb	0	; select bank0
 16703     1F43  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 16704     1F44  00F1               	movwf	?i1_getHoogtesensor+1
 16705     1F45  0859               	movf	_ADC_hoogtesensor,w	;volatile
 16706     1F46  00F0               	movwf	?i1_getHoogtesensor
 16707     1F47  0008               	return
 16708     1F48                     __end_ofi1_getHoogtesensor:
 16709                           
 16710                           	psect	text78
 16711     08FF                     __ptext78:	
 16712 ;; *************** function i1___xxtofl *****************
 16713 ;; Defined at:
 16714 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;  sign            1    wreg     unsigned char 
 16717 ;;  val             4    0[COMMON] long 
 16718 ;; Auto vars:     Size  Location     Type
 16719 ;;  sign            1    8[COMMON] unsigned char 
 16720 ;;  arg             4   10[COMMON] unsigned long 
 16721 ;;  exp             1    9[COMMON] unsigned char 
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  4    0[COMMON] unsigned char 
 16724 ;; Registers used:
 16725 ;;		wreg, status,2, status,0
 16726 ;; Tracked objects:
 16727 ;;		On entry : 1F/0
 16728 ;;		On exit  : 1F/0
 16729 ;;		Unchanged: 1F/0
 16730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16732 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16733 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16734 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;Total ram usage:       14 bytes
 16736 ;; Hardware stack levels used: 1
 16737 ;; This function calls:
 16738 ;;		Nothing
 16739 ;; This function is called by:
 16740 ;;		_controller
 16741 ;; This function uses a non-reentrant model
 16742 ;;
 16743                           
 16744     08FF                     i1___xxtofl:	
 16745                           ;psect for function i1___xxtofl
 16746                           
 16747                           
 16748                           ;incstack = 0
 16749                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 16750                           ;i1___xxtofl@sign stored from wreg
 16751     08FF  00F8               	movwf	i1___xxtofl@sign
 16752     0900  0878               	movf	i1___xxtofl@sign,w
 16753     0901  1D03               	btfss	3,2
 16754     0902  1FF3               	btfss	i1___xxtofl@val+3,7
 16755     0903  2914               	goto	i1l5429
 16756     0904  0970               	comf	i1___xxtofl@val,w
 16757     0905  00FA               	movwf	i1___xxtofl@arg
 16758     0906  0971               	comf	i1___xxtofl@val+1,w
 16759     0907  00FB               	movwf	i1___xxtofl@arg+1
 16760     0908  0972               	comf	i1___xxtofl@val+2,w
 16761     0909  00FC               	movwf	i1___xxtofl@arg+2
 16762     090A  0973               	comf	i1___xxtofl@val+3,w
 16763     090B  00FD               	movwf	i1___xxtofl@arg+3
 16764     090C  0AFA               	incf	i1___xxtofl@arg,f
 16765     090D  1903               	skipnz
 16766     090E  0AFB               	incf	i1___xxtofl@arg+1,f
 16767     090F  1903               	skipnz
 16768     0910  0AFC               	incf	i1___xxtofl@arg+2,f
 16769     0911  1903               	skipnz
 16770     0912  0AFD               	incf	i1___xxtofl@arg+3,f
 16771     0913  291C               	goto	i1l1622
 16772     0914                     i1l5429:
 16773     0914  0873               	movf	i1___xxtofl@val+3,w
 16774     0915  00FD               	movwf	i1___xxtofl@arg+3
 16775     0916  0872               	movf	i1___xxtofl@val+2,w
 16776     0917  00FC               	movwf	i1___xxtofl@arg+2
 16777     0918  0871               	movf	i1___xxtofl@val+1,w
 16778     0919  00FB               	movwf	i1___xxtofl@arg+1
 16779     091A  0870               	movf	i1___xxtofl@val,w
 16780     091B  00FA               	movwf	i1___xxtofl@arg
 16781     091C                     i1l1622:
 16782     091C  0873               	movf	i1___xxtofl@val+3,w
 16783     091D  0472               	iorwf	i1___xxtofl@val+2,w
 16784     091E  0471               	iorwf	i1___xxtofl@val+1,w
 16785     091F  0470               	iorwf	i1___xxtofl@val,w
 16786     0920  1D03               	skipz
 16787     0921  292B               	goto	i1l1623
 16788     0922  3000               	movlw	0
 16789     0923  00F3               	movwf	?i1___xxtofl+3
 16790     0924  3000               	movlw	0
 16791     0925  00F2               	movwf	?i1___xxtofl+2
 16792     0926  3000               	movlw	0
 16793     0927  00F1               	movwf	?i1___xxtofl+1
 16794     0928  3000               	movlw	0
 16795     0929  00F0               	movwf	?i1___xxtofl
 16796     092A  0008               	return
 16797     092B                     i1l1623:
 16798     092B  3096               	movlw	150
 16799     092C  00F9               	movwf	i1___xxtofl@exp
 16800     092D                     i1l5437:
 16801     092D  30FE               	movlw	254
 16802     092E  057D               	andwf	i1___xxtofl@arg+3,w
 16803     092F  1903               	btfsc	3,2
 16804     0930  294A               	goto	i1l5441
 16805     0931  3001               	movlw	1
 16806     0932  07F9               	addwf	i1___xxtofl@exp,f
 16807     0933  3001               	movlw	1
 16808     0934                     u695_25:
 16809     0934  36FD               	lsrf	i1___xxtofl@arg+3,f
 16810     0935  0CFC               	rrf	i1___xxtofl@arg+2,f
 16811     0936  0CFB               	rrf	i1___xxtofl@arg+1,f
 16812     0937  0CFA               	rrf	i1___xxtofl@arg,f
 16813     0938  0B89               	decfsz	9,f
 16814     0939  2934               	goto	u695_25
 16815     093A  292D               	goto	i1l5437
 16816     093B                     i1l5439:
 16817     093B  3001               	movlw	1
 16818     093C  07F9               	addwf	i1___xxtofl@exp,f
 16819     093D  3001               	movlw	1
 16820     093E  07FA               	addwf	i1___xxtofl@arg,f
 16821     093F  3000               	movlw	0
 16822     0940  3DFB               	addwfc	i1___xxtofl@arg+1,f
 16823     0941  3DFC               	addwfc	i1___xxtofl@arg+2,f
 16824     0942  3DFD               	addwfc	i1___xxtofl@arg+3,f
 16825     0943  3001               	movlw	1
 16826     0944                     u697_25:
 16827     0944  36FD               	lsrf	i1___xxtofl@arg+3,f
 16828     0945  0CFC               	rrf	i1___xxtofl@arg+2,f
 16829     0946  0CFB               	rrf	i1___xxtofl@arg+1,f
 16830     0947  0CFA               	rrf	i1___xxtofl@arg,f
 16831     0948  0B89               	decfsz	9,f
 16832     0949  2944               	goto	u697_25
 16833     094A                     i1l5441:
 16834     094A  30FF               	movlw	255
 16835     094B  057D               	andwf	i1___xxtofl@arg+3,w
 16836     094C  1903               	btfsc	3,2
 16837     094D  295C               	goto	i1l5445
 16838     094E  293B               	goto	i1l5439
 16839     094F                     i1l5447:
 16840     094F  3002               	movlw	2
 16841     0950  0279               	subwf	i1___xxtofl@exp,w
 16842     0951  1C03               	btfss	3,0
 16843     0952  295E               	goto	i1l1635
 16844     0953  3001               	movlw	1
 16845     0954  02F9               	subwf	i1___xxtofl@exp,f
 16846     0955  3001               	movlw	1
 16847     0956                     u699_25:
 16848     0956  35FA               	lslf	i1___xxtofl@arg,f
 16849     0957  0DFB               	rlf	i1___xxtofl@arg+1,f
 16850     0958  0DFC               	rlf	i1___xxtofl@arg+2,f
 16851     0959  0DFD               	rlf	i1___xxtofl@arg+3,f
 16852     095A  0B89               	decfsz	9,f
 16853     095B  2956               	goto	u699_25
 16854     095C                     i1l5445:
 16855     095C  1FFC               	btfss	i1___xxtofl@arg+2,7
 16856     095D  294F               	goto	i1l5447
 16857     095E                     i1l1635:
 16858     095E  1879               	btfsc	i1___xxtofl@exp,0
 16859     095F  2968               	goto	i1l1636
 16860     0960  30FF               	movlw	255
 16861     0961  05FA               	andwf	i1___xxtofl@arg,f
 16862     0962  30FF               	movlw	255
 16863     0963  05FB               	andwf	i1___xxtofl@arg+1,f
 16864     0964  307F               	movlw	127
 16865     0965  05FC               	andwf	i1___xxtofl@arg+2,f
 16866     0966  30FF               	movlw	255
 16867     0967  05FD               	andwf	i1___xxtofl@arg+3,f
 16868     0968                     i1l1636:
 16869     0968  1003               	clrc
 16870     0969  0CF9               	rrf	i1___xxtofl@exp,f
 16871     096A  0879               	movf	i1___xxtofl@exp,w
 16872     096B  00F4               	movwf	??i1___xxtofl
 16873     096C  01F5               	clrf	??i1___xxtofl+1
 16874     096D  01F6               	clrf	??i1___xxtofl+2
 16875     096E  01F7               	clrf	??i1___xxtofl+3
 16876     096F  3018               	movlw	24
 16877     0970                     u703_25:
 16878     0970  35F4               	lslf	??i1___xxtofl,f
 16879     0971  0DF5               	rlf	??i1___xxtofl+1,f
 16880     0972  0DF6               	rlf	??i1___xxtofl+2,f
 16881     0973  0DF7               	rlf	??i1___xxtofl+3,f
 16882     0974  0B89               	decfsz	9,f
 16883     0975  2970               	goto	u703_25
 16884     0976  0874               	movf	??i1___xxtofl,w
 16885     0977  04FA               	iorwf	i1___xxtofl@arg,f
 16886     0978  0875               	movf	??i1___xxtofl+1,w
 16887     0979  04FB               	iorwf	i1___xxtofl@arg+1,f
 16888     097A  0876               	movf	??i1___xxtofl+2,w
 16889     097B  04FC               	iorwf	i1___xxtofl@arg+2,f
 16890     097C  0877               	movf	??i1___xxtofl+3,w
 16891     097D  04FD               	iorwf	i1___xxtofl@arg+3,f
 16892     097E  0878               	movf	i1___xxtofl@sign,w
 16893     097F  1D03               	btfss	3,2
 16894     0980  1FF3               	btfss	i1___xxtofl@val+3,7
 16895     0981  2983               	goto	i1l5459
 16896     0982  17FD               	bsf	i1___xxtofl@arg+3,7
 16897     0983                     i1l5459:
 16898     0983  087D               	movf	i1___xxtofl@arg+3,w
 16899     0984  00F3               	movwf	?i1___xxtofl+3
 16900     0985  087C               	movf	i1___xxtofl@arg+2,w
 16901     0986  00F2               	movwf	?i1___xxtofl+2
 16902     0987  087B               	movf	i1___xxtofl@arg+1,w
 16903     0988  00F1               	movwf	?i1___xxtofl+1
 16904     0989  087A               	movf	i1___xxtofl@arg,w
 16905     098A  00F0               	movwf	?i1___xxtofl
 16906     098B  0008               	return
 16907     098C                     __end_ofi1___xxtofl:
 16908                           
 16909                           	psect	text79
 16910     160A                     __ptext79:	
 16911 ;; *************** function i1___fltol *****************
 16912 ;; Defined at:
 16913 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;  f1              4   26[BANK0 ] unsigned char 
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;  exp1            1   35[BANK0 ] unsigned char 
 16918 ;;  sign1           1   34[BANK0 ] unsigned char 
 16919 ;; Return value:  Size  Location     Type
 16920 ;;                  4   26[BANK0 ] long 
 16921 ;; Registers used:
 16922 ;;		wreg, status,2, status,0
 16923 ;; Tracked objects:
 16924 ;;		On entry : 1F/0
 16925 ;;		On exit  : 1F/0
 16926 ;;		Unchanged: 0/0
 16927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16931 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16932 ;;Total ram usage:       10 bytes
 16933 ;; Hardware stack levels used: 1
 16934 ;; This function calls:
 16935 ;;		Nothing
 16936 ;; This function is called by:
 16937 ;;		_controller
 16938 ;; This function uses a non-reentrant model
 16939 ;;
 16940                           
 16941     160A                     i1___fltol:	
 16942                           ;psect for function i1___fltol
 16943                           
 16944                           
 16945                           ;incstack = 0
 16946                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 16947     160A  1003               	clrc
 16948     160B  0D3C               	rlf	i1___fltol@f1+2,w
 16949     160C  0D3D               	rlf	i1___fltol@f1+3,w
 16950     160D  00C3               	movwf	i1___fltol@exp1
 16951     160E  0843               	movf	i1___fltol@exp1,w
 16952     160F  1D03               	btfss	3,2
 16953     1610  2E1A               	goto	i1l5057
 16954     1611                     i1l5053:
 16955     1611  3000               	movlw	0
 16956     1612  00BD               	movwf	?i1___fltol+3
 16957     1613  3000               	movlw	0
 16958     1614  00BC               	movwf	?i1___fltol+2
 16959     1615  3000               	movlw	0
 16960     1616  00BB               	movwf	?i1___fltol+1
 16961     1617  3000               	movlw	0
 16962     1618  00BA               	movwf	?i1___fltol
 16963     1619  0008               	return
 16964     161A                     i1l5057:
 16965     161A  083A               	movf	i1___fltol@f1,w
 16966     161B  00BE               	movwf	??i1___fltol
 16967     161C  083B               	movf	i1___fltol@f1+1,w
 16968     161D  00BF               	movwf	??i1___fltol+1
 16969     161E  083C               	movf	i1___fltol@f1+2,w
 16970     161F  00C0               	movwf	??i1___fltol+2
 16971     1620  083D               	movf	i1___fltol@f1+3,w
 16972     1621  00C1               	movwf	??i1___fltol+3
 16973     1622  301F               	movlw	31
 16974     1623                     u611_25:
 16975     1623  36C1               	lsrf	??i1___fltol+3,f
 16976     1624  0CC0               	rrf	??i1___fltol+2,f
 16977     1625  0CBF               	rrf	??i1___fltol+1,f
 16978     1626  0CBE               	rrf	??i1___fltol,f
 16979     1627  0B89               	decfsz	9,f
 16980     1628  2E23               	goto	u611_25
 16981     1629  083E               	movf	??i1___fltol,w
 16982     162A  00C2               	movwf	i1___fltol@sign1
 16983     162B  17BC               	bsf	i1___fltol@f1+2,7
 16984     162C  30FF               	movlw	255
 16985     162D  05BA               	andwf	i1___fltol@f1,f
 16986     162E  30FF               	movlw	255
 16987     162F  05BB               	andwf	i1___fltol@f1+1,f
 16988     1630  30FF               	movlw	255
 16989     1631  05BC               	andwf	i1___fltol@f1+2,f
 16990     1632  3000               	movlw	0
 16991     1633  05BD               	andwf	i1___fltol@f1+3,f
 16992     1634  3096               	movlw	150
 16993     1635  02C3               	subwf	i1___fltol@exp1,f
 16994     1636  1FC3               	btfss	i1___fltol@exp1,7
 16995     1637  2E49               	goto	i1l5075
 16996     1638  0843               	movf	i1___fltol@exp1,w
 16997     1639  3A80               	xorlw	128
 16998     163A  3E97               	addlw	151
 16999     163B  1C03               	btfss	3,0
 17000     163C  2E11               	goto	i1l5053
 17001     163D                     i1l5073:
 17002     163D  3001               	movlw	1
 17003     163E                     u614_25:
 17004     163E  36BD               	lsrf	i1___fltol@f1+3,f
 17005     163F  0CBC               	rrf	i1___fltol@f1+2,f
 17006     1640  0CBB               	rrf	i1___fltol@f1+1,f
 17007     1641  0CBA               	rrf	i1___fltol@f1,f
 17008     1642  0B89               	decfsz	9,f
 17009     1643  2E3E               	goto	u614_25
 17010     1644  3001               	movlw	1
 17011     1645  07C3               	addwf	i1___fltol@exp1,f
 17012     1646  1903               	btfsc	3,2
 17013     1647  2E5A               	goto	i1l5083
 17014     1648  2E3D               	goto	i1l5073
 17015     1649                     i1l5075:
 17016     1649  3020               	movlw	32
 17017     164A  0243               	subwf	i1___fltol@exp1,w
 17018     164B  1803               	btfsc	3,0
 17019     164C  2E11               	goto	i1l5053
 17020     164D                     i1l1382:
 17021     164D  0843               	movf	i1___fltol@exp1,w
 17022     164E  1903               	btfsc	3,2
 17023     164F  2E5A               	goto	i1l5083
 17024     1650  3001               	movlw	1
 17025     1651                     u617_25:
 17026     1651  35BA               	lslf	i1___fltol@f1,f
 17027     1652  0DBB               	rlf	i1___fltol@f1+1,f
 17028     1653  0DBC               	rlf	i1___fltol@f1+2,f
 17029     1654  0DBD               	rlf	i1___fltol@f1+3,f
 17030     1655  0B89               	decfsz	9,f
 17031     1656  2E51               	goto	u617_25
 17032     1657  3001               	movlw	1
 17033     1658  02C3               	subwf	i1___fltol@exp1,f
 17034     1659  2E4D               	goto	i1l1382
 17035     165A                     i1l5083:
 17036     165A  0842               	movf	i1___fltol@sign1,w
 17037     165B  1903               	btfsc	3,2
 17038     165C  0008               	return
 17039     165D  09BA               	comf	i1___fltol@f1,f
 17040     165E  09BB               	comf	i1___fltol@f1+1,f
 17041     165F  09BC               	comf	i1___fltol@f1+2,f
 17042     1660  09BD               	comf	i1___fltol@f1+3,f
 17043     1661  0ABA               	incf	i1___fltol@f1,f
 17044     1662  1903               	skipnz
 17045     1663  0ABB               	incf	i1___fltol@f1+1,f
 17046     1664  1903               	skipnz
 17047     1665  0ABC               	incf	i1___fltol@f1+2,f
 17048     1666  1903               	skipnz
 17049     1667  0ABD               	incf	i1___fltol@f1+3,f
 17050     1668  0008               	return
 17051     1669                     __end_ofi1___fltol:
 17052                           
 17053                           	psect	text80
 17054     0271                     __ptext80:	
 17055 ;; *************** function i1___flmul *****************
 17056 ;; Defined at:
 17057 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 17058 ;; Parameters:    Size  Location     Type
 17059 ;;  b               4    0[BANK0 ] long 
 17060 ;;  a               4    4[BANK0 ] long 
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;  prod            4   20[BANK0 ] struct .
 17063 ;;  grs             4   15[BANK0 ] unsigned long 
 17064 ;;  temp            2   24[BANK0 ] struct .
 17065 ;;  bexp            1   19[BANK0 ] unsigned char 
 17066 ;;  aexp            1   14[BANK0 ] unsigned char 
 17067 ;;  sign            1   13[BANK0 ] unsigned char 
 17068 ;; Return value:  Size  Location     Type
 17069 ;;                  4    0[BANK0 ] unsigned char 
 17070 ;; Registers used:
 17071 ;;		wreg, status,2, status,0, pclath, cstack
 17072 ;; Tracked objects:
 17073 ;;		On entry : 1F/0
 17074 ;;		On exit  : 1F/0
 17075 ;;		Unchanged: 0/0
 17076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17077 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17078 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17079 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17080 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17081 ;;Total ram usage:       26 bytes
 17082 ;; Hardware stack levels used: 1
 17083 ;; Hardware stack levels required when called: 1
 17084 ;; This function calls:
 17085 ;;		i1__Umul8_16
 17086 ;; This function is called by:
 17087 ;;		_controller
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091     0271                     i1___flmul:	
 17092                           ;psect for function i1___flmul
 17093                           
 17094                           
 17095                           ;incstack = 0
 17096                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 17097     0271  0823               	movf	i1___flmul@b+3,w
 17098     0272  3980               	andlw	128
 17099     0273  00AD               	movwf	i1___flmul@sign
 17100     0274  3523               	lslf	i1___flmul@b+3,w
 17101     0275  00B3               	movwf	i1___flmul@bexp
 17102     0276  1BA2               	btfsc	i1___flmul@b+2,7
 17103     0277  1433               	bsf	i1___flmul@bexp,0
 17104     0278  0833               	movf	i1___flmul@bexp,w
 17105     0279  1903               	btfsc	3,2
 17106     027A  2A88               	goto	i1l5299
 17107     027B  0A33               	incf	i1___flmul@bexp,w
 17108     027C  1D03               	btfss	3,2
 17109     027D  2A86               	goto	i1l5297
 17110     027E  3000               	movlw	0
 17111     027F  00A3               	movwf	i1___flmul@b+3
 17112     0280  3000               	movlw	0
 17113     0281  00A2               	movwf	i1___flmul@b+2
 17114     0282  3000               	movlw	0
 17115     0283  00A1               	movwf	i1___flmul@b+1
 17116     0284  3000               	movlw	0
 17117     0285  00A0               	movwf	i1___flmul@b
 17118     0286                     i1l5297:
 17119     0286  17A2               	bsf	i1___flmul@b+2,7
 17120     0287  2A90               	goto	i1l5301
 17121     0288                     i1l5299:
 17122     0288  3000               	movlw	0
 17123     0289  00A3               	movwf	i1___flmul@b+3
 17124     028A  3000               	movlw	0
 17125     028B  00A2               	movwf	i1___flmul@b+2
 17126     028C  3000               	movlw	0
 17127     028D  00A1               	movwf	i1___flmul@b+1
 17128     028E  3000               	movlw	0
 17129     028F  00A0               	movwf	i1___flmul@b
 17130     0290                     i1l5301:
 17131     0290  0827               	movf	i1___flmul@a+3,w
 17132     0291  3980               	andlw	128
 17133     0292  06AD               	xorwf	i1___flmul@sign,f
 17134     0293  3527               	lslf	i1___flmul@a+3,w
 17135     0294  00AE               	movwf	i1___flmul@aexp
 17136     0295  1BA6               	btfsc	i1___flmul@a+2,7
 17137     0296  142E               	bsf	i1___flmul@aexp,0
 17138     0297  082E               	movf	i1___flmul@aexp,w
 17139     0298  1903               	btfsc	3,2
 17140     0299  2AA7               	goto	i1l5317
 17141     029A  0A2E               	incf	i1___flmul@aexp,w
 17142     029B  1D03               	btfss	3,2
 17143     029C  2AA5               	goto	i1l5315
 17144     029D  3000               	movlw	0
 17145     029E  00A7               	movwf	i1___flmul@a+3
 17146     029F  3000               	movlw	0
 17147     02A0  00A6               	movwf	i1___flmul@a+2
 17148     02A1  3000               	movlw	0
 17149     02A2  00A5               	movwf	i1___flmul@a+1
 17150     02A3  3000               	movlw	0
 17151     02A4  00A4               	movwf	i1___flmul@a
 17152     02A5                     i1l5315:
 17153     02A5  17A6               	bsf	i1___flmul@a+2,7
 17154     02A6  2AAF               	goto	i1l5319
 17155     02A7                     i1l5317:
 17156     02A7  3000               	movlw	0
 17157     02A8  00A7               	movwf	i1___flmul@a+3
 17158     02A9  3000               	movlw	0
 17159     02AA  00A6               	movwf	i1___flmul@a+2
 17160     02AB  3000               	movlw	0
 17161     02AC  00A5               	movwf	i1___flmul@a+1
 17162     02AD  3000               	movlw	0
 17163     02AE  00A4               	movwf	i1___flmul@a
 17164     02AF                     i1l5319:
 17165     02AF  082E               	movf	i1___flmul@aexp,w
 17166     02B0  1D03               	btfss	3,2
 17167     02B1  0833               	movf	i1___flmul@bexp,w
 17168     02B2  1D03               	btfss	3,2
 17169     02B3  2ABD               	goto	i1l5327
 17170     02B4  3000               	movlw	0
 17171     02B5  00A3               	movwf	?i1___flmul+3
 17172     02B6  3000               	movlw	0
 17173     02B7  00A2               	movwf	?i1___flmul+2
 17174     02B8  3000               	movlw	0
 17175     02B9  00A1               	movwf	?i1___flmul+1
 17176     02BA  3000               	movlw	0
 17177     02BB  00A0               	movwf	?i1___flmul
 17178     02BC  0008               	return
 17179     02BD                     i1l5327:
 17180     02BD  0820               	movf	i1___flmul@b,w
 17181     02BE  00F0               	movwf	i1__Umul8_16@multiplicand
 17182     02BF  0826               	movf	i1___flmul@a+2,w
 17183     02C0  3191  21FE  3182   	fcall	i1__Umul8_16
 17184     02C3  0871               	movf	?i1__Umul8_16+1,w
 17185     02C4  00B9               	movwf	i1___flmul@temp+1
 17186     02C5  0870               	movf	?i1__Umul8_16,w
 17187     02C6  00B8               	movwf	i1___flmul@temp
 17188     02C7  0838               	movf	i1___flmul@temp,w
 17189     02C8  00A8               	movwf	??i1___flmul
 17190     02C9  01A9               	clrf	??i1___flmul+1
 17191     02CA  01AA               	clrf	??i1___flmul+2
 17192     02CB  01AB               	clrf	??i1___flmul+3
 17193     02CC  082B               	movf	??i1___flmul+3,w
 17194     02CD  00B2               	movwf	i1___flmul@grs+3
 17195     02CE  082A               	movf	??i1___flmul+2,w
 17196     02CF  00B1               	movwf	i1___flmul@grs+2
 17197     02D0  0829               	movf	??i1___flmul+1,w
 17198     02D1  00B0               	movwf	i1___flmul@grs+1
 17199     02D2  0828               	movf	??i1___flmul,w
 17200     02D3  00AF               	movwf	i1___flmul@grs
 17201     02D4  0839               	movf	i1___flmul@temp+1,w
 17202     02D5  00A8               	movwf	??i1___flmul
 17203     02D6  01A9               	clrf	??i1___flmul+1
 17204     02D7  01AA               	clrf	??i1___flmul+2
 17205     02D8  01AB               	clrf	??i1___flmul+3
 17206     02D9  082B               	movf	??i1___flmul+3,w
 17207     02DA  00B7               	movwf	i1___flmul@prod+3
 17208     02DB  082A               	movf	??i1___flmul+2,w
 17209     02DC  00B6               	movwf	i1___flmul@prod+2
 17210     02DD  0829               	movf	??i1___flmul+1,w
 17211     02DE  00B5               	movwf	i1___flmul@prod+1
 17212     02DF  0828               	movf	??i1___flmul,w
 17213     02E0  00B4               	movwf	i1___flmul@prod
 17214     02E1  0821               	movf	i1___flmul@b+1,w
 17215     02E2  00F0               	movwf	i1__Umul8_16@multiplicand
 17216     02E3  0825               	movf	i1___flmul@a+1,w
 17217     02E4  3191  21FE  3182   	fcall	i1__Umul8_16
 17218     02E7  0871               	movf	?i1__Umul8_16+1,w
 17219     02E8  00B9               	movwf	i1___flmul@temp+1
 17220     02E9  0870               	movf	?i1__Umul8_16,w
 17221     02EA  00B8               	movwf	i1___flmul@temp
 17222     02EB  0838               	movf	i1___flmul@temp,w
 17223     02EC  00A8               	movwf	??i1___flmul
 17224     02ED  01A9               	clrf	??i1___flmul+1
 17225     02EE  01AA               	clrf	??i1___flmul+2
 17226     02EF  01AB               	clrf	??i1___flmul+3
 17227     02F0  0828               	movf	??i1___flmul,w
 17228     02F1  07AF               	addwf	i1___flmul@grs,f
 17229     02F2  0829               	movf	??i1___flmul+1,w
 17230     02F3  3DB0               	addwfc	i1___flmul@grs+1,f
 17231     02F4  082A               	movf	??i1___flmul+2,w
 17232     02F5  3DB1               	addwfc	i1___flmul@grs+2,f
 17233     02F6  082B               	movf	??i1___flmul+3,w
 17234     02F7  3DB2               	addwfc	i1___flmul@grs+3,f
 17235     02F8  0839               	movf	i1___flmul@temp+1,w
 17236     02F9  00A8               	movwf	??i1___flmul
 17237     02FA  01A9               	clrf	??i1___flmul+1
 17238     02FB  01AA               	clrf	??i1___flmul+2
 17239     02FC  01AB               	clrf	??i1___flmul+3
 17240     02FD  0828               	movf	??i1___flmul,w
 17241     02FE  07B4               	addwf	i1___flmul@prod,f
 17242     02FF  0829               	movf	??i1___flmul+1,w
 17243     0300  3DB5               	addwfc	i1___flmul@prod+1,f
 17244     0301  082A               	movf	??i1___flmul+2,w
 17245     0302  3DB6               	addwfc	i1___flmul@prod+2,f
 17246     0303  082B               	movf	??i1___flmul+3,w
 17247     0304  3DB7               	addwfc	i1___flmul@prod+3,f
 17248     0305  0822               	movf	i1___flmul@b+2,w
 17249     0306  00F0               	movwf	i1__Umul8_16@multiplicand
 17250     0307  0824               	movf	i1___flmul@a,w
 17251     0308  3191  21FE  3182   	fcall	i1__Umul8_16
 17252     030B  0871               	movf	?i1__Umul8_16+1,w
 17253     030C  00B9               	movwf	i1___flmul@temp+1
 17254     030D  0870               	movf	?i1__Umul8_16,w
 17255     030E  00B8               	movwf	i1___flmul@temp
 17256     030F  0838               	movf	i1___flmul@temp,w
 17257     0310  00A8               	movwf	??i1___flmul
 17258     0311  01A9               	clrf	??i1___flmul+1
 17259     0312  01AA               	clrf	??i1___flmul+2
 17260     0313  01AB               	clrf	??i1___flmul+3
 17261     0314  0828               	movf	??i1___flmul,w
 17262     0315  07AF               	addwf	i1___flmul@grs,f
 17263     0316  0829               	movf	??i1___flmul+1,w
 17264     0317  3DB0               	addwfc	i1___flmul@grs+1,f
 17265     0318  082A               	movf	??i1___flmul+2,w
 17266     0319  3DB1               	addwfc	i1___flmul@grs+2,f
 17267     031A  082B               	movf	??i1___flmul+3,w
 17268     031B  3DB2               	addwfc	i1___flmul@grs+3,f
 17269     031C  0839               	movf	i1___flmul@temp+1,w
 17270     031D  00A8               	movwf	??i1___flmul
 17271     031E  01A9               	clrf	??i1___flmul+1
 17272     031F  01AA               	clrf	??i1___flmul+2
 17273     0320  01AB               	clrf	??i1___flmul+3
 17274     0321  0828               	movf	??i1___flmul,w
 17275     0322  07B4               	addwf	i1___flmul@prod,f
 17276     0323  0829               	movf	??i1___flmul+1,w
 17277     0324  3DB5               	addwfc	i1___flmul@prod+1,f
 17278     0325  082A               	movf	??i1___flmul+2,w
 17279     0326  3DB6               	addwfc	i1___flmul@prod+2,f
 17280     0327  082B               	movf	??i1___flmul+3,w
 17281     0328  3DB7               	addwfc	i1___flmul@prod+3,f
 17282     0329  3008               	movlw	8
 17283     032A                     u674_25:
 17284     032A  35AF               	lslf	i1___flmul@grs,f
 17285     032B  0DB0               	rlf	i1___flmul@grs+1,f
 17286     032C  0DB1               	rlf	i1___flmul@grs+2,f
 17287     032D  0DB2               	rlf	i1___flmul@grs+3,f
 17288     032E  0B89               	decfsz	9,f
 17289     032F  2B2A               	goto	u674_25
 17290     0330  0821               	movf	i1___flmul@b+1,w
 17291     0331  00F0               	movwf	i1__Umul8_16@multiplicand
 17292     0332  0824               	movf	i1___flmul@a,w
 17293     0333  3191  21FE  3182   	fcall	i1__Umul8_16
 17294     0336  0871               	movf	?i1__Umul8_16+1,w
 17295     0337  00B9               	movwf	i1___flmul@temp+1
 17296     0338  0870               	movf	?i1__Umul8_16,w
 17297     0339  00B8               	movwf	i1___flmul@temp
 17298     033A  0838               	movf	i1___flmul@temp,w
 17299     033B  07AF               	addwf	i1___flmul@grs,f
 17300     033C  0839               	movf	i1___flmul@temp+1,w
 17301     033D  3DB0               	addwfc	i1___flmul@grs+1,f
 17302     033E  3000               	movlw	0
 17303     033F  3DB1               	addwfc	i1___flmul@grs+2,f
 17304     0340  3DB2               	addwfc	i1___flmul@grs+3,f
 17305     0341  0820               	movf	i1___flmul@b,w
 17306     0342  00F0               	movwf	i1__Umul8_16@multiplicand
 17307     0343  0825               	movf	i1___flmul@a+1,w
 17308     0344  3191  21FE  3182   	fcall	i1__Umul8_16
 17309     0347  0871               	movf	?i1__Umul8_16+1,w
 17310     0348  00B9               	movwf	i1___flmul@temp+1
 17311     0349  0870               	movf	?i1__Umul8_16,w
 17312     034A  00B8               	movwf	i1___flmul@temp
 17313     034B  0838               	movf	i1___flmul@temp,w
 17314     034C  07AF               	addwf	i1___flmul@grs,f
 17315     034D  0839               	movf	i1___flmul@temp+1,w
 17316     034E  3DB0               	addwfc	i1___flmul@grs+1,f
 17317     034F  3000               	movlw	0
 17318     0350  3DB1               	addwfc	i1___flmul@grs+2,f
 17319     0351  3DB2               	addwfc	i1___flmul@grs+3,f
 17320     0352  3008               	movlw	8
 17321     0353                     u675_25:
 17322     0353  35AF               	lslf	i1___flmul@grs,f
 17323     0354  0DB0               	rlf	i1___flmul@grs+1,f
 17324     0355  0DB1               	rlf	i1___flmul@grs+2,f
 17325     0356  0DB2               	rlf	i1___flmul@grs+3,f
 17326     0357  0B89               	decfsz	9,f
 17327     0358  2B53               	goto	u675_25
 17328     0359  0820               	movf	i1___flmul@b,w
 17329     035A  00F0               	movwf	i1__Umul8_16@multiplicand
 17330     035B  0824               	movf	i1___flmul@a,w
 17331     035C  3191  21FE  3182   	fcall	i1__Umul8_16
 17332     035F  0871               	movf	?i1__Umul8_16+1,w
 17333     0360  00B9               	movwf	i1___flmul@temp+1
 17334     0361  0870               	movf	?i1__Umul8_16,w
 17335     0362  00B8               	movwf	i1___flmul@temp
 17336     0363  0838               	movf	i1___flmul@temp,w
 17337     0364  07AF               	addwf	i1___flmul@grs,f
 17338     0365  0839               	movf	i1___flmul@temp+1,w
 17339     0366  3DB0               	addwfc	i1___flmul@grs+1,f
 17340     0367  3000               	movlw	0
 17341     0368  3DB1               	addwfc	i1___flmul@grs+2,f
 17342     0369  3DB2               	addwfc	i1___flmul@grs+3,f
 17343     036A  0821               	movf	i1___flmul@b+1,w
 17344     036B  00F0               	movwf	i1__Umul8_16@multiplicand
 17345     036C  0826               	movf	i1___flmul@a+2,w
 17346     036D  3191  21FE  3182   	fcall	i1__Umul8_16
 17347     0370  0871               	movf	?i1__Umul8_16+1,w
 17348     0371  00B9               	movwf	i1___flmul@temp+1
 17349     0372  0870               	movf	?i1__Umul8_16,w
 17350     0373  00B8               	movwf	i1___flmul@temp
 17351     0374  0838               	movf	i1___flmul@temp,w
 17352     0375  07B4               	addwf	i1___flmul@prod,f
 17353     0376  0839               	movf	i1___flmul@temp+1,w
 17354     0377  3DB5               	addwfc	i1___flmul@prod+1,f
 17355     0378  3000               	movlw	0
 17356     0379  3DB6               	addwfc	i1___flmul@prod+2,f
 17357     037A  3DB7               	addwfc	i1___flmul@prod+3,f
 17358     037B  0822               	movf	i1___flmul@b+2,w
 17359     037C  00F0               	movwf	i1__Umul8_16@multiplicand
 17360     037D  0825               	movf	i1___flmul@a+1,w
 17361     037E  3191  21FE  3182   	fcall	i1__Umul8_16
 17362     0381  0871               	movf	?i1__Umul8_16+1,w
 17363     0382  00B9               	movwf	i1___flmul@temp+1
 17364     0383  0870               	movf	?i1__Umul8_16,w
 17365     0384  00B8               	movwf	i1___flmul@temp
 17366     0385  0838               	movf	i1___flmul@temp,w
 17367     0386  07B4               	addwf	i1___flmul@prod,f
 17368     0387  0839               	movf	i1___flmul@temp+1,w
 17369     0388  3DB5               	addwfc	i1___flmul@prod+1,f
 17370     0389  3000               	movlw	0
 17371     038A  3DB6               	addwfc	i1___flmul@prod+2,f
 17372     038B  3DB7               	addwfc	i1___flmul@prod+3,f
 17373     038C  0822               	movf	i1___flmul@b+2,w
 17374     038D  00F0               	movwf	i1__Umul8_16@multiplicand
 17375     038E  0826               	movf	i1___flmul@a+2,w
 17376     038F  3191  21FE  3182   	fcall	i1__Umul8_16
 17377     0392  0871               	movf	?i1__Umul8_16+1,w
 17378     0393  00B9               	movwf	i1___flmul@temp+1
 17379     0394  0870               	movf	?i1__Umul8_16,w
 17380     0395  00B8               	movwf	i1___flmul@temp
 17381     0396  0838               	movf	i1___flmul@temp,w
 17382     0397  00A8               	movwf	??i1___flmul
 17383     0398  0839               	movf	i1___flmul@temp+1,w
 17384     0399  00A9               	movwf	??i1___flmul+1
 17385     039A  01AA               	clrf	??i1___flmul+2
 17386     039B  01AB               	clrf	??i1___flmul+3
 17387     039C  3008               	movlw	8
 17388     039D                     u676_25:
 17389     039D  35A8               	lslf	??i1___flmul,f
 17390     039E  0DA9               	rlf	??i1___flmul+1,f
 17391     039F  0DAA               	rlf	??i1___flmul+2,f
 17392     03A0  0DAB               	rlf	??i1___flmul+3,f
 17393     03A1  0B89               	decfsz	9,f
 17394     03A2  2B9D               	goto	u676_25
 17395     03A3  0828               	movf	??i1___flmul,w
 17396     03A4  07B4               	addwf	i1___flmul@prod,f
 17397     03A5  0829               	movf	??i1___flmul+1,w
 17398     03A6  3DB5               	addwfc	i1___flmul@prod+1,f
 17399     03A7  082A               	movf	??i1___flmul+2,w
 17400     03A8  3DB6               	addwfc	i1___flmul@prod+2,f
 17401     03A9  082B               	movf	??i1___flmul+3,w
 17402     03AA  3DB7               	addwfc	i1___flmul@prod+3,f
 17403     03AB  0832               	movf	i1___flmul@grs+3,w
 17404     03AC  00A8               	movwf	??i1___flmul
 17405     03AD  01A9               	clrf	??i1___flmul+1
 17406     03AE  01AA               	clrf	??i1___flmul+2
 17407     03AF  01AB               	clrf	??i1___flmul+3
 17408     03B0  0828               	movf	??i1___flmul,w
 17409     03B1  07B4               	addwf	i1___flmul@prod,f
 17410     03B2  0829               	movf	??i1___flmul+1,w
 17411     03B3  3DB5               	addwfc	i1___flmul@prod+1,f
 17412     03B4  082A               	movf	??i1___flmul+2,w
 17413     03B5  3DB6               	addwfc	i1___flmul@prod+2,f
 17414     03B6  082B               	movf	??i1___flmul+3,w
 17415     03B7  3DB7               	addwfc	i1___flmul@prod+3,f
 17416     03B8  3008               	movlw	8
 17417     03B9                     u677_25:
 17418     03B9  35AF               	lslf	i1___flmul@grs,f
 17419     03BA  0DB0               	rlf	i1___flmul@grs+1,f
 17420     03BB  0DB1               	rlf	i1___flmul@grs+2,f
 17421     03BC  0DB2               	rlf	i1___flmul@grs+3,f
 17422     03BD  0B89               	decfsz	9,f
 17423     03BE  2BB9               	goto	u677_25
 17424     03BF  0833               	movf	i1___flmul@bexp,w
 17425     03C0  072E               	addwf	i1___flmul@aexp,w
 17426     03C1  00A8               	movwf	??i1___flmul
 17427     03C2  01A9               	clrf	??i1___flmul+1
 17428     03C3  0DA9               	rlf	??i1___flmul+1,f
 17429     03C4  0828               	movf	??i1___flmul,w
 17430     03C5  3E82               	addlw	130
 17431     03C6  00B8               	movwf	i1___flmul@temp
 17432     03C7  30FF               	movlw	255
 17433     03C8  3D29               	addwfc	??i1___flmul+1,w
 17434     03C9  00B9               	movwf	i1___flmul@temp+1
 17435     03CA                     i1l5379:
 17436     03CA  1BB6               	btfsc	i1___flmul@prod+2,7
 17437     03CB  2BE1               	goto	i1l5381
 17438     03CC  3001               	movlw	1
 17439     03CD                     u678_25:
 17440     03CD  35B4               	lslf	i1___flmul@prod,f
 17441     03CE  0DB5               	rlf	i1___flmul@prod+1,f
 17442     03CF  0DB6               	rlf	i1___flmul@prod+2,f
 17443     03D0  0DB7               	rlf	i1___flmul@prod+3,f
 17444     03D1  0B89               	decfsz	9,f
 17445     03D2  2BCD               	goto	u678_25
 17446     03D3  1BB2               	btfsc	i1___flmul@grs+3,7
 17447     03D4  1434               	bsf	i1___flmul@prod,0
 17448     03D5  3001               	movlw	1
 17449     03D6                     u680_25:
 17450     03D6  35AF               	lslf	i1___flmul@grs,f
 17451     03D7  0DB0               	rlf	i1___flmul@grs+1,f
 17452     03D8  0DB1               	rlf	i1___flmul@grs+2,f
 17453     03D9  0DB2               	rlf	i1___flmul@grs+3,f
 17454     03DA  0B89               	decfsz	9,f
 17455     03DB  2BD6               	goto	u680_25
 17456     03DC  30FF               	movlw	255
 17457     03DD  07B8               	addwf	i1___flmul@temp,f
 17458     03DE  30FF               	movlw	255
 17459     03DF  3DB9               	addwfc	i1___flmul@temp+1,f
 17460     03E0  2BCA               	goto	i1l5379
 17461     03E1                     i1l5381:
 17462     03E1  01AE               	clrf	i1___flmul@aexp
 17463     03E2  1FB2               	btfss	i1___flmul@grs+3,7
 17464     03E3  2BFA               	goto	i1l5391
 17465     03E4  30FF               	movlw	255
 17466     03E5  052F               	andwf	i1___flmul@grs,w
 17467     03E6  00A8               	movwf	??i1___flmul
 17468     03E7  30FF               	movlw	255
 17469     03E8  0530               	andwf	i1___flmul@grs+1,w
 17470     03E9  00A9               	movwf	??i1___flmul+1
 17471     03EA  30FF               	movlw	255
 17472     03EB  0531               	andwf	i1___flmul@grs+2,w
 17473     03EC  00AA               	movwf	??i1___flmul+2
 17474     03ED  307F               	movlw	127
 17475     03EE  0532               	andwf	i1___flmul@grs+3,w
 17476     03EF  00AB               	movwf	??i1___flmul+3
 17477     03F0  082B               	movf	??i1___flmul+3,w
 17478     03F1  042A               	iorwf	??i1___flmul+2,w
 17479     03F2  0429               	iorwf	??i1___flmul+1,w
 17480     03F3  0428               	iorwf	??i1___flmul,w
 17481     03F4  1903               	skipnz
 17482     03F5  1834               	btfsc	i1___flmul@prod,0
 17483     03F6  2BF8               	goto	i1l5387
 17484     03F7  2BFA               	goto	i1l5391
 17485     03F8                     i1l5387:
 17486     03F8  3001               	movlw	1
 17487     03F9  00AE               	movwf	i1___flmul@aexp
 17488     03FA                     i1l5391:
 17489     03FA  082E               	movf	i1___flmul@aexp,w
 17490     03FB  1903               	btfsc	3,2
 17491     03FC  2C21               	goto	i1l5401
 17492     03FD  3001               	movlw	1
 17493     03FE  07B4               	addwf	i1___flmul@prod,f
 17494     03FF  3000               	movlw	0
 17495     0400  3DB5               	addwfc	i1___flmul@prod+1,f
 17496     0401  3DB6               	addwfc	i1___flmul@prod+2,f
 17497     0402  3DB7               	addwfc	i1___flmul@prod+3,f
 17498     0403  1C37               	btfss	i1___flmul@prod+3,0
 17499     0404  2C21               	goto	i1l5401
 17500     0405  0834               	movf	i1___flmul@prod,w
 17501     0406  00A8               	movwf	??i1___flmul
 17502     0407  0835               	movf	i1___flmul@prod+1,w
 17503     0408  00A9               	movwf	??i1___flmul+1
 17504     0409  0836               	movf	i1___flmul@prod+2,w
 17505     040A  00AA               	movwf	??i1___flmul+2
 17506     040B  0837               	movf	i1___flmul@prod+3,w
 17507     040C  00AB               	movwf	??i1___flmul+3
 17508     040D  3001               	movlw	1
 17509     040E  00AC               	movwf	??i1___flmul+4
 17510     040F                     u687_25:
 17511     040F  37AB               	asrf	??i1___flmul+3,f
 17512     0410  0CAA               	rrf	??i1___flmul+2,f
 17513     0411  0CA9               	rrf	??i1___flmul+1,f
 17514     0412  0CA8               	rrf	??i1___flmul,f
 17515     0413  0BAC               	decfsz	??i1___flmul+4,f
 17516     0414  2C0F               	goto	u687_25
 17517     0415  082B               	movf	??i1___flmul+3,w
 17518     0416  00B7               	movwf	i1___flmul@prod+3
 17519     0417  082A               	movf	??i1___flmul+2,w
 17520     0418  00B6               	movwf	i1___flmul@prod+2
 17521     0419  0829               	movf	??i1___flmul+1,w
 17522     041A  00B5               	movwf	i1___flmul@prod+1
 17523     041B  0828               	movf	??i1___flmul,w
 17524     041C  00B4               	movwf	i1___flmul@prod
 17525     041D  3001               	movlw	1
 17526     041E  07B8               	addwf	i1___flmul@temp,f
 17527     041F  3000               	movlw	0
 17528     0420  3DB9               	addwfc	i1___flmul@temp+1,f
 17529     0421                     i1l5401:
 17530     0421  0839               	movf	i1___flmul@temp+1,w
 17531     0422  3A80               	xorlw	128
 17532     0423  00A8               	movwf	??i1___flmul
 17533     0424  3080               	movlw	128
 17534     0425  0228               	subwf	??i1___flmul,w
 17535     0426  1D03               	skipz
 17536     0427  2C2A               	goto	u688_25
 17537     0428  30FF               	movlw	255
 17538     0429  0238               	subwf	i1___flmul@temp,w
 17539     042A                     u688_25:
 17540     042A  1C03               	skipc
 17541     042B  2C36               	goto	i1l5405
 17542     042C  307F               	movlw	127
 17543     042D  0020               	movlb	0	; select bank0
 17544     042E  00B7               	movwf	i1___flmul@prod+3
 17545     042F  3080               	movlw	128
 17546     0430  00B6               	movwf	i1___flmul@prod+2
 17547     0431  3000               	movlw	0
 17548     0432  00B5               	movwf	i1___flmul@prod+1
 17549     0433  3000               	movlw	0
 17550     0434  00B4               	movwf	i1___flmul@prod
 17551     0435  2C62               	goto	i1l1590
 17552     0436                     i1l5405:
 17553     0436  0020               	movlb	0	; select bank0
 17554     0437  0839               	movf	i1___flmul@temp+1,w
 17555     0438  3A80               	xorlw	128
 17556     0439  00A8               	movwf	??i1___flmul
 17557     043A  3080               	movlw	128
 17558     043B  0228               	subwf	??i1___flmul,w
 17559     043C  1D03               	skipz
 17560     043D  2C40               	goto	u689_25
 17561     043E  3001               	movlw	1
 17562     043F  0238               	subwf	i1___flmul@temp,w
 17563     0440                     u689_25:
 17564     0440  1803               	skipnc
 17565     0441  2C4D               	goto	i1l5411
 17566     0442  3000               	movlw	0
 17567     0443  0020               	movlb	0	; select bank0
 17568     0444  00B7               	movwf	i1___flmul@prod+3
 17569     0445  3000               	movlw	0
 17570     0446  00B6               	movwf	i1___flmul@prod+2
 17571     0447  3000               	movlw	0
 17572     0448  00B5               	movwf	i1___flmul@prod+1
 17573     0449  3000               	movlw	0
 17574     044A  00B4               	movwf	i1___flmul@prod
 17575     044B  01AD               	clrf	i1___flmul@sign
 17576     044C  2C62               	goto	i1l1590
 17577     044D                     i1l5411:
 17578     044D  0020               	movlb	0	; select bank0
 17579     044E  0838               	movf	i1___flmul@temp,w
 17580     044F  00B3               	movwf	i1___flmul@bexp
 17581     0450  30FF               	movlw	255
 17582     0451  05B4               	andwf	i1___flmul@prod,f
 17583     0452  30FF               	movlw	255
 17584     0453  05B5               	andwf	i1___flmul@prod+1,f
 17585     0454  307F               	movlw	127
 17586     0455  05B6               	andwf	i1___flmul@prod+2,f
 17587     0456  3000               	movlw	0
 17588     0457  05B7               	andwf	i1___flmul@prod+3,f
 17589     0458  1833               	btfsc	i1___flmul@bexp,0
 17590     0459  17B6               	bsf	i1___flmul@prod+2,7
 17591     045A  0833               	movf	i1___flmul@bexp,w
 17592     045B  00A8               	movwf	??i1___flmul
 17593     045C  3001               	movlw	1
 17594     045D                     u691_25:
 17595     045D  36A8               	lsrf	??i1___flmul,f
 17596     045E  0B89               	decfsz	9,f
 17597     045F  2C5D               	goto	u691_25
 17598     0460  0828               	movf	??i1___flmul,w
 17599     0461  00B7               	movwf	i1___flmul@prod+3
 17600     0462                     i1l1590:
 17601     0462  082D               	movf	i1___flmul@sign,w
 17602     0463  04B7               	iorwf	i1___flmul@prod+3,f
 17603     0464  0837               	movf	i1___flmul@prod+3,w
 17604     0465  00A3               	movwf	?i1___flmul+3
 17605     0466  0836               	movf	i1___flmul@prod+2,w
 17606     0467  00A2               	movwf	?i1___flmul+2
 17607     0468  0835               	movf	i1___flmul@prod+1,w
 17608     0469  00A1               	movwf	?i1___flmul+1
 17609     046A  0834               	movf	i1___flmul@prod,w
 17610     046B  00A0               	movwf	?i1___flmul
 17611     046C  0008               	return
 17612     046D                     __end_ofi1___flmul:
 17613                           
 17614                           	psect	text81
 17615     11FE                     __ptext81:	
 17616 ;; *************** function i1__Umul8_16 *****************
 17617 ;; Defined at:
 17618 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 17619 ;; Parameters:    Size  Location     Type
 17620 ;;  multiplier      1    wreg     unsigned char 
 17621 ;;  multiplicand    1    0[COMMON] unsigned char 
 17622 ;; Auto vars:     Size  Location     Type
 17623 ;;  multiplier      1    8[COMMON] unsigned char 
 17624 ;;  word_mpld       2    6[COMMON] unsigned short 
 17625 ;;  product         2    4[COMMON] unsigned short 
 17626 ;; Return value:  Size  Location     Type
 17627 ;;                  2    0[COMMON] unsigned int 
 17628 ;; Registers used:
 17629 ;;		wreg, status,2, status,0
 17630 ;; Tracked objects:
 17631 ;;		On entry : 1F/0
 17632 ;;		On exit  : 1F/0
 17633 ;;		Unchanged: 1F/0
 17634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17636 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17638 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17639 ;;Total ram usage:        9 bytes
 17640 ;; Hardware stack levels used: 1
 17641 ;; This function calls:
 17642 ;;		Nothing
 17643 ;; This function is called by:
 17644 ;;		i1___flmul
 17645 ;; This function uses a non-reentrant model
 17646 ;;
 17647                           
 17648     11FE                     i1__Umul8_16:	
 17649                           ;psect for function i1__Umul8_16
 17650                           
 17651                           
 17652                           ;incstack = 0
 17653                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 17654                           ;i1__Umul8_16@multiplier stored from wreg
 17655     11FE  00F8               	movwf	i1__Umul8_16@multiplier
 17656     11FF  01F4               	clrf	i1__Umul8_16@product
 17657     1200  01F5               	clrf	i1__Umul8_16@product+1
 17658     1201  0870               	movf	i1__Umul8_16@multiplicand,w
 17659     1202  00F2               	movwf	??i1__Umul8_16
 17660     1203  01F3               	clrf	??i1__Umul8_16+1
 17661     1204  0872               	movf	??i1__Umul8_16,w
 17662     1205  00F6               	movwf	i1__Umul8_16@word_mpld
 17663     1206  0873               	movf	??i1__Umul8_16+1,w
 17664     1207  00F7               	movwf	i1__Umul8_16@word_mpld+1
 17665     1208                     i1l4771:
 17666     1208  1C78               	btfss	i1__Umul8_16@multiplier,0
 17667     1209  2A0E               	goto	i1l1597
 17668     120A  0876               	movf	i1__Umul8_16@word_mpld,w
 17669     120B  07F4               	addwf	i1__Umul8_16@product,f
 17670     120C  0877               	movf	i1__Umul8_16@word_mpld+1,w
 17671     120D  3DF5               	addwfc	i1__Umul8_16@product+1,f
 17672     120E                     i1l1597:
 17673     120E  3001               	movlw	1
 17674     120F                     u560_25:
 17675     120F  35F6               	lslf	i1__Umul8_16@word_mpld,f
 17676     1210  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 17677     1211  0B89               	decfsz	9,f
 17678     1212  2A0F               	goto	u560_25
 17679     1213  1003               	clrc
 17680     1214  0CF8               	rrf	i1__Umul8_16@multiplier,f
 17681     1215  0878               	movf	i1__Umul8_16@multiplier,w
 17682     1216  1D03               	btfss	3,2
 17683     1217  2A08               	goto	i1l4771
 17684     1218  0875               	movf	i1__Umul8_16@product+1,w
 17685     1219  00F1               	movwf	?i1__Umul8_16+1
 17686     121A  0874               	movf	i1__Umul8_16@product,w
 17687     121B  00F0               	movwf	?i1__Umul8_16
 17688     121C  0008               	return
 17689     121D                     __end_ofi1__Umul8_16:
 17690                           
 17691                           	psect	text82
 17692     0623                     __ptext82:	
 17693 ;; *************** function i1___fladd *****************
 17694 ;; Defined at:
 17695 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 17696 ;; Parameters:    Size  Location     Type
 17697 ;;  b               4   26[BANK0 ] unsigned int 
 17698 ;;  a               4   30[BANK0 ] unsigned int 
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;  grs             1   45[BANK0 ] unsigned char 
 17701 ;;  bexp            1   44[BANK0 ] unsigned char 
 17702 ;;  aexp            1   43[BANK0 ] unsigned char 
 17703 ;;  signs           1   42[BANK0 ] unsigned char 
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  4   26[BANK0 ] unsigned char 
 17706 ;; Registers used:
 17707 ;;		wreg, status,2, status,0
 17708 ;; Tracked objects:
 17709 ;;		On entry : 1F/0
 17710 ;;		On exit  : 1F/0
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17713 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17714 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17715 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17716 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17717 ;;Total ram usage:       20 bytes
 17718 ;; Hardware stack levels used: 1
 17719 ;; This function calls:
 17720 ;;		Nothing
 17721 ;; This function is called by:
 17722 ;;		_controller
 17723 ;; This function uses a non-reentrant model
 17724 ;;
 17725                           
 17726     0623                     i1___fladd:	
 17727                           ;psect for function i1___fladd
 17728                           
 17729                           
 17730                           ;incstack = 0
 17731                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 17732     0623  083D               	movf	i1___fladd@b+3,w
 17733     0624  3980               	andlw	128
 17734     0625  00CA               	movwf	i1___fladd@signs
 17735     0626  353D               	lslf	i1___fladd@b+3,w
 17736     0627  00CC               	movwf	i1___fladd@bexp
 17737     0628  1BBC               	btfsc	i1___fladd@b+2,7
 17738     0629  144C               	bsf	i1___fladd@bexp,0
 17739     062A  084C               	movf	i1___fladd@bexp,w
 17740     062B  1903               	btfsc	3,2
 17741     062C  2E3B               	goto	i1l5105
 17742     062D  0A4C               	incf	i1___fladd@bexp,w
 17743     062E  1D03               	btfss	3,2
 17744     062F  2E38               	goto	i1l5101
 17745     0630  3000               	movlw	0
 17746     0631  00BD               	movwf	i1___fladd@b+3
 17747     0632  3000               	movlw	0
 17748     0633  00BC               	movwf	i1___fladd@b+2
 17749     0634  3000               	movlw	0
 17750     0635  00BB               	movwf	i1___fladd@b+1
 17751     0636  3000               	movlw	0
 17752     0637  00BA               	movwf	i1___fladd@b
 17753     0638                     i1l5101:
 17754     0638  17BC               	bsf	i1___fladd@b+2,7
 17755     0639  01BD               	clrf	i1___fladd@b+3
 17756     063A  2E43               	goto	i1l5107
 17757     063B                     i1l5105:
 17758     063B  3000               	movlw	0
 17759     063C  00BD               	movwf	i1___fladd@b+3
 17760     063D  3000               	movlw	0
 17761     063E  00BC               	movwf	i1___fladd@b+2
 17762     063F  3000               	movlw	0
 17763     0640  00BB               	movwf	i1___fladd@b+1
 17764     0641  3000               	movlw	0
 17765     0642  00BA               	movwf	i1___fladd@b
 17766     0643                     i1l5107:
 17767     0643  0841               	movf	i1___fladd@a+3,w
 17768     0644  3980               	andlw	128
 17769     0645  00CB               	movwf	i1___fladd@aexp
 17770     0646  084B               	movf	i1___fladd@aexp,w
 17771     0647  064A               	xorwf	i1___fladd@signs,w
 17772     0648  1D03               	btfss	3,2
 17773     0649  174A               	bsf	i1___fladd@signs,6
 17774     064A  3541               	lslf	i1___fladd@a+3,w
 17775     064B  00CB               	movwf	i1___fladd@aexp
 17776     064C  1BC0               	btfsc	i1___fladd@a+2,7
 17777     064D  144B               	bsf	i1___fladd@aexp,0
 17778     064E  084B               	movf	i1___fladd@aexp,w
 17779     064F  1903               	btfsc	3,2
 17780     0650  2E5F               	goto	i1l5129
 17781     0651  0A4B               	incf	i1___fladd@aexp,w
 17782     0652  1D03               	btfss	3,2
 17783     0653  2E5C               	goto	i1l5125
 17784     0654  3000               	movlw	0
 17785     0655  00C1               	movwf	i1___fladd@a+3
 17786     0656  3000               	movlw	0
 17787     0657  00C0               	movwf	i1___fladd@a+2
 17788     0658  3000               	movlw	0
 17789     0659  00BF               	movwf	i1___fladd@a+1
 17790     065A  3000               	movlw	0
 17791     065B  00BE               	movwf	i1___fladd@a
 17792     065C                     i1l5125:
 17793     065C  17C0               	bsf	i1___fladd@a+2,7
 17794     065D  01C1               	clrf	i1___fladd@a+3
 17795     065E  2E67               	goto	i1l1482
 17796     065F                     i1l5129:
 17797     065F  3000               	movlw	0
 17798     0660  00C1               	movwf	i1___fladd@a+3
 17799     0661  3000               	movlw	0
 17800     0662  00C0               	movwf	i1___fladd@a+2
 17801     0663  3000               	movlw	0
 17802     0664  00BF               	movwf	i1___fladd@a+1
 17803     0665  3000               	movlw	0
 17804     0666  00BE               	movwf	i1___fladd@a
 17805     0667                     i1l1482:
 17806     0667  084C               	movf	i1___fladd@bexp,w
 17807     0668  024B               	subwf	i1___fladd@aexp,w
 17808     0669  1803               	skipnc
 17809     066A  2E8D               	goto	i1l5165
 17810     066B  1F4A               	btfss	i1___fladd@signs,6
 17811     066C  2E6F               	goto	i1l5135
 17812     066D  3080               	movlw	128
 17813     066E  06CA               	xorwf	i1___fladd@signs,f
 17814     066F                     i1l5135:
 17815     066F  084C               	movf	i1___fladd@bexp,w
 17816     0670  00CD               	movwf	i1___fladd@grs
 17817     0671  084B               	movf	i1___fladd@aexp,w
 17818     0672  00CC               	movwf	i1___fladd@bexp
 17819     0673  084D               	movf	i1___fladd@grs,w
 17820     0674  00CB               	movwf	i1___fladd@aexp
 17821     0675  083A               	movf	i1___fladd@b,w
 17822     0676  00CD               	movwf	i1___fladd@grs
 17823     0677  083E               	movf	i1___fladd@a,w
 17824     0678  00BA               	movwf	i1___fladd@b
 17825     0679  084D               	movf	i1___fladd@grs,w
 17826     067A  00BE               	movwf	i1___fladd@a
 17827     067B  083B               	movf	i1___fladd@b+1,w
 17828     067C  00CD               	movwf	i1___fladd@grs
 17829     067D  083F               	movf	i1___fladd@a+1,w
 17830     067E  00BB               	movwf	i1___fladd@b+1
 17831     067F  084D               	movf	i1___fladd@grs,w
 17832     0680  00BF               	movwf	i1___fladd@a+1
 17833     0681  083C               	movf	i1___fladd@b+2,w
 17834     0682  00CD               	movwf	i1___fladd@grs
 17835     0683  0840               	movf	i1___fladd@a+2,w
 17836     0684  00BC               	movwf	i1___fladd@b+2
 17837     0685  084D               	movf	i1___fladd@grs,w
 17838     0686  00C0               	movwf	i1___fladd@a+2
 17839     0687  083D               	movf	i1___fladd@b+3,w
 17840     0688  00CD               	movwf	i1___fladd@grs
 17841     0689  0841               	movf	i1___fladd@a+3,w
 17842     068A  00BD               	movwf	i1___fladd@b+3
 17843     068B  084D               	movf	i1___fladd@grs,w
 17844     068C  00C1               	movwf	i1___fladd@a+3
 17845     068D                     i1l5165:
 17846     068D  01CD               	clrf	i1___fladd@grs
 17847     068E  084B               	movf	i1___fladd@aexp,w
 17848     068F  00C2               	movwf	??i1___fladd
 17849     0690  01C3               	clrf	??i1___fladd+1
 17850     0691  0843               	movf	??i1___fladd+1,w
 17851     0692  00C5               	movwf	??i1___fladd+3
 17852     0693  084C               	movf	i1___fladd@bexp,w
 17853     0694  0242               	subwf	??i1___fladd,w
 17854     0695  00C4               	movwf	??i1___fladd+2
 17855     0696  1C03               	skipc
 17856     0697  03C5               	decf	??i1___fladd+3,f
 17857     0698  0845               	movf	??i1___fladd+3,w
 17858     0699  3A80               	xorlw	128
 17859     069A  00C6               	movwf	??i1___fladd+4
 17860     069B  3080               	movlw	128
 17861     069C  0246               	subwf	??i1___fladd+4,w
 17862     069D  1D03               	skipz
 17863     069E  2EA1               	goto	u629_25
 17864     069F  301A               	movlw	26
 17865     06A0  0244               	subwf	??i1___fladd+2,w
 17866     06A1                     u629_25:
 17867     06A1  1C03               	skipc
 17868     06A2  2ED3               	goto	i1l5183
 17869     06A3  0020               	movlb	0	; select bank0
 17870     06A4  083D               	movf	i1___fladd@b+3,w
 17871     06A5  043C               	iorwf	i1___fladd@b+2,w
 17872     06A6  043B               	iorwf	i1___fladd@b+1,w
 17873     06A7  043A               	iorwf	i1___fladd@b,w
 17874     06A8  1903               	btfsc	3,2
 17875     06A9  2EAC               	goto	u630_20
 17876     06AA  3001               	movlw	1
 17877     06AB  2EAD               	goto	u631_20
 17878     06AC                     u630_20:
 17879     06AC  3000               	movlw	0
 17880     06AD                     u631_20:
 17881     06AD  00CD               	movwf	i1___fladd@grs
 17882     06AE  3000               	movlw	0
 17883     06AF  00BD               	movwf	i1___fladd@b+3
 17884     06B0  3000               	movlw	0
 17885     06B1  00BC               	movwf	i1___fladd@b+2
 17886     06B2  3000               	movlw	0
 17887     06B3  00BB               	movwf	i1___fladd@b+1
 17888     06B4  3000               	movlw	0
 17889     06B5  00BA               	movwf	i1___fladd@b
 17890     06B6  084B               	movf	i1___fladd@aexp,w
 17891     06B7  00CC               	movwf	i1___fladd@bexp
 17892     06B8  2ED8               	goto	i1l1486
 17893     06B9                     i1l1488:
 17894     06B9  1C4D               	btfss	i1___fladd@grs,0
 17895     06BA  2EC5               	goto	i1l5173
 17896     06BB  084D               	movf	i1___fladd@grs,w
 17897     06BC  00C2               	movwf	??i1___fladd
 17898     06BD  3001               	movlw	1
 17899     06BE                     u633_25:
 17900     06BE  36C2               	lsrf	??i1___fladd,f
 17901     06BF  0B89               	decfsz	9,f
 17902     06C0  2EBE               	goto	u633_25
 17903     06C1  0842               	movf	??i1___fladd,w
 17904     06C2  3801               	iorlw	1
 17905     06C3  00CD               	movwf	i1___fladd@grs
 17906     06C4  2EC7               	goto	i1l5175
 17907     06C5                     i1l5173:
 17908     06C5  1003               	clrc
 17909     06C6  0CCD               	rrf	i1___fladd@grs,f
 17910     06C7                     i1l5175:
 17911     06C7  183A               	btfsc	i1___fladd@b,0
 17912     06C8  17CD               	bsf	i1___fladd@grs,7
 17913     06C9  3001               	movlw	1
 17914     06CA  00C2               	movwf	??i1___fladd
 17915     06CB                     u635_25:
 17916     06CB  37BD               	asrf	i1___fladd@b+3,f
 17917     06CC  0CBC               	rrf	i1___fladd@b+2,f
 17918     06CD  0CBB               	rrf	i1___fladd@b+1,f
 17919     06CE  0CBA               	rrf	i1___fladd@b,f
 17920     06CF  0BC2               	decfsz	??i1___fladd& (0+127),f
 17921     06D0  2ECB               	goto	u635_25
 17922     06D1  3001               	movlw	1
 17923     06D2  07CC               	addwf	i1___fladd@bexp,f
 17924     06D3                     i1l5183:
 17925     06D3  0020               	movlb	0	; select bank0
 17926     06D4  084B               	movf	i1___fladd@aexp,w
 17927     06D5  024C               	subwf	i1___fladd@bexp,w
 17928     06D6  1C03               	skipc
 17929     06D7  2EB9               	goto	i1l1488
 17930     06D8                     i1l1486:
 17931     06D8  1B4A               	btfsc	i1___fladd@signs,6
 17932     06D9  2F0B               	goto	i1l5209
 17933     06DA  084C               	movf	i1___fladd@bexp,w
 17934     06DB  1D03               	btfss	3,2
 17935     06DC  2EE6               	goto	i1l5191
 17936     06DD  3000               	movlw	0
 17937     06DE  00BD               	movwf	?i1___fladd+3
 17938     06DF  3000               	movlw	0
 17939     06E0  00BC               	movwf	?i1___fladd+2
 17940     06E1  3000               	movlw	0
 17941     06E2  00BB               	movwf	?i1___fladd+1
 17942     06E3  3000               	movlw	0
 17943     06E4  00BA               	movwf	?i1___fladd
 17944     06E5  0008               	return
 17945     06E6                     i1l5191:
 17946     06E6  083E               	movf	i1___fladd@a,w
 17947     06E7  07BA               	addwf	i1___fladd@b,f
 17948     06E8  083F               	movf	i1___fladd@a+1,w
 17949     06E9  3DBB               	addwfc	i1___fladd@b+1,f
 17950     06EA  0840               	movf	i1___fladd@a+2,w
 17951     06EB  3DBC               	addwfc	i1___fladd@b+2,f
 17952     06EC  0841               	movf	i1___fladd@a+3,w
 17953     06ED  3DBD               	addwfc	i1___fladd@b+3,f
 17954     06EE  1C3D               	btfss	i1___fladd@b+3,0
 17955     06EF  2F84               	goto	i1l5245
 17956     06F0  1C4D               	btfss	i1___fladd@grs,0
 17957     06F1  2EFC               	goto	i1l5199
 17958     06F2  084D               	movf	i1___fladd@grs,w
 17959     06F3  00C2               	movwf	??i1___fladd
 17960     06F4  3001               	movlw	1
 17961     06F5                     u641_25:
 17962     06F5  36C2               	lsrf	??i1___fladd,f
 17963     06F6  0B89               	decfsz	9,f
 17964     06F7  2EF5               	goto	u641_25
 17965     06F8  0842               	movf	??i1___fladd,w
 17966     06F9  3801               	iorlw	1
 17967     06FA  00CD               	movwf	i1___fladd@grs
 17968     06FB  2EFE               	goto	i1l5201
 17969     06FC                     i1l5199:
 17970     06FC  1003               	clrc
 17971     06FD  0CCD               	rrf	i1___fladd@grs,f
 17972     06FE                     i1l5201:
 17973     06FE  183A               	btfsc	i1___fladd@b,0
 17974     06FF  17CD               	bsf	i1___fladd@grs,7
 17975     0700  3001               	movlw	1
 17976     0701  00C2               	movwf	??i1___fladd
 17977     0702                     u643_25:
 17978     0702  37BD               	asrf	i1___fladd@b+3,f
 17979     0703  0CBC               	rrf	i1___fladd@b+2,f
 17980     0704  0CBB               	rrf	i1___fladd@b+1,f
 17981     0705  0CBA               	rrf	i1___fladd@b,f
 17982     0706  0BC2               	decfsz	??i1___fladd& (0+127),f
 17983     0707  2F02               	goto	u643_25
 17984     0708  3001               	movlw	1
 17985     0709  07CC               	addwf	i1___fladd@bexp,f
 17986     070A  2F84               	goto	i1l5245
 17987     070B                     i1l5209:
 17988     070B  083D               	movf	i1___fladd@b+3,w
 17989     070C  3A80               	xorlw	128
 17990     070D  00C2               	movwf	??i1___fladd
 17991     070E  0841               	movf	i1___fladd@a+3,w
 17992     070F  3A80               	xorlw	128
 17993     0710  0242               	subwf	??i1___fladd,w
 17994     0711  1D03               	skipz
 17995     0712  2F1D               	goto	u644_23
 17996     0713  0840               	movf	i1___fladd@a+2,w
 17997     0714  023C               	subwf	i1___fladd@b+2,w
 17998     0715  1D03               	skipz
 17999     0716  2F1D               	goto	u644_23
 18000     0717  083F               	movf	i1___fladd@a+1,w
 18001     0718  023B               	subwf	i1___fladd@b+1,w
 18002     0719  1D03               	skipz
 18003     071A  2F1D               	goto	u644_23
 18004     071B  083E               	movf	i1___fladd@a,w
 18005     071C  023A               	subwf	i1___fladd@b,w
 18006     071D                     u644_23:
 18007     071D  1803               	skipnc
 18008     071E  2F52               	goto	i1l5221
 18009     071F  30FF               	movlw	255
 18010     0720  00C2               	movwf	??i1___fladd
 18011     0721  30FF               	movlw	255
 18012     0722  00C3               	movwf	??i1___fladd+1
 18013     0723  30FF               	movlw	255
 18014     0724  00C4               	movwf	??i1___fladd+2
 18015     0725  30FF               	movlw	255
 18016     0726  00C5               	movwf	??i1___fladd+3
 18017     0727  083A               	movf	i1___fladd@b,w
 18018     0728  023E               	subwf	i1___fladd@a,w
 18019     0729  00C6               	movwf	??i1___fladd+4
 18020     072A  083B               	movf	i1___fladd@b+1,w
 18021     072B  3B3F               	subwfb	i1___fladd@a+1,w
 18022     072C  00C7               	movwf	??i1___fladd+5
 18023     072D  083C               	movf	i1___fladd@b+2,w
 18024     072E  3B40               	subwfb	i1___fladd@a+2,w
 18025     072F  00C8               	movwf	??i1___fladd+6
 18026     0730  083D               	movf	i1___fladd@b+3,w
 18027     0731  3B41               	subwfb	i1___fladd@a+3,w
 18028     0732  00C9               	movwf	??i1___fladd+7
 18029     0733  0846               	movf	??i1___fladd+4,w
 18030     0734  07C2               	addwf	??i1___fladd,f
 18031     0735  0847               	movf	??i1___fladd+5,w
 18032     0736  3DC3               	addwfc	??i1___fladd+1,f
 18033     0737  0848               	movf	??i1___fladd+6,w
 18034     0738  3DC4               	addwfc	??i1___fladd+2,f
 18035     0739  0849               	movf	??i1___fladd+7,w
 18036     073A  3DC5               	addwfc	??i1___fladd+3,f
 18037     073B  0845               	movf	??i1___fladd+3,w
 18038     073C  00BD               	movwf	i1___fladd@b+3
 18039     073D  0844               	movf	??i1___fladd+2,w
 18040     073E  00BC               	movwf	i1___fladd@b+2
 18041     073F  0843               	movf	??i1___fladd+1,w
 18042     0740  00BB               	movwf	i1___fladd@b+1
 18043     0741  0842               	movf	??i1___fladd,w
 18044     0742  00BA               	movwf	i1___fladd@b
 18045     0743  3080               	movlw	128
 18046     0744  06CA               	xorwf	i1___fladd@signs,f
 18047     0745  034D               	decf	i1___fladd@grs,w
 18048     0746  3AFF               	xorlw	255
 18049     0747  00CD               	movwf	i1___fladd@grs
 18050     0748  084D               	movf	i1___fladd@grs,w
 18051     0749  1D03               	btfss	3,2
 18052     074A  2F5A               	goto	i1l1503
 18053     074B  3001               	movlw	1
 18054     074C  07BA               	addwf	i1___fladd@b,f
 18055     074D  3000               	movlw	0
 18056     074E  3DBB               	addwfc	i1___fladd@b+1,f
 18057     074F  3DBC               	addwfc	i1___fladd@b+2,f
 18058     0750  3DBD               	addwfc	i1___fladd@b+3,f
 18059     0751  2F5A               	goto	i1l1503
 18060     0752                     i1l5221:
 18061     0752  083E               	movf	i1___fladd@a,w
 18062     0753  02BA               	subwf	i1___fladd@b,f
 18063     0754  083F               	movf	i1___fladd@a+1,w
 18064     0755  3BBB               	subwfb	i1___fladd@b+1,f
 18065     0756  0840               	movf	i1___fladd@a+2,w
 18066     0757  3BBC               	subwfb	i1___fladd@b+2,f
 18067     0758  0841               	movf	i1___fladd@a+3,w
 18068     0759  3BBD               	subwfb	i1___fladd@b+3,f
 18069     075A                     i1l1503:
 18070     075A  083D               	movf	i1___fladd@b+3,w
 18071     075B  043C               	iorwf	i1___fladd@b+2,w
 18072     075C  043B               	iorwf	i1___fladd@b+1,w
 18073     075D  043A               	iorwf	i1___fladd@b,w
 18074     075E  1D03               	skipz
 18075     075F  2F82               	goto	i1l5243
 18076     0760  084D               	movf	i1___fladd@grs,w
 18077     0761  1D03               	btfss	3,2
 18078     0762  2F82               	goto	i1l5243
 18079     0763  3000               	movlw	0
 18080     0764  00BD               	movwf	?i1___fladd+3
 18081     0765  3000               	movlw	0
 18082     0766  00BC               	movwf	?i1___fladd+2
 18083     0767  3000               	movlw	0
 18084     0768  00BB               	movwf	?i1___fladd+1
 18085     0769  3000               	movlw	0
 18086     076A  00BA               	movwf	?i1___fladd
 18087     076B  0008               	return
 18088     076C                     i1l5229:
 18089     076C  3001               	movlw	1
 18090     076D                     u648_25:
 18091     076D  35BA               	lslf	i1___fladd@b,f
 18092     076E  0DBB               	rlf	i1___fladd@b+1,f
 18093     076F  0DBC               	rlf	i1___fladd@b+2,f
 18094     0770  0DBD               	rlf	i1___fladd@b+3,f
 18095     0771  0B89               	decfsz	9,f
 18096     0772  2F6D               	goto	u648_25
 18097     0773  1BCD               	btfsc	i1___fladd@grs,7
 18098     0774  143A               	bsf	i1___fladd@b,0
 18099     0775  1C4D               	btfss	i1___fladd@grs,0
 18100     0776  2F7B               	goto	i1l5237
 18101     0777  1403               	setc
 18102     0778  0D4D               	rlf	i1___fladd@grs,w
 18103     0779  00CD               	movwf	i1___fladd@grs
 18104     077A  2F7D               	goto	i1l5239
 18105     077B                     i1l5237:
 18106     077B  1003               	clrc
 18107     077C  0DCD               	rlf	i1___fladd@grs,f
 18108     077D                     i1l5239:
 18109     077D  084C               	movf	i1___fladd@bexp,w
 18110     077E  1903               	btfsc	3,2
 18111     077F  2F82               	goto	i1l5243
 18112     0780  3001               	movlw	1
 18113     0781  02CC               	subwf	i1___fladd@bexp,f
 18114     0782                     i1l5243:
 18115     0782  1FBC               	btfss	i1___fladd@b+2,7
 18116     0783  2F6C               	goto	i1l5229
 18117     0784                     i1l5245:
 18118     0784  01CB               	clrf	i1___fladd@aexp
 18119     0785  1FCD               	btfss	i1___fladd@grs,7
 18120     0786  2F8F               	goto	i1l5255
 18121     0787  084D               	movf	i1___fladd@grs,w
 18122     0788  397F               	andlw	127
 18123     0789  1903               	btfsc	3,2
 18124     078A  183A               	btfsc	i1___fladd@b,0
 18125     078B  2F8D               	goto	i1l5251
 18126     078C  2F8F               	goto	i1l5255
 18127     078D                     i1l5251:
 18128     078D  3001               	movlw	1
 18129     078E  00CB               	movwf	i1___fladd@aexp
 18130     078F                     i1l5255:
 18131     078F  084B               	movf	i1___fladd@aexp,w
 18132     0790  1903               	btfsc	3,2
 18133     0791  2FB7               	goto	i1l1516
 18134     0792  3001               	movlw	1
 18135     0793  07BA               	addwf	i1___fladd@b,f
 18136     0794  3000               	movlw	0
 18137     0795  3DBB               	addwfc	i1___fladd@b+1,f
 18138     0796  3DBC               	addwfc	i1___fladd@b+2,f
 18139     0797  3DBD               	addwfc	i1___fladd@b+3,f
 18140     0798  1C3D               	btfss	i1___fladd@b+3,0
 18141     0799  2FB7               	goto	i1l1516
 18142     079A  083A               	movf	i1___fladd@b,w
 18143     079B  00C2               	movwf	??i1___fladd
 18144     079C  083B               	movf	i1___fladd@b+1,w
 18145     079D  00C3               	movwf	??i1___fladd+1
 18146     079E  083C               	movf	i1___fladd@b+2,w
 18147     079F  00C4               	movwf	??i1___fladd+2
 18148     07A0  083D               	movf	i1___fladd@b+3,w
 18149     07A1  00C5               	movwf	??i1___fladd+3
 18150     07A2  3001               	movlw	1
 18151     07A3  00C6               	movwf	??i1___fladd+4
 18152     07A4                     u658_25:
 18153     07A4  37C5               	asrf	??i1___fladd+3,f
 18154     07A5  0CC4               	rrf	??i1___fladd+2,f
 18155     07A6  0CC3               	rrf	??i1___fladd+1,f
 18156     07A7  0CC2               	rrf	??i1___fladd,f
 18157     07A8  0BC6               	decfsz	??i1___fladd+4,f
 18158     07A9  2FA4               	goto	u658_25
 18159     07AA  0845               	movf	??i1___fladd+3,w
 18160     07AB  00BD               	movwf	i1___fladd@b+3
 18161     07AC  0844               	movf	??i1___fladd+2,w
 18162     07AD  00BC               	movwf	i1___fladd@b+2
 18163     07AE  0843               	movf	??i1___fladd+1,w
 18164     07AF  00BB               	movwf	i1___fladd@b+1
 18165     07B0  0842               	movf	??i1___fladd,w
 18166     07B1  00BA               	movwf	i1___fladd@b
 18167     07B2  0A4C               	incf	i1___fladd@bexp,w
 18168     07B3  1903               	btfsc	3,2
 18169     07B4  2FB7               	goto	i1l1516
 18170     07B5  3001               	movlw	1
 18171     07B6  07CC               	addwf	i1___fladd@bexp,f
 18172     07B7                     i1l1516:
 18173     07B7  0A4C               	incf	i1___fladd@bexp,w
 18174     07B8  1D03               	btfss	3,2
 18175     07B9  084C               	movf	i1___fladd@bexp,w
 18176     07BA  1D03               	btfss	3,2
 18177     07BB  2FC7               	goto	i1l5273
 18178     07BC  3000               	movlw	0
 18179     07BD  00BD               	movwf	i1___fladd@b+3
 18180     07BE  3000               	movlw	0
 18181     07BF  00BC               	movwf	i1___fladd@b+2
 18182     07C0  3000               	movlw	0
 18183     07C1  00BB               	movwf	i1___fladd@b+1
 18184     07C2  3000               	movlw	0
 18185     07C3  00BA               	movwf	i1___fladd@b
 18186     07C4  084C               	movf	i1___fladd@bexp,w
 18187     07C5  1903               	btfsc	3,2
 18188     07C6  01CA               	clrf	i1___fladd@signs
 18189     07C7                     i1l5273:
 18190     07C7  1C4C               	btfss	i1___fladd@bexp,0
 18191     07C8  2FCB               	goto	i1l5277
 18192     07C9  17BC               	bsf	i1___fladd@b+2,7
 18193     07CA  2FCD               	goto	i1l1524
 18194     07CB                     i1l5277:
 18195     07CB  307F               	movlw	127
 18196     07CC  05BC               	andwf	i1___fladd@b+2,f
 18197     07CD                     i1l1524:
 18198     07CD  084C               	movf	i1___fladd@bexp,w
 18199     07CE  00C2               	movwf	??i1___fladd
 18200     07CF  3001               	movlw	1
 18201     07D0                     u664_25:
 18202     07D0  36C2               	lsrf	??i1___fladd,f
 18203     07D1  0B89               	decfsz	9,f
 18204     07D2  2FD0               	goto	u664_25
 18205     07D3  0842               	movf	??i1___fladd,w
 18206     07D4  00BD               	movwf	i1___fladd@b+3
 18207     07D5  1FCA               	btfss	i1___fladd@signs,7
 18208     07D6  0008               	return
 18209     07D7  17BD               	bsf	i1___fladd@b+3,7
 18210     07D8  0008               	return
 18211     07D9                     __end_ofi1___fladd:
 18212                           
 18213                           	psect	text83
 18214     10FA                     __ptext83:	
 18215 ;; *************** function _pwm_fan_LoadDutyValue *****************
 18216 ;; Defined at:
 18217 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm5.c"
 18218 ;; Parameters:    Size  Location     Type
 18219 ;;  dutyValue       2    0[COMMON] unsigned short 
 18220 ;; Auto vars:     Size  Location     Type
 18221 ;;		None
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  1    wreg      void 
 18224 ;; Registers used:
 18225 ;;		wreg, status,2, status,0
 18226 ;; Tracked objects:
 18227 ;;		On entry : 1F/0
 18228 ;;		On exit  : 1F/C
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18234 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18235 ;;Total ram usage:        4 bytes
 18236 ;; Hardware stack levels used: 1
 18237 ;; This function calls:
 18238 ;;		Nothing
 18239 ;; This function is called by:
 18240 ;;		_controller
 18241 ;; This function uses a non-reentrant model
 18242 ;;
 18243                           
 18244     10FA                     _pwm_fan_LoadDutyValue:	
 18245                           ;psect for function _pwm_fan_LoadDutyValue
 18246                           
 18247                           
 18248                           ;mcc_generated_files/pwm/src/pwm5.c: 63:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 64:  {;mcc_generated_files/pwm/src/pwm5.c: 66:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 18249                           
 18250                           ;incstack = 0
 18251                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 18252     10FA  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 18253     10FB  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 18254     10FC  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 18255     10FD  00F2               	movwf	??_pwm_fan_LoadDutyValue
 18256     10FE  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 18257     10FF  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 18258     1100  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 18259     1101  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 18260     1102  0872               	movf	??_pwm_fan_LoadDutyValue,w
 18261     1103  002C               	movlb	12	; select bank12
 18262     1104  0098               	movwf	24	;volatile
 18263                           
 18264                           ;mcc_generated_files/pwm/src/pwm5.c: 69:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 18265     1105  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 18266     1106  3903               	andlw	3
 18267     1107  00F2               	movwf	??_pwm_fan_LoadDutyValue
 18268     1108  3006               	movlw	6
 18269     1109                     u562_25:
 18270     1109  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 18271     110A  0B89               	decfsz	9,f
 18272     110B  2909               	goto	u562_25
 18273     110C  0872               	movf	??_pwm_fan_LoadDutyValue,w
 18274     110D  0097               	movwf	23	;volatile
 18275     110E  0008               	return
 18276     110F                     __end_of_pwm_fan_LoadDutyValue:
 18277                           
 18278                           	psect	text84
 18279     1045                     __ptext84:	
 18280 ;; *************** function _TMR2_ISR *****************
 18281 ;; Defined at:
 18282 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 18283 ;; Parameters:    Size  Location     Type
 18284 ;;		None
 18285 ;; Auto vars:     Size  Location     Type
 18286 ;;		None
 18287 ;; Return value:  Size  Location     Type
 18288 ;;                  1    wreg      void 
 18289 ;; Registers used:
 18290 ;;		wreg, status,2, status,0, pclath, cstack
 18291 ;; Tracked objects:
 18292 ;;		On entry : 1F/0
 18293 ;;		On exit  : 1F/0
 18294 ;;		Unchanged: 0/0
 18295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18300 ;;Total ram usage:        0 bytes
 18301 ;; Hardware stack levels used: 1
 18302 ;; Hardware stack levels required when called: 1
 18303 ;; This function calls:
 18304 ;;		NULL
 18305 ;;		_TMR2_DefaultPeriodMatchCallback
 18306 ;; This function is called by:
 18307 ;;		_INTERRUPT_InterruptManager
 18308 ;; This function uses a non-reentrant model
 18309 ;;
 18310                           
 18311     1045                     _TMR2_ISR:	
 18312                           ;psect for function _TMR2_ISR
 18313                           
 18314                           
 18315                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 18316                           
 18317                           ;incstack = 0
 18318                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 18319     1045  0022               	movlb	2	; select bank2
 18320     1046  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 18321     1047  0463               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 18322     1048  1903               	btfsc	3,2
 18323     1049  284F               	goto	i1l5817
 18324                           
 18325                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 18326     104A  0863               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 18327     104B  008A               	movwf	10
 18328     104C  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 18329     104D  000A               	callw
 18330     104E  3190               	pagesel	$
 18331     104F                     i1l5817:
 18332                           
 18333                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 18334     104F  0020               	movlb	0	; select bank0
 18335     1050  1091               	bcf	17,1	;volatile
 18336     1051  0008               	return
 18337     1052                     __end_of_TMR2_ISR:
 18338                           
 18339                           	psect	text85
 18340     0800                     __ptext85:	
 18341 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 18342 ;; Defined at:
 18343 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 18344 ;; Parameters:    Size  Location     Type
 18345 ;;		None
 18346 ;; Auto vars:     Size  Location     Type
 18347 ;;		None
 18348 ;; Return value:  Size  Location     Type
 18349 ;;                  1    wreg      void 
 18350 ;; Registers used:
 18351 ;;		None
 18352 ;; Tracked objects:
 18353 ;;		On entry : 1F/2
 18354 ;;		On exit  : 1F/2
 18355 ;;		Unchanged: 1F/0
 18356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18361 ;;Total ram usage:        0 bytes
 18362 ;; Hardware stack levels used: 1
 18363 ;; This function calls:
 18364 ;;		Nothing
 18365 ;; This function is called by:
 18366 ;;		_TMR2_Initialize
 18367 ;;		_TMR2_ISR
 18368 ;; This function uses a non-reentrant model
 18369 ;;
 18370                           
 18371     0800                     _TMR2_DefaultPeriodMatchCallback:	
 18372                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 18373                           
 18374                           
 18375                           ;incstack = 0
 18376                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 18377     0800  0008               	return
 18378     0801                     __end_of_TMR2_DefaultPeriodMatchCallback:
 18379                           
 18380                           	psect	text86
 18381     1155                     __ptext86:	
 18382 ;; *************** function _EUSART_TransmitISR *****************
 18383 ;; Defined at:
 18384 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;		None
 18387 ;; Auto vars:     Size  Location     Type
 18388 ;;  tempTxTail      1    0[COMMON] unsigned char 
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  1    wreg      void 
 18391 ;; Registers used:
 18392 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18393 ;; Tracked objects:
 18394 ;;		On entry : 1F/2
 18395 ;;		On exit  : 1E/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;Total ram usage:        1 bytes
 18403 ;; Hardware stack levels used: 1
 18404 ;; This function calls:
 18405 ;;		Nothing
 18406 ;; This function is called by:
 18407 ;;		_EUSART_Initialize
 18408 ;;		_INTERRUPT_InterruptManager
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412     1155                     _EUSART_TransmitISR:	
 18413                           ;psect for function _EUSART_TransmitISR
 18414                           
 18415                           
 18416                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 18417                           
 18418                           ;incstack = 0
 18419                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18420     1155  3008               	movlw	8
 18421     1156  0020               	movlb	0	; select bank0
 18422     1157  0269               	subwf	_eusartTxBufferRemaining,w
 18423     1158  1803               	skipnc
 18424     1159  296C               	goto	i1l727
 18425                           
 18426                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 18427     115A  086A               	movf	_eusartTxTail,w
 18428     115B  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18429     115C  0086               	movwf	6
 18430     115D  3001               	movlw	1	; select bank2/3
 18431     115E  0087               	movwf	7
 18432     115F  0801               	movf	1,w
 18433     1160  0023               	movlb	3	; select bank3
 18434     1161  009A               	movwf	26	;volatile
 18435                           
 18436                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 18437     1162  0020               	movlb	0	; select bank0
 18438     1163  086A               	movf	_eusartTxTail,w	;volatile
 18439     1164  3E01               	addlw	1
 18440     1165  3907               	andlw	7
 18441     1166  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 18442                           
 18443                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 18444     1167  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 18445     1168  00EA               	movwf	_eusartTxTail	;volatile
 18446                           
 18447                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 18448     1169  3001               	movlw	1
 18449     116A  07E9               	addwf	_eusartTxBufferRemaining,f	;volatile
 18450                           
 18451                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 18452     116B  0008               	return
 18453     116C                     i1l727:	
 18454                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 18455                           
 18456                           
 18457                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 18458     116C  0021               	movlb	1	; select bank1
 18459     116D  1211               	bcf	17,4	;volatile
 18460     116E  0008               	return
 18461     116F                     __end_of_EUSART_TransmitISR:
 18462                           
 18463                           	psect	text87
 18464     13DE                     __ptext87:	
 18465 ;; *************** function _EUSART_ReceiveISR *****************
 18466 ;; Defined at:
 18467 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;		None
 18470 ;; Auto vars:     Size  Location     Type
 18471 ;;  tempRxHead      1    1[COMMON] unsigned char 
 18472 ;;  regValue        1    0[COMMON] unsigned char 
 18473 ;; Return value:  Size  Location     Type
 18474 ;;                  1    wreg      void 
 18475 ;; Registers used:
 18476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18477 ;; Tracked objects:
 18478 ;;		On entry : 1F/3
 18479 ;;		On exit  : 1F/0
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18486 ;;Total ram usage:        2 bytes
 18487 ;; Hardware stack levels used: 1
 18488 ;; Hardware stack levels required when called: 1
 18489 ;; This function calls:
 18490 ;;		NULL
 18491 ;;		_EUSART_DefaultFramingErrorCallback
 18492 ;;		_EUSART_DefaultOverrunErrorCallback
 18493 ;; This function is called by:
 18494 ;;		_EUSART_Initialize
 18495 ;;		_INTERRUPT_InterruptManager
 18496 ;; This function uses a non-reentrant model
 18497 ;;
 18498                           
 18499     13DE                     _EUSART_ReceiveISR:	
 18500                           ;psect for function _EUSART_ReceiveISR
 18501                           
 18502                           
 18503                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 18504                           
 18505                           ;incstack = 0
 18506                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18507     13DE  0020               	movlb	0	; select bank0
 18508     13DF  3568               	lslf	_eusartRxHead,w	;volatile
 18509     13E0  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 18510     13E1  0086               	movwf	6
 18511     13E2  3001               	movlw	1	; select bank2/3
 18512     13E3  0087               	movwf	7
 18513     13E4  3000               	movlw	0
 18514     13E5  3FC0               	movwi [0]fsr1
 18515     13E6  3FC1               	movwi [1]fsr1
 18516                           
 18517                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 18518     13E7  0023               	movlb	3	; select bank3
 18519     13E8  1C9D               	btfss	29,1	;volatile
 18520     13E9  2BFA               	goto	i1l5855
 18521                           
 18522                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 18523     13EA  0020               	movlb	0	; select bank0
 18524     13EB  3568               	lslf	_eusartRxHead,w	;volatile
 18525     13EC  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 18526     13ED  0086               	movwf	6
 18527     13EE  3001               	movlw	1	; select bank2/3
 18528     13EF  0087               	movwf	7
 18529     13F0  1501               	bsf	1,2
 18530                           
 18531                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 18532     13F1  085D               	movf	_EUSART_OverrunErrorHandler,w
 18533     13F2  045E               	iorwf	_EUSART_OverrunErrorHandler+1,w
 18534     13F3  1903               	btfsc	3,2
 18535     13F4  2BFA               	goto	i1l5855
 18536                           
 18537                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 18538     13F5  085E               	movf	_EUSART_OverrunErrorHandler+1,w
 18539     13F6  008A               	movwf	10
 18540     13F7  085D               	movf	_EUSART_OverrunErrorHandler,w
 18541     13F8  000A               	callw
 18542     13F9  3193               	pagesel	$
 18543     13FA                     i1l5855:
 18544                           
 18545                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 18546     13FA  0023               	movlb	3	; select bank3
 18547     13FB  1D1D               	btfss	29,2	;volatile
 18548     13FC  2C0D               	goto	i1l5863
 18549                           
 18550                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 18551     13FD  0020               	movlb	0	; select bank0
 18552     13FE  3568               	lslf	_eusartRxHead,w	;volatile
 18553     13FF  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 18554     1400  0086               	movwf	6
 18555     1401  3001               	movlw	1	; select bank2/3
 18556     1402  0087               	movwf	7
 18557     1403  1481               	bsf	1,1
 18558                           
 18559                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 18560     1404  085F               	movf	_EUSART_FramingErrorHandler,w
 18561     1405  0460               	iorwf	_EUSART_FramingErrorHandler+1,w
 18562     1406  1903               	btfsc	3,2
 18563     1407  2C0D               	goto	i1l5863
 18564                           
 18565                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 18566     1408  0860               	movf	_EUSART_FramingErrorHandler+1,w
 18567     1409  008A               	movwf	10
 18568     140A  085F               	movf	_EUSART_FramingErrorHandler,w
 18569     140B  000A               	callw
 18570     140C  3193               	pagesel	$
 18571     140D                     i1l5863:
 18572                           
 18573                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 18574     140D  0023               	movlb	3	; select bank3
 18575     140E  0819               	movf	25,w	;volatile
 18576     140F  00F0               	movwf	EUSART_ReceiveISR@regValue
 18577                           
 18578                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 18579     1410  0020               	movlb	0	; select bank0
 18580     1411  0868               	movf	_eusartRxHead,w	;volatile
 18581     1412  3E01               	addlw	1
 18582     1413  3907               	andlw	7
 18583     1414  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 18584                           
 18585                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 18586     1415  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 18587     1416  0667               	xorwf	_eusartRxTail,w	;volatile
 18588     1417  1903               	btfsc	3,2
 18589     1418  0008               	return
 18590                           
 18591                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 18592     1419  0868               	movf	_eusartRxHead,w
 18593     141A  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 18594     141B  0086               	movwf	6
 18595     141C  3001               	movlw	1	; select bank2/3
 18596     141D  0087               	movwf	7
 18597     141E  0870               	movf	EUSART_ReceiveISR@regValue,w
 18598     141F  0081               	movwf	1
 18599                           
 18600                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 18601     1420  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 18602     1421  00E8               	movwf	_eusartRxHead	;volatile
 18603                           
 18604                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 18605     1422  3001               	movlw	1
 18606     1423  07E6               	addwf	_eusartRxCount,f	;volatile
 18607     1424  0008               	return
 18608     1425                     __end_of_EUSART_ReceiveISR:
 18609                           
 18610                           	psect	text88
 18611     1F38                     __ptext88:	
 18612 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 18613 ;; Defined at:
 18614 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 18615 ;; Parameters:    Size  Location     Type
 18616 ;;		None
 18617 ;; Auto vars:     Size  Location     Type
 18618 ;;		None
 18619 ;; Return value:  Size  Location     Type
 18620 ;;                  1    wreg      void 
 18621 ;; Registers used:
 18622 ;;		None
 18623 ;; Tracked objects:
 18624 ;;		On entry : 1F/0
 18625 ;;		On exit  : 1F/3
 18626 ;;		Unchanged: 0/0
 18627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18632 ;;Total ram usage:        0 bytes
 18633 ;; Hardware stack levels used: 1
 18634 ;; This function calls:
 18635 ;;		Nothing
 18636 ;; This function is called by:
 18637 ;;		_EUSART_Initialize
 18638 ;;		_EUSART_ReceiveISR
 18639 ;; This function uses a non-reentrant model
 18640 ;;
 18641                           
 18642     1F38                     _EUSART_DefaultOverrunErrorCallback:	
 18643                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 18644                           
 18645                           
 18646                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 18647                           
 18648                           ;incstack = 0
 18649                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 18650     1F38  0023               	movlb	3	; select bank3
 18651     1F39  121D               	bcf	29,4	;volatile
 18652                           
 18653                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 18654     1F3A  161D               	bsf	29,4	;volatile
 18655     1F3B  0008               	return
 18656     1F3C                     __end_of_EUSART_DefaultOverrunErrorCallback:
 18657                           
 18658                           	psect	text89
 18659     1F34                     __ptext89:	
 18660 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 18661 ;; Defined at:
 18662 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 18663 ;; Parameters:    Size  Location     Type
 18664 ;;		None
 18665 ;; Auto vars:     Size  Location     Type
 18666 ;;		None
 18667 ;; Return value:  Size  Location     Type
 18668 ;;                  1    wreg      void 
 18669 ;; Registers used:
 18670 ;;		None
 18671 ;; Tracked objects:
 18672 ;;		On entry : 1F/0
 18673 ;;		On exit  : 1F/0
 18674 ;;		Unchanged: 1F/0
 18675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18680 ;;Total ram usage:        0 bytes
 18681 ;; Hardware stack levels used: 1
 18682 ;; This function calls:
 18683 ;;		Nothing
 18684 ;; This function is called by:
 18685 ;;		_EUSART_Initialize
 18686 ;;		_EUSART_ReceiveISR
 18687 ;; This function uses a non-reentrant model
 18688 ;;
 18689                           
 18690     1F34                     _EUSART_DefaultFramingErrorCallback:	
 18691                           ;psect for function _EUSART_DefaultFramingErrorCallback
 18692                           
 18693                           
 18694                           ;incstack = 0
 18695                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 18696     1F34  0008               	return
 18697     1F35                     __end_of_EUSART_DefaultFramingErrorCallback:
 18698                           
 18699                           	psect	text90
 18700     1009                     __ptext90:	
 18701 ;; *************** function _ADC_ISR *****************
 18702 ;; Defined at:
 18703 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 18704 ;; Parameters:    Size  Location     Type
 18705 ;;		None
 18706 ;; Auto vars:     Size  Location     Type
 18707 ;;		None
 18708 ;; Return value:  Size  Location     Type
 18709 ;;                  1    wreg      void 
 18710 ;; Registers used:
 18711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18712 ;; Tracked objects:
 18713 ;;		On entry : 1F/0
 18714 ;;		On exit  : 0/0
 18715 ;;		Unchanged: 0/0
 18716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18721 ;;Total ram usage:        0 bytes
 18722 ;; Hardware stack levels used: 1
 18723 ;; Hardware stack levels required when called: 2
 18724 ;; This function calls:
 18725 ;;		NULL
 18726 ;;		_ADC_DefaultInterruptHandler
 18727 ;;		_adcConversionDoneHandler
 18728 ;; This function is called by:
 18729 ;;		_INTERRUPT_InterruptManager
 18730 ;; This function uses a non-reentrant model
 18731 ;;
 18732                           
 18733     1009                     _ADC_ISR:	
 18734                           ;psect for function _ADC_ISR
 18735                           
 18736                           
 18737                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 18738                           
 18739                           ;incstack = 0
 18740                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18741     1009  1311               	bcf	17,6	;volatile
 18742                           
 18743                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 18744     100A  0022               	movlb	2	; select bank2
 18745     100B  0866               	movf	_ADC_InterruptHandler^(0+256),w
 18746     100C  0467               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 18747     100D  1903               	btfsc	3,2
 18748     100E  0008               	return
 18749                           
 18750                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 18751     100F  0867               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 18752     1010  008A               	movwf	10
 18753     1011  0866               	movf	_ADC_InterruptHandler^(0+256),w
 18754     1012  000A               	callw
 18755     1013  3190               	pagesel	$
 18756     1014  0008               	return
 18757     1015                     __end_of_ADC_ISR:
 18758                           
 18759                           	psect	text91
 18760     1F33                     __ptext91:	
 18761 ;; *************** function _ADC_DefaultInterruptHandler *****************
 18762 ;; Defined at:
 18763 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 18764 ;; Parameters:    Size  Location     Type
 18765 ;;		None
 18766 ;; Auto vars:     Size  Location     Type
 18767 ;;		None
 18768 ;; Return value:  Size  Location     Type
 18769 ;;                  1    wreg      void 
 18770 ;; Registers used:
 18771 ;;		None
 18772 ;; Tracked objects:
 18773 ;;		On entry : 1F/2
 18774 ;;		On exit  : 1F/2
 18775 ;;		Unchanged: 1F/0
 18776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18781 ;;Total ram usage:        0 bytes
 18782 ;; Hardware stack levels used: 1
 18783 ;; This function calls:
 18784 ;;		Nothing
 18785 ;; This function is called by:
 18786 ;;		_ADC_Initialize
 18787 ;;		_ADC_ISR
 18788 ;; This function uses a non-reentrant model
 18789 ;;
 18790                           
 18791     1F33                     _ADC_DefaultInterruptHandler:	
 18792                           ;psect for function _ADC_DefaultInterruptHandler
 18793                           
 18794                           
 18795                           ;incstack = 0
 18796                           ; Regs used in _ADC_DefaultInterruptHandler: []
 18797     1F33  0008               	return
 18798     1F34                     __end_of_ADC_DefaultInterruptHandler:
 18799                           
 18800                           	psect	text92
 18801     1286                     __ptext92:	
 18802 ;; *************** function _adcConversionDoneHandler *****************
 18803 ;; Defined at:
 18804 ;;		line 5 in file "adcMeasurements.c"
 18805 ;; Parameters:    Size  Location     Type
 18806 ;;		None
 18807 ;; Auto vars:     Size  Location     Type
 18808 ;;		None
 18809 ;; Return value:  Size  Location     Type
 18810 ;;                  1    wreg      void 
 18811 ;; Registers used:
 18812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18813 ;; Tracked objects:
 18814 ;;		On entry : 1F/2
 18815 ;;		On exit  : 1F/1
 18816 ;;		Unchanged: 0/0
 18817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18822 ;;Total ram usage:        2 bytes
 18823 ;; Hardware stack levels used: 1
 18824 ;; Hardware stack levels required when called: 1
 18825 ;; This function calls:
 18826 ;;		_ADC_GetConversionResult
 18827 ;;		i1_ADC_SelectChannel
 18828 ;; This function is called by:
 18829 ;;		_initAdcMultiplexer
 18830 ;;		_ADC_ISR
 18831 ;; This function uses a non-reentrant model
 18832 ;;
 18833                           
 18834     1286                     _adcConversionDoneHandler:	
 18835                           ;psect for function _adcConversionDoneHandler
 18836                           
 18837                           
 18838                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 18839                           
 18840                           ;incstack = 0
 18841                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18842     1286  2A9C               	goto	i1l5633
 18843     1287                     i1l5623:
 18844                           
 18845                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 18846     1287  319F  273C  3192   	fcall	_ADC_GetConversionResult
 18847     128A  0871               	movf	?_ADC_GetConversionResult+1,w
 18848     128B  0020               	movlb	0	; select bank0
 18849     128C  00DC               	movwf	_ADC_potentiometer+1	;volatile
 18850     128D  0870               	movf	?_ADC_GetConversionResult,w
 18851     128E  00DB               	movwf	_ADC_potentiometer	;volatile
 18852                           
 18853                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 18854     128F  3012               	movlw	18
 18855     1290  2A9A               	goto	L5
 18856     1291                     i1l5627:	
 18857                           ;adcMeasurements.c: 15:             break;
 18858                           
 18859                           
 18860                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 18861     1291  319F  273C  3192   	fcall	_ADC_GetConversionResult
 18862     1294  0871               	movf	?_ADC_GetConversionResult+1,w
 18863     1295  0020               	movlb	0	; select bank0
 18864     1296  00DA               	movwf	_ADC_hoogtesensor+1	;volatile
 18865     1297  0870               	movf	?_ADC_GetConversionResult,w
 18866     1298  00D9               	movwf	_ADC_hoogtesensor	;volatile
 18867                           
 18868                           ;adcMeasurements.c: 18:             new_channel = potentiometer;
 18869     1299  3010               	movlw	16
 18870     129A                     L5:
 18871     129A  00EF               	movwf	adcConversionDoneHandler@new_channel
 18872                           
 18873                           ;adcMeasurements.c: 19:             break;
 18874     129B  2AAD               	goto	i1l5635
 18875     129C                     i1l5633:
 18876     129C  0020               	movlb	0	; select bank0
 18877     129D  086F               	movf	adcConversionDoneHandler@new_channel,w
 18878     129E  00F2               	movwf	??_adcConversionDoneHandler
 18879     129F  01F3               	clrf	??_adcConversionDoneHandler+1
 18880                           
 18881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18882                           ; Switch size 1, requested type "simple"
 18883                           ; Number of cases is 1, Range of values is 0 to 0
 18884                           ; switch strategies available:
 18885                           ; Name         Instructions Cycles
 18886                           ; simple_byte            4     3 (average)
 18887                           ; direct_byte            8     6 (fixed)
 18888                           ; jumptable            260     6 (fixed)
 18889                           ;	Chosen strategy is simple_byte
 18890     12A0  0873               	movf	??_adcConversionDoneHandler+1,w
 18891     12A1  3A00               	xorlw	0	; case 0
 18892     12A2  1903               	skipnz
 18893     12A3  2AA5               	goto	i1l6013
 18894     12A4  2AAD               	goto	i1l5635
 18895     12A5                     i1l6013:
 18896                           
 18897                           ; Switch size 1, requested type "simple"
 18898                           ; Number of cases is 2, Range of values is 16 to 18
 18899                           ; switch strategies available:
 18900                           ; Name         Instructions Cycles
 18901                           ; simple_byte            7     4 (average)
 18902                           ; direct_byte           15     9 (fixed)
 18903                           ; jumptable            263     9 (fixed)
 18904                           ;	Chosen strategy is simple_byte
 18905     12A5  0872               	movf	??_adcConversionDoneHandler,w
 18906     12A6  3A10               	xorlw	16	; case 16
 18907     12A7  1903               	skipnz
 18908     12A8  2A87               	goto	i1l5623
 18909     12A9  3A02               	xorlw	2	; case 18
 18910     12AA  1903               	skipnz
 18911     12AB  2A91               	goto	i1l5627
 18912     12AC  2AAD               	goto	i1l5635
 18913     12AD                     i1l5635:
 18914                           
 18915                           ;adcMeasurements.c: 21:     ADC_SelectChannel(new_channel);
 18916     12AD  086F               	movf	adcConversionDoneHandler@new_channel,w
 18917     12AE  319F  27F4         	fcall	i1_ADC_SelectChannel
 18918     12B0  0008               	return
 18919     12B1                     __end_of_adcConversionDoneHandler:
 18920                           
 18921                           	psect	text93
 18922     1FF4                     __ptext93:	
 18923 ;; *************** function i1_ADC_SelectChannel *****************
 18924 ;; Defined at:
 18925 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;  channel         1    wreg     enum E6663
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;  channel         1    1[COMMON] enum E6663
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  1    wreg      void 
 18932 ;; Registers used:
 18933 ;;		wreg, status,2, status,0
 18934 ;; Tracked objects:
 18935 ;;		On entry : 1F/0
 18936 ;;		On exit  : 1F/1
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18943 ;;Total ram usage:        2 bytes
 18944 ;; Hardware stack levels used: 1
 18945 ;; This function calls:
 18946 ;;		Nothing
 18947 ;; This function is called by:
 18948 ;;		_adcConversionDoneHandler
 18949 ;; This function uses a non-reentrant model
 18950 ;;
 18951                           
 18952     1FF4                     i1_ADC_SelectChannel:	
 18953                           ;psect for function i1_ADC_SelectChannel
 18954                           
 18955                           
 18956                           ;incstack = 0
 18957                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 18958                           ;i1ADC_SelectChannel@channel stored from wreg
 18959     1FF4  00F1               	movwf	i1ADC_SelectChannel@channel
 18960                           
 18961                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 18962     1FF5  0871               	movf	i1ADC_SelectChannel@channel,w
 18963     1FF6  00F0               	movwf	??i1_ADC_SelectChannel
 18964     1FF7  0DF0               	rlf	??i1_ADC_SelectChannel,f
 18965     1FF8  0DF0               	rlf	??i1_ADC_SelectChannel,f
 18966     1FF9  0021               	movlb	1	; select bank1
 18967     1FFA  081D               	movf	29,w	;volatile
 18968     1FFB  0670               	xorwf	??i1_ADC_SelectChannel,w
 18969     1FFC  3903               	andlw	-253
 18970     1FFD  0670               	xorwf	??i1_ADC_SelectChannel,w
 18971     1FFE  009D               	movwf	29	;volatile
 18972     1FFF  0008               	return
 18973     2000                     __end_ofi1_ADC_SelectChannel:
 18974                           
 18975                           	psect	text94
 18976     1F3C                     __ptext94:	
 18977 ;; *************** function _ADC_GetConversionResult *****************
 18978 ;; Defined at:
 18979 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 18980 ;; Parameters:    Size  Location     Type
 18981 ;;		None
 18982 ;; Auto vars:     Size  Location     Type
 18983 ;;		None
 18984 ;; Return value:  Size  Location     Type
 18985 ;;                  2    0[COMMON] unsigned short 
 18986 ;; Registers used:
 18987 ;;		wreg
 18988 ;; Tracked objects:
 18989 ;;		On entry : 1D/0
 18990 ;;		On exit  : 1F/1
 18991 ;;		Unchanged: 0/0
 18992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18997 ;;Total ram usage:        2 bytes
 18998 ;; Hardware stack levels used: 1
 18999 ;; This function calls:
 19000 ;;		Nothing
 19001 ;; This function is called by:
 19002 ;;		_adcConversionDoneHandler
 19003 ;; This function uses a non-reentrant model
 19004 ;;
 19005                           
 19006     1F3C                     _ADC_GetConversionResult:	
 19007                           ;psect for function _ADC_GetConversionResult
 19008                           
 19009                           
 19010                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 19011                           
 19012                           ;incstack = 0
 19013                           ; Regs used in _ADC_GetConversionResult: [wreg]
 19014     1F3C  0021               	movlb	1	; select bank1
 19015     1F3D  081C               	movf	28,w	;volatile
 19016     1F3E  00F1               	movwf	?_ADC_GetConversionResult+1
 19017     1F3F  081B               	movf	27,w	;volatile
 19018     1F40  00F0               	movwf	?_ADC_GetConversionResult
 19019     1F41  0008               	return
 19020     1F42                     __end_of_ADC_GetConversionResult:
 19021     0002                     ___latbits      equ	2
 19022     007E                     btemp           set	126	;btemp
 19023     007E                     int$flags       set	126
 19024     007E                     wtemp0          set	126
 19025                           
 19026                           	psect	config
 19027                           
 19028                           ;Config register CONFIG1 @ 0x8007
 19029                           ;	FEXTOSC External Oscillator mode Selection bits
 19030                           ;	FEXTOSC = OFF, Oscillator not enabled
 19031                           ;	Power-up default value for COSC bits
 19032                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 19033                           ;	Clock Out Enable bit
 19034                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 19035                           ;	Clock Switch Enable bit
 19036                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19037                           ;	Fail-Safe Clock Monitor Enable
 19038                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 19039     8007                     	org	32775
 19040     8007  3F8C               	dw	16268
 19041                           
 19042                           ;Config register CONFIG2 @ 0x8008
 19043                           ;	Master Clear Enable bit
 19044                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 19045                           ;	Power-up Timer Enable bit
 19046                           ;	PWRTE = OFF, PWRT disabled
 19047                           ;	Watchdog Timer Enable bits
 19048                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 19049                           ;	Low-power BOR enable bit
 19050                           ;	LPBOREN = OFF, ULPBOR disabled
 19051                           ;	Brown-out Reset Enable bits
 19052                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 19053                           ;	Brown-out Reset Voltage selection bit
 19054                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 19055                           ;	PPSLOCK bit One-Way Set Enable bit
 19056                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 19057                           ;	Stack Overflow/Underflow Reset Enable bit
 19058                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 19059                           ;	Debugger enable bit
 19060                           ;	DEBUG = 0x1, unprogrammed default
 19061     8008                     	org	32776
 19062     8008  3FF3               	dw	16371
 19063                           
 19064                           ;Config register CONFIG3 @ 0x8009
 19065                           ;	User NVM self-write protection bits
 19066                           ;	WRT = OFF, Write protection off
 19067                           ;	Low Voltage Programming Enable bit
 19068                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 19069     8009                     	org	32777
 19070     8009  3FFF               	dw	16383
 19071                           
 19072                           ;Config register CONFIG4 @ 0x800A
 19073                           ;	User NVM Program Memory Code Protection bit
 19074                           ;	CP = OFF, User NVM code protection disabled
 19075                           ;	Data NVM Memory Code Protection bit
 19076                           ;	CPD = OFF, Data NVM code protection disabled
 19077     800A                     	org	32778
 19078     800A  3FFF               	dw	16383

Data Sizes:
    Strings     172
    Constant    86
    Data        12
    BSS         121
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      80
    BANK1            80     80      80
    BANK2            80     16      80
    BANK3            80      0      54
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2063$buffer	PTR unsigned char  size(2) Largest target is 0

    S2063$source	PTR const unsigned char  size(2) Largest target is 0

    S223$4$0	PTR void  size(2) Largest target is 0

    S223$5$0	PTR void  size(2) Largest target is 0

    S223$6$0	PTR void  size(2) Largest target is 0

    S223SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S223SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S223SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S223SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S223SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S223SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S223SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S223SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S223SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S223SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S223SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S223SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S223SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S223SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$17$0	PTR FTN()void  size(2) Largest target is 0

    S975$18$0	PTR FTN()void  size(2) Largest target is 0

    S975$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S975$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S975$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S975$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S975$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S975$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S975$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S975$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S975$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S975$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S975$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S975$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S975$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S975$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S975$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S975$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S975$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S975$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S975$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fltol->i1___flmul
    i1___fladd->i1___flmul

Critical Paths under _main in BANK1

    _uartHandler->_str2float
    _str2float->___flmul
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _printLogs->_printFloat
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    ___flsub->___fladd
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _position_led_strip->_getLedNumber
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _getLedNumber->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _uartHandler->_setKi
    _uartHandler->_setKp
    _printLogs->_printFloat
    _updateLedstripAnimation->_position_led_strip
    _position_led_strip->_getLedNumber

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   35403
                                             12 BANK2      4     4      0
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                   _getPotentiometer
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   15813
                                              4 BANK2      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5364
                                             68 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      23
                                             13 BANK1      2     0      2
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    4991
                                             71 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     334
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0   14222
                       _getDutycycle
                    _getHoogtesensor
                              _getKi
                              _getKp
                        _getSetpoint
                         _printFloat
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printFloat                                           9     5      4    9278
                                             78 BANK1      2     2      0
                                              0 BANK2      7     3      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _getKi (ARG)
                              _getKp (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    4944
                                             64 BANK1      7     1      6
                               _atoi (ARG)
                       _getDutycycle (ARG)
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    4873
                                             56 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    12      4    4737
                                             41 BANK1     15    11      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1520
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     164
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   8     6      2     286
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2022
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5     944
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     430
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     329
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2037
                                             34 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getKp                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getKi                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDutycycle                                         2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     225
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     202
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     104
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _getPotentiometer                                     2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0    4863
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0    4863
                 _position_led_strip
 ---------------------------------------------------------------------------------
 (3) _position_led_strip                                   8     8      0    4863
                                              4 BANK2      8     8      0
                    _getHoogtesensor
                       _getLedNumber
                        _getSetpoint
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     150
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getSetpoint                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _getLedNumber                                         6     4      2    4220
                                             78 BANK1      2     0      2
                                              0 BANK2      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     232
                                             68 BANK1     10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1612
                                             42 BANK1     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1990
                                             14 BANK1     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getHoogtesensor                                      2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4467
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4347
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4347
                                             46 BANK0      7     7      0
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                  i1_getHoogtesensor
 ---------------------------------------------------------------------------------
 (15) i1_getHoogtesensor                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___fltol                                          10     6      4     231
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1612
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _position_led_strip
         _getHoogtesensor
         _getLedNumber
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
             ___flsub (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _getHoogtesensor (ARG)
           _getSetpoint (ARG)
         _getSetpoint
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   _getPotentiometer
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getDutycycle
     _getHoogtesensor
     _getKi
     _getKp
     _getSetpoint
     _printFloat
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _getKi (ARG)
       _getKp (ARG)
       _printf (ARG)
         _atoi (ARG)
           ___wmul
         _getDutycycle (ARG)
         _getHoogtesensor (ARG)
         _getSetpoint (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_IsTxReady
                     _EUSART_Write
                 _fputs
                   _fputc
             _fputc
             _read_prec_or_width
               ___wmul
             _utoa
               ___lwdiv
               ___lwmod
               _pad
     _printf
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
       _atoi (ARG)
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___fltol
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl
       i1_getHoogtesensor

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      80    100.0%
BANK1               80     80      80    100.0%
BANK2               80     16      80    100.0%
BANK3               80      0      54     67.5%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     308      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 19 14:23:03 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0003                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 0002  
                                 _SPI1_ByteExchange 1FD4                          __end_of_pwm_fan_Initialize 1039  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5         __end_of_EUSART_OverrunErrorCallbackRegister 102D  
             ??_EUSART_OverrunErrorCallbackRegister 00A2                ?_EUSART_OverrunErrorCallbackRegister 00A0  
               _EUSART_OverrunErrorCallbackRegister 1021                                         i1___flmul@a 0024  
                                                _ki 0168                                         i1___flmul@b 0020  
                                                _kp 016C                                 ___wmul@multiplicand 00A2  
                               __Umul8_16@word_mpld 00A6                                          i1___xxtofl 08FF  
                                               l160 1FD7                                                 l721 07F9  
                                               l920 0BF1                                                 l892 14BE  
                                               l878 0A80                                                 _PR2 001E  
                                               _PR4 0416                                                 _PR6 041D  
                                               _abs 1087                                                 _pad 1318  
                                   __end_of_ADC_ISR 1015                                        i1___fltol@f1 003A  
                   __end_of_ADC_SetInterruptHandler 1F5C                                 ??_SPI1_ByteExchange 00A1  
                                      ___awmod@sign 00A5                                     _TMR2_Initialize 10B3  
                      __end_of_sendLedstripEndFrame 113C                                                 wreg 0009  
                                     i1___fladd@grs 004D                                        ___flmul@aexp 00D8  
                                      ___flmul@bexp 00DD                        ?_ADC_DefaultInterruptHandler 0070  
                                      ___flmul@sign 00D7                                        ___flmul@temp 00E2  
                                      ___flmul@prod 00DE                                 i1_ADC_SelectChannel 1FF4  
                                      ?_EUSART_Read 0070                                        _BAUD1CONbits 019F  
                                      ___fltol@exp1 00ED                                                ?_abs 00A6  
                                              l1181 1177                                                l1503 05A4  
                                              l4003 147B                                                l1524 0617  
                                              l1516 0601                                                l4021 1496  
                                              l1382 16AC                                                l1622 09A9  
                                              l1623 09B8                                                l4031 14B1  
                                              l4111 1262                                                l1560 0FEE  
                                              l4009 1484                                                l4113 126C  
                                              l4121 1281                                                l1482 04B1  
                                              l1562 0FF7                                                l1538 0ED5  
                                              l1635 09EB                                                l4035 14B9  
                                              l4027 14A8                                                l4019 148C  
                                              l4051 1368                                                l5011 0F95  
                                              l5003 0F67                                                l1636 09F5  
                                              l4061 1378                                                l4205 0B40  
                                              l4117 1278                                                l5005 0F7E  
                                              l1486 0522                                                l1590 0266  
                                              l1726 0CD2                                                l4047 1361  
                                              l4215 16EE                                                l1559 0FD6  
                                              l5015 0F97                                                l1488 0503  
                                              l1680 132A                                                l1728 0CDE  
                                              l4313 0482                                                l4153 1227  
                                              l4073 1395                                                l4065 1384  
                                              l4137 132C                                                l4129 1325  
                                              l4225 171A                                                l5025 0FBE  
                                              l4411 0546                                                l4403 0530  
                                              l4059 136E                                                l1683 134A  
                                              l4251 15F3                                                l4227 16D9  
                                              l4235 171F                                                l4413 0548  
                                              l4421 0555                                                l4341 04A9  
                                              l4317 0485                                                l1597 122D  
                                              l4069 138D                                                l4253 1605  
                                              l4319 048D                                                l4511 008C  
                                              l4191 0ADC                                                l4175 0ACF  
                                              l4247 15DA                                                l4095 12D5  
                                              l4087 12B9                                                l5039 0FF5  
                                              l1688 0AD5                                                l4441 05B6  
                                              l4433 059C                                                l4337 04A6  
                                              l4513 0094                                                l4265 1670  
                                              l4089 12C3                                                l4451 05C7  
                                              l4347 04B9                                                l4603 01FE  
                                              l4531 00B3                                                l4179 0AF2  
                                              l4099 12DE                                                l4613 0225  
                                              l4509 008A                                                l4285 169C  
                                              l4269 1679                                                l4189 0B25  
                                              l4701 0D0A                                                ?_pad 00B4  
                                              l4463 05D7                                                l4455 05CC  
                                              l4623 0251                                                l4527 00A9  
                                              l4295 16B9                                                l4287 16A8  
                                              l4199 0B31                                                l4449 05C5  
                                              l4457 05CE                                                l4385 050F  
                                              l4377 04D7                                                l4617 023A  
                                              l4529 00AB                                                l4641 09A1  
                                              l4721 0D68                                                l4467 05D9  
                                              l4387 0511                                                l4395 051D  
                                              l4539 00C1                                                l4651 09C8  
                                              l4715 0D46                                                l4707 0D22  
                                              l4485 0611                                                l4653 09D7  
                                              l4733 0D86                                                l4591 01CE  
                                              l4671 0A10                                                l3951 106D  
                                              l4727 0D73                                                l5711 14E8  
                                              l5703 14EF                                                l4489 0615  
                                              l4593 01E5                                                l4657 09E9  
                                              l4649 09BA                                                l3937 07DF  
                                              l3961 1513                                                l4729 0D7C  
                                              l4761 118E                                                l4817 11FA  
                                              l4659 09DC                                                l4835 0C08  
                                              l3963 1517                                                l4691 0CE0  
                                              l4763 11A2                                                l5707 14F1  
                                              l4923 0EAD                                                l4853 0C32  
                                              l4845 0C2D                                                l4693 0CF4  
                                              l4925 0EB5                                                l5661 0A78  
                                              l4599 01FC                                                l4839 0C18  
                                              l3983 1171                                                l3967 153E  
                                              l5735 17A1                                                l4943 0ECD  
                                              l4919 0EAA                                                l5655 0A23  
                                              l5911 0BB8                                                l5903 0B76  
                                              l4857 0C3D                                                l5761 17FB  
                                              l5745 17E9                                                l5737 1799  
                                              l4953 0EF2                                                l5673 0AA7  
                                              l5649 0A6C                                                l4883 0C87  
                                              l5843 10B0                                                l3979 123E  
                                              l5755 17C2                                                l5747 17BA  
                                              l5739 17A4                                                l4939 0ECA  
                                              l5675 0A86                                                l5667 0A84  
                                              l5915 0BC8                                                l5907 0B97  
                                              l4893 0CA4                                                l4877 0C72  
                                              l5757 17EC                                                l5693 14D2  
                                              l5677 0AAA                                                l5917 0BD0  
                                              l5695 14D5                                                l4959 0EFE  
                                              l4889 0C99                                                l5689 14CD  
                                              l4985 0F5E                                                l4979 0F45  
                                              l4987 0F27                                                l5971 1438  
                                              l4989 0F61                                                l5899 0B54  
                                              STR_1 18EC                                                STR_2 1865  
                                              STR_3 18D7                                                STR_4 18AE  
                                              STR_5 188E                                                STR_6 18FB  
                                              STR_7 18F4                                                STR_8 18AB  
                                              STR_9 184C                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              u4015 148F                                                u4035 1497  
                                              u4115 1371                                                u4045 14A1  
                                              u4205 12C4                                                u4055 14A9  
                                              u4135 137E                                                u4215 12CE  
                                              u5105 061A                                                u4145 1385  
                                              u4225 12D6                                                u5045 05EE  
                                              u5205 012E                                                u4325 1336  
                                              u5215 0157                                                u4255 1265  
                                              u5225 01A1                                                u4425 0B2F  
                                              u4185 12BC                                                u5235 01BD  
                                              u4275 1272                                                u4515 16E9  
                                              u4380 0AB9                                                u4365 122E  
                                              u5245 01D1                                                u4605 169D  
                                              u4285 1279                                                u4390 0ABA  
                                              u5335 0213                                                u5415 09C1  
                                              u4455 0AED                                                u6055 0FAC  
                                              u3840 1F7A                                                u5345 022E  
                                              u5265 01DA                                                u6065 0FC7  
                                              u5355 0244                                                u4635 16B0  
                                              u5435 09D1                                                u6075 0FE0  
                                              u3925 153C                                                u4903 0567  
                                              u4815 0515                                                u5375 0261  
                                              u4575 1682                                                u5455 09E3  
                                              u6095 0FFA                                                u4760 04F6  
                                              u4770 04F7                                                u5650 1F82  
                                              u4755 04EB                                                u5715 0C38  
                                              u3955 1178                                                u3965 117D  
                                              u5495 09FD                                                u5735 0C52  
                                              u4945 05B7                                                u5745 0C65  
                                              u5905 0F36                                                u4875 053F  
                                              u4795 0508                                                u7380 0BBE  
                                              u5925 0F3F                                                u7390 0BBF  
                                              u4895 054C                                                u5775 0C7C  
                                              u5695 0C11                                                u5935 0F53  
                                              u5785 0C90                                                u5965 0F6A  
                                              u5895 0F2F                                                u5985 0F73  
                                              u7577 1464                                                _TMR2 001D  
                                              _TMR4 0415                                                _TMR6 041C  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 0070  
                                   _getHoogtesensor 1F9D                                                abs@a 00A6  
                                              _dbuf 01A0                                                _atoi 1796  
                                              _main 1425                                                _dtoa 0AB3  
                                              _line 01C0                                       i1___flmul@grs 002F  
                                              _prec 0144                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 16C8                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 12B1                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0040  
        __end_of_EUSART_DefaultOverrunErrorCallback 1F3C                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1F38  
                                   ___fldiv@new_exp 00B2                           __end_of_SPI1_ByteExchange 1FDE  
                   __end_of_INT_SetInterruptHandler 1F64                                ?i1_ADC_SelectChannel 0070  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 00EC  
                                             _ADACT 009F                                               ?_atoi 00A6  
                                   __end_of___fladd 0623                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___fldiv 1000  
                                   __end_of___awdiv 14BE                                               STR_10 18CA  
                                             STR_11 18BD                                               STR_12 189F  
                                             STR_13 187D                                     __end_of___awmod 139A  
                                   __end_of___flmul 0271                                     __end_of___flsub 11C2  
                                   __end_of___fltol 16C8                                               ?_utoa 00BC  
                                   ___awdiv@divisor 00A0                                               _T2CON 001F  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _T6CON 041E  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                     __end_of___lwdiv 12E3  
                                             i1l221 0022                                               i1l230 003E  
                                             i1l223 002C                                               i1l225 0036  
                                             i1l219 0015                                     __end_of___lwmod 1286  
                                             i1l727 116C                                     ___awdiv@counter 00A4  
                                             _OSCEN 091D                                               _UART1 1800  
                                      vfpfcnvrt@fmt 00CB                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             _RXPPS 0E24                                     _TMR4_Initialize 10C4  
                                  __end_of_TMR2_ISR 1052                                    __end_of_TMR4_ISR 105F  
                                             _getKi 10D5                                               _getKp 0801  
                                             _flags 0063                                  _EUSART_TransmitISR 1155  
                                    i1___flmul@aexp 002E                                 read_prec_or_width@c 00AB  
                                    i1___flmul@bexp 0033                                 read_prec_or_width@n 00AC  
                                             _fputc 150B                                               _fputs 123C  
                                             _setKi 1FC1                                               _setKp 1000  
                                       ?_TMR6_Tasks 0070                                      i1___flmul@sign 002D  
                                    i1___flmul@temp 0038                                      i1___flmul@prod 0034  
                                             atoi@n 00AB                                               pad@fp 00B4  
                                             atoi@s 00A6                                               _width 0055  
                                             _putch 106C                                               dtoa@d 00BE  
                                             dtoa@i 00C7                                               dtoa@p 00C3  
                                             dtoa@s 00C6                                               dtoa@w 00C4  
                                             pclath 000A                                      i1___fltol@exp1 0043  
                              __end_of_getLedNumber 15B4                                               utoa@d 00BE  
                                             utoa@i 00C4                                               utoa@p 00C1  
                                             utoa@w 00C2                                               status 0003  
                                             wtemp0 007E                                 ?_EUSART_TransmitISR 0070  
                                   i1___fladd@signs 004A                                         controller@I 0051  
                                       controller@P 004F                               ??i1_ADC_SelectChannel 0070  
                                   __initialization 0042                                        __end_of_atoi 1800  
                                      __end_of_main 1471                                        __end_of_dtoa 0B4E  
                                      __end_of_utoa 172E                                       ?_initLedstrip 0070  
                                    ??_EUSART_Write 00A1                   _EUSART_TxCompleteInterruptHandler 0061  
                           __end_of_TMR2_Initialize 10C4                                           ??_ADC_ISR 0074  
                       ?_INTERRUPT_InterruptManager 0070                              printFloat@integer_part 0154  
                                            ??_atoi 00A8                                ??_EUSART_TransmitISR 0070  
                                            ??_main 015A                                              ??_dtoa 00C0  
                                       ?i1___xxtofl 0070                                __end_of_getDutycycle 1FC1  
                                            ??_utoa 00C0                             setSetpoint@new_setpoint 00AD  
                        __end_of_read_prec_or_width 160A                                     _TMR6_Initialize 1079  
EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  EUSART_FramingErrorCallbackRegister@callbackHandler 00A0  
                           __end_of_getHoogtesensor 1FA6                                              ?_getKi 00A0  
                                            ?_getKp 00A0                                              _ADCON0 009D  
                                            _ADCON1 009E                          _EUSART_OverrunErrorHandler 005D  
                                            ?_fputc 00A3                                              ?_fputs 00AC  
                                            _ADRESH 009C                                              _ADRESL 009B  
                                            ?_setKi 014E                                              ?_setKp 014E  
                        __end_of_position_led_strip 0CAE                                    ___awdiv@dividend 00A2  
                                            _ANSELA 018C                                              ?_putch 0070  
                                            _ANSELB 018D                                              _ANSELC 018E  
                                      ?_setSetpoint 00AD                                              _RC1REG 0199  
                                            _RC1STA 019D                                              _RB4PPS 0E9C  
                                            _RB6PPS 0E9E                                              _RC5PPS 0EA5  
                                            _RB7PPS 0E9F                                              i1l1503 075A  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            _ODCONC 028E                                              i1l1524 07CD  
                                            i1l1516 07B7                                              i1l1382 164D  
                                            i1l1622 091C                                              i1l1623 092B  
                                            i1l1482 0667                                              i1l1635 095E  
                                            i1l1636 0968                                              i1l5101 0638  
                                            i1l1486 06D8                                              i1l1590 0462  
                                            i1l1488 06B9                                              i1l5201 06FE  
                                            i1l5105 063B                                              i1l5107 0643  
                                            i1l6013 12A5                                              i1l5221 0752  
                                            i1l5125 065C                                              i1l1597 120E  
                                            i1l5301 0290                                              i1l5053 1611  
                                            i1l5135 066F                                              i1l5209 070B  
                                            i1l5129 065F                                              i1l5401 0421  
                                            i1l5073 163D                                              i1l5057 161A  
                                            i1l5251 078D                                              i1l5243 0782  
                                            i1l5411 044D                                              i1l5315 02A5  
                                            i1l5083 165A                                              i1l5075 1649  
                                            i1l5237 077B                                              i1l5229 076C  
                                            i1l5245 0784                                              i1l5173 06C5  
                                            i1l5165 068D                                              i1l5405 0436  
                                            i1l5317 02A7                                              i1l5255 078F  
                                            i1l5239 077D                                              i1l5191 06E6  
                                            i1l5175 06C7                                              i1l5183 06D3  
                                            i1l5327 02BD                                              i1l5319 02AF  
                                            i1l5273 07C7                                              i1l5441 094A  
                                            i1l5277 07CB                                              i1l5381 03E1  
                                            i1l5445 095C                                              i1l5437 092D  
                                            i1l5429 0914                                              i1l5623 1287  
                                            i1l5199 06FC                                              i1l5391 03FA  
                                            i1l5447 094F                                              i1l5439 093B  
                                            i1l5633 129C                                              i1l5297 0286  
                                            i1l5627 1291                                              i1l5635 12AD  
                                            i1l4771 1208                                              i1l5387 03F8  
                                            i1l5379 03CA                                              i1l5299 0288  
                                            i1l5459 0983                                              i1l5811 105C  
                                            i1l5817 104F                                              i1l5863 140D  
                                            i1l5855 13FA                                              i1l5797 0E8E  
                                            i1l5789 0E83                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u611_25 1623                                              u630_20 06AC  
                                            u614_25 163E                                              u631_20 06AD  
                                            u703_25 0970                                              u560_25 120F  
                                            u641_25 06F5                                              u633_25 06BE  
                                            u617_25 1651                                              u562_25 1109  
                                            u643_25 0702                                              u635_25 06CB  
                                            u644_23 071D                                              u724_25 0E7B  
                                            _OSCFRQ 091F                                              u629_25 06A1  
                                            u664_25 07D0                                              u648_25 076D  
                                            u680_25 03D6                                       vfpfcnvrt@done 00D1  
                                            u658_25 07A4                                              u674_25 032A  
                                            u691_25 045D                                              u675_25 0353  
                                            u676_25 039D                                              u677_25 03B9  
                                            u678_25 03CD                                              u687_25 040F  
                                            u695_25 0934                                              u688_25 042A  
                                            u689_25 0440                                              u697_25 0944  
                                            _TX1REG 019A                                              u699_25 0956  
                                            _TX1STA 019E                                    __end_of___xxtofl 0A19  
                                      ?_uartHandler 0070                                   __end_of_SPI1_Open 1796  
                              _sendLedstripEndFrame 1124                                   _ADC_potentiometer 005B  
                                      vfprintf@cfmt 00DE                                      ??_initLedstrip 00A9  
                                         ??___fladd 00B6                                              ___wmul 116F  
                           _updateLedstripAnimation 1F35                                           ??___fldiv 00A8  
                                         ??___awdiv 00A4                                           ??___awmod 00A4  
                                         ??___flmul 00D2                                           ??___flsub 00CA  
                                         ??___fltol 00E8                                           ??___lwdiv 00A4  
                                         ??___lwmod 00A4                                    __end_of_ledstrip 184C  
                                 ?_getPotentiometer 00A0                                    __end_of_readLine 150B  
                              read_prec_or_width@ap 00A7                             __end_of_TMR4_Initialize 10D5  
                                  ___awdiv@quotient 00A6                                   ?_EUSART_IsRxReady 0070  
                                   ___awmod@divisor 00A0                                   ?_EUSART_IsTxReady 0070  
                                   ___awmod@counter 00A4                                              _printf 1095  
                                            pad@buf 00B6                                  ??_getPotentiometer 00A2  
                                 ?_CLOCK_Initialize 0070                                              dtoa@fp 00BC  
                                 __end_ofi1___fladd 07D9                                  ??_EUSART_IsRxReady 00A0  
                                 __end_ofi1___flmul 046D                                   __end_ofi1___fltol 1669  
                                            fputc@c 00A3                                  ??_EUSART_IsTxReady 00A0  
                                            fputs@c 00B1                                              fputs@i 00B2  
                                            fputs@s 00AC                           ?_adcConversionDoneHandler 0070  
                                ??_CLOCK_Initialize 00A0                          str2float@decimal_separator 00E8  
                                   i1___fltol@sign1 0042                                       main@potwaarde 015C  
                           ?_sendLedstripStartFrame 0070                         EUSART_ReceiveISR@tempRxHead 0071  
                                  __end_of_vfprintf 11A5                               _pwm_fan_LoadDutyValue 10FA  
                                            utoa@fp 00BC             INT_SetInterruptHandler@InterruptHandler 00A0  
           ADC_SetInterruptHandler@InterruptHandler 00A0                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 00AA  
                                      ___xxtofl@exp 00A9                                   _SYSTEM_Initialize 11C2  
                                      ___xxtofl@val 00A0                             __end_of__initialization 0071  
                                    _SPI1_ByteWrite 0000                                    printFloat@number 014E  
                                ?_SYSTEM_Initialize 0070                                          ___fltol@f1 00E4  
                                      ?i1__Umul8_16 0070                                       __end_of_UART1 1830  
                             ?_sendLedstripEndFrame 0070                                      __pcstackCOMMON 0070  
                                      __pidataBANK0 07FC                                        __pidataBANK2 1F8C  
                               ??_SYSTEM_Initialize 00A2                                           ?_TMR2_ISR 0070  
                                     __end_of_getKi 10E6                                       __end_of_getKp 0812  
                                         ?_TMR4_ISR 0070                                       __end_of_fputc 155F  
                                     __end_of_fputs 125C                                   ??_SPI1_Initialize 00A0  
                                     __end_of_setKi 1FCA                                       __end_of_setKp 1009  
                                     __end_of_putch 1079                                    ?_TMR2_Initialize 0070  
                           __end_of_TMR6_Initialize 1087                             _ADC_GetConversionResult 1F3C  
                                _spi1_configuration 18E2                      __end_of_sendLedstripStartFrame 10FA  
                              _eusartRxStatusBuffer 0120                                    _ADC_hoogtesensor 0059  
                                _pwm_fan_Initialize 102D                                    ?_getHoogtesensor 00A0  
                                           ??_getKi 00A4                                             ??_getKp 00A4  
                                       setKi@new_ki 014E                                             ??_fputc 00A7  
                         __end_of_SYSTEM_Initialize 11E0                                             ??_fputs 00AF  
                                           ??_setKi 00F0                                             ??_setKp 00F0  
                                           ??_putch 00A2                                          __pbssBANK0 0055  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                               ?_pwm_fan_Initialize 0070                                __end_of_EUSART_Write 07FC  
                                       setKp@new_kp 014E                                      i1___xxtofl@arg 007A  
                                    i1___xxtofl@exp 0079                                      i1___xxtofl@val 0070  
                         ??_updateLedstripAnimation 00F0                                   __end_of__Umul8_16 123C  
                          _TMR6_PeriodMatchCallback 015E                                          __pmaintext 1425  
                                           ?___wmul 00A0                                          ??_TMR2_ISR 0070  
                                        ??_TMR4_ISR 007E                                          __pintentry 0004  
                              _EUSART_AutoBaudQuery 0000                                ??_pwm_fan_Initialize 00A0  
                                           _ADC_ISR 1009                                    ?_TMR4_Initialize 0070  
                                           ?_printf 00E0                                        _getLedNumber 155F  
                                   _EUSART_IsTxDone 0000                                       _eusartRxCount 0066  
                 _EUSART_RxCompleteCallbackRegister 0000                                           ?___xxtofl 00A0  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                                             _OSCCON1 0919  
                                           _OSCCON3 091B                                 i1__Umul8_16@product 0074  
                            ?_pwm_fan_LoadDutyValue 0070                                             _OSCTUNE 091E  
                                           _PWM5DCH 0618                                             _PWM5DCL 0617  
                                           _PWM5CON 0619                          sendLedstripFrame@intensity 00A3  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                           _SSP1BUF 0211                                        ??_TMR6_Tasks 00F0  
                              __end_of_initLedstrip 106C                                           ?_readLine 00E7  
                                      _getDutycycle 1FB8                                          _controller 0DA0  
                             EUSART_Read@tempRxTail 00A0                              ??_sendLedstripEndFrame 00A1  
                              _ADC_InterruptHandler 0166                             _ADC_SetInterruptHandler 1F54  
                                           ___fladd 046D                                             ___fldiv 0E95  
                                           ___awdiv 1471                                             ___awmod 1357  
                                           ___flmul 0075                                             ___flsub 11A5  
                                           ___fltol 1669                 adcConversionDoneHandler@new_channel 006F  
                                    uartHandler@str 0152                                             ___lwdiv 12B1  
                                           ___lwmod 125C                                           ?_vfprintf 00D8  
                         ??_ADC_GetConversionResult 0072                                          _hoogte_bal 0146  
                                  ?_TMR6_Initialize 0070                                  __end_of_TMR6_Tasks 10B3  
                                      ??i1___xxtofl 0074                                             __ptext1 0B4E  
                                           __ptext2 0A19                                             __ptext3 0E95  
                                           __ptext4 1F84                                             __ptext5 1000  
                                           __ptext6 1FC1                                             __ptext7 14BE  
                                           __ptext8 11E0                                             __ptext9 1F7C  
                             read_prec_or_width@fmt 00A6                     __end_of_updateLedstripAnimation 1F38  
                                        ??___xxtofl 00A4                                    ___awmod@dividend 00A2  
                          ??_PIN_MANAGER_Initialize 00A0                             _INT_SetInterruptHandler 1F5C  
                                           atoi@neg 00AA                           printFloat@fractional_part 0152  
                                           clrloop0 1F49                                end_of_initialization 0071  
                                           fputc@fp 00A5                         __end_ofi1_ADC_SelectChannel 2000  
                                        ??_readLine 00E9                                             init_ram 1F4E  
                                           fputs@fp 00AD                                             initloop 1F4F  
                                _read_prec_or_width 15B4                                   _EUSART_Initialize 12E3  
                                 __end_of_str2float 0AB3                                  __end_ofi1___xxtofl 098C  
                                 __end_of_printLogs 0880             __end_of_TMR6_DefaultPeriodMatchCallback 0004  
                  ?_TMR6_DefaultPeriodMatchCallback 0070                   ??_TMR6_DefaultPeriodMatchCallback 00A0  
                   _TMR6_DefaultPeriodMatchCallback 0003                                  ?_EUSART_Initialize 0070  
                                _position_led_strip 0BF2                                   __end_of_vfpfcnvrt 0DA0  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 13DE  
                               ?_read_prec_or_width 00A6                                    vfpfcnvrt@convarg 00D2  
                                        ??_vfprintf 00DD                                  ?_EUSART_ReceiveISR 0070  
                                         _SPI1_Open 172E                                 ??_EUSART_Initialize 00A2  
                               ?_position_led_strip 0070                               i1__Umul8_16@word_mpld 0076  
                                        _printFloat 0880                                 _SPI1_BufferExchange 0000  
                                       ___fladd@grs 00C1                                 ??_EUSART_ReceiveISR 0070  
               __end_of_ADC_DefaultInterruptHandler 1F34                         _ADC_DefaultInterruptHandler 1F33  
                                     ___xxtofl@sign 00A8     TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0  
   TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0            __end_of_TMR6_PeriodMatchCallbackRegister 1F74  
                ??_TMR6_PeriodMatchCallbackRegister 00A2                   ?_TMR6_PeriodMatchCallbackRegister 00A0  
                  _TMR6_PeriodMatchCallbackRegister 1F6C                                           i1___fladd 0623  
                              ??_read_prec_or_width 00A8                                           i1___flmul 0271  
                                       ___fldiv@grs 00B4                                           i1___fltol 160A  
                                       ___fldiv@rem 00AD                                 _EUSART_Deinitialize 0000  
                                     ??_getSetpoint 00A2                          __end_of_initAdcMultiplexer 1FF4  
                              ??_position_led_strip 0152                                         ___flmul@grs 00D9  
                         __end_of_EUSART_Initialize 1318                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                     _SPI1_Initialize 1FCA  
                                       ?_controller 0070                           __end_of_EUSART_ReceiveISR 1425  
           __end_of_TMR2_DefaultPeriodMatchCallback 0801                   ??_TMR2_DefaultPeriodMatchCallback 0070  
                  ?_TMR2_DefaultPeriodMatchCallback 0070                     _TMR2_DefaultPeriodMatchCallback 0800  
                      __end_of_INTERRUPT_Initialize 1FE9                                          ?_SPI1_Open 00A6  
                                       vfpfcnvrt@ap 00CC                                         vfpfcnvrt@cp 00D6  
                                       vfpfcnvrt@fp 00C9                                      __end_of___wmul 118A  
                               str2float@multiplier 00E9                                        _EUSART_Write 07D9  
                                    _ADC_Initialize 110F                           ??_INT_SetInterruptHandler 00A2  
                                    __end_of_printf 10A3                                 start_initialization 0042  
                                       __end_of_abs 1095                                          ?i1___fladd 003A  
                                       __end_of_pad 1357                                          ?i1___flmul 0020  
                                     ??_EUSART_Read 00A0                                          ?i1___fltol 003A  
          __end_of_TMR4_PeriodMatchCallbackRegister 1F6C                  ??_TMR4_PeriodMatchCallbackRegister 00A2  
                 ?_TMR4_PeriodMatchCallbackRegister 00A0                    _TMR4_PeriodMatchCallbackRegister 1F64  
                                       putch@txData 00A2                           _EUSART_RxInterruptHandler 01D4  
                               __end_of_getSetpoint 1FAF                                     str2float@number 00EB  
                                       vfprintf@fmt 00DA                          _EUSART_FramingErrorHandler 005F  
                                          ??___wmul 00A4                              __end_of_ADC_Initialize 1124  
                                         __Umul8_16 121D                                        _initLedstrip 105F  
                                       __pdataBANK0 006C                                         __pdataBANK2 0168  
                             position_led_strip@led 0157                                            ?_ADC_ISR 0070  
                          _adcConversionDoneHandler 1286                                            ??_printf 00E6  
                                       ?_printFloat 014E                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 00B2                                           ___fladd@b 00AE  
                                     _SPI1_ByteRead 0000                                           ___fldiv@a 00A0  
                                         ___fldiv@b 00A4                                           ___flmul@a 00CE  
                                         ___flmul@b 00CA                                           ___flsub@a 00C2  
                                         ___flsub@b 00C6                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                                     __pcstackBANK2 014E                             __end_of_SPI1_Initialize 1FD4  
                                 i1_getHoogtesensor 1F42                                     i1___xxtofl@sign 0078  
                                ?i1_getHoogtesensor 0070                                   _sendLedstripFrame 113C  
                               __end_of_EUSART_Read 11FE                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0064                                           __pnvBANK2 015E  
                                         __pnvBANK3 01D4                                  ?_sendLedstripFrame 00A1  
                                  ___lwdiv@dividend 00A2                              _PIN_MANAGER_Initialize 139A  
                               ??i1_getHoogtesensor 0072                                           _dtoa$2128 00C1  
                          _TMR4_PeriodMatchCallback 0160                                EUSART_Read@readValue 00A1  
                                 _ADC_SelectChannel 1039                            i1__Umul8_16@multiplicand 0070  
                                          ?___fladd 00AE                                            ?___fldiv 00A0  
                                          ?___awdiv 00A0                                            ?___awmod 00A0  
                                          ?___flmul 00CA                                            ?___flsub 00C2  
                                          ?___fltol 00E4                                 ??_sendLedstripFrame 00A4  
                                        ?__Umul8_16 00A0                                            ?___lwdiv 00A0  
                                       ??_SPI1_Open 00A7                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 0068  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006B  
                                      _eusartRxTail 0067                                        _eusartTxTail 006A  
                      ??_INTERRUPT_InterruptManager 007E                                  getLedNumber@height 00EE  
                      EUSART_TransmitISR@tempTxTail 0070                             _eusartTxBufferRemaining 0069  
                                          _BAUD1CON 019F                                  getLedNumber@result 014E  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                         __end_ofi1_getHoogtesensor 1F48                                         ??i1___fladd 0042  
                                       ??i1___flmul 0028                                         ??i1___fltol 003E  
                                  ___lwdiv@quotient 00A4                                    _getPotentiometer 1FAF  
                                       _getSetpoint 1FA6                                       ??_setSetpoint 00AF  
                         __end_of_sendLedstripFrame 1155                                    _EUSART_IsRxReady 1F7C  
                              _INTERRUPT_Initialize 1FDE                                           _integraal 0140  
                                  _EUSART_IsTxReady 1F74                                      _eusartRxBuffer 0130  
                                  _CLOCK_Initialize 1F94                                           _dutycycle 0057  
                          ?_updateLedstripAnimation 0070                                      _eusartTxBuffer 0138  
                                    ___wmul@product 00A4                                            _LATAbits 010C  
                                         clear_ram0 1F48                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 014A                                       ??_uartHandler 00F0  
                         __end_of_ADC_SelectChannel 1045                                            _PIR0bits 0010  
                                          _PIR1bits 0011                                            _PIR2bits 0012  
                                          _OSCSTAT1 091C                                          str2float@i 00EA  
                                         _str2float 0A19                                            _SSP1CON1 0215  
                                          _SSP1CON3 0217                                            _TMR2_ISR 1045  
                                          _TMR4_ISR 1052                                            _SSP1STAT 0214  
                                         _printLogs 0812                            ??_sendLedstripStartFrame 00A1  
                                         _vfpfcnvrt 0CAE                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A0  
                          ADC_SelectChannel@channel 00A1                                       readLine@index 0065  
                                       _EUSART_Read 11E0                                    ?_SPI1_Initialize 0070  
                             ?_INTERRUPT_Initialize 0070                   _EUSART_RxCompleteInterruptHandler 0148  
                                 ??_TMR2_Initialize 00A0                                        ??_controller 004E  
                                     ??i1__Umul8_16 0072                                 __end_of_setSetpoint 1F8C  
                                    str2float@digit 00EF                                  _initAdcMultiplexer 1FE9  
                                        vfprintf@ap 00DC                                          vfprintf@fp 00D8  
                          ?_ADC_GetConversionResult 0070                                          ?_str2float 00E4  
                        i1ADC_SelectChannel@channel 0071                                   ??_getHoogtesensor 00A2  
                                       ??__Umul8_16 00A2                                          ?_printLogs 0070  
                               __end_of_uartHandler 0BF2                          __end_of_EUSART_TransmitISR 116F  
                               ?_initAdcMultiplexer 0070                                          ?_vfpfcnvrt 00C9  
                                          ___xxtofl 098C                                  __end_of_controller 0E95  
                                   ___lwdiv@divisor 00A0                                  _EUSART_AutoBaudSet 0000  
                                   ___lwdiv@counter 00A6                                            __ptext10 1796  
                                          __ptext11 0812                                            __ptext20 0AB3  
                                          __ptext12 0880                                            __ptext21 1318  
                                          __ptext13 1095                                            __ptext30 11A5  
                                          __ptext22 123C                                            __ptext14 118A  
                                          __ptext31 0801                                            __ptext23 150B  
                                          __ptext15 0CAE                                            __ptext40 1FAF  
                                          __ptext32 10D5                                            __ptext24 106C  
                                          __ptext16 16C8                                            __ptext41 10A3  
                                          __ptext33 1FB8                                            __ptext25 07D9  
                                          __ptext17 125C                                            __ptext50 155F  
                                          __ptext42 0003                                            __ptext34 105F  
                                          __ptext26 1F74                                            __ptext18 12B1  
                                          __ptext51 098C                                            __ptext43 1F35  
                                          __ptext35 1F6C                                            __ptext27 1087  
                                          __ptext19 15B4                                            __ptext60 1079  
                                          __ptext52 1669                                            __ptext44 0BF2  
                                          __ptext36 172E                                            __ptext28 1357  
                                          __ptext61 10C4                                            __ptext53 0075  
                                          __ptext45 10E6                                            __ptext37 116F  
                                          __ptext29 1471                                            __ptext70 1F94  
                                          __ptext62 10B3                                            __ptext54 121D  
                                          __ptext46 113C                                            __ptext38 1FE9  
                                          __ptext71 110F                                            __ptext63 1FCA  
                                          __ptext55 046D                                            __ptext47 1124  
                                          __ptext39 1039                                            __ptext80 0271  
                                          __ptext72 1F54                                            __ptext64 139A  
                                          __ptext56 1F9D                                            __ptext48 1FD4  
                                          __ptext81 11FE                                            __ptext65 1FDE  
                                          __ptext57 1F64                                            __ptext49 1FA6  
                                          __ptext90 1009                                            __ptext82 0623  
                                          __ptext74 1052                                            __ptext66 1F5C  
                                          __ptext58 11C2                                            __ptext91 1F33  
                                          __ptext83 10FA                                            __ptext75 0002  
                                          __ptext67 12E3                                            __ptext59 102D  
                                          __ptext92 1286                                            __ptext84 1045  
                                          __ptext76 0DA0                                            __ptext68 1021  
                                          __ptext93 1FF4                                            __ptext85 0800  
                                          __ptext77 1F42                                            __ptext69 1015  
                                          __ptext94 1F3C                                            __ptext86 1155  
                                          __ptext78 08FF                                            __ptext87 13DE  
                                          __ptext79 160A                                            __ptext88 1F38  
                                          __ptext89 1F34                                        _SSP1CON1bits 0215  
                              ??_initAdcMultiplexer 00A2                               _EUSART_TransmitEnable 0000  
                                          _ledstrip 1830                                            _readLine 14BE  
                                 ??_TMR4_Initialize 00A0                          ??_adcConversionDoneHandler 0072  
                                        _RC1STAbits 019D                                            _setpoint 006C  
                                          int$flags 007E                                 __end_ofi1__Umul8_16 121D  
                                          _vfprintf 118A                  __end_of_INTERRUPT_InterruptManager 0040  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 1021  
             ??_EUSART_FramingErrorCallbackRegister 00A2                ?_EUSART_FramingErrorCallbackRegister 00A0  
               _EUSART_FramingErrorCallbackRegister 1015                                           printf@fmt 00E0  
                                     ?_getLedNumber 00EE                                        ??_printFloat 00EE  
                    pwm_fan_LoadDutyValue@dutyValue 0070                                          _INTCONbits 000B  
                     __end_of_pwm_fan_LoadDutyValue 110F                                _INT_InterruptHandler 014C  
                                    __pstringtext10 18BD                                      __pstringtext11 18CA  
                                    __pstringtext12 18D7                                      __pstringtext13 18EC  
                                    __pstringtext14 18F4                                      __pstringtext15 18FB  
                                    __pstringtext16 0000                              ??_INTERRUPT_Initialize 00A2  
                          position_led_strip@led_on 0158                            ?_ADC_SetInterruptHandler 00A0  
                          position_led_strip@target 0155                                         _setSetpoint 1F84  
                                          intlevel1 0000                              i1__Umul8_16@multiplier 0078  
                                  ___lwmod@dividend 00A2                           _EUSART_TxInterruptHandler 0164  
                           ?_PIN_MANAGER_Initialize 0070                                       ?_getDutycycle 00A0  
                                 ??_TMR6_Initialize 00A0                           SPI1_ByteExchange@byteData 00A0  
        __end_of_EUSART_DefaultFramingErrorCallback 1F35                ??_EUSART_DefaultFramingErrorCallback 0070  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 1F34  
                   __end_of_ADC_GetConversionResult 1F42                                  __end_of_printFloat 08FF  
                                  ??_ADC_Initialize 00A2                                         _uartHandler 0B4E  
                                       ??_str2float 00E8                                       _mustPrintLogs 006E  
                                          printf@ap 00E6                                    _SPI1_BufferWrite 0000  
                          __end_of_getPotentiometer 1FB8                                         ??_printLogs 00F0  
                          ?_INT_SetInterruptHandler 00A0                            __end_of_EUSART_IsRxReady 1F84  
                                    ??_getLedNumber 00F0                                         ??_vfpfcnvrt 00CD  
                          __end_of_EUSART_IsTxReady 1F7C                                        str2float@str 00E4  
                          __end_of_CLOCK_Initialize 1F9D                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 18E2  
                                     __pstringtext4 184C                                       __pstringtext5 1865  
                                     __pstringtext6 187D                                       __pstringtext7 188E  
                                     __pstringtext8 189F                                       __pstringtext9 18AE  
                                        _SPI1_Close 0000                              __Umul8_16@multiplicand 00A0  
                                        _SSP1DATPPS 0E21                                          _SSP1CLKPPS 0E20  
                                   ___lwmod@divisor 00A0                                     ___lwmod@counter 00A4  
                                        _TX1STAbits 019E                                        ?_getSetpoint 00A0  
                            sendLedstripFrame@green 00A1                                       ___fladd@signs 00BE  
                                   controller@error 0053                                          _TMR6_Tasks 10A3  
                                EUSART_Write@txData 00A0                              _sendLedstripStartFrame 10E6  
                    __end_of_PIN_MANAGER_Initialize 13DE                                      ??_getDutycycle 00A2  
                                       _PWMTMRSbits 061F                                        ___fladd@aexp 00BF  
                                      ___fladd@bexp 00C0                               sendLedstripFrame@blue 00A2  
                              __Umul8_16@multiplier 00A8                             SPI1_Open@spiConfigIndex 00A6  
                              sendLedstripFrame@red 00A4                                         i1__Umul8_16 11FE  
                          _TMR2_PeriodMatchCallback 0162                          __end_of_spi1_configuration 18EC  
                                 __Umul8_16@product 00A4  
