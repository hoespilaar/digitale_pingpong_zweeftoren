

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 19 14:22:56 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	inittext,global,class=CODE,space=0,delta=2
    31                           	psect	clrtext,global,class=CODE,space=0,delta=2
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    47                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    50                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    53                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    54                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    55                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    58                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=3
    59                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    60                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=3
    64                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    65                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    66                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    67                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2,group=2
    74                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    88                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2,group=2
    89                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2,group=2
    90                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2,group=2
    91                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2,group=2
    92                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	intentry,global,class=CODE,space=0,delta=2
   110                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   132                           	dabs	1,0x7E,2
   133     0000                     
   134                           ; Generated 11/01/2024 GMT
   135                           ; 
   136                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC16F18345 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168     0008                     bsr             equ	8
   169     0005                     fsr0h           equ	5
   170     0004                     fsr0l           equ	4
   171     0007                     fsr1h           equ	7
   172     0006                     fsr1l           equ	6
   173     0000                     indf            equ	0
   174     0000                     indf0           equ	0
   175     0001                     indf1           equ	1
   176     000B                     intcon          equ	11
   177     0002                     pc              equ	2
   178     0002                     pcl             equ	2
   179     000A                     pclath          equ	10
   180     0003                     status          equ	3
   181     0009                     wreg            equ	9
   182     0000                     INDF0           equ	0	;# 
   183     0001                     INDF1           equ	1	;# 
   184     0002                     PCL             equ	2	;# 
   185     0003                     STATUS          equ	3	;# 
   186     0004                     FSR0L           equ	4	;# 
   187     0005                     FSR0H           equ	5	;# 
   188     0006                     FSR1L           equ	6	;# 
   189     0007                     FSR1H           equ	7	;# 
   190     0008                     BSR             equ	8	;# 
   191     0009                     WREG            equ	9	;# 
   192     000A                     PCLATH          equ	10	;# 
   193     000B                     INTCON          equ	11	;# 
   194     000C                     PORTA           equ	12	;# 
   195     000D                     PORTB           equ	13	;# 
   196     000E                     PORTC           equ	14	;# 
   197     0010                     PIR0            equ	16	;# 
   198     0011                     PIR1            equ	17	;# 
   199     0012                     PIR2            equ	18	;# 
   200     0013                     PIR3            equ	19	;# 
   201     0014                     PIR4            equ	20	;# 
   202     0015                     TMR0L           equ	21	;# 
   203     0015                     TMR0            equ	21	;# 
   204     0016                     TMR0H           equ	22	;# 
   205     0016                     PR0             equ	22	;# 
   206     0017                     T0CON0          equ	23	;# 
   207     0018                     T0CON1          equ	24	;# 
   208     0019                     TMR1            equ	25	;# 
   209     0019                     TMR1L           equ	25	;# 
   210     001A                     TMR1H           equ	26	;# 
   211     001B                     T1CON           equ	27	;# 
   212     001C                     T1GCON          equ	28	;# 
   213     001D                     TMR2            equ	29	;# 
   214     001E                     PR2             equ	30	;# 
   215     001F                     T2CON           equ	31	;# 
   216     008C                     TRISA           equ	140	;# 
   217     008D                     TRISB           equ	141	;# 
   218     008E                     TRISC           equ	142	;# 
   219     0090                     PIE0            equ	144	;# 
   220     0091                     PIE1            equ	145	;# 
   221     0092                     PIE2            equ	146	;# 
   222     0093                     PIE3            equ	147	;# 
   223     0094                     PIE4            equ	148	;# 
   224     0097                     WDTCON          equ	151	;# 
   225     009B                     ADRES           equ	155	;# 
   226     009B                     ADRESL          equ	155	;# 
   227     009C                     ADRESH          equ	156	;# 
   228     009D                     ADCON0          equ	157	;# 
   229     009E                     ADCON1          equ	158	;# 
   230     009F                     ADACT           equ	159	;# 
   231     010C                     LATA            equ	268	;# 
   232     010D                     LATB            equ	269	;# 
   233     010E                     LATC            equ	270	;# 
   234     0111                     CM1CON0         equ	273	;# 
   235     0112                     CM1CON1         equ	274	;# 
   236     0113                     CM2CON0         equ	275	;# 
   237     0114                     CM2CON1         equ	276	;# 
   238     0115                     CMOUT           equ	277	;# 
   239     0116                     BORCON          equ	278	;# 
   240     0117                     FVRCON          equ	279	;# 
   241     0118                     DACCON0         equ	280	;# 
   242     0119                     DACCON1         equ	281	;# 
   243     018C                     ANSELA          equ	396	;# 
   244     018D                     ANSELB          equ	397	;# 
   245     018E                     ANSELC          equ	398	;# 
   246     0197                     VREGCON         equ	407	;# 
   247     0199                     RC1REG          equ	409	;# 
   248     0199                     RCREG           equ	409	;# 
   249     0199                     RCREG1          equ	409	;# 
   250     019A                     TX1REG          equ	410	;# 
   251     019A                     TXREG1          equ	410	;# 
   252     019A                     TXREG           equ	410	;# 
   253     019B                     SP1BRG          equ	411	;# 
   254     019B                     SPBRG           equ	411	;# 
   255     019B                     SP1BRGL         equ	411	;# 
   256     019B                     SPBRG1          equ	411	;# 
   257     019B                     SPBRGL          equ	411	;# 
   258     019C                     SP1BRGH         equ	412	;# 
   259     019C                     SPBRGH          equ	412	;# 
   260     019C                     SPBRGH1         equ	412	;# 
   261     019D                     RC1STA          equ	413	;# 
   262     019D                     RCSTA1          equ	413	;# 
   263     019D                     RCSTA           equ	413	;# 
   264     019E                     TX1STA          equ	414	;# 
   265     019E                     TXSTA1          equ	414	;# 
   266     019E                     TXSTA           equ	414	;# 
   267     019F                     BAUD1CON        equ	415	;# 
   268     019F                     BAUDCON1        equ	415	;# 
   269     019F                     BAUDCTL1        equ	415	;# 
   270     019F                     BAUDCON         equ	415	;# 
   271     019F                     BAUDCTL         equ	415	;# 
   272     020C                     WPUA            equ	524	;# 
   273     020D                     WPUB            equ	525	;# 
   274     020E                     WPUC            equ	526	;# 
   275     0211                     SSP1BUF         equ	529	;# 
   276     0211                     SSPBUF          equ	529	;# 
   277     0212                     SSP1ADD         equ	530	;# 
   278     0212                     SSPADD          equ	530	;# 
   279     0213                     SSP1MSK         equ	531	;# 
   280     0213                     SSPMSK          equ	531	;# 
   281     0214                     SSP1STAT        equ	532	;# 
   282     0214                     SSPSTAT         equ	532	;# 
   283     0215                     SSP1CON1        equ	533	;# 
   284     0215                     SSPCON          equ	533	;# 
   285     0215                     SSPCON1         equ	533	;# 
   286     0215                     SSP1CON         equ	533	;# 
   287     0216                     SSP1CON2        equ	534	;# 
   288     0216                     SSPCON2         equ	534	;# 
   289     0217                     SSP1CON3        equ	535	;# 
   290     0217                     SSPCON3         equ	535	;# 
   291     0219                     SSP2BUF         equ	537	;# 
   292     021A                     SSP2ADD         equ	538	;# 
   293     021B                     SSP2MSK         equ	539	;# 
   294     021C                     SSP2STAT        equ	540	;# 
   295     021D                     SSP2CON1        equ	541	;# 
   296     021D                     SSP2CON         equ	541	;# 
   297     021E                     SSP2CON2        equ	542	;# 
   298     021F                     SSP2CON3        equ	543	;# 
   299     028C                     ODCONA          equ	652	;# 
   300     028D                     ODCONB          equ	653	;# 
   301     028E                     ODCONC          equ	654	;# 
   302     0291                     CCPR1           equ	657	;# 
   303     0291                     CCPR1L          equ	657	;# 
   304     0292                     CCPR1H          equ	658	;# 
   305     0293                     CCP1CON         equ	659	;# 
   306     0294                     CCP1CAP         equ	660	;# 
   307     0295                     CCPR2           equ	661	;# 
   308     0295                     CCPR2L          equ	661	;# 
   309     0296                     CCPR2H          equ	662	;# 
   310     0297                     CCP2CON         equ	663	;# 
   311     0298                     CCP2CAP         equ	664	;# 
   312     029F                     CCPTMRS         equ	671	;# 
   313     030C                     SLRCONA         equ	780	;# 
   314     030D                     SLRCONB         equ	781	;# 
   315     030E                     SLRCONC         equ	782	;# 
   316     0311                     CCPR3           equ	785	;# 
   317     0311                     CCPR3L          equ	785	;# 
   318     0312                     CCPR3H          equ	786	;# 
   319     0313                     CCP3CON         equ	787	;# 
   320     0314                     CCP3CAP         equ	788	;# 
   321     0315                     CCPR4           equ	789	;# 
   322     0315                     CCPR4L          equ	789	;# 
   323     0316                     CCPR4H          equ	790	;# 
   324     0317                     CCP4CON         equ	791	;# 
   325     0318                     CCP4CAP         equ	792	;# 
   326     038C                     INLVLA          equ	908	;# 
   327     038D                     INLVLB          equ	909	;# 
   328     038E                     INLVLC          equ	910	;# 
   329     0391                     IOCAP           equ	913	;# 
   330     0392                     IOCAN           equ	914	;# 
   331     0393                     IOCAF           equ	915	;# 
   332     0394                     IOCBP           equ	916	;# 
   333     0395                     IOCBN           equ	917	;# 
   334     0396                     IOCBF           equ	918	;# 
   335     0397                     IOCCP           equ	919	;# 
   336     0398                     IOCCN           equ	920	;# 
   337     0399                     IOCCF           equ	921	;# 
   338     039A                     CLKRCON         equ	922	;# 
   339     039C                     MDCON           equ	924	;# 
   340     039D                     MDSRC           equ	925	;# 
   341     039E                     MDCARH          equ	926	;# 
   342     039F                     MDCARL          equ	927	;# 
   343     0411                     TMR3            equ	1041	;# 
   344     0411                     TMR3L           equ	1041	;# 
   345     0412                     TMR3H           equ	1042	;# 
   346     0413                     T3CON           equ	1043	;# 
   347     0414                     T3GCON          equ	1044	;# 
   348     0415                     TMR4            equ	1045	;# 
   349     0416                     PR4             equ	1046	;# 
   350     0417                     T4CON           equ	1047	;# 
   351     0418                     TMR5            equ	1048	;# 
   352     0418                     TMR5L           equ	1048	;# 
   353     0419                     TMR5H           equ	1049	;# 
   354     041A                     T5CON           equ	1050	;# 
   355     041B                     T5GCON          equ	1051	;# 
   356     041C                     TMR6            equ	1052	;# 
   357     041D                     PR6             equ	1053	;# 
   358     041E                     T6CON           equ	1054	;# 
   359     041F                     CCDCON          equ	1055	;# 
   360     0498                     NCO1ACC         equ	1176	;# 
   361     0498                     NCO1ACCL        equ	1176	;# 
   362     0499                     NCO1ACCH        equ	1177	;# 
   363     049A                     NCO1ACCU        equ	1178	;# 
   364     049B                     NCO1INC         equ	1179	;# 
   365     049B                     NCO1INCL        equ	1179	;# 
   366     049C                     NCO1INCH        equ	1180	;# 
   367     049D                     NCO1INCU        equ	1181	;# 
   368     049E                     NCO1CON         equ	1182	;# 
   369     049F                     NCO1CLK         equ	1183	;# 
   370     0617                     PWM5DCL         equ	1559	;# 
   371     0618                     PWM5DCH         equ	1560	;# 
   372     0619                     PWM5CON         equ	1561	;# 
   373     0619                     PWM5CON0        equ	1561	;# 
   374     061A                     PWM6DCL         equ	1562	;# 
   375     061B                     PWM6DCH         equ	1563	;# 
   376     061C                     PWM6CON         equ	1564	;# 
   377     061C                     PWM6CON0        equ	1564	;# 
   378     061F                     PWMTMRS         equ	1567	;# 
   379     0691                     CWG1CLKCON      equ	1681	;# 
   380     0692                     CWG1DAT         equ	1682	;# 
   381     0693                     CWG1DBR         equ	1683	;# 
   382     0694                     CWG1DBF         equ	1684	;# 
   383     0695                     CWG1CON0        equ	1685	;# 
   384     0696                     CWG1CON1        equ	1686	;# 
   385     0697                     CWG1AS0         equ	1687	;# 
   386     0698                     CWG1AS1         equ	1688	;# 
   387     0699                     CWG1STR         equ	1689	;# 
   388     0711                     CWG2CLKCON      equ	1809	;# 
   389     0712                     CWG2DAT         equ	1810	;# 
   390     0713                     CWG2DBR         equ	1811	;# 
   391     0714                     CWG2DBF         equ	1812	;# 
   392     0715                     CWG2CON0        equ	1813	;# 
   393     0716                     CWG2CON1        equ	1814	;# 
   394     0717                     CWG2AS0         equ	1815	;# 
   395     0718                     CWG2AS1         equ	1816	;# 
   396     0719                     CWG2STR         equ	1817	;# 
   397     0891                     NVMADR          equ	2193	;# 
   398     0891                     EEADR           equ	2193	;# 
   399     0891                     PMADR           equ	2193	;# 
   400     0891                     NVMADRL         equ	2193	;# 
   401     0891                     EEADRL          equ	2193	;# 
   402     0891                     PMADRL          equ	2193	;# 
   403     0892                     NVMADRH         equ	2194	;# 
   404     0892                     EEADRH          equ	2194	;# 
   405     0892                     PMADRH          equ	2194	;# 
   406     0893                     NVMDAT          equ	2195	;# 
   407     0893                     EEDAT           equ	2195	;# 
   408     0893                     PMDAT           equ	2195	;# 
   409     0893                     NVMDATL         equ	2195	;# 
   410     0893                     EEDATL          equ	2195	;# 
   411     0893                     PMDATL          equ	2195	;# 
   412     0894                     NVMDATH         equ	2196	;# 
   413     0894                     EEDATH          equ	2196	;# 
   414     0894                     PMDATH          equ	2196	;# 
   415     0895                     NVMCON1         equ	2197	;# 
   416     0895                     EECON1          equ	2197	;# 
   417     0895                     PMCON1          equ	2197	;# 
   418     0896                     NVMCON2         equ	2198	;# 
   419     0896                     EECON2          equ	2198	;# 
   420     0896                     PMCON2          equ	2198	;# 
   421     089B                     PCON0           equ	2203	;# 
   422     0911                     PMD0            equ	2321	;# 
   423     0912                     PMD1            equ	2322	;# 
   424     0913                     PMD2            equ	2323	;# 
   425     0914                     PMD3            equ	2324	;# 
   426     0915                     PMD4            equ	2325	;# 
   427     0916                     PMD5            equ	2326	;# 
   428     0918                     CPUDOZE         equ	2328	;# 
   429     0919                     OSCCON1         equ	2329	;# 
   430     091A                     OSCCON2         equ	2330	;# 
   431     091B                     OSCCON3         equ	2331	;# 
   432     091C                     OSCSTAT1        equ	2332	;# 
   433     091D                     OSCEN           equ	2333	;# 
   434     091E                     OSCTUNE         equ	2334	;# 
   435     091F                     OSCFRQ          equ	2335	;# 
   436     0E0F                     PPSLOCK         equ	3599	;# 
   437     0E10                     INTPPS          equ	3600	;# 
   438     0E11                     T0CKIPPS        equ	3601	;# 
   439     0E12                     T1CKIPPS        equ	3602	;# 
   440     0E13                     T1GPPS          equ	3603	;# 
   441     0E14                     CCP1PPS         equ	3604	;# 
   442     0E15                     CCP2PPS         equ	3605	;# 
   443     0E16                     CCP3PPS         equ	3606	;# 
   444     0E17                     CCP4PPS         equ	3607	;# 
   445     0E18                     CWG1PPS         equ	3608	;# 
   446     0E19                     CWG2PPS         equ	3609	;# 
   447     0E1A                     MDCIN1PPS       equ	3610	;# 
   448     0E1B                     MDCIN2PPS       equ	3611	;# 
   449     0E1C                     MDMINPPS        equ	3612	;# 
   450     0E1D                     SSP2CLKPPS      equ	3613	;# 
   451     0E1E                     SSP2DATPPS      equ	3614	;# 
   452     0E1F                     SSP2SSPPS       equ	3615	;# 
   453     0E20                     SSP1CLKPPS      equ	3616	;# 
   454     0E21                     SSP1DATPPS      equ	3617	;# 
   455     0E22                     SSP1SSPPS       equ	3618	;# 
   456     0E24                     RXPPS           equ	3620	;# 
   457     0E25                     TXPPS           equ	3621	;# 
   458     0E28                     CLCIN0PPS       equ	3624	;# 
   459     0E29                     CLCIN1PPS       equ	3625	;# 
   460     0E2A                     CLCIN2PPS       equ	3626	;# 
   461     0E2B                     CLCIN3PPS       equ	3627	;# 
   462     0E2C                     T3CKIPPS        equ	3628	;# 
   463     0E2D                     T3GPPS          equ	3629	;# 
   464     0E2E                     T5CKIPPS        equ	3630	;# 
   465     0E2F                     T5GPPS          equ	3631	;# 
   466     0E90                     RA0PPS          equ	3728	;# 
   467     0E91                     RA1PPS          equ	3729	;# 
   468     0E92                     RA2PPS          equ	3730	;# 
   469     0E94                     RA4PPS          equ	3732	;# 
   470     0E95                     RA5PPS          equ	3733	;# 
   471     0E9C                     RB4PPS          equ	3740	;# 
   472     0E9D                     RB5PPS          equ	3741	;# 
   473     0E9E                     RB6PPS          equ	3742	;# 
   474     0E9F                     RB7PPS          equ	3743	;# 
   475     0EA0                     RC0PPS          equ	3744	;# 
   476     0EA1                     RC1PPS          equ	3745	;# 
   477     0EA2                     RC2PPS          equ	3746	;# 
   478     0EA3                     RC3PPS          equ	3747	;# 
   479     0EA4                     RC4PPS          equ	3748	;# 
   480     0EA5                     RC5PPS          equ	3749	;# 
   481     0EA6                     RC6PPS          equ	3750	;# 
   482     0EA7                     RC7PPS          equ	3751	;# 
   483     0F0F                     CLCDATA         equ	3855	;# 
   484     0F10                     CLC1CON         equ	3856	;# 
   485     0F11                     CLC1POL         equ	3857	;# 
   486     0F12                     CLC1SEL0        equ	3858	;# 
   487     0F13                     CLC1SEL1        equ	3859	;# 
   488     0F14                     CLC1SEL2        equ	3860	;# 
   489     0F15                     CLC1SEL3        equ	3861	;# 
   490     0F16                     CLC1GLS0        equ	3862	;# 
   491     0F17                     CLC1GLS1        equ	3863	;# 
   492     0F18                     CLC1GLS2        equ	3864	;# 
   493     0F19                     CLC1GLS3        equ	3865	;# 
   494     0F1A                     CLC2CON         equ	3866	;# 
   495     0F1B                     CLC2POL         equ	3867	;# 
   496     0F1C                     CLC2SEL0        equ	3868	;# 
   497     0F1D                     CLC2SEL1        equ	3869	;# 
   498     0F1E                     CLC2SEL2        equ	3870	;# 
   499     0F1F                     CLC2SEL3        equ	3871	;# 
   500     0F20                     CLC2GLS0        equ	3872	;# 
   501     0F21                     CLC2GLS1        equ	3873	;# 
   502     0F22                     CLC2GLS2        equ	3874	;# 
   503     0F23                     CLC2GLS3        equ	3875	;# 
   504     0F24                     CLC3CON         equ	3876	;# 
   505     0F25                     CLC3POL         equ	3877	;# 
   506     0F26                     CLC3SEL0        equ	3878	;# 
   507     0F27                     CLC3SEL1        equ	3879	;# 
   508     0F28                     CLC3SEL2        equ	3880	;# 
   509     0F29                     CLC3SEL3        equ	3881	;# 
   510     0F2A                     CLC3GLS0        equ	3882	;# 
   511     0F2B                     CLC3GLS1        equ	3883	;# 
   512     0F2C                     CLC3GLS2        equ	3884	;# 
   513     0F2D                     CLC3GLS3        equ	3885	;# 
   514     0F2E                     CLC4CON         equ	3886	;# 
   515     0F2F                     CLC4POL         equ	3887	;# 
   516     0F30                     CLC4SEL0        equ	3888	;# 
   517     0F31                     CLC4SEL1        equ	3889	;# 
   518     0F32                     CLC4SEL2        equ	3890	;# 
   519     0F33                     CLC4SEL3        equ	3891	;# 
   520     0F34                     CLC4GLS0        equ	3892	;# 
   521     0F35                     CLC4GLS1        equ	3893	;# 
   522     0F36                     CLC4GLS2        equ	3894	;# 
   523     0F37                     CLC4GLS3        equ	3895	;# 
   524     0FE4                     STATUS_SHAD     equ	4068	;# 
   525     0FE5                     WREG_SHAD       equ	4069	;# 
   526     0FE6                     BSR_SHAD        equ	4070	;# 
   527     0FE7                     PCLATH_SHAD     equ	4071	;# 
   528     0FE8                     FSR0L_SHAD      equ	4072	;# 
   529     0FE9                     FSR0H_SHAD      equ	4073	;# 
   530     0FEA                     FSR1L_SHAD      equ	4074	;# 
   531     0FEB                     FSR1H_SHAD      equ	4075	;# 
   532     0FED                     STKPTR          equ	4077	;# 
   533     0FEE                     TOSL            equ	4078	;# 
   534     0FEF                     TOSH            equ	4079	;# 
   535     0000                     INDF0           equ	0	;# 
   536     0001                     INDF1           equ	1	;# 
   537     0002                     PCL             equ	2	;# 
   538     0003                     STATUS          equ	3	;# 
   539     0004                     FSR0L           equ	4	;# 
   540     0005                     FSR0H           equ	5	;# 
   541     0006                     FSR1L           equ	6	;# 
   542     0007                     FSR1H           equ	7	;# 
   543     0008                     BSR             equ	8	;# 
   544     0009                     WREG            equ	9	;# 
   545     000A                     PCLATH          equ	10	;# 
   546     000B                     INTCON          equ	11	;# 
   547     000C                     PORTA           equ	12	;# 
   548     000D                     PORTB           equ	13	;# 
   549     000E                     PORTC           equ	14	;# 
   550     0010                     PIR0            equ	16	;# 
   551     0011                     PIR1            equ	17	;# 
   552     0012                     PIR2            equ	18	;# 
   553     0013                     PIR3            equ	19	;# 
   554     0014                     PIR4            equ	20	;# 
   555     0015                     TMR0L           equ	21	;# 
   556     0015                     TMR0            equ	21	;# 
   557     0016                     TMR0H           equ	22	;# 
   558     0016                     PR0             equ	22	;# 
   559     0017                     T0CON0          equ	23	;# 
   560     0018                     T0CON1          equ	24	;# 
   561     0019                     TMR1            equ	25	;# 
   562     0019                     TMR1L           equ	25	;# 
   563     001A                     TMR1H           equ	26	;# 
   564     001B                     T1CON           equ	27	;# 
   565     001C                     T1GCON          equ	28	;# 
   566     001D                     TMR2            equ	29	;# 
   567     001E                     PR2             equ	30	;# 
   568     001F                     T2CON           equ	31	;# 
   569     008C                     TRISA           equ	140	;# 
   570     008D                     TRISB           equ	141	;# 
   571     008E                     TRISC           equ	142	;# 
   572     0090                     PIE0            equ	144	;# 
   573     0091                     PIE1            equ	145	;# 
   574     0092                     PIE2            equ	146	;# 
   575     0093                     PIE3            equ	147	;# 
   576     0094                     PIE4            equ	148	;# 
   577     0097                     WDTCON          equ	151	;# 
   578     009B                     ADRES           equ	155	;# 
   579     009B                     ADRESL          equ	155	;# 
   580     009C                     ADRESH          equ	156	;# 
   581     009D                     ADCON0          equ	157	;# 
   582     009E                     ADCON1          equ	158	;# 
   583     009F                     ADACT           equ	159	;# 
   584     010C                     LATA            equ	268	;# 
   585     010D                     LATB            equ	269	;# 
   586     010E                     LATC            equ	270	;# 
   587     0111                     CM1CON0         equ	273	;# 
   588     0112                     CM1CON1         equ	274	;# 
   589     0113                     CM2CON0         equ	275	;# 
   590     0114                     CM2CON1         equ	276	;# 
   591     0115                     CMOUT           equ	277	;# 
   592     0116                     BORCON          equ	278	;# 
   593     0117                     FVRCON          equ	279	;# 
   594     0118                     DACCON0         equ	280	;# 
   595     0119                     DACCON1         equ	281	;# 
   596     018C                     ANSELA          equ	396	;# 
   597     018D                     ANSELB          equ	397	;# 
   598     018E                     ANSELC          equ	398	;# 
   599     0197                     VREGCON         equ	407	;# 
   600     0199                     RC1REG          equ	409	;# 
   601     0199                     RCREG           equ	409	;# 
   602     0199                     RCREG1          equ	409	;# 
   603     019A                     TX1REG          equ	410	;# 
   604     019A                     TXREG1          equ	410	;# 
   605     019A                     TXREG           equ	410	;# 
   606     019B                     SP1BRG          equ	411	;# 
   607     019B                     SPBRG           equ	411	;# 
   608     019B                     SP1BRGL         equ	411	;# 
   609     019B                     SPBRG1          equ	411	;# 
   610     019B                     SPBRGL          equ	411	;# 
   611     019C                     SP1BRGH         equ	412	;# 
   612     019C                     SPBRGH          equ	412	;# 
   613     019C                     SPBRGH1         equ	412	;# 
   614     019D                     RC1STA          equ	413	;# 
   615     019D                     RCSTA1          equ	413	;# 
   616     019D                     RCSTA           equ	413	;# 
   617     019E                     TX1STA          equ	414	;# 
   618     019E                     TXSTA1          equ	414	;# 
   619     019E                     TXSTA           equ	414	;# 
   620     019F                     BAUD1CON        equ	415	;# 
   621     019F                     BAUDCON1        equ	415	;# 
   622     019F                     BAUDCTL1        equ	415	;# 
   623     019F                     BAUDCON         equ	415	;# 
   624     019F                     BAUDCTL         equ	415	;# 
   625     020C                     WPUA            equ	524	;# 
   626     020D                     WPUB            equ	525	;# 
   627     020E                     WPUC            equ	526	;# 
   628     0211                     SSP1BUF         equ	529	;# 
   629     0211                     SSPBUF          equ	529	;# 
   630     0212                     SSP1ADD         equ	530	;# 
   631     0212                     SSPADD          equ	530	;# 
   632     0213                     SSP1MSK         equ	531	;# 
   633     0213                     SSPMSK          equ	531	;# 
   634     0214                     SSP1STAT        equ	532	;# 
   635     0214                     SSPSTAT         equ	532	;# 
   636     0215                     SSP1CON1        equ	533	;# 
   637     0215                     SSPCON          equ	533	;# 
   638     0215                     SSPCON1         equ	533	;# 
   639     0215                     SSP1CON         equ	533	;# 
   640     0216                     SSP1CON2        equ	534	;# 
   641     0216                     SSPCON2         equ	534	;# 
   642     0217                     SSP1CON3        equ	535	;# 
   643     0217                     SSPCON3         equ	535	;# 
   644     0219                     SSP2BUF         equ	537	;# 
   645     021A                     SSP2ADD         equ	538	;# 
   646     021B                     SSP2MSK         equ	539	;# 
   647     021C                     SSP2STAT        equ	540	;# 
   648     021D                     SSP2CON1        equ	541	;# 
   649     021D                     SSP2CON         equ	541	;# 
   650     021E                     SSP2CON2        equ	542	;# 
   651     021F                     SSP2CON3        equ	543	;# 
   652     028C                     ODCONA          equ	652	;# 
   653     028D                     ODCONB          equ	653	;# 
   654     028E                     ODCONC          equ	654	;# 
   655     0291                     CCPR1           equ	657	;# 
   656     0291                     CCPR1L          equ	657	;# 
   657     0292                     CCPR1H          equ	658	;# 
   658     0293                     CCP1CON         equ	659	;# 
   659     0294                     CCP1CAP         equ	660	;# 
   660     0295                     CCPR2           equ	661	;# 
   661     0295                     CCPR2L          equ	661	;# 
   662     0296                     CCPR2H          equ	662	;# 
   663     0297                     CCP2CON         equ	663	;# 
   664     0298                     CCP2CAP         equ	664	;# 
   665     029F                     CCPTMRS         equ	671	;# 
   666     030C                     SLRCONA         equ	780	;# 
   667     030D                     SLRCONB         equ	781	;# 
   668     030E                     SLRCONC         equ	782	;# 
   669     0311                     CCPR3           equ	785	;# 
   670     0311                     CCPR3L          equ	785	;# 
   671     0312                     CCPR3H          equ	786	;# 
   672     0313                     CCP3CON         equ	787	;# 
   673     0314                     CCP3CAP         equ	788	;# 
   674     0315                     CCPR4           equ	789	;# 
   675     0315                     CCPR4L          equ	789	;# 
   676     0316                     CCPR4H          equ	790	;# 
   677     0317                     CCP4CON         equ	791	;# 
   678     0318                     CCP4CAP         equ	792	;# 
   679     038C                     INLVLA          equ	908	;# 
   680     038D                     INLVLB          equ	909	;# 
   681     038E                     INLVLC          equ	910	;# 
   682     0391                     IOCAP           equ	913	;# 
   683     0392                     IOCAN           equ	914	;# 
   684     0393                     IOCAF           equ	915	;# 
   685     0394                     IOCBP           equ	916	;# 
   686     0395                     IOCBN           equ	917	;# 
   687     0396                     IOCBF           equ	918	;# 
   688     0397                     IOCCP           equ	919	;# 
   689     0398                     IOCCN           equ	920	;# 
   690     0399                     IOCCF           equ	921	;# 
   691     039A                     CLKRCON         equ	922	;# 
   692     039C                     MDCON           equ	924	;# 
   693     039D                     MDSRC           equ	925	;# 
   694     039E                     MDCARH          equ	926	;# 
   695     039F                     MDCARL          equ	927	;# 
   696     0411                     TMR3            equ	1041	;# 
   697     0411                     TMR3L           equ	1041	;# 
   698     0412                     TMR3H           equ	1042	;# 
   699     0413                     T3CON           equ	1043	;# 
   700     0414                     T3GCON          equ	1044	;# 
   701     0415                     TMR4            equ	1045	;# 
   702     0416                     PR4             equ	1046	;# 
   703     0417                     T4CON           equ	1047	;# 
   704     0418                     TMR5            equ	1048	;# 
   705     0418                     TMR5L           equ	1048	;# 
   706     0419                     TMR5H           equ	1049	;# 
   707     041A                     T5CON           equ	1050	;# 
   708     041B                     T5GCON          equ	1051	;# 
   709     041C                     TMR6            equ	1052	;# 
   710     041D                     PR6             equ	1053	;# 
   711     041E                     T6CON           equ	1054	;# 
   712     041F                     CCDCON          equ	1055	;# 
   713     0498                     NCO1ACC         equ	1176	;# 
   714     0498                     NCO1ACCL        equ	1176	;# 
   715     0499                     NCO1ACCH        equ	1177	;# 
   716     049A                     NCO1ACCU        equ	1178	;# 
   717     049B                     NCO1INC         equ	1179	;# 
   718     049B                     NCO1INCL        equ	1179	;# 
   719     049C                     NCO1INCH        equ	1180	;# 
   720     049D                     NCO1INCU        equ	1181	;# 
   721     049E                     NCO1CON         equ	1182	;# 
   722     049F                     NCO1CLK         equ	1183	;# 
   723     0617                     PWM5DCL         equ	1559	;# 
   724     0618                     PWM5DCH         equ	1560	;# 
   725     0619                     PWM5CON         equ	1561	;# 
   726     0619                     PWM5CON0        equ	1561	;# 
   727     061A                     PWM6DCL         equ	1562	;# 
   728     061B                     PWM6DCH         equ	1563	;# 
   729     061C                     PWM6CON         equ	1564	;# 
   730     061C                     PWM6CON0        equ	1564	;# 
   731     061F                     PWMTMRS         equ	1567	;# 
   732     0691                     CWG1CLKCON      equ	1681	;# 
   733     0692                     CWG1DAT         equ	1682	;# 
   734     0693                     CWG1DBR         equ	1683	;# 
   735     0694                     CWG1DBF         equ	1684	;# 
   736     0695                     CWG1CON0        equ	1685	;# 
   737     0696                     CWG1CON1        equ	1686	;# 
   738     0697                     CWG1AS0         equ	1687	;# 
   739     0698                     CWG1AS1         equ	1688	;# 
   740     0699                     CWG1STR         equ	1689	;# 
   741     0711                     CWG2CLKCON      equ	1809	;# 
   742     0712                     CWG2DAT         equ	1810	;# 
   743     0713                     CWG2DBR         equ	1811	;# 
   744     0714                     CWG2DBF         equ	1812	;# 
   745     0715                     CWG2CON0        equ	1813	;# 
   746     0716                     CWG2CON1        equ	1814	;# 
   747     0717                     CWG2AS0         equ	1815	;# 
   748     0718                     CWG2AS1         equ	1816	;# 
   749     0719                     CWG2STR         equ	1817	;# 
   750     0891                     NVMADR          equ	2193	;# 
   751     0891                     EEADR           equ	2193	;# 
   752     0891                     PMADR           equ	2193	;# 
   753     0891                     NVMADRL         equ	2193	;# 
   754     0891                     EEADRL          equ	2193	;# 
   755     0891                     PMADRL          equ	2193	;# 
   756     0892                     NVMADRH         equ	2194	;# 
   757     0892                     EEADRH          equ	2194	;# 
   758     0892                     PMADRH          equ	2194	;# 
   759     0893                     NVMDAT          equ	2195	;# 
   760     0893                     EEDAT           equ	2195	;# 
   761     0893                     PMDAT           equ	2195	;# 
   762     0893                     NVMDATL         equ	2195	;# 
   763     0893                     EEDATL          equ	2195	;# 
   764     0893                     PMDATL          equ	2195	;# 
   765     0894                     NVMDATH         equ	2196	;# 
   766     0894                     EEDATH          equ	2196	;# 
   767     0894                     PMDATH          equ	2196	;# 
   768     0895                     NVMCON1         equ	2197	;# 
   769     0895                     EECON1          equ	2197	;# 
   770     0895                     PMCON1          equ	2197	;# 
   771     0896                     NVMCON2         equ	2198	;# 
   772     0896                     EECON2          equ	2198	;# 
   773     0896                     PMCON2          equ	2198	;# 
   774     089B                     PCON0           equ	2203	;# 
   775     0911                     PMD0            equ	2321	;# 
   776     0912                     PMD1            equ	2322	;# 
   777     0913                     PMD2            equ	2323	;# 
   778     0914                     PMD3            equ	2324	;# 
   779     0915                     PMD4            equ	2325	;# 
   780     0916                     PMD5            equ	2326	;# 
   781     0918                     CPUDOZE         equ	2328	;# 
   782     0919                     OSCCON1         equ	2329	;# 
   783     091A                     OSCCON2         equ	2330	;# 
   784     091B                     OSCCON3         equ	2331	;# 
   785     091C                     OSCSTAT1        equ	2332	;# 
   786     091D                     OSCEN           equ	2333	;# 
   787     091E                     OSCTUNE         equ	2334	;# 
   788     091F                     OSCFRQ          equ	2335	;# 
   789     0E0F                     PPSLOCK         equ	3599	;# 
   790     0E10                     INTPPS          equ	3600	;# 
   791     0E11                     T0CKIPPS        equ	3601	;# 
   792     0E12                     T1CKIPPS        equ	3602	;# 
   793     0E13                     T1GPPS          equ	3603	;# 
   794     0E14                     CCP1PPS         equ	3604	;# 
   795     0E15                     CCP2PPS         equ	3605	;# 
   796     0E16                     CCP3PPS         equ	3606	;# 
   797     0E17                     CCP4PPS         equ	3607	;# 
   798     0E18                     CWG1PPS         equ	3608	;# 
   799     0E19                     CWG2PPS         equ	3609	;# 
   800     0E1A                     MDCIN1PPS       equ	3610	;# 
   801     0E1B                     MDCIN2PPS       equ	3611	;# 
   802     0E1C                     MDMINPPS        equ	3612	;# 
   803     0E1D                     SSP2CLKPPS      equ	3613	;# 
   804     0E1E                     SSP2DATPPS      equ	3614	;# 
   805     0E1F                     SSP2SSPPS       equ	3615	;# 
   806     0E20                     SSP1CLKPPS      equ	3616	;# 
   807     0E21                     SSP1DATPPS      equ	3617	;# 
   808     0E22                     SSP1SSPPS       equ	3618	;# 
   809     0E24                     RXPPS           equ	3620	;# 
   810     0E25                     TXPPS           equ	3621	;# 
   811     0E28                     CLCIN0PPS       equ	3624	;# 
   812     0E29                     CLCIN1PPS       equ	3625	;# 
   813     0E2A                     CLCIN2PPS       equ	3626	;# 
   814     0E2B                     CLCIN3PPS       equ	3627	;# 
   815     0E2C                     T3CKIPPS        equ	3628	;# 
   816     0E2D                     T3GPPS          equ	3629	;# 
   817     0E2E                     T5CKIPPS        equ	3630	;# 
   818     0E2F                     T5GPPS          equ	3631	;# 
   819     0E90                     RA0PPS          equ	3728	;# 
   820     0E91                     RA1PPS          equ	3729	;# 
   821     0E92                     RA2PPS          equ	3730	;# 
   822     0E94                     RA4PPS          equ	3732	;# 
   823     0E95                     RA5PPS          equ	3733	;# 
   824     0E9C                     RB4PPS          equ	3740	;# 
   825     0E9D                     RB5PPS          equ	3741	;# 
   826     0E9E                     RB6PPS          equ	3742	;# 
   827     0E9F                     RB7PPS          equ	3743	;# 
   828     0EA0                     RC0PPS          equ	3744	;# 
   829     0EA1                     RC1PPS          equ	3745	;# 
   830     0EA2                     RC2PPS          equ	3746	;# 
   831     0EA3                     RC3PPS          equ	3747	;# 
   832     0EA4                     RC4PPS          equ	3748	;# 
   833     0EA5                     RC5PPS          equ	3749	;# 
   834     0EA6                     RC6PPS          equ	3750	;# 
   835     0EA7                     RC7PPS          equ	3751	;# 
   836     0F0F                     CLCDATA         equ	3855	;# 
   837     0F10                     CLC1CON         equ	3856	;# 
   838     0F11                     CLC1POL         equ	3857	;# 
   839     0F12                     CLC1SEL0        equ	3858	;# 
   840     0F13                     CLC1SEL1        equ	3859	;# 
   841     0F14                     CLC1SEL2        equ	3860	;# 
   842     0F15                     CLC1SEL3        equ	3861	;# 
   843     0F16                     CLC1GLS0        equ	3862	;# 
   844     0F17                     CLC1GLS1        equ	3863	;# 
   845     0F18                     CLC1GLS2        equ	3864	;# 
   846     0F19                     CLC1GLS3        equ	3865	;# 
   847     0F1A                     CLC2CON         equ	3866	;# 
   848     0F1B                     CLC2POL         equ	3867	;# 
   849     0F1C                     CLC2SEL0        equ	3868	;# 
   850     0F1D                     CLC2SEL1        equ	3869	;# 
   851     0F1E                     CLC2SEL2        equ	3870	;# 
   852     0F1F                     CLC2SEL3        equ	3871	;# 
   853     0F20                     CLC2GLS0        equ	3872	;# 
   854     0F21                     CLC2GLS1        equ	3873	;# 
   855     0F22                     CLC2GLS2        equ	3874	;# 
   856     0F23                     CLC2GLS3        equ	3875	;# 
   857     0F24                     CLC3CON         equ	3876	;# 
   858     0F25                     CLC3POL         equ	3877	;# 
   859     0F26                     CLC3SEL0        equ	3878	;# 
   860     0F27                     CLC3SEL1        equ	3879	;# 
   861     0F28                     CLC3SEL2        equ	3880	;# 
   862     0F29                     CLC3SEL3        equ	3881	;# 
   863     0F2A                     CLC3GLS0        equ	3882	;# 
   864     0F2B                     CLC3GLS1        equ	3883	;# 
   865     0F2C                     CLC3GLS2        equ	3884	;# 
   866     0F2D                     CLC3GLS3        equ	3885	;# 
   867     0F2E                     CLC4CON         equ	3886	;# 
   868     0F2F                     CLC4POL         equ	3887	;# 
   869     0F30                     CLC4SEL0        equ	3888	;# 
   870     0F31                     CLC4SEL1        equ	3889	;# 
   871     0F32                     CLC4SEL2        equ	3890	;# 
   872     0F33                     CLC4SEL3        equ	3891	;# 
   873     0F34                     CLC4GLS0        equ	3892	;# 
   874     0F35                     CLC4GLS1        equ	3893	;# 
   875     0F36                     CLC4GLS2        equ	3894	;# 
   876     0F37                     CLC4GLS3        equ	3895	;# 
   877     0FE4                     STATUS_SHAD     equ	4068	;# 
   878     0FE5                     WREG_SHAD       equ	4069	;# 
   879     0FE6                     BSR_SHAD        equ	4070	;# 
   880     0FE7                     PCLATH_SHAD     equ	4071	;# 
   881     0FE8                     FSR0L_SHAD      equ	4072	;# 
   882     0FE9                     FSR0H_SHAD      equ	4073	;# 
   883     0FEA                     FSR1L_SHAD      equ	4074	;# 
   884     0FEB                     FSR1H_SHAD      equ	4075	;# 
   885     0FED                     STKPTR          equ	4077	;# 
   886     0FEE                     TOSL            equ	4078	;# 
   887     0FEF                     TOSH            equ	4079	;# 
   888     0000                     INDF0           equ	0	;# 
   889     0001                     INDF1           equ	1	;# 
   890     0002                     PCL             equ	2	;# 
   891     0003                     STATUS          equ	3	;# 
   892     0004                     FSR0L           equ	4	;# 
   893     0005                     FSR0H           equ	5	;# 
   894     0006                     FSR1L           equ	6	;# 
   895     0007                     FSR1H           equ	7	;# 
   896     0008                     BSR             equ	8	;# 
   897     0009                     WREG            equ	9	;# 
   898     000A                     PCLATH          equ	10	;# 
   899     000B                     INTCON          equ	11	;# 
   900     000C                     PORTA           equ	12	;# 
   901     000D                     PORTB           equ	13	;# 
   902     000E                     PORTC           equ	14	;# 
   903     0010                     PIR0            equ	16	;# 
   904     0011                     PIR1            equ	17	;# 
   905     0012                     PIR2            equ	18	;# 
   906     0013                     PIR3            equ	19	;# 
   907     0014                     PIR4            equ	20	;# 
   908     0015                     TMR0L           equ	21	;# 
   909     0015                     TMR0            equ	21	;# 
   910     0016                     TMR0H           equ	22	;# 
   911     0016                     PR0             equ	22	;# 
   912     0017                     T0CON0          equ	23	;# 
   913     0018                     T0CON1          equ	24	;# 
   914     0019                     TMR1            equ	25	;# 
   915     0019                     TMR1L           equ	25	;# 
   916     001A                     TMR1H           equ	26	;# 
   917     001B                     T1CON           equ	27	;# 
   918     001C                     T1GCON          equ	28	;# 
   919     001D                     TMR2            equ	29	;# 
   920     001E                     PR2             equ	30	;# 
   921     001F                     T2CON           equ	31	;# 
   922     008C                     TRISA           equ	140	;# 
   923     008D                     TRISB           equ	141	;# 
   924     008E                     TRISC           equ	142	;# 
   925     0090                     PIE0            equ	144	;# 
   926     0091                     PIE1            equ	145	;# 
   927     0092                     PIE2            equ	146	;# 
   928     0093                     PIE3            equ	147	;# 
   929     0094                     PIE4            equ	148	;# 
   930     0097                     WDTCON          equ	151	;# 
   931     009B                     ADRES           equ	155	;# 
   932     009B                     ADRESL          equ	155	;# 
   933     009C                     ADRESH          equ	156	;# 
   934     009D                     ADCON0          equ	157	;# 
   935     009E                     ADCON1          equ	158	;# 
   936     009F                     ADACT           equ	159	;# 
   937     010C                     LATA            equ	268	;# 
   938     010D                     LATB            equ	269	;# 
   939     010E                     LATC            equ	270	;# 
   940     0111                     CM1CON0         equ	273	;# 
   941     0112                     CM1CON1         equ	274	;# 
   942     0113                     CM2CON0         equ	275	;# 
   943     0114                     CM2CON1         equ	276	;# 
   944     0115                     CMOUT           equ	277	;# 
   945     0116                     BORCON          equ	278	;# 
   946     0117                     FVRCON          equ	279	;# 
   947     0118                     DACCON0         equ	280	;# 
   948     0119                     DACCON1         equ	281	;# 
   949     018C                     ANSELA          equ	396	;# 
   950     018D                     ANSELB          equ	397	;# 
   951     018E                     ANSELC          equ	398	;# 
   952     0197                     VREGCON         equ	407	;# 
   953     0199                     RC1REG          equ	409	;# 
   954     0199                     RCREG           equ	409	;# 
   955     0199                     RCREG1          equ	409	;# 
   956     019A                     TX1REG          equ	410	;# 
   957     019A                     TXREG1          equ	410	;# 
   958     019A                     TXREG           equ	410	;# 
   959     019B                     SP1BRG          equ	411	;# 
   960     019B                     SPBRG           equ	411	;# 
   961     019B                     SP1BRGL         equ	411	;# 
   962     019B                     SPBRG1          equ	411	;# 
   963     019B                     SPBRGL          equ	411	;# 
   964     019C                     SP1BRGH         equ	412	;# 
   965     019C                     SPBRGH          equ	412	;# 
   966     019C                     SPBRGH1         equ	412	;# 
   967     019D                     RC1STA          equ	413	;# 
   968     019D                     RCSTA1          equ	413	;# 
   969     019D                     RCSTA           equ	413	;# 
   970     019E                     TX1STA          equ	414	;# 
   971     019E                     TXSTA1          equ	414	;# 
   972     019E                     TXSTA           equ	414	;# 
   973     019F                     BAUD1CON        equ	415	;# 
   974     019F                     BAUDCON1        equ	415	;# 
   975     019F                     BAUDCTL1        equ	415	;# 
   976     019F                     BAUDCON         equ	415	;# 
   977     019F                     BAUDCTL         equ	415	;# 
   978     020C                     WPUA            equ	524	;# 
   979     020D                     WPUB            equ	525	;# 
   980     020E                     WPUC            equ	526	;# 
   981     0211                     SSP1BUF         equ	529	;# 
   982     0211                     SSPBUF          equ	529	;# 
   983     0212                     SSP1ADD         equ	530	;# 
   984     0212                     SSPADD          equ	530	;# 
   985     0213                     SSP1MSK         equ	531	;# 
   986     0213                     SSPMSK          equ	531	;# 
   987     0214                     SSP1STAT        equ	532	;# 
   988     0214                     SSPSTAT         equ	532	;# 
   989     0215                     SSP1CON1        equ	533	;# 
   990     0215                     SSPCON          equ	533	;# 
   991     0215                     SSPCON1         equ	533	;# 
   992     0215                     SSP1CON         equ	533	;# 
   993     0216                     SSP1CON2        equ	534	;# 
   994     0216                     SSPCON2         equ	534	;# 
   995     0217                     SSP1CON3        equ	535	;# 
   996     0217                     SSPCON3         equ	535	;# 
   997     0219                     SSP2BUF         equ	537	;# 
   998     021A                     SSP2ADD         equ	538	;# 
   999     021B                     SSP2MSK         equ	539	;# 
  1000     021C                     SSP2STAT        equ	540	;# 
  1001     021D                     SSP2CON1        equ	541	;# 
  1002     021D                     SSP2CON         equ	541	;# 
  1003     021E                     SSP2CON2        equ	542	;# 
  1004     021F                     SSP2CON3        equ	543	;# 
  1005     028C                     ODCONA          equ	652	;# 
  1006     028D                     ODCONB          equ	653	;# 
  1007     028E                     ODCONC          equ	654	;# 
  1008     0291                     CCPR1           equ	657	;# 
  1009     0291                     CCPR1L          equ	657	;# 
  1010     0292                     CCPR1H          equ	658	;# 
  1011     0293                     CCP1CON         equ	659	;# 
  1012     0294                     CCP1CAP         equ	660	;# 
  1013     0295                     CCPR2           equ	661	;# 
  1014     0295                     CCPR2L          equ	661	;# 
  1015     0296                     CCPR2H          equ	662	;# 
  1016     0297                     CCP2CON         equ	663	;# 
  1017     0298                     CCP2CAP         equ	664	;# 
  1018     029F                     CCPTMRS         equ	671	;# 
  1019     030C                     SLRCONA         equ	780	;# 
  1020     030D                     SLRCONB         equ	781	;# 
  1021     030E                     SLRCONC         equ	782	;# 
  1022     0311                     CCPR3           equ	785	;# 
  1023     0311                     CCPR3L          equ	785	;# 
  1024     0312                     CCPR3H          equ	786	;# 
  1025     0313                     CCP3CON         equ	787	;# 
  1026     0314                     CCP3CAP         equ	788	;# 
  1027     0315                     CCPR4           equ	789	;# 
  1028     0315                     CCPR4L          equ	789	;# 
  1029     0316                     CCPR4H          equ	790	;# 
  1030     0317                     CCP4CON         equ	791	;# 
  1031     0318                     CCP4CAP         equ	792	;# 
  1032     038C                     INLVLA          equ	908	;# 
  1033     038D                     INLVLB          equ	909	;# 
  1034     038E                     INLVLC          equ	910	;# 
  1035     0391                     IOCAP           equ	913	;# 
  1036     0392                     IOCAN           equ	914	;# 
  1037     0393                     IOCAF           equ	915	;# 
  1038     0394                     IOCBP           equ	916	;# 
  1039     0395                     IOCBN           equ	917	;# 
  1040     0396                     IOCBF           equ	918	;# 
  1041     0397                     IOCCP           equ	919	;# 
  1042     0398                     IOCCN           equ	920	;# 
  1043     0399                     IOCCF           equ	921	;# 
  1044     039A                     CLKRCON         equ	922	;# 
  1045     039C                     MDCON           equ	924	;# 
  1046     039D                     MDSRC           equ	925	;# 
  1047     039E                     MDCARH          equ	926	;# 
  1048     039F                     MDCARL          equ	927	;# 
  1049     0411                     TMR3            equ	1041	;# 
  1050     0411                     TMR3L           equ	1041	;# 
  1051     0412                     TMR3H           equ	1042	;# 
  1052     0413                     T3CON           equ	1043	;# 
  1053     0414                     T3GCON          equ	1044	;# 
  1054     0415                     TMR4            equ	1045	;# 
  1055     0416                     PR4             equ	1046	;# 
  1056     0417                     T4CON           equ	1047	;# 
  1057     0418                     TMR5            equ	1048	;# 
  1058     0418                     TMR5L           equ	1048	;# 
  1059     0419                     TMR5H           equ	1049	;# 
  1060     041A                     T5CON           equ	1050	;# 
  1061     041B                     T5GCON          equ	1051	;# 
  1062     041C                     TMR6            equ	1052	;# 
  1063     041D                     PR6             equ	1053	;# 
  1064     041E                     T6CON           equ	1054	;# 
  1065     041F                     CCDCON          equ	1055	;# 
  1066     0498                     NCO1ACC         equ	1176	;# 
  1067     0498                     NCO1ACCL        equ	1176	;# 
  1068     0499                     NCO1ACCH        equ	1177	;# 
  1069     049A                     NCO1ACCU        equ	1178	;# 
  1070     049B                     NCO1INC         equ	1179	;# 
  1071     049B                     NCO1INCL        equ	1179	;# 
  1072     049C                     NCO1INCH        equ	1180	;# 
  1073     049D                     NCO1INCU        equ	1181	;# 
  1074     049E                     NCO1CON         equ	1182	;# 
  1075     049F                     NCO1CLK         equ	1183	;# 
  1076     0617                     PWM5DCL         equ	1559	;# 
  1077     0618                     PWM5DCH         equ	1560	;# 
  1078     0619                     PWM5CON         equ	1561	;# 
  1079     0619                     PWM5CON0        equ	1561	;# 
  1080     061A                     PWM6DCL         equ	1562	;# 
  1081     061B                     PWM6DCH         equ	1563	;# 
  1082     061C                     PWM6CON         equ	1564	;# 
  1083     061C                     PWM6CON0        equ	1564	;# 
  1084     061F                     PWMTMRS         equ	1567	;# 
  1085     0691                     CWG1CLKCON      equ	1681	;# 
  1086     0692                     CWG1DAT         equ	1682	;# 
  1087     0693                     CWG1DBR         equ	1683	;# 
  1088     0694                     CWG1DBF         equ	1684	;# 
  1089     0695                     CWG1CON0        equ	1685	;# 
  1090     0696                     CWG1CON1        equ	1686	;# 
  1091     0697                     CWG1AS0         equ	1687	;# 
  1092     0698                     CWG1AS1         equ	1688	;# 
  1093     0699                     CWG1STR         equ	1689	;# 
  1094     0711                     CWG2CLKCON      equ	1809	;# 
  1095     0712                     CWG2DAT         equ	1810	;# 
  1096     0713                     CWG2DBR         equ	1811	;# 
  1097     0714                     CWG2DBF         equ	1812	;# 
  1098     0715                     CWG2CON0        equ	1813	;# 
  1099     0716                     CWG2CON1        equ	1814	;# 
  1100     0717                     CWG2AS0         equ	1815	;# 
  1101     0718                     CWG2AS1         equ	1816	;# 
  1102     0719                     CWG2STR         equ	1817	;# 
  1103     0891                     NVMADR          equ	2193	;# 
  1104     0891                     EEADR           equ	2193	;# 
  1105     0891                     PMADR           equ	2193	;# 
  1106     0891                     NVMADRL         equ	2193	;# 
  1107     0891                     EEADRL          equ	2193	;# 
  1108     0891                     PMADRL          equ	2193	;# 
  1109     0892                     NVMADRH         equ	2194	;# 
  1110     0892                     EEADRH          equ	2194	;# 
  1111     0892                     PMADRH          equ	2194	;# 
  1112     0893                     NVMDAT          equ	2195	;# 
  1113     0893                     EEDAT           equ	2195	;# 
  1114     0893                     PMDAT           equ	2195	;# 
  1115     0893                     NVMDATL         equ	2195	;# 
  1116     0893                     EEDATL          equ	2195	;# 
  1117     0893                     PMDATL          equ	2195	;# 
  1118     0894                     NVMDATH         equ	2196	;# 
  1119     0894                     EEDATH          equ	2196	;# 
  1120     0894                     PMDATH          equ	2196	;# 
  1121     0895                     NVMCON1         equ	2197	;# 
  1122     0895                     EECON1          equ	2197	;# 
  1123     0895                     PMCON1          equ	2197	;# 
  1124     0896                     NVMCON2         equ	2198	;# 
  1125     0896                     EECON2          equ	2198	;# 
  1126     0896                     PMCON2          equ	2198	;# 
  1127     089B                     PCON0           equ	2203	;# 
  1128     0911                     PMD0            equ	2321	;# 
  1129     0912                     PMD1            equ	2322	;# 
  1130     0913                     PMD2            equ	2323	;# 
  1131     0914                     PMD3            equ	2324	;# 
  1132     0915                     PMD4            equ	2325	;# 
  1133     0916                     PMD5            equ	2326	;# 
  1134     0918                     CPUDOZE         equ	2328	;# 
  1135     0919                     OSCCON1         equ	2329	;# 
  1136     091A                     OSCCON2         equ	2330	;# 
  1137     091B                     OSCCON3         equ	2331	;# 
  1138     091C                     OSCSTAT1        equ	2332	;# 
  1139     091D                     OSCEN           equ	2333	;# 
  1140     091E                     OSCTUNE         equ	2334	;# 
  1141     091F                     OSCFRQ          equ	2335	;# 
  1142     0E0F                     PPSLOCK         equ	3599	;# 
  1143     0E10                     INTPPS          equ	3600	;# 
  1144     0E11                     T0CKIPPS        equ	3601	;# 
  1145     0E12                     T1CKIPPS        equ	3602	;# 
  1146     0E13                     T1GPPS          equ	3603	;# 
  1147     0E14                     CCP1PPS         equ	3604	;# 
  1148     0E15                     CCP2PPS         equ	3605	;# 
  1149     0E16                     CCP3PPS         equ	3606	;# 
  1150     0E17                     CCP4PPS         equ	3607	;# 
  1151     0E18                     CWG1PPS         equ	3608	;# 
  1152     0E19                     CWG2PPS         equ	3609	;# 
  1153     0E1A                     MDCIN1PPS       equ	3610	;# 
  1154     0E1B                     MDCIN2PPS       equ	3611	;# 
  1155     0E1C                     MDMINPPS        equ	3612	;# 
  1156     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1157     0E1E                     SSP2DATPPS      equ	3614	;# 
  1158     0E1F                     SSP2SSPPS       equ	3615	;# 
  1159     0E20                     SSP1CLKPPS      equ	3616	;# 
  1160     0E21                     SSP1DATPPS      equ	3617	;# 
  1161     0E22                     SSP1SSPPS       equ	3618	;# 
  1162     0E24                     RXPPS           equ	3620	;# 
  1163     0E25                     TXPPS           equ	3621	;# 
  1164     0E28                     CLCIN0PPS       equ	3624	;# 
  1165     0E29                     CLCIN1PPS       equ	3625	;# 
  1166     0E2A                     CLCIN2PPS       equ	3626	;# 
  1167     0E2B                     CLCIN3PPS       equ	3627	;# 
  1168     0E2C                     T3CKIPPS        equ	3628	;# 
  1169     0E2D                     T3GPPS          equ	3629	;# 
  1170     0E2E                     T5CKIPPS        equ	3630	;# 
  1171     0E2F                     T5GPPS          equ	3631	;# 
  1172     0E90                     RA0PPS          equ	3728	;# 
  1173     0E91                     RA1PPS          equ	3729	;# 
  1174     0E92                     RA2PPS          equ	3730	;# 
  1175     0E94                     RA4PPS          equ	3732	;# 
  1176     0E95                     RA5PPS          equ	3733	;# 
  1177     0E9C                     RB4PPS          equ	3740	;# 
  1178     0E9D                     RB5PPS          equ	3741	;# 
  1179     0E9E                     RB6PPS          equ	3742	;# 
  1180     0E9F                     RB7PPS          equ	3743	;# 
  1181     0EA0                     RC0PPS          equ	3744	;# 
  1182     0EA1                     RC1PPS          equ	3745	;# 
  1183     0EA2                     RC2PPS          equ	3746	;# 
  1184     0EA3                     RC3PPS          equ	3747	;# 
  1185     0EA4                     RC4PPS          equ	3748	;# 
  1186     0EA5                     RC5PPS          equ	3749	;# 
  1187     0EA6                     RC6PPS          equ	3750	;# 
  1188     0EA7                     RC7PPS          equ	3751	;# 
  1189     0F0F                     CLCDATA         equ	3855	;# 
  1190     0F10                     CLC1CON         equ	3856	;# 
  1191     0F11                     CLC1POL         equ	3857	;# 
  1192     0F12                     CLC1SEL0        equ	3858	;# 
  1193     0F13                     CLC1SEL1        equ	3859	;# 
  1194     0F14                     CLC1SEL2        equ	3860	;# 
  1195     0F15                     CLC1SEL3        equ	3861	;# 
  1196     0F16                     CLC1GLS0        equ	3862	;# 
  1197     0F17                     CLC1GLS1        equ	3863	;# 
  1198     0F18                     CLC1GLS2        equ	3864	;# 
  1199     0F19                     CLC1GLS3        equ	3865	;# 
  1200     0F1A                     CLC2CON         equ	3866	;# 
  1201     0F1B                     CLC2POL         equ	3867	;# 
  1202     0F1C                     CLC2SEL0        equ	3868	;# 
  1203     0F1D                     CLC2SEL1        equ	3869	;# 
  1204     0F1E                     CLC2SEL2        equ	3870	;# 
  1205     0F1F                     CLC2SEL3        equ	3871	;# 
  1206     0F20                     CLC2GLS0        equ	3872	;# 
  1207     0F21                     CLC2GLS1        equ	3873	;# 
  1208     0F22                     CLC2GLS2        equ	3874	;# 
  1209     0F23                     CLC2GLS3        equ	3875	;# 
  1210     0F24                     CLC3CON         equ	3876	;# 
  1211     0F25                     CLC3POL         equ	3877	;# 
  1212     0F26                     CLC3SEL0        equ	3878	;# 
  1213     0F27                     CLC3SEL1        equ	3879	;# 
  1214     0F28                     CLC3SEL2        equ	3880	;# 
  1215     0F29                     CLC3SEL3        equ	3881	;# 
  1216     0F2A                     CLC3GLS0        equ	3882	;# 
  1217     0F2B                     CLC3GLS1        equ	3883	;# 
  1218     0F2C                     CLC3GLS2        equ	3884	;# 
  1219     0F2D                     CLC3GLS3        equ	3885	;# 
  1220     0F2E                     CLC4CON         equ	3886	;# 
  1221     0F2F                     CLC4POL         equ	3887	;# 
  1222     0F30                     CLC4SEL0        equ	3888	;# 
  1223     0F31                     CLC4SEL1        equ	3889	;# 
  1224     0F32                     CLC4SEL2        equ	3890	;# 
  1225     0F33                     CLC4SEL3        equ	3891	;# 
  1226     0F34                     CLC4GLS0        equ	3892	;# 
  1227     0F35                     CLC4GLS1        equ	3893	;# 
  1228     0F36                     CLC4GLS2        equ	3894	;# 
  1229     0F37                     CLC4GLS3        equ	3895	;# 
  1230     0FE4                     STATUS_SHAD     equ	4068	;# 
  1231     0FE5                     WREG_SHAD       equ	4069	;# 
  1232     0FE6                     BSR_SHAD        equ	4070	;# 
  1233     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1234     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1235     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1236     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1237     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1238     0FED                     STKPTR          equ	4077	;# 
  1239     0FEE                     TOSL            equ	4078	;# 
  1240     0FEF                     TOSH            equ	4079	;# 
  1241     0000                     INDF0           equ	0	;# 
  1242     0001                     INDF1           equ	1	;# 
  1243     0002                     PCL             equ	2	;# 
  1244     0003                     STATUS          equ	3	;# 
  1245     0004                     FSR0L           equ	4	;# 
  1246     0005                     FSR0H           equ	5	;# 
  1247     0006                     FSR1L           equ	6	;# 
  1248     0007                     FSR1H           equ	7	;# 
  1249     0008                     BSR             equ	8	;# 
  1250     0009                     WREG            equ	9	;# 
  1251     000A                     PCLATH          equ	10	;# 
  1252     000B                     INTCON          equ	11	;# 
  1253     000C                     PORTA           equ	12	;# 
  1254     000D                     PORTB           equ	13	;# 
  1255     000E                     PORTC           equ	14	;# 
  1256     0010                     PIR0            equ	16	;# 
  1257     0011                     PIR1            equ	17	;# 
  1258     0012                     PIR2            equ	18	;# 
  1259     0013                     PIR3            equ	19	;# 
  1260     0014                     PIR4            equ	20	;# 
  1261     0015                     TMR0L           equ	21	;# 
  1262     0015                     TMR0            equ	21	;# 
  1263     0016                     TMR0H           equ	22	;# 
  1264     0016                     PR0             equ	22	;# 
  1265     0017                     T0CON0          equ	23	;# 
  1266     0018                     T0CON1          equ	24	;# 
  1267     0019                     TMR1            equ	25	;# 
  1268     0019                     TMR1L           equ	25	;# 
  1269     001A                     TMR1H           equ	26	;# 
  1270     001B                     T1CON           equ	27	;# 
  1271     001C                     T1GCON          equ	28	;# 
  1272     001D                     TMR2            equ	29	;# 
  1273     001E                     PR2             equ	30	;# 
  1274     001F                     T2CON           equ	31	;# 
  1275     008C                     TRISA           equ	140	;# 
  1276     008D                     TRISB           equ	141	;# 
  1277     008E                     TRISC           equ	142	;# 
  1278     0090                     PIE0            equ	144	;# 
  1279     0091                     PIE1            equ	145	;# 
  1280     0092                     PIE2            equ	146	;# 
  1281     0093                     PIE3            equ	147	;# 
  1282     0094                     PIE4            equ	148	;# 
  1283     0097                     WDTCON          equ	151	;# 
  1284     009B                     ADRES           equ	155	;# 
  1285     009B                     ADRESL          equ	155	;# 
  1286     009C                     ADRESH          equ	156	;# 
  1287     009D                     ADCON0          equ	157	;# 
  1288     009E                     ADCON1          equ	158	;# 
  1289     009F                     ADACT           equ	159	;# 
  1290     010C                     LATA            equ	268	;# 
  1291     010D                     LATB            equ	269	;# 
  1292     010E                     LATC            equ	270	;# 
  1293     0111                     CM1CON0         equ	273	;# 
  1294     0112                     CM1CON1         equ	274	;# 
  1295     0113                     CM2CON0         equ	275	;# 
  1296     0114                     CM2CON1         equ	276	;# 
  1297     0115                     CMOUT           equ	277	;# 
  1298     0116                     BORCON          equ	278	;# 
  1299     0117                     FVRCON          equ	279	;# 
  1300     0118                     DACCON0         equ	280	;# 
  1301     0119                     DACCON1         equ	281	;# 
  1302     018C                     ANSELA          equ	396	;# 
  1303     018D                     ANSELB          equ	397	;# 
  1304     018E                     ANSELC          equ	398	;# 
  1305     0197                     VREGCON         equ	407	;# 
  1306     0199                     RC1REG          equ	409	;# 
  1307     0199                     RCREG           equ	409	;# 
  1308     0199                     RCREG1          equ	409	;# 
  1309     019A                     TX1REG          equ	410	;# 
  1310     019A                     TXREG1          equ	410	;# 
  1311     019A                     TXREG           equ	410	;# 
  1312     019B                     SP1BRG          equ	411	;# 
  1313     019B                     SPBRG           equ	411	;# 
  1314     019B                     SP1BRGL         equ	411	;# 
  1315     019B                     SPBRG1          equ	411	;# 
  1316     019B                     SPBRGL          equ	411	;# 
  1317     019C                     SP1BRGH         equ	412	;# 
  1318     019C                     SPBRGH          equ	412	;# 
  1319     019C                     SPBRGH1         equ	412	;# 
  1320     019D                     RC1STA          equ	413	;# 
  1321     019D                     RCSTA1          equ	413	;# 
  1322     019D                     RCSTA           equ	413	;# 
  1323     019E                     TX1STA          equ	414	;# 
  1324     019E                     TXSTA1          equ	414	;# 
  1325     019E                     TXSTA           equ	414	;# 
  1326     019F                     BAUD1CON        equ	415	;# 
  1327     019F                     BAUDCON1        equ	415	;# 
  1328     019F                     BAUDCTL1        equ	415	;# 
  1329     019F                     BAUDCON         equ	415	;# 
  1330     019F                     BAUDCTL         equ	415	;# 
  1331     020C                     WPUA            equ	524	;# 
  1332     020D                     WPUB            equ	525	;# 
  1333     020E                     WPUC            equ	526	;# 
  1334     0211                     SSP1BUF         equ	529	;# 
  1335     0211                     SSPBUF          equ	529	;# 
  1336     0212                     SSP1ADD         equ	530	;# 
  1337     0212                     SSPADD          equ	530	;# 
  1338     0213                     SSP1MSK         equ	531	;# 
  1339     0213                     SSPMSK          equ	531	;# 
  1340     0214                     SSP1STAT        equ	532	;# 
  1341     0214                     SSPSTAT         equ	532	;# 
  1342     0215                     SSP1CON1        equ	533	;# 
  1343     0215                     SSPCON          equ	533	;# 
  1344     0215                     SSPCON1         equ	533	;# 
  1345     0215                     SSP1CON         equ	533	;# 
  1346     0216                     SSP1CON2        equ	534	;# 
  1347     0216                     SSPCON2         equ	534	;# 
  1348     0217                     SSP1CON3        equ	535	;# 
  1349     0217                     SSPCON3         equ	535	;# 
  1350     0219                     SSP2BUF         equ	537	;# 
  1351     021A                     SSP2ADD         equ	538	;# 
  1352     021B                     SSP2MSK         equ	539	;# 
  1353     021C                     SSP2STAT        equ	540	;# 
  1354     021D                     SSP2CON1        equ	541	;# 
  1355     021D                     SSP2CON         equ	541	;# 
  1356     021E                     SSP2CON2        equ	542	;# 
  1357     021F                     SSP2CON3        equ	543	;# 
  1358     028C                     ODCONA          equ	652	;# 
  1359     028D                     ODCONB          equ	653	;# 
  1360     028E                     ODCONC          equ	654	;# 
  1361     0291                     CCPR1           equ	657	;# 
  1362     0291                     CCPR1L          equ	657	;# 
  1363     0292                     CCPR1H          equ	658	;# 
  1364     0293                     CCP1CON         equ	659	;# 
  1365     0294                     CCP1CAP         equ	660	;# 
  1366     0295                     CCPR2           equ	661	;# 
  1367     0295                     CCPR2L          equ	661	;# 
  1368     0296                     CCPR2H          equ	662	;# 
  1369     0297                     CCP2CON         equ	663	;# 
  1370     0298                     CCP2CAP         equ	664	;# 
  1371     029F                     CCPTMRS         equ	671	;# 
  1372     030C                     SLRCONA         equ	780	;# 
  1373     030D                     SLRCONB         equ	781	;# 
  1374     030E                     SLRCONC         equ	782	;# 
  1375     0311                     CCPR3           equ	785	;# 
  1376     0311                     CCPR3L          equ	785	;# 
  1377     0312                     CCPR3H          equ	786	;# 
  1378     0313                     CCP3CON         equ	787	;# 
  1379     0314                     CCP3CAP         equ	788	;# 
  1380     0315                     CCPR4           equ	789	;# 
  1381     0315                     CCPR4L          equ	789	;# 
  1382     0316                     CCPR4H          equ	790	;# 
  1383     0317                     CCP4CON         equ	791	;# 
  1384     0318                     CCP4CAP         equ	792	;# 
  1385     038C                     INLVLA          equ	908	;# 
  1386     038D                     INLVLB          equ	909	;# 
  1387     038E                     INLVLC          equ	910	;# 
  1388     0391                     IOCAP           equ	913	;# 
  1389     0392                     IOCAN           equ	914	;# 
  1390     0393                     IOCAF           equ	915	;# 
  1391     0394                     IOCBP           equ	916	;# 
  1392     0395                     IOCBN           equ	917	;# 
  1393     0396                     IOCBF           equ	918	;# 
  1394     0397                     IOCCP           equ	919	;# 
  1395     0398                     IOCCN           equ	920	;# 
  1396     0399                     IOCCF           equ	921	;# 
  1397     039A                     CLKRCON         equ	922	;# 
  1398     039C                     MDCON           equ	924	;# 
  1399     039D                     MDSRC           equ	925	;# 
  1400     039E                     MDCARH          equ	926	;# 
  1401     039F                     MDCARL          equ	927	;# 
  1402     0411                     TMR3            equ	1041	;# 
  1403     0411                     TMR3L           equ	1041	;# 
  1404     0412                     TMR3H           equ	1042	;# 
  1405     0413                     T3CON           equ	1043	;# 
  1406     0414                     T3GCON          equ	1044	;# 
  1407     0415                     TMR4            equ	1045	;# 
  1408     0416                     PR4             equ	1046	;# 
  1409     0417                     T4CON           equ	1047	;# 
  1410     0418                     TMR5            equ	1048	;# 
  1411     0418                     TMR5L           equ	1048	;# 
  1412     0419                     TMR5H           equ	1049	;# 
  1413     041A                     T5CON           equ	1050	;# 
  1414     041B                     T5GCON          equ	1051	;# 
  1415     041C                     TMR6            equ	1052	;# 
  1416     041D                     PR6             equ	1053	;# 
  1417     041E                     T6CON           equ	1054	;# 
  1418     041F                     CCDCON          equ	1055	;# 
  1419     0498                     NCO1ACC         equ	1176	;# 
  1420     0498                     NCO1ACCL        equ	1176	;# 
  1421     0499                     NCO1ACCH        equ	1177	;# 
  1422     049A                     NCO1ACCU        equ	1178	;# 
  1423     049B                     NCO1INC         equ	1179	;# 
  1424     049B                     NCO1INCL        equ	1179	;# 
  1425     049C                     NCO1INCH        equ	1180	;# 
  1426     049D                     NCO1INCU        equ	1181	;# 
  1427     049E                     NCO1CON         equ	1182	;# 
  1428     049F                     NCO1CLK         equ	1183	;# 
  1429     0617                     PWM5DCL         equ	1559	;# 
  1430     0618                     PWM5DCH         equ	1560	;# 
  1431     0619                     PWM5CON         equ	1561	;# 
  1432     0619                     PWM5CON0        equ	1561	;# 
  1433     061A                     PWM6DCL         equ	1562	;# 
  1434     061B                     PWM6DCH         equ	1563	;# 
  1435     061C                     PWM6CON         equ	1564	;# 
  1436     061C                     PWM6CON0        equ	1564	;# 
  1437     061F                     PWMTMRS         equ	1567	;# 
  1438     0691                     CWG1CLKCON      equ	1681	;# 
  1439     0692                     CWG1DAT         equ	1682	;# 
  1440     0693                     CWG1DBR         equ	1683	;# 
  1441     0694                     CWG1DBF         equ	1684	;# 
  1442     0695                     CWG1CON0        equ	1685	;# 
  1443     0696                     CWG1CON1        equ	1686	;# 
  1444     0697                     CWG1AS0         equ	1687	;# 
  1445     0698                     CWG1AS1         equ	1688	;# 
  1446     0699                     CWG1STR         equ	1689	;# 
  1447     0711                     CWG2CLKCON      equ	1809	;# 
  1448     0712                     CWG2DAT         equ	1810	;# 
  1449     0713                     CWG2DBR         equ	1811	;# 
  1450     0714                     CWG2DBF         equ	1812	;# 
  1451     0715                     CWG2CON0        equ	1813	;# 
  1452     0716                     CWG2CON1        equ	1814	;# 
  1453     0717                     CWG2AS0         equ	1815	;# 
  1454     0718                     CWG2AS1         equ	1816	;# 
  1455     0719                     CWG2STR         equ	1817	;# 
  1456     0891                     NVMADR          equ	2193	;# 
  1457     0891                     EEADR           equ	2193	;# 
  1458     0891                     PMADR           equ	2193	;# 
  1459     0891                     NVMADRL         equ	2193	;# 
  1460     0891                     EEADRL          equ	2193	;# 
  1461     0891                     PMADRL          equ	2193	;# 
  1462     0892                     NVMADRH         equ	2194	;# 
  1463     0892                     EEADRH          equ	2194	;# 
  1464     0892                     PMADRH          equ	2194	;# 
  1465     0893                     NVMDAT          equ	2195	;# 
  1466     0893                     EEDAT           equ	2195	;# 
  1467     0893                     PMDAT           equ	2195	;# 
  1468     0893                     NVMDATL         equ	2195	;# 
  1469     0893                     EEDATL          equ	2195	;# 
  1470     0893                     PMDATL          equ	2195	;# 
  1471     0894                     NVMDATH         equ	2196	;# 
  1472     0894                     EEDATH          equ	2196	;# 
  1473     0894                     PMDATH          equ	2196	;# 
  1474     0895                     NVMCON1         equ	2197	;# 
  1475     0895                     EECON1          equ	2197	;# 
  1476     0895                     PMCON1          equ	2197	;# 
  1477     0896                     NVMCON2         equ	2198	;# 
  1478     0896                     EECON2          equ	2198	;# 
  1479     0896                     PMCON2          equ	2198	;# 
  1480     089B                     PCON0           equ	2203	;# 
  1481     0911                     PMD0            equ	2321	;# 
  1482     0912                     PMD1            equ	2322	;# 
  1483     0913                     PMD2            equ	2323	;# 
  1484     0914                     PMD3            equ	2324	;# 
  1485     0915                     PMD4            equ	2325	;# 
  1486     0916                     PMD5            equ	2326	;# 
  1487     0918                     CPUDOZE         equ	2328	;# 
  1488     0919                     OSCCON1         equ	2329	;# 
  1489     091A                     OSCCON2         equ	2330	;# 
  1490     091B                     OSCCON3         equ	2331	;# 
  1491     091C                     OSCSTAT1        equ	2332	;# 
  1492     091D                     OSCEN           equ	2333	;# 
  1493     091E                     OSCTUNE         equ	2334	;# 
  1494     091F                     OSCFRQ          equ	2335	;# 
  1495     0E0F                     PPSLOCK         equ	3599	;# 
  1496     0E10                     INTPPS          equ	3600	;# 
  1497     0E11                     T0CKIPPS        equ	3601	;# 
  1498     0E12                     T1CKIPPS        equ	3602	;# 
  1499     0E13                     T1GPPS          equ	3603	;# 
  1500     0E14                     CCP1PPS         equ	3604	;# 
  1501     0E15                     CCP2PPS         equ	3605	;# 
  1502     0E16                     CCP3PPS         equ	3606	;# 
  1503     0E17                     CCP4PPS         equ	3607	;# 
  1504     0E18                     CWG1PPS         equ	3608	;# 
  1505     0E19                     CWG2PPS         equ	3609	;# 
  1506     0E1A                     MDCIN1PPS       equ	3610	;# 
  1507     0E1B                     MDCIN2PPS       equ	3611	;# 
  1508     0E1C                     MDMINPPS        equ	3612	;# 
  1509     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1510     0E1E                     SSP2DATPPS      equ	3614	;# 
  1511     0E1F                     SSP2SSPPS       equ	3615	;# 
  1512     0E20                     SSP1CLKPPS      equ	3616	;# 
  1513     0E21                     SSP1DATPPS      equ	3617	;# 
  1514     0E22                     SSP1SSPPS       equ	3618	;# 
  1515     0E24                     RXPPS           equ	3620	;# 
  1516     0E25                     TXPPS           equ	3621	;# 
  1517     0E28                     CLCIN0PPS       equ	3624	;# 
  1518     0E29                     CLCIN1PPS       equ	3625	;# 
  1519     0E2A                     CLCIN2PPS       equ	3626	;# 
  1520     0E2B                     CLCIN3PPS       equ	3627	;# 
  1521     0E2C                     T3CKIPPS        equ	3628	;# 
  1522     0E2D                     T3GPPS          equ	3629	;# 
  1523     0E2E                     T5CKIPPS        equ	3630	;# 
  1524     0E2F                     T5GPPS          equ	3631	;# 
  1525     0E90                     RA0PPS          equ	3728	;# 
  1526     0E91                     RA1PPS          equ	3729	;# 
  1527     0E92                     RA2PPS          equ	3730	;# 
  1528     0E94                     RA4PPS          equ	3732	;# 
  1529     0E95                     RA5PPS          equ	3733	;# 
  1530     0E9C                     RB4PPS          equ	3740	;# 
  1531     0E9D                     RB5PPS          equ	3741	;# 
  1532     0E9E                     RB6PPS          equ	3742	;# 
  1533     0E9F                     RB7PPS          equ	3743	;# 
  1534     0EA0                     RC0PPS          equ	3744	;# 
  1535     0EA1                     RC1PPS          equ	3745	;# 
  1536     0EA2                     RC2PPS          equ	3746	;# 
  1537     0EA3                     RC3PPS          equ	3747	;# 
  1538     0EA4                     RC4PPS          equ	3748	;# 
  1539     0EA5                     RC5PPS          equ	3749	;# 
  1540     0EA6                     RC6PPS          equ	3750	;# 
  1541     0EA7                     RC7PPS          equ	3751	;# 
  1542     0F0F                     CLCDATA         equ	3855	;# 
  1543     0F10                     CLC1CON         equ	3856	;# 
  1544     0F11                     CLC1POL         equ	3857	;# 
  1545     0F12                     CLC1SEL0        equ	3858	;# 
  1546     0F13                     CLC1SEL1        equ	3859	;# 
  1547     0F14                     CLC1SEL2        equ	3860	;# 
  1548     0F15                     CLC1SEL3        equ	3861	;# 
  1549     0F16                     CLC1GLS0        equ	3862	;# 
  1550     0F17                     CLC1GLS1        equ	3863	;# 
  1551     0F18                     CLC1GLS2        equ	3864	;# 
  1552     0F19                     CLC1GLS3        equ	3865	;# 
  1553     0F1A                     CLC2CON         equ	3866	;# 
  1554     0F1B                     CLC2POL         equ	3867	;# 
  1555     0F1C                     CLC2SEL0        equ	3868	;# 
  1556     0F1D                     CLC2SEL1        equ	3869	;# 
  1557     0F1E                     CLC2SEL2        equ	3870	;# 
  1558     0F1F                     CLC2SEL3        equ	3871	;# 
  1559     0F20                     CLC2GLS0        equ	3872	;# 
  1560     0F21                     CLC2GLS1        equ	3873	;# 
  1561     0F22                     CLC2GLS2        equ	3874	;# 
  1562     0F23                     CLC2GLS3        equ	3875	;# 
  1563     0F24                     CLC3CON         equ	3876	;# 
  1564     0F25                     CLC3POL         equ	3877	;# 
  1565     0F26                     CLC3SEL0        equ	3878	;# 
  1566     0F27                     CLC3SEL1        equ	3879	;# 
  1567     0F28                     CLC3SEL2        equ	3880	;# 
  1568     0F29                     CLC3SEL3        equ	3881	;# 
  1569     0F2A                     CLC3GLS0        equ	3882	;# 
  1570     0F2B                     CLC3GLS1        equ	3883	;# 
  1571     0F2C                     CLC3GLS2        equ	3884	;# 
  1572     0F2D                     CLC3GLS3        equ	3885	;# 
  1573     0F2E                     CLC4CON         equ	3886	;# 
  1574     0F2F                     CLC4POL         equ	3887	;# 
  1575     0F30                     CLC4SEL0        equ	3888	;# 
  1576     0F31                     CLC4SEL1        equ	3889	;# 
  1577     0F32                     CLC4SEL2        equ	3890	;# 
  1578     0F33                     CLC4SEL3        equ	3891	;# 
  1579     0F34                     CLC4GLS0        equ	3892	;# 
  1580     0F35                     CLC4GLS1        equ	3893	;# 
  1581     0F36                     CLC4GLS2        equ	3894	;# 
  1582     0F37                     CLC4GLS3        equ	3895	;# 
  1583     0FE4                     STATUS_SHAD     equ	4068	;# 
  1584     0FE5                     WREG_SHAD       equ	4069	;# 
  1585     0FE6                     BSR_SHAD        equ	4070	;# 
  1586     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1587     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1588     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1589     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1590     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1591     0FED                     STKPTR          equ	4077	;# 
  1592     0FEE                     TOSL            equ	4078	;# 
  1593     0FEF                     TOSH            equ	4079	;# 
  1594     0000                     INDF0           equ	0	;# 
  1595     0001                     INDF1           equ	1	;# 
  1596     0002                     PCL             equ	2	;# 
  1597     0003                     STATUS          equ	3	;# 
  1598     0004                     FSR0L           equ	4	;# 
  1599     0005                     FSR0H           equ	5	;# 
  1600     0006                     FSR1L           equ	6	;# 
  1601     0007                     FSR1H           equ	7	;# 
  1602     0008                     BSR             equ	8	;# 
  1603     0009                     WREG            equ	9	;# 
  1604     000A                     PCLATH          equ	10	;# 
  1605     000B                     INTCON          equ	11	;# 
  1606     000C                     PORTA           equ	12	;# 
  1607     000D                     PORTB           equ	13	;# 
  1608     000E                     PORTC           equ	14	;# 
  1609     0010                     PIR0            equ	16	;# 
  1610     0011                     PIR1            equ	17	;# 
  1611     0012                     PIR2            equ	18	;# 
  1612     0013                     PIR3            equ	19	;# 
  1613     0014                     PIR4            equ	20	;# 
  1614     0015                     TMR0L           equ	21	;# 
  1615     0015                     TMR0            equ	21	;# 
  1616     0016                     TMR0H           equ	22	;# 
  1617     0016                     PR0             equ	22	;# 
  1618     0017                     T0CON0          equ	23	;# 
  1619     0018                     T0CON1          equ	24	;# 
  1620     0019                     TMR1            equ	25	;# 
  1621     0019                     TMR1L           equ	25	;# 
  1622     001A                     TMR1H           equ	26	;# 
  1623     001B                     T1CON           equ	27	;# 
  1624     001C                     T1GCON          equ	28	;# 
  1625     001D                     TMR2            equ	29	;# 
  1626     001E                     PR2             equ	30	;# 
  1627     001F                     T2CON           equ	31	;# 
  1628     008C                     TRISA           equ	140	;# 
  1629     008D                     TRISB           equ	141	;# 
  1630     008E                     TRISC           equ	142	;# 
  1631     0090                     PIE0            equ	144	;# 
  1632     0091                     PIE1            equ	145	;# 
  1633     0092                     PIE2            equ	146	;# 
  1634     0093                     PIE3            equ	147	;# 
  1635     0094                     PIE4            equ	148	;# 
  1636     0097                     WDTCON          equ	151	;# 
  1637     009B                     ADRES           equ	155	;# 
  1638     009B                     ADRESL          equ	155	;# 
  1639     009C                     ADRESH          equ	156	;# 
  1640     009D                     ADCON0          equ	157	;# 
  1641     009E                     ADCON1          equ	158	;# 
  1642     009F                     ADACT           equ	159	;# 
  1643     010C                     LATA            equ	268	;# 
  1644     010D                     LATB            equ	269	;# 
  1645     010E                     LATC            equ	270	;# 
  1646     0111                     CM1CON0         equ	273	;# 
  1647     0112                     CM1CON1         equ	274	;# 
  1648     0113                     CM2CON0         equ	275	;# 
  1649     0114                     CM2CON1         equ	276	;# 
  1650     0115                     CMOUT           equ	277	;# 
  1651     0116                     BORCON          equ	278	;# 
  1652     0117                     FVRCON          equ	279	;# 
  1653     0118                     DACCON0         equ	280	;# 
  1654     0119                     DACCON1         equ	281	;# 
  1655     018C                     ANSELA          equ	396	;# 
  1656     018D                     ANSELB          equ	397	;# 
  1657     018E                     ANSELC          equ	398	;# 
  1658     0197                     VREGCON         equ	407	;# 
  1659     0199                     RC1REG          equ	409	;# 
  1660     0199                     RCREG           equ	409	;# 
  1661     0199                     RCREG1          equ	409	;# 
  1662     019A                     TX1REG          equ	410	;# 
  1663     019A                     TXREG1          equ	410	;# 
  1664     019A                     TXREG           equ	410	;# 
  1665     019B                     SP1BRG          equ	411	;# 
  1666     019B                     SPBRG           equ	411	;# 
  1667     019B                     SP1BRGL         equ	411	;# 
  1668     019B                     SPBRG1          equ	411	;# 
  1669     019B                     SPBRGL          equ	411	;# 
  1670     019C                     SP1BRGH         equ	412	;# 
  1671     019C                     SPBRGH          equ	412	;# 
  1672     019C                     SPBRGH1         equ	412	;# 
  1673     019D                     RC1STA          equ	413	;# 
  1674     019D                     RCSTA1          equ	413	;# 
  1675     019D                     RCSTA           equ	413	;# 
  1676     019E                     TX1STA          equ	414	;# 
  1677     019E                     TXSTA1          equ	414	;# 
  1678     019E                     TXSTA           equ	414	;# 
  1679     019F                     BAUD1CON        equ	415	;# 
  1680     019F                     BAUDCON1        equ	415	;# 
  1681     019F                     BAUDCTL1        equ	415	;# 
  1682     019F                     BAUDCON         equ	415	;# 
  1683     019F                     BAUDCTL         equ	415	;# 
  1684     020C                     WPUA            equ	524	;# 
  1685     020D                     WPUB            equ	525	;# 
  1686     020E                     WPUC            equ	526	;# 
  1687     0211                     SSP1BUF         equ	529	;# 
  1688     0211                     SSPBUF          equ	529	;# 
  1689     0212                     SSP1ADD         equ	530	;# 
  1690     0212                     SSPADD          equ	530	;# 
  1691     0213                     SSP1MSK         equ	531	;# 
  1692     0213                     SSPMSK          equ	531	;# 
  1693     0214                     SSP1STAT        equ	532	;# 
  1694     0214                     SSPSTAT         equ	532	;# 
  1695     0215                     SSP1CON1        equ	533	;# 
  1696     0215                     SSPCON          equ	533	;# 
  1697     0215                     SSPCON1         equ	533	;# 
  1698     0215                     SSP1CON         equ	533	;# 
  1699     0216                     SSP1CON2        equ	534	;# 
  1700     0216                     SSPCON2         equ	534	;# 
  1701     0217                     SSP1CON3        equ	535	;# 
  1702     0217                     SSPCON3         equ	535	;# 
  1703     0219                     SSP2BUF         equ	537	;# 
  1704     021A                     SSP2ADD         equ	538	;# 
  1705     021B                     SSP2MSK         equ	539	;# 
  1706     021C                     SSP2STAT        equ	540	;# 
  1707     021D                     SSP2CON1        equ	541	;# 
  1708     021D                     SSP2CON         equ	541	;# 
  1709     021E                     SSP2CON2        equ	542	;# 
  1710     021F                     SSP2CON3        equ	543	;# 
  1711     028C                     ODCONA          equ	652	;# 
  1712     028D                     ODCONB          equ	653	;# 
  1713     028E                     ODCONC          equ	654	;# 
  1714     0291                     CCPR1           equ	657	;# 
  1715     0291                     CCPR1L          equ	657	;# 
  1716     0292                     CCPR1H          equ	658	;# 
  1717     0293                     CCP1CON         equ	659	;# 
  1718     0294                     CCP1CAP         equ	660	;# 
  1719     0295                     CCPR2           equ	661	;# 
  1720     0295                     CCPR2L          equ	661	;# 
  1721     0296                     CCPR2H          equ	662	;# 
  1722     0297                     CCP2CON         equ	663	;# 
  1723     0298                     CCP2CAP         equ	664	;# 
  1724     029F                     CCPTMRS         equ	671	;# 
  1725     030C                     SLRCONA         equ	780	;# 
  1726     030D                     SLRCONB         equ	781	;# 
  1727     030E                     SLRCONC         equ	782	;# 
  1728     0311                     CCPR3           equ	785	;# 
  1729     0311                     CCPR3L          equ	785	;# 
  1730     0312                     CCPR3H          equ	786	;# 
  1731     0313                     CCP3CON         equ	787	;# 
  1732     0314                     CCP3CAP         equ	788	;# 
  1733     0315                     CCPR4           equ	789	;# 
  1734     0315                     CCPR4L          equ	789	;# 
  1735     0316                     CCPR4H          equ	790	;# 
  1736     0317                     CCP4CON         equ	791	;# 
  1737     0318                     CCP4CAP         equ	792	;# 
  1738     038C                     INLVLA          equ	908	;# 
  1739     038D                     INLVLB          equ	909	;# 
  1740     038E                     INLVLC          equ	910	;# 
  1741     0391                     IOCAP           equ	913	;# 
  1742     0392                     IOCAN           equ	914	;# 
  1743     0393                     IOCAF           equ	915	;# 
  1744     0394                     IOCBP           equ	916	;# 
  1745     0395                     IOCBN           equ	917	;# 
  1746     0396                     IOCBF           equ	918	;# 
  1747     0397                     IOCCP           equ	919	;# 
  1748     0398                     IOCCN           equ	920	;# 
  1749     0399                     IOCCF           equ	921	;# 
  1750     039A                     CLKRCON         equ	922	;# 
  1751     039C                     MDCON           equ	924	;# 
  1752     039D                     MDSRC           equ	925	;# 
  1753     039E                     MDCARH          equ	926	;# 
  1754     039F                     MDCARL          equ	927	;# 
  1755     0411                     TMR3            equ	1041	;# 
  1756     0411                     TMR3L           equ	1041	;# 
  1757     0412                     TMR3H           equ	1042	;# 
  1758     0413                     T3CON           equ	1043	;# 
  1759     0414                     T3GCON          equ	1044	;# 
  1760     0415                     TMR4            equ	1045	;# 
  1761     0416                     PR4             equ	1046	;# 
  1762     0417                     T4CON           equ	1047	;# 
  1763     0418                     TMR5            equ	1048	;# 
  1764     0418                     TMR5L           equ	1048	;# 
  1765     0419                     TMR5H           equ	1049	;# 
  1766     041A                     T5CON           equ	1050	;# 
  1767     041B                     T5GCON          equ	1051	;# 
  1768     041C                     TMR6            equ	1052	;# 
  1769     041D                     PR6             equ	1053	;# 
  1770     041E                     T6CON           equ	1054	;# 
  1771     041F                     CCDCON          equ	1055	;# 
  1772     0498                     NCO1ACC         equ	1176	;# 
  1773     0498                     NCO1ACCL        equ	1176	;# 
  1774     0499                     NCO1ACCH        equ	1177	;# 
  1775     049A                     NCO1ACCU        equ	1178	;# 
  1776     049B                     NCO1INC         equ	1179	;# 
  1777     049B                     NCO1INCL        equ	1179	;# 
  1778     049C                     NCO1INCH        equ	1180	;# 
  1779     049D                     NCO1INCU        equ	1181	;# 
  1780     049E                     NCO1CON         equ	1182	;# 
  1781     049F                     NCO1CLK         equ	1183	;# 
  1782     0617                     PWM5DCL         equ	1559	;# 
  1783     0618                     PWM5DCH         equ	1560	;# 
  1784     0619                     PWM5CON         equ	1561	;# 
  1785     0619                     PWM5CON0        equ	1561	;# 
  1786     061A                     PWM6DCL         equ	1562	;# 
  1787     061B                     PWM6DCH         equ	1563	;# 
  1788     061C                     PWM6CON         equ	1564	;# 
  1789     061C                     PWM6CON0        equ	1564	;# 
  1790     061F                     PWMTMRS         equ	1567	;# 
  1791     0691                     CWG1CLKCON      equ	1681	;# 
  1792     0692                     CWG1DAT         equ	1682	;# 
  1793     0693                     CWG1DBR         equ	1683	;# 
  1794     0694                     CWG1DBF         equ	1684	;# 
  1795     0695                     CWG1CON0        equ	1685	;# 
  1796     0696                     CWG1CON1        equ	1686	;# 
  1797     0697                     CWG1AS0         equ	1687	;# 
  1798     0698                     CWG1AS1         equ	1688	;# 
  1799     0699                     CWG1STR         equ	1689	;# 
  1800     0711                     CWG2CLKCON      equ	1809	;# 
  1801     0712                     CWG2DAT         equ	1810	;# 
  1802     0713                     CWG2DBR         equ	1811	;# 
  1803     0714                     CWG2DBF         equ	1812	;# 
  1804     0715                     CWG2CON0        equ	1813	;# 
  1805     0716                     CWG2CON1        equ	1814	;# 
  1806     0717                     CWG2AS0         equ	1815	;# 
  1807     0718                     CWG2AS1         equ	1816	;# 
  1808     0719                     CWG2STR         equ	1817	;# 
  1809     0891                     NVMADR          equ	2193	;# 
  1810     0891                     EEADR           equ	2193	;# 
  1811     0891                     PMADR           equ	2193	;# 
  1812     0891                     NVMADRL         equ	2193	;# 
  1813     0891                     EEADRL          equ	2193	;# 
  1814     0891                     PMADRL          equ	2193	;# 
  1815     0892                     NVMADRH         equ	2194	;# 
  1816     0892                     EEADRH          equ	2194	;# 
  1817     0892                     PMADRH          equ	2194	;# 
  1818     0893                     NVMDAT          equ	2195	;# 
  1819     0893                     EEDAT           equ	2195	;# 
  1820     0893                     PMDAT           equ	2195	;# 
  1821     0893                     NVMDATL         equ	2195	;# 
  1822     0893                     EEDATL          equ	2195	;# 
  1823     0893                     PMDATL          equ	2195	;# 
  1824     0894                     NVMDATH         equ	2196	;# 
  1825     0894                     EEDATH          equ	2196	;# 
  1826     0894                     PMDATH          equ	2196	;# 
  1827     0895                     NVMCON1         equ	2197	;# 
  1828     0895                     EECON1          equ	2197	;# 
  1829     0895                     PMCON1          equ	2197	;# 
  1830     0896                     NVMCON2         equ	2198	;# 
  1831     0896                     EECON2          equ	2198	;# 
  1832     0896                     PMCON2          equ	2198	;# 
  1833     089B                     PCON0           equ	2203	;# 
  1834     0911                     PMD0            equ	2321	;# 
  1835     0912                     PMD1            equ	2322	;# 
  1836     0913                     PMD2            equ	2323	;# 
  1837     0914                     PMD3            equ	2324	;# 
  1838     0915                     PMD4            equ	2325	;# 
  1839     0916                     PMD5            equ	2326	;# 
  1840     0918                     CPUDOZE         equ	2328	;# 
  1841     0919                     OSCCON1         equ	2329	;# 
  1842     091A                     OSCCON2         equ	2330	;# 
  1843     091B                     OSCCON3         equ	2331	;# 
  1844     091C                     OSCSTAT1        equ	2332	;# 
  1845     091D                     OSCEN           equ	2333	;# 
  1846     091E                     OSCTUNE         equ	2334	;# 
  1847     091F                     OSCFRQ          equ	2335	;# 
  1848     0E0F                     PPSLOCK         equ	3599	;# 
  1849     0E10                     INTPPS          equ	3600	;# 
  1850     0E11                     T0CKIPPS        equ	3601	;# 
  1851     0E12                     T1CKIPPS        equ	3602	;# 
  1852     0E13                     T1GPPS          equ	3603	;# 
  1853     0E14                     CCP1PPS         equ	3604	;# 
  1854     0E15                     CCP2PPS         equ	3605	;# 
  1855     0E16                     CCP3PPS         equ	3606	;# 
  1856     0E17                     CCP4PPS         equ	3607	;# 
  1857     0E18                     CWG1PPS         equ	3608	;# 
  1858     0E19                     CWG2PPS         equ	3609	;# 
  1859     0E1A                     MDCIN1PPS       equ	3610	;# 
  1860     0E1B                     MDCIN2PPS       equ	3611	;# 
  1861     0E1C                     MDMINPPS        equ	3612	;# 
  1862     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1863     0E1E                     SSP2DATPPS      equ	3614	;# 
  1864     0E1F                     SSP2SSPPS       equ	3615	;# 
  1865     0E20                     SSP1CLKPPS      equ	3616	;# 
  1866     0E21                     SSP1DATPPS      equ	3617	;# 
  1867     0E22                     SSP1SSPPS       equ	3618	;# 
  1868     0E24                     RXPPS           equ	3620	;# 
  1869     0E25                     TXPPS           equ	3621	;# 
  1870     0E28                     CLCIN0PPS       equ	3624	;# 
  1871     0E29                     CLCIN1PPS       equ	3625	;# 
  1872     0E2A                     CLCIN2PPS       equ	3626	;# 
  1873     0E2B                     CLCIN3PPS       equ	3627	;# 
  1874     0E2C                     T3CKIPPS        equ	3628	;# 
  1875     0E2D                     T3GPPS          equ	3629	;# 
  1876     0E2E                     T5CKIPPS        equ	3630	;# 
  1877     0E2F                     T5GPPS          equ	3631	;# 
  1878     0E90                     RA0PPS          equ	3728	;# 
  1879     0E91                     RA1PPS          equ	3729	;# 
  1880     0E92                     RA2PPS          equ	3730	;# 
  1881     0E94                     RA4PPS          equ	3732	;# 
  1882     0E95                     RA5PPS          equ	3733	;# 
  1883     0E9C                     RB4PPS          equ	3740	;# 
  1884     0E9D                     RB5PPS          equ	3741	;# 
  1885     0E9E                     RB6PPS          equ	3742	;# 
  1886     0E9F                     RB7PPS          equ	3743	;# 
  1887     0EA0                     RC0PPS          equ	3744	;# 
  1888     0EA1                     RC1PPS          equ	3745	;# 
  1889     0EA2                     RC2PPS          equ	3746	;# 
  1890     0EA3                     RC3PPS          equ	3747	;# 
  1891     0EA4                     RC4PPS          equ	3748	;# 
  1892     0EA5                     RC5PPS          equ	3749	;# 
  1893     0EA6                     RC6PPS          equ	3750	;# 
  1894     0EA7                     RC7PPS          equ	3751	;# 
  1895     0F0F                     CLCDATA         equ	3855	;# 
  1896     0F10                     CLC1CON         equ	3856	;# 
  1897     0F11                     CLC1POL         equ	3857	;# 
  1898     0F12                     CLC1SEL0        equ	3858	;# 
  1899     0F13                     CLC1SEL1        equ	3859	;# 
  1900     0F14                     CLC1SEL2        equ	3860	;# 
  1901     0F15                     CLC1SEL3        equ	3861	;# 
  1902     0F16                     CLC1GLS0        equ	3862	;# 
  1903     0F17                     CLC1GLS1        equ	3863	;# 
  1904     0F18                     CLC1GLS2        equ	3864	;# 
  1905     0F19                     CLC1GLS3        equ	3865	;# 
  1906     0F1A                     CLC2CON         equ	3866	;# 
  1907     0F1B                     CLC2POL         equ	3867	;# 
  1908     0F1C                     CLC2SEL0        equ	3868	;# 
  1909     0F1D                     CLC2SEL1        equ	3869	;# 
  1910     0F1E                     CLC2SEL2        equ	3870	;# 
  1911     0F1F                     CLC2SEL3        equ	3871	;# 
  1912     0F20                     CLC2GLS0        equ	3872	;# 
  1913     0F21                     CLC2GLS1        equ	3873	;# 
  1914     0F22                     CLC2GLS2        equ	3874	;# 
  1915     0F23                     CLC2GLS3        equ	3875	;# 
  1916     0F24                     CLC3CON         equ	3876	;# 
  1917     0F25                     CLC3POL         equ	3877	;# 
  1918     0F26                     CLC3SEL0        equ	3878	;# 
  1919     0F27                     CLC3SEL1        equ	3879	;# 
  1920     0F28                     CLC3SEL2        equ	3880	;# 
  1921     0F29                     CLC3SEL3        equ	3881	;# 
  1922     0F2A                     CLC3GLS0        equ	3882	;# 
  1923     0F2B                     CLC3GLS1        equ	3883	;# 
  1924     0F2C                     CLC3GLS2        equ	3884	;# 
  1925     0F2D                     CLC3GLS3        equ	3885	;# 
  1926     0F2E                     CLC4CON         equ	3886	;# 
  1927     0F2F                     CLC4POL         equ	3887	;# 
  1928     0F30                     CLC4SEL0        equ	3888	;# 
  1929     0F31                     CLC4SEL1        equ	3889	;# 
  1930     0F32                     CLC4SEL2        equ	3890	;# 
  1931     0F33                     CLC4SEL3        equ	3891	;# 
  1932     0F34                     CLC4GLS0        equ	3892	;# 
  1933     0F35                     CLC4GLS1        equ	3893	;# 
  1934     0F36                     CLC4GLS2        equ	3894	;# 
  1935     0F37                     CLC4GLS3        equ	3895	;# 
  1936     0FE4                     STATUS_SHAD     equ	4068	;# 
  1937     0FE5                     WREG_SHAD       equ	4069	;# 
  1938     0FE6                     BSR_SHAD        equ	4070	;# 
  1939     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1940     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1941     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1942     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1943     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1944     0FED                     STKPTR          equ	4077	;# 
  1945     0FEE                     TOSL            equ	4078	;# 
  1946     0FEF                     TOSH            equ	4079	;# 
  1947     0000                     INDF0           equ	0	;# 
  1948     0001                     INDF1           equ	1	;# 
  1949     0002                     PCL             equ	2	;# 
  1950     0003                     STATUS          equ	3	;# 
  1951     0004                     FSR0L           equ	4	;# 
  1952     0005                     FSR0H           equ	5	;# 
  1953     0006                     FSR1L           equ	6	;# 
  1954     0007                     FSR1H           equ	7	;# 
  1955     0008                     BSR             equ	8	;# 
  1956     0009                     WREG            equ	9	;# 
  1957     000A                     PCLATH          equ	10	;# 
  1958     000B                     INTCON          equ	11	;# 
  1959     000C                     PORTA           equ	12	;# 
  1960     000D                     PORTB           equ	13	;# 
  1961     000E                     PORTC           equ	14	;# 
  1962     0010                     PIR0            equ	16	;# 
  1963     0011                     PIR1            equ	17	;# 
  1964     0012                     PIR2            equ	18	;# 
  1965     0013                     PIR3            equ	19	;# 
  1966     0014                     PIR4            equ	20	;# 
  1967     0015                     TMR0L           equ	21	;# 
  1968     0015                     TMR0            equ	21	;# 
  1969     0016                     TMR0H           equ	22	;# 
  1970     0016                     PR0             equ	22	;# 
  1971     0017                     T0CON0          equ	23	;# 
  1972     0018                     T0CON1          equ	24	;# 
  1973     0019                     TMR1            equ	25	;# 
  1974     0019                     TMR1L           equ	25	;# 
  1975     001A                     TMR1H           equ	26	;# 
  1976     001B                     T1CON           equ	27	;# 
  1977     001C                     T1GCON          equ	28	;# 
  1978     001D                     TMR2            equ	29	;# 
  1979     001E                     PR2             equ	30	;# 
  1980     001F                     T2CON           equ	31	;# 
  1981     008C                     TRISA           equ	140	;# 
  1982     008D                     TRISB           equ	141	;# 
  1983     008E                     TRISC           equ	142	;# 
  1984     0090                     PIE0            equ	144	;# 
  1985     0091                     PIE1            equ	145	;# 
  1986     0092                     PIE2            equ	146	;# 
  1987     0093                     PIE3            equ	147	;# 
  1988     0094                     PIE4            equ	148	;# 
  1989     0097                     WDTCON          equ	151	;# 
  1990     009B                     ADRES           equ	155	;# 
  1991     009B                     ADRESL          equ	155	;# 
  1992     009C                     ADRESH          equ	156	;# 
  1993     009D                     ADCON0          equ	157	;# 
  1994     009E                     ADCON1          equ	158	;# 
  1995     009F                     ADACT           equ	159	;# 
  1996     010C                     LATA            equ	268	;# 
  1997     010D                     LATB            equ	269	;# 
  1998     010E                     LATC            equ	270	;# 
  1999     0111                     CM1CON0         equ	273	;# 
  2000     0112                     CM1CON1         equ	274	;# 
  2001     0113                     CM2CON0         equ	275	;# 
  2002     0114                     CM2CON1         equ	276	;# 
  2003     0115                     CMOUT           equ	277	;# 
  2004     0116                     BORCON          equ	278	;# 
  2005     0117                     FVRCON          equ	279	;# 
  2006     0118                     DACCON0         equ	280	;# 
  2007     0119                     DACCON1         equ	281	;# 
  2008     018C                     ANSELA          equ	396	;# 
  2009     018D                     ANSELB          equ	397	;# 
  2010     018E                     ANSELC          equ	398	;# 
  2011     0197                     VREGCON         equ	407	;# 
  2012     0199                     RC1REG          equ	409	;# 
  2013     0199                     RCREG           equ	409	;# 
  2014     0199                     RCREG1          equ	409	;# 
  2015     019A                     TX1REG          equ	410	;# 
  2016     019A                     TXREG1          equ	410	;# 
  2017     019A                     TXREG           equ	410	;# 
  2018     019B                     SP1BRG          equ	411	;# 
  2019     019B                     SPBRG           equ	411	;# 
  2020     019B                     SP1BRGL         equ	411	;# 
  2021     019B                     SPBRG1          equ	411	;# 
  2022     019B                     SPBRGL          equ	411	;# 
  2023     019C                     SP1BRGH         equ	412	;# 
  2024     019C                     SPBRGH          equ	412	;# 
  2025     019C                     SPBRGH1         equ	412	;# 
  2026     019D                     RC1STA          equ	413	;# 
  2027     019D                     RCSTA1          equ	413	;# 
  2028     019D                     RCSTA           equ	413	;# 
  2029     019E                     TX1STA          equ	414	;# 
  2030     019E                     TXSTA1          equ	414	;# 
  2031     019E                     TXSTA           equ	414	;# 
  2032     019F                     BAUD1CON        equ	415	;# 
  2033     019F                     BAUDCON1        equ	415	;# 
  2034     019F                     BAUDCTL1        equ	415	;# 
  2035     019F                     BAUDCON         equ	415	;# 
  2036     019F                     BAUDCTL         equ	415	;# 
  2037     020C                     WPUA            equ	524	;# 
  2038     020D                     WPUB            equ	525	;# 
  2039     020E                     WPUC            equ	526	;# 
  2040     0211                     SSP1BUF         equ	529	;# 
  2041     0211                     SSPBUF          equ	529	;# 
  2042     0212                     SSP1ADD         equ	530	;# 
  2043     0212                     SSPADD          equ	530	;# 
  2044     0213                     SSP1MSK         equ	531	;# 
  2045     0213                     SSPMSK          equ	531	;# 
  2046     0214                     SSP1STAT        equ	532	;# 
  2047     0214                     SSPSTAT         equ	532	;# 
  2048     0215                     SSP1CON1        equ	533	;# 
  2049     0215                     SSPCON          equ	533	;# 
  2050     0215                     SSPCON1         equ	533	;# 
  2051     0215                     SSP1CON         equ	533	;# 
  2052     0216                     SSP1CON2        equ	534	;# 
  2053     0216                     SSPCON2         equ	534	;# 
  2054     0217                     SSP1CON3        equ	535	;# 
  2055     0217                     SSPCON3         equ	535	;# 
  2056     0219                     SSP2BUF         equ	537	;# 
  2057     021A                     SSP2ADD         equ	538	;# 
  2058     021B                     SSP2MSK         equ	539	;# 
  2059     021C                     SSP2STAT        equ	540	;# 
  2060     021D                     SSP2CON1        equ	541	;# 
  2061     021D                     SSP2CON         equ	541	;# 
  2062     021E                     SSP2CON2        equ	542	;# 
  2063     021F                     SSP2CON3        equ	543	;# 
  2064     028C                     ODCONA          equ	652	;# 
  2065     028D                     ODCONB          equ	653	;# 
  2066     028E                     ODCONC          equ	654	;# 
  2067     0291                     CCPR1           equ	657	;# 
  2068     0291                     CCPR1L          equ	657	;# 
  2069     0292                     CCPR1H          equ	658	;# 
  2070     0293                     CCP1CON         equ	659	;# 
  2071     0294                     CCP1CAP         equ	660	;# 
  2072     0295                     CCPR2           equ	661	;# 
  2073     0295                     CCPR2L          equ	661	;# 
  2074     0296                     CCPR2H          equ	662	;# 
  2075     0297                     CCP2CON         equ	663	;# 
  2076     0298                     CCP2CAP         equ	664	;# 
  2077     029F                     CCPTMRS         equ	671	;# 
  2078     030C                     SLRCONA         equ	780	;# 
  2079     030D                     SLRCONB         equ	781	;# 
  2080     030E                     SLRCONC         equ	782	;# 
  2081     0311                     CCPR3           equ	785	;# 
  2082     0311                     CCPR3L          equ	785	;# 
  2083     0312                     CCPR3H          equ	786	;# 
  2084     0313                     CCP3CON         equ	787	;# 
  2085     0314                     CCP3CAP         equ	788	;# 
  2086     0315                     CCPR4           equ	789	;# 
  2087     0315                     CCPR4L          equ	789	;# 
  2088     0316                     CCPR4H          equ	790	;# 
  2089     0317                     CCP4CON         equ	791	;# 
  2090     0318                     CCP4CAP         equ	792	;# 
  2091     038C                     INLVLA          equ	908	;# 
  2092     038D                     INLVLB          equ	909	;# 
  2093     038E                     INLVLC          equ	910	;# 
  2094     0391                     IOCAP           equ	913	;# 
  2095     0392                     IOCAN           equ	914	;# 
  2096     0393                     IOCAF           equ	915	;# 
  2097     0394                     IOCBP           equ	916	;# 
  2098     0395                     IOCBN           equ	917	;# 
  2099     0396                     IOCBF           equ	918	;# 
  2100     0397                     IOCCP           equ	919	;# 
  2101     0398                     IOCCN           equ	920	;# 
  2102     0399                     IOCCF           equ	921	;# 
  2103     039A                     CLKRCON         equ	922	;# 
  2104     039C                     MDCON           equ	924	;# 
  2105     039D                     MDSRC           equ	925	;# 
  2106     039E                     MDCARH          equ	926	;# 
  2107     039F                     MDCARL          equ	927	;# 
  2108     0411                     TMR3            equ	1041	;# 
  2109     0411                     TMR3L           equ	1041	;# 
  2110     0412                     TMR3H           equ	1042	;# 
  2111     0413                     T3CON           equ	1043	;# 
  2112     0414                     T3GCON          equ	1044	;# 
  2113     0415                     TMR4            equ	1045	;# 
  2114     0416                     PR4             equ	1046	;# 
  2115     0417                     T4CON           equ	1047	;# 
  2116     0418                     TMR5            equ	1048	;# 
  2117     0418                     TMR5L           equ	1048	;# 
  2118     0419                     TMR5H           equ	1049	;# 
  2119     041A                     T5CON           equ	1050	;# 
  2120     041B                     T5GCON          equ	1051	;# 
  2121     041C                     TMR6            equ	1052	;# 
  2122     041D                     PR6             equ	1053	;# 
  2123     041E                     T6CON           equ	1054	;# 
  2124     041F                     CCDCON          equ	1055	;# 
  2125     0498                     NCO1ACC         equ	1176	;# 
  2126     0498                     NCO1ACCL        equ	1176	;# 
  2127     0499                     NCO1ACCH        equ	1177	;# 
  2128     049A                     NCO1ACCU        equ	1178	;# 
  2129     049B                     NCO1INC         equ	1179	;# 
  2130     049B                     NCO1INCL        equ	1179	;# 
  2131     049C                     NCO1INCH        equ	1180	;# 
  2132     049D                     NCO1INCU        equ	1181	;# 
  2133     049E                     NCO1CON         equ	1182	;# 
  2134     049F                     NCO1CLK         equ	1183	;# 
  2135     0617                     PWM5DCL         equ	1559	;# 
  2136     0618                     PWM5DCH         equ	1560	;# 
  2137     0619                     PWM5CON         equ	1561	;# 
  2138     0619                     PWM5CON0        equ	1561	;# 
  2139     061A                     PWM6DCL         equ	1562	;# 
  2140     061B                     PWM6DCH         equ	1563	;# 
  2141     061C                     PWM6CON         equ	1564	;# 
  2142     061C                     PWM6CON0        equ	1564	;# 
  2143     061F                     PWMTMRS         equ	1567	;# 
  2144     0691                     CWG1CLKCON      equ	1681	;# 
  2145     0692                     CWG1DAT         equ	1682	;# 
  2146     0693                     CWG1DBR         equ	1683	;# 
  2147     0694                     CWG1DBF         equ	1684	;# 
  2148     0695                     CWG1CON0        equ	1685	;# 
  2149     0696                     CWG1CON1        equ	1686	;# 
  2150     0697                     CWG1AS0         equ	1687	;# 
  2151     0698                     CWG1AS1         equ	1688	;# 
  2152     0699                     CWG1STR         equ	1689	;# 
  2153     0711                     CWG2CLKCON      equ	1809	;# 
  2154     0712                     CWG2DAT         equ	1810	;# 
  2155     0713                     CWG2DBR         equ	1811	;# 
  2156     0714                     CWG2DBF         equ	1812	;# 
  2157     0715                     CWG2CON0        equ	1813	;# 
  2158     0716                     CWG2CON1        equ	1814	;# 
  2159     0717                     CWG2AS0         equ	1815	;# 
  2160     0718                     CWG2AS1         equ	1816	;# 
  2161     0719                     CWG2STR         equ	1817	;# 
  2162     0891                     NVMADR          equ	2193	;# 
  2163     0891                     EEADR           equ	2193	;# 
  2164     0891                     PMADR           equ	2193	;# 
  2165     0891                     NVMADRL         equ	2193	;# 
  2166     0891                     EEADRL          equ	2193	;# 
  2167     0891                     PMADRL          equ	2193	;# 
  2168     0892                     NVMADRH         equ	2194	;# 
  2169     0892                     EEADRH          equ	2194	;# 
  2170     0892                     PMADRH          equ	2194	;# 
  2171     0893                     NVMDAT          equ	2195	;# 
  2172     0893                     EEDAT           equ	2195	;# 
  2173     0893                     PMDAT           equ	2195	;# 
  2174     0893                     NVMDATL         equ	2195	;# 
  2175     0893                     EEDATL          equ	2195	;# 
  2176     0893                     PMDATL          equ	2195	;# 
  2177     0894                     NVMDATH         equ	2196	;# 
  2178     0894                     EEDATH          equ	2196	;# 
  2179     0894                     PMDATH          equ	2196	;# 
  2180     0895                     NVMCON1         equ	2197	;# 
  2181     0895                     EECON1          equ	2197	;# 
  2182     0895                     PMCON1          equ	2197	;# 
  2183     0896                     NVMCON2         equ	2198	;# 
  2184     0896                     EECON2          equ	2198	;# 
  2185     0896                     PMCON2          equ	2198	;# 
  2186     089B                     PCON0           equ	2203	;# 
  2187     0911                     PMD0            equ	2321	;# 
  2188     0912                     PMD1            equ	2322	;# 
  2189     0913                     PMD2            equ	2323	;# 
  2190     0914                     PMD3            equ	2324	;# 
  2191     0915                     PMD4            equ	2325	;# 
  2192     0916                     PMD5            equ	2326	;# 
  2193     0918                     CPUDOZE         equ	2328	;# 
  2194     0919                     OSCCON1         equ	2329	;# 
  2195     091A                     OSCCON2         equ	2330	;# 
  2196     091B                     OSCCON3         equ	2331	;# 
  2197     091C                     OSCSTAT1        equ	2332	;# 
  2198     091D                     OSCEN           equ	2333	;# 
  2199     091E                     OSCTUNE         equ	2334	;# 
  2200     091F                     OSCFRQ          equ	2335	;# 
  2201     0E0F                     PPSLOCK         equ	3599	;# 
  2202     0E10                     INTPPS          equ	3600	;# 
  2203     0E11                     T0CKIPPS        equ	3601	;# 
  2204     0E12                     T1CKIPPS        equ	3602	;# 
  2205     0E13                     T1GPPS          equ	3603	;# 
  2206     0E14                     CCP1PPS         equ	3604	;# 
  2207     0E15                     CCP2PPS         equ	3605	;# 
  2208     0E16                     CCP3PPS         equ	3606	;# 
  2209     0E17                     CCP4PPS         equ	3607	;# 
  2210     0E18                     CWG1PPS         equ	3608	;# 
  2211     0E19                     CWG2PPS         equ	3609	;# 
  2212     0E1A                     MDCIN1PPS       equ	3610	;# 
  2213     0E1B                     MDCIN2PPS       equ	3611	;# 
  2214     0E1C                     MDMINPPS        equ	3612	;# 
  2215     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2216     0E1E                     SSP2DATPPS      equ	3614	;# 
  2217     0E1F                     SSP2SSPPS       equ	3615	;# 
  2218     0E20                     SSP1CLKPPS      equ	3616	;# 
  2219     0E21                     SSP1DATPPS      equ	3617	;# 
  2220     0E22                     SSP1SSPPS       equ	3618	;# 
  2221     0E24                     RXPPS           equ	3620	;# 
  2222     0E25                     TXPPS           equ	3621	;# 
  2223     0E28                     CLCIN0PPS       equ	3624	;# 
  2224     0E29                     CLCIN1PPS       equ	3625	;# 
  2225     0E2A                     CLCIN2PPS       equ	3626	;# 
  2226     0E2B                     CLCIN3PPS       equ	3627	;# 
  2227     0E2C                     T3CKIPPS        equ	3628	;# 
  2228     0E2D                     T3GPPS          equ	3629	;# 
  2229     0E2E                     T5CKIPPS        equ	3630	;# 
  2230     0E2F                     T5GPPS          equ	3631	;# 
  2231     0E90                     RA0PPS          equ	3728	;# 
  2232     0E91                     RA1PPS          equ	3729	;# 
  2233     0E92                     RA2PPS          equ	3730	;# 
  2234     0E94                     RA4PPS          equ	3732	;# 
  2235     0E95                     RA5PPS          equ	3733	;# 
  2236     0E9C                     RB4PPS          equ	3740	;# 
  2237     0E9D                     RB5PPS          equ	3741	;# 
  2238     0E9E                     RB6PPS          equ	3742	;# 
  2239     0E9F                     RB7PPS          equ	3743	;# 
  2240     0EA0                     RC0PPS          equ	3744	;# 
  2241     0EA1                     RC1PPS          equ	3745	;# 
  2242     0EA2                     RC2PPS          equ	3746	;# 
  2243     0EA3                     RC3PPS          equ	3747	;# 
  2244     0EA4                     RC4PPS          equ	3748	;# 
  2245     0EA5                     RC5PPS          equ	3749	;# 
  2246     0EA6                     RC6PPS          equ	3750	;# 
  2247     0EA7                     RC7PPS          equ	3751	;# 
  2248     0F0F                     CLCDATA         equ	3855	;# 
  2249     0F10                     CLC1CON         equ	3856	;# 
  2250     0F11                     CLC1POL         equ	3857	;# 
  2251     0F12                     CLC1SEL0        equ	3858	;# 
  2252     0F13                     CLC1SEL1        equ	3859	;# 
  2253     0F14                     CLC1SEL2        equ	3860	;# 
  2254     0F15                     CLC1SEL3        equ	3861	;# 
  2255     0F16                     CLC1GLS0        equ	3862	;# 
  2256     0F17                     CLC1GLS1        equ	3863	;# 
  2257     0F18                     CLC1GLS2        equ	3864	;# 
  2258     0F19                     CLC1GLS3        equ	3865	;# 
  2259     0F1A                     CLC2CON         equ	3866	;# 
  2260     0F1B                     CLC2POL         equ	3867	;# 
  2261     0F1C                     CLC2SEL0        equ	3868	;# 
  2262     0F1D                     CLC2SEL1        equ	3869	;# 
  2263     0F1E                     CLC2SEL2        equ	3870	;# 
  2264     0F1F                     CLC2SEL3        equ	3871	;# 
  2265     0F20                     CLC2GLS0        equ	3872	;# 
  2266     0F21                     CLC2GLS1        equ	3873	;# 
  2267     0F22                     CLC2GLS2        equ	3874	;# 
  2268     0F23                     CLC2GLS3        equ	3875	;# 
  2269     0F24                     CLC3CON         equ	3876	;# 
  2270     0F25                     CLC3POL         equ	3877	;# 
  2271     0F26                     CLC3SEL0        equ	3878	;# 
  2272     0F27                     CLC3SEL1        equ	3879	;# 
  2273     0F28                     CLC3SEL2        equ	3880	;# 
  2274     0F29                     CLC3SEL3        equ	3881	;# 
  2275     0F2A                     CLC3GLS0        equ	3882	;# 
  2276     0F2B                     CLC3GLS1        equ	3883	;# 
  2277     0F2C                     CLC3GLS2        equ	3884	;# 
  2278     0F2D                     CLC3GLS3        equ	3885	;# 
  2279     0F2E                     CLC4CON         equ	3886	;# 
  2280     0F2F                     CLC4POL         equ	3887	;# 
  2281     0F30                     CLC4SEL0        equ	3888	;# 
  2282     0F31                     CLC4SEL1        equ	3889	;# 
  2283     0F32                     CLC4SEL2        equ	3890	;# 
  2284     0F33                     CLC4SEL3        equ	3891	;# 
  2285     0F34                     CLC4GLS0        equ	3892	;# 
  2286     0F35                     CLC4GLS1        equ	3893	;# 
  2287     0F36                     CLC4GLS2        equ	3894	;# 
  2288     0F37                     CLC4GLS3        equ	3895	;# 
  2289     0FE4                     STATUS_SHAD     equ	4068	;# 
  2290     0FE5                     WREG_SHAD       equ	4069	;# 
  2291     0FE6                     BSR_SHAD        equ	4070	;# 
  2292     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2293     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2294     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2295     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2296     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2297     0FED                     STKPTR          equ	4077	;# 
  2298     0FEE                     TOSL            equ	4078	;# 
  2299     0FEF                     TOSH            equ	4079	;# 
  2300     0000                     INDF0           equ	0	;# 
  2301     0001                     INDF1           equ	1	;# 
  2302     0002                     PCL             equ	2	;# 
  2303     0003                     STATUS          equ	3	;# 
  2304     0004                     FSR0L           equ	4	;# 
  2305     0005                     FSR0H           equ	5	;# 
  2306     0006                     FSR1L           equ	6	;# 
  2307     0007                     FSR1H           equ	7	;# 
  2308     0008                     BSR             equ	8	;# 
  2309     0009                     WREG            equ	9	;# 
  2310     000A                     PCLATH          equ	10	;# 
  2311     000B                     INTCON          equ	11	;# 
  2312     000C                     PORTA           equ	12	;# 
  2313     000D                     PORTB           equ	13	;# 
  2314     000E                     PORTC           equ	14	;# 
  2315     0010                     PIR0            equ	16	;# 
  2316     0011                     PIR1            equ	17	;# 
  2317     0012                     PIR2            equ	18	;# 
  2318     0013                     PIR3            equ	19	;# 
  2319     0014                     PIR4            equ	20	;# 
  2320     0015                     TMR0L           equ	21	;# 
  2321     0015                     TMR0            equ	21	;# 
  2322     0016                     TMR0H           equ	22	;# 
  2323     0016                     PR0             equ	22	;# 
  2324     0017                     T0CON0          equ	23	;# 
  2325     0018                     T0CON1          equ	24	;# 
  2326     0019                     TMR1            equ	25	;# 
  2327     0019                     TMR1L           equ	25	;# 
  2328     001A                     TMR1H           equ	26	;# 
  2329     001B                     T1CON           equ	27	;# 
  2330     001C                     T1GCON          equ	28	;# 
  2331     001D                     TMR2            equ	29	;# 
  2332     001E                     PR2             equ	30	;# 
  2333     001F                     T2CON           equ	31	;# 
  2334     008C                     TRISA           equ	140	;# 
  2335     008D                     TRISB           equ	141	;# 
  2336     008E                     TRISC           equ	142	;# 
  2337     0090                     PIE0            equ	144	;# 
  2338     0091                     PIE1            equ	145	;# 
  2339     0092                     PIE2            equ	146	;# 
  2340     0093                     PIE3            equ	147	;# 
  2341     0094                     PIE4            equ	148	;# 
  2342     0097                     WDTCON          equ	151	;# 
  2343     009B                     ADRES           equ	155	;# 
  2344     009B                     ADRESL          equ	155	;# 
  2345     009C                     ADRESH          equ	156	;# 
  2346     009D                     ADCON0          equ	157	;# 
  2347     009E                     ADCON1          equ	158	;# 
  2348     009F                     ADACT           equ	159	;# 
  2349     010C                     LATA            equ	268	;# 
  2350     010D                     LATB            equ	269	;# 
  2351     010E                     LATC            equ	270	;# 
  2352     0111                     CM1CON0         equ	273	;# 
  2353     0112                     CM1CON1         equ	274	;# 
  2354     0113                     CM2CON0         equ	275	;# 
  2355     0114                     CM2CON1         equ	276	;# 
  2356     0115                     CMOUT           equ	277	;# 
  2357     0116                     BORCON          equ	278	;# 
  2358     0117                     FVRCON          equ	279	;# 
  2359     0118                     DACCON0         equ	280	;# 
  2360     0119                     DACCON1         equ	281	;# 
  2361     018C                     ANSELA          equ	396	;# 
  2362     018D                     ANSELB          equ	397	;# 
  2363     018E                     ANSELC          equ	398	;# 
  2364     0197                     VREGCON         equ	407	;# 
  2365     0199                     RC1REG          equ	409	;# 
  2366     0199                     RCREG           equ	409	;# 
  2367     0199                     RCREG1          equ	409	;# 
  2368     019A                     TX1REG          equ	410	;# 
  2369     019A                     TXREG1          equ	410	;# 
  2370     019A                     TXREG           equ	410	;# 
  2371     019B                     SP1BRG          equ	411	;# 
  2372     019B                     SPBRG           equ	411	;# 
  2373     019B                     SP1BRGL         equ	411	;# 
  2374     019B                     SPBRG1          equ	411	;# 
  2375     019B                     SPBRGL          equ	411	;# 
  2376     019C                     SP1BRGH         equ	412	;# 
  2377     019C                     SPBRGH          equ	412	;# 
  2378     019C                     SPBRGH1         equ	412	;# 
  2379     019D                     RC1STA          equ	413	;# 
  2380     019D                     RCSTA1          equ	413	;# 
  2381     019D                     RCSTA           equ	413	;# 
  2382     019E                     TX1STA          equ	414	;# 
  2383     019E                     TXSTA1          equ	414	;# 
  2384     019E                     TXSTA           equ	414	;# 
  2385     019F                     BAUD1CON        equ	415	;# 
  2386     019F                     BAUDCON1        equ	415	;# 
  2387     019F                     BAUDCTL1        equ	415	;# 
  2388     019F                     BAUDCON         equ	415	;# 
  2389     019F                     BAUDCTL         equ	415	;# 
  2390     020C                     WPUA            equ	524	;# 
  2391     020D                     WPUB            equ	525	;# 
  2392     020E                     WPUC            equ	526	;# 
  2393     0211                     SSP1BUF         equ	529	;# 
  2394     0211                     SSPBUF          equ	529	;# 
  2395     0212                     SSP1ADD         equ	530	;# 
  2396     0212                     SSPADD          equ	530	;# 
  2397     0213                     SSP1MSK         equ	531	;# 
  2398     0213                     SSPMSK          equ	531	;# 
  2399     0214                     SSP1STAT        equ	532	;# 
  2400     0214                     SSPSTAT         equ	532	;# 
  2401     0215                     SSP1CON1        equ	533	;# 
  2402     0215                     SSPCON          equ	533	;# 
  2403     0215                     SSPCON1         equ	533	;# 
  2404     0215                     SSP1CON         equ	533	;# 
  2405     0216                     SSP1CON2        equ	534	;# 
  2406     0216                     SSPCON2         equ	534	;# 
  2407     0217                     SSP1CON3        equ	535	;# 
  2408     0217                     SSPCON3         equ	535	;# 
  2409     0219                     SSP2BUF         equ	537	;# 
  2410     021A                     SSP2ADD         equ	538	;# 
  2411     021B                     SSP2MSK         equ	539	;# 
  2412     021C                     SSP2STAT        equ	540	;# 
  2413     021D                     SSP2CON1        equ	541	;# 
  2414     021D                     SSP2CON         equ	541	;# 
  2415     021E                     SSP2CON2        equ	542	;# 
  2416     021F                     SSP2CON3        equ	543	;# 
  2417     028C                     ODCONA          equ	652	;# 
  2418     028D                     ODCONB          equ	653	;# 
  2419     028E                     ODCONC          equ	654	;# 
  2420     0291                     CCPR1           equ	657	;# 
  2421     0291                     CCPR1L          equ	657	;# 
  2422     0292                     CCPR1H          equ	658	;# 
  2423     0293                     CCP1CON         equ	659	;# 
  2424     0294                     CCP1CAP         equ	660	;# 
  2425     0295                     CCPR2           equ	661	;# 
  2426     0295                     CCPR2L          equ	661	;# 
  2427     0296                     CCPR2H          equ	662	;# 
  2428     0297                     CCP2CON         equ	663	;# 
  2429     0298                     CCP2CAP         equ	664	;# 
  2430     029F                     CCPTMRS         equ	671	;# 
  2431     030C                     SLRCONA         equ	780	;# 
  2432     030D                     SLRCONB         equ	781	;# 
  2433     030E                     SLRCONC         equ	782	;# 
  2434     0311                     CCPR3           equ	785	;# 
  2435     0311                     CCPR3L          equ	785	;# 
  2436     0312                     CCPR3H          equ	786	;# 
  2437     0313                     CCP3CON         equ	787	;# 
  2438     0314                     CCP3CAP         equ	788	;# 
  2439     0315                     CCPR4           equ	789	;# 
  2440     0315                     CCPR4L          equ	789	;# 
  2441     0316                     CCPR4H          equ	790	;# 
  2442     0317                     CCP4CON         equ	791	;# 
  2443     0318                     CCP4CAP         equ	792	;# 
  2444     038C                     INLVLA          equ	908	;# 
  2445     038D                     INLVLB          equ	909	;# 
  2446     038E                     INLVLC          equ	910	;# 
  2447     0391                     IOCAP           equ	913	;# 
  2448     0392                     IOCAN           equ	914	;# 
  2449     0393                     IOCAF           equ	915	;# 
  2450     0394                     IOCBP           equ	916	;# 
  2451     0395                     IOCBN           equ	917	;# 
  2452     0396                     IOCBF           equ	918	;# 
  2453     0397                     IOCCP           equ	919	;# 
  2454     0398                     IOCCN           equ	920	;# 
  2455     0399                     IOCCF           equ	921	;# 
  2456     039A                     CLKRCON         equ	922	;# 
  2457     039C                     MDCON           equ	924	;# 
  2458     039D                     MDSRC           equ	925	;# 
  2459     039E                     MDCARH          equ	926	;# 
  2460     039F                     MDCARL          equ	927	;# 
  2461     0411                     TMR3            equ	1041	;# 
  2462     0411                     TMR3L           equ	1041	;# 
  2463     0412                     TMR3H           equ	1042	;# 
  2464     0413                     T3CON           equ	1043	;# 
  2465     0414                     T3GCON          equ	1044	;# 
  2466     0415                     TMR4            equ	1045	;# 
  2467     0416                     PR4             equ	1046	;# 
  2468     0417                     T4CON           equ	1047	;# 
  2469     0418                     TMR5            equ	1048	;# 
  2470     0418                     TMR5L           equ	1048	;# 
  2471     0419                     TMR5H           equ	1049	;# 
  2472     041A                     T5CON           equ	1050	;# 
  2473     041B                     T5GCON          equ	1051	;# 
  2474     041C                     TMR6            equ	1052	;# 
  2475     041D                     PR6             equ	1053	;# 
  2476     041E                     T6CON           equ	1054	;# 
  2477     041F                     CCDCON          equ	1055	;# 
  2478     0498                     NCO1ACC         equ	1176	;# 
  2479     0498                     NCO1ACCL        equ	1176	;# 
  2480     0499                     NCO1ACCH        equ	1177	;# 
  2481     049A                     NCO1ACCU        equ	1178	;# 
  2482     049B                     NCO1INC         equ	1179	;# 
  2483     049B                     NCO1INCL        equ	1179	;# 
  2484     049C                     NCO1INCH        equ	1180	;# 
  2485     049D                     NCO1INCU        equ	1181	;# 
  2486     049E                     NCO1CON         equ	1182	;# 
  2487     049F                     NCO1CLK         equ	1183	;# 
  2488     0617                     PWM5DCL         equ	1559	;# 
  2489     0618                     PWM5DCH         equ	1560	;# 
  2490     0619                     PWM5CON         equ	1561	;# 
  2491     0619                     PWM5CON0        equ	1561	;# 
  2492     061A                     PWM6DCL         equ	1562	;# 
  2493     061B                     PWM6DCH         equ	1563	;# 
  2494     061C                     PWM6CON         equ	1564	;# 
  2495     061C                     PWM6CON0        equ	1564	;# 
  2496     061F                     PWMTMRS         equ	1567	;# 
  2497     0691                     CWG1CLKCON      equ	1681	;# 
  2498     0692                     CWG1DAT         equ	1682	;# 
  2499     0693                     CWG1DBR         equ	1683	;# 
  2500     0694                     CWG1DBF         equ	1684	;# 
  2501     0695                     CWG1CON0        equ	1685	;# 
  2502     0696                     CWG1CON1        equ	1686	;# 
  2503     0697                     CWG1AS0         equ	1687	;# 
  2504     0698                     CWG1AS1         equ	1688	;# 
  2505     0699                     CWG1STR         equ	1689	;# 
  2506     0711                     CWG2CLKCON      equ	1809	;# 
  2507     0712                     CWG2DAT         equ	1810	;# 
  2508     0713                     CWG2DBR         equ	1811	;# 
  2509     0714                     CWG2DBF         equ	1812	;# 
  2510     0715                     CWG2CON0        equ	1813	;# 
  2511     0716                     CWG2CON1        equ	1814	;# 
  2512     0717                     CWG2AS0         equ	1815	;# 
  2513     0718                     CWG2AS1         equ	1816	;# 
  2514     0719                     CWG2STR         equ	1817	;# 
  2515     0891                     NVMADR          equ	2193	;# 
  2516     0891                     EEADR           equ	2193	;# 
  2517     0891                     PMADR           equ	2193	;# 
  2518     0891                     NVMADRL         equ	2193	;# 
  2519     0891                     EEADRL          equ	2193	;# 
  2520     0891                     PMADRL          equ	2193	;# 
  2521     0892                     NVMADRH         equ	2194	;# 
  2522     0892                     EEADRH          equ	2194	;# 
  2523     0892                     PMADRH          equ	2194	;# 
  2524     0893                     NVMDAT          equ	2195	;# 
  2525     0893                     EEDAT           equ	2195	;# 
  2526     0893                     PMDAT           equ	2195	;# 
  2527     0893                     NVMDATL         equ	2195	;# 
  2528     0893                     EEDATL          equ	2195	;# 
  2529     0893                     PMDATL          equ	2195	;# 
  2530     0894                     NVMDATH         equ	2196	;# 
  2531     0894                     EEDATH          equ	2196	;# 
  2532     0894                     PMDATH          equ	2196	;# 
  2533     0895                     NVMCON1         equ	2197	;# 
  2534     0895                     EECON1          equ	2197	;# 
  2535     0895                     PMCON1          equ	2197	;# 
  2536     0896                     NVMCON2         equ	2198	;# 
  2537     0896                     EECON2          equ	2198	;# 
  2538     0896                     PMCON2          equ	2198	;# 
  2539     089B                     PCON0           equ	2203	;# 
  2540     0911                     PMD0            equ	2321	;# 
  2541     0912                     PMD1            equ	2322	;# 
  2542     0913                     PMD2            equ	2323	;# 
  2543     0914                     PMD3            equ	2324	;# 
  2544     0915                     PMD4            equ	2325	;# 
  2545     0916                     PMD5            equ	2326	;# 
  2546     0918                     CPUDOZE         equ	2328	;# 
  2547     0919                     OSCCON1         equ	2329	;# 
  2548     091A                     OSCCON2         equ	2330	;# 
  2549     091B                     OSCCON3         equ	2331	;# 
  2550     091C                     OSCSTAT1        equ	2332	;# 
  2551     091D                     OSCEN           equ	2333	;# 
  2552     091E                     OSCTUNE         equ	2334	;# 
  2553     091F                     OSCFRQ          equ	2335	;# 
  2554     0E0F                     PPSLOCK         equ	3599	;# 
  2555     0E10                     INTPPS          equ	3600	;# 
  2556     0E11                     T0CKIPPS        equ	3601	;# 
  2557     0E12                     T1CKIPPS        equ	3602	;# 
  2558     0E13                     T1GPPS          equ	3603	;# 
  2559     0E14                     CCP1PPS         equ	3604	;# 
  2560     0E15                     CCP2PPS         equ	3605	;# 
  2561     0E16                     CCP3PPS         equ	3606	;# 
  2562     0E17                     CCP4PPS         equ	3607	;# 
  2563     0E18                     CWG1PPS         equ	3608	;# 
  2564     0E19                     CWG2PPS         equ	3609	;# 
  2565     0E1A                     MDCIN1PPS       equ	3610	;# 
  2566     0E1B                     MDCIN2PPS       equ	3611	;# 
  2567     0E1C                     MDMINPPS        equ	3612	;# 
  2568     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2569     0E1E                     SSP2DATPPS      equ	3614	;# 
  2570     0E1F                     SSP2SSPPS       equ	3615	;# 
  2571     0E20                     SSP1CLKPPS      equ	3616	;# 
  2572     0E21                     SSP1DATPPS      equ	3617	;# 
  2573     0E22                     SSP1SSPPS       equ	3618	;# 
  2574     0E24                     RXPPS           equ	3620	;# 
  2575     0E25                     TXPPS           equ	3621	;# 
  2576     0E28                     CLCIN0PPS       equ	3624	;# 
  2577     0E29                     CLCIN1PPS       equ	3625	;# 
  2578     0E2A                     CLCIN2PPS       equ	3626	;# 
  2579     0E2B                     CLCIN3PPS       equ	3627	;# 
  2580     0E2C                     T3CKIPPS        equ	3628	;# 
  2581     0E2D                     T3GPPS          equ	3629	;# 
  2582     0E2E                     T5CKIPPS        equ	3630	;# 
  2583     0E2F                     T5GPPS          equ	3631	;# 
  2584     0E90                     RA0PPS          equ	3728	;# 
  2585     0E91                     RA1PPS          equ	3729	;# 
  2586     0E92                     RA2PPS          equ	3730	;# 
  2587     0E94                     RA4PPS          equ	3732	;# 
  2588     0E95                     RA5PPS          equ	3733	;# 
  2589     0E9C                     RB4PPS          equ	3740	;# 
  2590     0E9D                     RB5PPS          equ	3741	;# 
  2591     0E9E                     RB6PPS          equ	3742	;# 
  2592     0E9F                     RB7PPS          equ	3743	;# 
  2593     0EA0                     RC0PPS          equ	3744	;# 
  2594     0EA1                     RC1PPS          equ	3745	;# 
  2595     0EA2                     RC2PPS          equ	3746	;# 
  2596     0EA3                     RC3PPS          equ	3747	;# 
  2597     0EA4                     RC4PPS          equ	3748	;# 
  2598     0EA5                     RC5PPS          equ	3749	;# 
  2599     0EA6                     RC6PPS          equ	3750	;# 
  2600     0EA7                     RC7PPS          equ	3751	;# 
  2601     0F0F                     CLCDATA         equ	3855	;# 
  2602     0F10                     CLC1CON         equ	3856	;# 
  2603     0F11                     CLC1POL         equ	3857	;# 
  2604     0F12                     CLC1SEL0        equ	3858	;# 
  2605     0F13                     CLC1SEL1        equ	3859	;# 
  2606     0F14                     CLC1SEL2        equ	3860	;# 
  2607     0F15                     CLC1SEL3        equ	3861	;# 
  2608     0F16                     CLC1GLS0        equ	3862	;# 
  2609     0F17                     CLC1GLS1        equ	3863	;# 
  2610     0F18                     CLC1GLS2        equ	3864	;# 
  2611     0F19                     CLC1GLS3        equ	3865	;# 
  2612     0F1A                     CLC2CON         equ	3866	;# 
  2613     0F1B                     CLC2POL         equ	3867	;# 
  2614     0F1C                     CLC2SEL0        equ	3868	;# 
  2615     0F1D                     CLC2SEL1        equ	3869	;# 
  2616     0F1E                     CLC2SEL2        equ	3870	;# 
  2617     0F1F                     CLC2SEL3        equ	3871	;# 
  2618     0F20                     CLC2GLS0        equ	3872	;# 
  2619     0F21                     CLC2GLS1        equ	3873	;# 
  2620     0F22                     CLC2GLS2        equ	3874	;# 
  2621     0F23                     CLC2GLS3        equ	3875	;# 
  2622     0F24                     CLC3CON         equ	3876	;# 
  2623     0F25                     CLC3POL         equ	3877	;# 
  2624     0F26                     CLC3SEL0        equ	3878	;# 
  2625     0F27                     CLC3SEL1        equ	3879	;# 
  2626     0F28                     CLC3SEL2        equ	3880	;# 
  2627     0F29                     CLC3SEL3        equ	3881	;# 
  2628     0F2A                     CLC3GLS0        equ	3882	;# 
  2629     0F2B                     CLC3GLS1        equ	3883	;# 
  2630     0F2C                     CLC3GLS2        equ	3884	;# 
  2631     0F2D                     CLC3GLS3        equ	3885	;# 
  2632     0F2E                     CLC4CON         equ	3886	;# 
  2633     0F2F                     CLC4POL         equ	3887	;# 
  2634     0F30                     CLC4SEL0        equ	3888	;# 
  2635     0F31                     CLC4SEL1        equ	3889	;# 
  2636     0F32                     CLC4SEL2        equ	3890	;# 
  2637     0F33                     CLC4SEL3        equ	3891	;# 
  2638     0F34                     CLC4GLS0        equ	3892	;# 
  2639     0F35                     CLC4GLS1        equ	3893	;# 
  2640     0F36                     CLC4GLS2        equ	3894	;# 
  2641     0F37                     CLC4GLS3        equ	3895	;# 
  2642     0FE4                     STATUS_SHAD     equ	4068	;# 
  2643     0FE5                     WREG_SHAD       equ	4069	;# 
  2644     0FE6                     BSR_SHAD        equ	4070	;# 
  2645     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2646     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2647     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2648     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2649     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2650     0FED                     STKPTR          equ	4077	;# 
  2651     0FEE                     TOSL            equ	4078	;# 
  2652     0FEF                     TOSH            equ	4079	;# 
  2653     0000                     INDF0           equ	0	;# 
  2654     0001                     INDF1           equ	1	;# 
  2655     0002                     PCL             equ	2	;# 
  2656     0003                     STATUS          equ	3	;# 
  2657     0004                     FSR0L           equ	4	;# 
  2658     0005                     FSR0H           equ	5	;# 
  2659     0006                     FSR1L           equ	6	;# 
  2660     0007                     FSR1H           equ	7	;# 
  2661     0008                     BSR             equ	8	;# 
  2662     0009                     WREG            equ	9	;# 
  2663     000A                     PCLATH          equ	10	;# 
  2664     000B                     INTCON          equ	11	;# 
  2665     000C                     PORTA           equ	12	;# 
  2666     000D                     PORTB           equ	13	;# 
  2667     000E                     PORTC           equ	14	;# 
  2668     0010                     PIR0            equ	16	;# 
  2669     0011                     PIR1            equ	17	;# 
  2670     0012                     PIR2            equ	18	;# 
  2671     0013                     PIR3            equ	19	;# 
  2672     0014                     PIR4            equ	20	;# 
  2673     0015                     TMR0L           equ	21	;# 
  2674     0015                     TMR0            equ	21	;# 
  2675     0016                     TMR0H           equ	22	;# 
  2676     0016                     PR0             equ	22	;# 
  2677     0017                     T0CON0          equ	23	;# 
  2678     0018                     T0CON1          equ	24	;# 
  2679     0019                     TMR1            equ	25	;# 
  2680     0019                     TMR1L           equ	25	;# 
  2681     001A                     TMR1H           equ	26	;# 
  2682     001B                     T1CON           equ	27	;# 
  2683     001C                     T1GCON          equ	28	;# 
  2684     001D                     TMR2            equ	29	;# 
  2685     001E                     PR2             equ	30	;# 
  2686     001F                     T2CON           equ	31	;# 
  2687     008C                     TRISA           equ	140	;# 
  2688     008D                     TRISB           equ	141	;# 
  2689     008E                     TRISC           equ	142	;# 
  2690     0090                     PIE0            equ	144	;# 
  2691     0091                     PIE1            equ	145	;# 
  2692     0092                     PIE2            equ	146	;# 
  2693     0093                     PIE3            equ	147	;# 
  2694     0094                     PIE4            equ	148	;# 
  2695     0097                     WDTCON          equ	151	;# 
  2696     009B                     ADRES           equ	155	;# 
  2697     009B                     ADRESL          equ	155	;# 
  2698     009C                     ADRESH          equ	156	;# 
  2699     009D                     ADCON0          equ	157	;# 
  2700     009E                     ADCON1          equ	158	;# 
  2701     009F                     ADACT           equ	159	;# 
  2702     010C                     LATA            equ	268	;# 
  2703     010D                     LATB            equ	269	;# 
  2704     010E                     LATC            equ	270	;# 
  2705     0111                     CM1CON0         equ	273	;# 
  2706     0112                     CM1CON1         equ	274	;# 
  2707     0113                     CM2CON0         equ	275	;# 
  2708     0114                     CM2CON1         equ	276	;# 
  2709     0115                     CMOUT           equ	277	;# 
  2710     0116                     BORCON          equ	278	;# 
  2711     0117                     FVRCON          equ	279	;# 
  2712     0118                     DACCON0         equ	280	;# 
  2713     0119                     DACCON1         equ	281	;# 
  2714     018C                     ANSELA          equ	396	;# 
  2715     018D                     ANSELB          equ	397	;# 
  2716     018E                     ANSELC          equ	398	;# 
  2717     0197                     VREGCON         equ	407	;# 
  2718     0199                     RC1REG          equ	409	;# 
  2719     0199                     RCREG           equ	409	;# 
  2720     0199                     RCREG1          equ	409	;# 
  2721     019A                     TX1REG          equ	410	;# 
  2722     019A                     TXREG1          equ	410	;# 
  2723     019A                     TXREG           equ	410	;# 
  2724     019B                     SP1BRG          equ	411	;# 
  2725     019B                     SPBRG           equ	411	;# 
  2726     019B                     SP1BRGL         equ	411	;# 
  2727     019B                     SPBRG1          equ	411	;# 
  2728     019B                     SPBRGL          equ	411	;# 
  2729     019C                     SP1BRGH         equ	412	;# 
  2730     019C                     SPBRGH          equ	412	;# 
  2731     019C                     SPBRGH1         equ	412	;# 
  2732     019D                     RC1STA          equ	413	;# 
  2733     019D                     RCSTA1          equ	413	;# 
  2734     019D                     RCSTA           equ	413	;# 
  2735     019E                     TX1STA          equ	414	;# 
  2736     019E                     TXSTA1          equ	414	;# 
  2737     019E                     TXSTA           equ	414	;# 
  2738     019F                     BAUD1CON        equ	415	;# 
  2739     019F                     BAUDCON1        equ	415	;# 
  2740     019F                     BAUDCTL1        equ	415	;# 
  2741     019F                     BAUDCON         equ	415	;# 
  2742     019F                     BAUDCTL         equ	415	;# 
  2743     020C                     WPUA            equ	524	;# 
  2744     020D                     WPUB            equ	525	;# 
  2745     020E                     WPUC            equ	526	;# 
  2746     0211                     SSP1BUF         equ	529	;# 
  2747     0211                     SSPBUF          equ	529	;# 
  2748     0212                     SSP1ADD         equ	530	;# 
  2749     0212                     SSPADD          equ	530	;# 
  2750     0213                     SSP1MSK         equ	531	;# 
  2751     0213                     SSPMSK          equ	531	;# 
  2752     0214                     SSP1STAT        equ	532	;# 
  2753     0214                     SSPSTAT         equ	532	;# 
  2754     0215                     SSP1CON1        equ	533	;# 
  2755     0215                     SSPCON          equ	533	;# 
  2756     0215                     SSPCON1         equ	533	;# 
  2757     0215                     SSP1CON         equ	533	;# 
  2758     0216                     SSP1CON2        equ	534	;# 
  2759     0216                     SSPCON2         equ	534	;# 
  2760     0217                     SSP1CON3        equ	535	;# 
  2761     0217                     SSPCON3         equ	535	;# 
  2762     0219                     SSP2BUF         equ	537	;# 
  2763     021A                     SSP2ADD         equ	538	;# 
  2764     021B                     SSP2MSK         equ	539	;# 
  2765     021C                     SSP2STAT        equ	540	;# 
  2766     021D                     SSP2CON1        equ	541	;# 
  2767     021D                     SSP2CON         equ	541	;# 
  2768     021E                     SSP2CON2        equ	542	;# 
  2769     021F                     SSP2CON3        equ	543	;# 
  2770     028C                     ODCONA          equ	652	;# 
  2771     028D                     ODCONB          equ	653	;# 
  2772     028E                     ODCONC          equ	654	;# 
  2773     0291                     CCPR1           equ	657	;# 
  2774     0291                     CCPR1L          equ	657	;# 
  2775     0292                     CCPR1H          equ	658	;# 
  2776     0293                     CCP1CON         equ	659	;# 
  2777     0294                     CCP1CAP         equ	660	;# 
  2778     0295                     CCPR2           equ	661	;# 
  2779     0295                     CCPR2L          equ	661	;# 
  2780     0296                     CCPR2H          equ	662	;# 
  2781     0297                     CCP2CON         equ	663	;# 
  2782     0298                     CCP2CAP         equ	664	;# 
  2783     029F                     CCPTMRS         equ	671	;# 
  2784     030C                     SLRCONA         equ	780	;# 
  2785     030D                     SLRCONB         equ	781	;# 
  2786     030E                     SLRCONC         equ	782	;# 
  2787     0311                     CCPR3           equ	785	;# 
  2788     0311                     CCPR3L          equ	785	;# 
  2789     0312                     CCPR3H          equ	786	;# 
  2790     0313                     CCP3CON         equ	787	;# 
  2791     0314                     CCP3CAP         equ	788	;# 
  2792     0315                     CCPR4           equ	789	;# 
  2793     0315                     CCPR4L          equ	789	;# 
  2794     0316                     CCPR4H          equ	790	;# 
  2795     0317                     CCP4CON         equ	791	;# 
  2796     0318                     CCP4CAP         equ	792	;# 
  2797     038C                     INLVLA          equ	908	;# 
  2798     038D                     INLVLB          equ	909	;# 
  2799     038E                     INLVLC          equ	910	;# 
  2800     0391                     IOCAP           equ	913	;# 
  2801     0392                     IOCAN           equ	914	;# 
  2802     0393                     IOCAF           equ	915	;# 
  2803     0394                     IOCBP           equ	916	;# 
  2804     0395                     IOCBN           equ	917	;# 
  2805     0396                     IOCBF           equ	918	;# 
  2806     0397                     IOCCP           equ	919	;# 
  2807     0398                     IOCCN           equ	920	;# 
  2808     0399                     IOCCF           equ	921	;# 
  2809     039A                     CLKRCON         equ	922	;# 
  2810     039C                     MDCON           equ	924	;# 
  2811     039D                     MDSRC           equ	925	;# 
  2812     039E                     MDCARH          equ	926	;# 
  2813     039F                     MDCARL          equ	927	;# 
  2814     0411                     TMR3            equ	1041	;# 
  2815     0411                     TMR3L           equ	1041	;# 
  2816     0412                     TMR3H           equ	1042	;# 
  2817     0413                     T3CON           equ	1043	;# 
  2818     0414                     T3GCON          equ	1044	;# 
  2819     0415                     TMR4            equ	1045	;# 
  2820     0416                     PR4             equ	1046	;# 
  2821     0417                     T4CON           equ	1047	;# 
  2822     0418                     TMR5            equ	1048	;# 
  2823     0418                     TMR5L           equ	1048	;# 
  2824     0419                     TMR5H           equ	1049	;# 
  2825     041A                     T5CON           equ	1050	;# 
  2826     041B                     T5GCON          equ	1051	;# 
  2827     041C                     TMR6            equ	1052	;# 
  2828     041D                     PR6             equ	1053	;# 
  2829     041E                     T6CON           equ	1054	;# 
  2830     041F                     CCDCON          equ	1055	;# 
  2831     0498                     NCO1ACC         equ	1176	;# 
  2832     0498                     NCO1ACCL        equ	1176	;# 
  2833     0499                     NCO1ACCH        equ	1177	;# 
  2834     049A                     NCO1ACCU        equ	1178	;# 
  2835     049B                     NCO1INC         equ	1179	;# 
  2836     049B                     NCO1INCL        equ	1179	;# 
  2837     049C                     NCO1INCH        equ	1180	;# 
  2838     049D                     NCO1INCU        equ	1181	;# 
  2839     049E                     NCO1CON         equ	1182	;# 
  2840     049F                     NCO1CLK         equ	1183	;# 
  2841     0617                     PWM5DCL         equ	1559	;# 
  2842     0618                     PWM5DCH         equ	1560	;# 
  2843     0619                     PWM5CON         equ	1561	;# 
  2844     0619                     PWM5CON0        equ	1561	;# 
  2845     061A                     PWM6DCL         equ	1562	;# 
  2846     061B                     PWM6DCH         equ	1563	;# 
  2847     061C                     PWM6CON         equ	1564	;# 
  2848     061C                     PWM6CON0        equ	1564	;# 
  2849     061F                     PWMTMRS         equ	1567	;# 
  2850     0691                     CWG1CLKCON      equ	1681	;# 
  2851     0692                     CWG1DAT         equ	1682	;# 
  2852     0693                     CWG1DBR         equ	1683	;# 
  2853     0694                     CWG1DBF         equ	1684	;# 
  2854     0695                     CWG1CON0        equ	1685	;# 
  2855     0696                     CWG1CON1        equ	1686	;# 
  2856     0697                     CWG1AS0         equ	1687	;# 
  2857     0698                     CWG1AS1         equ	1688	;# 
  2858     0699                     CWG1STR         equ	1689	;# 
  2859     0711                     CWG2CLKCON      equ	1809	;# 
  2860     0712                     CWG2DAT         equ	1810	;# 
  2861     0713                     CWG2DBR         equ	1811	;# 
  2862     0714                     CWG2DBF         equ	1812	;# 
  2863     0715                     CWG2CON0        equ	1813	;# 
  2864     0716                     CWG2CON1        equ	1814	;# 
  2865     0717                     CWG2AS0         equ	1815	;# 
  2866     0718                     CWG2AS1         equ	1816	;# 
  2867     0719                     CWG2STR         equ	1817	;# 
  2868     0891                     NVMADR          equ	2193	;# 
  2869     0891                     EEADR           equ	2193	;# 
  2870     0891                     PMADR           equ	2193	;# 
  2871     0891                     NVMADRL         equ	2193	;# 
  2872     0891                     EEADRL          equ	2193	;# 
  2873     0891                     PMADRL          equ	2193	;# 
  2874     0892                     NVMADRH         equ	2194	;# 
  2875     0892                     EEADRH          equ	2194	;# 
  2876     0892                     PMADRH          equ	2194	;# 
  2877     0893                     NVMDAT          equ	2195	;# 
  2878     0893                     EEDAT           equ	2195	;# 
  2879     0893                     PMDAT           equ	2195	;# 
  2880     0893                     NVMDATL         equ	2195	;# 
  2881     0893                     EEDATL          equ	2195	;# 
  2882     0893                     PMDATL          equ	2195	;# 
  2883     0894                     NVMDATH         equ	2196	;# 
  2884     0894                     EEDATH          equ	2196	;# 
  2885     0894                     PMDATH          equ	2196	;# 
  2886     0895                     NVMCON1         equ	2197	;# 
  2887     0895                     EECON1          equ	2197	;# 
  2888     0895                     PMCON1          equ	2197	;# 
  2889     0896                     NVMCON2         equ	2198	;# 
  2890     0896                     EECON2          equ	2198	;# 
  2891     0896                     PMCON2          equ	2198	;# 
  2892     089B                     PCON0           equ	2203	;# 
  2893     0911                     PMD0            equ	2321	;# 
  2894     0912                     PMD1            equ	2322	;# 
  2895     0913                     PMD2            equ	2323	;# 
  2896     0914                     PMD3            equ	2324	;# 
  2897     0915                     PMD4            equ	2325	;# 
  2898     0916                     PMD5            equ	2326	;# 
  2899     0918                     CPUDOZE         equ	2328	;# 
  2900     0919                     OSCCON1         equ	2329	;# 
  2901     091A                     OSCCON2         equ	2330	;# 
  2902     091B                     OSCCON3         equ	2331	;# 
  2903     091C                     OSCSTAT1        equ	2332	;# 
  2904     091D                     OSCEN           equ	2333	;# 
  2905     091E                     OSCTUNE         equ	2334	;# 
  2906     091F                     OSCFRQ          equ	2335	;# 
  2907     0E0F                     PPSLOCK         equ	3599	;# 
  2908     0E10                     INTPPS          equ	3600	;# 
  2909     0E11                     T0CKIPPS        equ	3601	;# 
  2910     0E12                     T1CKIPPS        equ	3602	;# 
  2911     0E13                     T1GPPS          equ	3603	;# 
  2912     0E14                     CCP1PPS         equ	3604	;# 
  2913     0E15                     CCP2PPS         equ	3605	;# 
  2914     0E16                     CCP3PPS         equ	3606	;# 
  2915     0E17                     CCP4PPS         equ	3607	;# 
  2916     0E18                     CWG1PPS         equ	3608	;# 
  2917     0E19                     CWG2PPS         equ	3609	;# 
  2918     0E1A                     MDCIN1PPS       equ	3610	;# 
  2919     0E1B                     MDCIN2PPS       equ	3611	;# 
  2920     0E1C                     MDMINPPS        equ	3612	;# 
  2921     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2922     0E1E                     SSP2DATPPS      equ	3614	;# 
  2923     0E1F                     SSP2SSPPS       equ	3615	;# 
  2924     0E20                     SSP1CLKPPS      equ	3616	;# 
  2925     0E21                     SSP1DATPPS      equ	3617	;# 
  2926     0E22                     SSP1SSPPS       equ	3618	;# 
  2927     0E24                     RXPPS           equ	3620	;# 
  2928     0E25                     TXPPS           equ	3621	;# 
  2929     0E28                     CLCIN0PPS       equ	3624	;# 
  2930     0E29                     CLCIN1PPS       equ	3625	;# 
  2931     0E2A                     CLCIN2PPS       equ	3626	;# 
  2932     0E2B                     CLCIN3PPS       equ	3627	;# 
  2933     0E2C                     T3CKIPPS        equ	3628	;# 
  2934     0E2D                     T3GPPS          equ	3629	;# 
  2935     0E2E                     T5CKIPPS        equ	3630	;# 
  2936     0E2F                     T5GPPS          equ	3631	;# 
  2937     0E90                     RA0PPS          equ	3728	;# 
  2938     0E91                     RA1PPS          equ	3729	;# 
  2939     0E92                     RA2PPS          equ	3730	;# 
  2940     0E94                     RA4PPS          equ	3732	;# 
  2941     0E95                     RA5PPS          equ	3733	;# 
  2942     0E9C                     RB4PPS          equ	3740	;# 
  2943     0E9D                     RB5PPS          equ	3741	;# 
  2944     0E9E                     RB6PPS          equ	3742	;# 
  2945     0E9F                     RB7PPS          equ	3743	;# 
  2946     0EA0                     RC0PPS          equ	3744	;# 
  2947     0EA1                     RC1PPS          equ	3745	;# 
  2948     0EA2                     RC2PPS          equ	3746	;# 
  2949     0EA3                     RC3PPS          equ	3747	;# 
  2950     0EA4                     RC4PPS          equ	3748	;# 
  2951     0EA5                     RC5PPS          equ	3749	;# 
  2952     0EA6                     RC6PPS          equ	3750	;# 
  2953     0EA7                     RC7PPS          equ	3751	;# 
  2954     0F0F                     CLCDATA         equ	3855	;# 
  2955     0F10                     CLC1CON         equ	3856	;# 
  2956     0F11                     CLC1POL         equ	3857	;# 
  2957     0F12                     CLC1SEL0        equ	3858	;# 
  2958     0F13                     CLC1SEL1        equ	3859	;# 
  2959     0F14                     CLC1SEL2        equ	3860	;# 
  2960     0F15                     CLC1SEL3        equ	3861	;# 
  2961     0F16                     CLC1GLS0        equ	3862	;# 
  2962     0F17                     CLC1GLS1        equ	3863	;# 
  2963     0F18                     CLC1GLS2        equ	3864	;# 
  2964     0F19                     CLC1GLS3        equ	3865	;# 
  2965     0F1A                     CLC2CON         equ	3866	;# 
  2966     0F1B                     CLC2POL         equ	3867	;# 
  2967     0F1C                     CLC2SEL0        equ	3868	;# 
  2968     0F1D                     CLC2SEL1        equ	3869	;# 
  2969     0F1E                     CLC2SEL2        equ	3870	;# 
  2970     0F1F                     CLC2SEL3        equ	3871	;# 
  2971     0F20                     CLC2GLS0        equ	3872	;# 
  2972     0F21                     CLC2GLS1        equ	3873	;# 
  2973     0F22                     CLC2GLS2        equ	3874	;# 
  2974     0F23                     CLC2GLS3        equ	3875	;# 
  2975     0F24                     CLC3CON         equ	3876	;# 
  2976     0F25                     CLC3POL         equ	3877	;# 
  2977     0F26                     CLC3SEL0        equ	3878	;# 
  2978     0F27                     CLC3SEL1        equ	3879	;# 
  2979     0F28                     CLC3SEL2        equ	3880	;# 
  2980     0F29                     CLC3SEL3        equ	3881	;# 
  2981     0F2A                     CLC3GLS0        equ	3882	;# 
  2982     0F2B                     CLC3GLS1        equ	3883	;# 
  2983     0F2C                     CLC3GLS2        equ	3884	;# 
  2984     0F2D                     CLC3GLS3        equ	3885	;# 
  2985     0F2E                     CLC4CON         equ	3886	;# 
  2986     0F2F                     CLC4POL         equ	3887	;# 
  2987     0F30                     CLC4SEL0        equ	3888	;# 
  2988     0F31                     CLC4SEL1        equ	3889	;# 
  2989     0F32                     CLC4SEL2        equ	3890	;# 
  2990     0F33                     CLC4SEL3        equ	3891	;# 
  2991     0F34                     CLC4GLS0        equ	3892	;# 
  2992     0F35                     CLC4GLS1        equ	3893	;# 
  2993     0F36                     CLC4GLS2        equ	3894	;# 
  2994     0F37                     CLC4GLS3        equ	3895	;# 
  2995     0FE4                     STATUS_SHAD     equ	4068	;# 
  2996     0FE5                     WREG_SHAD       equ	4069	;# 
  2997     0FE6                     BSR_SHAD        equ	4070	;# 
  2998     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2999     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3000     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3001     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3002     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3003     0FED                     STKPTR          equ	4077	;# 
  3004     0FEE                     TOSL            equ	4078	;# 
  3005     0FEF                     TOSH            equ	4079	;# 
  3006     0000                     INDF0           equ	0	;# 
  3007     0001                     INDF1           equ	1	;# 
  3008     0002                     PCL             equ	2	;# 
  3009     0003                     STATUS          equ	3	;# 
  3010     0004                     FSR0L           equ	4	;# 
  3011     0005                     FSR0H           equ	5	;# 
  3012     0006                     FSR1L           equ	6	;# 
  3013     0007                     FSR1H           equ	7	;# 
  3014     0008                     BSR             equ	8	;# 
  3015     0009                     WREG            equ	9	;# 
  3016     000A                     PCLATH          equ	10	;# 
  3017     000B                     INTCON          equ	11	;# 
  3018     000C                     PORTA           equ	12	;# 
  3019     000D                     PORTB           equ	13	;# 
  3020     000E                     PORTC           equ	14	;# 
  3021     0010                     PIR0            equ	16	;# 
  3022     0011                     PIR1            equ	17	;# 
  3023     0012                     PIR2            equ	18	;# 
  3024     0013                     PIR3            equ	19	;# 
  3025     0014                     PIR4            equ	20	;# 
  3026     0015                     TMR0L           equ	21	;# 
  3027     0015                     TMR0            equ	21	;# 
  3028     0016                     TMR0H           equ	22	;# 
  3029     0016                     PR0             equ	22	;# 
  3030     0017                     T0CON0          equ	23	;# 
  3031     0018                     T0CON1          equ	24	;# 
  3032     0019                     TMR1            equ	25	;# 
  3033     0019                     TMR1L           equ	25	;# 
  3034     001A                     TMR1H           equ	26	;# 
  3035     001B                     T1CON           equ	27	;# 
  3036     001C                     T1GCON          equ	28	;# 
  3037     001D                     TMR2            equ	29	;# 
  3038     001E                     PR2             equ	30	;# 
  3039     001F                     T2CON           equ	31	;# 
  3040     008C                     TRISA           equ	140	;# 
  3041     008D                     TRISB           equ	141	;# 
  3042     008E                     TRISC           equ	142	;# 
  3043     0090                     PIE0            equ	144	;# 
  3044     0091                     PIE1            equ	145	;# 
  3045     0092                     PIE2            equ	146	;# 
  3046     0093                     PIE3            equ	147	;# 
  3047     0094                     PIE4            equ	148	;# 
  3048     0097                     WDTCON          equ	151	;# 
  3049     009B                     ADRES           equ	155	;# 
  3050     009B                     ADRESL          equ	155	;# 
  3051     009C                     ADRESH          equ	156	;# 
  3052     009D                     ADCON0          equ	157	;# 
  3053     009E                     ADCON1          equ	158	;# 
  3054     009F                     ADACT           equ	159	;# 
  3055     010C                     LATA            equ	268	;# 
  3056     010D                     LATB            equ	269	;# 
  3057     010E                     LATC            equ	270	;# 
  3058     0111                     CM1CON0         equ	273	;# 
  3059     0112                     CM1CON1         equ	274	;# 
  3060     0113                     CM2CON0         equ	275	;# 
  3061     0114                     CM2CON1         equ	276	;# 
  3062     0115                     CMOUT           equ	277	;# 
  3063     0116                     BORCON          equ	278	;# 
  3064     0117                     FVRCON          equ	279	;# 
  3065     0118                     DACCON0         equ	280	;# 
  3066     0119                     DACCON1         equ	281	;# 
  3067     018C                     ANSELA          equ	396	;# 
  3068     018D                     ANSELB          equ	397	;# 
  3069     018E                     ANSELC          equ	398	;# 
  3070     0197                     VREGCON         equ	407	;# 
  3071     0199                     RC1REG          equ	409	;# 
  3072     0199                     RCREG           equ	409	;# 
  3073     0199                     RCREG1          equ	409	;# 
  3074     019A                     TX1REG          equ	410	;# 
  3075     019A                     TXREG1          equ	410	;# 
  3076     019A                     TXREG           equ	410	;# 
  3077     019B                     SP1BRG          equ	411	;# 
  3078     019B                     SPBRG           equ	411	;# 
  3079     019B                     SP1BRGL         equ	411	;# 
  3080     019B                     SPBRG1          equ	411	;# 
  3081     019B                     SPBRGL          equ	411	;# 
  3082     019C                     SP1BRGH         equ	412	;# 
  3083     019C                     SPBRGH          equ	412	;# 
  3084     019C                     SPBRGH1         equ	412	;# 
  3085     019D                     RC1STA          equ	413	;# 
  3086     019D                     RCSTA1          equ	413	;# 
  3087     019D                     RCSTA           equ	413	;# 
  3088     019E                     TX1STA          equ	414	;# 
  3089     019E                     TXSTA1          equ	414	;# 
  3090     019E                     TXSTA           equ	414	;# 
  3091     019F                     BAUD1CON        equ	415	;# 
  3092     019F                     BAUDCON1        equ	415	;# 
  3093     019F                     BAUDCTL1        equ	415	;# 
  3094     019F                     BAUDCON         equ	415	;# 
  3095     019F                     BAUDCTL         equ	415	;# 
  3096     020C                     WPUA            equ	524	;# 
  3097     020D                     WPUB            equ	525	;# 
  3098     020E                     WPUC            equ	526	;# 
  3099     0211                     SSP1BUF         equ	529	;# 
  3100     0211                     SSPBUF          equ	529	;# 
  3101     0212                     SSP1ADD         equ	530	;# 
  3102     0212                     SSPADD          equ	530	;# 
  3103     0213                     SSP1MSK         equ	531	;# 
  3104     0213                     SSPMSK          equ	531	;# 
  3105     0214                     SSP1STAT        equ	532	;# 
  3106     0214                     SSPSTAT         equ	532	;# 
  3107     0215                     SSP1CON1        equ	533	;# 
  3108     0215                     SSPCON          equ	533	;# 
  3109     0215                     SSPCON1         equ	533	;# 
  3110     0215                     SSP1CON         equ	533	;# 
  3111     0216                     SSP1CON2        equ	534	;# 
  3112     0216                     SSPCON2         equ	534	;# 
  3113     0217                     SSP1CON3        equ	535	;# 
  3114     0217                     SSPCON3         equ	535	;# 
  3115     0219                     SSP2BUF         equ	537	;# 
  3116     021A                     SSP2ADD         equ	538	;# 
  3117     021B                     SSP2MSK         equ	539	;# 
  3118     021C                     SSP2STAT        equ	540	;# 
  3119     021D                     SSP2CON1        equ	541	;# 
  3120     021D                     SSP2CON         equ	541	;# 
  3121     021E                     SSP2CON2        equ	542	;# 
  3122     021F                     SSP2CON3        equ	543	;# 
  3123     028C                     ODCONA          equ	652	;# 
  3124     028D                     ODCONB          equ	653	;# 
  3125     028E                     ODCONC          equ	654	;# 
  3126     0291                     CCPR1           equ	657	;# 
  3127     0291                     CCPR1L          equ	657	;# 
  3128     0292                     CCPR1H          equ	658	;# 
  3129     0293                     CCP1CON         equ	659	;# 
  3130     0294                     CCP1CAP         equ	660	;# 
  3131     0295                     CCPR2           equ	661	;# 
  3132     0295                     CCPR2L          equ	661	;# 
  3133     0296                     CCPR2H          equ	662	;# 
  3134     0297                     CCP2CON         equ	663	;# 
  3135     0298                     CCP2CAP         equ	664	;# 
  3136     029F                     CCPTMRS         equ	671	;# 
  3137     030C                     SLRCONA         equ	780	;# 
  3138     030D                     SLRCONB         equ	781	;# 
  3139     030E                     SLRCONC         equ	782	;# 
  3140     0311                     CCPR3           equ	785	;# 
  3141     0311                     CCPR3L          equ	785	;# 
  3142     0312                     CCPR3H          equ	786	;# 
  3143     0313                     CCP3CON         equ	787	;# 
  3144     0314                     CCP3CAP         equ	788	;# 
  3145     0315                     CCPR4           equ	789	;# 
  3146     0315                     CCPR4L          equ	789	;# 
  3147     0316                     CCPR4H          equ	790	;# 
  3148     0317                     CCP4CON         equ	791	;# 
  3149     0318                     CCP4CAP         equ	792	;# 
  3150     038C                     INLVLA          equ	908	;# 
  3151     038D                     INLVLB          equ	909	;# 
  3152     038E                     INLVLC          equ	910	;# 
  3153     0391                     IOCAP           equ	913	;# 
  3154     0392                     IOCAN           equ	914	;# 
  3155     0393                     IOCAF           equ	915	;# 
  3156     0394                     IOCBP           equ	916	;# 
  3157     0395                     IOCBN           equ	917	;# 
  3158     0396                     IOCBF           equ	918	;# 
  3159     0397                     IOCCP           equ	919	;# 
  3160     0398                     IOCCN           equ	920	;# 
  3161     0399                     IOCCF           equ	921	;# 
  3162     039A                     CLKRCON         equ	922	;# 
  3163     039C                     MDCON           equ	924	;# 
  3164     039D                     MDSRC           equ	925	;# 
  3165     039E                     MDCARH          equ	926	;# 
  3166     039F                     MDCARL          equ	927	;# 
  3167     0411                     TMR3            equ	1041	;# 
  3168     0411                     TMR3L           equ	1041	;# 
  3169     0412                     TMR3H           equ	1042	;# 
  3170     0413                     T3CON           equ	1043	;# 
  3171     0414                     T3GCON          equ	1044	;# 
  3172     0415                     TMR4            equ	1045	;# 
  3173     0416                     PR4             equ	1046	;# 
  3174     0417                     T4CON           equ	1047	;# 
  3175     0418                     TMR5            equ	1048	;# 
  3176     0418                     TMR5L           equ	1048	;# 
  3177     0419                     TMR5H           equ	1049	;# 
  3178     041A                     T5CON           equ	1050	;# 
  3179     041B                     T5GCON          equ	1051	;# 
  3180     041C                     TMR6            equ	1052	;# 
  3181     041D                     PR6             equ	1053	;# 
  3182     041E                     T6CON           equ	1054	;# 
  3183     041F                     CCDCON          equ	1055	;# 
  3184     0498                     NCO1ACC         equ	1176	;# 
  3185     0498                     NCO1ACCL        equ	1176	;# 
  3186     0499                     NCO1ACCH        equ	1177	;# 
  3187     049A                     NCO1ACCU        equ	1178	;# 
  3188     049B                     NCO1INC         equ	1179	;# 
  3189     049B                     NCO1INCL        equ	1179	;# 
  3190     049C                     NCO1INCH        equ	1180	;# 
  3191     049D                     NCO1INCU        equ	1181	;# 
  3192     049E                     NCO1CON         equ	1182	;# 
  3193     049F                     NCO1CLK         equ	1183	;# 
  3194     0617                     PWM5DCL         equ	1559	;# 
  3195     0618                     PWM5DCH         equ	1560	;# 
  3196     0619                     PWM5CON         equ	1561	;# 
  3197     0619                     PWM5CON0        equ	1561	;# 
  3198     061A                     PWM6DCL         equ	1562	;# 
  3199     061B                     PWM6DCH         equ	1563	;# 
  3200     061C                     PWM6CON         equ	1564	;# 
  3201     061C                     PWM6CON0        equ	1564	;# 
  3202     061F                     PWMTMRS         equ	1567	;# 
  3203     0691                     CWG1CLKCON      equ	1681	;# 
  3204     0692                     CWG1DAT         equ	1682	;# 
  3205     0693                     CWG1DBR         equ	1683	;# 
  3206     0694                     CWG1DBF         equ	1684	;# 
  3207     0695                     CWG1CON0        equ	1685	;# 
  3208     0696                     CWG1CON1        equ	1686	;# 
  3209     0697                     CWG1AS0         equ	1687	;# 
  3210     0698                     CWG1AS1         equ	1688	;# 
  3211     0699                     CWG1STR         equ	1689	;# 
  3212     0711                     CWG2CLKCON      equ	1809	;# 
  3213     0712                     CWG2DAT         equ	1810	;# 
  3214     0713                     CWG2DBR         equ	1811	;# 
  3215     0714                     CWG2DBF         equ	1812	;# 
  3216     0715                     CWG2CON0        equ	1813	;# 
  3217     0716                     CWG2CON1        equ	1814	;# 
  3218     0717                     CWG2AS0         equ	1815	;# 
  3219     0718                     CWG2AS1         equ	1816	;# 
  3220     0719                     CWG2STR         equ	1817	;# 
  3221     0891                     NVMADR          equ	2193	;# 
  3222     0891                     EEADR           equ	2193	;# 
  3223     0891                     PMADR           equ	2193	;# 
  3224     0891                     NVMADRL         equ	2193	;# 
  3225     0891                     EEADRL          equ	2193	;# 
  3226     0891                     PMADRL          equ	2193	;# 
  3227     0892                     NVMADRH         equ	2194	;# 
  3228     0892                     EEADRH          equ	2194	;# 
  3229     0892                     PMADRH          equ	2194	;# 
  3230     0893                     NVMDAT          equ	2195	;# 
  3231     0893                     EEDAT           equ	2195	;# 
  3232     0893                     PMDAT           equ	2195	;# 
  3233     0893                     NVMDATL         equ	2195	;# 
  3234     0893                     EEDATL          equ	2195	;# 
  3235     0893                     PMDATL          equ	2195	;# 
  3236     0894                     NVMDATH         equ	2196	;# 
  3237     0894                     EEDATH          equ	2196	;# 
  3238     0894                     PMDATH          equ	2196	;# 
  3239     0895                     NVMCON1         equ	2197	;# 
  3240     0895                     EECON1          equ	2197	;# 
  3241     0895                     PMCON1          equ	2197	;# 
  3242     0896                     NVMCON2         equ	2198	;# 
  3243     0896                     EECON2          equ	2198	;# 
  3244     0896                     PMCON2          equ	2198	;# 
  3245     089B                     PCON0           equ	2203	;# 
  3246     0911                     PMD0            equ	2321	;# 
  3247     0912                     PMD1            equ	2322	;# 
  3248     0913                     PMD2            equ	2323	;# 
  3249     0914                     PMD3            equ	2324	;# 
  3250     0915                     PMD4            equ	2325	;# 
  3251     0916                     PMD5            equ	2326	;# 
  3252     0918                     CPUDOZE         equ	2328	;# 
  3253     0919                     OSCCON1         equ	2329	;# 
  3254     091A                     OSCCON2         equ	2330	;# 
  3255     091B                     OSCCON3         equ	2331	;# 
  3256     091C                     OSCSTAT1        equ	2332	;# 
  3257     091D                     OSCEN           equ	2333	;# 
  3258     091E                     OSCTUNE         equ	2334	;# 
  3259     091F                     OSCFRQ          equ	2335	;# 
  3260     0E0F                     PPSLOCK         equ	3599	;# 
  3261     0E10                     INTPPS          equ	3600	;# 
  3262     0E11                     T0CKIPPS        equ	3601	;# 
  3263     0E12                     T1CKIPPS        equ	3602	;# 
  3264     0E13                     T1GPPS          equ	3603	;# 
  3265     0E14                     CCP1PPS         equ	3604	;# 
  3266     0E15                     CCP2PPS         equ	3605	;# 
  3267     0E16                     CCP3PPS         equ	3606	;# 
  3268     0E17                     CCP4PPS         equ	3607	;# 
  3269     0E18                     CWG1PPS         equ	3608	;# 
  3270     0E19                     CWG2PPS         equ	3609	;# 
  3271     0E1A                     MDCIN1PPS       equ	3610	;# 
  3272     0E1B                     MDCIN2PPS       equ	3611	;# 
  3273     0E1C                     MDMINPPS        equ	3612	;# 
  3274     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3275     0E1E                     SSP2DATPPS      equ	3614	;# 
  3276     0E1F                     SSP2SSPPS       equ	3615	;# 
  3277     0E20                     SSP1CLKPPS      equ	3616	;# 
  3278     0E21                     SSP1DATPPS      equ	3617	;# 
  3279     0E22                     SSP1SSPPS       equ	3618	;# 
  3280     0E24                     RXPPS           equ	3620	;# 
  3281     0E25                     TXPPS           equ	3621	;# 
  3282     0E28                     CLCIN0PPS       equ	3624	;# 
  3283     0E29                     CLCIN1PPS       equ	3625	;# 
  3284     0E2A                     CLCIN2PPS       equ	3626	;# 
  3285     0E2B                     CLCIN3PPS       equ	3627	;# 
  3286     0E2C                     T3CKIPPS        equ	3628	;# 
  3287     0E2D                     T3GPPS          equ	3629	;# 
  3288     0E2E                     T5CKIPPS        equ	3630	;# 
  3289     0E2F                     T5GPPS          equ	3631	;# 
  3290     0E90                     RA0PPS          equ	3728	;# 
  3291     0E91                     RA1PPS          equ	3729	;# 
  3292     0E92                     RA2PPS          equ	3730	;# 
  3293     0E94                     RA4PPS          equ	3732	;# 
  3294     0E95                     RA5PPS          equ	3733	;# 
  3295     0E9C                     RB4PPS          equ	3740	;# 
  3296     0E9D                     RB5PPS          equ	3741	;# 
  3297     0E9E                     RB6PPS          equ	3742	;# 
  3298     0E9F                     RB7PPS          equ	3743	;# 
  3299     0EA0                     RC0PPS          equ	3744	;# 
  3300     0EA1                     RC1PPS          equ	3745	;# 
  3301     0EA2                     RC2PPS          equ	3746	;# 
  3302     0EA3                     RC3PPS          equ	3747	;# 
  3303     0EA4                     RC4PPS          equ	3748	;# 
  3304     0EA5                     RC5PPS          equ	3749	;# 
  3305     0EA6                     RC6PPS          equ	3750	;# 
  3306     0EA7                     RC7PPS          equ	3751	;# 
  3307     0F0F                     CLCDATA         equ	3855	;# 
  3308     0F10                     CLC1CON         equ	3856	;# 
  3309     0F11                     CLC1POL         equ	3857	;# 
  3310     0F12                     CLC1SEL0        equ	3858	;# 
  3311     0F13                     CLC1SEL1        equ	3859	;# 
  3312     0F14                     CLC1SEL2        equ	3860	;# 
  3313     0F15                     CLC1SEL3        equ	3861	;# 
  3314     0F16                     CLC1GLS0        equ	3862	;# 
  3315     0F17                     CLC1GLS1        equ	3863	;# 
  3316     0F18                     CLC1GLS2        equ	3864	;# 
  3317     0F19                     CLC1GLS3        equ	3865	;# 
  3318     0F1A                     CLC2CON         equ	3866	;# 
  3319     0F1B                     CLC2POL         equ	3867	;# 
  3320     0F1C                     CLC2SEL0        equ	3868	;# 
  3321     0F1D                     CLC2SEL1        equ	3869	;# 
  3322     0F1E                     CLC2SEL2        equ	3870	;# 
  3323     0F1F                     CLC2SEL3        equ	3871	;# 
  3324     0F20                     CLC2GLS0        equ	3872	;# 
  3325     0F21                     CLC2GLS1        equ	3873	;# 
  3326     0F22                     CLC2GLS2        equ	3874	;# 
  3327     0F23                     CLC2GLS3        equ	3875	;# 
  3328     0F24                     CLC3CON         equ	3876	;# 
  3329     0F25                     CLC3POL         equ	3877	;# 
  3330     0F26                     CLC3SEL0        equ	3878	;# 
  3331     0F27                     CLC3SEL1        equ	3879	;# 
  3332     0F28                     CLC3SEL2        equ	3880	;# 
  3333     0F29                     CLC3SEL3        equ	3881	;# 
  3334     0F2A                     CLC3GLS0        equ	3882	;# 
  3335     0F2B                     CLC3GLS1        equ	3883	;# 
  3336     0F2C                     CLC3GLS2        equ	3884	;# 
  3337     0F2D                     CLC3GLS3        equ	3885	;# 
  3338     0F2E                     CLC4CON         equ	3886	;# 
  3339     0F2F                     CLC4POL         equ	3887	;# 
  3340     0F30                     CLC4SEL0        equ	3888	;# 
  3341     0F31                     CLC4SEL1        equ	3889	;# 
  3342     0F32                     CLC4SEL2        equ	3890	;# 
  3343     0F33                     CLC4SEL3        equ	3891	;# 
  3344     0F34                     CLC4GLS0        equ	3892	;# 
  3345     0F35                     CLC4GLS1        equ	3893	;# 
  3346     0F36                     CLC4GLS2        equ	3894	;# 
  3347     0F37                     CLC4GLS3        equ	3895	;# 
  3348     0FE4                     STATUS_SHAD     equ	4068	;# 
  3349     0FE5                     WREG_SHAD       equ	4069	;# 
  3350     0FE6                     BSR_SHAD        equ	4070	;# 
  3351     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3352     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3353     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3354     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3355     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3356     0FED                     STKPTR          equ	4077	;# 
  3357     0FEE                     TOSL            equ	4078	;# 
  3358     0FEF                     TOSH            equ	4079	;# 
  3359     0000                     INDF0           equ	0	;# 
  3360     0001                     INDF1           equ	1	;# 
  3361     0002                     PCL             equ	2	;# 
  3362     0003                     STATUS          equ	3	;# 
  3363     0004                     FSR0L           equ	4	;# 
  3364     0005                     FSR0H           equ	5	;# 
  3365     0006                     FSR1L           equ	6	;# 
  3366     0007                     FSR1H           equ	7	;# 
  3367     0008                     BSR             equ	8	;# 
  3368     0009                     WREG            equ	9	;# 
  3369     000A                     PCLATH          equ	10	;# 
  3370     000B                     INTCON          equ	11	;# 
  3371     000C                     PORTA           equ	12	;# 
  3372     000D                     PORTB           equ	13	;# 
  3373     000E                     PORTC           equ	14	;# 
  3374     0010                     PIR0            equ	16	;# 
  3375     0011                     PIR1            equ	17	;# 
  3376     0012                     PIR2            equ	18	;# 
  3377     0013                     PIR3            equ	19	;# 
  3378     0014                     PIR4            equ	20	;# 
  3379     0015                     TMR0L           equ	21	;# 
  3380     0015                     TMR0            equ	21	;# 
  3381     0016                     TMR0H           equ	22	;# 
  3382     0016                     PR0             equ	22	;# 
  3383     0017                     T0CON0          equ	23	;# 
  3384     0018                     T0CON1          equ	24	;# 
  3385     0019                     TMR1            equ	25	;# 
  3386     0019                     TMR1L           equ	25	;# 
  3387     001A                     TMR1H           equ	26	;# 
  3388     001B                     T1CON           equ	27	;# 
  3389     001C                     T1GCON          equ	28	;# 
  3390     001D                     TMR2            equ	29	;# 
  3391     001E                     PR2             equ	30	;# 
  3392     001F                     T2CON           equ	31	;# 
  3393     008C                     TRISA           equ	140	;# 
  3394     008D                     TRISB           equ	141	;# 
  3395     008E                     TRISC           equ	142	;# 
  3396     0090                     PIE0            equ	144	;# 
  3397     0091                     PIE1            equ	145	;# 
  3398     0092                     PIE2            equ	146	;# 
  3399     0093                     PIE3            equ	147	;# 
  3400     0094                     PIE4            equ	148	;# 
  3401     0097                     WDTCON          equ	151	;# 
  3402     009B                     ADRES           equ	155	;# 
  3403     009B                     ADRESL          equ	155	;# 
  3404     009C                     ADRESH          equ	156	;# 
  3405     009D                     ADCON0          equ	157	;# 
  3406     009E                     ADCON1          equ	158	;# 
  3407     009F                     ADACT           equ	159	;# 
  3408     010C                     LATA            equ	268	;# 
  3409     010D                     LATB            equ	269	;# 
  3410     010E                     LATC            equ	270	;# 
  3411     0111                     CM1CON0         equ	273	;# 
  3412     0112                     CM1CON1         equ	274	;# 
  3413     0113                     CM2CON0         equ	275	;# 
  3414     0114                     CM2CON1         equ	276	;# 
  3415     0115                     CMOUT           equ	277	;# 
  3416     0116                     BORCON          equ	278	;# 
  3417     0117                     FVRCON          equ	279	;# 
  3418     0118                     DACCON0         equ	280	;# 
  3419     0119                     DACCON1         equ	281	;# 
  3420     018C                     ANSELA          equ	396	;# 
  3421     018D                     ANSELB          equ	397	;# 
  3422     018E                     ANSELC          equ	398	;# 
  3423     0197                     VREGCON         equ	407	;# 
  3424     0199                     RC1REG          equ	409	;# 
  3425     0199                     RCREG           equ	409	;# 
  3426     0199                     RCREG1          equ	409	;# 
  3427     019A                     TX1REG          equ	410	;# 
  3428     019A                     TXREG1          equ	410	;# 
  3429     019A                     TXREG           equ	410	;# 
  3430     019B                     SP1BRG          equ	411	;# 
  3431     019B                     SPBRG           equ	411	;# 
  3432     019B                     SP1BRGL         equ	411	;# 
  3433     019B                     SPBRG1          equ	411	;# 
  3434     019B                     SPBRGL          equ	411	;# 
  3435     019C                     SP1BRGH         equ	412	;# 
  3436     019C                     SPBRGH          equ	412	;# 
  3437     019C                     SPBRGH1         equ	412	;# 
  3438     019D                     RC1STA          equ	413	;# 
  3439     019D                     RCSTA1          equ	413	;# 
  3440     019D                     RCSTA           equ	413	;# 
  3441     019E                     TX1STA          equ	414	;# 
  3442     019E                     TXSTA1          equ	414	;# 
  3443     019E                     TXSTA           equ	414	;# 
  3444     019F                     BAUD1CON        equ	415	;# 
  3445     019F                     BAUDCON1        equ	415	;# 
  3446     019F                     BAUDCTL1        equ	415	;# 
  3447     019F                     BAUDCON         equ	415	;# 
  3448     019F                     BAUDCTL         equ	415	;# 
  3449     020C                     WPUA            equ	524	;# 
  3450     020D                     WPUB            equ	525	;# 
  3451     020E                     WPUC            equ	526	;# 
  3452     0211                     SSP1BUF         equ	529	;# 
  3453     0211                     SSPBUF          equ	529	;# 
  3454     0212                     SSP1ADD         equ	530	;# 
  3455     0212                     SSPADD          equ	530	;# 
  3456     0213                     SSP1MSK         equ	531	;# 
  3457     0213                     SSPMSK          equ	531	;# 
  3458     0214                     SSP1STAT        equ	532	;# 
  3459     0214                     SSPSTAT         equ	532	;# 
  3460     0215                     SSP1CON1        equ	533	;# 
  3461     0215                     SSPCON          equ	533	;# 
  3462     0215                     SSPCON1         equ	533	;# 
  3463     0215                     SSP1CON         equ	533	;# 
  3464     0216                     SSP1CON2        equ	534	;# 
  3465     0216                     SSPCON2         equ	534	;# 
  3466     0217                     SSP1CON3        equ	535	;# 
  3467     0217                     SSPCON3         equ	535	;# 
  3468     0219                     SSP2BUF         equ	537	;# 
  3469     021A                     SSP2ADD         equ	538	;# 
  3470     021B                     SSP2MSK         equ	539	;# 
  3471     021C                     SSP2STAT        equ	540	;# 
  3472     021D                     SSP2CON1        equ	541	;# 
  3473     021D                     SSP2CON         equ	541	;# 
  3474     021E                     SSP2CON2        equ	542	;# 
  3475     021F                     SSP2CON3        equ	543	;# 
  3476     028C                     ODCONA          equ	652	;# 
  3477     028D                     ODCONB          equ	653	;# 
  3478     028E                     ODCONC          equ	654	;# 
  3479     0291                     CCPR1           equ	657	;# 
  3480     0291                     CCPR1L          equ	657	;# 
  3481     0292                     CCPR1H          equ	658	;# 
  3482     0293                     CCP1CON         equ	659	;# 
  3483     0294                     CCP1CAP         equ	660	;# 
  3484     0295                     CCPR2           equ	661	;# 
  3485     0295                     CCPR2L          equ	661	;# 
  3486     0296                     CCPR2H          equ	662	;# 
  3487     0297                     CCP2CON         equ	663	;# 
  3488     0298                     CCP2CAP         equ	664	;# 
  3489     029F                     CCPTMRS         equ	671	;# 
  3490     030C                     SLRCONA         equ	780	;# 
  3491     030D                     SLRCONB         equ	781	;# 
  3492     030E                     SLRCONC         equ	782	;# 
  3493     0311                     CCPR3           equ	785	;# 
  3494     0311                     CCPR3L          equ	785	;# 
  3495     0312                     CCPR3H          equ	786	;# 
  3496     0313                     CCP3CON         equ	787	;# 
  3497     0314                     CCP3CAP         equ	788	;# 
  3498     0315                     CCPR4           equ	789	;# 
  3499     0315                     CCPR4L          equ	789	;# 
  3500     0316                     CCPR4H          equ	790	;# 
  3501     0317                     CCP4CON         equ	791	;# 
  3502     0318                     CCP4CAP         equ	792	;# 
  3503     038C                     INLVLA          equ	908	;# 
  3504     038D                     INLVLB          equ	909	;# 
  3505     038E                     INLVLC          equ	910	;# 
  3506     0391                     IOCAP           equ	913	;# 
  3507     0392                     IOCAN           equ	914	;# 
  3508     0393                     IOCAF           equ	915	;# 
  3509     0394                     IOCBP           equ	916	;# 
  3510     0395                     IOCBN           equ	917	;# 
  3511     0396                     IOCBF           equ	918	;# 
  3512     0397                     IOCCP           equ	919	;# 
  3513     0398                     IOCCN           equ	920	;# 
  3514     0399                     IOCCF           equ	921	;# 
  3515     039A                     CLKRCON         equ	922	;# 
  3516     039C                     MDCON           equ	924	;# 
  3517     039D                     MDSRC           equ	925	;# 
  3518     039E                     MDCARH          equ	926	;# 
  3519     039F                     MDCARL          equ	927	;# 
  3520     0411                     TMR3            equ	1041	;# 
  3521     0411                     TMR3L           equ	1041	;# 
  3522     0412                     TMR3H           equ	1042	;# 
  3523     0413                     T3CON           equ	1043	;# 
  3524     0414                     T3GCON          equ	1044	;# 
  3525     0415                     TMR4            equ	1045	;# 
  3526     0416                     PR4             equ	1046	;# 
  3527     0417                     T4CON           equ	1047	;# 
  3528     0418                     TMR5            equ	1048	;# 
  3529     0418                     TMR5L           equ	1048	;# 
  3530     0419                     TMR5H           equ	1049	;# 
  3531     041A                     T5CON           equ	1050	;# 
  3532     041B                     T5GCON          equ	1051	;# 
  3533     041C                     TMR6            equ	1052	;# 
  3534     041D                     PR6             equ	1053	;# 
  3535     041E                     T6CON           equ	1054	;# 
  3536     041F                     CCDCON          equ	1055	;# 
  3537     0498                     NCO1ACC         equ	1176	;# 
  3538     0498                     NCO1ACCL        equ	1176	;# 
  3539     0499                     NCO1ACCH        equ	1177	;# 
  3540     049A                     NCO1ACCU        equ	1178	;# 
  3541     049B                     NCO1INC         equ	1179	;# 
  3542     049B                     NCO1INCL        equ	1179	;# 
  3543     049C                     NCO1INCH        equ	1180	;# 
  3544     049D                     NCO1INCU        equ	1181	;# 
  3545     049E                     NCO1CON         equ	1182	;# 
  3546     049F                     NCO1CLK         equ	1183	;# 
  3547     0617                     PWM5DCL         equ	1559	;# 
  3548     0618                     PWM5DCH         equ	1560	;# 
  3549     0619                     PWM5CON         equ	1561	;# 
  3550     0619                     PWM5CON0        equ	1561	;# 
  3551     061A                     PWM6DCL         equ	1562	;# 
  3552     061B                     PWM6DCH         equ	1563	;# 
  3553     061C                     PWM6CON         equ	1564	;# 
  3554     061C                     PWM6CON0        equ	1564	;# 
  3555     061F                     PWMTMRS         equ	1567	;# 
  3556     0691                     CWG1CLKCON      equ	1681	;# 
  3557     0692                     CWG1DAT         equ	1682	;# 
  3558     0693                     CWG1DBR         equ	1683	;# 
  3559     0694                     CWG1DBF         equ	1684	;# 
  3560     0695                     CWG1CON0        equ	1685	;# 
  3561     0696                     CWG1CON1        equ	1686	;# 
  3562     0697                     CWG1AS0         equ	1687	;# 
  3563     0698                     CWG1AS1         equ	1688	;# 
  3564     0699                     CWG1STR         equ	1689	;# 
  3565     0711                     CWG2CLKCON      equ	1809	;# 
  3566     0712                     CWG2DAT         equ	1810	;# 
  3567     0713                     CWG2DBR         equ	1811	;# 
  3568     0714                     CWG2DBF         equ	1812	;# 
  3569     0715                     CWG2CON0        equ	1813	;# 
  3570     0716                     CWG2CON1        equ	1814	;# 
  3571     0717                     CWG2AS0         equ	1815	;# 
  3572     0718                     CWG2AS1         equ	1816	;# 
  3573     0719                     CWG2STR         equ	1817	;# 
  3574     0891                     NVMADR          equ	2193	;# 
  3575     0891                     EEADR           equ	2193	;# 
  3576     0891                     PMADR           equ	2193	;# 
  3577     0891                     NVMADRL         equ	2193	;# 
  3578     0891                     EEADRL          equ	2193	;# 
  3579     0891                     PMADRL          equ	2193	;# 
  3580     0892                     NVMADRH         equ	2194	;# 
  3581     0892                     EEADRH          equ	2194	;# 
  3582     0892                     PMADRH          equ	2194	;# 
  3583     0893                     NVMDAT          equ	2195	;# 
  3584     0893                     EEDAT           equ	2195	;# 
  3585     0893                     PMDAT           equ	2195	;# 
  3586     0893                     NVMDATL         equ	2195	;# 
  3587     0893                     EEDATL          equ	2195	;# 
  3588     0893                     PMDATL          equ	2195	;# 
  3589     0894                     NVMDATH         equ	2196	;# 
  3590     0894                     EEDATH          equ	2196	;# 
  3591     0894                     PMDATH          equ	2196	;# 
  3592     0895                     NVMCON1         equ	2197	;# 
  3593     0895                     EECON1          equ	2197	;# 
  3594     0895                     PMCON1          equ	2197	;# 
  3595     0896                     NVMCON2         equ	2198	;# 
  3596     0896                     EECON2          equ	2198	;# 
  3597     0896                     PMCON2          equ	2198	;# 
  3598     089B                     PCON0           equ	2203	;# 
  3599     0911                     PMD0            equ	2321	;# 
  3600     0912                     PMD1            equ	2322	;# 
  3601     0913                     PMD2            equ	2323	;# 
  3602     0914                     PMD3            equ	2324	;# 
  3603     0915                     PMD4            equ	2325	;# 
  3604     0916                     PMD5            equ	2326	;# 
  3605     0918                     CPUDOZE         equ	2328	;# 
  3606     0919                     OSCCON1         equ	2329	;# 
  3607     091A                     OSCCON2         equ	2330	;# 
  3608     091B                     OSCCON3         equ	2331	;# 
  3609     091C                     OSCSTAT1        equ	2332	;# 
  3610     091D                     OSCEN           equ	2333	;# 
  3611     091E                     OSCTUNE         equ	2334	;# 
  3612     091F                     OSCFRQ          equ	2335	;# 
  3613     0E0F                     PPSLOCK         equ	3599	;# 
  3614     0E10                     INTPPS          equ	3600	;# 
  3615     0E11                     T0CKIPPS        equ	3601	;# 
  3616     0E12                     T1CKIPPS        equ	3602	;# 
  3617     0E13                     T1GPPS          equ	3603	;# 
  3618     0E14                     CCP1PPS         equ	3604	;# 
  3619     0E15                     CCP2PPS         equ	3605	;# 
  3620     0E16                     CCP3PPS         equ	3606	;# 
  3621     0E17                     CCP4PPS         equ	3607	;# 
  3622     0E18                     CWG1PPS         equ	3608	;# 
  3623     0E19                     CWG2PPS         equ	3609	;# 
  3624     0E1A                     MDCIN1PPS       equ	3610	;# 
  3625     0E1B                     MDCIN2PPS       equ	3611	;# 
  3626     0E1C                     MDMINPPS        equ	3612	;# 
  3627     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3628     0E1E                     SSP2DATPPS      equ	3614	;# 
  3629     0E1F                     SSP2SSPPS       equ	3615	;# 
  3630     0E20                     SSP1CLKPPS      equ	3616	;# 
  3631     0E21                     SSP1DATPPS      equ	3617	;# 
  3632     0E22                     SSP1SSPPS       equ	3618	;# 
  3633     0E24                     RXPPS           equ	3620	;# 
  3634     0E25                     TXPPS           equ	3621	;# 
  3635     0E28                     CLCIN0PPS       equ	3624	;# 
  3636     0E29                     CLCIN1PPS       equ	3625	;# 
  3637     0E2A                     CLCIN2PPS       equ	3626	;# 
  3638     0E2B                     CLCIN3PPS       equ	3627	;# 
  3639     0E2C                     T3CKIPPS        equ	3628	;# 
  3640     0E2D                     T3GPPS          equ	3629	;# 
  3641     0E2E                     T5CKIPPS        equ	3630	;# 
  3642     0E2F                     T5GPPS          equ	3631	;# 
  3643     0E90                     RA0PPS          equ	3728	;# 
  3644     0E91                     RA1PPS          equ	3729	;# 
  3645     0E92                     RA2PPS          equ	3730	;# 
  3646     0E94                     RA4PPS          equ	3732	;# 
  3647     0E95                     RA5PPS          equ	3733	;# 
  3648     0E9C                     RB4PPS          equ	3740	;# 
  3649     0E9D                     RB5PPS          equ	3741	;# 
  3650     0E9E                     RB6PPS          equ	3742	;# 
  3651     0E9F                     RB7PPS          equ	3743	;# 
  3652     0EA0                     RC0PPS          equ	3744	;# 
  3653     0EA1                     RC1PPS          equ	3745	;# 
  3654     0EA2                     RC2PPS          equ	3746	;# 
  3655     0EA3                     RC3PPS          equ	3747	;# 
  3656     0EA4                     RC4PPS          equ	3748	;# 
  3657     0EA5                     RC5PPS          equ	3749	;# 
  3658     0EA6                     RC6PPS          equ	3750	;# 
  3659     0EA7                     RC7PPS          equ	3751	;# 
  3660     0F0F                     CLCDATA         equ	3855	;# 
  3661     0F10                     CLC1CON         equ	3856	;# 
  3662     0F11                     CLC1POL         equ	3857	;# 
  3663     0F12                     CLC1SEL0        equ	3858	;# 
  3664     0F13                     CLC1SEL1        equ	3859	;# 
  3665     0F14                     CLC1SEL2        equ	3860	;# 
  3666     0F15                     CLC1SEL3        equ	3861	;# 
  3667     0F16                     CLC1GLS0        equ	3862	;# 
  3668     0F17                     CLC1GLS1        equ	3863	;# 
  3669     0F18                     CLC1GLS2        equ	3864	;# 
  3670     0F19                     CLC1GLS3        equ	3865	;# 
  3671     0F1A                     CLC2CON         equ	3866	;# 
  3672     0F1B                     CLC2POL         equ	3867	;# 
  3673     0F1C                     CLC2SEL0        equ	3868	;# 
  3674     0F1D                     CLC2SEL1        equ	3869	;# 
  3675     0F1E                     CLC2SEL2        equ	3870	;# 
  3676     0F1F                     CLC2SEL3        equ	3871	;# 
  3677     0F20                     CLC2GLS0        equ	3872	;# 
  3678     0F21                     CLC2GLS1        equ	3873	;# 
  3679     0F22                     CLC2GLS2        equ	3874	;# 
  3680     0F23                     CLC2GLS3        equ	3875	;# 
  3681     0F24                     CLC3CON         equ	3876	;# 
  3682     0F25                     CLC3POL         equ	3877	;# 
  3683     0F26                     CLC3SEL0        equ	3878	;# 
  3684     0F27                     CLC3SEL1        equ	3879	;# 
  3685     0F28                     CLC3SEL2        equ	3880	;# 
  3686     0F29                     CLC3SEL3        equ	3881	;# 
  3687     0F2A                     CLC3GLS0        equ	3882	;# 
  3688     0F2B                     CLC3GLS1        equ	3883	;# 
  3689     0F2C                     CLC3GLS2        equ	3884	;# 
  3690     0F2D                     CLC3GLS3        equ	3885	;# 
  3691     0F2E                     CLC4CON         equ	3886	;# 
  3692     0F2F                     CLC4POL         equ	3887	;# 
  3693     0F30                     CLC4SEL0        equ	3888	;# 
  3694     0F31                     CLC4SEL1        equ	3889	;# 
  3695     0F32                     CLC4SEL2        equ	3890	;# 
  3696     0F33                     CLC4SEL3        equ	3891	;# 
  3697     0F34                     CLC4GLS0        equ	3892	;# 
  3698     0F35                     CLC4GLS1        equ	3893	;# 
  3699     0F36                     CLC4GLS2        equ	3894	;# 
  3700     0F37                     CLC4GLS3        equ	3895	;# 
  3701     0FE4                     STATUS_SHAD     equ	4068	;# 
  3702     0FE5                     WREG_SHAD       equ	4069	;# 
  3703     0FE6                     BSR_SHAD        equ	4070	;# 
  3704     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3705     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3706     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3707     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3708     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3709     0FED                     STKPTR          equ	4077	;# 
  3710     0FEE                     TOSL            equ	4078	;# 
  3711     0FEF                     TOSH            equ	4079	;# 
  3712     0000                     INDF0           equ	0	;# 
  3713     0001                     INDF1           equ	1	;# 
  3714     0002                     PCL             equ	2	;# 
  3715     0003                     STATUS          equ	3	;# 
  3716     0004                     FSR0L           equ	4	;# 
  3717     0005                     FSR0H           equ	5	;# 
  3718     0006                     FSR1L           equ	6	;# 
  3719     0007                     FSR1H           equ	7	;# 
  3720     0008                     BSR             equ	8	;# 
  3721     0009                     WREG            equ	9	;# 
  3722     000A                     PCLATH          equ	10	;# 
  3723     000B                     INTCON          equ	11	;# 
  3724     000C                     PORTA           equ	12	;# 
  3725     000D                     PORTB           equ	13	;# 
  3726     000E                     PORTC           equ	14	;# 
  3727     0010                     PIR0            equ	16	;# 
  3728     0011                     PIR1            equ	17	;# 
  3729     0012                     PIR2            equ	18	;# 
  3730     0013                     PIR3            equ	19	;# 
  3731     0014                     PIR4            equ	20	;# 
  3732     0015                     TMR0L           equ	21	;# 
  3733     0015                     TMR0            equ	21	;# 
  3734     0016                     TMR0H           equ	22	;# 
  3735     0016                     PR0             equ	22	;# 
  3736     0017                     T0CON0          equ	23	;# 
  3737     0018                     T0CON1          equ	24	;# 
  3738     0019                     TMR1            equ	25	;# 
  3739     0019                     TMR1L           equ	25	;# 
  3740     001A                     TMR1H           equ	26	;# 
  3741     001B                     T1CON           equ	27	;# 
  3742     001C                     T1GCON          equ	28	;# 
  3743     001D                     TMR2            equ	29	;# 
  3744     001E                     PR2             equ	30	;# 
  3745     001F                     T2CON           equ	31	;# 
  3746     008C                     TRISA           equ	140	;# 
  3747     008D                     TRISB           equ	141	;# 
  3748     008E                     TRISC           equ	142	;# 
  3749     0090                     PIE0            equ	144	;# 
  3750     0091                     PIE1            equ	145	;# 
  3751     0092                     PIE2            equ	146	;# 
  3752     0093                     PIE3            equ	147	;# 
  3753     0094                     PIE4            equ	148	;# 
  3754     0097                     WDTCON          equ	151	;# 
  3755     009B                     ADRES           equ	155	;# 
  3756     009B                     ADRESL          equ	155	;# 
  3757     009C                     ADRESH          equ	156	;# 
  3758     009D                     ADCON0          equ	157	;# 
  3759     009E                     ADCON1          equ	158	;# 
  3760     009F                     ADACT           equ	159	;# 
  3761     010C                     LATA            equ	268	;# 
  3762     010D                     LATB            equ	269	;# 
  3763     010E                     LATC            equ	270	;# 
  3764     0111                     CM1CON0         equ	273	;# 
  3765     0112                     CM1CON1         equ	274	;# 
  3766     0113                     CM2CON0         equ	275	;# 
  3767     0114                     CM2CON1         equ	276	;# 
  3768     0115                     CMOUT           equ	277	;# 
  3769     0116                     BORCON          equ	278	;# 
  3770     0117                     FVRCON          equ	279	;# 
  3771     0118                     DACCON0         equ	280	;# 
  3772     0119                     DACCON1         equ	281	;# 
  3773     018C                     ANSELA          equ	396	;# 
  3774     018D                     ANSELB          equ	397	;# 
  3775     018E                     ANSELC          equ	398	;# 
  3776     0197                     VREGCON         equ	407	;# 
  3777     0199                     RC1REG          equ	409	;# 
  3778     0199                     RCREG           equ	409	;# 
  3779     0199                     RCREG1          equ	409	;# 
  3780     019A                     TX1REG          equ	410	;# 
  3781     019A                     TXREG1          equ	410	;# 
  3782     019A                     TXREG           equ	410	;# 
  3783     019B                     SP1BRG          equ	411	;# 
  3784     019B                     SPBRG           equ	411	;# 
  3785     019B                     SP1BRGL         equ	411	;# 
  3786     019B                     SPBRG1          equ	411	;# 
  3787     019B                     SPBRGL          equ	411	;# 
  3788     019C                     SP1BRGH         equ	412	;# 
  3789     019C                     SPBRGH          equ	412	;# 
  3790     019C                     SPBRGH1         equ	412	;# 
  3791     019D                     RC1STA          equ	413	;# 
  3792     019D                     RCSTA1          equ	413	;# 
  3793     019D                     RCSTA           equ	413	;# 
  3794     019E                     TX1STA          equ	414	;# 
  3795     019E                     TXSTA1          equ	414	;# 
  3796     019E                     TXSTA           equ	414	;# 
  3797     019F                     BAUD1CON        equ	415	;# 
  3798     019F                     BAUDCON1        equ	415	;# 
  3799     019F                     BAUDCTL1        equ	415	;# 
  3800     019F                     BAUDCON         equ	415	;# 
  3801     019F                     BAUDCTL         equ	415	;# 
  3802     020C                     WPUA            equ	524	;# 
  3803     020D                     WPUB            equ	525	;# 
  3804     020E                     WPUC            equ	526	;# 
  3805     0211                     SSP1BUF         equ	529	;# 
  3806     0211                     SSPBUF          equ	529	;# 
  3807     0212                     SSP1ADD         equ	530	;# 
  3808     0212                     SSPADD          equ	530	;# 
  3809     0213                     SSP1MSK         equ	531	;# 
  3810     0213                     SSPMSK          equ	531	;# 
  3811     0214                     SSP1STAT        equ	532	;# 
  3812     0214                     SSPSTAT         equ	532	;# 
  3813     0215                     SSP1CON1        equ	533	;# 
  3814     0215                     SSPCON          equ	533	;# 
  3815     0215                     SSPCON1         equ	533	;# 
  3816     0215                     SSP1CON         equ	533	;# 
  3817     0216                     SSP1CON2        equ	534	;# 
  3818     0216                     SSPCON2         equ	534	;# 
  3819     0217                     SSP1CON3        equ	535	;# 
  3820     0217                     SSPCON3         equ	535	;# 
  3821     0219                     SSP2BUF         equ	537	;# 
  3822     021A                     SSP2ADD         equ	538	;# 
  3823     021B                     SSP2MSK         equ	539	;# 
  3824     021C                     SSP2STAT        equ	540	;# 
  3825     021D                     SSP2CON1        equ	541	;# 
  3826     021D                     SSP2CON         equ	541	;# 
  3827     021E                     SSP2CON2        equ	542	;# 
  3828     021F                     SSP2CON3        equ	543	;# 
  3829     028C                     ODCONA          equ	652	;# 
  3830     028D                     ODCONB          equ	653	;# 
  3831     028E                     ODCONC          equ	654	;# 
  3832     0291                     CCPR1           equ	657	;# 
  3833     0291                     CCPR1L          equ	657	;# 
  3834     0292                     CCPR1H          equ	658	;# 
  3835     0293                     CCP1CON         equ	659	;# 
  3836     0294                     CCP1CAP         equ	660	;# 
  3837     0295                     CCPR2           equ	661	;# 
  3838     0295                     CCPR2L          equ	661	;# 
  3839     0296                     CCPR2H          equ	662	;# 
  3840     0297                     CCP2CON         equ	663	;# 
  3841     0298                     CCP2CAP         equ	664	;# 
  3842     029F                     CCPTMRS         equ	671	;# 
  3843     030C                     SLRCONA         equ	780	;# 
  3844     030D                     SLRCONB         equ	781	;# 
  3845     030E                     SLRCONC         equ	782	;# 
  3846     0311                     CCPR3           equ	785	;# 
  3847     0311                     CCPR3L          equ	785	;# 
  3848     0312                     CCPR3H          equ	786	;# 
  3849     0313                     CCP3CON         equ	787	;# 
  3850     0314                     CCP3CAP         equ	788	;# 
  3851     0315                     CCPR4           equ	789	;# 
  3852     0315                     CCPR4L          equ	789	;# 
  3853     0316                     CCPR4H          equ	790	;# 
  3854     0317                     CCP4CON         equ	791	;# 
  3855     0318                     CCP4CAP         equ	792	;# 
  3856     038C                     INLVLA          equ	908	;# 
  3857     038D                     INLVLB          equ	909	;# 
  3858     038E                     INLVLC          equ	910	;# 
  3859     0391                     IOCAP           equ	913	;# 
  3860     0392                     IOCAN           equ	914	;# 
  3861     0393                     IOCAF           equ	915	;# 
  3862     0394                     IOCBP           equ	916	;# 
  3863     0395                     IOCBN           equ	917	;# 
  3864     0396                     IOCBF           equ	918	;# 
  3865     0397                     IOCCP           equ	919	;# 
  3866     0398                     IOCCN           equ	920	;# 
  3867     0399                     IOCCF           equ	921	;# 
  3868     039A                     CLKRCON         equ	922	;# 
  3869     039C                     MDCON           equ	924	;# 
  3870     039D                     MDSRC           equ	925	;# 
  3871     039E                     MDCARH          equ	926	;# 
  3872     039F                     MDCARL          equ	927	;# 
  3873     0411                     TMR3            equ	1041	;# 
  3874     0411                     TMR3L           equ	1041	;# 
  3875     0412                     TMR3H           equ	1042	;# 
  3876     0413                     T3CON           equ	1043	;# 
  3877     0414                     T3GCON          equ	1044	;# 
  3878     0415                     TMR4            equ	1045	;# 
  3879     0416                     PR4             equ	1046	;# 
  3880     0417                     T4CON           equ	1047	;# 
  3881     0418                     TMR5            equ	1048	;# 
  3882     0418                     TMR5L           equ	1048	;# 
  3883     0419                     TMR5H           equ	1049	;# 
  3884     041A                     T5CON           equ	1050	;# 
  3885     041B                     T5GCON          equ	1051	;# 
  3886     041C                     TMR6            equ	1052	;# 
  3887     041D                     PR6             equ	1053	;# 
  3888     041E                     T6CON           equ	1054	;# 
  3889     041F                     CCDCON          equ	1055	;# 
  3890     0498                     NCO1ACC         equ	1176	;# 
  3891     0498                     NCO1ACCL        equ	1176	;# 
  3892     0499                     NCO1ACCH        equ	1177	;# 
  3893     049A                     NCO1ACCU        equ	1178	;# 
  3894     049B                     NCO1INC         equ	1179	;# 
  3895     049B                     NCO1INCL        equ	1179	;# 
  3896     049C                     NCO1INCH        equ	1180	;# 
  3897     049D                     NCO1INCU        equ	1181	;# 
  3898     049E                     NCO1CON         equ	1182	;# 
  3899     049F                     NCO1CLK         equ	1183	;# 
  3900     0617                     PWM5DCL         equ	1559	;# 
  3901     0618                     PWM5DCH         equ	1560	;# 
  3902     0619                     PWM5CON         equ	1561	;# 
  3903     0619                     PWM5CON0        equ	1561	;# 
  3904     061A                     PWM6DCL         equ	1562	;# 
  3905     061B                     PWM6DCH         equ	1563	;# 
  3906     061C                     PWM6CON         equ	1564	;# 
  3907     061C                     PWM6CON0        equ	1564	;# 
  3908     061F                     PWMTMRS         equ	1567	;# 
  3909     0691                     CWG1CLKCON      equ	1681	;# 
  3910     0692                     CWG1DAT         equ	1682	;# 
  3911     0693                     CWG1DBR         equ	1683	;# 
  3912     0694                     CWG1DBF         equ	1684	;# 
  3913     0695                     CWG1CON0        equ	1685	;# 
  3914     0696                     CWG1CON1        equ	1686	;# 
  3915     0697                     CWG1AS0         equ	1687	;# 
  3916     0698                     CWG1AS1         equ	1688	;# 
  3917     0699                     CWG1STR         equ	1689	;# 
  3918     0711                     CWG2CLKCON      equ	1809	;# 
  3919     0712                     CWG2DAT         equ	1810	;# 
  3920     0713                     CWG2DBR         equ	1811	;# 
  3921     0714                     CWG2DBF         equ	1812	;# 
  3922     0715                     CWG2CON0        equ	1813	;# 
  3923     0716                     CWG2CON1        equ	1814	;# 
  3924     0717                     CWG2AS0         equ	1815	;# 
  3925     0718                     CWG2AS1         equ	1816	;# 
  3926     0719                     CWG2STR         equ	1817	;# 
  3927     0891                     NVMADR          equ	2193	;# 
  3928     0891                     EEADR           equ	2193	;# 
  3929     0891                     PMADR           equ	2193	;# 
  3930     0891                     NVMADRL         equ	2193	;# 
  3931     0891                     EEADRL          equ	2193	;# 
  3932     0891                     PMADRL          equ	2193	;# 
  3933     0892                     NVMADRH         equ	2194	;# 
  3934     0892                     EEADRH          equ	2194	;# 
  3935     0892                     PMADRH          equ	2194	;# 
  3936     0893                     NVMDAT          equ	2195	;# 
  3937     0893                     EEDAT           equ	2195	;# 
  3938     0893                     PMDAT           equ	2195	;# 
  3939     0893                     NVMDATL         equ	2195	;# 
  3940     0893                     EEDATL          equ	2195	;# 
  3941     0893                     PMDATL          equ	2195	;# 
  3942     0894                     NVMDATH         equ	2196	;# 
  3943     0894                     EEDATH          equ	2196	;# 
  3944     0894                     PMDATH          equ	2196	;# 
  3945     0895                     NVMCON1         equ	2197	;# 
  3946     0895                     EECON1          equ	2197	;# 
  3947     0895                     PMCON1          equ	2197	;# 
  3948     0896                     NVMCON2         equ	2198	;# 
  3949     0896                     EECON2          equ	2198	;# 
  3950     0896                     PMCON2          equ	2198	;# 
  3951     089B                     PCON0           equ	2203	;# 
  3952     0911                     PMD0            equ	2321	;# 
  3953     0912                     PMD1            equ	2322	;# 
  3954     0913                     PMD2            equ	2323	;# 
  3955     0914                     PMD3            equ	2324	;# 
  3956     0915                     PMD4            equ	2325	;# 
  3957     0916                     PMD5            equ	2326	;# 
  3958     0918                     CPUDOZE         equ	2328	;# 
  3959     0919                     OSCCON1         equ	2329	;# 
  3960     091A                     OSCCON2         equ	2330	;# 
  3961     091B                     OSCCON3         equ	2331	;# 
  3962     091C                     OSCSTAT1        equ	2332	;# 
  3963     091D                     OSCEN           equ	2333	;# 
  3964     091E                     OSCTUNE         equ	2334	;# 
  3965     091F                     OSCFRQ          equ	2335	;# 
  3966     0E0F                     PPSLOCK         equ	3599	;# 
  3967     0E10                     INTPPS          equ	3600	;# 
  3968     0E11                     T0CKIPPS        equ	3601	;# 
  3969     0E12                     T1CKIPPS        equ	3602	;# 
  3970     0E13                     T1GPPS          equ	3603	;# 
  3971     0E14                     CCP1PPS         equ	3604	;# 
  3972     0E15                     CCP2PPS         equ	3605	;# 
  3973     0E16                     CCP3PPS         equ	3606	;# 
  3974     0E17                     CCP4PPS         equ	3607	;# 
  3975     0E18                     CWG1PPS         equ	3608	;# 
  3976     0E19                     CWG2PPS         equ	3609	;# 
  3977     0E1A                     MDCIN1PPS       equ	3610	;# 
  3978     0E1B                     MDCIN2PPS       equ	3611	;# 
  3979     0E1C                     MDMINPPS        equ	3612	;# 
  3980     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3981     0E1E                     SSP2DATPPS      equ	3614	;# 
  3982     0E1F                     SSP2SSPPS       equ	3615	;# 
  3983     0E20                     SSP1CLKPPS      equ	3616	;# 
  3984     0E21                     SSP1DATPPS      equ	3617	;# 
  3985     0E22                     SSP1SSPPS       equ	3618	;# 
  3986     0E24                     RXPPS           equ	3620	;# 
  3987     0E25                     TXPPS           equ	3621	;# 
  3988     0E28                     CLCIN0PPS       equ	3624	;# 
  3989     0E29                     CLCIN1PPS       equ	3625	;# 
  3990     0E2A                     CLCIN2PPS       equ	3626	;# 
  3991     0E2B                     CLCIN3PPS       equ	3627	;# 
  3992     0E2C                     T3CKIPPS        equ	3628	;# 
  3993     0E2D                     T3GPPS          equ	3629	;# 
  3994     0E2E                     T5CKIPPS        equ	3630	;# 
  3995     0E2F                     T5GPPS          equ	3631	;# 
  3996     0E90                     RA0PPS          equ	3728	;# 
  3997     0E91                     RA1PPS          equ	3729	;# 
  3998     0E92                     RA2PPS          equ	3730	;# 
  3999     0E94                     RA4PPS          equ	3732	;# 
  4000     0E95                     RA5PPS          equ	3733	;# 
  4001     0E9C                     RB4PPS          equ	3740	;# 
  4002     0E9D                     RB5PPS          equ	3741	;# 
  4003     0E9E                     RB6PPS          equ	3742	;# 
  4004     0E9F                     RB7PPS          equ	3743	;# 
  4005     0EA0                     RC0PPS          equ	3744	;# 
  4006     0EA1                     RC1PPS          equ	3745	;# 
  4007     0EA2                     RC2PPS          equ	3746	;# 
  4008     0EA3                     RC3PPS          equ	3747	;# 
  4009     0EA4                     RC4PPS          equ	3748	;# 
  4010     0EA5                     RC5PPS          equ	3749	;# 
  4011     0EA6                     RC6PPS          equ	3750	;# 
  4012     0EA7                     RC7PPS          equ	3751	;# 
  4013     0F0F                     CLCDATA         equ	3855	;# 
  4014     0F10                     CLC1CON         equ	3856	;# 
  4015     0F11                     CLC1POL         equ	3857	;# 
  4016     0F12                     CLC1SEL0        equ	3858	;# 
  4017     0F13                     CLC1SEL1        equ	3859	;# 
  4018     0F14                     CLC1SEL2        equ	3860	;# 
  4019     0F15                     CLC1SEL3        equ	3861	;# 
  4020     0F16                     CLC1GLS0        equ	3862	;# 
  4021     0F17                     CLC1GLS1        equ	3863	;# 
  4022     0F18                     CLC1GLS2        equ	3864	;# 
  4023     0F19                     CLC1GLS3        equ	3865	;# 
  4024     0F1A                     CLC2CON         equ	3866	;# 
  4025     0F1B                     CLC2POL         equ	3867	;# 
  4026     0F1C                     CLC2SEL0        equ	3868	;# 
  4027     0F1D                     CLC2SEL1        equ	3869	;# 
  4028     0F1E                     CLC2SEL2        equ	3870	;# 
  4029     0F1F                     CLC2SEL3        equ	3871	;# 
  4030     0F20                     CLC2GLS0        equ	3872	;# 
  4031     0F21                     CLC2GLS1        equ	3873	;# 
  4032     0F22                     CLC2GLS2        equ	3874	;# 
  4033     0F23                     CLC2GLS3        equ	3875	;# 
  4034     0F24                     CLC3CON         equ	3876	;# 
  4035     0F25                     CLC3POL         equ	3877	;# 
  4036     0F26                     CLC3SEL0        equ	3878	;# 
  4037     0F27                     CLC3SEL1        equ	3879	;# 
  4038     0F28                     CLC3SEL2        equ	3880	;# 
  4039     0F29                     CLC3SEL3        equ	3881	;# 
  4040     0F2A                     CLC3GLS0        equ	3882	;# 
  4041     0F2B                     CLC3GLS1        equ	3883	;# 
  4042     0F2C                     CLC3GLS2        equ	3884	;# 
  4043     0F2D                     CLC3GLS3        equ	3885	;# 
  4044     0F2E                     CLC4CON         equ	3886	;# 
  4045     0F2F                     CLC4POL         equ	3887	;# 
  4046     0F30                     CLC4SEL0        equ	3888	;# 
  4047     0F31                     CLC4SEL1        equ	3889	;# 
  4048     0F32                     CLC4SEL2        equ	3890	;# 
  4049     0F33                     CLC4SEL3        equ	3891	;# 
  4050     0F34                     CLC4GLS0        equ	3892	;# 
  4051     0F35                     CLC4GLS1        equ	3893	;# 
  4052     0F36                     CLC4GLS2        equ	3894	;# 
  4053     0F37                     CLC4GLS3        equ	3895	;# 
  4054     0FE4                     STATUS_SHAD     equ	4068	;# 
  4055     0FE5                     WREG_SHAD       equ	4069	;# 
  4056     0FE6                     BSR_SHAD        equ	4070	;# 
  4057     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4058     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4059     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4060     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4061     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4062     0FED                     STKPTR          equ	4077	;# 
  4063     0FEE                     TOSL            equ	4078	;# 
  4064     0FEF                     TOSH            equ	4079	;# 
  4065     0000                     INDF0           equ	0	;# 
  4066     0001                     INDF1           equ	1	;# 
  4067     0002                     PCL             equ	2	;# 
  4068     0003                     STATUS          equ	3	;# 
  4069     0004                     FSR0L           equ	4	;# 
  4070     0005                     FSR0H           equ	5	;# 
  4071     0006                     FSR1L           equ	6	;# 
  4072     0007                     FSR1H           equ	7	;# 
  4073     0008                     BSR             equ	8	;# 
  4074     0009                     WREG            equ	9	;# 
  4075     000A                     PCLATH          equ	10	;# 
  4076     000B                     INTCON          equ	11	;# 
  4077     000C                     PORTA           equ	12	;# 
  4078     000D                     PORTB           equ	13	;# 
  4079     000E                     PORTC           equ	14	;# 
  4080     0010                     PIR0            equ	16	;# 
  4081     0011                     PIR1            equ	17	;# 
  4082     0012                     PIR2            equ	18	;# 
  4083     0013                     PIR3            equ	19	;# 
  4084     0014                     PIR4            equ	20	;# 
  4085     0015                     TMR0L           equ	21	;# 
  4086     0015                     TMR0            equ	21	;# 
  4087     0016                     TMR0H           equ	22	;# 
  4088     0016                     PR0             equ	22	;# 
  4089     0017                     T0CON0          equ	23	;# 
  4090     0018                     T0CON1          equ	24	;# 
  4091     0019                     TMR1            equ	25	;# 
  4092     0019                     TMR1L           equ	25	;# 
  4093     001A                     TMR1H           equ	26	;# 
  4094     001B                     T1CON           equ	27	;# 
  4095     001C                     T1GCON          equ	28	;# 
  4096     001D                     TMR2            equ	29	;# 
  4097     001E                     PR2             equ	30	;# 
  4098     001F                     T2CON           equ	31	;# 
  4099     008C                     TRISA           equ	140	;# 
  4100     008D                     TRISB           equ	141	;# 
  4101     008E                     TRISC           equ	142	;# 
  4102     0090                     PIE0            equ	144	;# 
  4103     0091                     PIE1            equ	145	;# 
  4104     0092                     PIE2            equ	146	;# 
  4105     0093                     PIE3            equ	147	;# 
  4106     0094                     PIE4            equ	148	;# 
  4107     0097                     WDTCON          equ	151	;# 
  4108     009B                     ADRES           equ	155	;# 
  4109     009B                     ADRESL          equ	155	;# 
  4110     009C                     ADRESH          equ	156	;# 
  4111     009D                     ADCON0          equ	157	;# 
  4112     009E                     ADCON1          equ	158	;# 
  4113     009F                     ADACT           equ	159	;# 
  4114     010C                     LATA            equ	268	;# 
  4115     010D                     LATB            equ	269	;# 
  4116     010E                     LATC            equ	270	;# 
  4117     0111                     CM1CON0         equ	273	;# 
  4118     0112                     CM1CON1         equ	274	;# 
  4119     0113                     CM2CON0         equ	275	;# 
  4120     0114                     CM2CON1         equ	276	;# 
  4121     0115                     CMOUT           equ	277	;# 
  4122     0116                     BORCON          equ	278	;# 
  4123     0117                     FVRCON          equ	279	;# 
  4124     0118                     DACCON0         equ	280	;# 
  4125     0119                     DACCON1         equ	281	;# 
  4126     018C                     ANSELA          equ	396	;# 
  4127     018D                     ANSELB          equ	397	;# 
  4128     018E                     ANSELC          equ	398	;# 
  4129     0197                     VREGCON         equ	407	;# 
  4130     0199                     RC1REG          equ	409	;# 
  4131     0199                     RCREG           equ	409	;# 
  4132     0199                     RCREG1          equ	409	;# 
  4133     019A                     TX1REG          equ	410	;# 
  4134     019A                     TXREG1          equ	410	;# 
  4135     019A                     TXREG           equ	410	;# 
  4136     019B                     SP1BRG          equ	411	;# 
  4137     019B                     SPBRG           equ	411	;# 
  4138     019B                     SP1BRGL         equ	411	;# 
  4139     019B                     SPBRG1          equ	411	;# 
  4140     019B                     SPBRGL          equ	411	;# 
  4141     019C                     SP1BRGH         equ	412	;# 
  4142     019C                     SPBRGH          equ	412	;# 
  4143     019C                     SPBRGH1         equ	412	;# 
  4144     019D                     RC1STA          equ	413	;# 
  4145     019D                     RCSTA1          equ	413	;# 
  4146     019D                     RCSTA           equ	413	;# 
  4147     019E                     TX1STA          equ	414	;# 
  4148     019E                     TXSTA1          equ	414	;# 
  4149     019E                     TXSTA           equ	414	;# 
  4150     019F                     BAUD1CON        equ	415	;# 
  4151     019F                     BAUDCON1        equ	415	;# 
  4152     019F                     BAUDCTL1        equ	415	;# 
  4153     019F                     BAUDCON         equ	415	;# 
  4154     019F                     BAUDCTL         equ	415	;# 
  4155     020C                     WPUA            equ	524	;# 
  4156     020D                     WPUB            equ	525	;# 
  4157     020E                     WPUC            equ	526	;# 
  4158     0211                     SSP1BUF         equ	529	;# 
  4159     0211                     SSPBUF          equ	529	;# 
  4160     0212                     SSP1ADD         equ	530	;# 
  4161     0212                     SSPADD          equ	530	;# 
  4162     0213                     SSP1MSK         equ	531	;# 
  4163     0213                     SSPMSK          equ	531	;# 
  4164     0214                     SSP1STAT        equ	532	;# 
  4165     0214                     SSPSTAT         equ	532	;# 
  4166     0215                     SSP1CON1        equ	533	;# 
  4167     0215                     SSPCON          equ	533	;# 
  4168     0215                     SSPCON1         equ	533	;# 
  4169     0215                     SSP1CON         equ	533	;# 
  4170     0216                     SSP1CON2        equ	534	;# 
  4171     0216                     SSPCON2         equ	534	;# 
  4172     0217                     SSP1CON3        equ	535	;# 
  4173     0217                     SSPCON3         equ	535	;# 
  4174     0219                     SSP2BUF         equ	537	;# 
  4175     021A                     SSP2ADD         equ	538	;# 
  4176     021B                     SSP2MSK         equ	539	;# 
  4177     021C                     SSP2STAT        equ	540	;# 
  4178     021D                     SSP2CON1        equ	541	;# 
  4179     021D                     SSP2CON         equ	541	;# 
  4180     021E                     SSP2CON2        equ	542	;# 
  4181     021F                     SSP2CON3        equ	543	;# 
  4182     028C                     ODCONA          equ	652	;# 
  4183     028D                     ODCONB          equ	653	;# 
  4184     028E                     ODCONC          equ	654	;# 
  4185     0291                     CCPR1           equ	657	;# 
  4186     0291                     CCPR1L          equ	657	;# 
  4187     0292                     CCPR1H          equ	658	;# 
  4188     0293                     CCP1CON         equ	659	;# 
  4189     0294                     CCP1CAP         equ	660	;# 
  4190     0295                     CCPR2           equ	661	;# 
  4191     0295                     CCPR2L          equ	661	;# 
  4192     0296                     CCPR2H          equ	662	;# 
  4193     0297                     CCP2CON         equ	663	;# 
  4194     0298                     CCP2CAP         equ	664	;# 
  4195     029F                     CCPTMRS         equ	671	;# 
  4196     030C                     SLRCONA         equ	780	;# 
  4197     030D                     SLRCONB         equ	781	;# 
  4198     030E                     SLRCONC         equ	782	;# 
  4199     0311                     CCPR3           equ	785	;# 
  4200     0311                     CCPR3L          equ	785	;# 
  4201     0312                     CCPR3H          equ	786	;# 
  4202     0313                     CCP3CON         equ	787	;# 
  4203     0314                     CCP3CAP         equ	788	;# 
  4204     0315                     CCPR4           equ	789	;# 
  4205     0315                     CCPR4L          equ	789	;# 
  4206     0316                     CCPR4H          equ	790	;# 
  4207     0317                     CCP4CON         equ	791	;# 
  4208     0318                     CCP4CAP         equ	792	;# 
  4209     038C                     INLVLA          equ	908	;# 
  4210     038D                     INLVLB          equ	909	;# 
  4211     038E                     INLVLC          equ	910	;# 
  4212     0391                     IOCAP           equ	913	;# 
  4213     0392                     IOCAN           equ	914	;# 
  4214     0393                     IOCAF           equ	915	;# 
  4215     0394                     IOCBP           equ	916	;# 
  4216     0395                     IOCBN           equ	917	;# 
  4217     0396                     IOCBF           equ	918	;# 
  4218     0397                     IOCCP           equ	919	;# 
  4219     0398                     IOCCN           equ	920	;# 
  4220     0399                     IOCCF           equ	921	;# 
  4221     039A                     CLKRCON         equ	922	;# 
  4222     039C                     MDCON           equ	924	;# 
  4223     039D                     MDSRC           equ	925	;# 
  4224     039E                     MDCARH          equ	926	;# 
  4225     039F                     MDCARL          equ	927	;# 
  4226     0411                     TMR3            equ	1041	;# 
  4227     0411                     TMR3L           equ	1041	;# 
  4228     0412                     TMR3H           equ	1042	;# 
  4229     0413                     T3CON           equ	1043	;# 
  4230     0414                     T3GCON          equ	1044	;# 
  4231     0415                     TMR4            equ	1045	;# 
  4232     0416                     PR4             equ	1046	;# 
  4233     0417                     T4CON           equ	1047	;# 
  4234     0418                     TMR5            equ	1048	;# 
  4235     0418                     TMR5L           equ	1048	;# 
  4236     0419                     TMR5H           equ	1049	;# 
  4237     041A                     T5CON           equ	1050	;# 
  4238     041B                     T5GCON          equ	1051	;# 
  4239     041C                     TMR6            equ	1052	;# 
  4240     041D                     PR6             equ	1053	;# 
  4241     041E                     T6CON           equ	1054	;# 
  4242     041F                     CCDCON          equ	1055	;# 
  4243     0498                     NCO1ACC         equ	1176	;# 
  4244     0498                     NCO1ACCL        equ	1176	;# 
  4245     0499                     NCO1ACCH        equ	1177	;# 
  4246     049A                     NCO1ACCU        equ	1178	;# 
  4247     049B                     NCO1INC         equ	1179	;# 
  4248     049B                     NCO1INCL        equ	1179	;# 
  4249     049C                     NCO1INCH        equ	1180	;# 
  4250     049D                     NCO1INCU        equ	1181	;# 
  4251     049E                     NCO1CON         equ	1182	;# 
  4252     049F                     NCO1CLK         equ	1183	;# 
  4253     0617                     PWM5DCL         equ	1559	;# 
  4254     0618                     PWM5DCH         equ	1560	;# 
  4255     0619                     PWM5CON         equ	1561	;# 
  4256     0619                     PWM5CON0        equ	1561	;# 
  4257     061A                     PWM6DCL         equ	1562	;# 
  4258     061B                     PWM6DCH         equ	1563	;# 
  4259     061C                     PWM6CON         equ	1564	;# 
  4260     061C                     PWM6CON0        equ	1564	;# 
  4261     061F                     PWMTMRS         equ	1567	;# 
  4262     0691                     CWG1CLKCON      equ	1681	;# 
  4263     0692                     CWG1DAT         equ	1682	;# 
  4264     0693                     CWG1DBR         equ	1683	;# 
  4265     0694                     CWG1DBF         equ	1684	;# 
  4266     0695                     CWG1CON0        equ	1685	;# 
  4267     0696                     CWG1CON1        equ	1686	;# 
  4268     0697                     CWG1AS0         equ	1687	;# 
  4269     0698                     CWG1AS1         equ	1688	;# 
  4270     0699                     CWG1STR         equ	1689	;# 
  4271     0711                     CWG2CLKCON      equ	1809	;# 
  4272     0712                     CWG2DAT         equ	1810	;# 
  4273     0713                     CWG2DBR         equ	1811	;# 
  4274     0714                     CWG2DBF         equ	1812	;# 
  4275     0715                     CWG2CON0        equ	1813	;# 
  4276     0716                     CWG2CON1        equ	1814	;# 
  4277     0717                     CWG2AS0         equ	1815	;# 
  4278     0718                     CWG2AS1         equ	1816	;# 
  4279     0719                     CWG2STR         equ	1817	;# 
  4280     0891                     NVMADR          equ	2193	;# 
  4281     0891                     EEADR           equ	2193	;# 
  4282     0891                     PMADR           equ	2193	;# 
  4283     0891                     NVMADRL         equ	2193	;# 
  4284     0891                     EEADRL          equ	2193	;# 
  4285     0891                     PMADRL          equ	2193	;# 
  4286     0892                     NVMADRH         equ	2194	;# 
  4287     0892                     EEADRH          equ	2194	;# 
  4288     0892                     PMADRH          equ	2194	;# 
  4289     0893                     NVMDAT          equ	2195	;# 
  4290     0893                     EEDAT           equ	2195	;# 
  4291     0893                     PMDAT           equ	2195	;# 
  4292     0893                     NVMDATL         equ	2195	;# 
  4293     0893                     EEDATL          equ	2195	;# 
  4294     0893                     PMDATL          equ	2195	;# 
  4295     0894                     NVMDATH         equ	2196	;# 
  4296     0894                     EEDATH          equ	2196	;# 
  4297     0894                     PMDATH          equ	2196	;# 
  4298     0895                     NVMCON1         equ	2197	;# 
  4299     0895                     EECON1          equ	2197	;# 
  4300     0895                     PMCON1          equ	2197	;# 
  4301     0896                     NVMCON2         equ	2198	;# 
  4302     0896                     EECON2          equ	2198	;# 
  4303     0896                     PMCON2          equ	2198	;# 
  4304     089B                     PCON0           equ	2203	;# 
  4305     0911                     PMD0            equ	2321	;# 
  4306     0912                     PMD1            equ	2322	;# 
  4307     0913                     PMD2            equ	2323	;# 
  4308     0914                     PMD3            equ	2324	;# 
  4309     0915                     PMD4            equ	2325	;# 
  4310     0916                     PMD5            equ	2326	;# 
  4311     0918                     CPUDOZE         equ	2328	;# 
  4312     0919                     OSCCON1         equ	2329	;# 
  4313     091A                     OSCCON2         equ	2330	;# 
  4314     091B                     OSCCON3         equ	2331	;# 
  4315     091C                     OSCSTAT1        equ	2332	;# 
  4316     091D                     OSCEN           equ	2333	;# 
  4317     091E                     OSCTUNE         equ	2334	;# 
  4318     091F                     OSCFRQ          equ	2335	;# 
  4319     0E0F                     PPSLOCK         equ	3599	;# 
  4320     0E10                     INTPPS          equ	3600	;# 
  4321     0E11                     T0CKIPPS        equ	3601	;# 
  4322     0E12                     T1CKIPPS        equ	3602	;# 
  4323     0E13                     T1GPPS          equ	3603	;# 
  4324     0E14                     CCP1PPS         equ	3604	;# 
  4325     0E15                     CCP2PPS         equ	3605	;# 
  4326     0E16                     CCP3PPS         equ	3606	;# 
  4327     0E17                     CCP4PPS         equ	3607	;# 
  4328     0E18                     CWG1PPS         equ	3608	;# 
  4329     0E19                     CWG2PPS         equ	3609	;# 
  4330     0E1A                     MDCIN1PPS       equ	3610	;# 
  4331     0E1B                     MDCIN2PPS       equ	3611	;# 
  4332     0E1C                     MDMINPPS        equ	3612	;# 
  4333     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4334     0E1E                     SSP2DATPPS      equ	3614	;# 
  4335     0E1F                     SSP2SSPPS       equ	3615	;# 
  4336     0E20                     SSP1CLKPPS      equ	3616	;# 
  4337     0E21                     SSP1DATPPS      equ	3617	;# 
  4338     0E22                     SSP1SSPPS       equ	3618	;# 
  4339     0E24                     RXPPS           equ	3620	;# 
  4340     0E25                     TXPPS           equ	3621	;# 
  4341     0E28                     CLCIN0PPS       equ	3624	;# 
  4342     0E29                     CLCIN1PPS       equ	3625	;# 
  4343     0E2A                     CLCIN2PPS       equ	3626	;# 
  4344     0E2B                     CLCIN3PPS       equ	3627	;# 
  4345     0E2C                     T3CKIPPS        equ	3628	;# 
  4346     0E2D                     T3GPPS          equ	3629	;# 
  4347     0E2E                     T5CKIPPS        equ	3630	;# 
  4348     0E2F                     T5GPPS          equ	3631	;# 
  4349     0E90                     RA0PPS          equ	3728	;# 
  4350     0E91                     RA1PPS          equ	3729	;# 
  4351     0E92                     RA2PPS          equ	3730	;# 
  4352     0E94                     RA4PPS          equ	3732	;# 
  4353     0E95                     RA5PPS          equ	3733	;# 
  4354     0E9C                     RB4PPS          equ	3740	;# 
  4355     0E9D                     RB5PPS          equ	3741	;# 
  4356     0E9E                     RB6PPS          equ	3742	;# 
  4357     0E9F                     RB7PPS          equ	3743	;# 
  4358     0EA0                     RC0PPS          equ	3744	;# 
  4359     0EA1                     RC1PPS          equ	3745	;# 
  4360     0EA2                     RC2PPS          equ	3746	;# 
  4361     0EA3                     RC3PPS          equ	3747	;# 
  4362     0EA4                     RC4PPS          equ	3748	;# 
  4363     0EA5                     RC5PPS          equ	3749	;# 
  4364     0EA6                     RC6PPS          equ	3750	;# 
  4365     0EA7                     RC7PPS          equ	3751	;# 
  4366     0F0F                     CLCDATA         equ	3855	;# 
  4367     0F10                     CLC1CON         equ	3856	;# 
  4368     0F11                     CLC1POL         equ	3857	;# 
  4369     0F12                     CLC1SEL0        equ	3858	;# 
  4370     0F13                     CLC1SEL1        equ	3859	;# 
  4371     0F14                     CLC1SEL2        equ	3860	;# 
  4372     0F15                     CLC1SEL3        equ	3861	;# 
  4373     0F16                     CLC1GLS0        equ	3862	;# 
  4374     0F17                     CLC1GLS1        equ	3863	;# 
  4375     0F18                     CLC1GLS2        equ	3864	;# 
  4376     0F19                     CLC1GLS3        equ	3865	;# 
  4377     0F1A                     CLC2CON         equ	3866	;# 
  4378     0F1B                     CLC2POL         equ	3867	;# 
  4379     0F1C                     CLC2SEL0        equ	3868	;# 
  4380     0F1D                     CLC2SEL1        equ	3869	;# 
  4381     0F1E                     CLC2SEL2        equ	3870	;# 
  4382     0F1F                     CLC2SEL3        equ	3871	;# 
  4383     0F20                     CLC2GLS0        equ	3872	;# 
  4384     0F21                     CLC2GLS1        equ	3873	;# 
  4385     0F22                     CLC2GLS2        equ	3874	;# 
  4386     0F23                     CLC2GLS3        equ	3875	;# 
  4387     0F24                     CLC3CON         equ	3876	;# 
  4388     0F25                     CLC3POL         equ	3877	;# 
  4389     0F26                     CLC3SEL0        equ	3878	;# 
  4390     0F27                     CLC3SEL1        equ	3879	;# 
  4391     0F28                     CLC3SEL2        equ	3880	;# 
  4392     0F29                     CLC3SEL3        equ	3881	;# 
  4393     0F2A                     CLC3GLS0        equ	3882	;# 
  4394     0F2B                     CLC3GLS1        equ	3883	;# 
  4395     0F2C                     CLC3GLS2        equ	3884	;# 
  4396     0F2D                     CLC3GLS3        equ	3885	;# 
  4397     0F2E                     CLC4CON         equ	3886	;# 
  4398     0F2F                     CLC4POL         equ	3887	;# 
  4399     0F30                     CLC4SEL0        equ	3888	;# 
  4400     0F31                     CLC4SEL1        equ	3889	;# 
  4401     0F32                     CLC4SEL2        equ	3890	;# 
  4402     0F33                     CLC4SEL3        equ	3891	;# 
  4403     0F34                     CLC4GLS0        equ	3892	;# 
  4404     0F35                     CLC4GLS1        equ	3893	;# 
  4405     0F36                     CLC4GLS2        equ	3894	;# 
  4406     0F37                     CLC4GLS3        equ	3895	;# 
  4407     0FE4                     STATUS_SHAD     equ	4068	;# 
  4408     0FE5                     WREG_SHAD       equ	4069	;# 
  4409     0FE6                     BSR_SHAD        equ	4070	;# 
  4410     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4411     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4412     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4413     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4414     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4415     0FED                     STKPTR          equ	4077	;# 
  4416     0FEE                     TOSL            equ	4078	;# 
  4417     0FEF                     TOSH            equ	4079	;# 
  4418     0000                     INDF0           equ	0	;# 
  4419     0001                     INDF1           equ	1	;# 
  4420     0002                     PCL             equ	2	;# 
  4421     0003                     STATUS          equ	3	;# 
  4422     0004                     FSR0L           equ	4	;# 
  4423     0005                     FSR0H           equ	5	;# 
  4424     0006                     FSR1L           equ	6	;# 
  4425     0007                     FSR1H           equ	7	;# 
  4426     0008                     BSR             equ	8	;# 
  4427     0009                     WREG            equ	9	;# 
  4428     000A                     PCLATH          equ	10	;# 
  4429     000B                     INTCON          equ	11	;# 
  4430     000C                     PORTA           equ	12	;# 
  4431     000D                     PORTB           equ	13	;# 
  4432     000E                     PORTC           equ	14	;# 
  4433     0010                     PIR0            equ	16	;# 
  4434     0011                     PIR1            equ	17	;# 
  4435     0012                     PIR2            equ	18	;# 
  4436     0013                     PIR3            equ	19	;# 
  4437     0014                     PIR4            equ	20	;# 
  4438     0015                     TMR0L           equ	21	;# 
  4439     0015                     TMR0            equ	21	;# 
  4440     0016                     TMR0H           equ	22	;# 
  4441     0016                     PR0             equ	22	;# 
  4442     0017                     T0CON0          equ	23	;# 
  4443     0018                     T0CON1          equ	24	;# 
  4444     0019                     TMR1            equ	25	;# 
  4445     0019                     TMR1L           equ	25	;# 
  4446     001A                     TMR1H           equ	26	;# 
  4447     001B                     T1CON           equ	27	;# 
  4448     001C                     T1GCON          equ	28	;# 
  4449     001D                     TMR2            equ	29	;# 
  4450     001E                     PR2             equ	30	;# 
  4451     001F                     T2CON           equ	31	;# 
  4452     008C                     TRISA           equ	140	;# 
  4453     008D                     TRISB           equ	141	;# 
  4454     008E                     TRISC           equ	142	;# 
  4455     0090                     PIE0            equ	144	;# 
  4456     0091                     PIE1            equ	145	;# 
  4457     0092                     PIE2            equ	146	;# 
  4458     0093                     PIE3            equ	147	;# 
  4459     0094                     PIE4            equ	148	;# 
  4460     0097                     WDTCON          equ	151	;# 
  4461     009B                     ADRES           equ	155	;# 
  4462     009B                     ADRESL          equ	155	;# 
  4463     009C                     ADRESH          equ	156	;# 
  4464     009D                     ADCON0          equ	157	;# 
  4465     009E                     ADCON1          equ	158	;# 
  4466     009F                     ADACT           equ	159	;# 
  4467     010C                     LATA            equ	268	;# 
  4468     010D                     LATB            equ	269	;# 
  4469     010E                     LATC            equ	270	;# 
  4470     0111                     CM1CON0         equ	273	;# 
  4471     0112                     CM1CON1         equ	274	;# 
  4472     0113                     CM2CON0         equ	275	;# 
  4473     0114                     CM2CON1         equ	276	;# 
  4474     0115                     CMOUT           equ	277	;# 
  4475     0116                     BORCON          equ	278	;# 
  4476     0117                     FVRCON          equ	279	;# 
  4477     0118                     DACCON0         equ	280	;# 
  4478     0119                     DACCON1         equ	281	;# 
  4479     018C                     ANSELA          equ	396	;# 
  4480     018D                     ANSELB          equ	397	;# 
  4481     018E                     ANSELC          equ	398	;# 
  4482     0197                     VREGCON         equ	407	;# 
  4483     0199                     RC1REG          equ	409	;# 
  4484     0199                     RCREG           equ	409	;# 
  4485     0199                     RCREG1          equ	409	;# 
  4486     019A                     TX1REG          equ	410	;# 
  4487     019A                     TXREG1          equ	410	;# 
  4488     019A                     TXREG           equ	410	;# 
  4489     019B                     SP1BRG          equ	411	;# 
  4490     019B                     SPBRG           equ	411	;# 
  4491     019B                     SP1BRGL         equ	411	;# 
  4492     019B                     SPBRG1          equ	411	;# 
  4493     019B                     SPBRGL          equ	411	;# 
  4494     019C                     SP1BRGH         equ	412	;# 
  4495     019C                     SPBRGH          equ	412	;# 
  4496     019C                     SPBRGH1         equ	412	;# 
  4497     019D                     RC1STA          equ	413	;# 
  4498     019D                     RCSTA1          equ	413	;# 
  4499     019D                     RCSTA           equ	413	;# 
  4500     019E                     TX1STA          equ	414	;# 
  4501     019E                     TXSTA1          equ	414	;# 
  4502     019E                     TXSTA           equ	414	;# 
  4503     019F                     BAUD1CON        equ	415	;# 
  4504     019F                     BAUDCON1        equ	415	;# 
  4505     019F                     BAUDCTL1        equ	415	;# 
  4506     019F                     BAUDCON         equ	415	;# 
  4507     019F                     BAUDCTL         equ	415	;# 
  4508     020C                     WPUA            equ	524	;# 
  4509     020D                     WPUB            equ	525	;# 
  4510     020E                     WPUC            equ	526	;# 
  4511     0211                     SSP1BUF         equ	529	;# 
  4512     0211                     SSPBUF          equ	529	;# 
  4513     0212                     SSP1ADD         equ	530	;# 
  4514     0212                     SSPADD          equ	530	;# 
  4515     0213                     SSP1MSK         equ	531	;# 
  4516     0213                     SSPMSK          equ	531	;# 
  4517     0214                     SSP1STAT        equ	532	;# 
  4518     0214                     SSPSTAT         equ	532	;# 
  4519     0215                     SSP1CON1        equ	533	;# 
  4520     0215                     SSPCON          equ	533	;# 
  4521     0215                     SSPCON1         equ	533	;# 
  4522     0215                     SSP1CON         equ	533	;# 
  4523     0216                     SSP1CON2        equ	534	;# 
  4524     0216                     SSPCON2         equ	534	;# 
  4525     0217                     SSP1CON3        equ	535	;# 
  4526     0217                     SSPCON3         equ	535	;# 
  4527     0219                     SSP2BUF         equ	537	;# 
  4528     021A                     SSP2ADD         equ	538	;# 
  4529     021B                     SSP2MSK         equ	539	;# 
  4530     021C                     SSP2STAT        equ	540	;# 
  4531     021D                     SSP2CON1        equ	541	;# 
  4532     021D                     SSP2CON         equ	541	;# 
  4533     021E                     SSP2CON2        equ	542	;# 
  4534     021F                     SSP2CON3        equ	543	;# 
  4535     028C                     ODCONA          equ	652	;# 
  4536     028D                     ODCONB          equ	653	;# 
  4537     028E                     ODCONC          equ	654	;# 
  4538     0291                     CCPR1           equ	657	;# 
  4539     0291                     CCPR1L          equ	657	;# 
  4540     0292                     CCPR1H          equ	658	;# 
  4541     0293                     CCP1CON         equ	659	;# 
  4542     0294                     CCP1CAP         equ	660	;# 
  4543     0295                     CCPR2           equ	661	;# 
  4544     0295                     CCPR2L          equ	661	;# 
  4545     0296                     CCPR2H          equ	662	;# 
  4546     0297                     CCP2CON         equ	663	;# 
  4547     0298                     CCP2CAP         equ	664	;# 
  4548     029F                     CCPTMRS         equ	671	;# 
  4549     030C                     SLRCONA         equ	780	;# 
  4550     030D                     SLRCONB         equ	781	;# 
  4551     030E                     SLRCONC         equ	782	;# 
  4552     0311                     CCPR3           equ	785	;# 
  4553     0311                     CCPR3L          equ	785	;# 
  4554     0312                     CCPR3H          equ	786	;# 
  4555     0313                     CCP3CON         equ	787	;# 
  4556     0314                     CCP3CAP         equ	788	;# 
  4557     0315                     CCPR4           equ	789	;# 
  4558     0315                     CCPR4L          equ	789	;# 
  4559     0316                     CCPR4H          equ	790	;# 
  4560     0317                     CCP4CON         equ	791	;# 
  4561     0318                     CCP4CAP         equ	792	;# 
  4562     038C                     INLVLA          equ	908	;# 
  4563     038D                     INLVLB          equ	909	;# 
  4564     038E                     INLVLC          equ	910	;# 
  4565     0391                     IOCAP           equ	913	;# 
  4566     0392                     IOCAN           equ	914	;# 
  4567     0393                     IOCAF           equ	915	;# 
  4568     0394                     IOCBP           equ	916	;# 
  4569     0395                     IOCBN           equ	917	;# 
  4570     0396                     IOCBF           equ	918	;# 
  4571     0397                     IOCCP           equ	919	;# 
  4572     0398                     IOCCN           equ	920	;# 
  4573     0399                     IOCCF           equ	921	;# 
  4574     039A                     CLKRCON         equ	922	;# 
  4575     039C                     MDCON           equ	924	;# 
  4576     039D                     MDSRC           equ	925	;# 
  4577     039E                     MDCARH          equ	926	;# 
  4578     039F                     MDCARL          equ	927	;# 
  4579     0411                     TMR3            equ	1041	;# 
  4580     0411                     TMR3L           equ	1041	;# 
  4581     0412                     TMR3H           equ	1042	;# 
  4582     0413                     T3CON           equ	1043	;# 
  4583     0414                     T3GCON          equ	1044	;# 
  4584     0415                     TMR4            equ	1045	;# 
  4585     0416                     PR4             equ	1046	;# 
  4586     0417                     T4CON           equ	1047	;# 
  4587     0418                     TMR5            equ	1048	;# 
  4588     0418                     TMR5L           equ	1048	;# 
  4589     0419                     TMR5H           equ	1049	;# 
  4590     041A                     T5CON           equ	1050	;# 
  4591     041B                     T5GCON          equ	1051	;# 
  4592     041C                     TMR6            equ	1052	;# 
  4593     041D                     PR6             equ	1053	;# 
  4594     041E                     T6CON           equ	1054	;# 
  4595     041F                     CCDCON          equ	1055	;# 
  4596     0498                     NCO1ACC         equ	1176	;# 
  4597     0498                     NCO1ACCL        equ	1176	;# 
  4598     0499                     NCO1ACCH        equ	1177	;# 
  4599     049A                     NCO1ACCU        equ	1178	;# 
  4600     049B                     NCO1INC         equ	1179	;# 
  4601     049B                     NCO1INCL        equ	1179	;# 
  4602     049C                     NCO1INCH        equ	1180	;# 
  4603     049D                     NCO1INCU        equ	1181	;# 
  4604     049E                     NCO1CON         equ	1182	;# 
  4605     049F                     NCO1CLK         equ	1183	;# 
  4606     0617                     PWM5DCL         equ	1559	;# 
  4607     0618                     PWM5DCH         equ	1560	;# 
  4608     0619                     PWM5CON         equ	1561	;# 
  4609     0619                     PWM5CON0        equ	1561	;# 
  4610     061A                     PWM6DCL         equ	1562	;# 
  4611     061B                     PWM6DCH         equ	1563	;# 
  4612     061C                     PWM6CON         equ	1564	;# 
  4613     061C                     PWM6CON0        equ	1564	;# 
  4614     061F                     PWMTMRS         equ	1567	;# 
  4615     0691                     CWG1CLKCON      equ	1681	;# 
  4616     0692                     CWG1DAT         equ	1682	;# 
  4617     0693                     CWG1DBR         equ	1683	;# 
  4618     0694                     CWG1DBF         equ	1684	;# 
  4619     0695                     CWG1CON0        equ	1685	;# 
  4620     0696                     CWG1CON1        equ	1686	;# 
  4621     0697                     CWG1AS0         equ	1687	;# 
  4622     0698                     CWG1AS1         equ	1688	;# 
  4623     0699                     CWG1STR         equ	1689	;# 
  4624     0711                     CWG2CLKCON      equ	1809	;# 
  4625     0712                     CWG2DAT         equ	1810	;# 
  4626     0713                     CWG2DBR         equ	1811	;# 
  4627     0714                     CWG2DBF         equ	1812	;# 
  4628     0715                     CWG2CON0        equ	1813	;# 
  4629     0716                     CWG2CON1        equ	1814	;# 
  4630     0717                     CWG2AS0         equ	1815	;# 
  4631     0718                     CWG2AS1         equ	1816	;# 
  4632     0719                     CWG2STR         equ	1817	;# 
  4633     0891                     NVMADR          equ	2193	;# 
  4634     0891                     EEADR           equ	2193	;# 
  4635     0891                     PMADR           equ	2193	;# 
  4636     0891                     NVMADRL         equ	2193	;# 
  4637     0891                     EEADRL          equ	2193	;# 
  4638     0891                     PMADRL          equ	2193	;# 
  4639     0892                     NVMADRH         equ	2194	;# 
  4640     0892                     EEADRH          equ	2194	;# 
  4641     0892                     PMADRH          equ	2194	;# 
  4642     0893                     NVMDAT          equ	2195	;# 
  4643     0893                     EEDAT           equ	2195	;# 
  4644     0893                     PMDAT           equ	2195	;# 
  4645     0893                     NVMDATL         equ	2195	;# 
  4646     0893                     EEDATL          equ	2195	;# 
  4647     0893                     PMDATL          equ	2195	;# 
  4648     0894                     NVMDATH         equ	2196	;# 
  4649     0894                     EEDATH          equ	2196	;# 
  4650     0894                     PMDATH          equ	2196	;# 
  4651     0895                     NVMCON1         equ	2197	;# 
  4652     0895                     EECON1          equ	2197	;# 
  4653     0895                     PMCON1          equ	2197	;# 
  4654     0896                     NVMCON2         equ	2198	;# 
  4655     0896                     EECON2          equ	2198	;# 
  4656     0896                     PMCON2          equ	2198	;# 
  4657     089B                     PCON0           equ	2203	;# 
  4658     0911                     PMD0            equ	2321	;# 
  4659     0912                     PMD1            equ	2322	;# 
  4660     0913                     PMD2            equ	2323	;# 
  4661     0914                     PMD3            equ	2324	;# 
  4662     0915                     PMD4            equ	2325	;# 
  4663     0916                     PMD5            equ	2326	;# 
  4664     0918                     CPUDOZE         equ	2328	;# 
  4665     0919                     OSCCON1         equ	2329	;# 
  4666     091A                     OSCCON2         equ	2330	;# 
  4667     091B                     OSCCON3         equ	2331	;# 
  4668     091C                     OSCSTAT1        equ	2332	;# 
  4669     091D                     OSCEN           equ	2333	;# 
  4670     091E                     OSCTUNE         equ	2334	;# 
  4671     091F                     OSCFRQ          equ	2335	;# 
  4672     0E0F                     PPSLOCK         equ	3599	;# 
  4673     0E10                     INTPPS          equ	3600	;# 
  4674     0E11                     T0CKIPPS        equ	3601	;# 
  4675     0E12                     T1CKIPPS        equ	3602	;# 
  4676     0E13                     T1GPPS          equ	3603	;# 
  4677     0E14                     CCP1PPS         equ	3604	;# 
  4678     0E15                     CCP2PPS         equ	3605	;# 
  4679     0E16                     CCP3PPS         equ	3606	;# 
  4680     0E17                     CCP4PPS         equ	3607	;# 
  4681     0E18                     CWG1PPS         equ	3608	;# 
  4682     0E19                     CWG2PPS         equ	3609	;# 
  4683     0E1A                     MDCIN1PPS       equ	3610	;# 
  4684     0E1B                     MDCIN2PPS       equ	3611	;# 
  4685     0E1C                     MDMINPPS        equ	3612	;# 
  4686     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4687     0E1E                     SSP2DATPPS      equ	3614	;# 
  4688     0E1F                     SSP2SSPPS       equ	3615	;# 
  4689     0E20                     SSP1CLKPPS      equ	3616	;# 
  4690     0E21                     SSP1DATPPS      equ	3617	;# 
  4691     0E22                     SSP1SSPPS       equ	3618	;# 
  4692     0E24                     RXPPS           equ	3620	;# 
  4693     0E25                     TXPPS           equ	3621	;# 
  4694     0E28                     CLCIN0PPS       equ	3624	;# 
  4695     0E29                     CLCIN1PPS       equ	3625	;# 
  4696     0E2A                     CLCIN2PPS       equ	3626	;# 
  4697     0E2B                     CLCIN3PPS       equ	3627	;# 
  4698     0E2C                     T3CKIPPS        equ	3628	;# 
  4699     0E2D                     T3GPPS          equ	3629	;# 
  4700     0E2E                     T5CKIPPS        equ	3630	;# 
  4701     0E2F                     T5GPPS          equ	3631	;# 
  4702     0E90                     RA0PPS          equ	3728	;# 
  4703     0E91                     RA1PPS          equ	3729	;# 
  4704     0E92                     RA2PPS          equ	3730	;# 
  4705     0E94                     RA4PPS          equ	3732	;# 
  4706     0E95                     RA5PPS          equ	3733	;# 
  4707     0E9C                     RB4PPS          equ	3740	;# 
  4708     0E9D                     RB5PPS          equ	3741	;# 
  4709     0E9E                     RB6PPS          equ	3742	;# 
  4710     0E9F                     RB7PPS          equ	3743	;# 
  4711     0EA0                     RC0PPS          equ	3744	;# 
  4712     0EA1                     RC1PPS          equ	3745	;# 
  4713     0EA2                     RC2PPS          equ	3746	;# 
  4714     0EA3                     RC3PPS          equ	3747	;# 
  4715     0EA4                     RC4PPS          equ	3748	;# 
  4716     0EA5                     RC5PPS          equ	3749	;# 
  4717     0EA6                     RC6PPS          equ	3750	;# 
  4718     0EA7                     RC7PPS          equ	3751	;# 
  4719     0F0F                     CLCDATA         equ	3855	;# 
  4720     0F10                     CLC1CON         equ	3856	;# 
  4721     0F11                     CLC1POL         equ	3857	;# 
  4722     0F12                     CLC1SEL0        equ	3858	;# 
  4723     0F13                     CLC1SEL1        equ	3859	;# 
  4724     0F14                     CLC1SEL2        equ	3860	;# 
  4725     0F15                     CLC1SEL3        equ	3861	;# 
  4726     0F16                     CLC1GLS0        equ	3862	;# 
  4727     0F17                     CLC1GLS1        equ	3863	;# 
  4728     0F18                     CLC1GLS2        equ	3864	;# 
  4729     0F19                     CLC1GLS3        equ	3865	;# 
  4730     0F1A                     CLC2CON         equ	3866	;# 
  4731     0F1B                     CLC2POL         equ	3867	;# 
  4732     0F1C                     CLC2SEL0        equ	3868	;# 
  4733     0F1D                     CLC2SEL1        equ	3869	;# 
  4734     0F1E                     CLC2SEL2        equ	3870	;# 
  4735     0F1F                     CLC2SEL3        equ	3871	;# 
  4736     0F20                     CLC2GLS0        equ	3872	;# 
  4737     0F21                     CLC2GLS1        equ	3873	;# 
  4738     0F22                     CLC2GLS2        equ	3874	;# 
  4739     0F23                     CLC2GLS3        equ	3875	;# 
  4740     0F24                     CLC3CON         equ	3876	;# 
  4741     0F25                     CLC3POL         equ	3877	;# 
  4742     0F26                     CLC3SEL0        equ	3878	;# 
  4743     0F27                     CLC3SEL1        equ	3879	;# 
  4744     0F28                     CLC3SEL2        equ	3880	;# 
  4745     0F29                     CLC3SEL3        equ	3881	;# 
  4746     0F2A                     CLC3GLS0        equ	3882	;# 
  4747     0F2B                     CLC3GLS1        equ	3883	;# 
  4748     0F2C                     CLC3GLS2        equ	3884	;# 
  4749     0F2D                     CLC3GLS3        equ	3885	;# 
  4750     0F2E                     CLC4CON         equ	3886	;# 
  4751     0F2F                     CLC4POL         equ	3887	;# 
  4752     0F30                     CLC4SEL0        equ	3888	;# 
  4753     0F31                     CLC4SEL1        equ	3889	;# 
  4754     0F32                     CLC4SEL2        equ	3890	;# 
  4755     0F33                     CLC4SEL3        equ	3891	;# 
  4756     0F34                     CLC4GLS0        equ	3892	;# 
  4757     0F35                     CLC4GLS1        equ	3893	;# 
  4758     0F36                     CLC4GLS2        equ	3894	;# 
  4759     0F37                     CLC4GLS3        equ	3895	;# 
  4760     0FE4                     STATUS_SHAD     equ	4068	;# 
  4761     0FE5                     WREG_SHAD       equ	4069	;# 
  4762     0FE6                     BSR_SHAD        equ	4070	;# 
  4763     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4764     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4765     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4766     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4767     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4768     0FED                     STKPTR          equ	4077	;# 
  4769     0FEE                     TOSL            equ	4078	;# 
  4770     0FEF                     TOSH            equ	4079	;# 
  4771     0000                     INDF0           equ	0	;# 
  4772     0001                     INDF1           equ	1	;# 
  4773     0002                     PCL             equ	2	;# 
  4774     0003                     STATUS          equ	3	;# 
  4775     0004                     FSR0L           equ	4	;# 
  4776     0005                     FSR0H           equ	5	;# 
  4777     0006                     FSR1L           equ	6	;# 
  4778     0007                     FSR1H           equ	7	;# 
  4779     0008                     BSR             equ	8	;# 
  4780     0009                     WREG            equ	9	;# 
  4781     000A                     PCLATH          equ	10	;# 
  4782     000B                     INTCON          equ	11	;# 
  4783     000C                     PORTA           equ	12	;# 
  4784     000D                     PORTB           equ	13	;# 
  4785     000E                     PORTC           equ	14	;# 
  4786     0010                     PIR0            equ	16	;# 
  4787     0011                     PIR1            equ	17	;# 
  4788     0012                     PIR2            equ	18	;# 
  4789     0013                     PIR3            equ	19	;# 
  4790     0014                     PIR4            equ	20	;# 
  4791     0015                     TMR0L           equ	21	;# 
  4792     0015                     TMR0            equ	21	;# 
  4793     0016                     TMR0H           equ	22	;# 
  4794     0016                     PR0             equ	22	;# 
  4795     0017                     T0CON0          equ	23	;# 
  4796     0018                     T0CON1          equ	24	;# 
  4797     0019                     TMR1            equ	25	;# 
  4798     0019                     TMR1L           equ	25	;# 
  4799     001A                     TMR1H           equ	26	;# 
  4800     001B                     T1CON           equ	27	;# 
  4801     001C                     T1GCON          equ	28	;# 
  4802     001D                     TMR2            equ	29	;# 
  4803     001E                     PR2             equ	30	;# 
  4804     001F                     T2CON           equ	31	;# 
  4805     008C                     TRISA           equ	140	;# 
  4806     008D                     TRISB           equ	141	;# 
  4807     008E                     TRISC           equ	142	;# 
  4808     0090                     PIE0            equ	144	;# 
  4809     0091                     PIE1            equ	145	;# 
  4810     0092                     PIE2            equ	146	;# 
  4811     0093                     PIE3            equ	147	;# 
  4812     0094                     PIE4            equ	148	;# 
  4813     0097                     WDTCON          equ	151	;# 
  4814     009B                     ADRES           equ	155	;# 
  4815     009B                     ADRESL          equ	155	;# 
  4816     009C                     ADRESH          equ	156	;# 
  4817     009D                     ADCON0          equ	157	;# 
  4818     009E                     ADCON1          equ	158	;# 
  4819     009F                     ADACT           equ	159	;# 
  4820     010C                     LATA            equ	268	;# 
  4821     010D                     LATB            equ	269	;# 
  4822     010E                     LATC            equ	270	;# 
  4823     0111                     CM1CON0         equ	273	;# 
  4824     0112                     CM1CON1         equ	274	;# 
  4825     0113                     CM2CON0         equ	275	;# 
  4826     0114                     CM2CON1         equ	276	;# 
  4827     0115                     CMOUT           equ	277	;# 
  4828     0116                     BORCON          equ	278	;# 
  4829     0117                     FVRCON          equ	279	;# 
  4830     0118                     DACCON0         equ	280	;# 
  4831     0119                     DACCON1         equ	281	;# 
  4832     018C                     ANSELA          equ	396	;# 
  4833     018D                     ANSELB          equ	397	;# 
  4834     018E                     ANSELC          equ	398	;# 
  4835     0197                     VREGCON         equ	407	;# 
  4836     0199                     RC1REG          equ	409	;# 
  4837     0199                     RCREG           equ	409	;# 
  4838     0199                     RCREG1          equ	409	;# 
  4839     019A                     TX1REG          equ	410	;# 
  4840     019A                     TXREG1          equ	410	;# 
  4841     019A                     TXREG           equ	410	;# 
  4842     019B                     SP1BRG          equ	411	;# 
  4843     019B                     SPBRG           equ	411	;# 
  4844     019B                     SP1BRGL         equ	411	;# 
  4845     019B                     SPBRG1          equ	411	;# 
  4846     019B                     SPBRGL          equ	411	;# 
  4847     019C                     SP1BRGH         equ	412	;# 
  4848     019C                     SPBRGH          equ	412	;# 
  4849     019C                     SPBRGH1         equ	412	;# 
  4850     019D                     RC1STA          equ	413	;# 
  4851     019D                     RCSTA1          equ	413	;# 
  4852     019D                     RCSTA           equ	413	;# 
  4853     019E                     TX1STA          equ	414	;# 
  4854     019E                     TXSTA1          equ	414	;# 
  4855     019E                     TXSTA           equ	414	;# 
  4856     019F                     BAUD1CON        equ	415	;# 
  4857     019F                     BAUDCON1        equ	415	;# 
  4858     019F                     BAUDCTL1        equ	415	;# 
  4859     019F                     BAUDCON         equ	415	;# 
  4860     019F                     BAUDCTL         equ	415	;# 
  4861     020C                     WPUA            equ	524	;# 
  4862     020D                     WPUB            equ	525	;# 
  4863     020E                     WPUC            equ	526	;# 
  4864     0211                     SSP1BUF         equ	529	;# 
  4865     0211                     SSPBUF          equ	529	;# 
  4866     0212                     SSP1ADD         equ	530	;# 
  4867     0212                     SSPADD          equ	530	;# 
  4868     0213                     SSP1MSK         equ	531	;# 
  4869     0213                     SSPMSK          equ	531	;# 
  4870     0214                     SSP1STAT        equ	532	;# 
  4871     0214                     SSPSTAT         equ	532	;# 
  4872     0215                     SSP1CON1        equ	533	;# 
  4873     0215                     SSPCON          equ	533	;# 
  4874     0215                     SSPCON1         equ	533	;# 
  4875     0215                     SSP1CON         equ	533	;# 
  4876     0216                     SSP1CON2        equ	534	;# 
  4877     0216                     SSPCON2         equ	534	;# 
  4878     0217                     SSP1CON3        equ	535	;# 
  4879     0217                     SSPCON3         equ	535	;# 
  4880     0219                     SSP2BUF         equ	537	;# 
  4881     021A                     SSP2ADD         equ	538	;# 
  4882     021B                     SSP2MSK         equ	539	;# 
  4883     021C                     SSP2STAT        equ	540	;# 
  4884     021D                     SSP2CON1        equ	541	;# 
  4885     021D                     SSP2CON         equ	541	;# 
  4886     021E                     SSP2CON2        equ	542	;# 
  4887     021F                     SSP2CON3        equ	543	;# 
  4888     028C                     ODCONA          equ	652	;# 
  4889     028D                     ODCONB          equ	653	;# 
  4890     028E                     ODCONC          equ	654	;# 
  4891     0291                     CCPR1           equ	657	;# 
  4892     0291                     CCPR1L          equ	657	;# 
  4893     0292                     CCPR1H          equ	658	;# 
  4894     0293                     CCP1CON         equ	659	;# 
  4895     0294                     CCP1CAP         equ	660	;# 
  4896     0295                     CCPR2           equ	661	;# 
  4897     0295                     CCPR2L          equ	661	;# 
  4898     0296                     CCPR2H          equ	662	;# 
  4899     0297                     CCP2CON         equ	663	;# 
  4900     0298                     CCP2CAP         equ	664	;# 
  4901     029F                     CCPTMRS         equ	671	;# 
  4902     030C                     SLRCONA         equ	780	;# 
  4903     030D                     SLRCONB         equ	781	;# 
  4904     030E                     SLRCONC         equ	782	;# 
  4905     0311                     CCPR3           equ	785	;# 
  4906     0311                     CCPR3L          equ	785	;# 
  4907     0312                     CCPR3H          equ	786	;# 
  4908     0313                     CCP3CON         equ	787	;# 
  4909     0314                     CCP3CAP         equ	788	;# 
  4910     0315                     CCPR4           equ	789	;# 
  4911     0315                     CCPR4L          equ	789	;# 
  4912     0316                     CCPR4H          equ	790	;# 
  4913     0317                     CCP4CON         equ	791	;# 
  4914     0318                     CCP4CAP         equ	792	;# 
  4915     038C                     INLVLA          equ	908	;# 
  4916     038D                     INLVLB          equ	909	;# 
  4917     038E                     INLVLC          equ	910	;# 
  4918     0391                     IOCAP           equ	913	;# 
  4919     0392                     IOCAN           equ	914	;# 
  4920     0393                     IOCAF           equ	915	;# 
  4921     0394                     IOCBP           equ	916	;# 
  4922     0395                     IOCBN           equ	917	;# 
  4923     0396                     IOCBF           equ	918	;# 
  4924     0397                     IOCCP           equ	919	;# 
  4925     0398                     IOCCN           equ	920	;# 
  4926     0399                     IOCCF           equ	921	;# 
  4927     039A                     CLKRCON         equ	922	;# 
  4928     039C                     MDCON           equ	924	;# 
  4929     039D                     MDSRC           equ	925	;# 
  4930     039E                     MDCARH          equ	926	;# 
  4931     039F                     MDCARL          equ	927	;# 
  4932     0411                     TMR3            equ	1041	;# 
  4933     0411                     TMR3L           equ	1041	;# 
  4934     0412                     TMR3H           equ	1042	;# 
  4935     0413                     T3CON           equ	1043	;# 
  4936     0414                     T3GCON          equ	1044	;# 
  4937     0415                     TMR4            equ	1045	;# 
  4938     0416                     PR4             equ	1046	;# 
  4939     0417                     T4CON           equ	1047	;# 
  4940     0418                     TMR5            equ	1048	;# 
  4941     0418                     TMR5L           equ	1048	;# 
  4942     0419                     TMR5H           equ	1049	;# 
  4943     041A                     T5CON           equ	1050	;# 
  4944     041B                     T5GCON          equ	1051	;# 
  4945     041C                     TMR6            equ	1052	;# 
  4946     041D                     PR6             equ	1053	;# 
  4947     041E                     T6CON           equ	1054	;# 
  4948     041F                     CCDCON          equ	1055	;# 
  4949     0498                     NCO1ACC         equ	1176	;# 
  4950     0498                     NCO1ACCL        equ	1176	;# 
  4951     0499                     NCO1ACCH        equ	1177	;# 
  4952     049A                     NCO1ACCU        equ	1178	;# 
  4953     049B                     NCO1INC         equ	1179	;# 
  4954     049B                     NCO1INCL        equ	1179	;# 
  4955     049C                     NCO1INCH        equ	1180	;# 
  4956     049D                     NCO1INCU        equ	1181	;# 
  4957     049E                     NCO1CON         equ	1182	;# 
  4958     049F                     NCO1CLK         equ	1183	;# 
  4959     0617                     PWM5DCL         equ	1559	;# 
  4960     0618                     PWM5DCH         equ	1560	;# 
  4961     0619                     PWM5CON         equ	1561	;# 
  4962     0619                     PWM5CON0        equ	1561	;# 
  4963     061A                     PWM6DCL         equ	1562	;# 
  4964     061B                     PWM6DCH         equ	1563	;# 
  4965     061C                     PWM6CON         equ	1564	;# 
  4966     061C                     PWM6CON0        equ	1564	;# 
  4967     061F                     PWMTMRS         equ	1567	;# 
  4968     0691                     CWG1CLKCON      equ	1681	;# 
  4969     0692                     CWG1DAT         equ	1682	;# 
  4970     0693                     CWG1DBR         equ	1683	;# 
  4971     0694                     CWG1DBF         equ	1684	;# 
  4972     0695                     CWG1CON0        equ	1685	;# 
  4973     0696                     CWG1CON1        equ	1686	;# 
  4974     0697                     CWG1AS0         equ	1687	;# 
  4975     0698                     CWG1AS1         equ	1688	;# 
  4976     0699                     CWG1STR         equ	1689	;# 
  4977     0711                     CWG2CLKCON      equ	1809	;# 
  4978     0712                     CWG2DAT         equ	1810	;# 
  4979     0713                     CWG2DBR         equ	1811	;# 
  4980     0714                     CWG2DBF         equ	1812	;# 
  4981     0715                     CWG2CON0        equ	1813	;# 
  4982     0716                     CWG2CON1        equ	1814	;# 
  4983     0717                     CWG2AS0         equ	1815	;# 
  4984     0718                     CWG2AS1         equ	1816	;# 
  4985     0719                     CWG2STR         equ	1817	;# 
  4986     0891                     NVMADR          equ	2193	;# 
  4987     0891                     EEADR           equ	2193	;# 
  4988     0891                     PMADR           equ	2193	;# 
  4989     0891                     NVMADRL         equ	2193	;# 
  4990     0891                     EEADRL          equ	2193	;# 
  4991     0891                     PMADRL          equ	2193	;# 
  4992     0892                     NVMADRH         equ	2194	;# 
  4993     0892                     EEADRH          equ	2194	;# 
  4994     0892                     PMADRH          equ	2194	;# 
  4995     0893                     NVMDAT          equ	2195	;# 
  4996     0893                     EEDAT           equ	2195	;# 
  4997     0893                     PMDAT           equ	2195	;# 
  4998     0893                     NVMDATL         equ	2195	;# 
  4999     0893                     EEDATL          equ	2195	;# 
  5000     0893                     PMDATL          equ	2195	;# 
  5001     0894                     NVMDATH         equ	2196	;# 
  5002     0894                     EEDATH          equ	2196	;# 
  5003     0894                     PMDATH          equ	2196	;# 
  5004     0895                     NVMCON1         equ	2197	;# 
  5005     0895                     EECON1          equ	2197	;# 
  5006     0895                     PMCON1          equ	2197	;# 
  5007     0896                     NVMCON2         equ	2198	;# 
  5008     0896                     EECON2          equ	2198	;# 
  5009     0896                     PMCON2          equ	2198	;# 
  5010     089B                     PCON0           equ	2203	;# 
  5011     0911                     PMD0            equ	2321	;# 
  5012     0912                     PMD1            equ	2322	;# 
  5013     0913                     PMD2            equ	2323	;# 
  5014     0914                     PMD3            equ	2324	;# 
  5015     0915                     PMD4            equ	2325	;# 
  5016     0916                     PMD5            equ	2326	;# 
  5017     0918                     CPUDOZE         equ	2328	;# 
  5018     0919                     OSCCON1         equ	2329	;# 
  5019     091A                     OSCCON2         equ	2330	;# 
  5020     091B                     OSCCON3         equ	2331	;# 
  5021     091C                     OSCSTAT1        equ	2332	;# 
  5022     091D                     OSCEN           equ	2333	;# 
  5023     091E                     OSCTUNE         equ	2334	;# 
  5024     091F                     OSCFRQ          equ	2335	;# 
  5025     0E0F                     PPSLOCK         equ	3599	;# 
  5026     0E10                     INTPPS          equ	3600	;# 
  5027     0E11                     T0CKIPPS        equ	3601	;# 
  5028     0E12                     T1CKIPPS        equ	3602	;# 
  5029     0E13                     T1GPPS          equ	3603	;# 
  5030     0E14                     CCP1PPS         equ	3604	;# 
  5031     0E15                     CCP2PPS         equ	3605	;# 
  5032     0E16                     CCP3PPS         equ	3606	;# 
  5033     0E17                     CCP4PPS         equ	3607	;# 
  5034     0E18                     CWG1PPS         equ	3608	;# 
  5035     0E19                     CWG2PPS         equ	3609	;# 
  5036     0E1A                     MDCIN1PPS       equ	3610	;# 
  5037     0E1B                     MDCIN2PPS       equ	3611	;# 
  5038     0E1C                     MDMINPPS        equ	3612	;# 
  5039     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5040     0E1E                     SSP2DATPPS      equ	3614	;# 
  5041     0E1F                     SSP2SSPPS       equ	3615	;# 
  5042     0E20                     SSP1CLKPPS      equ	3616	;# 
  5043     0E21                     SSP1DATPPS      equ	3617	;# 
  5044     0E22                     SSP1SSPPS       equ	3618	;# 
  5045     0E24                     RXPPS           equ	3620	;# 
  5046     0E25                     TXPPS           equ	3621	;# 
  5047     0E28                     CLCIN0PPS       equ	3624	;# 
  5048     0E29                     CLCIN1PPS       equ	3625	;# 
  5049     0E2A                     CLCIN2PPS       equ	3626	;# 
  5050     0E2B                     CLCIN3PPS       equ	3627	;# 
  5051     0E2C                     T3CKIPPS        equ	3628	;# 
  5052     0E2D                     T3GPPS          equ	3629	;# 
  5053     0E2E                     T5CKIPPS        equ	3630	;# 
  5054     0E2F                     T5GPPS          equ	3631	;# 
  5055     0E90                     RA0PPS          equ	3728	;# 
  5056     0E91                     RA1PPS          equ	3729	;# 
  5057     0E92                     RA2PPS          equ	3730	;# 
  5058     0E94                     RA4PPS          equ	3732	;# 
  5059     0E95                     RA5PPS          equ	3733	;# 
  5060     0E9C                     RB4PPS          equ	3740	;# 
  5061     0E9D                     RB5PPS          equ	3741	;# 
  5062     0E9E                     RB6PPS          equ	3742	;# 
  5063     0E9F                     RB7PPS          equ	3743	;# 
  5064     0EA0                     RC0PPS          equ	3744	;# 
  5065     0EA1                     RC1PPS          equ	3745	;# 
  5066     0EA2                     RC2PPS          equ	3746	;# 
  5067     0EA3                     RC3PPS          equ	3747	;# 
  5068     0EA4                     RC4PPS          equ	3748	;# 
  5069     0EA5                     RC5PPS          equ	3749	;# 
  5070     0EA6                     RC6PPS          equ	3750	;# 
  5071     0EA7                     RC7PPS          equ	3751	;# 
  5072     0F0F                     CLCDATA         equ	3855	;# 
  5073     0F10                     CLC1CON         equ	3856	;# 
  5074     0F11                     CLC1POL         equ	3857	;# 
  5075     0F12                     CLC1SEL0        equ	3858	;# 
  5076     0F13                     CLC1SEL1        equ	3859	;# 
  5077     0F14                     CLC1SEL2        equ	3860	;# 
  5078     0F15                     CLC1SEL3        equ	3861	;# 
  5079     0F16                     CLC1GLS0        equ	3862	;# 
  5080     0F17                     CLC1GLS1        equ	3863	;# 
  5081     0F18                     CLC1GLS2        equ	3864	;# 
  5082     0F19                     CLC1GLS3        equ	3865	;# 
  5083     0F1A                     CLC2CON         equ	3866	;# 
  5084     0F1B                     CLC2POL         equ	3867	;# 
  5085     0F1C                     CLC2SEL0        equ	3868	;# 
  5086     0F1D                     CLC2SEL1        equ	3869	;# 
  5087     0F1E                     CLC2SEL2        equ	3870	;# 
  5088     0F1F                     CLC2SEL3        equ	3871	;# 
  5089     0F20                     CLC2GLS0        equ	3872	;# 
  5090     0F21                     CLC2GLS1        equ	3873	;# 
  5091     0F22                     CLC2GLS2        equ	3874	;# 
  5092     0F23                     CLC2GLS3        equ	3875	;# 
  5093     0F24                     CLC3CON         equ	3876	;# 
  5094     0F25                     CLC3POL         equ	3877	;# 
  5095     0F26                     CLC3SEL0        equ	3878	;# 
  5096     0F27                     CLC3SEL1        equ	3879	;# 
  5097     0F28                     CLC3SEL2        equ	3880	;# 
  5098     0F29                     CLC3SEL3        equ	3881	;# 
  5099     0F2A                     CLC3GLS0        equ	3882	;# 
  5100     0F2B                     CLC3GLS1        equ	3883	;# 
  5101     0F2C                     CLC3GLS2        equ	3884	;# 
  5102     0F2D                     CLC3GLS3        equ	3885	;# 
  5103     0F2E                     CLC4CON         equ	3886	;# 
  5104     0F2F                     CLC4POL         equ	3887	;# 
  5105     0F30                     CLC4SEL0        equ	3888	;# 
  5106     0F31                     CLC4SEL1        equ	3889	;# 
  5107     0F32                     CLC4SEL2        equ	3890	;# 
  5108     0F33                     CLC4SEL3        equ	3891	;# 
  5109     0F34                     CLC4GLS0        equ	3892	;# 
  5110     0F35                     CLC4GLS1        equ	3893	;# 
  5111     0F36                     CLC4GLS2        equ	3894	;# 
  5112     0F37                     CLC4GLS3        equ	3895	;# 
  5113     0FE4                     STATUS_SHAD     equ	4068	;# 
  5114     0FE5                     WREG_SHAD       equ	4069	;# 
  5115     0FE6                     BSR_SHAD        equ	4070	;# 
  5116     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5117     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5118     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5119     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5120     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5121     0FED                     STKPTR          equ	4077	;# 
  5122     0FEE                     TOSL            equ	4078	;# 
  5123     0FEF                     TOSH            equ	4079	;# 
  5124     0000                     INDF0           equ	0	;# 
  5125     0001                     INDF1           equ	1	;# 
  5126     0002                     PCL             equ	2	;# 
  5127     0003                     STATUS          equ	3	;# 
  5128     0004                     FSR0L           equ	4	;# 
  5129     0005                     FSR0H           equ	5	;# 
  5130     0006                     FSR1L           equ	6	;# 
  5131     0007                     FSR1H           equ	7	;# 
  5132     0008                     BSR             equ	8	;# 
  5133     0009                     WREG            equ	9	;# 
  5134     000A                     PCLATH          equ	10	;# 
  5135     000B                     INTCON          equ	11	;# 
  5136     000C                     PORTA           equ	12	;# 
  5137     000D                     PORTB           equ	13	;# 
  5138     000E                     PORTC           equ	14	;# 
  5139     0010                     PIR0            equ	16	;# 
  5140     0011                     PIR1            equ	17	;# 
  5141     0012                     PIR2            equ	18	;# 
  5142     0013                     PIR3            equ	19	;# 
  5143     0014                     PIR4            equ	20	;# 
  5144     0015                     TMR0L           equ	21	;# 
  5145     0015                     TMR0            equ	21	;# 
  5146     0016                     TMR0H           equ	22	;# 
  5147     0016                     PR0             equ	22	;# 
  5148     0017                     T0CON0          equ	23	;# 
  5149     0018                     T0CON1          equ	24	;# 
  5150     0019                     TMR1            equ	25	;# 
  5151     0019                     TMR1L           equ	25	;# 
  5152     001A                     TMR1H           equ	26	;# 
  5153     001B                     T1CON           equ	27	;# 
  5154     001C                     T1GCON          equ	28	;# 
  5155     001D                     TMR2            equ	29	;# 
  5156     001E                     PR2             equ	30	;# 
  5157     001F                     T2CON           equ	31	;# 
  5158     008C                     TRISA           equ	140	;# 
  5159     008D                     TRISB           equ	141	;# 
  5160     008E                     TRISC           equ	142	;# 
  5161     0090                     PIE0            equ	144	;# 
  5162     0091                     PIE1            equ	145	;# 
  5163     0092                     PIE2            equ	146	;# 
  5164     0093                     PIE3            equ	147	;# 
  5165     0094                     PIE4            equ	148	;# 
  5166     0097                     WDTCON          equ	151	;# 
  5167     009B                     ADRES           equ	155	;# 
  5168     009B                     ADRESL          equ	155	;# 
  5169     009C                     ADRESH          equ	156	;# 
  5170     009D                     ADCON0          equ	157	;# 
  5171     009E                     ADCON1          equ	158	;# 
  5172     009F                     ADACT           equ	159	;# 
  5173     010C                     LATA            equ	268	;# 
  5174     010D                     LATB            equ	269	;# 
  5175     010E                     LATC            equ	270	;# 
  5176     0111                     CM1CON0         equ	273	;# 
  5177     0112                     CM1CON1         equ	274	;# 
  5178     0113                     CM2CON0         equ	275	;# 
  5179     0114                     CM2CON1         equ	276	;# 
  5180     0115                     CMOUT           equ	277	;# 
  5181     0116                     BORCON          equ	278	;# 
  5182     0117                     FVRCON          equ	279	;# 
  5183     0118                     DACCON0         equ	280	;# 
  5184     0119                     DACCON1         equ	281	;# 
  5185     018C                     ANSELA          equ	396	;# 
  5186     018D                     ANSELB          equ	397	;# 
  5187     018E                     ANSELC          equ	398	;# 
  5188     0197                     VREGCON         equ	407	;# 
  5189     0199                     RC1REG          equ	409	;# 
  5190     0199                     RCREG           equ	409	;# 
  5191     0199                     RCREG1          equ	409	;# 
  5192     019A                     TX1REG          equ	410	;# 
  5193     019A                     TXREG1          equ	410	;# 
  5194     019A                     TXREG           equ	410	;# 
  5195     019B                     SP1BRG          equ	411	;# 
  5196     019B                     SPBRG           equ	411	;# 
  5197     019B                     SP1BRGL         equ	411	;# 
  5198     019B                     SPBRG1          equ	411	;# 
  5199     019B                     SPBRGL          equ	411	;# 
  5200     019C                     SP1BRGH         equ	412	;# 
  5201     019C                     SPBRGH          equ	412	;# 
  5202     019C                     SPBRGH1         equ	412	;# 
  5203     019D                     RC1STA          equ	413	;# 
  5204     019D                     RCSTA1          equ	413	;# 
  5205     019D                     RCSTA           equ	413	;# 
  5206     019E                     TX1STA          equ	414	;# 
  5207     019E                     TXSTA1          equ	414	;# 
  5208     019E                     TXSTA           equ	414	;# 
  5209     019F                     BAUD1CON        equ	415	;# 
  5210     019F                     BAUDCON1        equ	415	;# 
  5211     019F                     BAUDCTL1        equ	415	;# 
  5212     019F                     BAUDCON         equ	415	;# 
  5213     019F                     BAUDCTL         equ	415	;# 
  5214     020C                     WPUA            equ	524	;# 
  5215     020D                     WPUB            equ	525	;# 
  5216     020E                     WPUC            equ	526	;# 
  5217     0211                     SSP1BUF         equ	529	;# 
  5218     0211                     SSPBUF          equ	529	;# 
  5219     0212                     SSP1ADD         equ	530	;# 
  5220     0212                     SSPADD          equ	530	;# 
  5221     0213                     SSP1MSK         equ	531	;# 
  5222     0213                     SSPMSK          equ	531	;# 
  5223     0214                     SSP1STAT        equ	532	;# 
  5224     0214                     SSPSTAT         equ	532	;# 
  5225     0215                     SSP1CON1        equ	533	;# 
  5226     0215                     SSPCON          equ	533	;# 
  5227     0215                     SSPCON1         equ	533	;# 
  5228     0215                     SSP1CON         equ	533	;# 
  5229     0216                     SSP1CON2        equ	534	;# 
  5230     0216                     SSPCON2         equ	534	;# 
  5231     0217                     SSP1CON3        equ	535	;# 
  5232     0217                     SSPCON3         equ	535	;# 
  5233     0219                     SSP2BUF         equ	537	;# 
  5234     021A                     SSP2ADD         equ	538	;# 
  5235     021B                     SSP2MSK         equ	539	;# 
  5236     021C                     SSP2STAT        equ	540	;# 
  5237     021D                     SSP2CON1        equ	541	;# 
  5238     021D                     SSP2CON         equ	541	;# 
  5239     021E                     SSP2CON2        equ	542	;# 
  5240     021F                     SSP2CON3        equ	543	;# 
  5241     028C                     ODCONA          equ	652	;# 
  5242     028D                     ODCONB          equ	653	;# 
  5243     028E                     ODCONC          equ	654	;# 
  5244     0291                     CCPR1           equ	657	;# 
  5245     0291                     CCPR1L          equ	657	;# 
  5246     0292                     CCPR1H          equ	658	;# 
  5247     0293                     CCP1CON         equ	659	;# 
  5248     0294                     CCP1CAP         equ	660	;# 
  5249     0295                     CCPR2           equ	661	;# 
  5250     0295                     CCPR2L          equ	661	;# 
  5251     0296                     CCPR2H          equ	662	;# 
  5252     0297                     CCP2CON         equ	663	;# 
  5253     0298                     CCP2CAP         equ	664	;# 
  5254     029F                     CCPTMRS         equ	671	;# 
  5255     030C                     SLRCONA         equ	780	;# 
  5256     030D                     SLRCONB         equ	781	;# 
  5257     030E                     SLRCONC         equ	782	;# 
  5258     0311                     CCPR3           equ	785	;# 
  5259     0311                     CCPR3L          equ	785	;# 
  5260     0312                     CCPR3H          equ	786	;# 
  5261     0313                     CCP3CON         equ	787	;# 
  5262     0314                     CCP3CAP         equ	788	;# 
  5263     0315                     CCPR4           equ	789	;# 
  5264     0315                     CCPR4L          equ	789	;# 
  5265     0316                     CCPR4H          equ	790	;# 
  5266     0317                     CCP4CON         equ	791	;# 
  5267     0318                     CCP4CAP         equ	792	;# 
  5268     038C                     INLVLA          equ	908	;# 
  5269     038D                     INLVLB          equ	909	;# 
  5270     038E                     INLVLC          equ	910	;# 
  5271     0391                     IOCAP           equ	913	;# 
  5272     0392                     IOCAN           equ	914	;# 
  5273     0393                     IOCAF           equ	915	;# 
  5274     0394                     IOCBP           equ	916	;# 
  5275     0395                     IOCBN           equ	917	;# 
  5276     0396                     IOCBF           equ	918	;# 
  5277     0397                     IOCCP           equ	919	;# 
  5278     0398                     IOCCN           equ	920	;# 
  5279     0399                     IOCCF           equ	921	;# 
  5280     039A                     CLKRCON         equ	922	;# 
  5281     039C                     MDCON           equ	924	;# 
  5282     039D                     MDSRC           equ	925	;# 
  5283     039E                     MDCARH          equ	926	;# 
  5284     039F                     MDCARL          equ	927	;# 
  5285     0411                     TMR3            equ	1041	;# 
  5286     0411                     TMR3L           equ	1041	;# 
  5287     0412                     TMR3H           equ	1042	;# 
  5288     0413                     T3CON           equ	1043	;# 
  5289     0414                     T3GCON          equ	1044	;# 
  5290     0415                     TMR4            equ	1045	;# 
  5291     0416                     PR4             equ	1046	;# 
  5292     0417                     T4CON           equ	1047	;# 
  5293     0418                     TMR5            equ	1048	;# 
  5294     0418                     TMR5L           equ	1048	;# 
  5295     0419                     TMR5H           equ	1049	;# 
  5296     041A                     T5CON           equ	1050	;# 
  5297     041B                     T5GCON          equ	1051	;# 
  5298     041C                     TMR6            equ	1052	;# 
  5299     041D                     PR6             equ	1053	;# 
  5300     041E                     T6CON           equ	1054	;# 
  5301     041F                     CCDCON          equ	1055	;# 
  5302     0498                     NCO1ACC         equ	1176	;# 
  5303     0498                     NCO1ACCL        equ	1176	;# 
  5304     0499                     NCO1ACCH        equ	1177	;# 
  5305     049A                     NCO1ACCU        equ	1178	;# 
  5306     049B                     NCO1INC         equ	1179	;# 
  5307     049B                     NCO1INCL        equ	1179	;# 
  5308     049C                     NCO1INCH        equ	1180	;# 
  5309     049D                     NCO1INCU        equ	1181	;# 
  5310     049E                     NCO1CON         equ	1182	;# 
  5311     049F                     NCO1CLK         equ	1183	;# 
  5312     0617                     PWM5DCL         equ	1559	;# 
  5313     0618                     PWM5DCH         equ	1560	;# 
  5314     0619                     PWM5CON         equ	1561	;# 
  5315     0619                     PWM5CON0        equ	1561	;# 
  5316     061A                     PWM6DCL         equ	1562	;# 
  5317     061B                     PWM6DCH         equ	1563	;# 
  5318     061C                     PWM6CON         equ	1564	;# 
  5319     061C                     PWM6CON0        equ	1564	;# 
  5320     061F                     PWMTMRS         equ	1567	;# 
  5321     0691                     CWG1CLKCON      equ	1681	;# 
  5322     0692                     CWG1DAT         equ	1682	;# 
  5323     0693                     CWG1DBR         equ	1683	;# 
  5324     0694                     CWG1DBF         equ	1684	;# 
  5325     0695                     CWG1CON0        equ	1685	;# 
  5326     0696                     CWG1CON1        equ	1686	;# 
  5327     0697                     CWG1AS0         equ	1687	;# 
  5328     0698                     CWG1AS1         equ	1688	;# 
  5329     0699                     CWG1STR         equ	1689	;# 
  5330     0711                     CWG2CLKCON      equ	1809	;# 
  5331     0712                     CWG2DAT         equ	1810	;# 
  5332     0713                     CWG2DBR         equ	1811	;# 
  5333     0714                     CWG2DBF         equ	1812	;# 
  5334     0715                     CWG2CON0        equ	1813	;# 
  5335     0716                     CWG2CON1        equ	1814	;# 
  5336     0717                     CWG2AS0         equ	1815	;# 
  5337     0718                     CWG2AS1         equ	1816	;# 
  5338     0719                     CWG2STR         equ	1817	;# 
  5339     0891                     NVMADR          equ	2193	;# 
  5340     0891                     EEADR           equ	2193	;# 
  5341     0891                     PMADR           equ	2193	;# 
  5342     0891                     NVMADRL         equ	2193	;# 
  5343     0891                     EEADRL          equ	2193	;# 
  5344     0891                     PMADRL          equ	2193	;# 
  5345     0892                     NVMADRH         equ	2194	;# 
  5346     0892                     EEADRH          equ	2194	;# 
  5347     0892                     PMADRH          equ	2194	;# 
  5348     0893                     NVMDAT          equ	2195	;# 
  5349     0893                     EEDAT           equ	2195	;# 
  5350     0893                     PMDAT           equ	2195	;# 
  5351     0893                     NVMDATL         equ	2195	;# 
  5352     0893                     EEDATL          equ	2195	;# 
  5353     0893                     PMDATL          equ	2195	;# 
  5354     0894                     NVMDATH         equ	2196	;# 
  5355     0894                     EEDATH          equ	2196	;# 
  5356     0894                     PMDATH          equ	2196	;# 
  5357     0895                     NVMCON1         equ	2197	;# 
  5358     0895                     EECON1          equ	2197	;# 
  5359     0895                     PMCON1          equ	2197	;# 
  5360     0896                     NVMCON2         equ	2198	;# 
  5361     0896                     EECON2          equ	2198	;# 
  5362     0896                     PMCON2          equ	2198	;# 
  5363     089B                     PCON0           equ	2203	;# 
  5364     0911                     PMD0            equ	2321	;# 
  5365     0912                     PMD1            equ	2322	;# 
  5366     0913                     PMD2            equ	2323	;# 
  5367     0914                     PMD3            equ	2324	;# 
  5368     0915                     PMD4            equ	2325	;# 
  5369     0916                     PMD5            equ	2326	;# 
  5370     0918                     CPUDOZE         equ	2328	;# 
  5371     0919                     OSCCON1         equ	2329	;# 
  5372     091A                     OSCCON2         equ	2330	;# 
  5373     091B                     OSCCON3         equ	2331	;# 
  5374     091C                     OSCSTAT1        equ	2332	;# 
  5375     091D                     OSCEN           equ	2333	;# 
  5376     091E                     OSCTUNE         equ	2334	;# 
  5377     091F                     OSCFRQ          equ	2335	;# 
  5378     0E0F                     PPSLOCK         equ	3599	;# 
  5379     0E10                     INTPPS          equ	3600	;# 
  5380     0E11                     T0CKIPPS        equ	3601	;# 
  5381     0E12                     T1CKIPPS        equ	3602	;# 
  5382     0E13                     T1GPPS          equ	3603	;# 
  5383     0E14                     CCP1PPS         equ	3604	;# 
  5384     0E15                     CCP2PPS         equ	3605	;# 
  5385     0E16                     CCP3PPS         equ	3606	;# 
  5386     0E17                     CCP4PPS         equ	3607	;# 
  5387     0E18                     CWG1PPS         equ	3608	;# 
  5388     0E19                     CWG2PPS         equ	3609	;# 
  5389     0E1A                     MDCIN1PPS       equ	3610	;# 
  5390     0E1B                     MDCIN2PPS       equ	3611	;# 
  5391     0E1C                     MDMINPPS        equ	3612	;# 
  5392     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5393     0E1E                     SSP2DATPPS      equ	3614	;# 
  5394     0E1F                     SSP2SSPPS       equ	3615	;# 
  5395     0E20                     SSP1CLKPPS      equ	3616	;# 
  5396     0E21                     SSP1DATPPS      equ	3617	;# 
  5397     0E22                     SSP1SSPPS       equ	3618	;# 
  5398     0E24                     RXPPS           equ	3620	;# 
  5399     0E25                     TXPPS           equ	3621	;# 
  5400     0E28                     CLCIN0PPS       equ	3624	;# 
  5401     0E29                     CLCIN1PPS       equ	3625	;# 
  5402     0E2A                     CLCIN2PPS       equ	3626	;# 
  5403     0E2B                     CLCIN3PPS       equ	3627	;# 
  5404     0E2C                     T3CKIPPS        equ	3628	;# 
  5405     0E2D                     T3GPPS          equ	3629	;# 
  5406     0E2E                     T5CKIPPS        equ	3630	;# 
  5407     0E2F                     T5GPPS          equ	3631	;# 
  5408     0E90                     RA0PPS          equ	3728	;# 
  5409     0E91                     RA1PPS          equ	3729	;# 
  5410     0E92                     RA2PPS          equ	3730	;# 
  5411     0E94                     RA4PPS          equ	3732	;# 
  5412     0E95                     RA5PPS          equ	3733	;# 
  5413     0E9C                     RB4PPS          equ	3740	;# 
  5414     0E9D                     RB5PPS          equ	3741	;# 
  5415     0E9E                     RB6PPS          equ	3742	;# 
  5416     0E9F                     RB7PPS          equ	3743	;# 
  5417     0EA0                     RC0PPS          equ	3744	;# 
  5418     0EA1                     RC1PPS          equ	3745	;# 
  5419     0EA2                     RC2PPS          equ	3746	;# 
  5420     0EA3                     RC3PPS          equ	3747	;# 
  5421     0EA4                     RC4PPS          equ	3748	;# 
  5422     0EA5                     RC5PPS          equ	3749	;# 
  5423     0EA6                     RC6PPS          equ	3750	;# 
  5424     0EA7                     RC7PPS          equ	3751	;# 
  5425     0F0F                     CLCDATA         equ	3855	;# 
  5426     0F10                     CLC1CON         equ	3856	;# 
  5427     0F11                     CLC1POL         equ	3857	;# 
  5428     0F12                     CLC1SEL0        equ	3858	;# 
  5429     0F13                     CLC1SEL1        equ	3859	;# 
  5430     0F14                     CLC1SEL2        equ	3860	;# 
  5431     0F15                     CLC1SEL3        equ	3861	;# 
  5432     0F16                     CLC1GLS0        equ	3862	;# 
  5433     0F17                     CLC1GLS1        equ	3863	;# 
  5434     0F18                     CLC1GLS2        equ	3864	;# 
  5435     0F19                     CLC1GLS3        equ	3865	;# 
  5436     0F1A                     CLC2CON         equ	3866	;# 
  5437     0F1B                     CLC2POL         equ	3867	;# 
  5438     0F1C                     CLC2SEL0        equ	3868	;# 
  5439     0F1D                     CLC2SEL1        equ	3869	;# 
  5440     0F1E                     CLC2SEL2        equ	3870	;# 
  5441     0F1F                     CLC2SEL3        equ	3871	;# 
  5442     0F20                     CLC2GLS0        equ	3872	;# 
  5443     0F21                     CLC2GLS1        equ	3873	;# 
  5444     0F22                     CLC2GLS2        equ	3874	;# 
  5445     0F23                     CLC2GLS3        equ	3875	;# 
  5446     0F24                     CLC3CON         equ	3876	;# 
  5447     0F25                     CLC3POL         equ	3877	;# 
  5448     0F26                     CLC3SEL0        equ	3878	;# 
  5449     0F27                     CLC3SEL1        equ	3879	;# 
  5450     0F28                     CLC3SEL2        equ	3880	;# 
  5451     0F29                     CLC3SEL3        equ	3881	;# 
  5452     0F2A                     CLC3GLS0        equ	3882	;# 
  5453     0F2B                     CLC3GLS1        equ	3883	;# 
  5454     0F2C                     CLC3GLS2        equ	3884	;# 
  5455     0F2D                     CLC3GLS3        equ	3885	;# 
  5456     0F2E                     CLC4CON         equ	3886	;# 
  5457     0F2F                     CLC4POL         equ	3887	;# 
  5458     0F30                     CLC4SEL0        equ	3888	;# 
  5459     0F31                     CLC4SEL1        equ	3889	;# 
  5460     0F32                     CLC4SEL2        equ	3890	;# 
  5461     0F33                     CLC4SEL3        equ	3891	;# 
  5462     0F34                     CLC4GLS0        equ	3892	;# 
  5463     0F35                     CLC4GLS1        equ	3893	;# 
  5464     0F36                     CLC4GLS2        equ	3894	;# 
  5465     0F37                     CLC4GLS3        equ	3895	;# 
  5466     0FE4                     STATUS_SHAD     equ	4068	;# 
  5467     0FE5                     WREG_SHAD       equ	4069	;# 
  5468     0FE6                     BSR_SHAD        equ	4070	;# 
  5469     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5470     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5471     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5472     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5473     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5474     0FED                     STKPTR          equ	4077	;# 
  5475     0FEE                     TOSL            equ	4078	;# 
  5476     0FEF                     TOSH            equ	4079	;# 
  5477     0000                     INDF0           equ	0	;# 
  5478     0001                     INDF1           equ	1	;# 
  5479     0002                     PCL             equ	2	;# 
  5480     0003                     STATUS          equ	3	;# 
  5481     0004                     FSR0L           equ	4	;# 
  5482     0005                     FSR0H           equ	5	;# 
  5483     0006                     FSR1L           equ	6	;# 
  5484     0007                     FSR1H           equ	7	;# 
  5485     0008                     BSR             equ	8	;# 
  5486     0009                     WREG            equ	9	;# 
  5487     000A                     PCLATH          equ	10	;# 
  5488     000B                     INTCON          equ	11	;# 
  5489     000C                     PORTA           equ	12	;# 
  5490     000D                     PORTB           equ	13	;# 
  5491     000E                     PORTC           equ	14	;# 
  5492     0010                     PIR0            equ	16	;# 
  5493     0011                     PIR1            equ	17	;# 
  5494     0012                     PIR2            equ	18	;# 
  5495     0013                     PIR3            equ	19	;# 
  5496     0014                     PIR4            equ	20	;# 
  5497     0015                     TMR0L           equ	21	;# 
  5498     0015                     TMR0            equ	21	;# 
  5499     0016                     TMR0H           equ	22	;# 
  5500     0016                     PR0             equ	22	;# 
  5501     0017                     T0CON0          equ	23	;# 
  5502     0018                     T0CON1          equ	24	;# 
  5503     0019                     TMR1            equ	25	;# 
  5504     0019                     TMR1L           equ	25	;# 
  5505     001A                     TMR1H           equ	26	;# 
  5506     001B                     T1CON           equ	27	;# 
  5507     001C                     T1GCON          equ	28	;# 
  5508     001D                     TMR2            equ	29	;# 
  5509     001E                     PR2             equ	30	;# 
  5510     001F                     T2CON           equ	31	;# 
  5511     008C                     TRISA           equ	140	;# 
  5512     008D                     TRISB           equ	141	;# 
  5513     008E                     TRISC           equ	142	;# 
  5514     0090                     PIE0            equ	144	;# 
  5515     0091                     PIE1            equ	145	;# 
  5516     0092                     PIE2            equ	146	;# 
  5517     0093                     PIE3            equ	147	;# 
  5518     0094                     PIE4            equ	148	;# 
  5519     0097                     WDTCON          equ	151	;# 
  5520     009B                     ADRES           equ	155	;# 
  5521     009B                     ADRESL          equ	155	;# 
  5522     009C                     ADRESH          equ	156	;# 
  5523     009D                     ADCON0          equ	157	;# 
  5524     009E                     ADCON1          equ	158	;# 
  5525     009F                     ADACT           equ	159	;# 
  5526     010C                     LATA            equ	268	;# 
  5527     010D                     LATB            equ	269	;# 
  5528     010E                     LATC            equ	270	;# 
  5529     0111                     CM1CON0         equ	273	;# 
  5530     0112                     CM1CON1         equ	274	;# 
  5531     0113                     CM2CON0         equ	275	;# 
  5532     0114                     CM2CON1         equ	276	;# 
  5533     0115                     CMOUT           equ	277	;# 
  5534     0116                     BORCON          equ	278	;# 
  5535     0117                     FVRCON          equ	279	;# 
  5536     0118                     DACCON0         equ	280	;# 
  5537     0119                     DACCON1         equ	281	;# 
  5538     018C                     ANSELA          equ	396	;# 
  5539     018D                     ANSELB          equ	397	;# 
  5540     018E                     ANSELC          equ	398	;# 
  5541     0197                     VREGCON         equ	407	;# 
  5542     0199                     RC1REG          equ	409	;# 
  5543     0199                     RCREG           equ	409	;# 
  5544     0199                     RCREG1          equ	409	;# 
  5545     019A                     TX1REG          equ	410	;# 
  5546     019A                     TXREG1          equ	410	;# 
  5547     019A                     TXREG           equ	410	;# 
  5548     019B                     SP1BRG          equ	411	;# 
  5549     019B                     SPBRG           equ	411	;# 
  5550     019B                     SP1BRGL         equ	411	;# 
  5551     019B                     SPBRG1          equ	411	;# 
  5552     019B                     SPBRGL          equ	411	;# 
  5553     019C                     SP1BRGH         equ	412	;# 
  5554     019C                     SPBRGH          equ	412	;# 
  5555     019C                     SPBRGH1         equ	412	;# 
  5556     019D                     RC1STA          equ	413	;# 
  5557     019D                     RCSTA1          equ	413	;# 
  5558     019D                     RCSTA           equ	413	;# 
  5559     019E                     TX1STA          equ	414	;# 
  5560     019E                     TXSTA1          equ	414	;# 
  5561     019E                     TXSTA           equ	414	;# 
  5562     019F                     BAUD1CON        equ	415	;# 
  5563     019F                     BAUDCON1        equ	415	;# 
  5564     019F                     BAUDCTL1        equ	415	;# 
  5565     019F                     BAUDCON         equ	415	;# 
  5566     019F                     BAUDCTL         equ	415	;# 
  5567     020C                     WPUA            equ	524	;# 
  5568     020D                     WPUB            equ	525	;# 
  5569     020E                     WPUC            equ	526	;# 
  5570     0211                     SSP1BUF         equ	529	;# 
  5571     0211                     SSPBUF          equ	529	;# 
  5572     0212                     SSP1ADD         equ	530	;# 
  5573     0212                     SSPADD          equ	530	;# 
  5574     0213                     SSP1MSK         equ	531	;# 
  5575     0213                     SSPMSK          equ	531	;# 
  5576     0214                     SSP1STAT        equ	532	;# 
  5577     0214                     SSPSTAT         equ	532	;# 
  5578     0215                     SSP1CON1        equ	533	;# 
  5579     0215                     SSPCON          equ	533	;# 
  5580     0215                     SSPCON1         equ	533	;# 
  5581     0215                     SSP1CON         equ	533	;# 
  5582     0216                     SSP1CON2        equ	534	;# 
  5583     0216                     SSPCON2         equ	534	;# 
  5584     0217                     SSP1CON3        equ	535	;# 
  5585     0217                     SSPCON3         equ	535	;# 
  5586     0219                     SSP2BUF         equ	537	;# 
  5587     021A                     SSP2ADD         equ	538	;# 
  5588     021B                     SSP2MSK         equ	539	;# 
  5589     021C                     SSP2STAT        equ	540	;# 
  5590     021D                     SSP2CON1        equ	541	;# 
  5591     021D                     SSP2CON         equ	541	;# 
  5592     021E                     SSP2CON2        equ	542	;# 
  5593     021F                     SSP2CON3        equ	543	;# 
  5594     028C                     ODCONA          equ	652	;# 
  5595     028D                     ODCONB          equ	653	;# 
  5596     028E                     ODCONC          equ	654	;# 
  5597     0291                     CCPR1           equ	657	;# 
  5598     0291                     CCPR1L          equ	657	;# 
  5599     0292                     CCPR1H          equ	658	;# 
  5600     0293                     CCP1CON         equ	659	;# 
  5601     0294                     CCP1CAP         equ	660	;# 
  5602     0295                     CCPR2           equ	661	;# 
  5603     0295                     CCPR2L          equ	661	;# 
  5604     0296                     CCPR2H          equ	662	;# 
  5605     0297                     CCP2CON         equ	663	;# 
  5606     0298                     CCP2CAP         equ	664	;# 
  5607     029F                     CCPTMRS         equ	671	;# 
  5608     030C                     SLRCONA         equ	780	;# 
  5609     030D                     SLRCONB         equ	781	;# 
  5610     030E                     SLRCONC         equ	782	;# 
  5611     0311                     CCPR3           equ	785	;# 
  5612     0311                     CCPR3L          equ	785	;# 
  5613     0312                     CCPR3H          equ	786	;# 
  5614     0313                     CCP3CON         equ	787	;# 
  5615     0314                     CCP3CAP         equ	788	;# 
  5616     0315                     CCPR4           equ	789	;# 
  5617     0315                     CCPR4L          equ	789	;# 
  5618     0316                     CCPR4H          equ	790	;# 
  5619     0317                     CCP4CON         equ	791	;# 
  5620     0318                     CCP4CAP         equ	792	;# 
  5621     038C                     INLVLA          equ	908	;# 
  5622     038D                     INLVLB          equ	909	;# 
  5623     038E                     INLVLC          equ	910	;# 
  5624     0391                     IOCAP           equ	913	;# 
  5625     0392                     IOCAN           equ	914	;# 
  5626     0393                     IOCAF           equ	915	;# 
  5627     0394                     IOCBP           equ	916	;# 
  5628     0395                     IOCBN           equ	917	;# 
  5629     0396                     IOCBF           equ	918	;# 
  5630     0397                     IOCCP           equ	919	;# 
  5631     0398                     IOCCN           equ	920	;# 
  5632     0399                     IOCCF           equ	921	;# 
  5633     039A                     CLKRCON         equ	922	;# 
  5634     039C                     MDCON           equ	924	;# 
  5635     039D                     MDSRC           equ	925	;# 
  5636     039E                     MDCARH          equ	926	;# 
  5637     039F                     MDCARL          equ	927	;# 
  5638     0411                     TMR3            equ	1041	;# 
  5639     0411                     TMR3L           equ	1041	;# 
  5640     0412                     TMR3H           equ	1042	;# 
  5641     0413                     T3CON           equ	1043	;# 
  5642     0414                     T3GCON          equ	1044	;# 
  5643     0415                     TMR4            equ	1045	;# 
  5644     0416                     PR4             equ	1046	;# 
  5645     0417                     T4CON           equ	1047	;# 
  5646     0418                     TMR5            equ	1048	;# 
  5647     0418                     TMR5L           equ	1048	;# 
  5648     0419                     TMR5H           equ	1049	;# 
  5649     041A                     T5CON           equ	1050	;# 
  5650     041B                     T5GCON          equ	1051	;# 
  5651     041C                     TMR6            equ	1052	;# 
  5652     041D                     PR6             equ	1053	;# 
  5653     041E                     T6CON           equ	1054	;# 
  5654     041F                     CCDCON          equ	1055	;# 
  5655     0498                     NCO1ACC         equ	1176	;# 
  5656     0498                     NCO1ACCL        equ	1176	;# 
  5657     0499                     NCO1ACCH        equ	1177	;# 
  5658     049A                     NCO1ACCU        equ	1178	;# 
  5659     049B                     NCO1INC         equ	1179	;# 
  5660     049B                     NCO1INCL        equ	1179	;# 
  5661     049C                     NCO1INCH        equ	1180	;# 
  5662     049D                     NCO1INCU        equ	1181	;# 
  5663     049E                     NCO1CON         equ	1182	;# 
  5664     049F                     NCO1CLK         equ	1183	;# 
  5665     0617                     PWM5DCL         equ	1559	;# 
  5666     0618                     PWM5DCH         equ	1560	;# 
  5667     0619                     PWM5CON         equ	1561	;# 
  5668     0619                     PWM5CON0        equ	1561	;# 
  5669     061A                     PWM6DCL         equ	1562	;# 
  5670     061B                     PWM6DCH         equ	1563	;# 
  5671     061C                     PWM6CON         equ	1564	;# 
  5672     061C                     PWM6CON0        equ	1564	;# 
  5673     061F                     PWMTMRS         equ	1567	;# 
  5674     0691                     CWG1CLKCON      equ	1681	;# 
  5675     0692                     CWG1DAT         equ	1682	;# 
  5676     0693                     CWG1DBR         equ	1683	;# 
  5677     0694                     CWG1DBF         equ	1684	;# 
  5678     0695                     CWG1CON0        equ	1685	;# 
  5679     0696                     CWG1CON1        equ	1686	;# 
  5680     0697                     CWG1AS0         equ	1687	;# 
  5681     0698                     CWG1AS1         equ	1688	;# 
  5682     0699                     CWG1STR         equ	1689	;# 
  5683     0711                     CWG2CLKCON      equ	1809	;# 
  5684     0712                     CWG2DAT         equ	1810	;# 
  5685     0713                     CWG2DBR         equ	1811	;# 
  5686     0714                     CWG2DBF         equ	1812	;# 
  5687     0715                     CWG2CON0        equ	1813	;# 
  5688     0716                     CWG2CON1        equ	1814	;# 
  5689     0717                     CWG2AS0         equ	1815	;# 
  5690     0718                     CWG2AS1         equ	1816	;# 
  5691     0719                     CWG2STR         equ	1817	;# 
  5692     0891                     NVMADR          equ	2193	;# 
  5693     0891                     EEADR           equ	2193	;# 
  5694     0891                     PMADR           equ	2193	;# 
  5695     0891                     NVMADRL         equ	2193	;# 
  5696     0891                     EEADRL          equ	2193	;# 
  5697     0891                     PMADRL          equ	2193	;# 
  5698     0892                     NVMADRH         equ	2194	;# 
  5699     0892                     EEADRH          equ	2194	;# 
  5700     0892                     PMADRH          equ	2194	;# 
  5701     0893                     NVMDAT          equ	2195	;# 
  5702     0893                     EEDAT           equ	2195	;# 
  5703     0893                     PMDAT           equ	2195	;# 
  5704     0893                     NVMDATL         equ	2195	;# 
  5705     0893                     EEDATL          equ	2195	;# 
  5706     0893                     PMDATL          equ	2195	;# 
  5707     0894                     NVMDATH         equ	2196	;# 
  5708     0894                     EEDATH          equ	2196	;# 
  5709     0894                     PMDATH          equ	2196	;# 
  5710     0895                     NVMCON1         equ	2197	;# 
  5711     0895                     EECON1          equ	2197	;# 
  5712     0895                     PMCON1          equ	2197	;# 
  5713     0896                     NVMCON2         equ	2198	;# 
  5714     0896                     EECON2          equ	2198	;# 
  5715     0896                     PMCON2          equ	2198	;# 
  5716     089B                     PCON0           equ	2203	;# 
  5717     0911                     PMD0            equ	2321	;# 
  5718     0912                     PMD1            equ	2322	;# 
  5719     0913                     PMD2            equ	2323	;# 
  5720     0914                     PMD3            equ	2324	;# 
  5721     0915                     PMD4            equ	2325	;# 
  5722     0916                     PMD5            equ	2326	;# 
  5723     0918                     CPUDOZE         equ	2328	;# 
  5724     0919                     OSCCON1         equ	2329	;# 
  5725     091A                     OSCCON2         equ	2330	;# 
  5726     091B                     OSCCON3         equ	2331	;# 
  5727     091C                     OSCSTAT1        equ	2332	;# 
  5728     091D                     OSCEN           equ	2333	;# 
  5729     091E                     OSCTUNE         equ	2334	;# 
  5730     091F                     OSCFRQ          equ	2335	;# 
  5731     0E0F                     PPSLOCK         equ	3599	;# 
  5732     0E10                     INTPPS          equ	3600	;# 
  5733     0E11                     T0CKIPPS        equ	3601	;# 
  5734     0E12                     T1CKIPPS        equ	3602	;# 
  5735     0E13                     T1GPPS          equ	3603	;# 
  5736     0E14                     CCP1PPS         equ	3604	;# 
  5737     0E15                     CCP2PPS         equ	3605	;# 
  5738     0E16                     CCP3PPS         equ	3606	;# 
  5739     0E17                     CCP4PPS         equ	3607	;# 
  5740     0E18                     CWG1PPS         equ	3608	;# 
  5741     0E19                     CWG2PPS         equ	3609	;# 
  5742     0E1A                     MDCIN1PPS       equ	3610	;# 
  5743     0E1B                     MDCIN2PPS       equ	3611	;# 
  5744     0E1C                     MDMINPPS        equ	3612	;# 
  5745     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5746     0E1E                     SSP2DATPPS      equ	3614	;# 
  5747     0E1F                     SSP2SSPPS       equ	3615	;# 
  5748     0E20                     SSP1CLKPPS      equ	3616	;# 
  5749     0E21                     SSP1DATPPS      equ	3617	;# 
  5750     0E22                     SSP1SSPPS       equ	3618	;# 
  5751     0E24                     RXPPS           equ	3620	;# 
  5752     0E25                     TXPPS           equ	3621	;# 
  5753     0E28                     CLCIN0PPS       equ	3624	;# 
  5754     0E29                     CLCIN1PPS       equ	3625	;# 
  5755     0E2A                     CLCIN2PPS       equ	3626	;# 
  5756     0E2B                     CLCIN3PPS       equ	3627	;# 
  5757     0E2C                     T3CKIPPS        equ	3628	;# 
  5758     0E2D                     T3GPPS          equ	3629	;# 
  5759     0E2E                     T5CKIPPS        equ	3630	;# 
  5760     0E2F                     T5GPPS          equ	3631	;# 
  5761     0E90                     RA0PPS          equ	3728	;# 
  5762     0E91                     RA1PPS          equ	3729	;# 
  5763     0E92                     RA2PPS          equ	3730	;# 
  5764     0E94                     RA4PPS          equ	3732	;# 
  5765     0E95                     RA5PPS          equ	3733	;# 
  5766     0E9C                     RB4PPS          equ	3740	;# 
  5767     0E9D                     RB5PPS          equ	3741	;# 
  5768     0E9E                     RB6PPS          equ	3742	;# 
  5769     0E9F                     RB7PPS          equ	3743	;# 
  5770     0EA0                     RC0PPS          equ	3744	;# 
  5771     0EA1                     RC1PPS          equ	3745	;# 
  5772     0EA2                     RC2PPS          equ	3746	;# 
  5773     0EA3                     RC3PPS          equ	3747	;# 
  5774     0EA4                     RC4PPS          equ	3748	;# 
  5775     0EA5                     RC5PPS          equ	3749	;# 
  5776     0EA6                     RC6PPS          equ	3750	;# 
  5777     0EA7                     RC7PPS          equ	3751	;# 
  5778     0F0F                     CLCDATA         equ	3855	;# 
  5779     0F10                     CLC1CON         equ	3856	;# 
  5780     0F11                     CLC1POL         equ	3857	;# 
  5781     0F12                     CLC1SEL0        equ	3858	;# 
  5782     0F13                     CLC1SEL1        equ	3859	;# 
  5783     0F14                     CLC1SEL2        equ	3860	;# 
  5784     0F15                     CLC1SEL3        equ	3861	;# 
  5785     0F16                     CLC1GLS0        equ	3862	;# 
  5786     0F17                     CLC1GLS1        equ	3863	;# 
  5787     0F18                     CLC1GLS2        equ	3864	;# 
  5788     0F19                     CLC1GLS3        equ	3865	;# 
  5789     0F1A                     CLC2CON         equ	3866	;# 
  5790     0F1B                     CLC2POL         equ	3867	;# 
  5791     0F1C                     CLC2SEL0        equ	3868	;# 
  5792     0F1D                     CLC2SEL1        equ	3869	;# 
  5793     0F1E                     CLC2SEL2        equ	3870	;# 
  5794     0F1F                     CLC2SEL3        equ	3871	;# 
  5795     0F20                     CLC2GLS0        equ	3872	;# 
  5796     0F21                     CLC2GLS1        equ	3873	;# 
  5797     0F22                     CLC2GLS2        equ	3874	;# 
  5798     0F23                     CLC2GLS3        equ	3875	;# 
  5799     0F24                     CLC3CON         equ	3876	;# 
  5800     0F25                     CLC3POL         equ	3877	;# 
  5801     0F26                     CLC3SEL0        equ	3878	;# 
  5802     0F27                     CLC3SEL1        equ	3879	;# 
  5803     0F28                     CLC3SEL2        equ	3880	;# 
  5804     0F29                     CLC3SEL3        equ	3881	;# 
  5805     0F2A                     CLC3GLS0        equ	3882	;# 
  5806     0F2B                     CLC3GLS1        equ	3883	;# 
  5807     0F2C                     CLC3GLS2        equ	3884	;# 
  5808     0F2D                     CLC3GLS3        equ	3885	;# 
  5809     0F2E                     CLC4CON         equ	3886	;# 
  5810     0F2F                     CLC4POL         equ	3887	;# 
  5811     0F30                     CLC4SEL0        equ	3888	;# 
  5812     0F31                     CLC4SEL1        equ	3889	;# 
  5813     0F32                     CLC4SEL2        equ	3890	;# 
  5814     0F33                     CLC4SEL3        equ	3891	;# 
  5815     0F34                     CLC4GLS0        equ	3892	;# 
  5816     0F35                     CLC4GLS1        equ	3893	;# 
  5817     0F36                     CLC4GLS2        equ	3894	;# 
  5818     0F37                     CLC4GLS3        equ	3895	;# 
  5819     0FE4                     STATUS_SHAD     equ	4068	;# 
  5820     0FE5                     WREG_SHAD       equ	4069	;# 
  5821     0FE6                     BSR_SHAD        equ	4070	;# 
  5822     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5823     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5824     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5825     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5826     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5827     0FED                     STKPTR          equ	4077	;# 
  5828     0FEE                     TOSL            equ	4078	;# 
  5829     0FEF                     TOSH            equ	4079	;# 
  5830                           
  5831 ;; Function _SPI1_Deinitialize is unused but had its address taken
  5832     0000                     _SPI1_Deinitialize equ	0
  5833                           
  5834 ;; Function _SPI1_Close is unused but had its address taken
  5835     0000                     _SPI1_Close     equ	0
  5836                           
  5837 ;; Function _SPI1_BufferExchange is unused but had its address taken
  5838     0000                     _SPI1_BufferExchange equ	0
  5839                           
  5840 ;; Function _SPI1_BufferWrite is unused but had its address taken
  5841     0000                     _SPI1_BufferWrite equ	0
  5842                           
  5843 ;; Function _SPI1_BufferRead is unused but had its address taken
  5844     0000                     _SPI1_BufferRead equ	0
  5845                           
  5846 ;; Function _SPI1_ByteWrite is unused but had its address taken
  5847     0000                     _SPI1_ByteWrite equ	0
  5848                           
  5849 ;; Function _SPI1_ByteRead is unused but had its address taken
  5850     0000                     _SPI1_ByteRead  equ	0
  5851                           
  5852 ;; Function _SPI1_IsRxReady is unused but had its address taken
  5853     0000                     _SPI1_IsRxReady equ	0
  5854                           
  5855 ;; Function _SPI1_IsTxReady is unused but had its address taken
  5856     0000                     _SPI1_IsTxReady equ	0
  5857                           
  5858 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  5859     0000                     _INT_DefaultInterruptHandler equ	0
  5860                           
  5861 ;; Function _EUSART_Deinitialize is unused but had its address taken
  5862     0000                     _EUSART_Deinitialize equ	0
  5863                           
  5864 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  5865     0000                     _EUSART_TransmitEnable equ	0
  5866                           
  5867 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  5868     0000                     _EUSART_TransmitDisable equ	0
  5869                           
  5870 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  5871     0000                     _EUSART_AutoBaudSet equ	0
  5872                           
  5873 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  5874     0000                     _EUSART_AutoBaudQuery equ	0
  5875                           
  5876 ;; Function _EUSART_IsTxDone is unused but had its address taken
  5877     0000                     _EUSART_IsTxDone equ	0
  5878                           
  5879 ;; Function _EUSART_ErrorGet is unused but had its address taken
  5880     0000                     _EUSART_ErrorGet equ	0
  5881                           
  5882 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  5883     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  5884                           
  5885 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  5886     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  5887                           
  5888                           	psect	idataBANK0
  5889     1EB0                     __pidataBANK0:
  5890                           
  5891                           ;initializer for _setpoint
  5892     1EB0  34C2               	retlw	194
  5893     1EB1  3401               	retlw	1
  5894                           
  5895                           ;initializer for _mustPrintLogs
  5896     1EB2  3401               	retlw	1
  5897                           
  5898                           ;initializer for adcConversionDoneHandler@new_channel
  5899     1EB3  3410               	retlw	16
  5900                           
  5901                           	psect	idataBANK2
  5902     1EDC                     __pidataBANK2:
  5903                           
  5904                           ;initializer for _ki
  5905     1EDC  3400               	retlw	0
  5906     1EDD  3400               	retlw	0
  5907     1EDE  34A0               	retlw	160
  5908     1EDF  3440               	retlw	64
  5909                           
  5910                           ;initializer for _kp
  5911     1EE0  3466               	retlw	102
  5912     1EE1  3466               	retlw	102
  5913     1EE2  3466               	retlw	102
  5914     1EE3  343F               	retlw	63
  5915                           
  5916                           	psect	stringtext1
  5917     1800                     __pstringtext1:
  5918     1800                     _UART1:
  5919     1800  3498               	retlw	low _EUSART_Initialize
  5920     1801  3412               	retlw	high _EUSART_Initialize
  5921     1802  3400               	retlw	0
  5922     1803  3400               	retlw	0
  5923     1804  344E               	retlw	low _EUSART_Read
  5924     1805  3411               	retlw	high _EUSART_Read
  5925     1806  34EB               	retlw	low _EUSART_Write
  5926     1807  3411               	retlw	high _EUSART_Write
  5927     1808  34D4               	retlw	low _EUSART_IsRxReady
  5928     1809  341E               	retlw	high _EUSART_IsRxReady
  5929     180A  34CC               	retlw	low _EUSART_IsTxReady
  5930     180B  341E               	retlw	high _EUSART_IsTxReady
  5931     180C  3400               	retlw	0
  5932     180D  3400               	retlw	0
  5933     180E  3400               	retlw	0
  5934     180F  3400               	retlw	0
  5935     1810  3400               	retlw	0
  5936     1811  3400               	retlw	0
  5937     1812  3400               	retlw	0
  5938     1813  3400               	retlw	0
  5939     1814  3400               	retlw	0
  5940     1815  3400               	retlw	0
  5941     1816  3400               	retlw	0
  5942     1817  3400               	retlw	0
  5943     1818  3400               	retlw	0
  5944     1819  3400               	retlw	0
  5945     181A  3400               	retlw	0
  5946     181B  3400               	retlw	0
  5947     181C  3400               	retlw	0
  5948     181D  3400               	retlw	0
  5949     181E  3400               	retlw	0
  5950     181F  3400               	retlw	0
  5951     1820  3400               	retlw	0
  5952     1821  3400               	retlw	0
  5953     1822  3400               	retlw	0
  5954     1823  3400               	retlw	0
  5955     1824  3400               	retlw	0
  5956     1825  3400               	retlw	0
  5957     1826  3400               	retlw	0
  5958     1827  3400               	retlw	0
  5959     1828  34C9               	retlw	low _EUSART_FramingErrorCallbackRegister
  5960     1829  341F               	retlw	high _EUSART_FramingErrorCallbackRegister
  5961     182A  34D6               	retlw	low _EUSART_OverrunErrorCallbackRegister
  5962     182B  341F               	retlw	high _EUSART_OverrunErrorCallbackRegister
  5963     182C  3400               	retlw	0
  5964     182D  3400               	retlw	0
  5965     182E  3400               	retlw	0
  5966     182F  3400               	retlw	0
  5967     1830                     __end_of_UART1:
  5968                           
  5969                           	psect	stringtext2
  5970     1830                     __pstringtext2:
  5971     1830                     _ledstrip:
  5972     1830  343E               	retlw	low _SPI1_Initialize
  5973     1831  341F               	retlw	high _SPI1_Initialize
  5974     1832  3400               	retlw	0
  5975     1833  3400               	retlw	0
  5976     1834  34B0               	retlw	low _SPI1_Open
  5977     1835  3416               	retlw	high _SPI1_Open
  5978     1836  3400               	retlw	0
  5979     1837  3400               	retlw	0
  5980     1838  3400               	retlw	0
  5981     1839  3400               	retlw	0
  5982     183A  3400               	retlw	0
  5983     183B  3400               	retlw	0
  5984     183C  3400               	retlw	0
  5985     183D  3400               	retlw	0
  5986     183E  3467               	retlw	low _SPI1_ByteExchange
  5987     183F  341F               	retlw	high _SPI1_ByteExchange
  5988     1840  3400               	retlw	0
  5989     1841  3400               	retlw	0
  5990     1842  3400               	retlw	0
  5991     1843  3400               	retlw	0
  5992     1844  3400               	retlw	0
  5993     1845  3400               	retlw	0
  5994     1846  3400               	retlw	0
  5995     1847  3400               	retlw	0
  5996     1848  3400               	retlw	0
  5997     1849  3400               	retlw	0
  5998     184A  3400               	retlw	0
  5999     184B  3400               	retlw	0
  6000     184C                     __end_of_ledstrip:
  6001                           
  6002                           	psect	stringtext3
  6003     18E2                     __pstringtext3:
  6004     18E2                     _spi1_configuration:
  6005     18E2  3440               	retlw	64
  6006     18E3  340A               	retlw	10
  6007     18E4  3410               	retlw	16
  6008     18E5  3407               	retlw	7
  6009     18E6  3400               	retlw	0
  6010     18E7  3464               	retlw	100
  6011     18E8  3400               	retlw	0
  6012     18E9  3410               	retlw	16
  6013     18EA  3401               	retlw	1
  6014     18EB  3400               	retlw	0
  6015     18EC                     __end_of_spi1_configuration:
  6016                           
  6017                           	psect	nvBANK2
  6018     015E                     __pnvBANK2:
  6019     015E                     _TMR6_PeriodMatchCallback:
  6020     015E                     	ds	2
  6021     0160                     _TMR4_PeriodMatchCallback:
  6022     0160                     	ds	2
  6023     0162                     _TMR2_PeriodMatchCallback:
  6024     0162                     	ds	2
  6025     0164                     _EUSART_TxInterruptHandler:
  6026     0164                     	ds	2
  6027     0166                     _ADC_InterruptHandler:
  6028     0166                     	ds	2
  6029                           
  6030                           	psect	nvBANK3
  6031     01D4                     __pnvBANK3:
  6032     01D4                     _EUSART_RxInterruptHandler:
  6033     01D4                     	ds	2
  6034     001F                     _T2CONbits      set	31
  6035     001F                     _T2CON          set	31
  6036     001D                     _TMR2           set	29
  6037     001E                     _PR2            set	30
  6038     0012                     _PIR2bits       set	18
  6039     000B                     _INTCONbits     set	11
  6040     0010                     _PIR0bits       set	16
  6041     0011                     _PIR1bits       set	17
  6042     008E                     _TRISC          set	142
  6043     008D                     _TRISB          set	141
  6044     008C                     _TRISA          set	140
  6045     0092                     _PIE2bits       set	146
  6046     009D                     _ADCON0bits     set	157
  6047     0091                     _PIE1bits       set	145
  6048     009D                     _ADCON0         set	157
  6049     009F                     _ADACT          set	159
  6050     009C                     _ADRESH         set	156
  6051     009B                     _ADRESL         set	155
  6052     009E                     _ADCON1         set	158
  6053     010C                     _LATAbits       set	268
  6054     010E                     _LATC           set	270
  6055     010D                     _LATB           set	269
  6056     010C                     _LATA           set	268
  6057     019A                     _TX1REG         set	410
  6058     0199                     _RC1REG         set	409
  6059     019F                     _BAUD1CONbits   set	415
  6060     019E                     _TX1STAbits     set	414
  6061     019D                     _RC1STAbits     set	413
  6062     019C                     _SP1BRGH        set	412
  6063     019B                     _SP1BRGL        set	411
  6064     019E                     _TX1STA         set	414
  6065     019D                     _RC1STA         set	413
  6066     019F                     _BAUD1CON       set	415
  6067     018E                     _ANSELC         set	398
  6068     018D                     _ANSELB         set	397
  6069     018C                     _ANSELA         set	396
  6070     020E                     _WPUC           set	526
  6071     020D                     _WPUB           set	525
  6072     020C                     _WPUA           set	524
  6073     0211                     _SSP1BUF        set	529
  6074     0215                     _SSP1CON1bits   set	533
  6075     0212                     _SSP1ADD        set	530
  6076     0217                     _SSP1CON3       set	535
  6077     0215                     _SSP1CON1       set	533
  6078     0214                     _SSP1STAT       set	532
  6079     028E                     _ODCONC         set	654
  6080     028D                     _ODCONB         set	653
  6081     028C                     _ODCONA         set	652
  6082     030E                     _SLRCONC        set	782
  6083     030D                     _SLRCONB        set	781
  6084     030C                     _SLRCONA        set	780
  6085     0399                     _IOCCF          set	921
  6086     0398                     _IOCCN          set	920
  6087     0397                     _IOCCP          set	919
  6088     0396                     _IOCBF          set	918
  6089     0395                     _IOCBN          set	917
  6090     0394                     _IOCBP          set	916
  6091     0393                     _IOCAF          set	915
  6092     0392                     _IOCAN          set	914
  6093     0391                     _IOCAP          set	913
  6094     038E                     _INLVLC         set	910
  6095     038D                     _INLVLB         set	909
  6096     038C                     _INLVLA         set	908
  6097     041E                     _T6CONbits      set	1054
  6098     041E                     _T6CON          set	1054
  6099     041C                     _TMR6           set	1052
  6100     041D                     _PR6            set	1053
  6101     0417                     _T4CONbits      set	1047
  6102     0417                     _T4CON          set	1047
  6103     0415                     _TMR4           set	1045
  6104     0416                     _PR4            set	1046
  6105     061F                     _PWMTMRSbits    set	1567
  6106     0617                     _PWM5DCL        set	1559
  6107     0618                     _PWM5DCH        set	1560
  6108     0619                     _PWM5CON        set	1561
  6109     091E                     _OSCTUNE        set	2334
  6110     091C                     _OSCSTAT1       set	2332
  6111     091F                     _OSCFRQ         set	2335
  6112     091D                     _OSCEN          set	2333
  6113     091B                     _OSCCON3        set	2331
  6114     0919                     _OSCCON1        set	2329
  6115     0E20                     _SSP1CLKPPS     set	3616
  6116     0E24                     _RXPPS          set	3620
  6117     0E21                     _SSP1DATPPS     set	3617
  6118     0E9E                     _RB6PPS         set	3742
  6119     0E9F                     _RB7PPS         set	3743
  6120     0EA5                     _RC5PPS         set	3749
  6121     0E9C                     _RB4PPS         set	3740
  6122                           
  6123                           	psect	stringtext4
  6124     184C                     __pstringtext4:
  6125     184C                     STR_9:
  6126     184C  3463               	retlw	99	;'c'
  6127     184D  3468               	retlw	104	;'h'
  6128     184E  3461               	retlw	97	;'a'
  6129     184F  346E               	retlw	110	;'n'
  6130     1850  3467               	retlw	103	;'g'
  6131     1851  3465               	retlw	101	;'e'
  6132     1852  3464               	retlw	100	;'d'
  6133     1853  3420               	retlw	32	;' '
  6134     1854  3473               	retlw	115	;'s'
  6135     1855  3465               	retlw	101	;'e'
  6136     1856  3474               	retlw	116	;'t'
  6137     1857  3470               	retlw	112	;'p'
  6138     1858  346F               	retlw	111	;'o'
  6139     1859  3469               	retlw	105	;'i'
  6140     185A  346E               	retlw	110	;'n'
  6141     185B  3474               	retlw	116	;'t'
  6142     185C  3420               	retlw	32	;' '
  6143     185D  3474               	retlw	116	;'t'
  6144     185E  346F               	retlw	111	;'o'
  6145     185F  3420               	retlw	32	;' '
  6146     1860  3425               	retlw	37	;'%'
  6147     1861  3475               	retlw	117	;'u'
  6148     1862  340D               	retlw	13
  6149     1863  340A               	retlw	10
  6150     1864  3400               	retlw	0
  6151                           
  6152                           	psect	stringtext5
  6153     1865                     __pstringtext5:
  6154     1865                     STR_2:
  6155     1865  3469               	retlw	105	;'i'
  6156     1866  346E               	retlw	110	;'n'
  6157     1867  3470               	retlw	112	;'p'
  6158     1868  3475               	retlw	117	;'u'
  6159     1869  3474               	retlw	116	;'t'
  6160     186A  3420               	retlw	32	;' '
  6161     186B  3462               	retlw	98	;'b'
  6162     186C  3475               	retlw	117	;'u'
  6163     186D  3466               	retlw	102	;'f'
  6164     186E  3466               	retlw	102	;'f'
  6165     186F  3465               	retlw	101	;'e'
  6166     1870  3472               	retlw	114	;'r'
  6167     1871  3420               	retlw	32	;' '
  6168     1872  346F               	retlw	111	;'o'
  6169     1873  3476               	retlw	118	;'v'
  6170     1874  3465               	retlw	101	;'e'
  6171     1875  3472               	retlw	114	;'r'
  6172     1876  3466               	retlw	102	;'f'
  6173     1877  346C               	retlw	108	;'l'
  6174     1878  346F               	retlw	111	;'o'
  6175     1879  3477               	retlw	119	;'w'
  6176     187A  340D               	retlw	13
  6177     187B  340A               	retlw	10
  6178     187C  3400               	retlw	0
  6179                           
  6180                           	psect	stringtext6
  6181     187D                     __pstringtext6:
  6182     187D                     STR_13:
  6183     187D  3455               	retlw	85	;'U'
  6184     187E  346E               	retlw	110	;'n'
  6185     187F  346B               	retlw	107	;'k'
  6186     1880  346F               	retlw	111	;'o'
  6187     1881  3477               	retlw	119	;'w'
  6188     1882  346E               	retlw	110	;'n'
  6189     1883  3420               	retlw	32	;' '
  6190     1884  3463               	retlw	99	;'c'
  6191     1885  346F               	retlw	111	;'o'
  6192     1886  346D               	retlw	109	;'m'
  6193     1887  346D               	retlw	109	;'m'
  6194     1888  3461               	retlw	97	;'a'
  6195     1889  346E               	retlw	110	;'n'
  6196     188A  3464               	retlw	100	;'d'
  6197     188B  340D               	retlw	13
  6198     188C  340A               	retlw	10
  6199     188D  3400               	retlw	0
  6200                           
  6201                           	psect	stringtext7
  6202     188E                     __pstringtext7:
  6203     188E                     STR_5:
  6204     188E  342C               	retlw	44	;','
  6205     188F  3420               	retlw	32	;' '
  6206     1890  3464               	retlw	100	;'d'
  6207     1891  3475               	retlw	117	;'u'
  6208     1892  3474               	retlw	116	;'t'
  6209     1893  3479               	retlw	121	;'y'
  6210     1894  3420               	retlw	32	;' '
  6211     1895  3463               	retlw	99	;'c'
  6212     1896  3479               	retlw	121	;'y'
  6213     1897  3463               	retlw	99	;'c'
  6214     1898  346C               	retlw	108	;'l'
  6215     1899  3465               	retlw	101	;'e'
  6216     189A  343A               	retlw	58	;':'
  6217     189B  3420               	retlw	32	;' '
  6218     189C  3425               	retlw	37	;'%'
  6219     189D  3475               	retlw	117	;'u'
  6220     189E  3400               	retlw	0
  6221                           
  6222                           	psect	stringtext8
  6223     189F                     __pstringtext8:
  6224     189F                     STR_12:
  6225     189F  346C               	retlw	108	;'l'
  6226     18A0  346F               	retlw	111	;'o'
  6227     18A1  3467               	retlw	103	;'g'
  6228     18A2  3473               	retlw	115	;'s'
  6229     18A3  3420               	retlw	32	;' '
  6230     18A4  3474               	retlw	116	;'t'
  6231     18A5  346F               	retlw	111	;'o'
  6232     18A6  3467               	retlw	103	;'g'
  6233     18A7  3467               	retlw	103	;'g'
  6234     18A8  346C               	retlw	108	;'l'
  6235     18A9  3465               	retlw	101	;'e'
  6236     18AA  3464               	retlw	100	;'d'
  6237     18AB  340D               	retlw	13
  6238     18AC  340A               	retlw	10
  6239     18AD  3400               	retlw	0
  6240                           
  6241                           	psect	stringtext9
  6242     18AE                     __pstringtext9:
  6243     18AE                     STR_4:
  6244     18AE  342C               	retlw	44	;','
  6245     18AF  3420               	retlw	32	;' '
  6246     18B0  3473               	retlw	115	;'s'
  6247     18B1  3465               	retlw	101	;'e'
  6248     18B2  3474               	retlw	116	;'t'
  6249     18B3  3470               	retlw	112	;'p'
  6250     18B4  346F               	retlw	111	;'o'
  6251     18B5  3469               	retlw	105	;'i'
  6252     18B6  346E               	retlw	110	;'n'
  6253     18B7  3474               	retlw	116	;'t'
  6254     18B8  343A               	retlw	58	;':'
  6255     18B9  3420               	retlw	32	;' '
  6256     18BA  3425               	retlw	37	;'%'
  6257     18BB  3475               	retlw	117	;'u'
  6258     18BC  3400               	retlw	0
  6259                           
  6260                           	psect	stringtext10
  6261     18BD                     __pstringtext10:
  6262     18BD                     STR_11:
  6263     18BD  3463               	retlw	99	;'c'
  6264     18BE  3468               	retlw	104	;'h'
  6265     18BF  3461               	retlw	97	;'a'
  6266     18C0  346E               	retlw	110	;'n'
  6267     18C1  3467               	retlw	103	;'g'
  6268     18C2  3465               	retlw	101	;'e'
  6269     18C3  3464               	retlw	100	;'d'
  6270     18C4  3420               	retlw	32	;' '
  6271     18C5  346B               	retlw	107	;'k'
  6272     18C6  3469               	retlw	105	;'i'
  6273     18C7  340D               	retlw	13
  6274     18C8  340A               	retlw	10
  6275     18C9  3400               	retlw	0
  6276                           
  6277                           	psect	stringtext11
  6278     18CA                     __pstringtext11:
  6279     18CA                     STR_10:
  6280     18CA  3463               	retlw	99	;'c'
  6281     18CB  3468               	retlw	104	;'h'
  6282     18CC  3461               	retlw	97	;'a'
  6283     18CD  346E               	retlw	110	;'n'
  6284     18CE  3467               	retlw	103	;'g'
  6285     18CF  3465               	retlw	101	;'e'
  6286     18D0  3464               	retlw	100	;'d'
  6287     18D1  3420               	retlw	32	;' '
  6288     18D2  346B               	retlw	107	;'k'
  6289     18D3  3470               	retlw	112	;'p'
  6290     18D4  340D               	retlw	13
  6291     18D5  340A               	retlw	10
  6292     18D6  3400               	retlw	0
  6293                           
  6294                           	psect	stringtext12
  6295     18D7                     __pstringtext12:
  6296     18D7                     STR_3:
  6297     18D7  3468               	retlw	104	;'h'
  6298     18D8  346F               	retlw	111	;'o'
  6299     18D9  346F               	retlw	111	;'o'
  6300     18DA  3467               	retlw	103	;'g'
  6301     18DB  3474               	retlw	116	;'t'
  6302     18DC  3465               	retlw	101	;'e'
  6303     18DD  343A               	retlw	58	;':'
  6304     18DE  3420               	retlw	32	;' '
  6305     18DF  3425               	retlw	37	;'%'
  6306     18E0  3475               	retlw	117	;'u'
  6307     18E1  3400               	retlw	0
  6308                           
  6309                           	psect	stringtext13
  6310     18EC                     __pstringtext13:
  6311     18EC                     STR_1:
  6312     18EC  3425               	retlw	37	;'%'
  6313     18ED  3469               	retlw	105	;'i'
  6314     18EE  342E               	retlw	46	;'.'
  6315     18EF  3425               	retlw	37	;'%'
  6316     18F0  3430               	retlw	48	;'0'
  6317     18F1  3433               	retlw	51	;'3'
  6318     18F2  3475               	retlw	117	;'u'
  6319     18F3  3400               	retlw	0
  6320                           
  6321                           	psect	stringtext14
  6322     18F4                     __pstringtext14:
  6323     18F4                     STR_7:
  6324     18F4  342C               	retlw	44	;','
  6325     18F5  3420               	retlw	32	;' '
  6326     18F6  346B               	retlw	107	;'k'
  6327     18F7  3469               	retlw	105	;'i'
  6328     18F8  343A               	retlw	58	;':'
  6329     18F9  3420               	retlw	32	;' '
  6330     18FA  3400               	retlw	0
  6331                           
  6332                           	psect	stringtext15
  6333     18FB                     __pstringtext15:
  6334     18FB                     STR_6:
  6335     18FB  342C               	retlw	44	;','
  6336     18FC  3420               	retlw	32	;' '
  6337     18FD  346B               	retlw	107	;'k'
  6338     18FE  3470               	retlw	112	;'p'
  6339     18FF  343A               	retlw	58	;':'
  6340     1900  3420               	retlw	32	;' '
  6341     1901  3400               	retlw	0
  6342                           
  6343                           	psect	stringtext16
  6344     0000                     __pstringtext16:
  6345     18AB                     STR_8           equ	STR_12+12
  6346                           
  6347                           	psect	cinit
  6348     0042                     start_initialization:	
  6349                           ; #config settings
  6350                           
  6351     0042                     __initialization:
  6352                           
  6353                           ; Initialize objects allocated to BANK0
  6354     0042  30B0               	movlw	low __pidataBANK0
  6355     0043  0084               	movwf	4
  6356     0044  309E               	movlw	(high __pidataBANK0)| (0+128)
  6357     0045  0085               	movwf	5
  6358     0046  306C               	movlw	low __pdataBANK0
  6359     0047  0086               	movwf	6
  6360     0048  3000               	movlw	high __pdataBANK0
  6361     0049  0087               	movwf	7
  6362     004A  3004               	movlw	4
  6363     004B  319E  26C6  3180   	fcall	init_ram
  6364                           
  6365                           ; Initialize objects allocated to BANK2
  6366     004E  30DC               	movlw	low __pidataBANK2
  6367     004F  0084               	movwf	4
  6368     0050  309E               	movlw	(high __pidataBANK2)| (0+128)
  6369     0051  0085               	movwf	5
  6370     0052  3068               	movlw	low __pdataBANK2
  6371     0053  0086               	movwf	6
  6372     0054  3001               	movlw	high __pdataBANK2
  6373     0055  0087               	movwf	7
  6374     0056  3008               	movlw	8
  6375     0057  319E  26C6  3180   	fcall	init_ram
  6376                           
  6377                           ; Clear objects allocated to BANK0
  6378     005A  3055               	movlw	low __pbssBANK0
  6379     005B  0084               	movwf	4
  6380     005C  3000               	movlw	high __pbssBANK0
  6381     005D  0085               	movwf	5
  6382     005E  3017               	movlw	23
  6383     005F  319E  26C0  3180   	fcall	clear_ram0
  6384                           
  6385                           ; Clear objects allocated to BANK2
  6386     0062  3020               	movlw	low __pbssBANK2
  6387     0063  0084               	movwf	4
  6388     0064  3001               	movlw	high __pbssBANK2
  6389     0065  0085               	movwf	5
  6390     0066  302E               	movlw	46
  6391     0067  319E  26C0  3180   	fcall	clear_ram0
  6392                           
  6393                           ; Clear objects allocated to BANK3
  6394     006A  30A0               	movlw	low __pbssBANK3
  6395     006B  0084               	movwf	4
  6396     006C  3001               	movlw	high __pbssBANK3
  6397     006D  0085               	movwf	5
  6398     006E  3034               	movlw	52
  6399     006F  319E  26C0         	fcall	clear_ram0
  6400     0071                     end_of_initialization:	
  6401                           ;End of C runtime variable initialization code
  6402                           
  6403     0071                     __end_of__initialization:
  6404     0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6405     0072  0020               	movlb	0
  6406     0073  3193  2B95         	ljmp	_main	;jump to C main() function
  6407                           
  6408                           	psect	bssBANK0
  6409     0055                     __pbssBANK0:
  6410     0055                     _width:
  6411     0055                     	ds	2
  6412     0057                     _dutycycle:
  6413     0057                     	ds	2
  6414     0059                     _ADC_hoogtesensor:
  6415     0059                     	ds	2
  6416     005B                     _ADC_potentiometer:
  6417     005B                     	ds	2
  6418     005D                     _EUSART_OverrunErrorHandler:
  6419     005D                     	ds	2
  6420     005F                     _EUSART_FramingErrorHandler:
  6421     005F                     	ds	2
  6422     0061                     _INT_InterruptHandler:
  6423     0061                     	ds	2
  6424     0063                     _flags:
  6425     0063                     	ds	1
  6426     0064                     _is_on_target:
  6427     0064                     	ds	1
  6428     0065                     readLine@index:
  6429     0065                     	ds	1
  6430     0066                     _eusartRxCount:
  6431     0066                     	ds	1
  6432     0067                     _eusartRxTail:
  6433     0067                     	ds	1
  6434     0068                     _eusartRxHead:
  6435     0068                     	ds	1
  6436     0069                     _eusartTxBufferRemaining:
  6437     0069                     	ds	1
  6438     006A                     _eusartTxTail:
  6439     006A                     	ds	1
  6440     006B                     _eusartTxHead:
  6441     006B                     	ds	1
  6442                           
  6443                           	psect	dataBANK0
  6444     006C                     __pdataBANK0:
  6445     006C                     _setpoint:
  6446     006C                     	ds	2
  6447     006E                     _mustPrintLogs:
  6448     006E                     	ds	1
  6449     006F                     adcConversionDoneHandler@new_channel:
  6450     006F                     	ds	1
  6451                           
  6452                           	psect	bssBANK2
  6453     0120                     __pbssBANK2:
  6454     0120                     _eusartRxStatusBuffer:
  6455     0120                     	ds	16
  6456     0130                     _eusartRxBuffer:
  6457     0130                     	ds	8
  6458     0138                     _eusartTxBuffer:
  6459     0138                     	ds	8
  6460     0140                     _integraal:
  6461     0140                     	ds	4
  6462     0144                     _prec:
  6463     0144                     	ds	2
  6464     0146                     _hoogte_bal:
  6465     0146                     	ds	2
  6466     0148                     _EUSART_RxCompleteInterruptHandler:
  6467     0148                     	ds	2
  6468     014A                     _EUSART_TxCompleteInterruptHandler:
  6469     014A                     	ds	2
  6470     014C                     _eusartRxLastError:
  6471     014C                     	ds	2
  6472                           
  6473                           	psect	dataBANK2
  6474     0168                     __pdataBANK2:
  6475     0168                     _ki:
  6476     0168                     	ds	4
  6477     016C                     _kp:
  6478     016C                     	ds	4
  6479                           
  6480                           	psect	bssBANK3
  6481     01A0                     __pbssBANK3:
  6482     01A0                     _dbuf:
  6483     01A0                     	ds	32
  6484     01C0                     _line:
  6485     01C0                     	ds	20
  6486                           
  6487                           	psect	inittext
  6488     1EC6                     init_ram:
  6489     1EC6  00FE               	movwf	126
  6490     1EC7                     initloop:
  6491     1EC7  0012               	moviw fsr0++
  6492     1EC8  001E               	movwi fsr1++
  6493     1EC9  0BFE               	decfsz	126,f
  6494     1ECA  2EC7               	goto	initloop
  6495     1ECB  3400               	retlw	0
  6496                           
  6497                           	psect	clrtext
  6498     1EC0                     clear_ram0:	
  6499                           ;	Called with FSR0 containing the base address, and
  6500                           ;	WREG with the size to clear
  6501                           
  6502     1EC0  0064               	clrwdt	;clear the watchdog before getting into this loop
  6503     1EC1                     clrloop0:
  6504     1EC1  0180               	clrf	0	;clear RAM location pointed to by FSR
  6505     1EC2  3101               	addfsr 0,1
  6506     1EC3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6507     1EC4  2EC1               	goto	clrloop0	;have we reached the end yet?
  6508     1EC5  3400               	retlw	0	;all done for this memory range, return
  6509                           
  6510                           	psect	cstackBANK2
  6511     014E                     __pcstackBANK2:
  6512     014E                     ?_setKp:
  6513     014E                     ?_setKi:	
  6514                           ; 1 bytes @ 0x0
  6515                           
  6516     014E                     ?_printFloat:	
  6517                           ; 1 bytes @ 0x0
  6518                           
  6519     014E                     printFloat@number:	
  6520                           ; 1 bytes @ 0x0
  6521                           
  6522     014E                     setKp@new_kp:	
  6523                           ; 4 bytes @ 0x0
  6524                           
  6525     014E                     setKi@new_ki:	
  6526                           ; 4 bytes @ 0x0
  6527                           
  6528     014E                     getLedNumber@result:	
  6529                           ; 4 bytes @ 0x0
  6530                           
  6531                           
  6532                           ; 4 bytes @ 0x0
  6533     014E                     	ds	4
  6534     0152                     uartHandler@str:
  6535     0152                     printFloat@fractional_part:	
  6536                           ; 1 bytes @ 0x4
  6537                           
  6538     0152                     ??_position_led_strip:	
  6539                           ; 2 bytes @ 0x4
  6540                           
  6541                           
  6542                           ; 1 bytes @ 0x4
  6543     0152                     	ds	2
  6544     0154                     printFloat@integer_part:
  6545                           
  6546                           ; 1 bytes @ 0x6
  6547     0154                     	ds	1
  6548     0155                     position_led_strip@target:
  6549                           
  6550                           ; 2 bytes @ 0x7
  6551     0155                     	ds	2
  6552     0157                     position_led_strip@led:
  6553                           
  6554                           ; 1 bytes @ 0x9
  6555     0157                     	ds	1
  6556     0158                     position_led_strip@led_on:
  6557                           
  6558                           ; 2 bytes @ 0xA
  6559     0158                     	ds	2
  6560     015A                     ??_main:
  6561                           
  6562                           ; 1 bytes @ 0xC
  6563     015A                     	ds	2
  6564     015C                     main@potwaarde:
  6565                           
  6566                           ; 2 bytes @ 0xE
  6567     015C                     	ds	2
  6568                           
  6569                           	psect	cstackBANK1
  6570     00A0                     __pcstackBANK1:
  6571     00A0                     ?_ADC_SetInterruptHandler:
  6572     00A0                     ?_SPI1_ByteExchange:	
  6573                           ; 1 bytes @ 0x0
  6574                           
  6575     00A0                     ?_INT_SetInterruptHandler:	
  6576                           ; 1 bytes @ 0x0
  6577                           
  6578     00A0                     ?_EUSART_Write:	
  6579                           ; 1 bytes @ 0x0
  6580                           
  6581     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6582                           ; 1 bytes @ 0x0
  6583                           
  6584     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  6585                           ; 1 bytes @ 0x0
  6586                           
  6587     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  6588                           ; 1 bytes @ 0x0
  6589                           
  6590     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  6591                           ; 1 bytes @ 0x0
  6592                           
  6593     00A0                     ?_getPotentiometer:	
  6594                           ; 1 bytes @ 0x0
  6595                           
  6596     00A0                     ?_getSetpoint:	
  6597                           ; 2 bytes @ 0x0
  6598                           
  6599     00A0                     ?_getDutycycle:	
  6600                           ; 2 bytes @ 0x0
  6601                           
  6602     00A0                     ?__Umul8_16:	
  6603                           ; 2 bytes @ 0x0
  6604                           
  6605     00A0                     ?_getHoogtesensor:	
  6606                           ; 2 bytes @ 0x0
  6607                           
  6608     00A0                     ?___wmul:	
  6609                           ; 2 bytes @ 0x0
  6610                           
  6611     00A0                     ?___awdiv:	
  6612                           ; 2 bytes @ 0x0
  6613                           
  6614     00A0                     ?___awmod:	
  6615                           ; 2 bytes @ 0x0
  6616                           
  6617     00A0                     ?___lwdiv:	
  6618                           ; 2 bytes @ 0x0
  6619                           
  6620     00A0                     ?___lwmod:	
  6621                           ; 2 bytes @ 0x0
  6622                           
  6623     00A0                     ?_getKp:	
  6624                           ; 2 bytes @ 0x0
  6625                           
  6626     00A0                     ?_getKi:	
  6627                           ; 4 bytes @ 0x0
  6628                           
  6629     00A0                     ?___fldiv:	
  6630                           ; 4 bytes @ 0x0
  6631                           
  6632     00A0                     ?___xxtofl:	
  6633                           ; 4 bytes @ 0x0
  6634                           
  6635     00A0                     SPI1_ByteExchange@byteData:	
  6636                           ; 4 bytes @ 0x0
  6637                           
  6638     00A0                     EUSART_Read@tempRxTail:	
  6639                           ; 1 bytes @ 0x0
  6640                           
  6641     00A0                     EUSART_Write@txData:	
  6642                           ; 1 bytes @ 0x0
  6643                           
  6644     00A0                     __Umul8_16@multiplicand:	
  6645                           ; 1 bytes @ 0x0
  6646                           
  6647     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  6648                           ; 1 bytes @ 0x0
  6649                           
  6650     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  6651                           ; 2 bytes @ 0x0
  6652                           
  6653     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  6654                           ; 2 bytes @ 0x0
  6655                           
  6656     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  6657                           ; 2 bytes @ 0x0
  6658                           
  6659     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  6660                           ; 2 bytes @ 0x0
  6661                           
  6662     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  6663                           ; 2 bytes @ 0x0
  6664                           
  6665     00A0                     ___wmul@multiplier:	
  6666                           ; 2 bytes @ 0x0
  6667                           
  6668     00A0                     ___awdiv@divisor:	
  6669                           ; 2 bytes @ 0x0
  6670                           
  6671     00A0                     ___awmod@divisor:	
  6672                           ; 2 bytes @ 0x0
  6673                           
  6674     00A0                     ___lwdiv@divisor:	
  6675                           ; 2 bytes @ 0x0
  6676                           
  6677     00A0                     ___lwmod@divisor:	
  6678                           ; 2 bytes @ 0x0
  6679                           
  6680     00A0                     ___fldiv@a:	
  6681                           ; 2 bytes @ 0x0
  6682                           
  6683     00A0                     ___xxtofl@val:	
  6684                           ; 4 bytes @ 0x0
  6685                           
  6686     00A0                     ??_SPI1_Initialize:	
  6687                           ; 4 bytes @ 0x0
  6688                           
  6689     00A0                     ??_TMR2_Initialize:	
  6690                           ; 1 bytes @ 0x0
  6691                           
  6692     00A0                     ??_TMR4_Initialize:	
  6693                           ; 1 bytes @ 0x0
  6694                           
  6695     00A0                     ??_TMR6_Initialize:	
  6696                           ; 1 bytes @ 0x0
  6697                           
  6698     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  6699                           ; 1 bytes @ 0x0
  6700                           
  6701     00A0                     ??_EUSART_Read:	
  6702                           ; 1 bytes @ 0x0
  6703                           
  6704     00A0                     ??_EUSART_IsRxReady:	
  6705                           ; 1 bytes @ 0x0
  6706                           
  6707     00A0                     ??_EUSART_IsTxReady:	
  6708                           ; 1 bytes @ 0x0
  6709                           
  6710     00A0                     ??_ADC_SelectChannel:	
  6711                           ; 1 bytes @ 0x0
  6712                           
  6713     00A0                     ??_pwm_fan_Initialize:	
  6714                           ; 1 bytes @ 0x0
  6715                           
  6716     00A0                     ??_CLOCK_Initialize:	
  6717                           ; 1 bytes @ 0x0
  6718                           
  6719     00A0                     ??_PIN_MANAGER_Initialize:	
  6720                           ; 1 bytes @ 0x0
  6721                           
  6722                           
  6723                           ; 1 bytes @ 0x0
  6724     00A0                     	ds	1
  6725     00A1                     ?_sendLedstripFrame:
  6726     00A1                     ADC_SelectChannel@channel:	
  6727                           ; 1 bytes @ 0x1
  6728                           
  6729     00A1                     EUSART_Read@readValue:	
  6730                           ; 1 bytes @ 0x1
  6731                           
  6732     00A1                     EUSART_Write@tempTxHead:	
  6733                           ; 1 bytes @ 0x1
  6734                           
  6735     00A1                     sendLedstripFrame@green:	
  6736                           ; 1 bytes @ 0x1
  6737                           
  6738     00A1                     ??_SPI1_ByteExchange:	
  6739                           ; 1 bytes @ 0x1
  6740                           
  6741     00A1                     ??_EUSART_Write:	
  6742                           ; 1 bytes @ 0x1
  6743                           
  6744     00A1                     ??_sendLedstripStartFrame:	
  6745                           ; 1 bytes @ 0x1
  6746                           
  6747     00A1                     ??_sendLedstripEndFrame:	
  6748                           ; 1 bytes @ 0x1
  6749                           
  6750                           
  6751                           ; 1 bytes @ 0x1
  6752     00A1                     	ds	1
  6753     00A2                     putch@txData:
  6754     00A2                     sendLedstripFrame@blue:	
  6755                           ; 1 bytes @ 0x2
  6756                           
  6757     00A2                     ___wmul@multiplicand:	
  6758                           ; 1 bytes @ 0x2
  6759                           
  6760     00A2                     ___awdiv@dividend:	
  6761                           ; 2 bytes @ 0x2
  6762                           
  6763     00A2                     ___awmod@dividend:	
  6764                           ; 2 bytes @ 0x2
  6765                           
  6766     00A2                     ___lwdiv@dividend:	
  6767                           ; 2 bytes @ 0x2
  6768                           
  6769     00A2                     ___lwmod@dividend:	
  6770                           ; 2 bytes @ 0x2
  6771                           
  6772     00A2                     ??_ADC_SetInterruptHandler:	
  6773                           ; 2 bytes @ 0x2
  6774                           
  6775     00A2                     ??_INT_SetInterruptHandler:	
  6776                           ; 1 bytes @ 0x2
  6777                           
  6778     00A2                     ??_EUSART_Initialize:	
  6779                           ; 1 bytes @ 0x2
  6780                           
  6781     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  6782                           ; 1 bytes @ 0x2
  6783                           
  6784     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  6785                           ; 1 bytes @ 0x2
  6786                           
  6787     00A2                     ??_initAdcMultiplexer:	
  6788                           ; 1 bytes @ 0x2
  6789                           
  6790     00A2                     ??_getPotentiometer:	
  6791                           ; 1 bytes @ 0x2
  6792                           
  6793     00A2                     ??_getSetpoint:	
  6794                           ; 1 bytes @ 0x2
  6795                           
  6796     00A2                     ??_getDutycycle:	
  6797                           ; 1 bytes @ 0x2
  6798                           
  6799     00A2                     ??__Umul8_16:	
  6800                           ; 1 bytes @ 0x2
  6801                           
  6802     00A2                     ??_ADC_Initialize:	
  6803                           ; 1 bytes @ 0x2
  6804                           
  6805     00A2                     ??_INTERRUPT_Initialize:	
  6806                           ; 1 bytes @ 0x2
  6807                           
  6808     00A2                     ??_SYSTEM_Initialize:	
  6809                           ; 1 bytes @ 0x2
  6810                           
  6811     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  6812                           ; 1 bytes @ 0x2
  6813                           
  6814     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  6815                           ; 1 bytes @ 0x2
  6816                           
  6817     00A2                     ??_putch:	
  6818                           ; 1 bytes @ 0x2
  6819                           
  6820     00A2                     ??_getHoogtesensor:	
  6821                           ; 1 bytes @ 0x2
  6822                           
  6823                           
  6824                           ; 1 bytes @ 0x2
  6825     00A2                     	ds	1
  6826     00A3                     ?_fputc:
  6827     00A3                     sendLedstripFrame@intensity:	
  6828                           ; 2 bytes @ 0x3
  6829                           
  6830     00A3                     fputc@c:	
  6831                           ; 1 bytes @ 0x3
  6832                           
  6833                           
  6834                           ; 2 bytes @ 0x3
  6835     00A3                     	ds	1
  6836     00A4                     sendLedstripFrame@red:
  6837     00A4                     ___awdiv@counter:	
  6838                           ; 1 bytes @ 0x4
  6839                           
  6840     00A4                     ___awmod@counter:	
  6841                           ; 1 bytes @ 0x4
  6842                           
  6843     00A4                     ___lwmod@counter:	
  6844                           ; 1 bytes @ 0x4
  6845                           
  6846     00A4                     ___wmul@product:	
  6847                           ; 1 bytes @ 0x4
  6848                           
  6849     00A4                     ___lwdiv@quotient:	
  6850                           ; 2 bytes @ 0x4
  6851                           
  6852     00A4                     __Umul8_16@product:	
  6853                           ; 2 bytes @ 0x4
  6854                           
  6855     00A4                     ___fldiv@b:	
  6856                           ; 2 bytes @ 0x4
  6857                           
  6858     00A4                     ??_getKp:	
  6859                           ; 4 bytes @ 0x4
  6860                           
  6861     00A4                     ??_getKi:	
  6862                           ; 1 bytes @ 0x4
  6863                           
  6864     00A4                     ??_sendLedstripFrame:	
  6865                           ; 1 bytes @ 0x4
  6866                           
  6867     00A4                     ??___wmul:	
  6868                           ; 1 bytes @ 0x4
  6869                           
  6870     00A4                     ??___awdiv:	
  6871                           ; 1 bytes @ 0x4
  6872                           
  6873     00A4                     ??___awmod:	
  6874                           ; 1 bytes @ 0x4
  6875                           
  6876     00A4                     ??___lwdiv:	
  6877                           ; 1 bytes @ 0x4
  6878                           
  6879     00A4                     ??___lwmod:	
  6880                           ; 1 bytes @ 0x4
  6881                           
  6882     00A4                     ??___xxtofl:	
  6883                           ; 1 bytes @ 0x4
  6884                           
  6885                           
  6886                           ; 1 bytes @ 0x4
  6887     00A4                     	ds	1
  6888     00A5                     ___awdiv@sign:
  6889     00A5                     ___awmod@sign:	
  6890                           ; 1 bytes @ 0x5
  6891                           
  6892     00A5                     fputc@fp:	
  6893                           ; 1 bytes @ 0x5
  6894                           
  6895                           
  6896                           ; 2 bytes @ 0x5
  6897     00A5                     	ds	1
  6898     00A6                     ?_SPI1_Open:
  6899     00A6                     ?_atoi:	
  6900                           ; 1 bytes @ 0x6
  6901                           
  6902     00A6                     ?_abs:	
  6903                           ; 2 bytes @ 0x6
  6904                           
  6905     00A6                     ?_read_prec_or_width:	
  6906                           ; 2 bytes @ 0x6
  6907                           
  6908     00A6                     SPI1_Open@spiConfigIndex:	
  6909                           ; 2 bytes @ 0x6
  6910                           
  6911     00A6                     ___lwdiv@counter:	
  6912                           ; 1 bytes @ 0x6
  6913                           
  6914     00A6                     atoi@s:	
  6915                           ; 1 bytes @ 0x6
  6916                           
  6917     00A6                     read_prec_or_width@fmt:	
  6918                           ; 1 bytes @ 0x6
  6919                           
  6920     00A6                     ___awdiv@quotient:	
  6921                           ; 1 bytes @ 0x6
  6922                           
  6923     00A6                     __Umul8_16@word_mpld:	
  6924                           ; 2 bytes @ 0x6
  6925                           
  6926     00A6                     abs@a:	
  6927                           ; 2 bytes @ 0x6
  6928                           
  6929                           
  6930                           ; 2 bytes @ 0x6
  6931     00A6                     	ds	1
  6932     00A7                     read_prec_or_width@ap:
  6933     00A7                     ??_SPI1_Open:	
  6934                           ; 1 bytes @ 0x7
  6935                           
  6936     00A7                     ??_fputc:	
  6937                           ; 1 bytes @ 0x7
  6938                           
  6939                           
  6940                           ; 1 bytes @ 0x7
  6941     00A7                     	ds	1
  6942     00A8                     __Umul8_16@multiplier:
  6943     00A8                     ___xxtofl@sign:	
  6944                           ; 1 bytes @ 0x8
  6945                           
  6946     00A8                     ??_atoi:	
  6947                           ; 1 bytes @ 0x8
  6948                           
  6949     00A8                     ??_abs:	
  6950                           ; 1 bytes @ 0x8
  6951                           
  6952     00A8                     ??___fldiv:	
  6953                           ; 1 bytes @ 0x8
  6954                           
  6955     00A8                     ??_read_prec_or_width:	
  6956                           ; 1 bytes @ 0x8
  6957                           
  6958                           
  6959                           ; 1 bytes @ 0x8
  6960     00A8                     	ds	1
  6961     00A9                     ___xxtofl@exp:
  6962     00A9                     ??_initLedstrip:	
  6963                           ; 1 bytes @ 0x9
  6964                           
  6965                           
  6966                           ; 1 bytes @ 0x9
  6967     00A9                     	ds	1
  6968     00AA                     atoi@neg:
  6969     00AA                     ___xxtofl@arg:	
  6970                           ; 1 bytes @ 0xA
  6971                           
  6972                           
  6973                           ; 4 bytes @ 0xA
  6974     00AA                     	ds	1
  6975     00AB                     read_prec_or_width@c:
  6976     00AB                     atoi@n:	
  6977                           ; 1 bytes @ 0xB
  6978                           
  6979                           
  6980                           ; 2 bytes @ 0xB
  6981     00AB                     	ds	1
  6982     00AC                     ?_fputs:
  6983     00AC                     fputs@s:	
  6984                           ; 2 bytes @ 0xC
  6985                           
  6986     00AC                     read_prec_or_width@n:	
  6987                           ; 1 bytes @ 0xC
  6988                           
  6989                           
  6990                           ; 2 bytes @ 0xC
  6991     00AC                     	ds	1
  6992     00AD                     ?_setSetpoint:
  6993     00AD                     setSetpoint@new_setpoint:	
  6994                           ; 1 bytes @ 0xD
  6995                           
  6996     00AD                     fputs@fp:	
  6997                           ; 2 bytes @ 0xD
  6998                           
  6999     00AD                     ___fldiv@rem:	
  7000                           ; 2 bytes @ 0xD
  7001                           
  7002                           
  7003                           ; 4 bytes @ 0xD
  7004     00AD                     	ds	1
  7005     00AE                     ?___fladd:
  7006     00AE                     ___fladd@b:	
  7007                           ; 4 bytes @ 0xE
  7008                           
  7009                           
  7010                           ; 4 bytes @ 0xE
  7011     00AE                     	ds	1
  7012     00AF                     ??_setSetpoint:
  7013     00AF                     ??_fputs:	
  7014                           ; 1 bytes @ 0xF
  7015                           
  7016                           
  7017                           ; 1 bytes @ 0xF
  7018     00AF                     	ds	2
  7019     00B1                     ___fldiv@sign:
  7020     00B1                     fputs@c:	
  7021                           ; 1 bytes @ 0x11
  7022                           
  7023                           
  7024                           ; 1 bytes @ 0x11
  7025     00B1                     	ds	1
  7026     00B2                     ___fldiv@new_exp:
  7027     00B2                     fputs@i:	
  7028                           ; 2 bytes @ 0x12
  7029                           
  7030     00B2                     ___fladd@a:	
  7031                           ; 2 bytes @ 0x12
  7032                           
  7033                           
  7034                           ; 4 bytes @ 0x12
  7035     00B2                     	ds	2
  7036     00B4                     ?_pad:
  7037     00B4                     pad@fp:	
  7038                           ; 1 bytes @ 0x14
  7039                           
  7040     00B4                     ___fldiv@grs:	
  7041                           ; 2 bytes @ 0x14
  7042                           
  7043                           
  7044                           ; 4 bytes @ 0x14
  7045     00B4                     	ds	2
  7046     00B6                     pad@buf:
  7047     00B6                     ??___fladd:	
  7048                           ; 1 bytes @ 0x16
  7049                           
  7050                           
  7051                           ; 1 bytes @ 0x16
  7052     00B6                     	ds	1
  7053     00B7                     pad@p:
  7054                           
  7055                           ; 2 bytes @ 0x17
  7056     00B7                     	ds	1
  7057     00B8                     ___fldiv@bexp:
  7058                           
  7059                           ; 1 bytes @ 0x18
  7060     00B8                     	ds	1
  7061     00B9                     ___fldiv@aexp:
  7062     00B9                     ??_pad:	
  7063                           ; 1 bytes @ 0x19
  7064                           
  7065                           
  7066                           ; 1 bytes @ 0x19
  7067     00B9                     	ds	1
  7068     00BA                     pad@i:
  7069                           
  7070                           ; 2 bytes @ 0x1A
  7071     00BA                     	ds	2
  7072     00BC                     ?_dtoa:
  7073     00BC                     ?_utoa:	
  7074                           ; 1 bytes @ 0x1C
  7075                           
  7076     00BC                     dtoa@fp:	
  7077                           ; 1 bytes @ 0x1C
  7078                           
  7079     00BC                     utoa@fp:	
  7080                           ; 2 bytes @ 0x1C
  7081                           
  7082                           
  7083                           ; 2 bytes @ 0x1C
  7084     00BC                     	ds	2
  7085     00BE                     ___fladd@signs:
  7086     00BE                     dtoa@d:	
  7087                           ; 1 bytes @ 0x1E
  7088                           
  7089     00BE                     utoa@d:	
  7090                           ; 2 bytes @ 0x1E
  7091                           
  7092                           
  7093                           ; 2 bytes @ 0x1E
  7094     00BE                     	ds	1
  7095     00BF                     ___fladd@aexp:
  7096                           
  7097                           ; 1 bytes @ 0x1F
  7098     00BF                     	ds	1
  7099     00C0                     ___fladd@bexp:
  7100     00C0                     ??_dtoa:	
  7101                           ; 1 bytes @ 0x20
  7102                           
  7103     00C0                     ??_utoa:	
  7104                           ; 1 bytes @ 0x20
  7105                           
  7106                           
  7107                           ; 1 bytes @ 0x20
  7108     00C0                     	ds	1
  7109     00C1                     ___fladd@grs:
  7110     00C1                     utoa@p:	
  7111                           ; 1 bytes @ 0x21
  7112                           
  7113     00C1                     _dtoa$2128:	
  7114                           ; 1 bytes @ 0x21
  7115                           
  7116                           
  7117                           ; 2 bytes @ 0x21
  7118     00C1                     	ds	1
  7119     00C2                     ?___flsub:
  7120     00C2                     utoa@w:	
  7121                           ; 4 bytes @ 0x22
  7122                           
  7123     00C2                     ___flsub@a:	
  7124                           ; 2 bytes @ 0x22
  7125                           
  7126                           
  7127                           ; 4 bytes @ 0x22
  7128     00C2                     	ds	1
  7129     00C3                     dtoa@p:
  7130                           
  7131                           ; 1 bytes @ 0x23
  7132     00C3                     	ds	1
  7133     00C4                     dtoa@w:
  7134     00C4                     utoa@i:	
  7135                           ; 2 bytes @ 0x24
  7136                           
  7137                           
  7138                           ; 2 bytes @ 0x24
  7139     00C4                     	ds	2
  7140     00C6                     dtoa@s:
  7141     00C6                     ___flsub@b:	
  7142                           ; 1 bytes @ 0x26
  7143                           
  7144                           
  7145                           ; 4 bytes @ 0x26
  7146     00C6                     	ds	1
  7147     00C7                     dtoa@i:
  7148                           
  7149                           ; 2 bytes @ 0x27
  7150     00C7                     	ds	2
  7151     00C9                     ?_vfpfcnvrt:
  7152     00C9                     vfpfcnvrt@fp:	
  7153                           ; 1 bytes @ 0x29
  7154                           
  7155                           
  7156                           ; 2 bytes @ 0x29
  7157     00C9                     	ds	1
  7158     00CA                     ?___flmul:
  7159     00CA                     ___flmul@b:	
  7160                           ; 4 bytes @ 0x2A
  7161                           
  7162     00CA                     ??___flsub:	
  7163                           ; 4 bytes @ 0x2A
  7164                           
  7165                           
  7166                           ; 1 bytes @ 0x2A
  7167     00CA                     	ds	1
  7168     00CB                     vfpfcnvrt@fmt:
  7169                           
  7170                           ; 1 bytes @ 0x2B
  7171     00CB                     	ds	1
  7172     00CC                     vfpfcnvrt@ap:
  7173                           
  7174                           ; 1 bytes @ 0x2C
  7175     00CC                     	ds	1
  7176     00CD                     ??_vfpfcnvrt:
  7177                           
  7178                           ; 1 bytes @ 0x2D
  7179     00CD                     	ds	1
  7180     00CE                     ___flmul@a:
  7181                           
  7182                           ; 4 bytes @ 0x2E
  7183     00CE                     	ds	3
  7184     00D1                     vfpfcnvrt@done:
  7185                           
  7186                           ; 1 bytes @ 0x31
  7187     00D1                     	ds	1
  7188     00D2                     vfpfcnvrt@convarg:
  7189     00D2                     ??___flmul:	
  7190                           ; 4 bytes @ 0x32
  7191                           
  7192                           
  7193                           ; 1 bytes @ 0x32
  7194     00D2                     	ds	4
  7195     00D6                     vfpfcnvrt@cp:
  7196                           
  7197                           ; 2 bytes @ 0x36
  7198     00D6                     	ds	1
  7199     00D7                     ___flmul@sign:
  7200                           
  7201                           ; 1 bytes @ 0x37
  7202     00D7                     	ds	1
  7203     00D8                     ?_vfprintf:
  7204     00D8                     vfprintf@fp:	
  7205                           ; 2 bytes @ 0x38
  7206                           
  7207     00D8                     ___flmul@grs:	
  7208                           ; 2 bytes @ 0x38
  7209                           
  7210                           
  7211                           ; 4 bytes @ 0x38
  7212     00D8                     	ds	2
  7213     00DA                     vfprintf@fmt:
  7214                           
  7215                           ; 2 bytes @ 0x3A
  7216     00DA                     	ds	2
  7217     00DC                     ___flmul@aexp:
  7218     00DC                     vfprintf@ap:	
  7219                           ; 1 bytes @ 0x3C
  7220                           
  7221                           
  7222                           ; 1 bytes @ 0x3C
  7223     00DC                     	ds	1
  7224     00DD                     ___flmul@bexp:
  7225     00DD                     ??_vfprintf:	
  7226                           ; 1 bytes @ 0x3D
  7227                           
  7228                           
  7229                           ; 1 bytes @ 0x3D
  7230     00DD                     	ds	1
  7231     00DE                     vfprintf@cfmt:
  7232     00DE                     ___flmul@prod:	
  7233                           ; 2 bytes @ 0x3E
  7234                           
  7235                           
  7236                           ; 4 bytes @ 0x3E
  7237     00DE                     	ds	2
  7238     00E0                     ?_printf:
  7239     00E0                     printf@fmt:	
  7240                           ; 2 bytes @ 0x40
  7241                           
  7242                           
  7243                           ; 2 bytes @ 0x40
  7244     00E0                     	ds	2
  7245     00E2                     ___flmul@temp:
  7246                           
  7247                           ; 2 bytes @ 0x42
  7248     00E2                     	ds	2
  7249     00E4                     ?_str2float:
  7250     00E4                     ?___fltol:	
  7251                           ; 4 bytes @ 0x44
  7252                           
  7253     00E4                     str2float@str:	
  7254                           ; 4 bytes @ 0x44
  7255                           
  7256     00E4                     ___fltol@f1:	
  7257                           ; 1 bytes @ 0x44
  7258                           
  7259                           
  7260                           ; 4 bytes @ 0x44
  7261     00E4                     	ds	2
  7262     00E6                     printf@ap:
  7263     00E6                     ??_printf:	
  7264                           ; 1 bytes @ 0x46
  7265                           
  7266                           
  7267                           ; 1 bytes @ 0x46
  7268     00E6                     	ds	1
  7269     00E7                     ?_readLine:
  7270                           
  7271                           ; 1 bytes @ 0x47
  7272     00E7                     	ds	1
  7273     00E8                     str2float@decimal_separator:
  7274     00E8                     ??_str2float:	
  7275                           ; 1 bytes @ 0x48
  7276                           
  7277     00E8                     ??___fltol:	
  7278                           ; 1 bytes @ 0x48
  7279                           
  7280                           
  7281                           ; 1 bytes @ 0x48
  7282     00E8                     	ds	1
  7283     00E9                     str2float@multiplier:
  7284     00E9                     ??_readLine:	
  7285                           ; 1 bytes @ 0x49
  7286                           
  7287                           
  7288                           ; 1 bytes @ 0x49
  7289     00E9                     	ds	1
  7290     00EA                     str2float@i:
  7291                           
  7292                           ; 1 bytes @ 0x4A
  7293     00EA                     	ds	1
  7294     00EB                     str2float@number:
  7295                           
  7296                           ; 4 bytes @ 0x4B
  7297     00EB                     	ds	1
  7298     00EC                     ___fltol@sign1:
  7299                           
  7300                           ; 1 bytes @ 0x4C
  7301     00EC                     	ds	1
  7302     00ED                     ___fltol@exp1:
  7303                           
  7304                           ; 1 bytes @ 0x4D
  7305     00ED                     	ds	1
  7306     00EE                     ?_getLedNumber:
  7307     00EE                     getLedNumber@height:	
  7308                           ; 2 bytes @ 0x4E
  7309                           
  7310     00EE                     ??_printFloat:	
  7311                           ; 2 bytes @ 0x4E
  7312                           
  7313                           
  7314                           ; 1 bytes @ 0x4E
  7315     00EE                     	ds	1
  7316     00EF                     str2float@digit:
  7317                           
  7318                           ; 1 bytes @ 0x4F
  7319     00EF                     	ds	1
  7320     00F0                     ??_uartHandler:
  7321     00F0                     ??_printLogs:	
  7322                           ; 1 bytes @ 0x50
  7323                           
  7324     00F0                     ??_setKp:	
  7325                           ; 1 bytes @ 0x50
  7326                           
  7327     00F0                     ??_setKi:	
  7328                           ; 1 bytes @ 0x50
  7329                           
  7330     00F0                     ??_TMR6_Tasks:	
  7331                           ; 1 bytes @ 0x50
  7332                           
  7333     00F0                     ??_getLedNumber:	
  7334                           ; 1 bytes @ 0x50
  7335                           
  7336     00F0                     ??_updateLedstripAnimation:	
  7337                           ; 1 bytes @ 0x50
  7338                           
  7339                           
  7340                           	psect	cstackCOMMON
  7341     0070                     __pcstackCOMMON:	
  7342                           ; 1 bytes @ 0x50
  7343                           
  7344     0070                     ?_ADC_DefaultInterruptHandler:
  7345     0070                     ?_SPI1_Initialize:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348     0070                     ?_TMR4_ISR:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351     0070                     ?_TMR2_ISR:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354     0070                     ?_TMR2_Initialize:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357     0070                     ?_TMR4_Initialize:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360     0070                     ?_TMR6_Initialize:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363     0070                     ?_EUSART_Initialize:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375     0070                     ?_EUSART_Read:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378     0070                     ?_EUSART_IsRxReady:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381     0070                     ?_EUSART_IsTxReady:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384     0070                     ?_EUSART_ReceiveISR:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387     0070                     ?_EUSART_TransmitISR:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396     0070                     ?_initAdcMultiplexer:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399     0070                     ?_controller:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402     0070                     ?_initLedstrip:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405     0070                     ?_uartHandler:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408     0070                     ?_printLogs:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411     0070                     ?_ADC_Initialize:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414     0070                     ?_ADC_SelectChannel:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417     0070                     ?_ADC_ISR:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420     0070                     ?_pwm_fan_Initialize:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423     0070                     ?_pwm_fan_LoadDutyValue:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426     0070                     ?_INTERRUPT_Initialize:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429     0070                     ?_INTERRUPT_InterruptManager:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432     0070                     ?_CLOCK_Initialize:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435     0070                     ?_PIN_MANAGER_Initialize:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438     0070                     ?_SYSTEM_Initialize:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441     0070                     ?_TMR6_Tasks:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444     0070                     ?_putch:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447     0070                     ?_adcConversionDoneHandler:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450     0070                     ?_sendLedstripStartFrame:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453     0070                     ?_sendLedstripEndFrame:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456     0070                     ?_position_led_strip:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459     0070                     ?_updateLedstripAnimation:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462     0070                     ?i1_ADC_SelectChannel:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465     0070                     ?_ADC_GetConversionResult:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468     0070                     ?_main:	
  7469                           ; 2 bytes @ 0x0
  7470                           
  7471     0070                     ?i1_getHoogtesensor:	
  7472                           ; 2 bytes @ 0x0
  7473                           
  7474     0070                     ?i1__Umul8_16:	
  7475                           ; 2 bytes @ 0x0
  7476                           
  7477     0070                     ?i1___xxtofl:	
  7478                           ; 2 bytes @ 0x0
  7479                           
  7480     0070                     EUSART_ReceiveISR@regValue:	
  7481                           ; 4 bytes @ 0x0
  7482                           
  7483     0070                     EUSART_TransmitISR@tempTxTail:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486     0070                     i1__Umul8_16@multiplicand:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492     0070                     i1___xxtofl@val:	
  7493                           ; 2 bytes @ 0x0
  7494                           
  7495     0070                     ??_ADC_DefaultInterruptHandler:	
  7496                           ; 4 bytes @ 0x0
  7497                           
  7498     0070                     ??_TMR2_ISR:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507     0070                     ??_EUSART_ReceiveISR:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510     0070                     ??_EUSART_TransmitISR:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519     0070                     ??i1_ADC_SelectChannel:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522                           
  7523                           ; 1 bytes @ 0x0
  7524     0070                     	ds	1
  7525     0071                     EUSART_ReceiveISR@tempRxHead:
  7526     0071                     i1ADC_SelectChannel@channel:	
  7527                           ; 1 bytes @ 0x1
  7528                           
  7529                           
  7530                           ; 1 bytes @ 0x1
  7531     0071                     	ds	1
  7532     0072                     ??_ADC_GetConversionResult:
  7533     0072                     ??_pwm_fan_LoadDutyValue:	
  7534                           ; 1 bytes @ 0x2
  7535                           
  7536     0072                     ??_adcConversionDoneHandler:	
  7537                           ; 1 bytes @ 0x2
  7538                           
  7539     0072                     ??i1_getHoogtesensor:	
  7540                           ; 1 bytes @ 0x2
  7541                           
  7542     0072                     ??i1__Umul8_16:	
  7543                           ; 1 bytes @ 0x2
  7544                           
  7545                           
  7546                           ; 1 bytes @ 0x2
  7547     0072                     	ds	2
  7548     0074                     i1__Umul8_16@product:
  7549     0074                     ??_ADC_ISR:	
  7550                           ; 2 bytes @ 0x4
  7551                           
  7552     0074                     ??i1___xxtofl:	
  7553                           ; 1 bytes @ 0x4
  7554                           
  7555                           
  7556                           ; 1 bytes @ 0x4
  7557     0074                     	ds	2
  7558     0076                     i1__Umul8_16@word_mpld:
  7559                           
  7560                           ; 2 bytes @ 0x6
  7561     0076                     	ds	2
  7562     0078                     i1__Umul8_16@multiplier:
  7563     0078                     i1___xxtofl@sign:	
  7564                           ; 1 bytes @ 0x8
  7565                           
  7566                           
  7567                           ; 1 bytes @ 0x8
  7568     0078                     	ds	1
  7569     0079                     i1___xxtofl@exp:
  7570                           
  7571                           ; 1 bytes @ 0x9
  7572     0079                     	ds	1
  7573     007A                     i1___xxtofl@arg:
  7574                           
  7575                           ; 4 bytes @ 0xA
  7576     007A                     	ds	4
  7577     007E                     ??_TMR4_ISR:
  7578     007E                     ??_INTERRUPT_InterruptManager:	
  7579                           ; 1 bytes @ 0xE
  7580                           
  7581                           
  7582                           	psect	cstackBANK0
  7583     0020                     __pcstackBANK0:	
  7584                           ; 1 bytes @ 0xE
  7585                           
  7586     0020                     ?i1___flmul:
  7587     0020                     i1___flmul@b:	
  7588                           ; 4 bytes @ 0x0
  7589                           
  7590                           
  7591                           ; 4 bytes @ 0x0
  7592     0020                     	ds	4
  7593     0024                     i1___flmul@a:
  7594                           
  7595                           ; 4 bytes @ 0x4
  7596     0024                     	ds	4
  7597     0028                     ??i1___flmul:
  7598                           
  7599                           ; 1 bytes @ 0x8
  7600     0028                     	ds	5
  7601     002D                     i1___flmul@sign:
  7602                           
  7603                           ; 1 bytes @ 0xD
  7604     002D                     	ds	1
  7605     002E                     i1___flmul@grs:
  7606                           
  7607                           ; 4 bytes @ 0xE
  7608     002E                     	ds	4
  7609     0032                     i1___flmul@aexp:
  7610                           
  7611                           ; 1 bytes @ 0x12
  7612     0032                     	ds	1
  7613     0033                     i1___flmul@bexp:
  7614                           
  7615                           ; 1 bytes @ 0x13
  7616     0033                     	ds	1
  7617     0034                     i1___flmul@prod:
  7618                           
  7619                           ; 4 bytes @ 0x14
  7620     0034                     	ds	4
  7621     0038                     i1___flmul@temp:
  7622                           
  7623                           ; 2 bytes @ 0x18
  7624     0038                     	ds	2
  7625     003A                     ?i1___fltol:
  7626     003A                     ?i1___fladd:	
  7627                           ; 4 bytes @ 0x1A
  7628                           
  7629     003A                     i1___fltol@f1:	
  7630                           ; 4 bytes @ 0x1A
  7631                           
  7632     003A                     i1___fladd@b:	
  7633                           ; 4 bytes @ 0x1A
  7634                           
  7635                           
  7636                           ; 4 bytes @ 0x1A
  7637     003A                     	ds	4
  7638     003E                     i1___fladd@a:
  7639     003E                     ??i1___fltol:	
  7640                           ; 4 bytes @ 0x1E
  7641                           
  7642                           
  7643                           ; 1 bytes @ 0x1E
  7644     003E                     	ds	4
  7645     0042                     i1___fltol@sign1:
  7646     0042                     ??i1___fladd:	
  7647                           ; 1 bytes @ 0x22
  7648                           
  7649                           
  7650                           ; 1 bytes @ 0x22
  7651     0042                     	ds	1
  7652     0043                     i1___fltol@exp1:
  7653                           
  7654                           ; 1 bytes @ 0x23
  7655     0043                     	ds	7
  7656     004A                     i1___fladd@signs:
  7657                           
  7658                           ; 1 bytes @ 0x2A
  7659     004A                     	ds	1
  7660     004B                     i1___fladd@aexp:
  7661                           
  7662                           ; 1 bytes @ 0x2B
  7663     004B                     	ds	1
  7664     004C                     i1___fladd@bexp:
  7665                           
  7666                           ; 1 bytes @ 0x2C
  7667     004C                     	ds	1
  7668     004D                     i1___fladd@grs:
  7669                           
  7670                           ; 1 bytes @ 0x2D
  7671     004D                     	ds	1
  7672     004E                     ??_controller:
  7673                           
  7674                           ; 1 bytes @ 0x2E
  7675     004E                     	ds	1
  7676     004F                     controller@P:
  7677                           
  7678                           ; 2 bytes @ 0x2F
  7679     004F                     	ds	2
  7680     0051                     controller@I:
  7681                           
  7682                           ; 2 bytes @ 0x31
  7683     0051                     	ds	2
  7684     0053                     controller@error:
  7685                           
  7686                           ; 2 bytes @ 0x33
  7687     0053                     	ds	2
  7688                           
  7689                           	psect	maintext
  7690     1395                     __pmaintext:	
  7691 ;;
  7692 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7693 ;;
  7694 ;; *************** function _main *****************
  7695 ;; Defined at:
  7696 ;;		line 49 in file "main.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;		None
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;  potwaarde       2   14[BANK2 ] unsigned short 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  2  792[None  ] int 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : B1F/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;Total ram usage:        4 bytes
  7715 ;; Hardware stack levels required when called: 16
  7716 ;; This function calls:
  7717 ;;		_SYSTEM_Initialize
  7718 ;;		_TMR4_PeriodMatchCallbackRegister
  7719 ;;		_TMR6_Tasks
  7720 ;;		_getPotentiometer
  7721 ;;		_initAdcMultiplexer
  7722 ;;		_initLedstrip
  7723 ;;		_printLogs
  7724 ;;		_uartHandler
  7725 ;; This function is called by:
  7726 ;;		Startup code after reset
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730     1395                     _main:	
  7731                           ;psect for function _main
  7732                           
  7733                           
  7734                           ;main.c: 51:     SYSTEM_Initialize();
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7738     1395  3191  2130  3193   	fcall	_SYSTEM_Initialize
  7739                           
  7740                           ;main.c: 57:     (INTCONbits.GIE = 1);
  7741     1398  178B               	bsf	11,7	;volatile
  7742                           
  7743                           ;main.c: 63:     (INTCONbits.PEIE = 1);
  7744     1399  170B               	bsf	11,6	;volatile
  7745                           
  7746                           ;main.c: 68:     initAdcMultiplexer();
  7747     139A  319F  2796  3193   	fcall	_initAdcMultiplexer
  7748                           
  7749                           ;main.c: 69:     TMR4_PeriodMatchCallbackRegister(controller);
  7750     139D  304C               	movlw	low _controller
  7751     139E  0021               	movlb	1	; select bank1
  7752     139F  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  7753     13A0  300D               	movlw	high _controller
  7754     13A1  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  7755     13A2  319E  26FF  3193   	fcall	_TMR4_PeriodMatchCallbackRegister
  7756                           
  7757                           ;main.c: 70:     initLedstrip();
  7758     13A5  3190  2000  3193   	fcall	_initLedstrip
  7759     13A8                     l6161:
  7760                           
  7761                           ;main.c: 73:     {;main.c: 74:         uartHandler();
  7762     13A8  318A  22F0  3193   	fcall	_uartHandler
  7763     13AB  0022               	movlb	2	; select bank2
  7764     13AC  128C               	bcf	12,5	;volatile
  7765     13AD  108C               	bcf	12,1	;volatile
  7766     13AE  110C               	bcf	12,2	;volatile
  7767                           
  7768                           ;main.c: 80:         uint16_t potwaarde = getPotentiometer();
  7769     13AF  319F  271A  3193   	fcall	_getPotentiometer
  7770     13B2  0021               	movlb	1	; select bank1
  7771     13B3  0821               	movf	(?_getPotentiometer+1)^(0+128),w
  7772     13B4  0022               	movlb	2	; select bank2
  7773     13B5  00DD               	movwf	(main@potwaarde+1)^(0+256)
  7774     13B6  0021               	movlb	1	; select bank1
  7775     13B7  0820               	movf	?_getPotentiometer^(0+128),w
  7776     13B8  0022               	movlb	2	; select bank2
  7777     13B9  00DC               	movwf	main@potwaarde^(0+256)
  7778                           
  7779                           ;main.c: 82:         if (potwaarde > 256) {
  7780     13BA  3001               	movlw	1
  7781     13BB  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7782     13BC  3001               	movlw	1
  7783     13BD  1903               	skipnz
  7784     13BE  025C               	subwf	main@potwaarde^(0+256),w
  7785     13BF  1803               	btfsc	3,0
  7786                           
  7787                           ;main.c: 83:             do { LATAbits.LATA5 = 1; } while(0);
  7788     13C0  168C               	bsf	12,5	;volatile
  7789                           
  7790                           ;main.c: 85:         if (potwaarde > 512) {
  7791     13C1  3002               	movlw	2
  7792     13C2  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7793     13C3  3001               	movlw	1
  7794     13C4  1903               	skipnz
  7795     13C5  025C               	subwf	main@potwaarde^(0+256),w
  7796     13C6  1803               	btfsc	3,0
  7797                           
  7798                           ;main.c: 86:             do { LATAbits.LATA1 = 1; } while(0);
  7799     13C7  148C               	bsf	12,1	;volatile
  7800                           
  7801                           ;main.c: 88:         if (potwaarde > 768) {
  7802     13C8  3003               	movlw	3
  7803     13C9  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7804     13CA  3001               	movlw	1
  7805     13CB  1903               	skipnz
  7806     13CC  025C               	subwf	main@potwaarde^(0+256),w
  7807     13CD  1803               	btfsc	3,0
  7808                           
  7809                           ;main.c: 89:             do { LATAbits.LATA2 = 1; } while(0);
  7810     13CE  150C               	bsf	12,2	;volatile
  7811                           
  7812                           ;main.c: 91:         _delay((unsigned long)((100)*(32000000U/4000.0)));
  7813     13CF  3005               	movlw	5
  7814     13D0  0022               	movlb	2	; select bank2
  7815     13D1  00DB               	movwf	(??_main^(0+256)+1)
  7816     13D2  300F               	movlw	15
  7817     13D3  00DA               	movwf	??_main^(0+256)
  7818     13D4  30F1               	movlw	241
  7819     13D5                     u7707:
  7820     13D5  0B89               	decfsz	9,f
  7821     13D6  2BD5               	goto	u7707
  7822     13D7  0BDA               	decfsz	??_main^(0+256),f
  7823     13D8  2BD5               	goto	u7707
  7824     13D9  0BDB               	decfsz	(??_main^(0+256)+1),f
  7825     13DA  2BD5               	goto	u7707
  7826                           
  7827                           ;main.c: 93:         printLogs();
  7828     13DB  3197  2788  3193   	fcall	_printLogs
  7829                           
  7830                           ;main.c: 94:         TMR6_Tasks();
  7831     13DE  3190  202B  3193   	fcall	_TMR6_Tasks
  7832     13E1  2BA8               	goto	l6161
  7833     13E2                     __end_of_main:
  7834                           
  7835                           	psect	text1
  7836     0AF0                     __ptext1:	
  7837 ;; *************** function _uartHandler *****************
  7838 ;; Defined at:
  7839 ;;		line 93 in file "UART.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  str             1    4[BANK2 ] PTR unsigned char 
  7844 ;;		 -> line(20), 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7857 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7858 ;;Total ram usage:        1 bytes
  7859 ;; Hardware stack levels used: 1
  7860 ;; Hardware stack levels required when called: 15
  7861 ;; This function calls:
  7862 ;;		_atoi
  7863 ;;		_printf
  7864 ;;		_readLine
  7865 ;;		_setKi
  7866 ;;		_setKp
  7867 ;;		_setSetpoint
  7868 ;;		_str2float
  7869 ;; This function is called by:
  7870 ;;		_main
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874     0AF0                     _uartHandler:	
  7875                           ;psect for function _uartHandler
  7876                           
  7877                           
  7878                           ;UART.c: 94:     char *str = readLine();
  7879                           
  7880                           ;incstack = 0
  7881                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7882     0AF0  3194  2430  318A   	fcall	_readLine
  7883     0AF3  0022               	movlb	2	; select bank2
  7884     0AF4  00D2               	movwf	uartHandler@str^(0+256)
  7885                           
  7886                           ;UART.c: 95:     switch (*str) {
  7887     0AF5  2B76               	goto	l6089
  7888     0AF6                     l6071:
  7889                           
  7890                           ;UART.c: 101:             setSetpoint((uint16_t) atoi(str + 1));
  7891     0AF6  0852               	movf	uartHandler@str^(0+256),w
  7892     0AF7  3E01               	addlw	1
  7893     0AF8  0021               	movlb	1	; select bank1
  7894     0AF9  00A6               	movwf	atoi@s^(0+128)
  7895     0AFA  3197  271C  318A   	fcall	_atoi
  7896     0AFD  0021               	movlb	1	; select bank1
  7897     0AFE  0827               	movf	(?_atoi+1)^(0+128),w
  7898     0AFF  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  7899     0B00  0826               	movf	?_atoi^(0+128),w
  7900     0B01  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  7901     0B02  319F  2735  318A   	fcall	_setSetpoint
  7902                           
  7903                           ;UART.c: 102:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  7904     0B05  304C               	movlw	low (STR_9| (0+32768))
  7905     0B06  0021               	movlb	1	; select bank1
  7906     0B07  00E0               	movwf	printf@fmt^(0+128)
  7907     0B08  3098               	movlw	high (STR_9| (0+32768))
  7908     0B09  00E1               	movwf	(printf@fmt^(0+128)+1)
  7909     0B0A  0022               	movlb	2	; select bank2
  7910     0B0B  0852               	movf	uartHandler@str^(0+256),w
  7911     0B0C  3E01               	addlw	1
  7912     0B0D  0021               	movlb	1	; select bank1
  7913     0B0E  00A6               	movwf	atoi@s^(0+128)
  7914     0B0F  3197  271C  318A   	fcall	_atoi
  7915     0B12  0021               	movlb	1	; select bank1
  7916     0B13  0827               	movf	(?_atoi+1)^(0+128),w
  7917     0B14  00E3               	movwf	((?_printf+1)^(0+128)+2)
  7918     0B15  0826               	movf	?_atoi^(0+128),w
  7919     0B16  00E2               	movwf	(?_printf^(0+128)+2)
  7920     0B17  3190  201C         	fcall	_printf
  7921                           
  7922                           ;UART.c: 103:             break;
  7923     0B19  0008               	return
  7924     0B1A                     l6075:
  7925                           
  7926                           ;UART.c: 107:             setKp(str2float(str + 1));
  7927     0B1A  0852               	movf	uartHandler@str^(0+256),w
  7928     0B1B  3E01               	addlw	1
  7929     0B1C  0021               	movlb	1	; select bank1
  7930     0B1D  00E4               	movwf	str2float@str^(0+128)
  7931     0B1E  318A  2251  318A   	fcall	_str2float
  7932     0B21  0021               	movlb	1	; select bank1
  7933     0B22  0867               	movf	(?_str2float+3)^(0+128),w
  7934     0B23  0022               	movlb	2	; select bank2
  7935     0B24  00D1               	movwf	(setKp@new_kp+3)^(0+256)
  7936     0B25  0021               	movlb	1	; select bank1
  7937     0B26  0866               	movf	(?_str2float+2)^(0+128),w
  7938     0B27  0022               	movlb	2	; select bank2
  7939     0B28  00D0               	movwf	(setKp@new_kp+2)^(0+256)
  7940     0B29  0021               	movlb	1	; select bank1
  7941     0B2A  0865               	movf	(?_str2float+1)^(0+128),w
  7942     0B2B  0022               	movlb	2	; select bank2
  7943     0B2C  00CF               	movwf	(setKp@new_kp+1)^(0+256)
  7944     0B2D  0021               	movlb	1	; select bank1
  7945     0B2E  0864               	movf	?_str2float^(0+128),w
  7946     0B2F  0022               	movlb	2	; select bank2
  7947     0B30  00CE               	movwf	setKp@new_kp^(0+256)
  7948     0B31  319F  2752  318A   	fcall	_setKp
  7949                           
  7950                           ;UART.c: 108:             printf("changed kp\r\n");
  7951     0B34  30CA               	movlw	low (STR_10| (0+32768))
  7952     0B35  0021               	movlb	1	; select bank1
  7953     0B36  00E0               	movwf	printf@fmt^(0+128)
  7954     0B37  3098               	movlw	high (STR_10| (0+32768))
  7955     0B38  00E1               	movwf	(printf@fmt^(0+128)+1)
  7956     0B39  3190  201C         	fcall	_printf
  7957                           
  7958                           ;UART.c: 109:             break;
  7959     0B3B  0008               	return
  7960     0B3C                     l6079:
  7961                           
  7962                           ;UART.c: 112:             setKi(str2float(str + 1));
  7963     0B3C  0852               	movf	uartHandler@str^(0+256),w
  7964     0B3D  3E01               	addlw	1
  7965     0B3E  0021               	movlb	1	; select bank1
  7966     0B3F  00E4               	movwf	str2float@str^(0+128)
  7967     0B40  318A  2251  318A   	fcall	_str2float
  7968     0B43  0021               	movlb	1	; select bank1
  7969     0B44  0867               	movf	(?_str2float+3)^(0+128),w
  7970     0B45  0022               	movlb	2	; select bank2
  7971     0B46  00D1               	movwf	(setKi@new_ki+3)^(0+256)
  7972     0B47  0021               	movlb	1	; select bank1
  7973     0B48  0866               	movf	(?_str2float+2)^(0+128),w
  7974     0B49  0022               	movlb	2	; select bank2
  7975     0B4A  00D0               	movwf	(setKi@new_ki+2)^(0+256)
  7976     0B4B  0021               	movlb	1	; select bank1
  7977     0B4C  0865               	movf	(?_str2float+1)^(0+128),w
  7978     0B4D  0022               	movlb	2	; select bank2
  7979     0B4E  00CF               	movwf	(setKi@new_ki+1)^(0+256)
  7980     0B4F  0021               	movlb	1	; select bank1
  7981     0B50  0864               	movf	?_str2float^(0+128),w
  7982     0B51  0022               	movlb	2	; select bank2
  7983     0B52  00CE               	movwf	setKi@new_ki^(0+256)
  7984     0B53  319F  2748  318A   	fcall	_setKi
  7985                           
  7986                           ;UART.c: 113:             printf("changed ki\r\n");
  7987     0B56  30BD               	movlw	low (STR_11| (0+32768))
  7988     0B57  0021               	movlb	1	; select bank1
  7989     0B58  00E0               	movwf	printf@fmt^(0+128)
  7990     0B59  3098               	movlw	high (STR_11| (0+32768))
  7991     0B5A  00E1               	movwf	(printf@fmt^(0+128)+1)
  7992     0B5B  3190  201C         	fcall	_printf
  7993                           
  7994                           ;UART.c: 114:             break;
  7995     0B5D  0008               	return
  7996     0B5E                     l6083:
  7997                           
  7998                           ;UART.c: 117:             mustPrintLogs = !mustPrintLogs;
  7999     0B5E  0020               	movlb	0	; select bank0
  8000     0B5F  086E               	movf	_mustPrintLogs,w
  8001     0B60  1D03               	btfss	3,2
  8002     0B61  2B64               	goto	u7470
  8003     0B62  3001               	movlw	1
  8004     0B63  2B65               	goto	u7480
  8005     0B64                     u7470:
  8006     0B64  3000               	movlw	0
  8007     0B65                     u7480:
  8008     0B65  00EE               	movwf	_mustPrintLogs
  8009                           
  8010                           ;UART.c: 118:             printf("logs toggled\r\n");
  8011     0B66  309F               	movlw	low (STR_12| (0+32768))
  8012     0B67  0021               	movlb	1	; select bank1
  8013     0B68  00E0               	movwf	printf@fmt^(0+128)
  8014     0B69  3098               	movlw	high (STR_12| (0+32768))
  8015     0B6A  00E1               	movwf	(printf@fmt^(0+128)+1)
  8016     0B6B  3190  201C         	fcall	_printf
  8017                           
  8018                           ;UART.c: 119:             break;
  8019     0B6D  0008               	return
  8020     0B6E                     l6087:
  8021                           
  8022                           ;UART.c: 123:             printf("Unkown command\r\n");
  8023     0B6E  307D               	movlw	low (STR_13| (0+32768))
  8024     0B6F  0021               	movlb	1	; select bank1
  8025     0B70  00E0               	movwf	printf@fmt^(0+128)
  8026     0B71  3098               	movlw	high (STR_13| (0+32768))
  8027     0B72  00E1               	movwf	(printf@fmt^(0+128)+1)
  8028     0B73  3190  201C         	fcall	_printf
  8029                           
  8030                           ;UART.c: 124:     };
  8031     0B75  0008               	return
  8032     0B76                     l6089:
  8033     0B76  0852               	movf	uartHandler@str^(0+256),w
  8034     0B77  0086               	movwf	6
  8035     0B78  3001               	movlw	1	; select bank2/3
  8036     0B79  0087               	movwf	7
  8037     0B7A  0801               	movf	1,w
  8038                           
  8039                           ; Switch size 1, requested type "simple"
  8040                           ; Number of cases is 9, Range of values is 0 to 115
  8041                           ; switch strategies available:
  8042                           ; Name         Instructions Cycles
  8043                           ; simple_byte           28    15 (average)
  8044                           ; direct_byte          238     6 (fixed)
  8045                           ; jumptable            260     6 (fixed)
  8046                           ;	Chosen strategy is simple_byte
  8047     0B7B  3A00               	xorlw	0	; case 0
  8048     0B7C  1903               	skipnz
  8049     0B7D  2B97               	goto	l920
  8050     0B7E  3A49               	xorlw	73	; case 73
  8051     0B7F  1903               	skipnz
  8052     0B80  2B3C               	goto	l6079
  8053     0B81  3A05               	xorlw	5	; case 76
  8054     0B82  1903               	skipnz
  8055     0B83  2B5E               	goto	l6083
  8056     0B84  3A1C               	xorlw	28	; case 80
  8057     0B85  1903               	skipnz
  8058     0B86  2B1A               	goto	l6075
  8059     0B87  3A03               	xorlw	3	; case 83
  8060     0B88  1903               	skipnz
  8061     0B89  2AF6               	goto	l6071
  8062     0B8A  3A3A               	xorlw	58	; case 105
  8063     0B8B  1903               	skipnz
  8064     0B8C  2B3C               	goto	l6079
  8065     0B8D  3A05               	xorlw	5	; case 108
  8066     0B8E  1903               	skipnz
  8067     0B8F  2B5E               	goto	l6083
  8068     0B90  3A1C               	xorlw	28	; case 112
  8069     0B91  1903               	skipnz
  8070     0B92  2B1A               	goto	l6075
  8071     0B93  3A03               	xorlw	3	; case 115
  8072     0B94  1903               	skipnz
  8073     0B95  2AF6               	goto	l6071
  8074     0B96  2B6E               	goto	l6087
  8075     0B97                     l920:
  8076     0B97  0008               	return
  8077     0B98                     __end_of_uartHandler:
  8078                           
  8079                           	psect	text2
  8080     0A51                     __ptext2:	
  8081 ;; *************** function _str2float *****************
  8082 ;; Defined at:
  8083 ;;		line 25 in file "UART.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  str             1   68[BANK1 ] PTR unsigned char 
  8086 ;;		 -> line(20), 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  i               1   74[BANK1 ] unsigned char 
  8089 ;;  digit           1   79[BANK1 ] unsigned char 
  8090 ;;  number          4   75[BANK1 ] float 
  8091 ;;  multiplier      1   73[BANK1 ] unsigned char 
  8092 ;;  decimal_sepa    1   72[BANK1 ] _Bool 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  4   68[BANK1 ] float 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8102 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8103 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8105 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;Total ram usage:       12 bytes
  8107 ;; Hardware stack levels used: 1
  8108 ;; Hardware stack levels required when called: 7
  8109 ;; This function calls:
  8110 ;;		___fladd
  8111 ;;		___fldiv
  8112 ;;		___flmul
  8113 ;;		___xxtofl
  8114 ;; This function is called by:
  8115 ;;		_uartHandler
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119     0A51                     _str2float:	
  8120                           ;psect for function _str2float
  8121                           
  8122                           
  8123                           ;UART.c: 26:     float number = 0;
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8127     0A51  3000               	movlw	0
  8128     0A52  0021               	movlb	1	; select bank1
  8129     0A53  00EE               	movwf	(str2float@number+3)^(0+128)
  8130     0A54  3000               	movlw	0
  8131     0A55  00ED               	movwf	(str2float@number+2)^(0+128)
  8132     0A56  3000               	movlw	0
  8133     0A57  00EC               	movwf	(str2float@number+1)^(0+128)
  8134     0A58  3000               	movlw	0
  8135     0A59  00EB               	movwf	str2float@number^(0+128)
  8136                           
  8137                           ;UART.c: 27:     _Bool decimal_separator = 0;
  8138     0A5A  01E8               	clrf	str2float@decimal_separator^(0+128)
  8139     0A5B  2AA8               	goto	l5821
  8140     0A5C                     l5827:
  8141     0A5C  303A               	movlw	58
  8142     0A5D  026F               	subwf	str2float@digit^(0+128),w
  8143     0A5E  1803               	skipnc
  8144     0A5F  2AB4               	goto	l5833
  8145                           
  8146                           ;UART.c: 32:             number *= 10;
  8147     0A60  3041               	movlw	65
  8148     0A61  00CD               	movwf	(___flmul@b+3)^(0+128)
  8149     0A62  3020               	movlw	32
  8150     0A63  00CC               	movwf	(___flmul@b+2)^(0+128)
  8151     0A64  3000               	movlw	0
  8152     0A65  00CB               	movwf	(___flmul@b+1)^(0+128)
  8153     0A66  3000               	movlw	0
  8154     0A67  00CA               	movwf	___flmul@b^(0+128)
  8155     0A68  086E               	movf	(str2float@number+3)^(0+128),w
  8156     0A69  00D1               	movwf	(___flmul@a+3)^(0+128)
  8157     0A6A  086D               	movf	(str2float@number+2)^(0+128),w
  8158     0A6B  00D0               	movwf	(___flmul@a+2)^(0+128)
  8159     0A6C  086C               	movf	(str2float@number+1)^(0+128),w
  8160     0A6D  00CF               	movwf	(___flmul@a+1)^(0+128)
  8161     0A6E  086B               	movf	str2float@number^(0+128),w
  8162     0A6F  00CE               	movwf	___flmul@a^(0+128)
  8163     0A70  3180  2075  318A   	fcall	___flmul
  8164     0A73  0021               	movlb	1	; select bank1
  8165     0A74  084D               	movf	(?___flmul+3)^(0+128),w
  8166     0A75  00EE               	movwf	(str2float@number+3)^(0+128)
  8167     0A76  084C               	movf	(?___flmul+2)^(0+128),w
  8168     0A77  00ED               	movwf	(str2float@number+2)^(0+128)
  8169     0A78  084B               	movf	(?___flmul+1)^(0+128),w
  8170     0A79  00EC               	movwf	(str2float@number+1)^(0+128)
  8171     0A7A  084A               	movf	?___flmul^(0+128),w
  8172     0A7B  00EB               	movwf	str2float@number^(0+128)
  8173                           
  8174                           ;UART.c: 33:             number += digit - '0';
  8175     0A7C  086F               	movf	str2float@digit^(0+128),w
  8176     0A7D  3ED0               	addlw	208
  8177     0A7E  00A0               	movwf	___xxtofl@val^(0+128)
  8178     0A7F  30FF               	movlw	255
  8179     0A80  1803               	skipnc
  8180     0A81  3000               	movlw	0
  8181     0A82  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8182     0A83  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8183     0A84  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8184     0A85  3000               	movlw	0
  8185     0A86  3189  2124  318A   	fcall	___xxtofl
  8186     0A89  0021               	movlb	1	; select bank1
  8187     0A8A  0823               	movf	(?___xxtofl+3)^(0+128),w
  8188     0A8B  00B1               	movwf	(___fladd@b+3)^(0+128)
  8189     0A8C  0822               	movf	(?___xxtofl+2)^(0+128),w
  8190     0A8D  00B0               	movwf	(___fladd@b+2)^(0+128)
  8191     0A8E  0821               	movf	(?___xxtofl+1)^(0+128),w
  8192     0A8F  00AF               	movwf	(___fladd@b+1)^(0+128)
  8193     0A90  0820               	movf	?___xxtofl^(0+128),w
  8194     0A91  00AE               	movwf	___fladd@b^(0+128)
  8195     0A92  086E               	movf	(str2float@number+3)^(0+128),w
  8196     0A93  00B5               	movwf	(___fladd@a+3)^(0+128)
  8197     0A94  086D               	movf	(str2float@number+2)^(0+128),w
  8198     0A95  00B4               	movwf	(___fladd@a+2)^(0+128)
  8199     0A96  086C               	movf	(str2float@number+1)^(0+128),w
  8200     0A97  00B3               	movwf	(___fladd@a+1)^(0+128)
  8201     0A98  086B               	movf	str2float@number^(0+128),w
  8202     0A99  00B2               	movwf	___fladd@a^(0+128)
  8203     0A9A  3184  2495  318A   	fcall	___fladd
  8204     0A9D  0021               	movlb	1	; select bank1
  8205     0A9E  0831               	movf	(?___fladd+3)^(0+128),w
  8206     0A9F  00EE               	movwf	(str2float@number+3)^(0+128)
  8207     0AA0  0830               	movf	(?___fladd+2)^(0+128),w
  8208     0AA1  00ED               	movwf	(str2float@number+2)^(0+128)
  8209     0AA2  082F               	movf	(?___fladd+1)^(0+128),w
  8210     0AA3  00EC               	movwf	(str2float@number+1)^(0+128)
  8211     0AA4  082E               	movf	?___fladd^(0+128),w
  8212     0AA5  00EB               	movwf	str2float@number^(0+128)
  8213                           
  8214                           ;UART.c: 34:             multiplier++;
  8215     0AA6  3001               	movlw	1
  8216     0AA7  07E9               	addwf	str2float@multiplier^(0+128),f
  8217     0AA8                     l5821:	
  8218                           ;UART.c: 35:         } else if (digit == ',' || digit == '.') {
  8219                           
  8220                           
  8221                           ;UART.c: 30:         char digit = *str++;
  8222     0AA8  0864               	movf	str2float@str^(0+128),w
  8223     0AA9  0086               	movwf	6
  8224     0AAA  3001               	movlw	1	; select bank2/3
  8225     0AAB  0087               	movwf	7
  8226     0AAC  0801               	movf	1,w
  8227     0AAD  00EF               	movwf	str2float@digit^(0+128)
  8228     0AAE  3001               	movlw	1
  8229     0AAF  07E4               	addwf	str2float@str^(0+128),f
  8230                           
  8231                           ;UART.c: 31:         if ('0' <= digit && digit <= '9') {
  8232     0AB0  3030               	movlw	48
  8233     0AB1  026F               	subwf	str2float@digit^(0+128),w
  8234     0AB2  1803               	btfsc	3,0
  8235     0AB3  2A5C               	goto	l5827
  8236     0AB4                     l5833:
  8237     0AB4  302C               	movlw	44
  8238     0AB5  066F               	xorwf	str2float@digit^(0+128),w
  8239     0AB6  1903               	btfsc	3,2
  8240     0AB7  2ABC               	goto	l878
  8241     0AB8  302E               	movlw	46
  8242     0AB9  066F               	xorwf	str2float@digit^(0+128),w
  8243     0ABA  1D03               	btfss	3,2
  8244     0ABB  2AC0               	goto	l5839
  8245     0ABC                     l878:
  8246                           
  8247                           ;UART.c: 36:             decimal_separator = 1;
  8248     0ABC  3001               	movlw	1
  8249     0ABD  00E8               	movwf	str2float@decimal_separator^(0+128)
  8250                           
  8251                           ;UART.c: 37:             multiplier = 0;
  8252     0ABE  01E9               	clrf	str2float@multiplier^(0+128)
  8253                           
  8254                           ;UART.c: 38:         } else {
  8255     0ABF  2AA8               	goto	l5821
  8256     0AC0                     l5839:
  8257                           
  8258                           ;UART.c: 43:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8259     0AC0  01EA               	clrf	str2float@i^(0+128)
  8260     0AC1  2AE4               	goto	l5845
  8261     0AC2                     l5847:
  8262     0AC2  0869               	movf	str2float@multiplier^(0+128),w
  8263     0AC3  026A               	subwf	str2float@i^(0+128),w
  8264     0AC4  1803               	btfsc	3,0
  8265     0AC5  2AE7               	goto	l5849
  8266                           
  8267                           ;UART.c: 44:         number /= 10;
  8268     0AC6  3041               	movlw	65
  8269     0AC7  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8270     0AC8  3020               	movlw	32
  8271     0AC9  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8272     0ACA  3000               	movlw	0
  8273     0ACB  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8274     0ACC  3000               	movlw	0
  8275     0ACD  00A0               	movwf	___fldiv@a^(0+128)
  8276     0ACE  086E               	movf	(str2float@number+3)^(0+128),w
  8277     0ACF  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8278     0AD0  086D               	movf	(str2float@number+2)^(0+128),w
  8279     0AD1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8280     0AD2  086C               	movf	(str2float@number+1)^(0+128),w
  8281     0AD3  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8282     0AD4  086B               	movf	str2float@number^(0+128),w
  8283     0AD5  00A4               	movwf	___fldiv@b^(0+128)
  8284     0AD6  3186  264C  318A   	fcall	___fldiv
  8285     0AD9  0021               	movlb	1	; select bank1
  8286     0ADA  0823               	movf	(?___fldiv+3)^(0+128),w
  8287     0ADB  00EE               	movwf	(str2float@number+3)^(0+128)
  8288     0ADC  0822               	movf	(?___fldiv+2)^(0+128),w
  8289     0ADD  00ED               	movwf	(str2float@number+2)^(0+128)
  8290     0ADE  0821               	movf	(?___fldiv+1)^(0+128),w
  8291     0ADF  00EC               	movwf	(str2float@number+1)^(0+128)
  8292     0AE0  0820               	movf	?___fldiv^(0+128),w
  8293     0AE1  00EB               	movwf	str2float@number^(0+128)
  8294                           
  8295                           ;UART.c: 45:     }
  8296     0AE2  3001               	movlw	1
  8297     0AE3  07EA               	addwf	str2float@i^(0+128),f
  8298     0AE4                     l5845:
  8299     0AE4  0868               	movf	str2float@decimal_separator^(0+128),w
  8300     0AE5  1D03               	btfss	3,2
  8301     0AE6  2AC2               	goto	l5847
  8302     0AE7                     l5849:
  8303                           
  8304                           ;UART.c: 46:     return number;
  8305     0AE7  086E               	movf	(str2float@number+3)^(0+128),w
  8306     0AE8  00E7               	movwf	(?_str2float+3)^(0+128)
  8307     0AE9  086D               	movf	(str2float@number+2)^(0+128),w
  8308     0AEA  00E6               	movwf	(?_str2float+2)^(0+128)
  8309     0AEB  086C               	movf	(str2float@number+1)^(0+128),w
  8310     0AEC  00E5               	movwf	(?_str2float+1)^(0+128)
  8311     0AED  086B               	movf	str2float@number^(0+128),w
  8312     0AEE  00E4               	movwf	?_str2float^(0+128)
  8313     0AEF  0008               	return
  8314     0AF0                     __end_of_str2float:
  8315                           
  8316                           	psect	text3
  8317     064C                     __ptext3:	
  8318 ;; *************** function ___fldiv *****************
  8319 ;; Defined at:
  8320 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  a               4    0[BANK1 ] float 
  8323 ;;  b               4    4[BANK1 ] float 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;  grs             4   20[BANK1 ] unsigned long 
  8326 ;;  rem             4   13[BANK1 ] unsigned long 
  8327 ;;  new_exp         2   18[BANK1 ] short 
  8328 ;;  aexp            1   25[BANK1 ] unsigned char 
  8329 ;;  bexp            1   24[BANK1 ] unsigned char 
  8330 ;;  sign            1   17[BANK1 ] unsigned char 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  4    0[BANK1 ] unsigned char 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2, status,0
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8340 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;Total ram usage:       26 bytes
  8345 ;; Hardware stack levels used: 1
  8346 ;; Hardware stack levels required when called: 5
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_str2float
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354     064C                     ___fldiv:	
  8355                           ;psect for function ___fldiv
  8356                           
  8357                           
  8358                           ;incstack = 0
  8359                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8360     064C  0021               	movlb	1	; select bank1
  8361     064D  0827               	movf	(___fldiv@b^(0+128)+3),w
  8362     064E  3980               	andlw	128
  8363     064F  00B1               	movwf	___fldiv@sign^(0+128)
  8364     0650  3527               	lslf	(___fldiv@b^(0+128)+3),w
  8365     0651  00B8               	movwf	___fldiv@bexp^(0+128)
  8366     0652  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  8367     0653  1438               	bsf	___fldiv@bexp^(0+128),0
  8368     0654  0838               	movf	___fldiv@bexp^(0+128),w
  8369     0655  1903               	btfsc	3,2
  8370     0656  2E65               	goto	l5095
  8371     0657  0A38               	incf	___fldiv@bexp^(0+128),w
  8372     0658  1D03               	btfss	3,2
  8373     0659  2E62               	goto	l5091
  8374     065A  3000               	movlw	0
  8375     065B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8376     065C  3000               	movlw	0
  8377     065D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8378     065E  3000               	movlw	0
  8379     065F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8380     0660  3000               	movlw	0
  8381     0661  00A4               	movwf	___fldiv@b^(0+128)
  8382     0662                     l5091:
  8383     0662  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8384     0663  01A7               	clrf	(___fldiv@b^(0+128)+3)
  8385     0664  2E6D               	goto	l5097
  8386     0665                     l5095:
  8387     0665  3000               	movlw	0
  8388     0666  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8389     0667  3000               	movlw	0
  8390     0668  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8391     0669  3000               	movlw	0
  8392     066A  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8393     066B  3000               	movlw	0
  8394     066C  00A4               	movwf	___fldiv@b^(0+128)
  8395     066D                     l5097:
  8396     066D  0823               	movf	(___fldiv@a^(0+128)+3),w
  8397     066E  3980               	andlw	128
  8398     066F  06B1               	xorwf	___fldiv@sign^(0+128),f
  8399     0670  3523               	lslf	(___fldiv@a^(0+128)+3),w
  8400     0671  00B9               	movwf	___fldiv@aexp^(0+128)
  8401     0672  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  8402     0673  1439               	bsf	___fldiv@aexp^(0+128),0
  8403     0674  0839               	movf	___fldiv@aexp^(0+128),w
  8404     0675  1903               	btfsc	3,2
  8405     0676  2E85               	goto	l5115
  8406     0677  0A39               	incf	___fldiv@aexp^(0+128),w
  8407     0678  1D03               	btfss	3,2
  8408     0679  2E82               	goto	l5111
  8409     067A  3000               	movlw	0
  8410     067B  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8411     067C  3000               	movlw	0
  8412     067D  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8413     067E  3000               	movlw	0
  8414     067F  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8415     0680  3000               	movlw	0
  8416     0681  00A0               	movwf	___fldiv@a^(0+128)
  8417     0682                     l5111:
  8418     0682  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  8419     0683  01A3               	clrf	(___fldiv@a^(0+128)+3)
  8420     0684  2E8D               	goto	l1538
  8421     0685                     l5115:
  8422     0685  3000               	movlw	0
  8423     0686  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8424     0687  3000               	movlw	0
  8425     0688  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8426     0689  3000               	movlw	0
  8427     068A  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8428     068B  3000               	movlw	0
  8429     068C  00A0               	movwf	___fldiv@a^(0+128)
  8430     068D                     l1538:
  8431     068D  0823               	movf	(___fldiv@a+3)^(0+128),w
  8432     068E  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  8433     068F  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  8434     0690  0420               	iorwf	___fldiv@a^(0+128),w
  8435     0691  1D03               	skipz
  8436     0692  2EAA               	goto	l5125
  8437     0693  3000               	movlw	0
  8438     0694  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8439     0695  3000               	movlw	0
  8440     0696  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8441     0697  3000               	movlw	0
  8442     0698  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8443     0699  3000               	movlw	0
  8444     069A  00A4               	movwf	___fldiv@b^(0+128)
  8445     069B  3080               	movlw	128
  8446     069C  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  8447     069D  307F               	movlw	127
  8448     069E  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  8449     069F                     L1:
  8450     069F  0831               	movf	___fldiv@sign^(0+128),w
  8451     06A0  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8452     06A1  0827               	movf	(___fldiv@b+3)^(0+128),w
  8453     06A2  00A3               	movwf	(?___fldiv+3)^(0+128)
  8454     06A3  0826               	movf	(___fldiv@b+2)^(0+128),w
  8455     06A4  00A2               	movwf	(?___fldiv+2)^(0+128)
  8456     06A5  0825               	movf	(___fldiv@b+1)^(0+128),w
  8457     06A6  00A1               	movwf	(?___fldiv+1)^(0+128)
  8458     06A7  0824               	movf	___fldiv@b^(0+128),w
  8459     06A8  00A0               	movwf	?___fldiv^(0+128)
  8460     06A9  0008               	return
  8461     06AA                     l5125:
  8462     06AA  0838               	movf	___fldiv@bexp^(0+128),w
  8463     06AB  1D03               	btfss	3,2
  8464     06AC  2EB6               	goto	l5131
  8465     06AD  3000               	movlw	0
  8466     06AE  00A3               	movwf	(?___fldiv+3)^(0+128)
  8467     06AF  3000               	movlw	0
  8468     06B0  00A2               	movwf	(?___fldiv+2)^(0+128)
  8469     06B1  3000               	movlw	0
  8470     06B2  00A1               	movwf	(?___fldiv+1)^(0+128)
  8471     06B3  3000               	movlw	0
  8472     06B4  00A0               	movwf	?___fldiv^(0+128)
  8473     06B5  0008               	return
  8474     06B6                     l5131:
  8475     06B6  0838               	movf	___fldiv@bexp^(0+128),w
  8476     06B7  00A8               	movwf	??___fldiv^(0+128)
  8477     06B8  01A9               	clrf	(??___fldiv^(0+128)+1)
  8478     06B9  0829               	movf	(??___fldiv+1)^(0+128),w
  8479     06BA  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  8480     06BB  0839               	movf	___fldiv@aexp^(0+128),w
  8481     06BC  0228               	subwf	??___fldiv^(0+128),w
  8482     06BD  00AA               	movwf	(??___fldiv+2)^(0+128)
  8483     06BE  1C03               	skipc
  8484     06BF  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  8485     06C0  082A               	movf	(??___fldiv+2)^(0+128),w
  8486     06C1  3E7F               	addlw	127
  8487     06C2  00B2               	movwf	___fldiv@new_exp^(0+128)
  8488     06C3  3000               	movlw	0
  8489     06C4  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
  8490     06C5  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  8491     06C6  0827               	movf	(___fldiv@b+3)^(0+128),w
  8492     06C7  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  8493     06C8  0826               	movf	(___fldiv@b+2)^(0+128),w
  8494     06C9  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  8495     06CA  0825               	movf	(___fldiv@b+1)^(0+128),w
  8496     06CB  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  8497     06CC  0824               	movf	___fldiv@b^(0+128),w
  8498     06CD  00AD               	movwf	___fldiv@rem^(0+128)
  8499     06CE  3000               	movlw	0
  8500     06CF  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8501     06D0  3000               	movlw	0
  8502     06D1  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8503     06D2  3000               	movlw	0
  8504     06D3  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8505     06D4  3000               	movlw	0
  8506     06D5  00A4               	movwf	___fldiv@b^(0+128)
  8507     06D6  3000               	movlw	0
  8508     06D7  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  8509     06D8  3000               	movlw	0
  8510     06D9  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  8511     06DA  3000               	movlw	0
  8512     06DB  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  8513     06DC  3000               	movlw	0
  8514     06DD  00B4               	movwf	___fldiv@grs^(0+128)
  8515     06DE  01B9               	clrf	___fldiv@aexp^(0+128)
  8516     06DF                     l5159:
  8517     06DF  301A               	movlw	26
  8518     06E0  0239               	subwf	___fldiv@aexp^(0+128),w
  8519     06E1  1803               	btfsc	3,0
  8520     06E2  2F19               	goto	l5161
  8521     06E3  0839               	movf	___fldiv@aexp^(0+128),w
  8522     06E4  1903               	btfsc	3,2
  8523     06E5  2EFD               	goto	l5151
  8524     06E6  3001               	movlw	1
  8525     06E7                     u5975:
  8526     06E7  35AD               	lslf	___fldiv@rem^(0+128),f
  8527     06E8  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  8528     06E9  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  8529     06EA  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  8530     06EB  0B89               	decfsz	9,f
  8531     06EC  2EE7               	goto	u5975
  8532     06ED  3001               	movlw	1
  8533     06EE                     u5985:
  8534     06EE  35A4               	lslf	___fldiv@b^(0+128),f
  8535     06EF  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8536     06F0  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8537     06F1  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8538     06F2  0B89               	decfsz	9,f
  8539     06F3  2EEE               	goto	u5985
  8540     06F4  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  8541     06F5  1424               	bsf	___fldiv@b^(0+128),0
  8542     06F6  3001               	movlw	1
  8543     06F7                     u6005:
  8544     06F7  35B4               	lslf	___fldiv@grs^(0+128),f
  8545     06F8  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8546     06F9  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8547     06FA  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8548     06FB  0B89               	decfsz	9,f
  8549     06FC  2EF7               	goto	u6005
  8550     06FD                     l5151:
  8551     06FD  0823               	movf	(___fldiv@a+3)^(0+128),w
  8552     06FE  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  8553     06FF  1D03               	skipz
  8554     0700  2F0B               	goto	u6015
  8555     0701  0822               	movf	(___fldiv@a+2)^(0+128),w
  8556     0702  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  8557     0703  1D03               	skipz
  8558     0704  2F0B               	goto	u6015
  8559     0705  0821               	movf	(___fldiv@a+1)^(0+128),w
  8560     0706  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  8561     0707  1D03               	skipz
  8562     0708  2F0B               	goto	u6015
  8563     0709  0820               	movf	___fldiv@a^(0+128),w
  8564     070A  022D               	subwf	___fldiv@rem^(0+128),w
  8565     070B                     u6015:
  8566     070B  1C03               	skipc
  8567     070C  2F16               	goto	l5157
  8568     070D  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  8569     070E  0820               	movf	___fldiv@a^(0+128),w
  8570     070F  02AD               	subwf	___fldiv@rem^(0+128),f
  8571     0710  0821               	movf	(___fldiv@a+1)^(0+128),w
  8572     0711  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
  8573     0712  0822               	movf	(___fldiv@a+2)^(0+128),w
  8574     0713  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
  8575     0714  0823               	movf	(___fldiv@a+3)^(0+128),w
  8576     0715  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
  8577     0716                     l5157:
  8578     0716  3001               	movlw	1
  8579     0717  07B9               	addwf	___fldiv@aexp^(0+128),f
  8580     0718  2EDF               	goto	l5159
  8581     0719                     l5161:
  8582     0719  0830               	movf	(___fldiv@rem+3)^(0+128),w
  8583     071A  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  8584     071B  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  8585     071C  042D               	iorwf	___fldiv@rem^(0+128),w
  8586     071D  1D03               	btfss	3,2
  8587     071E  1434               	bsf	___fldiv@grs^(0+128),0
  8588     071F                     l5175:
  8589     071F  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  8590     0720  2F36               	goto	l5177
  8591     0721  3001               	movlw	1
  8592     0722                     u6045:
  8593     0722  35A4               	lslf	___fldiv@b^(0+128),f
  8594     0723  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8595     0724  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8596     0725  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8597     0726  0B89               	decfsz	9,f
  8598     0727  2F22               	goto	u6045
  8599     0728  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  8600     0729  1424               	bsf	___fldiv@b^(0+128),0
  8601     072A  3001               	movlw	1
  8602     072B                     u6065:
  8603     072B  35B4               	lslf	___fldiv@grs^(0+128),f
  8604     072C  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8605     072D  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8606     072E  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8607     072F  0B89               	decfsz	9,f
  8608     0730  2F2B               	goto	u6065
  8609     0731  30FF               	movlw	255
  8610     0732  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8611     0733  30FF               	movlw	255
  8612     0734  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8613     0735  2F1F               	goto	l5175
  8614     0736                     l5177:
  8615     0736  01B9               	clrf	___fldiv@aexp^(0+128)
  8616     0737  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8617     0738  2F4F               	goto	l5187
  8618     0739  30FF               	movlw	255
  8619     073A  0534               	andwf	___fldiv@grs^(0+128),w
  8620     073B  00A8               	movwf	??___fldiv^(0+128)
  8621     073C  30FF               	movlw	255
  8622     073D  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  8623     073E  00A9               	movwf	(??___fldiv^(0+128)+1)
  8624     073F  30FF               	movlw	255
  8625     0740  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  8626     0741  00AA               	movwf	(??___fldiv^(0+128)+2)
  8627     0742  307F               	movlw	127
  8628     0743  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  8629     0744  00AB               	movwf	(??___fldiv^(0+128)+3)
  8630     0745  082B               	movf	(??___fldiv+3)^(0+128),w
  8631     0746  042A               	iorwf	(??___fldiv+2)^(0+128),w
  8632     0747  0429               	iorwf	(??___fldiv+1)^(0+128),w
  8633     0748  0428               	iorwf	??___fldiv^(0+128),w
  8634     0749  1903               	skipnz
  8635     074A  1824               	btfsc	___fldiv@b^(0+128),0
  8636     074B  2F4D               	goto	l5183
  8637     074C  2F4F               	goto	l5187
  8638     074D                     l5183:
  8639     074D  3001               	movlw	1
  8640     074E  00B9               	movwf	___fldiv@aexp^(0+128)
  8641     074F                     l5187:
  8642     074F  0839               	movf	___fldiv@aexp^(0+128),w
  8643     0750  1903               	btfsc	3,2
  8644     0751  2F76               	goto	l5197
  8645     0752  3001               	movlw	1
  8646     0753  07A4               	addwf	___fldiv@b^(0+128),f
  8647     0754  3000               	movlw	0
  8648     0755  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
  8649     0756  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
  8650     0757  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
  8651     0758  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  8652     0759  2F76               	goto	l5197
  8653     075A  0824               	movf	___fldiv@b^(0+128),w
  8654     075B  00A8               	movwf	??___fldiv^(0+128)
  8655     075C  0825               	movf	(___fldiv@b+1)^(0+128),w
  8656     075D  00A9               	movwf	(??___fldiv^(0+128)+1)
  8657     075E  0826               	movf	(___fldiv@b+2)^(0+128),w
  8658     075F  00AA               	movwf	(??___fldiv^(0+128)+2)
  8659     0760  0827               	movf	(___fldiv@b+3)^(0+128),w
  8660     0761  00AB               	movwf	(??___fldiv^(0+128)+3)
  8661     0762  3001               	movlw	1
  8662     0763  00AC               	movwf	(??___fldiv+4)^(0+128)
  8663     0764                     u6135:
  8664     0764  37AB               	asrf	(??___fldiv^(0+128)+3),f
  8665     0765  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  8666     0766  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  8667     0767  0CA8               	rrf	??___fldiv^(0+128),f
  8668     0768  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  8669     0769  2F64               	goto	u6135
  8670     076A  082B               	movf	(??___fldiv+3)^(0+128),w
  8671     076B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8672     076C  082A               	movf	(??___fldiv+2)^(0+128),w
  8673     076D  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8674     076E  0829               	movf	(??___fldiv+1)^(0+128),w
  8675     076F  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8676     0770  0828               	movf	??___fldiv^(0+128),w
  8677     0771  00A4               	movwf	___fldiv@b^(0+128)
  8678     0772  3001               	movlw	1
  8679     0773  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8680     0774  3000               	movlw	0
  8681     0775  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8682     0776                     l5197:
  8683     0776  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8684     0777  3A80               	xorlw	128
  8685     0778  00A8               	movwf	??___fldiv^(0+128)
  8686     0779  3080               	movlw	128
  8687     077A  0228               	subwf	??___fldiv^(0+128),w
  8688     077B  1D03               	skipz
  8689     077C  2F7F               	goto	u6145
  8690     077D  30FF               	movlw	255
  8691     077E  0232               	subwf	___fldiv@new_exp^(0+128),w
  8692     077F                     u6145:
  8693     077F  1C03               	skipc
  8694     0780  2F8E               	goto	l1559
  8695     0781  30FF               	movlw	255
  8696     0782  0021               	movlb	1	; select bank1
  8697     0783  00B2               	movwf	___fldiv@new_exp^(0+128)
  8698     0784  3000               	movlw	0
  8699     0785  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  8700     0786  3000               	movlw	0
  8701     0787  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8702     0788  3000               	movlw	0
  8703     0789  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8704     078A  3000               	movlw	0
  8705     078B  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8706     078C  3000               	movlw	0
  8707     078D  00A4               	movwf	___fldiv@b^(0+128)
  8708     078E                     l1559:
  8709     078E  0021               	movlb	1	; select bank1
  8710     078F  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8711     0790  3A80               	xorlw	128
  8712     0791  00A8               	movwf	??___fldiv^(0+128)
  8713     0792  3080               	movlw	128
  8714     0793  0228               	subwf	??___fldiv^(0+128),w
  8715     0794  1D03               	skipz
  8716     0795  2F98               	goto	u6155
  8717     0796  3001               	movlw	1
  8718     0797  0232               	subwf	___fldiv@new_exp^(0+128),w
  8719     0798                     u6155:
  8720     0798  1803               	skipnc
  8721     0799  2FA6               	goto	l1560
  8722     079A  0021               	movlb	1	; select bank1
  8723     079B  01B2               	clrf	___fldiv@new_exp^(0+128)
  8724     079C  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  8725     079D  3000               	movlw	0
  8726     079E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8727     079F  3000               	movlw	0
  8728     07A0  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8729     07A1  3000               	movlw	0
  8730     07A2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8731     07A3  3000               	movlw	0
  8732     07A4  00A4               	movwf	___fldiv@b^(0+128)
  8733     07A5  01B1               	clrf	___fldiv@sign^(0+128)
  8734     07A6                     l1560:
  8735     07A6  0021               	movlb	1	; select bank1
  8736     07A7  0832               	movf	___fldiv@new_exp^(0+128),w
  8737     07A8  00B8               	movwf	___fldiv@bexp^(0+128)
  8738     07A9  1C38               	btfss	___fldiv@bexp^(0+128),0
  8739     07AA  2FAD               	goto	l5211
  8740     07AB  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8741     07AC  2FAF               	goto	l1562
  8742     07AD                     l5211:
  8743     07AD  307F               	movlw	127
  8744     07AE  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  8745     07AF                     l1562:
  8746     07AF  0838               	movf	___fldiv@bexp^(0+128),w
  8747     07B0  00A8               	movwf	??___fldiv^(0+128)
  8748     07B1  3001               	movlw	1
  8749     07B2                     u6175:
  8750     07B2  36A8               	lsrf	??___fldiv^(0+128),f
  8751     07B3  0B89               	decfsz	9,f
  8752     07B4  2FB2               	goto	u6175
  8753     07B5  0828               	movf	??___fldiv^(0+128),w
  8754     07B6  00A7               	movwf	(___fldiv@b^(0+128)+3)
  8755     07B7  2E9F               	goto	L1
  8756     07B8                     __end_of___fldiv:
  8757                           
  8758                           	psect	text4
  8759     1F35                     __ptext4:	
  8760 ;; *************** function _setSetpoint *****************
  8761 ;; Defined at:
  8762 ;;		line 45 in file "controller.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;		None
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8776 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8779 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8780 ;;Total ram usage:        2 bytes
  8781 ;; Hardware stack levels used: 1
  8782 ;; Hardware stack levels required when called: 5
  8783 ;; This function calls:
  8784 ;;		Nothing
  8785 ;; This function is called by:
  8786 ;;		_uartHandler
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790     1F35                     _setSetpoint:	
  8791                           ;psect for function _setSetpoint
  8792                           
  8793                           
  8794                           ;incstack = 0
  8795                           ; Regs used in _setSetpoint: [wreg]
  8796     1F35  0021               	movlb	1	; select bank1
  8797     1F36  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
  8798     1F37  0020               	movlb	0	; select bank0
  8799     1F38  00ED               	movwf	_setpoint+1
  8800     1F39  0021               	movlb	1	; select bank1
  8801     1F3A  082D               	movf	setSetpoint@new_setpoint^(0+128),w
  8802     1F3B  0020               	movlb	0	; select bank0
  8803     1F3C  00EC               	movwf	_setpoint
  8804     1F3D  0008               	return
  8805     1F3E                     __end_of_setSetpoint:
  8806                           
  8807                           	psect	text5
  8808     1F52                     __ptext5:	
  8809 ;; *************** function _setKp *****************
  8810 ;; Defined at:
  8811 ;;		line 47 in file "controller.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;  new_kp          4    0[BANK2 ] float 
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;		None
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8825 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;Total ram usage:        4 bytes
  8830 ;; Hardware stack levels used: 1
  8831 ;; Hardware stack levels required when called: 5
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_uartHandler
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839     1F52                     _setKp:	
  8840                           ;psect for function _setKp
  8841                           
  8842                           
  8843                           ;incstack = 0
  8844                           ; Regs used in _setKp: [wreg]
  8845     1F52  0022               	movlb	2	; select bank2
  8846     1F53  0851               	movf	(setKp@new_kp+3)^(0+256),w
  8847     1F54  00EF               	movwf	(_kp+3)^(0+256)
  8848     1F55  0850               	movf	(setKp@new_kp+2)^(0+256),w
  8849     1F56  00EE               	movwf	(_kp+2)^(0+256)
  8850     1F57  084F               	movf	(setKp@new_kp+1)^(0+256),w
  8851     1F58  00ED               	movwf	(_kp+1)^(0+256)
  8852     1F59  084E               	movf	setKp@new_kp^(0+256),w
  8853     1F5A  00EC               	movwf	_kp^(0+256)
  8854     1F5B  0008               	return
  8855     1F5C                     __end_of_setKp:
  8856                           
  8857                           	psect	text6
  8858     1F48                     __ptext6:	
  8859 ;; *************** function _setKi *****************
  8860 ;; Defined at:
  8861 ;;		line 48 in file "controller.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  new_ki          4    0[BANK2 ] float 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8875 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;Total ram usage:        4 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; Hardware stack levels required when called: 5
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		_uartHandler
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889     1F48                     _setKi:	
  8890                           ;psect for function _setKi
  8891                           
  8892                           
  8893                           ;incstack = 0
  8894                           ; Regs used in _setKi: [wreg]
  8895     1F48  0022               	movlb	2	; select bank2
  8896     1F49  0851               	movf	(setKi@new_ki+3)^(0+256),w
  8897     1F4A  00EB               	movwf	(_ki+3)^(0+256)
  8898     1F4B  0850               	movf	(setKi@new_ki+2)^(0+256),w
  8899     1F4C  00EA               	movwf	(_ki+2)^(0+256)
  8900     1F4D  084F               	movf	(setKi@new_ki+1)^(0+256),w
  8901     1F4E  00E9               	movwf	(_ki+1)^(0+256)
  8902     1F4F  084E               	movf	setKi@new_ki^(0+256),w
  8903     1F50  00E8               	movwf	_ki^(0+256)
  8904     1F51  0008               	return
  8905     1F52                     __end_of_setKi:
  8906                           
  8907                           	psect	text7
  8908     1430                     __ptext7:	
  8909 ;; *************** function _readLine *****************
  8910 ;; Defined at:
  8911 ;;		line 50 in file "UART.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1   71[BANK1 ] PTR unsigned char 
  8918 ;; Registers used:
  8919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8925 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;Total ram usage:        3 bytes
  8930 ;; Hardware stack levels used: 1
  8931 ;; Hardware stack levels required when called: 14
  8932 ;; This function calls:
  8933 ;;		_EUSART_IsRxReady
  8934 ;;		_EUSART_Read
  8935 ;;		_printf
  8936 ;; This function is called by:
  8937 ;;		_uartHandler
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941     1430                     _readLine:	
  8942                           ;psect for function _readLine
  8943                           
  8944     1430                     l892:	
  8945                           ;incstack = 0
  8946                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8947                           ;UART.c: 51:     static uint8_t index = 0;;UART.c: 52:     while (1) {
  8948                           
  8949                           
  8950                           ;UART.c: 53:         if (!EUSART_IsRxReady()) {
  8951     1430  319E  26D4  3194   	fcall	_EUSART_IsRxReady
  8952     1433  3A00               	xorlw	0
  8953     1434  1D03               	skipz
  8954     1435  2C40               	goto	l5861
  8955                           
  8956                           ;UART.c: 54:             line[index] = 0;
  8957     1436  0020               	movlb	0	; select bank0
  8958     1437  0865               	movf	readLine@index,w
  8959     1438  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  8960     1439  0086               	movwf	6
  8961     143A  3001               	movlw	1	; select bank3/4
  8962     143B  0087               	movwf	7
  8963     143C  0181               	clrf	1
  8964                           
  8965                           ;UART.c: 55:             return line + index;
  8966     143D  0865               	movf	readLine@index,w
  8967     143E  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  8968     143F  0008               	return
  8969     1440                     l5861:
  8970                           
  8971                           ;UART.c: 57:         if (index >= 20 - 1) {
  8972     1440  3013               	movlw	19
  8973     1441  0020               	movlb	0	; select bank0
  8974     1442  0265               	subwf	readLine@index,w
  8975     1443  1803               	btfsc	3,0
  8976     1444  2C49               	goto	l5867
  8977     1445  2C65               	goto	l5879
  8978     1446                     l5865:
  8979                           
  8980                           ;UART.c: 59:                 EUSART_Read();
  8981     1446  3191  214E  3194   	fcall	_EUSART_Read
  8982     1449                     l5867:
  8983                           
  8984                           ;UART.c: 58:             while (EUSART_IsRxReady()) {
  8985     1449  319E  26D4  3194   	fcall	_EUSART_IsRxReady
  8986     144C  3A00               	xorlw	0
  8987     144D  1D03               	skipz
  8988     144E  2C46               	goto	l5865
  8989                           
  8990                           ;UART.c: 61:             printf("input buffer overflow\r\n");
  8991     144F  3065               	movlw	low (STR_2| (0+32768))
  8992     1450  0021               	movlb	1	; select bank1
  8993     1451  00E0               	movwf	printf@fmt^(0+128)
  8994     1452  3098               	movlw	high (STR_2| (0+32768))
  8995     1453  00E1               	movwf	(printf@fmt^(0+128)+1)
  8996     1454  3190  201C  3194   	fcall	_printf
  8997                           
  8998                           ;UART.c: 62:             index = 0;
  8999     1457  0020               	movlb	0	; select bank0
  9000     1458  01E5               	clrf	readLine@index
  9001                           
  9002                           ;UART.c: 63:             line[index] = 0;
  9003     1459  0023               	movlb	3	; select bank3
  9004     145A  01C0               	clrf	_line^(0+384)
  9005     145B  2C63               	goto	l5875
  9006     145C                     l5883:
  9007                           
  9008                           ;UART.c: 69:             line[index + 1] = 0;
  9009     145C  0865               	movf	readLine@index,w
  9010     145D  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
  9011     145E  0086               	movwf	6
  9012     145F  3001               	movlw	1	; select bank3/4
  9013     1460  0087               	movwf	7
  9014     1461  0181               	clrf	1
  9015                           
  9016                           ;UART.c: 70:             index = 0;
  9017     1462  01E5               	clrf	readLine@index
  9018     1463                     l5875:
  9019                           
  9020                           ;UART.c: 64:             return line;
  9021     1463  30C0               	movlw	(low (_line| (0+256)))& (0+255)
  9022     1464  0008               	return
  9023     1465                     l5879:
  9024                           
  9025                           ;UART.c: 67:         line[index] = EUSART_Read();
  9026     1465  3191  214E  3194   	fcall	_EUSART_Read
  9027     1468  0021               	movlb	1	; select bank1
  9028     1469  00E9               	movwf	??_readLine^(0+128)
  9029     146A  0020               	movlb	0	; select bank0
  9030     146B  0865               	movf	readLine@index,w
  9031     146C  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9032     146D  0086               	movwf	6
  9033     146E  3001               	movlw	1	; select bank3/4
  9034     146F  0087               	movwf	7
  9035     1470  0021               	movlb	1	; select bank1
  9036     1471  0869               	movf	??_readLine^(0+128),w
  9037     1472  0081               	movwf	1
  9038                           
  9039                           ;UART.c: 68:         if (line[index] == '\n') {
  9040     1473  0020               	movlb	0	; select bank0
  9041     1474  0865               	movf	readLine@index,w
  9042     1475  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9043     1476  0086               	movwf	6
  9044     1477  3001               	movlw	1	; select bank3/4
  9045     1478  0087               	movwf	7
  9046     1479  300A               	movlw	10
  9047     147A  0601               	xorwf	1,w
  9048     147B  1903               	btfsc	3,2
  9049     147C  2C5C               	goto	l5883
  9050                           
  9051                           ;UART.c: 73:         index++;
  9052     147D  3001               	movlw	1
  9053     147E  07E5               	addwf	readLine@index,f
  9054     147F  2C30               	goto	l892
  9055     1480                     __end_of_readLine:
  9056                           
  9057                           	psect	text8
  9058     114E                     __ptext8:	
  9059 ;; *************** function _EUSART_Read *****************
  9060 ;; Defined at:
  9061 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;		None
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  readValue       1    1[BANK1 ] unsigned char 
  9066 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      unsigned char 
  9069 ;; Registers used:
  9070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;Total ram usage:        2 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; Hardware stack levels required when called: 5
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_readLine
  9087 ;;		_getch
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091     114E                     _EUSART_Read:	
  9092                           ;psect for function _EUSART_Read
  9093                           
  9094                           
  9095                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
  9096                           
  9097                           ;incstack = 0
  9098                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9099     114E  0020               	movlb	0	; select bank0
  9100     114F  0867               	movf	_eusartRxTail,w
  9101     1150  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  9102     1151  0086               	movwf	6
  9103     1152  3001               	movlw	1	; select bank2/3
  9104     1153  0087               	movwf	7
  9105     1154  0801               	movf	1,w
  9106     1155  0021               	movlb	1	; select bank1
  9107     1156  00A1               	movwf	EUSART_Read@readValue^(0+128)
  9108                           
  9109                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
  9110     1157  0020               	movlb	0	; select bank0
  9111     1158  0867               	movf	_eusartRxTail,w	;volatile
  9112     1159  3E01               	addlw	1
  9113     115A  3907               	andlw	7
  9114     115B  0021               	movlb	1	; select bank1
  9115     115C  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
  9116                           
  9117                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
  9118     115D  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
  9119     115E  0020               	movlb	0	; select bank0
  9120     115F  00E7               	movwf	_eusartRxTail	;volatile
  9121                           
  9122                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
  9123     1160  0021               	movlb	1	; select bank1
  9124     1161  1291               	bcf	17,5	;volatile
  9125                           
  9126                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
  9127     1162  0020               	movlb	0	; select bank0
  9128     1163  0866               	movf	_eusartRxCount,w	;volatile
  9129     1164  1903               	btfsc	3,2
  9130     1165  2968               	goto	l4989
  9131                           
  9132                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
  9133     1166  3001               	movlw	1
  9134     1167  02E6               	subwf	_eusartRxCount,f	;volatile
  9135     1168                     l4989:
  9136                           
  9137                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
  9138     1168  0021               	movlb	1	; select bank1
  9139     1169  1691               	bsf	17,5	;volatile
  9140                           
  9141                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
  9142     116A  0821               	movf	EUSART_Read@readValue^(0+128),w
  9143     116B  0008               	return
  9144     116C                     __end_of_EUSART_Read:
  9145                           
  9146                           	psect	text9
  9147     1ED4                     __ptext9:	
  9148 ;; *************** function _EUSART_IsRxReady *****************
  9149 ;; Defined at:
  9150 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;		None
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      _Bool 
  9157 ;; Registers used:
  9158 ;;		wreg, status,2, status,0
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;Total ram usage:        0 bytes
  9169 ;; Hardware stack levels used: 1
  9170 ;; Hardware stack levels required when called: 5
  9171 ;; This function calls:
  9172 ;;		Nothing
  9173 ;; This function is called by:
  9174 ;;		_readLine
  9175 ;;		_getch
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179     1ED4                     _EUSART_IsRxReady:	
  9180                           ;psect for function _EUSART_IsRxReady
  9181                           
  9182                           
  9183                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
  9184                           
  9185                           ;incstack = 0
  9186                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
  9187     1ED4  0020               	movlb	0	; select bank0
  9188     1ED5  0866               	movf	_eusartRxCount,w	;volatile
  9189     1ED6  1903               	btfsc	3,2
  9190     1ED7  2EDA               	goto	u5730
  9191     1ED8  3001               	movlw	1
  9192     1ED9  0008               	return
  9193     1EDA                     u5730:
  9194     1EDA  3000               	movlw	0
  9195     1EDB  0008               	return
  9196     1EDC                     __end_of_EUSART_IsRxReady:
  9197                           
  9198                           	psect	text10
  9199     171C                     __ptext10:	
  9200 ;; *************** function _atoi *****************
  9201 ;; Defined at:
  9202 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;  s               1    6[BANK1 ] PTR const unsigned char 
  9205 ;;		 -> line(20), 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  n               2   11[BANK1 ] int 
  9208 ;;  neg             1   10[BANK1 ] _Bool 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  2    6[BANK1 ] int 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9218 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;Total ram usage:        7 bytes
  9223 ;; Hardware stack levels used: 1
  9224 ;; Hardware stack levels required when called: 6
  9225 ;; This function calls:
  9226 ;;		___wmul
  9227 ;; This function is called by:
  9228 ;;		_uartHandler
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232     171C                     _atoi:	
  9233                           ;psect for function _atoi
  9234                           
  9235                           
  9236                           ;incstack = 0
  9237                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9238     171C  0021               	movlb	1	; select bank1
  9239     171D  01AB               	clrf	atoi@n^(0+128)
  9240     171E  01AC               	clrf	(atoi@n+1)^(0+128)
  9241     171F  01AA               	clrf	atoi@neg^(0+128)
  9242     1720                     l5909:
  9243     1720  0826               	movf	atoi@s^(0+128),w
  9244     1721  0086               	movwf	6
  9245     1722  3001               	movlw	1	; select bank2/3
  9246     1723  0087               	movwf	7
  9247     1724  3020               	movlw	32
  9248     1725  0601               	xorwf	1,w
  9249     1726  1D03               	btfss	3,2
  9250     1727  2F2B               	goto	l5911
  9251     1728                     l5907:
  9252     1728  3001               	movlw	1
  9253     1729  07A6               	addwf	atoi@s^(0+128),f
  9254     172A  2F20               	goto	l5909
  9255     172B                     l5911:
  9256     172B  0826               	movf	atoi@s^(0+128),w
  9257     172C  0086               	movwf	6
  9258     172D  3001               	movlw	1	; select bank2/3
  9259     172E  0087               	movwf	7
  9260     172F  30F7               	movlw	247
  9261     1730  0701               	addwf	1,w
  9262     1731  00A8               	movwf	??_atoi^(0+128)
  9263     1732  3005               	movlw	5
  9264     1733  0228               	subwf	??_atoi^(0+128),w
  9265     1734  1C03               	skipc
  9266     1735  2F28               	goto	l5907
  9267     1736  0826               	movf	atoi@s^(0+128),w
  9268     1737  0086               	movwf	6
  9269     1738  3001               	movlw	1	; select bank2/3
  9270     1739  0087               	movwf	7
  9271     173A  302D               	movlw	45
  9272     173B  0601               	xorwf	1,w
  9273     173C  1D03               	btfss	3,2
  9274     173D  2F41               	goto	l5919
  9275     173E  3001               	movlw	1
  9276     173F  00AA               	movwf	atoi@neg^(0+128)
  9277     1740  2F71               	goto	l5917
  9278     1741                     l5919:
  9279     1741  0826               	movf	atoi@s^(0+128),w
  9280     1742  0086               	movwf	6
  9281     1743  3001               	movlw	1	; select bank2/3
  9282     1744  0087               	movwf	7
  9283     1745  302B               	movlw	43
  9284     1746  0601               	xorwf	1,w
  9285     1747  1903               	btfsc	3,2
  9286     1748  2F71               	goto	l5917
  9287     1749                     l5927:
  9288     1749  0826               	movf	atoi@s^(0+128),w
  9289     174A  0086               	movwf	6
  9290     174B  3001               	movlw	1	; select bank2/3
  9291     174C  0087               	movwf	7
  9292     174D  30D0               	movlw	208
  9293     174E  0701               	addwf	1,w
  9294     174F  00A8               	movwf	??_atoi^(0+128)
  9295     1750  300A               	movlw	10
  9296     1751  0228               	subwf	??_atoi^(0+128),w
  9297     1752  1803               	btfsc	3,0
  9298     1753  2F74               	goto	l5929
  9299     1754  0826               	movf	atoi@s^(0+128),w
  9300     1755  0086               	movwf	6
  9301     1756  3001               	movlw	1	; select bank2/3
  9302     1757  0087               	movwf	7
  9303     1758  082C               	movf	(atoi@n+1)^(0+128),w
  9304     1759  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  9305     175A  082B               	movf	atoi@n^(0+128),w
  9306     175B  00A0               	movwf	___wmul@multiplier^(0+128)
  9307     175C  300A               	movlw	10
  9308     175D  00A2               	movwf	___wmul@multiplicand^(0+128)
  9309     175E  3000               	movlw	0
  9310     175F  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  9311     1760  3190  20F8  3197   	fcall	___wmul
  9312     1763  0021               	movlb	1	; select bank1
  9313     1764  0821               	movf	(?___wmul+1)^(0+128),w
  9314     1765  00A9               	movwf	(??_atoi^(0+128)+1)
  9315     1766  0801               	movf	1,w
  9316     1767  0220               	subwf	?___wmul^(0+128),w
  9317     1768  00A8               	movwf	??_atoi^(0+128)
  9318     1769  1C03               	skipc
  9319     176A  03A9               	decf	(??_atoi^(0+128)+1),f
  9320     176B  0828               	movf	??_atoi^(0+128),w
  9321     176C  3E30               	addlw	48
  9322     176D  00AB               	movwf	atoi@n^(0+128)
  9323     176E  3000               	movlw	0
  9324     176F  3D29               	addwfc	(??_atoi+1)^(0+128),w
  9325     1770  00AC               	movwf	(atoi@n+1)^(0+128)
  9326     1771                     l5917:
  9327     1771  3001               	movlw	1
  9328     1772  07A6               	addwf	atoi@s^(0+128),f
  9329     1773  2F49               	goto	l5927
  9330     1774                     l5929:
  9331     1774  082A               	movf	atoi@neg^(0+128),w
  9332     1775  1D03               	btfss	3,2
  9333     1776  2F83               	goto	l5933
  9334     1777  092B               	comf	atoi@n^(0+128),w
  9335     1778  00A8               	movwf	??_atoi^(0+128)
  9336     1779  092C               	comf	(atoi@n+1)^(0+128),w
  9337     177A  00A9               	movwf	(??_atoi^(0+128)+1)
  9338     177B  0AA8               	incf	??_atoi^(0+128),f
  9339     177C  1903               	skipnz
  9340     177D  0AA9               	incf	(??_atoi^(0+128)+1),f
  9341     177E  0828               	movf	??_atoi^(0+128),w
  9342     177F  00A6               	movwf	?_atoi^(0+128)
  9343     1780  0829               	movf	(??_atoi+1)^(0+128),w
  9344     1781  00A7               	movwf	(?_atoi+1)^(0+128)
  9345     1782  0008               	return
  9346     1783                     l5933:
  9347     1783  082C               	movf	(atoi@n+1)^(0+128),w
  9348     1784  00A7               	movwf	(?_atoi+1)^(0+128)
  9349     1785  082B               	movf	atoi@n^(0+128),w
  9350     1786  00A6               	movwf	?_atoi^(0+128)
  9351     1787  0008               	return
  9352     1788                     __end_of_atoi:
  9353                           
  9354                           	psect	text11
  9355     1788                     __ptext11:	
  9356 ;; *************** function _printLogs *****************
  9357 ;; Defined at:
  9358 ;;		line 77 in file "UART.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;Total ram usage:        0 bytes
  9377 ;; Hardware stack levels used: 1
  9378 ;; Hardware stack levels required when called: 15
  9379 ;; This function calls:
  9380 ;;		_getDutycycle
  9381 ;;		_getHoogtesensor
  9382 ;;		_getKi
  9383 ;;		_getKp
  9384 ;;		_getSetpoint
  9385 ;;		_printFloat
  9386 ;;		_printf
  9387 ;; This function is called by:
  9388 ;;		_main
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392     1788                     _printLogs:	
  9393                           ;psect for function _printLogs
  9394                           
  9395                           
  9396                           ;UART.c: 79:     if (mustPrintLogs) {
  9397                           
  9398                           ;incstack = 0
  9399                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9400     1788  0020               	movlb	0	; select bank0
  9401     1789  086E               	movf	_mustPrintLogs,w
  9402     178A  1903               	btfsc	3,2
  9403     178B  0008               	return
  9404                           
  9405                           ;UART.c: 80:         printf("hoogte: %u", getHoogtesensor());
  9406     178C  30D7               	movlw	low (STR_3| (0+32768))
  9407     178D  0021               	movlb	1	; select bank1
  9408     178E  00E0               	movwf	printf@fmt^(0+128)
  9409     178F  3098               	movlw	high (STR_3| (0+32768))
  9410     1790  00E1               	movwf	(printf@fmt^(0+128)+1)
  9411     1791  319F  2708  3197   	fcall	_getHoogtesensor
  9412     1794  0021               	movlb	1	; select bank1
  9413     1795  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
  9414     1796  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9415     1797  0820               	movf	?_getHoogtesensor^(0+128),w
  9416     1798  00E2               	movwf	(?_printf^(0+128)+2)
  9417     1799  3190  201C  3197   	fcall	_printf
  9418                           
  9419                           ;UART.c: 81:         printf(", setpoint: %u", getSetpoint());
  9420     179C  30AE               	movlw	low (STR_4| (0+32768))
  9421     179D  0021               	movlb	1	; select bank1
  9422     179E  00E0               	movwf	printf@fmt^(0+128)
  9423     179F  3098               	movlw	high (STR_4| (0+32768))
  9424     17A0  00E1               	movwf	(printf@fmt^(0+128)+1)
  9425     17A1  319F  2711  3197   	fcall	_getSetpoint
  9426     17A4  0021               	movlb	1	; select bank1
  9427     17A5  0821               	movf	(?_getSetpoint+1)^(0+128),w
  9428     17A6  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9429     17A7  0820               	movf	?_getSetpoint^(0+128),w
  9430     17A8  00E2               	movwf	(?_printf^(0+128)+2)
  9431     17A9  3190  201C  3197   	fcall	_printf
  9432                           
  9433                           ;UART.c: 82:         printf(", duty cycle: %u", getDutycycle());
  9434     17AC  308E               	movlw	low (STR_5| (0+32768))
  9435     17AD  0021               	movlb	1	; select bank1
  9436     17AE  00E0               	movwf	printf@fmt^(0+128)
  9437     17AF  3098               	movlw	high (STR_5| (0+32768))
  9438     17B0  00E1               	movwf	(printf@fmt^(0+128)+1)
  9439     17B1  319F  272C  3197   	fcall	_getDutycycle
  9440     17B4  0021               	movlb	1	; select bank1
  9441     17B5  0821               	movf	(?_getDutycycle+1)^(0+128),w
  9442     17B6  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9443     17B7  0820               	movf	?_getDutycycle^(0+128),w
  9444     17B8  00E2               	movwf	(?_printf^(0+128)+2)
  9445     17B9  3190  201C  3197   	fcall	_printf
  9446                           
  9447                           ;UART.c: 85:         printf(", kp: "); printFloat(getKp());
  9448     17BC  30FB               	movlw	low (STR_6| (0+32768))
  9449     17BD  0021               	movlb	1	; select bank1
  9450     17BE  00E0               	movwf	printf@fmt^(0+128)
  9451     17BF  3098               	movlw	high (STR_6| (0+32768))
  9452     17C0  00E1               	movwf	(printf@fmt^(0+128)+1)
  9453     17C1  3190  201C  3197   	fcall	_printf
  9454     17C4  3188  2001  3197   	fcall	_getKp
  9455     17C7  0021               	movlb	1	; select bank1
  9456     17C8  0823               	movf	(?_getKp+3)^(0+128),w
  9457     17C9  0022               	movlb	2	; select bank2
  9458     17CA  00D1               	movwf	(printFloat@number+3)^(0+256)
  9459     17CB  0021               	movlb	1	; select bank1
  9460     17CC  0822               	movf	(?_getKp+2)^(0+128),w
  9461     17CD  0022               	movlb	2	; select bank2
  9462     17CE  00D0               	movwf	(printFloat@number+2)^(0+256)
  9463     17CF  0021               	movlb	1	; select bank1
  9464     17D0  0821               	movf	(?_getKp+1)^(0+128),w
  9465     17D1  0022               	movlb	2	; select bank2
  9466     17D2  00CF               	movwf	(printFloat@number+1)^(0+256)
  9467     17D3  0021               	movlb	1	; select bank1
  9468     17D4  0820               	movf	?_getKp^(0+128),w
  9469     17D5  0022               	movlb	2	; select bank2
  9470     17D6  00CE               	movwf	printFloat@number^(0+256)
  9471     17D7  3188  2012  3197   	fcall	_printFloat
  9472                           
  9473                           ;UART.c: 86:         printf(", ki: "); printFloat(getKi());
  9474     17DA  30F4               	movlw	low (STR_7| (0+32768))
  9475     17DB  0021               	movlb	1	; select bank1
  9476     17DC  00E0               	movwf	printf@fmt^(0+128)
  9477     17DD  3098               	movlw	high (STR_7| (0+32768))
  9478     17DE  00E1               	movwf	(printf@fmt^(0+128)+1)
  9479     17DF  3190  201C  3197   	fcall	_printf
  9480     17E2  3190  205D  3197   	fcall	_getKi
  9481     17E5  0021               	movlb	1	; select bank1
  9482     17E6  0823               	movf	(?_getKi+3)^(0+128),w
  9483     17E7  0022               	movlb	2	; select bank2
  9484     17E8  00D1               	movwf	(printFloat@number+3)^(0+256)
  9485     17E9  0021               	movlb	1	; select bank1
  9486     17EA  0822               	movf	(?_getKi+2)^(0+128),w
  9487     17EB  0022               	movlb	2	; select bank2
  9488     17EC  00D0               	movwf	(printFloat@number+2)^(0+256)
  9489     17ED  0021               	movlb	1	; select bank1
  9490     17EE  0821               	movf	(?_getKi+1)^(0+128),w
  9491     17EF  0022               	movlb	2	; select bank2
  9492     17F0  00CF               	movwf	(printFloat@number+1)^(0+256)
  9493     17F1  0021               	movlb	1	; select bank1
  9494     17F2  0820               	movf	?_getKi^(0+128),w
  9495     17F3  0022               	movlb	2	; select bank2
  9496     17F4  00CE               	movwf	printFloat@number^(0+256)
  9497     17F5  3188  2012  3197   	fcall	_printFloat
  9498                           
  9499                           ;UART.c: 87:         printf("\r\n");
  9500     17F8  30AB               	movlw	low ((STR_12+12)| (0+32768))
  9501     17F9  0021               	movlb	1	; select bank1
  9502     17FA  00E0               	movwf	printf@fmt^(0+128)
  9503     17FB  3098               	movlw	high ((STR_12+12)| (0+32768))
  9504     17FC  00E1               	movwf	(printf@fmt^(0+128)+1)
  9505     17FD  3190  201C         	fcall	_printf
  9506     17FF  0008               	return
  9507     1800                     __end_of_printLogs:
  9508                           
  9509                           	psect	text12
  9510     0812                     __ptext12:	
  9511 ;; *************** function _printFloat *****************
  9512 ;; Defined at:
  9513 ;;		line 14 in file "UART.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  number          4    0[BANK2 ] float 
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;  fractional_p    2    4[BANK2 ] unsigned short 
  9518 ;;  integer_part    1    6[BANK2 ] char 
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      void 
  9521 ;; Registers used:
  9522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9528 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;Total ram usage:        9 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; Hardware stack levels required when called: 14
  9535 ;; This function calls:
  9536 ;;		___flmul
  9537 ;;		___flsub
  9538 ;;		___fltol
  9539 ;;		___xxtofl
  9540 ;;		_printf
  9541 ;; This function is called by:
  9542 ;;		_printLogs
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546     0812                     _printFloat:	
  9547                           ;psect for function _printFloat
  9548                           
  9549                           
  9550                           ;UART.c: 15:     int8_t integer_part = (int8_t) number;
  9551                           
  9552                           ;incstack = 0
  9553                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9554     0812  0022               	movlb	2	; select bank2
  9555     0813  0851               	movf	(printFloat@number+3)^(0+256),w
  9556     0814  0021               	movlb	1	; select bank1
  9557     0815  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9558     0816  0022               	movlb	2	; select bank2
  9559     0817  0850               	movf	(printFloat@number+2)^(0+256),w
  9560     0818  0021               	movlb	1	; select bank1
  9561     0819  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9562     081A  0022               	movlb	2	; select bank2
  9563     081B  084F               	movf	(printFloat@number+1)^(0+256),w
  9564     081C  0021               	movlb	1	; select bank1
  9565     081D  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9566     081E  0022               	movlb	2	; select bank2
  9567     081F  084E               	movf	printFloat@number^(0+256),w
  9568     0820  0021               	movlb	1	; select bank1
  9569     0821  00E4               	movwf	___fltol@f1^(0+128)
  9570     0822  3195  25E7  3188   	fcall	___fltol
  9571     0825  0021               	movlb	1	; select bank1
  9572     0826  0864               	movf	?___fltol^(0+128),w
  9573     0827  0022               	movlb	2	; select bank2
  9574     0828  00D4               	movwf	printFloat@integer_part^(0+256)
  9575                           
  9576                           ;UART.c: 16:     uint16_t fractional_part = (uint16_t) ((number - integer_part) * 1000);
  9577     0829  0851               	movf	(printFloat@number+3)^(0+256),w
  9578     082A  0021               	movlb	1	; select bank1
  9579     082B  00C9               	movwf	(___flsub@b+3)^(0+128)
  9580     082C  0022               	movlb	2	; select bank2
  9581     082D  0850               	movf	(printFloat@number+2)^(0+256),w
  9582     082E  0021               	movlb	1	; select bank1
  9583     082F  00C8               	movwf	(___flsub@b+2)^(0+128)
  9584     0830  0022               	movlb	2	; select bank2
  9585     0831  084F               	movf	(printFloat@number+1)^(0+256),w
  9586     0832  0021               	movlb	1	; select bank1
  9587     0833  00C7               	movwf	(___flsub@b+1)^(0+128)
  9588     0834  0022               	movlb	2	; select bank2
  9589     0835  084E               	movf	printFloat@number^(0+256),w
  9590     0836  0021               	movlb	1	; select bank1
  9591     0837  00C6               	movwf	___flsub@b^(0+128)
  9592     0838  0022               	movlb	2	; select bank2
  9593     0839  0854               	movf	printFloat@integer_part^(0+256),w
  9594     083A  0021               	movlb	1	; select bank1
  9595     083B  00EE               	movwf	??_printFloat^(0+128)
  9596     083C  01EF               	clrf	(??_printFloat^(0+128)+1)
  9597     083D  1BEE               	btfsc	??_printFloat^(0+128),7
  9598     083E  03EF               	decf	(??_printFloat^(0+128)+1),f
  9599     083F  086E               	movf	??_printFloat^(0+128),w
  9600     0840  00A0               	movwf	___xxtofl@val^(0+128)
  9601     0841  086F               	movf	(??_printFloat+1)^(0+128),w
  9602     0842  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  9603     0843  0D89               	rlf	9,f
  9604     0844  3B89               	subwfb	9,f
  9605     0845  0989               	comf	9,f
  9606     0846  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  9607     0847  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  9608     0848  3001               	movlw	1
  9609     0849  3189  2124  3188   	fcall	___xxtofl
  9610     084C  0021               	movlb	1	; select bank1
  9611     084D  0823               	movf	(?___xxtofl+3)^(0+128),w
  9612     084E  00C5               	movwf	(___flsub@a+3)^(0+128)
  9613     084F  0822               	movf	(?___xxtofl+2)^(0+128),w
  9614     0850  00C4               	movwf	(___flsub@a+2)^(0+128)
  9615     0851  0821               	movf	(?___xxtofl+1)^(0+128),w
  9616     0852  00C3               	movwf	(___flsub@a+1)^(0+128)
  9617     0853  0820               	movf	?___xxtofl^(0+128),w
  9618     0854  00C2               	movwf	___flsub@a^(0+128)
  9619     0855  3191  218B  3188   	fcall	___flsub
  9620     0858  0021               	movlb	1	; select bank1
  9621     0859  0845               	movf	(?___flsub+3)^(0+128),w
  9622     085A  00D1               	movwf	(___flmul@a+3)^(0+128)
  9623     085B  0844               	movf	(?___flsub+2)^(0+128),w
  9624     085C  00D0               	movwf	(___flmul@a+2)^(0+128)
  9625     085D  0843               	movf	(?___flsub+1)^(0+128),w
  9626     085E  00CF               	movwf	(___flmul@a+1)^(0+128)
  9627     085F  0842               	movf	?___flsub^(0+128),w
  9628     0860  00CE               	movwf	___flmul@a^(0+128)
  9629     0861  3044               	movlw	68
  9630     0862  00CD               	movwf	(___flmul@b+3)^(0+128)
  9631     0863  307A               	movlw	122
  9632     0864  00CC               	movwf	(___flmul@b+2)^(0+128)
  9633     0865  3000               	movlw	0
  9634     0866  00CB               	movwf	(___flmul@b+1)^(0+128)
  9635     0867  3000               	movlw	0
  9636     0868  00CA               	movwf	___flmul@b^(0+128)
  9637     0869  3180  2075  3188   	fcall	___flmul
  9638     086C  0021               	movlb	1	; select bank1
  9639     086D  084D               	movf	(?___flmul+3)^(0+128),w
  9640     086E  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9641     086F  084C               	movf	(?___flmul+2)^(0+128),w
  9642     0870  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9643     0871  084B               	movf	(?___flmul+1)^(0+128),w
  9644     0872  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9645     0873  084A               	movf	?___flmul^(0+128),w
  9646     0874  00E4               	movwf	___fltol@f1^(0+128)
  9647     0875  3195  25E7  3188   	fcall	___fltol
  9648     0878  0021               	movlb	1	; select bank1
  9649     0879  0865               	movf	(?___fltol+1)^(0+128),w
  9650     087A  0022               	movlb	2	; select bank2
  9651     087B  00D3               	movwf	(printFloat@fractional_part+1)^(0+256)
  9652     087C  0021               	movlb	1	; select bank1
  9653     087D  0864               	movf	?___fltol^(0+128),w
  9654     087E  0022               	movlb	2	; select bank2
  9655     087F  00D2               	movwf	printFloat@fractional_part^(0+256)
  9656                           
  9657                           ;UART.c: 17:     printf("%i.%03u", integer_part, fractional_part);
  9658     0880  30EC               	movlw	low (STR_1| (0+32768))
  9659     0881  0021               	movlb	1	; select bank1
  9660     0882  00E0               	movwf	printf@fmt^(0+128)
  9661     0883  3098               	movlw	high (STR_1| (0+32768))
  9662     0884  00E1               	movwf	(printf@fmt^(0+128)+1)
  9663     0885  0022               	movlb	2	; select bank2
  9664     0886  0854               	movf	printFloat@integer_part^(0+256),w
  9665     0887  0021               	movlb	1	; select bank1
  9666     0888  00E2               	movwf	(?_printf^(0+128)+2)
  9667     0889  01E3               	clrf	((?_printf+1)^(0+128)+2)
  9668     088A  1BE2               	btfsc	(?_printf^(0+128)+2),7
  9669     088B  03E3               	decf	((?_printf+1)^(0+128)+2),f
  9670     088C  0022               	movlb	2	; select bank2
  9671     088D  0853               	movf	(printFloat@fractional_part+1)^(0+256),w
  9672     088E  0021               	movlb	1	; select bank1
  9673     088F  00E5               	movwf	((?_printf+1)^(0+128)+4)
  9674     0890  0022               	movlb	2	; select bank2
  9675     0891  0852               	movf	printFloat@fractional_part^(0+256),w
  9676     0892  0021               	movlb	1	; select bank1
  9677     0893  00E4               	movwf	(?_printf^(0+128)+4)
  9678     0894  3190  201C         	fcall	_printf
  9679     0896  0008               	return
  9680     0897                     __end_of_printFloat:
  9681                           
  9682                           	psect	text13
  9683     101C                     __ptext13:	
  9684 ;; *************** function _printf *****************
  9685 ;; Defined at:
  9686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  fmt             2   64[BANK1 ] PTR const unsigned char 
  9689 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9690 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9691 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9692 ;;		 -> STR_1(8), 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;  ret             2    0        int 
  9695 ;;  ap              1   70[BANK1 ] PTR void [1]
  9696 ;;		 -> ?_printf(2), 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  2   64[BANK1 ] int 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9706 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;Total ram usage:        7 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 13
  9713 ;; This function calls:
  9714 ;;		_vfprintf
  9715 ;; This function is called by:
  9716 ;;		_printFloat
  9717 ;;		_readLine
  9718 ;;		_printLogs
  9719 ;;		_uartHandler
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723     101C                     _printf:	
  9724                           ;psect for function _printf
  9725                           
  9726                           
  9727                           ;incstack = 0
  9728                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9729     101C  30E2               	movlw	(low ((?_printf| 0+2)))& (0+255)
  9730     101D  0021               	movlb	1	; select bank1
  9731     101E  00E6               	movwf	printf@ap^(0+128)
  9732     101F  3000               	movlw	0
  9733     1020  00D8               	movwf	vfprintf@fp^(0+128)
  9734     1021  00D9               	movwf	(vfprintf@fp+1)^(0+128)
  9735     1022  0861               	movf	(printf@fmt+1)^(0+128),w
  9736     1023  00DB               	movwf	(vfprintf@fmt+1)^(0+128)
  9737     1024  0860               	movf	printf@fmt^(0+128),w
  9738     1025  00DA               	movwf	vfprintf@fmt^(0+128)
  9739     1026  30E6               	movlw	(low (printf@ap| 0))& (0+255)
  9740     1027  00DC               	movwf	vfprintf@ap^(0+128)
  9741     1028  3191  2114         	fcall	_vfprintf
  9742     102A  0008               	return
  9743     102B                     __end_of_printf:
  9744                           
  9745                           	psect	text14
  9746     1114                     __ptext14:	
  9747 ;; *************** function _vfprintf *****************
  9748 ;; Defined at:
  9749 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  fp              2   56[BANK1 ] PTR struct _IO_FILE
  9752 ;;		 -> NULL(0), 
  9753 ;;  fmt             2   58[BANK1 ] PTR const unsigned char 
  9754 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9755 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9756 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9757 ;;		 -> STR_1(8), 
  9758 ;;  ap              1   60[BANK1 ] PTR PTR void 
  9759 ;;		 -> printf@ap(1), 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  cfmt            2   62[BANK1 ] PTR unsigned char 
  9762 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9763 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9764 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9765 ;;		 -> STR_1(8), 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  2   56[BANK1 ] int 
  9768 ;; Registers used:
  9769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9775 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;Total ram usage:        8 bytes
  9780 ;; Hardware stack levels used: 1
  9781 ;; Hardware stack levels required when called: 12
  9782 ;; This function calls:
  9783 ;;		_vfpfcnvrt
  9784 ;; This function is called by:
  9785 ;;		_printf
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789     1114                     _vfprintf:	
  9790                           ;psect for function _vfprintf
  9791                           
  9792                           
  9793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  9794                           
  9795                           ;incstack = 0
  9796                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9797     1114  0021               	movlb	1	; select bank1
  9798     1115  085B               	movf	(vfprintf@fmt+1)^(0+128),w
  9799     1116  00DF               	movwf	(vfprintf@cfmt+1)^(0+128)
  9800     1117  085A               	movf	vfprintf@fmt^(0+128),w
  9801     1118  00DE               	movwf	vfprintf@cfmt^(0+128)
  9802     1119                     l4933:	
  9803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9804                           
  9805                           
  9806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  9807     1119  0021               	movlb	1	; select bank1
  9808     111A  085E               	movf	vfprintf@cfmt^(0+128),w
  9809     111B  0084               	movwf	4
  9810     111C  085F               	movf	(vfprintf@cfmt+1)^(0+128),w
  9811     111D  0085               	movwf	5
  9812     111E  0012               	moviw fsr0++
  9813     111F  1903               	btfsc	3,2
  9814     1120  292D               	goto	l4935
  9815                           
  9816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9817     1121  0859               	movf	(vfprintf@fp+1)^(0+128),w
  9818     1122  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  9819     1123  0858               	movf	vfprintf@fp^(0+128),w
  9820     1124  00C9               	movwf	vfpfcnvrt@fp^(0+128)
  9821     1125  30DE               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9822     1126  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
  9823     1127  085C               	movf	vfprintf@ap^(0+128),w
  9824     1128  00CC               	movwf	vfpfcnvrt@ap^(0+128)
  9825     1129  318C  2458  3191   	fcall	_vfpfcnvrt
  9826     112C  2919               	goto	l4933
  9827     112D                     l4935:
  9828                           
  9829                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  9830     112D  01D8               	clrf	?_vfprintf^(0+128)
  9831     112E  01D9               	clrf	(?_vfprintf+1)^(0+128)
  9832     112F  0008               	return
  9833     1130                     __end_of_vfprintf:
  9834                           
  9835                           	psect	text15
  9836     0C58                     __ptext15:	
  9837 ;; *************** function _vfpfcnvrt *****************
  9838 ;; Defined at:
  9839 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
  9842 ;;		 -> NULL(0), 
  9843 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
  9844 ;;		 -> vfprintf@cfmt(2), 
  9845 ;;  ap              1   44[BANK1 ] PTR PTR void 
  9846 ;;		 -> printf@ap(1), 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  convarg         4   50[BANK1 ] struct .
  9849 ;;  cp              2   54[BANK1 ] PTR unsigned char 
  9850 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
  9851 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
  9852 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
  9853 ;;		 -> STR_1(8), 
  9854 ;;  done            1   49[BANK1 ] _Bool 
  9855 ;;  c               1    0        unsigned char 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9865 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;Total ram usage:       15 bytes
  9870 ;; Hardware stack levels used: 1
  9871 ;; Hardware stack levels required when called: 11
  9872 ;; This function calls:
  9873 ;;		_dtoa
  9874 ;;		_fputc
  9875 ;;		_read_prec_or_width
  9876 ;;		_utoa
  9877 ;; This function is called by:
  9878 ;;		_vfprintf
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882     0C58                     _vfpfcnvrt:	
  9883                           ;psect for function _vfpfcnvrt
  9884                           
  9885                           
  9886                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9887                           
  9888                           ;incstack = 0
  9889                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9890     0C58  0021               	movlb	1	; select bank1
  9891     0C59  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9892     0C5A  0086               	movwf	6
  9893     0C5B  0187               	clrf	7
  9894     0C5C  3F40               	moviw [0]fsr1
  9895     0C5D  00CD               	movwf	??_vfpfcnvrt^(0+128)
  9896     0C5E  3F41               	moviw [1]fsr1
  9897     0C5F  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  9898     0C60  084D               	movf	??_vfpfcnvrt^(0+128),w
  9899     0C61  0084               	movwf	4
  9900     0C62  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  9901     0C63  0085               	movwf	5
  9902     0C64  0012               	moviw fsr0++
  9903     0C65  3A25               	xorlw	37
  9904     0C66  1D03               	btfss	3,2
  9905     0C67  2D32               	goto	l4905
  9906                           
  9907                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9908     0C68  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9909     0C69  0086               	movwf	6
  9910     0C6A  0187               	clrf	7
  9911     0C6B  3001               	movlw	1
  9912     0C6C  0781               	addwf	1,f
  9913     0C6D  3141               	addfsr 1,1
  9914     0C6E  1803               	skipnc
  9915     0C6F  0A81               	incf	1,f
  9916                           
  9917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9918     0C70  0020               	movlb	0	; select bank0
  9919     0C71  01D5               	clrf	_width
  9920     0C72  01D6               	clrf	_width+1
  9921     0C73  3000               	movlw	0
  9922     0C74  00E3               	movwf	_flags
  9923                           
  9924                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9925     0C75  30FF               	movlw	255
  9926     0C76  0022               	movlb	2	; select bank2
  9927     0C77  00C4               	movwf	_prec^(0+256)
  9928     0C78  30FF               	movlw	255
  9929     0C79  00C5               	movwf	(_prec^(0+256)+1)
  9930                           
  9931                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  9932     0C7A  0021               	movlb	1	; select bank1
  9933     0C7B  01D1               	clrf	vfpfcnvrt@done^(0+128)
  9934                           
  9935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  9936     0C7C  2C8B               	goto	l4863
  9937     0C7D                     l1726:	
  9938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  9939                           
  9940                           
  9941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  9942     0C7D  0020               	movlb	0	; select bank0
  9943     0C7E  14E3               	bsf	_flags,1
  9944                           
  9945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  9946     0C7F  0021               	movlb	1	; select bank1
  9947     0C80  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9948     0C81  0086               	movwf	6
  9949     0C82  0187               	clrf	7
  9950     0C83  3001               	movlw	1
  9951     0C84  0781               	addwf	1,f
  9952     0C85  3141               	addfsr 1,1
  9953     0C86  1803               	skipnc
  9954     0C87  0A81               	incf	1,f
  9955                           
  9956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  9957     0C88  2C8B               	goto	l4863
  9958     0C89                     l1728:	
  9959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  9960                           
  9961                           
  9962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  9963     0C89  3001               	movlw	1
  9964     0C8A  00D1               	movwf	vfpfcnvrt@done^(0+128)
  9965     0C8B                     l4863:	
  9966                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  9967                           
  9968                           
  9969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  9970     0C8B  0851               	movf	vfpfcnvrt@done^(0+128),w
  9971     0C8C  1D03               	btfss	3,2
  9972     0C8D  2C9F               	goto	l4865
  9973     0C8E  084B               	movf	vfpfcnvrt@fmt^(0+128),w
  9974     0C8F  0086               	movwf	6
  9975     0C90  0187               	clrf	7
  9976     0C91  3F40               	moviw [0]fsr1
  9977     0C92  00CD               	movwf	??_vfpfcnvrt^(0+128)
  9978     0C93  3F41               	moviw [1]fsr1
  9979     0C94  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  9980     0C95  084D               	movf	??_vfpfcnvrt^(0+128),w
  9981     0C96  0084               	movwf	4
  9982     0C97  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  9983     0C98  0085               	movwf	5
  9984     0C99  0800               	movf	0,w	;code access
  9985                           
  9986                           ; Switch size 1, requested type "simple"
  9987                           ; Number of cases is 1, Range of values is 48 to 48
  9988                           ; switch strategies available:
  9989                           ; Name         Instructions Cycles
  9990                           ; simple_byte            4     3 (average)
  9991                           ; direct_byte           11     9 (fixed)
  9992                           ; jumptable            263     9 (fixed)
  9993                           ;	Chosen strategy is simple_byte
  9994     0C9A  3A30               	xorlw	48	; case 48
  9995     0C9B  1903               	skipnz
  9996     0C9C  2C7D               	goto	l1726
  9997     0C9D  2C89               	goto	l1728
  9998     0C9E  2C8B               	goto	l4863
  9999     0C9F                     l4865:
 10000                           
 10001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 10002     0C9F  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10003     0CA0  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 10004     0CA1  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10005     0CA2  00A7               	movwf	read_prec_or_width@ap^(0+128)
 10006     0CA3  3194  24D5  318C   	fcall	_read_prec_or_width
 10007     0CA6  0021               	movlb	1	; select bank1
 10008     0CA7  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 10009     0CA8  0020               	movlb	0	; select bank0
 10010     0CA9  00D6               	movwf	_width+1
 10011     0CAA  0021               	movlb	1	; select bank1
 10012     0CAB  0826               	movf	?_read_prec_or_width^(0+128),w
 10013     0CAC  0020               	movlb	0	; select bank0
 10014     0CAD  00D5               	movwf	_width
 10015                           
 10016                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 10017     0CAE  1FD6               	btfss	_width+1,7
 10018     0CAF  2CB6               	goto	l4873
 10019                           
 10020                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 10021     0CB0  1463               	bsf	_flags,0
 10022                           
 10023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 10024     0CB1  09D5               	comf	_width,f
 10025     0CB2  09D6               	comf	_width+1,f
 10026     0CB3  0AD5               	incf	_width,f
 10027     0CB4  1903               	skipnz
 10028     0CB5  0AD6               	incf	_width+1,f
 10029     0CB6                     l4873:
 10030                           
 10031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10032     0CB6  0021               	movlb	1	; select bank1
 10033     0CB7  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10034     0CB8  0086               	movwf	6
 10035     0CB9  0187               	clrf	7
 10036     0CBA  3F40               	moviw [0]fsr1
 10037     0CBB  00D6               	movwf	vfpfcnvrt@cp^(0+128)
 10038     0CBC  3F41               	moviw [1]fsr1
 10039     0CBD  00D7               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 10040                           
 10041                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10042     0CBE  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10043     0CBF  0084               	movwf	4
 10044     0CC0  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10045     0CC1  0085               	movwf	5
 10046     0CC2  0012               	moviw fsr0++
 10047     0CC3  3A64               	xorlw	100
 10048     0CC4  1903               	btfsc	3,2
 10049     0CC5  2CCE               	goto	l4879
 10050     0CC6  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10051     0CC7  0084               	movwf	4
 10052     0CC8  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10053     0CC9  0085               	movwf	5
 10054     0CCA  0012               	moviw fsr0++
 10055     0CCB  3A69               	xorlw	105
 10056     0CCC  1D03               	btfss	3,2
 10057     0CCD  2CF2               	goto	l4887
 10058     0CCE                     l4879:
 10059                           
 10060                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10061     0CCE  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10062     0CCF  0086               	movwf	6
 10063     0CD0  0187               	clrf	7
 10064     0CD1  0801               	movf	1,w
 10065     0CD2  0084               	movwf	4
 10066     0CD3  0185               	clrf	5
 10067     0CD4  3002               	movlw	2
 10068     0CD5  0781               	addwf	1,f
 10069     0CD6  3F00               	moviw [0]fsr0
 10070     0CD7  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
 10071     0CD8  3F01               	moviw [1]fsr0
 10072     0CD9  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10073                           
 10074                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10075     0CDA  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10076     0CDB  3E01               	addlw	1
 10077     0CDC  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10078     0CDD  3000               	movlw	0
 10079     0CDE  3D57               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10080     0CDF  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10081     0CE0  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10082     0CE1  0086               	movwf	6
 10083     0CE2  0187               	clrf	7
 10084     0CE3  084D               	movf	??_vfpfcnvrt^(0+128),w
 10085     0CE4  3FC0               	movwi [0]fsr1
 10086     0CE5  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10087     0CE6  3FC1               	movwi [1]fsr1
 10088                           
 10089                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10090     0CE7  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10091     0CE8  00BD               	movwf	(dtoa@fp+1)^(0+128)
 10092     0CE9  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10093     0CEA  00BC               	movwf	dtoa@fp^(0+128)
 10094     0CEB  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10095     0CEC  00BF               	movwf	(dtoa@d+1)^(0+128)
 10096     0CED  0852               	movf	vfpfcnvrt@convarg^(0+128),w
 10097     0CEE  00BE               	movwf	dtoa@d^(0+128)
 10098     0CEF  3189  21B2         	fcall	_dtoa
 10099     0CF1  0008               	return
 10100     0CF2                     l4887:
 10101     0CF2  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10102     0CF3  0084               	movwf	4
 10103     0CF4  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10104     0CF5  0085               	movwf	5
 10105     0CF6  0012               	moviw fsr0++
 10106     0CF7  3A75               	xorlw	117
 10107     0CF8  1D03               	btfss	3,2
 10108     0CF9  2D28               	goto	l4901
 10109                           
 10110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 10111     0CFA  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10112     0CFB  0086               	movwf	6
 10113     0CFC  0187               	clrf	7
 10114     0CFD  0801               	movf	1,w
 10115     0CFE  0084               	movwf	4
 10116     0CFF  0185               	clrf	5
 10117     0D00  3002               	movlw	2
 10118     0D01  0781               	addwf	1,f
 10119     0D02  3F00               	moviw [0]fsr0
 10120     0D03  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
 10121     0D04  3F01               	moviw [1]fsr0
 10122     0D05  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10123                           
 10124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10125     0D06  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10126     0D07  3E01               	addlw	1
 10127     0D08  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10128     0D09  3000               	movlw	0
 10129     0D0A  3D57               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10130     0D0B  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10131     0D0C  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10132     0D0D  0086               	movwf	6
 10133     0D0E  0187               	clrf	7
 10134     0D0F  084D               	movf	??_vfpfcnvrt^(0+128),w
 10135     0D10  3FC0               	movwi [0]fsr1
 10136     0D11  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10137     0D12  3FC1               	movwi [1]fsr1
 10138                           
 10139                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10140     0D13  2D1F               	goto	l4899
 10141     0D14                     l4893:
 10142                           
 10143                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10144     0D14  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10145     0D15  00BD               	movwf	(utoa@fp+1)^(0+128)
 10146     0D16  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10147     0D17  00BC               	movwf	utoa@fp^(0+128)
 10148     0D18  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10149     0D19  00BF               	movwf	(utoa@d+1)^(0+128)
 10150     0D1A  0852               	movf	vfpfcnvrt@convarg^(0+128),w
 10151     0D1B  00BE               	movwf	utoa@d^(0+128)
 10152     0D1C  3196  2647         	fcall	_utoa
 10153     0D1E  0008               	return
 10154     0D1F                     l4899:
 10155     0D1F  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10156     0D20  0084               	movwf	4
 10157     0D21  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10158     0D22  0085               	movwf	5
 10159     0D23  0800               	movf	0,w	;code access
 10160                           
 10161                           ; Switch size 1, requested type "simple"
 10162                           ; Number of cases is 1, Range of values is 117 to 117
 10163                           ; switch strategies available:
 10164                           ; Name         Instructions Cycles
 10165                           ; simple_byte            4     3 (average)
 10166                           ; direct_byte           11     9 (fixed)
 10167                           ; jumptable            263     9 (fixed)
 10168                           ;	Chosen strategy is simple_byte
 10169     0D24  3A75               	xorlw	117	; case 117
 10170     0D25  1903               	skipnz
 10171     0D26  2D14               	goto	l4893
 10172     0D27  2D28               	goto	l4901
 10173     0D28                     l4901:
 10174                           
 10175                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10176     0D28  0021               	movlb	1	; select bank1
 10177     0D29  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10178     0D2A  0086               	movwf	6
 10179     0D2B  0187               	clrf	7
 10180     0D2C  3001               	movlw	1
 10181     0D2D  0781               	addwf	1,f
 10182     0D2E  3141               	addfsr 1,1
 10183     0D2F  1803               	skipnc
 10184     0D30  0A81               	incf	1,f
 10185     0D31  0008               	return
 10186     0D32                     l4905:
 10187                           
 10188                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10189     0D32  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10190     0D33  0086               	movwf	6
 10191     0D34  0187               	clrf	7
 10192     0D35  3F40               	moviw [0]fsr1
 10193     0D36  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10194     0D37  3F41               	moviw [1]fsr1
 10195     0D38  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10196     0D39  084D               	movf	??_vfpfcnvrt^(0+128),w
 10197     0D3A  0084               	movwf	4
 10198     0D3B  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10199     0D3C  0085               	movwf	5
 10200     0D3D  0800               	movf	0,w	;code access
 10201     0D3E  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
 10202     0D3F  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 10203     0D40  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
 10204     0D41  00A3               	movwf	fputc@c^(0+128)
 10205     0D42  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
 10206     0D43  00A4               	movwf	(fputc@c+1)^(0+128)
 10207     0D44  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10208     0D45  00A6               	movwf	(fputc@fp+1)^(0+128)
 10209     0D46  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10210     0D47  00A5               	movwf	fputc@fp^(0+128)
 10211     0D48  3194  2480  318C   	fcall	_fputc
 10212     0D4B  2D28               	goto	l4901
 10213     0D4C                     __end_of_vfpfcnvrt:
 10214                           
 10215                           	psect	text16
 10216     1647                     __ptext16:	
 10217 ;; *************** function _utoa *****************
 10218 ;; Defined at:
 10219 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 10222 ;;		 -> NULL(0), 
 10223 ;;  d               2   30[BANK1 ] unsigned int 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  i               2   36[BANK1 ] int 
 10226 ;;  w               2   34[BANK1 ] int 
 10227 ;;  p               1   33[BANK1 ] _Bool 
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10237 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;Total ram usage:       10 bytes
 10242 ;; Hardware stack levels used: 1
 10243 ;; Hardware stack levels required when called: 10
 10244 ;; This function calls:
 10245 ;;		___lwdiv
 10246 ;;		___lwmod
 10247 ;;		_pad
 10248 ;; This function is called by:
 10249 ;;		_vfpfcnvrt
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253     1647                     _utoa:	
 10254                           ;psect for function _utoa
 10255                           
 10256                           
 10257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
 10258                           
 10259                           ;incstack = 0
 10260                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10261     1647  3001               	movlw	1
 10262     1648  0021               	movlb	1	; select bank1
 10263     1649  00C1               	movwf	utoa@p^(0+128)
 10264                           
 10265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10266     164A  0020               	movlb	0	; select bank0
 10267     164B  0856               	movf	_width+1,w
 10268     164C  0021               	movlb	1	; select bank1
 10269     164D  00C3               	movwf	(utoa@w+1)^(0+128)
 10270     164E  0020               	movlb	0	; select bank0
 10271     164F  0855               	movf	_width,w
 10272     1650  0021               	movlb	1	; select bank1
 10273     1651  00C2               	movwf	utoa@w^(0+128)
 10274                           
 10275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10276     1652  301F               	movlw	31
 10277     1653  00C4               	movwf	utoa@i^(0+128)
 10278     1654  3000               	movlw	0
 10279     1655  00C5               	movwf	(utoa@i^(0+128)+1)
 10280                           
 10281                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10282     1656  0023               	movlb	3	; select bank3
 10283     1657  01BF               	clrf	(_dbuf^(0+384)+31)
 10284                           
 10285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10286     1658  2E9C               	goto	l4397
 10287     1659                     l4399:
 10288     1659  083E               	movf	utoa@d^(0+128),w
 10289     165A  043F               	iorwf	(utoa@d+1)^(0+128),w
 10290     165B  1D03               	btfss	3,2
 10291     165C  2E6E               	goto	l4387
 10292     165D  0841               	movf	utoa@p^(0+128),w
 10293     165E  1D03               	btfss	3,2
 10294     165F  2E6E               	goto	l4387
 10295     1660  0843               	movf	(utoa@w+1)^(0+128),w
 10296     1661  3A80               	xorlw	128
 10297     1662  00C0               	movwf	??_utoa^(0+128)
 10298     1663  3080               	movlw	128
 10299     1664  0240               	subwf	??_utoa^(0+128),w
 10300     1665  1D03               	skipz
 10301     1666  2E69               	goto	u4585
 10302     1667  3001               	movlw	1
 10303     1668  0242               	subwf	utoa@w^(0+128),w
 10304     1669                     u4585:
 10305     1669  1C03               	skipc
 10306     166A  2EA1               	goto	l4407
 10307     166B  0020               	movlb	0	; select bank0
 10308     166C  1CE3               	btfss	_flags,1
 10309     166D  2EA1               	goto	l4407
 10310     166E                     l4387:
 10311                           
 10312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10313     166E  30FF               	movlw	255
 10314     166F  0021               	movlb	1	; select bank1
 10315     1670  07C4               	addwf	utoa@i^(0+128),f
 10316     1671  30FF               	movlw	255
 10317     1672  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 10318                           
 10319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10320     1673  0844               	movf	utoa@i^(0+128),w
 10321     1674  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10322     1675  0086               	movwf	6
 10323     1676  3001               	movlw	1	; select bank3/4
 10324     1677  0087               	movwf	7
 10325     1678  300A               	movlw	10
 10326     1679  00A0               	movwf	___lwmod@divisor^(0+128)
 10327     167A  3000               	movlw	0
 10328     167B  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 10329     167C  083F               	movf	(utoa@d+1)^(0+128),w
 10330     167D  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 10331     167E  083E               	movf	utoa@d^(0+128),w
 10332     167F  00A2               	movwf	___lwmod@dividend^(0+128)
 10333     1680  3192  223A  3196   	fcall	___lwmod
 10334     1683  0021               	movlb	1	; select bank1
 10335     1684  0820               	movf	?___lwmod^(0+128),w
 10336     1685  3E30               	addlw	48
 10337     1686  0081               	movwf	1
 10338                           
 10339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 10340     1687  01C1               	clrf	utoa@p^(0+128)
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10343     1688  30FF               	movlw	255
 10344     1689  07C2               	addwf	utoa@w^(0+128),f
 10345     168A  30FF               	movlw	255
 10346     168B  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 10347                           
 10348                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10349     168C  300A               	movlw	10
 10350     168D  00A0               	movwf	___lwdiv@divisor^(0+128)
 10351     168E  3000               	movlw	0
 10352     168F  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 10353     1690  083F               	movf	(utoa@d+1)^(0+128),w
 10354     1691  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 10355     1692  083E               	movf	utoa@d^(0+128),w
 10356     1693  00A2               	movwf	___lwdiv@dividend^(0+128)
 10357     1694  3192  2265  3196   	fcall	___lwdiv
 10358     1697  0021               	movlb	1	; select bank1
 10359     1698  0821               	movf	(?___lwdiv+1)^(0+128),w
 10360     1699  00BF               	movwf	(utoa@d+1)^(0+128)
 10361     169A  0820               	movf	?___lwdiv^(0+128),w
 10362     169B  00BE               	movwf	utoa@d^(0+128)
 10363     169C                     l4397:
 10364                           
 10365                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10366     169C  0021               	movlb	1	; select bank1
 10367     169D  0844               	movf	utoa@i^(0+128),w
 10368     169E  0445               	iorwf	(utoa@i+1)^(0+128),w
 10369     169F  1D03               	btfss	3,2
 10370     16A0  2E59               	goto	l4399
 10371     16A1                     l4407:
 10372                           
 10373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10374     16A1  0021               	movlb	1	; select bank1
 10375     16A2  083D               	movf	(utoa@fp+1)^(0+128),w
 10376     16A3  00B5               	movwf	(pad@fp+1)^(0+128)
 10377     16A4  083C               	movf	utoa@fp^(0+128),w
 10378     16A5  00B4               	movwf	pad@fp^(0+128)
 10379     16A6  0844               	movf	utoa@i^(0+128),w
 10380     16A7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10381     16A8  00B6               	movwf	pad@buf^(0+128)
 10382     16A9  0843               	movf	(utoa@w+1)^(0+128),w
 10383     16AA  00B8               	movwf	(pad@p+1)^(0+128)
 10384     16AB  0842               	movf	utoa@w^(0+128),w
 10385     16AC  00B7               	movwf	pad@p^(0+128)
 10386     16AD  3192  22CE         	fcall	_pad
 10387     16AF  0008               	return
 10388     16B0                     __end_of_utoa:
 10389                           
 10390                           	psect	text17
 10391     123A                     __ptext17:	
 10392 ;; *************** function ___lwmod *****************
 10393 ;; Defined at:
 10394 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;  divisor         2    0[BANK1 ] unsigned int 
 10397 ;;  dividend        2    2[BANK1 ] unsigned int 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;  counter         1    4[BANK1 ] unsigned char 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  2    0[BANK1 ] unsigned int 
 10402 ;; Registers used:
 10403 ;;		wreg, status,2, status,0
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10409 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;Total ram usage:        5 bytes
 10414 ;; Hardware stack levels used: 1
 10415 ;; Hardware stack levels required when called: 5
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_utoa
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423     123A                     ___lwmod:	
 10424                           ;psect for function ___lwmod
 10425                           
 10426                           
 10427                           ;incstack = 0
 10428                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10429     123A  0021               	movlb	1	; select bank1
 10430     123B  0820               	movf	___lwmod@divisor^(0+128),w
 10431     123C  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 10432     123D  1903               	btfsc	3,2
 10433     123E  2A60               	goto	l4293
 10434     123F  3001               	movlw	1
 10435     1240  00A4               	movwf	___lwmod@counter^(0+128)
 10436     1241                     l4283:
 10437     1241  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
 10438     1242  2A4B               	goto	l4285
 10439     1243  3001               	movlw	1
 10440     1244                     u4325:
 10441     1244  35A0               	lslf	___lwmod@divisor^(0+128),f
 10442     1245  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 10443     1246  0B89               	decfsz	9,f
 10444     1247  2A44               	goto	u4325
 10445     1248  3001               	movlw	1
 10446     1249  07A4               	addwf	___lwmod@counter^(0+128),f
 10447     124A  2A41               	goto	l4283
 10448     124B                     l4285:
 10449     124B  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10450     124C  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 10451     124D  1D03               	skipz
 10452     124E  2A51               	goto	u4345
 10453     124F  0820               	movf	___lwmod@divisor^(0+128),w
 10454     1250  0222               	subwf	___lwmod@dividend^(0+128),w
 10455     1251                     u4345:
 10456     1251  1C03               	skipc
 10457     1252  2A57               	goto	l4289
 10458     1253  0820               	movf	___lwmod@divisor^(0+128),w
 10459     1254  02A2               	subwf	___lwmod@dividend^(0+128),f
 10460     1255  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10461     1256  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 10462     1257                     l4289:
 10463     1257  3001               	movlw	1
 10464     1258                     u4355:
 10465     1258  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 10466     1259  0CA0               	rrf	___lwmod@divisor^(0+128),f
 10467     125A  0B89               	decfsz	9,f
 10468     125B  2A58               	goto	u4355
 10469     125C  3001               	movlw	1
 10470     125D  02A4               	subwf	___lwmod@counter^(0+128),f
 10471     125E  1D03               	btfss	3,2
 10472     125F  2A4B               	goto	l4285
 10473     1260                     l4293:
 10474     1260  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 10475     1261  00A1               	movwf	(?___lwmod+1)^(0+128)
 10476     1262  0822               	movf	___lwmod@dividend^(0+128),w
 10477     1263  00A0               	movwf	?___lwmod^(0+128)
 10478     1264  0008               	return
 10479     1265                     __end_of___lwmod:
 10480                           
 10481                           	psect	text18
 10482     1265                     __ptext18:	
 10483 ;; *************** function ___lwdiv *****************
 10484 ;; Defined at:
 10485 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;  divisor         2    0[BANK1 ] unsigned int 
 10488 ;;  dividend        2    2[BANK1 ] unsigned int 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  quotient        2    4[BANK1 ] unsigned int 
 10491 ;;  counter         1    6[BANK1 ] unsigned char 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  2    0[BANK1 ] unsigned int 
 10494 ;; Registers used:
 10495 ;;		wreg, status,2, status,0
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10501 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10502 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;Total ram usage:        7 bytes
 10506 ;; Hardware stack levels used: 1
 10507 ;; Hardware stack levels required when called: 5
 10508 ;; This function calls:
 10509 ;;		Nothing
 10510 ;; This function is called by:
 10511 ;;		_utoa
 10512 ;;		_dutycycle_led_strip
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516     1265                     ___lwdiv:	
 10517                           ;psect for function ___lwdiv
 10518                           
 10519                           
 10520                           ;incstack = 0
 10521                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10522     1265  0021               	movlb	1	; select bank1
 10523     1266  01A4               	clrf	___lwdiv@quotient^(0+128)
 10524     1267  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 10525     1268  0820               	movf	___lwdiv@divisor^(0+128),w
 10526     1269  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 10527     126A  1903               	btfsc	3,2
 10528     126B  2A93               	goto	l4271
 10529     126C  3001               	movlw	1
 10530     126D  00A6               	movwf	___lwdiv@counter^(0+128)
 10531     126E                     l4259:
 10532     126E  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
 10533     126F  2A78               	goto	l4261
 10534     1270  3001               	movlw	1
 10535     1271                     u4255:
 10536     1271  35A0               	lslf	___lwdiv@divisor^(0+128),f
 10537     1272  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 10538     1273  0B89               	decfsz	9,f
 10539     1274  2A71               	goto	u4255
 10540     1275  3001               	movlw	1
 10541     1276  07A6               	addwf	___lwdiv@counter^(0+128),f
 10542     1277  2A6E               	goto	l4259
 10543     1278                     l4261:
 10544     1278  3001               	movlw	1
 10545     1279                     u4275:
 10546     1279  35A4               	lslf	___lwdiv@quotient^(0+128),f
 10547     127A  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 10548     127B  0B89               	decfsz	9,f
 10549     127C  2A79               	goto	u4275
 10550     127D  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 10551     127E  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 10552     127F  1D03               	skipz
 10553     1280  2A83               	goto	u4285
 10554     1281  0820               	movf	___lwdiv@divisor^(0+128),w
 10555     1282  0222               	subwf	___lwdiv@dividend^(0+128),w
 10556     1283                     u4285:
 10557     1283  1C03               	skipc
 10558     1284  2A8A               	goto	l4267
 10559     1285  0820               	movf	___lwdiv@divisor^(0+128),w
 10560     1286  02A2               	subwf	___lwdiv@dividend^(0+128),f
 10561     1287  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 10562     1288  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 10563     1289  1424               	bsf	___lwdiv@quotient^(0+128),0
 10564     128A                     l4267:
 10565     128A  3001               	movlw	1
 10566     128B                     u4295:
 10567     128B  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 10568     128C  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 10569     128D  0B89               	decfsz	9,f
 10570     128E  2A8B               	goto	u4295
 10571     128F  3001               	movlw	1
 10572     1290  02A6               	subwf	___lwdiv@counter^(0+128),f
 10573     1291  1D03               	btfss	3,2
 10574     1292  2A78               	goto	l4261
 10575     1293                     l4271:
 10576     1293  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 10577     1294  00A1               	movwf	(?___lwdiv+1)^(0+128)
 10578     1295  0824               	movf	___lwdiv@quotient^(0+128),w
 10579     1296  00A0               	movwf	?___lwdiv^(0+128)
 10580     1297  0008               	return
 10581     1298                     __end_of___lwdiv:
 10582                           
 10583                           	psect	text19
 10584     14D5                     __ptext19:	
 10585 ;; *************** function _read_prec_or_width *****************
 10586 ;; Defined at:
 10587 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 10590 ;;		 -> vfprintf@cfmt(2), 
 10591 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
 10592 ;;		 -> printf@ap(1), 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  c               1   11[BANK1 ] unsigned char 
 10595 ;;  n               2   12[BANK1 ] int 
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  2    6[BANK1 ] int 
 10598 ;; Registers used:
 10599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10605 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;Total ram usage:        8 bytes
 10610 ;; Hardware stack levels used: 1
 10611 ;; Hardware stack levels required when called: 6
 10612 ;; This function calls:
 10613 ;;		___wmul
 10614 ;; This function is called by:
 10615 ;;		_vfpfcnvrt
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619     14D5                     _read_prec_or_width:	
 10620                           ;psect for function _read_prec_or_width
 10621                           
 10622                           
 10623                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 10624                           
 10625                           ;incstack = 0
 10626                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10627     14D5  0021               	movlb	1	; select bank1
 10628     14D6  01AC               	clrf	read_prec_or_width@n^(0+128)
 10629     14D7  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
 10630                           
 10631                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 10632     14D8  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10633     14D9  0086               	movwf	6
 10634     14DA  0187               	clrf	7
 10635     14DB  3F40               	moviw [0]fsr1
 10636     14DC  00A8               	movwf	??_read_prec_or_width^(0+128)
 10637     14DD  3F41               	moviw [1]fsr1
 10638     14DE  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 10639     14DF  0828               	movf	??_read_prec_or_width^(0+128),w
 10640     14E0  0084               	movwf	4
 10641     14E1  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 10642     14E2  0085               	movwf	5
 10643     14E3  0012               	moviw fsr0++
 10644     14E4  3A2A               	xorlw	42
 10645     14E5  1D03               	btfss	3,2
 10646     14E6  2D16               	goto	l4423
 10647                           
 10648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 10649     14E7  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10650     14E8  0086               	movwf	6
 10651     14E9  0187               	clrf	7
 10652     14EA  3001               	movlw	1
 10653     14EB  0781               	addwf	1,f
 10654     14EC  3141               	addfsr 1,1
 10655     14ED  1803               	skipnc
 10656     14EE  0A81               	incf	1,f
 10657                           
 10658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 10659     14EF  0827               	movf	read_prec_or_width@ap^(0+128),w
 10660     14F0  0086               	movwf	6
 10661     14F1  0187               	clrf	7
 10662     14F2  0801               	movf	1,w
 10663     14F3  0084               	movwf	4
 10664     14F4  0185               	clrf	5
 10665     14F5  3002               	movlw	2
 10666     14F6  0781               	addwf	1,f
 10667     14F7  3F00               	moviw [0]fsr0
 10668     14F8  00AC               	movwf	read_prec_or_width@n^(0+128)
 10669     14F9  3F01               	moviw [1]fsr0
 10670     14FA  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 10671                           
 10672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 10673     14FB  2D28               	goto	l4425
 10674     14FC                     l4419:
 10675                           
 10676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 10677     14FC  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 10678     14FD  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 10679     14FE  082C               	movf	read_prec_or_width@n^(0+128),w
 10680     14FF  00A0               	movwf	___wmul@multiplier^(0+128)
 10681     1500  300A               	movlw	10
 10682     1501  00A2               	movwf	___wmul@multiplicand^(0+128)
 10683     1502  3000               	movlw	0
 10684     1503  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 10685     1504  3190  20F8  3194   	fcall	___wmul
 10686     1507  0021               	movlb	1	; select bank1
 10687     1508  082B               	movf	read_prec_or_width@c^(0+128),w
 10688     1509  0720               	addwf	?___wmul^(0+128),w
 10689     150A  00AC               	movwf	read_prec_or_width@n^(0+128)
 10690     150B  3000               	movlw	0
 10691     150C  3D21               	addwfc	(?___wmul+1)^(0+128),w
 10692     150D  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 10693                           
 10694                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 10695     150E  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10696     150F  0086               	movwf	6
 10697     1510  0187               	clrf	7
 10698     1511  3001               	movlw	1
 10699     1512  0781               	addwf	1,f
 10700     1513  3141               	addfsr 1,1
 10701     1514  1803               	skipnc
 10702     1515  0A81               	incf	1,f
 10703     1516                     l4423:
 10704                           
 10705                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 10706     1516  0826               	movf	read_prec_or_width@fmt^(0+128),w
 10707     1517  0086               	movwf	6
 10708     1518  0187               	clrf	7
 10709     1519  3F40               	moviw [0]fsr1
 10710     151A  00A8               	movwf	??_read_prec_or_width^(0+128)
 10711     151B  3F41               	moviw [1]fsr1
 10712     151C  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 10713     151D  0828               	movf	??_read_prec_or_width^(0+128),w
 10714     151E  0084               	movwf	4
 10715     151F  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 10716     1520  0085               	movwf	5
 10717     1521  0800               	movf	0,w	;code access
 10718     1522  3ED0               	addlw	208
 10719     1523  00AB               	movwf	read_prec_or_width@c^(0+128)
 10720     1524  300A               	movlw	10
 10721     1525  022B               	subwf	read_prec_or_width@c^(0+128),w
 10722     1526  1C03               	skipc
 10723     1527  2CFC               	goto	l4419
 10724     1528                     l4425:
 10725                           
 10726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 10727     1528  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 10728     1529  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 10729     152A  082C               	movf	read_prec_or_width@n^(0+128),w
 10730     152B  00A6               	movwf	?_read_prec_or_width^(0+128)
 10731     152C  0008               	return
 10732     152D                     __end_of_read_prec_or_width:
 10733                           
 10734                           	psect	text20
 10735     09B2                     __ptext20:	
 10736 ;; *************** function _dtoa *****************
 10737 ;; Defined at:
 10738 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 10741 ;;		 -> NULL(0), 
 10742 ;;  d               2   30[BANK1 ] int 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;  i               2   39[BANK1 ] int 
 10745 ;;  w               2   36[BANK1 ] int 
 10746 ;;  s               1   38[BANK1 ] unsigned char 
 10747 ;;  p               1   35[BANK1 ] _Bool 
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10757 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;Total ram usage:       13 bytes
 10762 ;; Hardware stack levels used: 1
 10763 ;; Hardware stack levels required when called: 10
 10764 ;; This function calls:
 10765 ;;		___awdiv
 10766 ;;		___awmod
 10767 ;;		_abs
 10768 ;;		_pad
 10769 ;; This function is called by:
 10770 ;;		_vfpfcnvrt
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774     09B2                     _dtoa:	
 10775                           ;psect for function _dtoa
 10776                           
 10777                           
 10778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 10779                           
 10780                           ;incstack = 0
 10781                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10782     09B2  3001               	movlw	1
 10783     09B3  0021               	movlb	1	; select bank1
 10784     09B4  00C3               	movwf	dtoa@p^(0+128)
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 10787     09B5  1FBF               	btfss	(dtoa@d+1)^(0+128),7
 10788     09B6  29B9               	goto	u4450
 10789     09B7  3001               	movlw	1
 10790     09B8  29BA               	goto	u4460
 10791     09B9                     u4450:
 10792     09B9  3000               	movlw	0
 10793     09BA                     u4460:
 10794     09BA  00C6               	movwf	dtoa@s^(0+128)
 10795                           
 10796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 10797     09BB  0020               	movlb	0	; select bank0
 10798     09BC  0856               	movf	_width+1,w
 10799     09BD  0021               	movlb	1	; select bank1
 10800     09BE  00C5               	movwf	(dtoa@w+1)^(0+128)
 10801     09BF  0020               	movlb	0	; select bank0
 10802     09C0  0855               	movf	_width,w
 10803     09C1  0021               	movlb	1	; select bank1
 10804     09C2  00C4               	movwf	dtoa@w^(0+128)
 10805                           
 10806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 10807     09C3  0846               	movf	dtoa@s^(0+128),w
 10808     09C4  1903               	btfsc	3,2
 10809     09C5  29D5               	goto	l1688
 10810                           
 10811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 10812     09C6  30FF               	movlw	255
 10813     09C7  07C4               	addwf	dtoa@w^(0+128),f
 10814     09C8  30FF               	movlw	255
 10815     09C9  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 10816                           
 10817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 10818     09CA  0846               	movf	dtoa@s^(0+128),w
 10819     09CB  1D03               	btfss	3,2
 10820     09CC  29CF               	goto	l4347
 10821     09CD  302B               	movlw	43
 10822     09CE  29D0               	goto	L2
 10823     09CF                     l4347:
 10824     09CF  302D               	movlw	45
 10825     09D0                     L2:
 10826     09D0  00C1               	movwf	_dtoa$2128^(0+128)
 10827     09D1  3000               	movlw	0
 10828     09D2  00C2               	movwf	(_dtoa$2128^(0+128)+1)
 10829     09D3  0841               	movf	_dtoa$2128^(0+128),w
 10830     09D4  00C6               	movwf	dtoa@s^(0+128)
 10831     09D5                     l1688:	
 10832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 10833                           
 10834                           
 10835                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 10836     09D5  301F               	movlw	31
 10837     09D6  00C7               	movwf	dtoa@i^(0+128)
 10838     09D7  3000               	movlw	0
 10839     09D8  00C8               	movwf	(dtoa@i^(0+128)+1)
 10840                           
 10841                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 10842     09D9  0023               	movlb	3	; select bank3
 10843     09DA  01BF               	clrf	(_dbuf^(0+384)+31)
 10844                           
 10845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10846     09DB  2A28               	goto	l4361
 10847     09DC                     l4363:
 10848     09DC  0021               	movlb	1	; select bank1
 10849     09DD  083E               	movf	dtoa@d^(0+128),w
 10850     09DE  043F               	iorwf	(dtoa@d+1)^(0+128),w
 10851     09DF  1D03               	btfss	3,2
 10852     09E0  29F2               	goto	l4351
 10853     09E1  0843               	movf	dtoa@p^(0+128),w
 10854     09E2  1D03               	btfss	3,2
 10855     09E3  29F2               	goto	l4351
 10856     09E4  0845               	movf	(dtoa@w+1)^(0+128),w
 10857     09E5  3A80               	xorlw	128
 10858     09E6  00C0               	movwf	??_dtoa^(0+128)
 10859     09E7  3080               	movlw	128
 10860     09E8  0240               	subwf	??_dtoa^(0+128),w
 10861     09E9  1D03               	skipz
 10862     09EA  29ED               	goto	u4525
 10863     09EB  3001               	movlw	1
 10864     09EC  0244               	subwf	dtoa@w^(0+128),w
 10865     09ED                     u4525:
 10866     09ED  1C03               	skipc
 10867     09EE  2A34               	goto	l4371
 10868     09EF  0020               	movlb	0	; select bank0
 10869     09F0  1CE3               	btfss	_flags,1
 10870     09F1  2A34               	goto	l4371
 10871     09F2                     l4351:
 10872                           
 10873                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 10874     09F2  30FF               	movlw	255
 10875     09F3  0021               	movlb	1	; select bank1
 10876     09F4  07C7               	addwf	dtoa@i^(0+128),f
 10877     09F5  30FF               	movlw	255
 10878     09F6  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 10879                           
 10880                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 10881     09F7  0847               	movf	dtoa@i^(0+128),w
 10882     09F8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10883     09F9  0086               	movwf	6
 10884     09FA  3001               	movlw	1	; select bank3/4
 10885     09FB  0087               	movwf	7
 10886     09FC  300A               	movlw	10
 10887     09FD  00A0               	movwf	___awmod@divisor^(0+128)
 10888     09FE  3000               	movlw	0
 10889     09FF  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 10890     0A00  083F               	movf	(dtoa@d+1)^(0+128),w
 10891     0A01  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 10892     0A02  083E               	movf	dtoa@d^(0+128),w
 10893     0A03  00A2               	movwf	___awmod@dividend^(0+128)
 10894     0A04  3193  2351  3189   	fcall	___awmod
 10895     0A07  0021               	movlb	1	; select bank1
 10896     0A08  0821               	movf	(?___awmod+1)^(0+128),w
 10897     0A09  00A7               	movwf	(abs@a+1)^(0+128)
 10898     0A0A  0820               	movf	?___awmod^(0+128),w
 10899     0A0B  00A6               	movwf	abs@a^(0+128)
 10900     0A0C  3190  200D  3189   	fcall	_abs
 10901     0A0F  0021               	movlb	1	; select bank1
 10902     0A10  0826               	movf	?_abs^(0+128),w
 10903     0A11  3E30               	addlw	48
 10904     0A12  0081               	movwf	1
 10905                           
 10906                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 10907     0A13  01C3               	clrf	dtoa@p^(0+128)
 10908                           
 10909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 10910     0A14  30FF               	movlw	255
 10911     0A15  07C4               	addwf	dtoa@w^(0+128),f
 10912     0A16  30FF               	movlw	255
 10913     0A17  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 10914                           
 10915                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 10916     0A18  300A               	movlw	10
 10917     0A19  00A0               	movwf	___awdiv@divisor^(0+128)
 10918     0A1A  3000               	movlw	0
 10919     0A1B  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 10920     0A1C  083F               	movf	(dtoa@d+1)^(0+128),w
 10921     0A1D  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 10922     0A1E  083E               	movf	dtoa@d^(0+128),w
 10923     0A1F  00A2               	movwf	___awdiv@dividend^(0+128)
 10924     0A20  3193  23E2  3189   	fcall	___awdiv
 10925     0A23  0021               	movlb	1	; select bank1
 10926     0A24  0821               	movf	(?___awdiv+1)^(0+128),w
 10927     0A25  00BF               	movwf	(dtoa@d+1)^(0+128)
 10928     0A26  0820               	movf	?___awdiv^(0+128),w
 10929     0A27  00BE               	movwf	dtoa@d^(0+128)
 10930     0A28                     l4361:
 10931                           
 10932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10933     0A28  0021               	movlb	1	; select bank1
 10934     0A29  0848               	movf	(dtoa@i+1)^(0+128),w
 10935     0A2A  3A80               	xorlw	128
 10936     0A2B  00C0               	movwf	??_dtoa^(0+128)
 10937     0A2C  3080               	movlw	128
 10938     0A2D  0240               	subwf	??_dtoa^(0+128),w
 10939     0A2E  1D03               	skipz
 10940     0A2F  2A32               	goto	u4495
 10941     0A30  3001               	movlw	1
 10942     0A31  0247               	subwf	dtoa@i^(0+128),w
 10943     0A32                     u4495:
 10944     0A32  1803               	btfsc	3,0
 10945     0A33  29DC               	goto	l4363
 10946     0A34                     l4371:
 10947                           
 10948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 10949     0A34  0021               	movlb	1	; select bank1
 10950     0A35  0846               	movf	dtoa@s^(0+128),w
 10951     0A36  1903               	btfsc	3,2
 10952     0A37  2A43               	goto	l4377
 10953                           
 10954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 10955     0A38  30FF               	movlw	255
 10956     0A39  07C7               	addwf	dtoa@i^(0+128),f
 10957     0A3A  30FF               	movlw	255
 10958     0A3B  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 10959                           
 10960                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 10961     0A3C  0847               	movf	dtoa@i^(0+128),w
 10962     0A3D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10963     0A3E  0086               	movwf	6
 10964     0A3F  3001               	movlw	1	; select bank3/4
 10965     0A40  0087               	movwf	7
 10966     0A41  0846               	movf	dtoa@s^(0+128),w
 10967     0A42  0081               	movwf	1
 10968     0A43                     l4377:
 10969                           
 10970                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 10971     0A43  083D               	movf	(dtoa@fp+1)^(0+128),w
 10972     0A44  00B5               	movwf	(pad@fp+1)^(0+128)
 10973     0A45  083C               	movf	dtoa@fp^(0+128),w
 10974     0A46  00B4               	movwf	pad@fp^(0+128)
 10975     0A47  0847               	movf	dtoa@i^(0+128),w
 10976     0A48  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10977     0A49  00B6               	movwf	pad@buf^(0+128)
 10978     0A4A  0845               	movf	(dtoa@w+1)^(0+128),w
 10979     0A4B  00B8               	movwf	(pad@p+1)^(0+128)
 10980     0A4C  0844               	movf	dtoa@w^(0+128),w
 10981     0A4D  00B7               	movwf	pad@p^(0+128)
 10982     0A4E  3192  22CE         	fcall	_pad
 10983     0A50  0008               	return
 10984     0A51                     __end_of_dtoa:
 10985                           
 10986                           	psect	text21
 10987     12CE                     __ptext21:	
 10988 ;; *************** function _pad *****************
 10989 ;; Defined at:
 10990 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 10993 ;;		 -> NULL(0), 
 10994 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 10995 ;;		 -> dbuf(32), 
 10996 ;;  p               2   23[BANK1 ] int 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  i               2   26[BANK1 ] int 
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  1    wreg      void 
 11001 ;; Registers used:
 11002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11008 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;Total ram usage:        8 bytes
 11013 ;; Hardware stack levels used: 1
 11014 ;; Hardware stack levels required when called: 9
 11015 ;; This function calls:
 11016 ;;		_fputc
 11017 ;;		_fputs
 11018 ;; This function is called by:
 11019 ;;		_dtoa
 11020 ;;		_utoa
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024     12CE                     _pad:	
 11025                           ;psect for function _pad
 11026                           
 11027                           
 11028                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 11029                           
 11030                           ;incstack = 0
 11031                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11032     12CE  0020               	movlb	0	; select bank0
 11033     12CF  1C63               	btfss	_flags,0
 11034     12D0  2ADB               	goto	l4301
 11035                           
 11036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 11037     12D1  0021               	movlb	1	; select bank1
 11038     12D2  0836               	movf	pad@buf^(0+128),w
 11039     12D3  00AC               	movwf	fputs@s^(0+128)
 11040     12D4  0835               	movf	(pad@fp+1)^(0+128),w
 11041     12D5  00AE               	movwf	(fputs@fp+1)^(0+128)
 11042     12D6  0834               	movf	pad@fp^(0+128),w
 11043     12D7  00AD               	movwf	fputs@fp^(0+128)
 11044     12D8  3191  21CA  3192   	fcall	_fputs
 11045     12DB                     l4301:
 11046                           
 11047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 11048     12DB  0021               	movlb	1	; select bank1
 11049     12DC  1FB8               	btfss	(pad@p+1)^(0+128),7
 11050     12DD  2AE0               	goto	l1680
 11051                           
 11052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11053     12DE  01B7               	clrf	pad@p^(0+128)
 11054     12DF  01B8               	clrf	(pad@p+1)^(0+128)
 11055     12E0                     l1680:	
 11056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 11057                           
 11058                           
 11059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11060     12E0  01BA               	clrf	pad@i^(0+128)
 11061     12E1  01BB               	clrf	(pad@i+1)^(0+128)
 11062     12E2                     l4309:	
 11063                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11064                           
 11065                           
 11066                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11067     12E2  083B               	movf	(pad@i+1)^(0+128),w
 11068     12E3  3A80               	xorlw	128
 11069     12E4  00B9               	movwf	??_pad^(0+128)
 11070     12E5  0838               	movf	(pad@p+1)^(0+128),w
 11071     12E6  3A80               	xorlw	128
 11072     12E7  0239               	subwf	??_pad^(0+128),w
 11073     12E8  1D03               	skipz
 11074     12E9  2AEC               	goto	u4395
 11075     12EA  0837               	movf	pad@p^(0+128),w
 11076     12EB  023A               	subwf	pad@i^(0+128),w
 11077     12EC                     u4395:
 11078     12EC  1803               	btfsc	3,0
 11079     12ED  2B00               	goto	l1683
 11080                           
 11081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11082     12EE  3020               	movlw	32
 11083     12EF  0021               	movlb	1	; select bank1
 11084     12F0  00A3               	movwf	fputc@c^(0+128)
 11085     12F1  3000               	movlw	0
 11086     12F2  00A4               	movwf	(fputc@c^(0+128)+1)
 11087     12F3  0835               	movf	(pad@fp+1)^(0+128),w
 11088     12F4  00A6               	movwf	(fputc@fp+1)^(0+128)
 11089     12F5  0834               	movf	pad@fp^(0+128),w
 11090     12F6  00A5               	movwf	fputc@fp^(0+128)
 11091     12F7  3194  2480  3192   	fcall	_fputc
 11092                           
 11093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11094     12FA  3001               	movlw	1
 11095     12FB  0021               	movlb	1	; select bank1
 11096     12FC  07BA               	addwf	pad@i^(0+128),f
 11097     12FD  3000               	movlw	0
 11098     12FE  3DBB               	addwfc	(pad@i+1)^(0+128),f
 11099     12FF  2AE2               	goto	l4309
 11100     1300                     l1683:
 11101                           
 11102                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 11103     1300  0020               	movlb	0	; select bank0
 11104     1301  1863               	btfsc	_flags,0
 11105     1302  0008               	return
 11106                           
 11107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11108     1303  0021               	movlb	1	; select bank1
 11109     1304  0836               	movf	pad@buf^(0+128),w
 11110     1305  00AC               	movwf	fputs@s^(0+128)
 11111     1306  0835               	movf	(pad@fp+1)^(0+128),w
 11112     1307  00AE               	movwf	(fputs@fp+1)^(0+128)
 11113     1308  0834               	movf	pad@fp^(0+128),w
 11114     1309  00AD               	movwf	fputs@fp^(0+128)
 11115     130A  3191  21CA         	fcall	_fputs
 11116     130C  0008               	return
 11117     130D                     __end_of_pad:
 11118                           
 11119                           	psect	text22
 11120     11CA                     __ptext22:	
 11121 ;; *************** function _fputs *****************
 11122 ;; Defined at:
 11123 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 11126 ;;		 -> dbuf(32), 
 11127 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 11128 ;;		 -> NULL(0), 
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;  i               2   18[BANK1 ] int 
 11131 ;;  c               1   17[BANK1 ] unsigned char 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  2   12[BANK1 ] int 
 11134 ;; Registers used:
 11135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11141 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;Total ram usage:        8 bytes
 11146 ;; Hardware stack levels used: 1
 11147 ;; Hardware stack levels required when called: 8
 11148 ;; This function calls:
 11149 ;;		_fputc
 11150 ;; This function is called by:
 11151 ;;		_pad
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155     11CA                     _fputs:	
 11156                           ;psect for function _fputs
 11157                           
 11158                           
 11159                           ;incstack = 0
 11160                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11161     11CA  0021               	movlb	1	; select bank1
 11162     11CB  01B2               	clrf	fputs@i^(0+128)
 11163     11CC  01B3               	clrf	(fputs@i+1)^(0+128)
 11164     11CD                     l4151:
 11165     11CD  082C               	movf	fputs@s^(0+128),w
 11166     11CE  0732               	addwf	fputs@i^(0+128),w
 11167     11CF  0086               	movwf	6
 11168     11D0  3001               	movlw	1	; select bank2/3
 11169     11D1  0087               	movwf	7
 11170     11D2  0801               	movf	1,w
 11171     11D3  00B1               	movwf	fputs@c^(0+128)
 11172     11D4  0831               	movf	fputs@c^(0+128),w
 11173     11D5  1903               	btfsc	3,2
 11174     11D6  0008               	return
 11175     11D7  0831               	movf	fputs@c^(0+128),w
 11176     11D8  00AF               	movwf	??_fputs^(0+128)
 11177     11D9  01B0               	clrf	(??_fputs^(0+128)+1)
 11178     11DA  082F               	movf	??_fputs^(0+128),w
 11179     11DB  00A3               	movwf	fputc@c^(0+128)
 11180     11DC  0830               	movf	(??_fputs+1)^(0+128),w
 11181     11DD  00A4               	movwf	(fputc@c+1)^(0+128)
 11182     11DE  082E               	movf	(fputs@fp+1)^(0+128),w
 11183     11DF  00A6               	movwf	(fputc@fp+1)^(0+128)
 11184     11E0  082D               	movf	fputs@fp^(0+128),w
 11185     11E1  00A5               	movwf	fputc@fp^(0+128)
 11186     11E2  3194  2480  3191   	fcall	_fputc
 11187     11E5  3001               	movlw	1
 11188     11E6  0021               	movlb	1	; select bank1
 11189     11E7  07B2               	addwf	fputs@i^(0+128),f
 11190     11E8  3000               	movlw	0
 11191     11E9  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 11192     11EA  29CD               	goto	l4151
 11193     11EB                     __end_of_fputs:
 11194                           
 11195                           	psect	text23
 11196     1480                     __ptext23:	
 11197 ;; *************** function _fputc *****************
 11198 ;; Defined at:
 11199 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 11200 ;; Parameters:    Size  Location     Type
 11201 ;;  c               2    3[BANK1 ] int 
 11202 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 11203 ;;		 -> NULL(0), 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;		None
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  2    3[BANK1 ] int 
 11208 ;; Registers used:
 11209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11215 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;Total ram usage:        9 bytes
 11220 ;; Hardware stack levels used: 1
 11221 ;; Hardware stack levels required when called: 7
 11222 ;; This function calls:
 11223 ;;		_putch
 11224 ;; This function is called by:
 11225 ;;		_pad
 11226 ;;		_vfpfcnvrt
 11227 ;;		_fputs
 11228 ;; This function uses a non-reentrant model
 11229 ;;
 11230                           
 11231     1480                     _fputc:	
 11232                           ;psect for function _fputc
 11233                           
 11234                           
 11235                           ;incstack = 0
 11236                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11237     1480  0021               	movlb	1	; select bank1
 11238     1481  0825               	movf	fputc@fp^(0+128),w
 11239     1482  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11240     1483  1903               	btfsc	3,2
 11241     1484  2C89               	goto	l4133
 11242     1485  0825               	movf	fputc@fp^(0+128),w
 11243     1486  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11244     1487  1D03               	btfss	3,2
 11245     1488  2C8D               	goto	l4135
 11246     1489                     l4133:
 11247     1489  0823               	movf	fputc@c^(0+128),w
 11248     148A  319F  27E3         	fcall	_putch
 11249     148C  0008               	return
 11250     148D                     l4135:
 11251     148D  0825               	movf	fputc@fp^(0+128),w
 11252     148E  0086               	movwf	6
 11253     148F  0826               	movf	(fputc@fp+1)^(0+128),w
 11254     1490  0087               	movwf	7
 11255     1491  3149               	addfsr 1,9
 11256     1492  0016               	moviw fsr1++
 11257     1493  0401               	iorwf	1,w
 11258     1494  1903               	btfsc	3,2
 11259     1495  2CB4               	goto	l4139
 11260     1496  0825               	movf	fputc@fp^(0+128),w
 11261     1497  0086               	movwf	6
 11262     1498  0826               	movf	(fputc@fp+1)^(0+128),w
 11263     1499  0087               	movwf	7
 11264     149A  3149               	addfsr 1,9
 11265     149B  3F40               	moviw [0]fsr1
 11266     149C  00A7               	movwf	??_fputc^(0+128)
 11267     149D  3F41               	moviw [1]fsr1
 11268     149E  00A8               	movwf	(??_fputc^(0+128)+1)
 11269     149F  0825               	movf	fputc@fp^(0+128),w
 11270     14A0  0086               	movwf	6
 11271     14A1  0826               	movf	(fputc@fp+1)^(0+128),w
 11272     14A2  0087               	movwf	7
 11273     14A3  3142               	addfsr 1,2
 11274     14A4  3F40               	moviw [0]fsr1
 11275     14A5  00A9               	movwf	(??_fputc+2)^(0+128)
 11276     14A6  3F41               	moviw [1]fsr1
 11277     14A7  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 11278     14A8  082A               	movf	(??_fputc+3)^(0+128),w
 11279     14A9  3A80               	xorlw	128
 11280     14AA  00AB               	movwf	(??_fputc+4)^(0+128)
 11281     14AB  0828               	movf	(??_fputc+1)^(0+128),w
 11282     14AC  3A80               	xorlw	128
 11283     14AD  022B               	subwf	(??_fputc+4)^(0+128),w
 11284     14AE  1D03               	skipz
 11285     14AF  2CB2               	goto	u3995
 11286     14B0  0827               	movf	??_fputc^(0+128),w
 11287     14B1  0229               	subwf	(??_fputc+2)^(0+128),w
 11288     14B2                     u3995:
 11289     14B2  1803               	skipnc
 11290     14B3  0008               	return
 11291     14B4                     l4139:
 11292     14B4  0021               	movlb	1	; select bank1
 11293     14B5  0825               	movf	fputc@fp^(0+128),w
 11294     14B6  0086               	movwf	6
 11295     14B7  0826               	movf	(fputc@fp+1)^(0+128),w
 11296     14B8  0087               	movwf	7
 11297     14B9  3142               	addfsr 1,2
 11298     14BA  0825               	movf	fputc@fp^(0+128),w
 11299     14BB  0084               	movwf	4
 11300     14BC  0826               	movf	(fputc@fp+1)^(0+128),w
 11301     14BD  0085               	movwf	5
 11302     14BE  3F00               	moviw [0]fsr0
 11303     14BF  00A7               	movwf	??_fputc^(0+128)
 11304     14C0  3F01               	moviw [1]fsr0
 11305     14C1  00A8               	movwf	(??_fputc^(0+128)+1)
 11306     14C2  3F40               	moviw [0]fsr1
 11307     14C3  0727               	addwf	??_fputc^(0+128),w
 11308     14C4  0084               	movwf	4
 11309     14C5  3F41               	moviw [1]fsr1
 11310     14C6  3D28               	addwfc	(??_fputc+1)^(0+128),w
 11311     14C7  0085               	movwf	5
 11312     14C8  0823               	movf	fputc@c^(0+128),w
 11313     14C9  0080               	movwf	0
 11314     14CA  0825               	movf	fputc@fp^(0+128),w
 11315     14CB  0086               	movwf	6
 11316     14CC  0826               	movf	(fputc@fp+1)^(0+128),w
 11317     14CD  0087               	movwf	7
 11318     14CE  3142               	addfsr 1,2
 11319     14CF  3001               	movlw	1
 11320     14D0  0781               	addwf	1,f
 11321     14D1  3141               	addfsr 1,1
 11322     14D2  1803               	skipnc
 11323     14D3  0A81               	incf	1,f
 11324     14D4  0008               	return
 11325     14D5                     __end_of_fputc:
 11326                           
 11327                           	psect	text24
 11328     1FE3                     __ptext24:	
 11329 ;; *************** function _putch *****************
 11330 ;; Defined at:
 11331 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  txData          1    wreg     unsigned char 
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;  txData          1    2[BANK1 ] unsigned char 
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  1    wreg      void 
 11338 ;; Registers used:
 11339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11346 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;Total ram usage:        1 bytes
 11350 ;; Hardware stack levels used: 1
 11351 ;; Hardware stack levels required when called: 6
 11352 ;; This function calls:
 11353 ;;		_EUSART_IsTxReady
 11354 ;;		_EUSART_Write
 11355 ;; This function is called by:
 11356 ;;		_fputc
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360     1FE3                     _putch:	
 11361                           ;psect for function _putch
 11362                           
 11363                           
 11364                           ;incstack = 0
 11365                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11366                           ;putch@txData stored from wreg
 11367     1FE3  0021               	movlb	1	; select bank1
 11368     1FE4  00A2               	movwf	putch@txData^(0+128)
 11369     1FE5                     l4123:	
 11370                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 11371                           
 11372                           
 11373                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 11374     1FE5  319E  26CC  319F   	fcall	_EUSART_IsTxReady
 11375     1FE8  3A00               	xorlw	0
 11376     1FE9  1903               	skipnz
 11377     1FEA  2FE5               	goto	l4123
 11378                           
 11379                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 11380     1FEB  0021               	movlb	1	; select bank1
 11381     1FEC  0822               	movf	putch@txData^(0+128),w
 11382     1FED  00A0               	movwf	EUSART_Write@txData^(0+128)
 11383     1FEE  3191  21EB         	fcall	_EUSART_Write
 11384     1FF0  0008               	return
 11385     1FF1                     __end_of_putch:
 11386                           
 11387                           	psect	text25
 11388     11EB                     __ptext25:	
 11389 ;; *************** function _EUSART_Write *****************
 11390 ;; Defined at:
 11391 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  txData          1    0[BANK1 ] unsigned char 
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11405 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;Total ram usage:        2 bytes
 11410 ;; Hardware stack levels used: 1
 11411 ;; Hardware stack levels required when called: 5
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_putch
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419     11EB                     _EUSART_Write:	
 11420                           ;psect for function _EUSART_Write
 11421                           
 11422                           
 11423                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 11424                           
 11425                           ;incstack = 0
 11426                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11427     11EB  0021               	movlb	1	; select bank1
 11428     11EC  1A11               	btfsc	17,4	;volatile
 11429     11ED  29F2               	goto	l4109
 11430                           
 11431                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 11432     11EE  0820               	movf	EUSART_Write@txData^(0+128),w
 11433     11EF  0023               	movlb	3	; select bank3
 11434     11F0  009A               	movwf	26	;volatile
 11435                           
 11436                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 11437     11F1  2A0C               	goto	l721
 11438     11F2                     l4109:
 11439     11F2  0020               	movlb	0	; select bank0
 11440     11F3  0869               	movf	_eusartTxBufferRemaining,w	;volatile
 11441     11F4  1903               	btfsc	3,2
 11442     11F5  2A0C               	goto	l721
 11443                           
 11444                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 11445     11F6  086B               	movf	_eusartTxHead,w
 11446     11F7  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11447     11F8  0086               	movwf	6
 11448     11F9  3001               	movlw	1	; select bank2/3
 11449     11FA  0087               	movwf	7
 11450     11FB  0021               	movlb	1	; select bank1
 11451     11FC  0820               	movf	EUSART_Write@txData^(0+128),w
 11452     11FD  0081               	movwf	1
 11453                           
 11454                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 11455     11FE  0020               	movlb	0	; select bank0
 11456     11FF  086B               	movf	_eusartTxHead,w	;volatile
 11457     1200  3E01               	addlw	1
 11458     1201  3907               	andlw	7
 11459     1202  0021               	movlb	1	; select bank1
 11460     1203  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 11461                           
 11462                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 11463     1204  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 11464     1205  0020               	movlb	0	; select bank0
 11465     1206  00EB               	movwf	_eusartTxHead	;volatile
 11466                           
 11467                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 11468     1207  0021               	movlb	1	; select bank1
 11469     1208  1211               	bcf	17,4	;volatile
 11470                           
 11471                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 11472     1209  3001               	movlw	1
 11473     120A  0020               	movlb	0	; select bank0
 11474     120B  02E9               	subwf	_eusartTxBufferRemaining,f	;volatile
 11475     120C                     l721:	
 11476                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 11477                           
 11478                           
 11479                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 11480     120C  0021               	movlb	1	; select bank1
 11481     120D  1611               	bsf	17,4	;volatile
 11482     120E  0008               	return
 11483     120F                     __end_of_EUSART_Write:
 11484                           
 11485                           	psect	text26
 11486     1ECC                     __ptext26:	
 11487 ;; *************** function _EUSART_IsTxReady *****************
 11488 ;; Defined at:
 11489 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;		None
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      _Bool 
 11496 ;; Registers used:
 11497 ;;		wreg, status,2, status,0
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;Total ram usage:        0 bytes
 11508 ;; Hardware stack levels used: 1
 11509 ;; Hardware stack levels required when called: 5
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_putch
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517     1ECC                     _EUSART_IsTxReady:	
 11518                           ;psect for function _EUSART_IsTxReady
 11519                           
 11520                           
 11521                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 11522                           
 11523                           ;incstack = 0
 11524                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 11525     1ECC  0020               	movlb	0	; select bank0
 11526     1ECD  0869               	movf	_eusartTxBufferRemaining,w	;volatile
 11527     1ECE  1903               	btfsc	3,2
 11528     1ECF  2ED2               	goto	u3910
 11529     1ED0  3001               	movlw	1
 11530     1ED1  0008               	return
 11531     1ED2                     u3910:
 11532     1ED2  3000               	movlw	0
 11533     1ED3  0008               	return
 11534     1ED4                     __end_of_EUSART_IsTxReady:
 11535                           
 11536                           	psect	text27
 11537     100D                     __ptext27:	
 11538 ;; *************** function _abs *****************
 11539 ;; Defined at:
 11540 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;  a               2    6[BANK1 ] int 
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;		None
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  2    6[BANK1 ] int 
 11547 ;; Registers used:
 11548 ;;		wreg, status,2, status,0
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 0/0
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11554 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;Total ram usage:        4 bytes
 11559 ;; Hardware stack levels used: 1
 11560 ;; Hardware stack levels required when called: 5
 11561 ;; This function calls:
 11562 ;;		Nothing
 11563 ;; This function is called by:
 11564 ;;		_dtoa
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568     100D                     _abs:	
 11569                           ;psect for function _abs
 11570                           
 11571                           
 11572                           ;incstack = 0
 11573                           ; Regs used in _abs: [wreg+status,2+status,0]
 11574     100D  0021               	movlb	1	; select bank1
 11575     100E  1FA7               	btfss	(abs@a+1)^(0+128),7
 11576     100F  0008               	return
 11577     1010  0926               	comf	abs@a^(0+128),w
 11578     1011  00A8               	movwf	??_abs^(0+128)
 11579     1012  0927               	comf	(abs@a+1)^(0+128),w
 11580     1013  00A9               	movwf	(??_abs^(0+128)+1)
 11581     1014  0AA8               	incf	??_abs^(0+128),f
 11582     1015  1903               	skipnz
 11583     1016  0AA9               	incf	(??_abs^(0+128)+1),f
 11584     1017  0828               	movf	??_abs^(0+128),w
 11585     1018  00A6               	movwf	?_abs^(0+128)
 11586     1019  0829               	movf	(??_abs+1)^(0+128),w
 11587     101A  00A7               	movwf	(?_abs+1)^(0+128)
 11588     101B  0008               	return
 11589     101C                     __end_of_abs:
 11590                           
 11591                           	psect	text28
 11592     1351                     __ptext28:	
 11593 ;; *************** function ___awmod *****************
 11594 ;; Defined at:
 11595 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  divisor         2    0[BANK1 ] int 
 11598 ;;  dividend        2    2[BANK1 ] int 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  sign            1    5[BANK1 ] unsigned char 
 11601 ;;  counter         1    4[BANK1 ] unsigned char 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  2    0[BANK1 ] int 
 11604 ;; Registers used:
 11605 ;;		wreg, status,2, status,0
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/0
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11611 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11614 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;Total ram usage:        6 bytes
 11616 ;; Hardware stack levels used: 1
 11617 ;; Hardware stack levels required when called: 5
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_dtoa
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625     1351                     ___awmod:	
 11626                           ;psect for function ___awmod
 11627                           
 11628                           
 11629                           ;incstack = 0
 11630                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11631     1351  0021               	movlb	1	; select bank1
 11632     1352  01A5               	clrf	___awmod@sign^(0+128)
 11633     1353  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 11634     1354  2B5C               	goto	l4219
 11635     1355  09A2               	comf	___awmod@dividend^(0+128),f
 11636     1356  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 11637     1357  0AA2               	incf	___awmod@dividend^(0+128),f
 11638     1358  1903               	skipnz
 11639     1359  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 11640     135A  3001               	movlw	1
 11641     135B  00A5               	movwf	___awmod@sign^(0+128)
 11642     135C                     l4219:
 11643     135C  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 11644     135D  2B63               	goto	l4223
 11645     135E  09A0               	comf	___awmod@divisor^(0+128),f
 11646     135F  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 11647     1360  0AA0               	incf	___awmod@divisor^(0+128),f
 11648     1361  1903               	skipnz
 11649     1362  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 11650     1363                     l4223:
 11651     1363  0820               	movf	___awmod@divisor^(0+128),w
 11652     1364  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 11653     1365  1903               	btfsc	3,2
 11654     1366  2B88               	goto	l4241
 11655     1367  3001               	movlw	1
 11656     1368  00A4               	movwf	___awmod@counter^(0+128)
 11657     1369                     l4231:
 11658     1369  1BA1               	btfsc	(___awmod@divisor+1)^(0+128),7
 11659     136A  2B73               	goto	l4233
 11660     136B  3001               	movlw	1
 11661     136C                     u4185:
 11662     136C  35A0               	lslf	___awmod@divisor^(0+128),f
 11663     136D  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 11664     136E  0B89               	decfsz	9,f
 11665     136F  2B6C               	goto	u4185
 11666     1370  3001               	movlw	1
 11667     1371  07A4               	addwf	___awmod@counter^(0+128),f
 11668     1372  2B69               	goto	l4231
 11669     1373                     l4233:
 11670     1373  0821               	movf	(___awmod@divisor+1)^(0+128),w
 11671     1374  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 11672     1375  1D03               	skipz
 11673     1376  2B79               	goto	u4205
 11674     1377  0820               	movf	___awmod@divisor^(0+128),w
 11675     1378  0222               	subwf	___awmod@dividend^(0+128),w
 11676     1379                     u4205:
 11677     1379  1C03               	skipc
 11678     137A  2B7F               	goto	l4237
 11679     137B  0820               	movf	___awmod@divisor^(0+128),w
 11680     137C  02A2               	subwf	___awmod@dividend^(0+128),f
 11681     137D  0821               	movf	(___awmod@divisor+1)^(0+128),w
 11682     137E  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 11683     137F                     l4237:
 11684     137F  3001               	movlw	1
 11685     1380                     u4215:
 11686     1380  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 11687     1381  0CA0               	rrf	___awmod@divisor^(0+128),f
 11688     1382  0B89               	decfsz	9,f
 11689     1383  2B80               	goto	u4215
 11690     1384  3001               	movlw	1
 11691     1385  02A4               	subwf	___awmod@counter^(0+128),f
 11692     1386  1D03               	btfss	3,2
 11693     1387  2B73               	goto	l4233
 11694     1388                     l4241:
 11695     1388  0825               	movf	___awmod@sign^(0+128),w
 11696     1389  1903               	btfsc	3,2
 11697     138A  2B90               	goto	l4245
 11698     138B  09A2               	comf	___awmod@dividend^(0+128),f
 11699     138C  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 11700     138D  0AA2               	incf	___awmod@dividend^(0+128),f
 11701     138E  1903               	skipnz
 11702     138F  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 11703     1390                     l4245:
 11704     1390  0823               	movf	(___awmod@dividend+1)^(0+128),w
 11705     1391  00A1               	movwf	(?___awmod+1)^(0+128)
 11706     1392  0822               	movf	___awmod@dividend^(0+128),w
 11707     1393  00A0               	movwf	?___awmod^(0+128)
 11708     1394  0008               	return
 11709     1395                     __end_of___awmod:
 11710                           
 11711                           	psect	text29
 11712     13E2                     __ptext29:	
 11713 ;; *************** function ___awdiv *****************
 11714 ;; Defined at:
 11715 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  divisor         2    0[BANK1 ] int 
 11718 ;;  dividend        2    2[BANK1 ] int 
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;  quotient        2    6[BANK1 ] int 
 11721 ;;  sign            1    5[BANK1 ] unsigned char 
 11722 ;;  counter         1    4[BANK1 ] unsigned char 
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  2    0[BANK1 ] int 
 11725 ;; Registers used:
 11726 ;;		wreg, status,2, status,0
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11732 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;Total ram usage:        8 bytes
 11737 ;; Hardware stack levels used: 1
 11738 ;; Hardware stack levels required when called: 5
 11739 ;; This function calls:
 11740 ;;		Nothing
 11741 ;; This function is called by:
 11742 ;;		_dtoa
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746     13E2                     ___awdiv:	
 11747                           ;psect for function ___awdiv
 11748                           
 11749                           
 11750                           ;incstack = 0
 11751                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11752     13E2  0021               	movlb	1	; select bank1
 11753     13E3  01A5               	clrf	___awdiv@sign^(0+128)
 11754     13E4  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 11755     13E5  2BED               	goto	l4175
 11756     13E6  09A0               	comf	___awdiv@divisor^(0+128),f
 11757     13E7  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 11758     13E8  0AA0               	incf	___awdiv@divisor^(0+128),f
 11759     13E9  1903               	skipnz
 11760     13EA  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 11761     13EB  3001               	movlw	1
 11762     13EC  00A5               	movwf	___awdiv@sign^(0+128)
 11763     13ED                     l4175:
 11764     13ED  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 11765     13EE  2BF6               	goto	l4181
 11766     13EF  09A2               	comf	___awdiv@dividend^(0+128),f
 11767     13F0  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 11768     13F1  0AA2               	incf	___awdiv@dividend^(0+128),f
 11769     13F2  1903               	skipnz
 11770     13F3  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 11771     13F4  3001               	movlw	1
 11772     13F5  06A5               	xorwf	___awdiv@sign^(0+128),f
 11773     13F6                     l4181:
 11774     13F6  01A6               	clrf	___awdiv@quotient^(0+128)
 11775     13F7  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 11776     13F8  0820               	movf	___awdiv@divisor^(0+128),w
 11777     13F9  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 11778     13FA  1903               	btfsc	3,2
 11779     13FB  2C23               	goto	l4203
 11780     13FC  3001               	movlw	1
 11781     13FD  00A4               	movwf	___awdiv@counter^(0+128)
 11782     13FE                     l4191:
 11783     13FE  1BA1               	btfsc	(___awdiv@divisor+1)^(0+128),7
 11784     13FF  2C08               	goto	l4193
 11785     1400  3001               	movlw	1
 11786     1401                     u4085:
 11787     1401  35A0               	lslf	___awdiv@divisor^(0+128),f
 11788     1402  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 11789     1403  0B89               	decfsz	9,f
 11790     1404  2C01               	goto	u4085
 11791     1405  3001               	movlw	1
 11792     1406  07A4               	addwf	___awdiv@counter^(0+128),f
 11793     1407  2BFE               	goto	l4191
 11794     1408                     l4193:
 11795     1408  3001               	movlw	1
 11796     1409                     u4105:
 11797     1409  35A6               	lslf	___awdiv@quotient^(0+128),f
 11798     140A  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 11799     140B  0B89               	decfsz	9,f
 11800     140C  2C09               	goto	u4105
 11801     140D  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 11802     140E  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 11803     140F  1D03               	skipz
 11804     1410  2C13               	goto	u4115
 11805     1411  0820               	movf	___awdiv@divisor^(0+128),w
 11806     1412  0222               	subwf	___awdiv@dividend^(0+128),w
 11807     1413                     u4115:
 11808     1413  1C03               	skipc
 11809     1414  2C1A               	goto	l4199
 11810     1415  0820               	movf	___awdiv@divisor^(0+128),w
 11811     1416  02A2               	subwf	___awdiv@dividend^(0+128),f
 11812     1417  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 11813     1418  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 11814     1419  1426               	bsf	___awdiv@quotient^(0+128),0
 11815     141A                     l4199:
 11816     141A  3001               	movlw	1
 11817     141B                     u4125:
 11818     141B  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 11819     141C  0CA0               	rrf	___awdiv@divisor^(0+128),f
 11820     141D  0B89               	decfsz	9,f
 11821     141E  2C1B               	goto	u4125
 11822     141F  3001               	movlw	1
 11823     1420  02A4               	subwf	___awdiv@counter^(0+128),f
 11824     1421  1D03               	btfss	3,2
 11825     1422  2C08               	goto	l4193
 11826     1423                     l4203:
 11827     1423  0825               	movf	___awdiv@sign^(0+128),w
 11828     1424  1903               	btfsc	3,2
 11829     1425  2C2B               	goto	l4207
 11830     1426  09A6               	comf	___awdiv@quotient^(0+128),f
 11831     1427  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 11832     1428  0AA6               	incf	___awdiv@quotient^(0+128),f
 11833     1429  1903               	skipnz
 11834     142A  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 11835     142B                     l4207:
 11836     142B  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 11837     142C  00A1               	movwf	(?___awdiv+1)^(0+128)
 11838     142D  0826               	movf	___awdiv@quotient^(0+128),w
 11839     142E  00A0               	movwf	?___awdiv^(0+128)
 11840     142F  0008               	return
 11841     1430                     __end_of___awdiv:
 11842                           
 11843                           	psect	text30
 11844     118B                     __ptext30:	
 11845 ;; *************** function ___flsub *****************
 11846 ;; Defined at:
 11847 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;  a               4   34[BANK1 ] int 
 11850 ;;  b               4   38[BANK1 ] int 
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;		None
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  4   34[BANK1 ] int 
 11855 ;; Registers used:
 11856 ;;		wreg, status,2, status,0, pclath, cstack
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11862 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;Total ram usage:        8 bytes
 11867 ;; Hardware stack levels used: 1
 11868 ;; Hardware stack levels required when called: 6
 11869 ;; This function calls:
 11870 ;;		___fladd
 11871 ;; This function is called by:
 11872 ;;		_printFloat
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876     118B                     ___flsub:	
 11877                           ;psect for function ___flsub
 11878                           
 11879                           
 11880                           ;incstack = 0
 11881                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 11882     118B  3080               	movlw	128
 11883     118C  0021               	movlb	1	; select bank1
 11884     118D  06C5               	xorwf	(___flsub@a+3)^(0+128),f
 11885     118E  0849               	movf	(___flsub@b+3)^(0+128),w
 11886     118F  00B1               	movwf	(___fladd@b+3)^(0+128)
 11887     1190  0848               	movf	(___flsub@b+2)^(0+128),w
 11888     1191  00B0               	movwf	(___fladd@b+2)^(0+128)
 11889     1192  0847               	movf	(___flsub@b+1)^(0+128),w
 11890     1193  00AF               	movwf	(___fladd@b+1)^(0+128)
 11891     1194  0846               	movf	___flsub@b^(0+128),w
 11892     1195  00AE               	movwf	___fladd@b^(0+128)
 11893     1196  0845               	movf	(___flsub@a+3)^(0+128),w
 11894     1197  00B5               	movwf	(___fladd@a+3)^(0+128)
 11895     1198  0844               	movf	(___flsub@a+2)^(0+128),w
 11896     1199  00B4               	movwf	(___fladd@a+2)^(0+128)
 11897     119A  0843               	movf	(___flsub@a+1)^(0+128),w
 11898     119B  00B3               	movwf	(___fladd@a+1)^(0+128)
 11899     119C  0842               	movf	___flsub@a^(0+128),w
 11900     119D  00B2               	movwf	___fladd@a^(0+128)
 11901     119E  3184  2495         	fcall	___fladd
 11902     11A0  0021               	movlb	1	; select bank1
 11903     11A1  0831               	movf	(?___fladd+3)^(0+128),w
 11904     11A2  00C5               	movwf	(?___flsub+3)^(0+128)
 11905     11A3  0830               	movf	(?___fladd+2)^(0+128),w
 11906     11A4  00C4               	movwf	(?___flsub+2)^(0+128)
 11907     11A5  082F               	movf	(?___fladd+1)^(0+128),w
 11908     11A6  00C3               	movwf	(?___flsub+1)^(0+128)
 11909     11A7  082E               	movf	?___fladd^(0+128),w
 11910     11A8  00C2               	movwf	?___flsub^(0+128)
 11911     11A9  0008               	return
 11912     11AA                     __end_of___flsub:
 11913                           
 11914                           	psect	text31
 11915     0801                     __ptext31:	
 11916 ;; *************** function _getKp *****************
 11917 ;; Defined at:
 11918 ;;		line 41 in file "controller.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;		None
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;		None
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  4    0[BANK1 ] float 
 11925 ;; Registers used:
 11926 ;;		wreg
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11932 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;Total ram usage:        4 bytes
 11937 ;; Hardware stack levels used: 1
 11938 ;; Hardware stack levels required when called: 5
 11939 ;; This function calls:
 11940 ;;		Nothing
 11941 ;; This function is called by:
 11942 ;;		_printLogs
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946     0801                     _getKp:	
 11947                           ;psect for function _getKp
 11948                           
 11949                           
 11950                           ;incstack = 0
 11951                           ; Regs used in _getKp: [wreg]
 11952     0801  0022               	movlb	2	; select bank2
 11953     0802  086F               	movf	(_kp+3)^(0+256),w
 11954     0803  0021               	movlb	1	; select bank1
 11955     0804  00A3               	movwf	(?_getKp+3)^(0+128)
 11956     0805  0022               	movlb	2	; select bank2
 11957     0806  086E               	movf	(_kp+2)^(0+256),w
 11958     0807  0021               	movlb	1	; select bank1
 11959     0808  00A2               	movwf	(?_getKp+2)^(0+128)
 11960     0809  0022               	movlb	2	; select bank2
 11961     080A  086D               	movf	(_kp+1)^(0+256),w
 11962     080B  0021               	movlb	1	; select bank1
 11963     080C  00A1               	movwf	(?_getKp+1)^(0+128)
 11964     080D  0022               	movlb	2	; select bank2
 11965     080E  086C               	movf	_kp^(0+256),w
 11966     080F  0021               	movlb	1	; select bank1
 11967     0810  00A0               	movwf	?_getKp^(0+128)
 11968     0811  0008               	return
 11969     0812                     __end_of_getKp:
 11970                           
 11971                           	psect	text32
 11972     105D                     __ptext32:	
 11973 ;; *************** function _getKi *****************
 11974 ;; Defined at:
 11975 ;;		line 42 in file "controller.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;		None
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;		None
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  4    0[BANK1 ] float 
 11982 ;; Registers used:
 11983 ;;		wreg
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11989 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;Total ram usage:        4 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; Hardware stack levels required when called: 5
 11996 ;; This function calls:
 11997 ;;		Nothing
 11998 ;; This function is called by:
 11999 ;;		_printLogs
 12000 ;; This function uses a non-reentrant model
 12001 ;;
 12002                           
 12003     105D                     _getKi:	
 12004                           ;psect for function _getKi
 12005                           
 12006                           
 12007                           ;incstack = 0
 12008                           ; Regs used in _getKi: [wreg]
 12009     105D  0022               	movlb	2	; select bank2
 12010     105E  086B               	movf	(_ki+3)^(0+256),w
 12011     105F  0021               	movlb	1	; select bank1
 12012     1060  00A3               	movwf	(?_getKi+3)^(0+128)
 12013     1061  0022               	movlb	2	; select bank2
 12014     1062  086A               	movf	(_ki+2)^(0+256),w
 12015     1063  0021               	movlb	1	; select bank1
 12016     1064  00A2               	movwf	(?_getKi+2)^(0+128)
 12017     1065  0022               	movlb	2	; select bank2
 12018     1066  0869               	movf	(_ki+1)^(0+256),w
 12019     1067  0021               	movlb	1	; select bank1
 12020     1068  00A1               	movwf	(?_getKi+1)^(0+128)
 12021     1069  0022               	movlb	2	; select bank2
 12022     106A  0868               	movf	_ki^(0+256),w
 12023     106B  0021               	movlb	1	; select bank1
 12024     106C  00A0               	movwf	?_getKi^(0+128)
 12025     106D  0008               	return
 12026     106E                     __end_of_getKi:
 12027                           
 12028                           	psect	text33
 12029     1F2C                     __ptext33:	
 12030 ;; *************** function _getDutycycle *****************
 12031 ;; Defined at:
 12032 ;;		line 40 in file "controller.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  2    0[BANK1 ] unsigned short 
 12039 ;; Registers used:
 12040 ;;		wreg
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12046 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;Total ram usage:        2 bytes
 12051 ;; Hardware stack levels used: 1
 12052 ;; Hardware stack levels required when called: 5
 12053 ;; This function calls:
 12054 ;;		Nothing
 12055 ;; This function is called by:
 12056 ;;		_printLogs
 12057 ;;		_dutycycle_led_strip
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061     1F2C                     _getDutycycle:	
 12062                           ;psect for function _getDutycycle
 12063                           
 12064                           
 12065                           ;incstack = 0
 12066                           ; Regs used in _getDutycycle: [wreg]
 12067     1F2C  0020               	movlb	0	; select bank0
 12068     1F2D  0858               	movf	_dutycycle+1,w
 12069     1F2E  0021               	movlb	1	; select bank1
 12070     1F2F  00A1               	movwf	(?_getDutycycle+1)^(0+128)
 12071     1F30  0020               	movlb	0	; select bank0
 12072     1F31  0857               	movf	_dutycycle,w
 12073     1F32  0021               	movlb	1	; select bank1
 12074     1F33  00A0               	movwf	?_getDutycycle^(0+128)
 12075     1F34  0008               	return
 12076     1F35                     __end_of_getDutycycle:
 12077                           
 12078                           	psect	text34
 12079     1000                     __ptext34:	
 12080 ;; *************** function _initLedstrip *****************
 12081 ;; Defined at:
 12082 ;;		line 116 in file "ledstrip.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;		None
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;		None
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  1    wreg      void 
 12089 ;; Registers used:
 12090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;Total ram usage:        0 bytes
 12101 ;; Hardware stack levels used: 1
 12102 ;; Hardware stack levels required when called: 7
 12103 ;; This function calls:
 12104 ;;		_SPI1_Open
 12105 ;;		_TMR6_PeriodMatchCallbackRegister
 12106 ;; This function is called by:
 12107 ;;		_main
 12108 ;; This function uses a non-reentrant model
 12109 ;;
 12110                           
 12111     1000                     _initLedstrip:	
 12112                           ;psect for function _initLedstrip
 12113                           
 12114                           
 12115                           ;ledstrip.c: 117:     SPI1_Open(HOST_CONFIG);
 12116                           
 12117                           ;incstack = 0
 12118                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12119     1000  0021               	movlb	1	; select bank1
 12120     1001  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 12121     1002  3196  26B0  3190   	fcall	_SPI1_Open
 12122                           
 12123                           ;ledstrip.c: 118:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 12124     1005  30A9               	movlw	low _updateLedstripAnimation
 12125     1006  0021               	movlb	1	; select bank1
 12126     1007  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 12127     1008  301E               	movlw	high _updateLedstripAnimation
 12128     1009  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 12129     100A  319F  2723         	fcall	_TMR6_PeriodMatchCallbackRegister
 12130     100C  0008               	return
 12131     100D                     __end_of_initLedstrip:
 12132                           
 12133                           	psect	text35
 12134     1F23                     __ptext35:	
 12135 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 12136 ;; Defined at:
 12137 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 12140 ;;		 -> updateLedstripAnimation(1), 
 12141 ;; Auto vars:     Size  Location     Type
 12142 ;;		None
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  1    wreg      void 
 12145 ;; Registers used:
 12146 ;;		wreg
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/0
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12152 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;Total ram usage:        2 bytes
 12157 ;; Hardware stack levels used: 1
 12158 ;; Hardware stack levels required when called: 5
 12159 ;; This function calls:
 12160 ;;		Nothing
 12161 ;; This function is called by:
 12162 ;;		_initLedstrip
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166     1F23                     _TMR6_PeriodMatchCallbackRegister:	
 12167                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 12168                           
 12169                           
 12170                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 12171                           
 12172                           ;incstack = 0
 12173                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 12174     1F23  0021               	movlb	1	; select bank1
 12175     1F24  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 12176     1F25  0022               	movlb	2	; select bank2
 12177     1F26  00DF               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 12178     1F27  0021               	movlb	1	; select bank1
 12179     1F28  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 12180     1F29  0022               	movlb	2	; select bank2
 12181     1F2A  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 12182     1F2B  0008               	return
 12183     1F2C                     __end_of_TMR6_PeriodMatchCallbackRegister:
 12184                           
 12185                           	psect	text36
 12186     16B0                     __ptext36:	
 12187 ;; *************** function _SPI1_Open *****************
 12188 ;; Defined at:
 12189 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;  returnValue     1    0        _Bool 
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1    wreg      _Bool 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12203 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12205 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12206 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;Total ram usage:        3 bytes
 12208 ;; Hardware stack levels used: 1
 12209 ;; Hardware stack levels required when called: 6
 12210 ;; This function calls:
 12211 ;;		___wmul
 12212 ;; This function is called by:
 12213 ;;		_initLedstrip
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217     16B0                     _SPI1_Open:	
 12218                           ;psect for function _SPI1_Open
 12219                           
 12220                           
 12221                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 12222                           
 12223                           ;incstack = 0
 12224                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12225     16B0  0024               	movlb	4	; select bank4
 12226     16B1  1A95               	btfsc	21,5	;volatile
 12227     16B2  0008               	return
 12228                           
 12229                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 12230     16B3  0021               	movlb	1	; select bank1
 12231     16B4  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12232     16B5  00A7               	movwf	??_SPI1_Open^(0+128)
 12233     16B6  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12234     16B7  0827               	movf	??_SPI1_Open^(0+128),w
 12235     16B8  00A0               	movwf	___wmul@multiplier^(0+128)
 12236     16B9  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12237     16BA  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12238     16BB  3005               	movlw	5
 12239     16BC  00A2               	movwf	___wmul@multiplicand^(0+128)
 12240     16BD  3000               	movlw	0
 12241     16BE  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12242     16BF  3190  20F8  3196   	fcall	___wmul
 12243     16C2  30E2               	movlw	low _spi1_configuration
 12244     16C3  0021               	movlb	1	; select bank1
 12245     16C4  0720               	addwf	?___wmul^(0+128),w
 12246     16C5  0084               	movwf	4
 12247     16C6  3018               	movlw	high _spi1_configuration
 12248     16C7  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12249     16C8  3880               	iorlw	128
 12250     16C9  0085               	movwf	5
 12251     16CA  0800               	movf	0,w	;code access
 12252     16CB  0024               	movlb	4	; select bank4
 12253     16CC  0094               	movwf	20	;volatile
 12254                           
 12255                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 12256     16CD  0021               	movlb	1	; select bank1
 12257     16CE  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12258     16CF  00A7               	movwf	??_SPI1_Open^(0+128)
 12259     16D0  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12260     16D1  0827               	movf	??_SPI1_Open^(0+128),w
 12261     16D2  00A0               	movwf	___wmul@multiplier^(0+128)
 12262     16D3  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12263     16D4  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12264     16D5  3005               	movlw	5
 12265     16D6  00A2               	movwf	___wmul@multiplicand^(0+128)
 12266     16D7  3000               	movlw	0
 12267     16D8  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12268     16D9  3190  20F8  3196   	fcall	___wmul
 12269     16DC  30E3               	movlw	low (_spi1_configuration+1)
 12270     16DD  0021               	movlb	1	; select bank1
 12271     16DE  0720               	addwf	?___wmul^(0+128),w
 12272     16DF  0084               	movwf	4
 12273     16E0  3018               	movlw	high (_spi1_configuration+1)
 12274     16E1  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12275     16E2  3880               	iorlw	128
 12276     16E3  0085               	movwf	5
 12277     16E4  0800               	movf	0,w	;code access
 12278     16E5  0024               	movlb	4	; select bank4
 12279     16E6  0095               	movwf	21	;volatile
 12280                           
 12281                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 12282     16E7  0021               	movlb	1	; select bank1
 12283     16E8  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12284     16E9  00A7               	movwf	??_SPI1_Open^(0+128)
 12285     16EA  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12286     16EB  0827               	movf	??_SPI1_Open^(0+128),w
 12287     16EC  00A0               	movwf	___wmul@multiplier^(0+128)
 12288     16ED  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12289     16EE  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12290     16EF  3005               	movlw	5
 12291     16F0  00A2               	movwf	___wmul@multiplicand^(0+128)
 12292     16F1  3000               	movlw	0
 12293     16F2  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12294     16F3  3190  20F8  3196   	fcall	___wmul
 12295     16F6  30E4               	movlw	low (_spi1_configuration+2)
 12296     16F7  0021               	movlb	1	; select bank1
 12297     16F8  0720               	addwf	?___wmul^(0+128),w
 12298     16F9  0084               	movwf	4
 12299     16FA  3018               	movlw	high (_spi1_configuration+2)
 12300     16FB  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12301     16FC  3880               	iorlw	128
 12302     16FD  0085               	movwf	5
 12303     16FE  0800               	movf	0,w	;code access
 12304     16FF  0024               	movlb	4	; select bank4
 12305     1700  0097               	movwf	23	;volatile
 12306                           
 12307                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 12308     1701  0021               	movlb	1	; select bank1
 12309     1702  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12310     1703  00A7               	movwf	??_SPI1_Open^(0+128)
 12311     1704  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12312     1705  0827               	movf	??_SPI1_Open^(0+128),w
 12313     1706  00A0               	movwf	___wmul@multiplier^(0+128)
 12314     1707  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12315     1708  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12316     1709  3005               	movlw	5
 12317     170A  00A2               	movwf	___wmul@multiplicand^(0+128)
 12318     170B  3000               	movlw	0
 12319     170C  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12320     170D  3190  20F8         	fcall	___wmul
 12321     170F  30E5               	movlw	low (_spi1_configuration+3)
 12322     1710  0021               	movlb	1	; select bank1
 12323     1711  0720               	addwf	?___wmul^(0+128),w
 12324     1712  0084               	movwf	4
 12325     1713  3018               	movlw	high (_spi1_configuration+3)
 12326     1714  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12327     1715  3880               	iorlw	128
 12328     1716  0085               	movwf	5
 12329     1717  0800               	movf	0,w	;code access
 12330     1718  0024               	movlb	4	; select bank4
 12331     1719  0092               	movwf	18	;volatile
 12332                           
 12333                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 12334     171A  1695               	bsf	21,5	;volatile
 12335                           
 12336                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 12337     171B  0008               	return
 12338     171C                     __end_of_SPI1_Open:
 12339                           
 12340                           	psect	text37
 12341     10F8                     __ptext37:	
 12342 ;; *************** function ___wmul *****************
 12343 ;; Defined at:
 12344 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;  multiplier      2    0[BANK1 ] unsigned int 
 12347 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 12348 ;; Auto vars:     Size  Location     Type
 12349 ;;  product         2    4[BANK1 ] unsigned int 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  2    0[BANK1 ] unsigned int 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2, status,0
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12359 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;Total ram usage:        6 bytes
 12364 ;; Hardware stack levels used: 1
 12365 ;; Hardware stack levels required when called: 5
 12366 ;; This function calls:
 12367 ;;		Nothing
 12368 ;; This function is called by:
 12369 ;;		_SPI1_Open
 12370 ;;		_atoi
 12371 ;;		_read_prec_or_width
 12372 ;;		_dutycycle_led_strip
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376     10F8                     ___wmul:	
 12377                           ;psect for function ___wmul
 12378                           
 12379                           
 12380                           ;incstack = 0
 12381                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12382     10F8  0021               	movlb	1	; select bank1
 12383     10F9  01A4               	clrf	___wmul@product^(0+128)
 12384     10FA  01A5               	clrf	(___wmul@product+1)^(0+128)
 12385     10FB                     l4155:
 12386     10FB  1C20               	btfss	___wmul@multiplier^(0+128),0
 12387     10FC  2901               	goto	l1181
 12388     10FD  0822               	movf	___wmul@multiplicand^(0+128),w
 12389     10FE  07A4               	addwf	___wmul@product^(0+128),f
 12390     10FF  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 12391     1100  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 12392     1101                     l1181:
 12393     1101  3001               	movlw	1
 12394     1102                     u4025:
 12395     1102  35A2               	lslf	___wmul@multiplicand^(0+128),f
 12396     1103  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 12397     1104  0B89               	decfsz	9,f
 12398     1105  2902               	goto	u4025
 12399     1106  3001               	movlw	1
 12400     1107                     u4035:
 12401     1107  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 12402     1108  0CA0               	rrf	___wmul@multiplier^(0+128),f
 12403     1109  0B89               	decfsz	9,f
 12404     110A  2907               	goto	u4035
 12405     110B  0820               	movf	___wmul@multiplier^(0+128),w
 12406     110C  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 12407     110D  1D03               	btfss	3,2
 12408     110E  28FB               	goto	l4155
 12409     110F  0825               	movf	(___wmul@product+1)^(0+128),w
 12410     1110  00A1               	movwf	(?___wmul+1)^(0+128)
 12411     1111  0824               	movf	___wmul@product^(0+128),w
 12412     1112  00A0               	movwf	?___wmul^(0+128)
 12413     1113  0008               	return
 12414     1114                     __end_of___wmul:
 12415                           
 12416                           	psect	text38
 12417     1F96                     __ptext38:	
 12418 ;; *************** function _initAdcMultiplexer *****************
 12419 ;; Defined at:
 12420 ;;		line 24 in file "adcMeasurements.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;		None
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;		None
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  1    wreg      void 
 12427 ;; Registers used:
 12428 ;;		wreg, status,2, status,0, pclath, cstack
 12429 ;; Tracked objects:
 12430 ;;		On entry : 0/0
 12431 ;;		On exit  : 0/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;Total ram usage:        0 bytes
 12439 ;; Hardware stack levels used: 1
 12440 ;; Hardware stack levels required when called: 6
 12441 ;; This function calls:
 12442 ;;		_ADC_SelectChannel
 12443 ;;		_ADC_SetInterruptHandler
 12444 ;; This function is called by:
 12445 ;;		_main
 12446 ;; This function uses a non-reentrant model
 12447 ;;
 12448                           
 12449     1F96                     _initAdcMultiplexer:	
 12450                           ;psect for function _initAdcMultiplexer
 12451                           
 12452                           
 12453                           ;adcMeasurements.c: 25:     ADC_SelectChannel(potentiometer);
 12454                           
 12455                           ;incstack = 0
 12456                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 12457     1F96  3010               	movlw	16
 12458     1F97  319F  278A  319F   	fcall	_ADC_SelectChannel
 12459                           
 12460                           ;adcMeasurements.c: 26:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 12461     1F9A  300F               	movlw	low _adcConversionDoneHandler
 12462     1F9B  0021               	movlb	1	; select bank1
 12463     1F9C  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 12464     1F9D  3012               	movlw	high _adcConversionDoneHandler
 12465     1F9E  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 12466     1F9F  319E  26E4         	fcall	_ADC_SetInterruptHandler
 12467     1FA1  0008               	return
 12468     1FA2                     __end_of_initAdcMultiplexer:
 12469                           
 12470                           	psect	text39
 12471     1F8A                     __ptext39:	
 12472 ;; *************** function _ADC_SelectChannel *****************
 12473 ;; Defined at:
 12474 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;  channel         1    wreg     enum E6663
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;  channel         1    1[BANK1 ] enum E6663
 12479 ;; Return value:  Size  Location     Type
 12480 ;;                  1    wreg      void 
 12481 ;; Registers used:
 12482 ;;		wreg, status,2, status,0
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12490 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;Total ram usage:        2 bytes
 12493 ;; Hardware stack levels used: 1
 12494 ;; Hardware stack levels required when called: 5
 12495 ;; This function calls:
 12496 ;;		Nothing
 12497 ;; This function is called by:
 12498 ;;		_initAdcMultiplexer
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502     1F8A                     _ADC_SelectChannel:	
 12503                           ;psect for function _ADC_SelectChannel
 12504                           
 12505                           
 12506                           ;incstack = 0
 12507                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 12508                           ;ADC_SelectChannel@channel stored from wreg
 12509     1F8A  0021               	movlb	1	; select bank1
 12510     1F8B  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 12511                           
 12512                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 12513     1F8C  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 12514     1F8D  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 12515     1F8E  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 12516     1F8F  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 12517     1F90  081D               	movf	29,w	;volatile
 12518     1F91  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 12519     1F92  3903               	andlw	-253
 12520     1F93  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 12521     1F94  009D               	movwf	29	;volatile
 12522     1F95  0008               	return
 12523     1F96                     __end_of_ADC_SelectChannel:
 12524                           
 12525                           	psect	text40
 12526     1F1A                     __ptext40:	
 12527 ;; *************** function _getPotentiometer *****************
 12528 ;; Defined at:
 12529 ;;		line 29 in file "adcMeasurements.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;		None
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;		None
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  2    0[BANK1 ] unsigned short 
 12536 ;; Registers used:
 12537 ;;		wreg
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12543 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;Total ram usage:        2 bytes
 12548 ;; Hardware stack levels used: 1
 12549 ;; Hardware stack levels required when called: 5
 12550 ;; This function calls:
 12551 ;;		Nothing
 12552 ;; This function is called by:
 12553 ;;		_main
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557     1F1A                     _getPotentiometer:	
 12558                           ;psect for function _getPotentiometer
 12559                           
 12560                           
 12561                           ;adcMeasurements.c: 30:     return ADC_potentiometer;
 12562                           
 12563                           ;incstack = 0
 12564                           ; Regs used in _getPotentiometer: [wreg]
 12565     1F1A  0020               	movlb	0	; select bank0
 12566     1F1B  085C               	movf	_ADC_potentiometer+1,w	;volatile
 12567     1F1C  0021               	movlb	1	; select bank1
 12568     1F1D  00A1               	movwf	(?_getPotentiometer+1)^(0+128)
 12569     1F1E  0020               	movlb	0	; select bank0
 12570     1F1F  085B               	movf	_ADC_potentiometer,w	;volatile
 12571     1F20  0021               	movlb	1	; select bank1
 12572     1F21  00A0               	movwf	?_getPotentiometer^(0+128)
 12573     1F22  0008               	return
 12574     1F23                     __end_of_getPotentiometer:
 12575                           
 12576                           	psect	text41
 12577     102B                     __ptext41:	
 12578 ;; *************** function _TMR6_Tasks *****************
 12579 ;; Defined at:
 12580 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;		None
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;		None
 12585 ;; Return value:  Size  Location     Type
 12586 ;;                  1    wreg      void 
 12587 ;; Registers used:
 12588 ;;		wreg, status,2, status,0, pclath, cstack
 12589 ;; Tracked objects:
 12590 ;;		On entry : 0/0
 12591 ;;		On exit  : 0/0
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;Total ram usage:        0 bytes
 12599 ;; Hardware stack levels used: 1
 12600 ;; Hardware stack levels required when called: 10
 12601 ;; This function calls:
 12602 ;;		NULL
 12603 ;;		_TMR6_DefaultPeriodMatchCallback
 12604 ;;		_updateLedstripAnimation
 12605 ;; This function is called by:
 12606 ;;		_main
 12607 ;; This function uses a non-reentrant model
 12608 ;;
 12609                           
 12610     102B                     _TMR6_Tasks:	
 12611                           ;psect for function _TMR6_Tasks
 12612                           
 12613                           
 12614                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 12615                           
 12616                           ;incstack = 0
 12617                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 12618     102B  0020               	movlb	0	; select bank0
 12619     102C  1F92               	btfss	18,7	;volatile
 12620     102D  0008               	return
 12621                           
 12622                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 12623     102E  0022               	movlb	2	; select bank2
 12624     102F  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 12625     1030  045F               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 12626     1031  1903               	btfsc	3,2
 12627     1032  2838               	goto	l6015
 12628                           
 12629                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 12630     1033  085F               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 12631     1034  008A               	movwf	10
 12632     1035  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 12633     1036  000A               	callw
 12634     1037  3190               	pagesel	$
 12635     1038                     l6015:
 12636                           
 12637                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 12638     1038  0020               	movlb	0	; select bank0
 12639     1039  1392               	bcf	18,7	;volatile
 12640     103A  0008               	return
 12641     103B                     __end_of_TMR6_Tasks:
 12642                           
 12643                           	psect	text42
 12644     07FF                     __ptext42:	
 12645 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 12646 ;; Defined at:
 12647 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;		None
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;		None
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  1    wreg      void 
 12654 ;; Registers used:
 12655 ;;		None
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12665 ;;Total ram usage:        0 bytes
 12666 ;; Hardware stack levels used: 1
 12667 ;; Hardware stack levels required when called: 5
 12668 ;; This function calls:
 12669 ;;		Nothing
 12670 ;; This function is called by:
 12671 ;;		_TMR6_Initialize
 12672 ;;		_TMR6_Tasks
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676     07FF                     _TMR6_DefaultPeriodMatchCallback:	
 12677                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 12678                           
 12679                           
 12680                           ;incstack = 0
 12681                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 12682     07FF  0008               	return
 12683     0800                     __end_of_TMR6_DefaultPeriodMatchCallback:
 12684                           
 12685                           	psect	text43
 12686     1EA9                     __ptext43:	
 12687 ;; *************** function _updateLedstripAnimation *****************
 12688 ;; Defined at:
 12689 ;;		line 112 in file "ledstrip.c"
 12690 ;; Parameters:    Size  Location     Type
 12691 ;;		None
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;		None
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  1    wreg      void 
 12696 ;; Registers used:
 12697 ;;		wreg, status,2, status,0, pclath, cstack
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12707 ;;Total ram usage:        0 bytes
 12708 ;; Hardware stack levels used: 1
 12709 ;; Hardware stack levels required when called: 9
 12710 ;; This function calls:
 12711 ;;		_position_led_strip
 12712 ;; This function is called by:
 12713 ;;		_initLedstrip
 12714 ;;		_TMR6_Tasks
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718     1EA9                     _updateLedstripAnimation:	
 12719                           ;psect for function _updateLedstripAnimation
 12720                           
 12721                           
 12722                           ;ledstrip.c: 113:     position_led_strip();
 12723                           
 12724                           ;incstack = 0
 12725                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 12726     1EA9  318B  2398         	fcall	_position_led_strip
 12727     1EAB  0008               	return
 12728     1EAC                     __end_of_updateLedstripAnimation:
 12729                           
 12730                           	psect	text44
 12731     0B98                     __ptext44:	
 12732 ;; *************** function _position_led_strip *****************
 12733 ;; Defined at:
 12734 ;;		line 60 in file "ledstrip.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;		None
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;  led             1    9[BANK2 ] unsigned char 
 12739 ;;  led_on          2   10[BANK2 ] int 
 12740 ;;  target          2    7[BANK2 ] int 
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  1    wreg      void 
 12743 ;; Registers used:
 12744 ;;		wreg, status,2, status,0, pclath, cstack
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;Total ram usage:        8 bytes
 12755 ;; Hardware stack levels used: 1
 12756 ;; Hardware stack levels required when called: 8
 12757 ;; This function calls:
 12758 ;;		_getHoogtesensor
 12759 ;;		_getLedNumber
 12760 ;;		_getSetpoint
 12761 ;;		_sendLedstripEndFrame
 12762 ;;		_sendLedstripFrame
 12763 ;;		_sendLedstripStartFrame
 12764 ;; This function is called by:
 12765 ;;		_updateLedstripAnimation
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769     0B98                     _position_led_strip:	
 12770                           ;psect for function _position_led_strip
 12771                           
 12772                           
 12773                           ;ledstrip.c: 61:     int led_on = getLedNumber(getHoogtesensor());
 12774                           
 12775                           ;incstack = 0
 12776                           ; Regs used in _position_led_strip: [wreg+status,2+status,0+pclath+cstack]
 12777     0B98  319F  2708  318B   	fcall	_getHoogtesensor
 12778     0B9B  0021               	movlb	1	; select bank1
 12779     0B9C  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 12780     0B9D  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 12781     0B9E  0820               	movf	?_getHoogtesensor^(0+128),w
 12782     0B9F  00EE               	movwf	getLedNumber@height^(0+128)
 12783     0BA0  3195  252D  318B   	fcall	_getLedNumber
 12784     0BA3  0021               	movlb	1	; select bank1
 12785     0BA4  086F               	movf	(?_getLedNumber+1)^(0+128),w
 12786     0BA5  0022               	movlb	2	; select bank2
 12787     0BA6  00D9               	movwf	(position_led_strip@led_on+1)^(0+256)
 12788     0BA7  0021               	movlb	1	; select bank1
 12789     0BA8  086E               	movf	?_getLedNumber^(0+128),w
 12790     0BA9  0022               	movlb	2	; select bank2
 12791     0BAA  00D8               	movwf	position_led_strip@led_on^(0+256)
 12792                           
 12793                           ;ledstrip.c: 62:     if (led_on < 0) {
 12794     0BAB  1FD9               	btfss	(position_led_strip@led_on+1)^(0+256),7
 12795     0BAC  2BB0               	goto	l5007
 12796                           
 12797                           ;ledstrip.c: 63:         led_on = 0;
 12798     0BAD  01D8               	clrf	position_led_strip@led_on^(0+256)
 12799     0BAE  01D9               	clrf	(position_led_strip@led_on+1)^(0+256)
 12800                           
 12801                           ;ledstrip.c: 64:     } else if (led_on > 59) {
 12802     0BAF  2BC0               	goto	l5011
 12803     0BB0                     l5007:
 12804     0BB0  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12805     0BB1  3A80               	xorlw	128
 12806     0BB2  00D2               	movwf	??_position_led_strip^(0+256)
 12807     0BB3  3080               	movlw	128
 12808     0BB4  0252               	subwf	??_position_led_strip^(0+256),w
 12809     0BB5  1D03               	skipz
 12810     0BB6  2BB9               	goto	u5775
 12811     0BB7  303C               	movlw	60
 12812     0BB8  0258               	subwf	position_led_strip@led_on^(0+256),w
 12813     0BB9                     u5775:
 12814     0BB9  1C03               	skipc
 12815     0BBA  2BC0               	goto	l5011
 12816                           
 12817                           ;ledstrip.c: 65:         led_on = 59;
 12818     0BBB  303B               	movlw	59
 12819     0BBC  0022               	movlb	2	; select bank2
 12820     0BBD  00D8               	movwf	position_led_strip@led_on^(0+256)
 12821     0BBE  3000               	movlw	0
 12822     0BBF  00D9               	movwf	(position_led_strip@led_on^(0+256)+1)
 12823     0BC0                     l5011:
 12824                           
 12825                           ;ledstrip.c: 68:     int target = getLedNumber(getSetpoint());
 12826     0BC0  319F  2711  318B   	fcall	_getSetpoint
 12827     0BC3  0021               	movlb	1	; select bank1
 12828     0BC4  0821               	movf	(?_getSetpoint+1)^(0+128),w
 12829     0BC5  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 12830     0BC6  0820               	movf	?_getSetpoint^(0+128),w
 12831     0BC7  00EE               	movwf	getLedNumber@height^(0+128)
 12832     0BC8  3195  252D  318B   	fcall	_getLedNumber
 12833     0BCB  0021               	movlb	1	; select bank1
 12834     0BCC  086F               	movf	(?_getLedNumber+1)^(0+128),w
 12835     0BCD  0022               	movlb	2	; select bank2
 12836     0BCE  00D6               	movwf	(position_led_strip@target+1)^(0+256)
 12837     0BCF  0021               	movlb	1	; select bank1
 12838     0BD0  086E               	movf	?_getLedNumber^(0+128),w
 12839     0BD1  0022               	movlb	2	; select bank2
 12840     0BD2  00D5               	movwf	position_led_strip@target^(0+256)
 12841                           
 12842                           ;ledstrip.c: 69:     if (target < 0) {
 12843     0BD3  1FD6               	btfss	(position_led_strip@target+1)^(0+256),7
 12844     0BD4  2BD7               	goto	l5017
 12845                           
 12846                           ;ledstrip.c: 70:         target = 0;
 12847     0BD5  01D5               	clrf	position_led_strip@target^(0+256)
 12848     0BD6  01D6               	clrf	(position_led_strip@target+1)^(0+256)
 12849     0BD7                     l5017:
 12850                           
 12851                           ;ledstrip.c: 74:     sendLedstripStartFrame();
 12852     0BD7  3190  206E  318B   	fcall	_sendLedstripStartFrame
 12853                           
 12854                           ;ledstrip.c: 75:     for (uint8_t led = 0; led < 59; led++) {
 12855     0BDA  0022               	movlb	2	; select bank2
 12856     0BDB  01D7               	clrf	position_led_strip@led^(0+256)
 12857     0BDC                     l5025:
 12858                           
 12859                           ;ledstrip.c: 78:         if (led_on == target) {
 12860     0BDC  0856               	movf	(position_led_strip@target+1)^(0+256),w
 12861     0BDD  0659               	xorwf	(position_led_strip@led_on+1)^(0+256),w
 12862     0BDE  1D03               	skipz
 12863     0BDF  2BE2               	goto	u5795
 12864     0BE0  0855               	movf	position_led_strip@target^(0+256),w
 12865     0BE1  0658               	xorwf	position_led_strip@led_on^(0+256),w
 12866     0BE2                     u5795:
 12867     0BE2  1D03               	skipz
 12868     0BE3  2BE7               	goto	l5029
 12869                           
 12870                           ;ledstrip.c: 79:             is_on_target = 1;
 12871     0BE4  3001               	movlw	1
 12872     0BE5  0020               	movlb	0	; select bank0
 12873     0BE6  00E4               	movwf	_is_on_target
 12874     0BE7                     l5029:
 12875                           
 12876                           ;ledstrip.c: 81:         if (is_on_target){
 12877     0BE7  0020               	movlb	0	; select bank0
 12878     0BE8  0864               	movf	_is_on_target,w
 12879     0BE9  1903               	btfsc	3,2
 12880     0BEA  2C1C               	goto	l5049
 12881                           
 12882                           ;ledstrip.c: 82:             if (led_on >= target - 1 && led_on <= target + 1) {
 12883     0BEB  0022               	movlb	2	; select bank2
 12884     0BEC  0855               	movf	position_led_strip@target^(0+256),w
 12885     0BED  3EFF               	addlw	255
 12886     0BEE  00D2               	movwf	??_position_led_strip^(0+256)
 12887     0BEF  30FF               	movlw	255
 12888     0BF0  3D56               	addwfc	(position_led_strip@target+1)^(0+256),w
 12889     0BF1  00D3               	movwf	(??_position_led_strip+1)^(0+256)
 12890     0BF2  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12891     0BF3  3A80               	xorlw	128
 12892     0BF4  00D4               	movwf	(??_position_led_strip+2)^(0+256)
 12893     0BF5  0853               	movf	(??_position_led_strip+1)^(0+256),w
 12894     0BF6  3A80               	xorlw	128
 12895     0BF7  0254               	subwf	(??_position_led_strip+2)^(0+256),w
 12896     0BF8  1D03               	skipz
 12897     0BF9  2BFC               	goto	u5815
 12898     0BFA  0852               	movf	??_position_led_strip^(0+256),w
 12899     0BFB  0258               	subwf	position_led_strip@led_on^(0+256),w
 12900     0BFC                     u5815:
 12901     0BFC  1C03               	skipc
 12902     0BFD  2C1C               	goto	l5049
 12903     0BFE  0022               	movlb	2	; select bank2
 12904     0BFF  0855               	movf	position_led_strip@target^(0+256),w
 12905     0C00  3E01               	addlw	1
 12906     0C01  00D2               	movwf	??_position_led_strip^(0+256)
 12907     0C02  3000               	movlw	0
 12908     0C03  3D56               	addwfc	(position_led_strip@target+1)^(0+256),w
 12909     0C04  00D3               	movwf	(??_position_led_strip+1)^(0+256)
 12910     0C05  0853               	movf	(??_position_led_strip+1)^(0+256),w
 12911     0C06  3A80               	xorlw	128
 12912     0C07  00D4               	movwf	(??_position_led_strip+2)^(0+256)
 12913     0C08  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12914     0C09  3A80               	xorlw	128
 12915     0C0A  0254               	subwf	(??_position_led_strip+2)^(0+256),w
 12916     0C0B  1D03               	skipz
 12917     0C0C  2C0F               	goto	u5825
 12918     0C0D  0858               	movf	position_led_strip@led_on^(0+256),w
 12919     0C0E  0252               	subwf	??_position_led_strip^(0+256),w
 12920     0C0F                     u5825:
 12921     0C0F  1C03               	skipc
 12922     0C10  2C1C               	goto	l5049
 12923                           
 12924                           ;ledstrip.c: 83:                 sendLedstripFrame(0x00, 0xFF, 0x00, 0x05);
 12925     0C11  30FF               	movlw	255
 12926     0C12  0021               	movlb	1	; select bank1
 12927     0C13  00A1               	movwf	sendLedstripFrame@green^(0+128)
 12928     0C14  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 12929     0C15  3005               	movlw	5
 12930     0C16  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 12931     0C17  3000               	movlw	0
 12932     0C18  3190  20DE  318B   	fcall	_sendLedstripFrame
 12933                           
 12934                           ;ledstrip.c: 84:             }
 12935     0C1B  2C4E               	goto	l5065
 12936     0C1C                     l5049:	
 12937                           ;ledstrip.c: 91:                     sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 12938                           
 12939                           ;ledstrip.c: 90:         } else {
 12940                           
 12941                           ;ledstrip.c: 89:                     sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 12942                           
 12943                           ;ledstrip.c: 88:         } else if (led == target) {
 12944                           
 12945                           ;ledstrip.c: 87:                     sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 12946                           
 12947                           ;ledstrip.c: 86:                 if (led == led_on) {
 12948                           
 12949     0C1C  0022               	movlb	2	; select bank2
 12950     0C1D  0857               	movf	position_led_strip@led^(0+256),w
 12951     0C1E  00D2               	movwf	??_position_led_strip^(0+256)
 12952     0C1F  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 12953     0C20  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 12954     0C21  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 12955     0C22  1D03               	skipz
 12956     0C23  2C26               	goto	u5855
 12957     0C24  0858               	movf	position_led_strip@led_on^(0+256),w
 12958     0C25  0652               	xorwf	??_position_led_strip^(0+256),w
 12959     0C26                     u5855:
 12960     0C26  1D03               	skipz
 12961     0C27  2C31               	goto	l5055
 12962                           
 12963                           ;ledstrip.c: 97:             sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 12964     0C28  3044               	movlw	68
 12965     0C29  0021               	movlb	1	; select bank1
 12966     0C2A  00A1               	movwf	sendLedstripFrame@green^(0+128)
 12967     0C2B  3044               	movlw	68
 12968     0C2C  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 12969     0C2D  3005               	movlw	5
 12970     0C2E  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 12971     0C2F  3044               	movlw	68
 12972     0C30  2C49               	goto	L4
 12973     0C31                     l5055:
 12974     0C31  0857               	movf	position_led_strip@led^(0+256),w
 12975     0C32  00D2               	movwf	??_position_led_strip^(0+256)
 12976     0C33  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 12977     0C34  0856               	movf	(position_led_strip@target+1)^(0+256),w
 12978     0C35  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 12979     0C36  1D03               	skipz
 12980     0C37  2C3A               	goto	u5865
 12981     0C38  0855               	movf	position_led_strip@target^(0+256),w
 12982     0C39  0652               	xorwf	??_position_led_strip^(0+256),w
 12983     0C3A                     u5865:
 12984     0C3A  1D03               	skipz
 12985     0C3B  2C43               	goto	l5061
 12986                           
 12987                           ;ledstrip.c: 100:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 12988     0C3C  0021               	movlb	1	; select bank1
 12989     0C3D  01A1               	clrf	sendLedstripFrame@green^(0+128)
 12990     0C3E  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 12991     0C3F  3005               	movlw	5
 12992     0C40  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 12993     0C41  30FF               	movlw	255
 12994     0C42  2C49               	goto	L4
 12995     0C43                     l5061:
 12996                           
 12997                           ;ledstrip.c: 103:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 12998     0C43  0021               	movlb	1	; select bank1
 12999     0C44  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13000     0C45  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13001     0C46  3005               	movlw	5
 13002     0C47  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13003     0C48  3000               	movlw	0
 13004     0C49                     L4:
 13005     0C49  3190  20DE  318B   	fcall	_sendLedstripFrame
 13006                           
 13007                           ;ledstrip.c: 93:                 is_on_target = 0;
 13008     0C4C  0020               	movlb	0	; select bank0
 13009     0C4D  01E4               	clrf	_is_on_target
 13010     0C4E                     l5065:
 13011                           
 13012                           ;ledstrip.c: 106:     }
 13013     0C4E  3001               	movlw	1
 13014     0C4F  0022               	movlb	2	; select bank2
 13015     0C50  07D7               	addwf	position_led_strip@led^(0+256),f
 13016     0C51  303B               	movlw	59
 13017     0C52  0257               	subwf	position_led_strip@led^(0+256),w
 13018     0C53  1C03               	skipc
 13019     0C54  2BDC               	goto	l5025
 13020                           
 13021                           ;ledstrip.c: 108:     sendLedstripEndFrame();
 13022     0C55  3190  20AC         	fcall	_sendLedstripEndFrame
 13023     0C57  0008               	return
 13024     0C58                     __end_of_position_led_strip:
 13025                           
 13026                           	psect	text45
 13027     106E                     __ptext45:	
 13028 ;; *************** function _sendLedstripStartFrame *****************
 13029 ;; Defined at:
 13030 ;;		line 6 in file "ledstrip.c"
 13031 ;; Parameters:    Size  Location     Type
 13032 ;;		None
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;		None
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  1    wreg      void 
 13037 ;; Registers used:
 13038 ;;		wreg, status,2, status,0, pclath, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;Total ram usage:        0 bytes
 13049 ;; Hardware stack levels used: 1
 13050 ;; Hardware stack levels required when called: 6
 13051 ;; This function calls:
 13052 ;;		_SPI1_ByteExchange
 13053 ;; This function is called by:
 13054 ;;		_position_led_strip
 13055 ;;		_dutycycle_led_strip
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059     106E                     _sendLedstripStartFrame:	
 13060                           ;psect for function _sendLedstripStartFrame
 13061                           
 13062                           
 13063                           ;ledstrip.c: 8:     SPI1_ByteExchange(0x00);
 13064                           
 13065                           ;incstack = 0
 13066                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 13067     106E  0021               	movlb	1	; select bank1
 13068     106F  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13069     1070  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13070                           
 13071                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 13072     1073  0021               	movlb	1	; select bank1
 13073     1074  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13074     1075  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13075                           
 13076                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 13077     1078  0021               	movlb	1	; select bank1
 13078     1079  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13079     107A  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13080                           
 13081                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 13082     107D  0021               	movlb	1	; select bank1
 13083     107E  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13084     107F  319F  2767         	fcall	_SPI1_ByteExchange
 13085     1081  0008               	return
 13086     1082                     __end_of_sendLedstripStartFrame:
 13087                           
 13088                           	psect	text46
 13089     10DE                     __ptext46:	
 13090 ;; *************** function _sendLedstripFrame *****************
 13091 ;; Defined at:
 13092 ;;		line 22 in file "ledstrip.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  red             1    wreg     unsigned char 
 13095 ;;  green           1    1[BANK1 ] unsigned char 
 13096 ;;  blue            1    2[BANK1 ] unsigned char 
 13097 ;;  intensity       1    3[BANK1 ] unsigned char 
 13098 ;; Auto vars:     Size  Location     Type
 13099 ;;  red             1    4[BANK1 ] unsigned char 
 13100 ;; Return value:  Size  Location     Type
 13101 ;;                  1    wreg      void 
 13102 ;; Registers used:
 13103 ;;		wreg, status,2, status,0, pclath, cstack
 13104 ;; Tracked objects:
 13105 ;;		On entry : 0/0
 13106 ;;		On exit  : 0/0
 13107 ;;		Unchanged: 0/0
 13108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13109 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13110 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13112 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;Total ram usage:        4 bytes
 13114 ;; Hardware stack levels used: 1
 13115 ;; Hardware stack levels required when called: 6
 13116 ;; This function calls:
 13117 ;;		_SPI1_ByteExchange
 13118 ;; This function is called by:
 13119 ;;		_position_led_strip
 13120 ;;		_dutycycle_led_strip
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124     10DE                     _sendLedstripFrame:	
 13125                           ;psect for function _sendLedstripFrame
 13126                           
 13127                           
 13128                           ;incstack = 0
 13129                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 13130                           ;sendLedstripFrame@red stored from wreg
 13131     10DE  0021               	movlb	1	; select bank1
 13132     10DF  00A4               	movwf	sendLedstripFrame@red^(0+128)
 13133                           
 13134                           ;ledstrip.c: 23:     SPI1_ByteExchange(0xE0 | intensity);
 13135     10E0  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 13136     10E1  38E0               	iorlw	224
 13137     10E2  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13138     10E3  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13139                           
 13140                           ;ledstrip.c: 25:     SPI1_ByteExchange(blue);
 13141     10E6  0021               	movlb	1	; select bank1
 13142     10E7  0822               	movf	sendLedstripFrame@blue^(0+128),w
 13143     10E8  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13144     10E9  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13145                           
 13146                           ;ledstrip.c: 26:     SPI1_ByteExchange(green);
 13147     10EC  0021               	movlb	1	; select bank1
 13148     10ED  0821               	movf	sendLedstripFrame@green^(0+128),w
 13149     10EE  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13150     10EF  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13151                           
 13152                           ;ledstrip.c: 27:     SPI1_ByteExchange(red);
 13153     10F2  0021               	movlb	1	; select bank1
 13154     10F3  0824               	movf	sendLedstripFrame@red^(0+128),w
 13155     10F4  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13156     10F5  319F  2767         	fcall	_SPI1_ByteExchange
 13157     10F7  0008               	return
 13158     10F8                     __end_of_sendLedstripFrame:
 13159                           
 13160                           	psect	text47
 13161     10AC                     __ptext47:	
 13162 ;; *************** function _sendLedstripEndFrame *****************
 13163 ;; Defined at:
 13164 ;;		line 14 in file "ledstrip.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;		None
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;		None
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      void 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0, pclath, cstack
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;Total ram usage:        0 bytes
 13183 ;; Hardware stack levels used: 1
 13184 ;; Hardware stack levels required when called: 6
 13185 ;; This function calls:
 13186 ;;		_SPI1_ByteExchange
 13187 ;; This function is called by:
 13188 ;;		_position_led_strip
 13189 ;;		_dutycycle_led_strip
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193     10AC                     _sendLedstripEndFrame:	
 13194                           ;psect for function _sendLedstripEndFrame
 13195                           
 13196                           
 13197                           ;ledstrip.c: 16:     SPI1_ByteExchange(0xFF);
 13198                           
 13199                           ;incstack = 0
 13200                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 13201     10AC  30FF               	movlw	255
 13202     10AD  0021               	movlb	1	; select bank1
 13203     10AE  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13204     10AF  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13205                           
 13206                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 13207     10B2  30FF               	movlw	255
 13208     10B3  0021               	movlb	1	; select bank1
 13209     10B4  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13210     10B5  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13211                           
 13212                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 13213     10B8  30FF               	movlw	255
 13214     10B9  0021               	movlb	1	; select bank1
 13215     10BA  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13216     10BB  319F  2767  3190   	fcall	_SPI1_ByteExchange
 13217                           
 13218                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 13219     10BE  30FF               	movlw	255
 13220     10BF  0021               	movlb	1	; select bank1
 13221     10C0  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 13222     10C1  319F  2767         	fcall	_SPI1_ByteExchange
 13223     10C3  0008               	return
 13224     10C4                     __end_of_sendLedstripEndFrame:
 13225                           
 13226                           	psect	text48
 13227     1F67                     __ptext48:	
 13228 ;; *************** function _SPI1_ByteExchange *****************
 13229 ;; Defined at:
 13230 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 13231 ;; Parameters:    Size  Location     Type
 13232 ;;  byteData        1    0[BANK1 ] unsigned char 
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;		None
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      unsigned char 
 13237 ;; Registers used:
 13238 ;;		wreg
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13244 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13247 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;Total ram usage:        1 bytes
 13249 ;; Hardware stack levels used: 1
 13250 ;; Hardware stack levels required when called: 5
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_sendLedstripStartFrame
 13255 ;;		_sendLedstripEndFrame
 13256 ;;		_sendLedstripFrame
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260     1F67                     _SPI1_ByteExchange:	
 13261                           ;psect for function _SPI1_ByteExchange
 13262                           
 13263                           
 13264                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 13265                           
 13266                           ;incstack = 0
 13267                           ; Regs used in _SPI1_ByteExchange: [wreg]
 13268     1F67  0021               	movlb	1	; select bank1
 13269     1F68  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 13270     1F69  0024               	movlb	4	; select bank4
 13271     1F6A  0091               	movwf	17	;volatile
 13272     1F6B                     l160:	
 13273                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 13274                           
 13275                           
 13276                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 13277     1F6B  0020               	movlb	0	; select bank0
 13278     1F6C  1D91               	btfss	17,3	;volatile
 13279     1F6D  2F6B               	goto	l160
 13280                           
 13281                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 13282     1F6E  1191               	bcf	17,3	;volatile
 13283                           
 13284                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 13285     1F6F  0024               	movlb	4	; select bank4
 13286     1F70  0811               	movf	17,w	;volatile
 13287     1F71  0008               	return
 13288     1F72                     __end_of_SPI1_ByteExchange:
 13289                           
 13290                           	psect	text49
 13291     1F11                     __ptext49:	
 13292 ;; *************** function _getSetpoint *****************
 13293 ;; Defined at:
 13294 ;;		line 39 in file "controller.c"
 13295 ;; Parameters:    Size  Location     Type
 13296 ;;		None
 13297 ;; Auto vars:     Size  Location     Type
 13298 ;;		None
 13299 ;; Return value:  Size  Location     Type
 13300 ;;                  2    0[BANK1 ] unsigned short 
 13301 ;; Registers used:
 13302 ;;		wreg
 13303 ;; Tracked objects:
 13304 ;;		On entry : 0/0
 13305 ;;		On exit  : 0/0
 13306 ;;		Unchanged: 0/0
 13307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13308 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13311 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13312 ;;Total ram usage:        2 bytes
 13313 ;; Hardware stack levels used: 1
 13314 ;; Hardware stack levels required when called: 5
 13315 ;; This function calls:
 13316 ;;		Nothing
 13317 ;; This function is called by:
 13318 ;;		_printLogs
 13319 ;;		_position_led_strip
 13320 ;; This function uses a non-reentrant model
 13321 ;;
 13322                           
 13323     1F11                     _getSetpoint:	
 13324                           ;psect for function _getSetpoint
 13325                           
 13326                           
 13327                           ;incstack = 0
 13328                           ; Regs used in _getSetpoint: [wreg]
 13329     1F11  0020               	movlb	0	; select bank0
 13330     1F12  086D               	movf	_setpoint+1,w
 13331     1F13  0021               	movlb	1	; select bank1
 13332     1F14  00A1               	movwf	(?_getSetpoint+1)^(0+128)
 13333     1F15  0020               	movlb	0	; select bank0
 13334     1F16  086C               	movf	_setpoint,w
 13335     1F17  0021               	movlb	1	; select bank1
 13336     1F18  00A0               	movwf	?_getSetpoint^(0+128)
 13337     1F19  0008               	return
 13338     1F1A                     __end_of_getSetpoint:
 13339                           
 13340                           	psect	text50
 13341     152D                     __ptext50:	
 13342 ;; *************** function _getLedNumber *****************
 13343 ;; Defined at:
 13344 ;;		line 33 in file "ledstrip.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  height          2   78[BANK1 ] unsigned short 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;  result          4    0[BANK2 ] float 
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  2   78[BANK1 ] int 
 13351 ;; Registers used:
 13352 ;;		wreg, status,2, status,0, pclath, cstack
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13358 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;Total ram usage:        6 bytes
 13363 ;; Hardware stack levels used: 1
 13364 ;; Hardware stack levels required when called: 7
 13365 ;; This function calls:
 13366 ;;		___fladd
 13367 ;;		___flmul
 13368 ;;		___fltol
 13369 ;;		___xxtofl
 13370 ;; This function is called by:
 13371 ;;		_position_led_strip
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375     152D                     _getLedNumber:	
 13376                           ;psect for function _getLedNumber
 13377                           
 13378                           
 13379                           ;ledstrip.c: 34:     float result = (0.068104825 * height - 5.4876957494);
 13380                           
 13381                           ;incstack = 0
 13382                           ; Regs used in _getLedNumber: [wreg+status,2+status,0+pclath+cstack]
 13383     152D  30C0               	movlw	192
 13384     152E  0021               	movlb	1	; select bank1
 13385     152F  00B1               	movwf	(___fladd@b+3)^(0+128)
 13386     1530  30AF               	movlw	175
 13387     1531  00B0               	movwf	(___fladd@b+2)^(0+128)
 13388     1532  309B               	movlw	155
 13389     1533  00AF               	movwf	(___fladd@b+1)^(0+128)
 13390     1534  3034               	movlw	52
 13391     1535  00AE               	movwf	___fladd@b^(0+128)
 13392     1536  303D               	movlw	61
 13393     1537  00CD               	movwf	(___flmul@b+3)^(0+128)
 13394     1538  308B               	movlw	139
 13395     1539  00CC               	movwf	(___flmul@b+2)^(0+128)
 13396     153A  307A               	movlw	122
 13397     153B  00CB               	movwf	(___flmul@b+1)^(0+128)
 13398     153C  308B               	movlw	139
 13399     153D  00CA               	movwf	___flmul@b^(0+128)
 13400     153E  086E               	movf	getLedNumber@height^(0+128),w
 13401     153F  00A0               	movwf	___xxtofl@val^(0+128)
 13402     1540  086F               	movf	(getLedNumber@height+1)^(0+128),w
 13403     1541  00A1               	movwf	(___xxtofl@val^(0+128)+1)
 13404     1542  01A2               	clrf	(___xxtofl@val^(0+128)+2)
 13405     1543  01A3               	clrf	(___xxtofl@val^(0+128)+3)
 13406     1544  3000               	movlw	0
 13407     1545  3189  2124  3195   	fcall	___xxtofl
 13408     1548  0021               	movlb	1	; select bank1
 13409     1549  0823               	movf	(?___xxtofl+3)^(0+128),w
 13410     154A  00D1               	movwf	(___flmul@a+3)^(0+128)
 13411     154B  0822               	movf	(?___xxtofl+2)^(0+128),w
 13412     154C  00D0               	movwf	(___flmul@a+2)^(0+128)
 13413     154D  0821               	movf	(?___xxtofl+1)^(0+128),w
 13414     154E  00CF               	movwf	(___flmul@a+1)^(0+128)
 13415     154F  0820               	movf	?___xxtofl^(0+128),w
 13416     1550  00CE               	movwf	___flmul@a^(0+128)
 13417     1551  3180  2075  3195   	fcall	___flmul
 13418     1554  0021               	movlb	1	; select bank1
 13419     1555  084D               	movf	(?___flmul+3)^(0+128),w
 13420     1556  00B5               	movwf	(___fladd@a+3)^(0+128)
 13421     1557  084C               	movf	(?___flmul+2)^(0+128),w
 13422     1558  00B4               	movwf	(___fladd@a+2)^(0+128)
 13423     1559  084B               	movf	(?___flmul+1)^(0+128),w
 13424     155A  00B3               	movwf	(___fladd@a+1)^(0+128)
 13425     155B  084A               	movf	?___flmul^(0+128),w
 13426     155C  00B2               	movwf	___fladd@a^(0+128)
 13427     155D  3184  2495  3195   	fcall	___fladd
 13428     1560  0021               	movlb	1	; select bank1
 13429     1561  0831               	movf	(?___fladd+3)^(0+128),w
 13430     1562  0022               	movlb	2	; select bank2
 13431     1563  00D1               	movwf	(getLedNumber@result+3)^(0+256)
 13432     1564  0021               	movlb	1	; select bank1
 13433     1565  0830               	movf	(?___fladd+2)^(0+128),w
 13434     1566  0022               	movlb	2	; select bank2
 13435     1567  00D0               	movwf	(getLedNumber@result+2)^(0+256)
 13436     1568  0021               	movlb	1	; select bank1
 13437     1569  082F               	movf	(?___fladd+1)^(0+128),w
 13438     156A  0022               	movlb	2	; select bank2
 13439     156B  00CF               	movwf	(getLedNumber@result+1)^(0+256)
 13440     156C  0021               	movlb	1	; select bank1
 13441     156D  082E               	movf	?___fladd^(0+128),w
 13442     156E  0022               	movlb	2	; select bank2
 13443     156F  00CE               	movwf	getLedNumber@result^(0+256)
 13444                           
 13445                           ;ledstrip.c: 35:     return result;
 13446     1570  0851               	movf	(getLedNumber@result+3)^(0+256),w
 13447     1571  0021               	movlb	1	; select bank1
 13448     1572  00E7               	movwf	(___fltol@f1+3)^(0+128)
 13449     1573  0022               	movlb	2	; select bank2
 13450     1574  0850               	movf	(getLedNumber@result+2)^(0+256),w
 13451     1575  0021               	movlb	1	; select bank1
 13452     1576  00E6               	movwf	(___fltol@f1+2)^(0+128)
 13453     1577  0022               	movlb	2	; select bank2
 13454     1578  084F               	movf	(getLedNumber@result+1)^(0+256),w
 13455     1579  0021               	movlb	1	; select bank1
 13456     157A  00E5               	movwf	(___fltol@f1+1)^(0+128)
 13457     157B  0022               	movlb	2	; select bank2
 13458     157C  084E               	movf	getLedNumber@result^(0+256),w
 13459     157D  0021               	movlb	1	; select bank1
 13460     157E  00E4               	movwf	___fltol@f1^(0+128)
 13461     157F  3195  25E7         	fcall	___fltol
 13462     1581  0021               	movlb	1	; select bank1
 13463     1582  0865               	movf	(?___fltol+1)^(0+128),w
 13464     1583  00EF               	movwf	(?_getLedNumber+1)^(0+128)
 13465     1584  0864               	movf	?___fltol^(0+128),w
 13466     1585  00EE               	movwf	?_getLedNumber^(0+128)
 13467     1586  0008               	return
 13468     1587                     __end_of_getLedNumber:
 13469                           
 13470                           	psect	text51
 13471     0924                     __ptext51:	
 13472 ;; *************** function ___xxtofl *****************
 13473 ;; Defined at:
 13474 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;  sign            1    wreg     unsigned char 
 13477 ;;  val             4    0[BANK1 ] long 
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;  sign            1    8[BANK1 ] unsigned char 
 13480 ;;  arg             4   10[BANK1 ] unsigned long 
 13481 ;;  exp             1    9[BANK1 ] unsigned char 
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  4    0[BANK1 ] unsigned char 
 13484 ;; Registers used:
 13485 ;;		wreg, status,2, status,0
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13491 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;Total ram usage:       14 bytes
 13496 ;; Hardware stack levels used: 1
 13497 ;; Hardware stack levels required when called: 5
 13498 ;; This function calls:
 13499 ;;		Nothing
 13500 ;; This function is called by:
 13501 ;;		_printFloat
 13502 ;;		_str2float
 13503 ;;		_getLedNumber
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507     0924                     ___xxtofl:	
 13508                           ;psect for function ___xxtofl
 13509                           
 13510                           
 13511                           ;incstack = 0
 13512                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13513                           ;___xxtofl@sign stored from wreg
 13514     0924  0021               	movlb	1	; select bank1
 13515     0925  00A8               	movwf	___xxtofl@sign^(0+128)
 13516     0926  0828               	movf	___xxtofl@sign^(0+128),w
 13517     0927  1D03               	btfss	3,2
 13518     0928  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 13519     0929  293A               	goto	l4813
 13520     092A  0920               	comf	___xxtofl@val^(0+128),w
 13521     092B  00AA               	movwf	___xxtofl@arg^(0+128)
 13522     092C  0921               	comf	(___xxtofl@val^(0+128)+1),w
 13523     092D  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 13524     092E  0922               	comf	(___xxtofl@val^(0+128)+2),w
 13525     092F  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 13526     0930  0923               	comf	(___xxtofl@val^(0+128)+3),w
 13527     0931  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 13528     0932  0AAA               	incf	___xxtofl@arg^(0+128),f
 13529     0933  1903               	skipnz
 13530     0934  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
 13531     0935  1903               	skipnz
 13532     0936  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
 13533     0937  1903               	skipnz
 13534     0938  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
 13535     0939  2942               	goto	l1622
 13536     093A                     l4813:
 13537     093A  0823               	movf	(___xxtofl@val+3)^(0+128),w
 13538     093B  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 13539     093C  0822               	movf	(___xxtofl@val+2)^(0+128),w
 13540     093D  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 13541     093E  0821               	movf	(___xxtofl@val+1)^(0+128),w
 13542     093F  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 13543     0940  0820               	movf	___xxtofl@val^(0+128),w
 13544     0941  00AA               	movwf	___xxtofl@arg^(0+128)
 13545     0942                     l1622:
 13546     0942  0823               	movf	(___xxtofl@val+3)^(0+128),w
 13547     0943  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
 13548     0944  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
 13549     0945  0420               	iorwf	___xxtofl@val^(0+128),w
 13550     0946  1D03               	skipz
 13551     0947  2951               	goto	l1623
 13552     0948  3000               	movlw	0
 13553     0949  00A3               	movwf	(?___xxtofl+3)^(0+128)
 13554     094A  3000               	movlw	0
 13555     094B  00A2               	movwf	(?___xxtofl+2)^(0+128)
 13556     094C  3000               	movlw	0
 13557     094D  00A1               	movwf	(?___xxtofl+1)^(0+128)
 13558     094E  3000               	movlw	0
 13559     094F  00A0               	movwf	?___xxtofl^(0+128)
 13560     0950  0008               	return
 13561     0951                     l1623:
 13562     0951  3096               	movlw	150
 13563     0952  00A9               	movwf	___xxtofl@exp^(0+128)
 13564     0953                     l4821:
 13565     0953  30FE               	movlw	254
 13566     0954  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 13567     0955  1903               	btfsc	3,2
 13568     0956  2970               	goto	l4825
 13569     0957  3001               	movlw	1
 13570     0958  07A9               	addwf	___xxtofl@exp^(0+128),f
 13571     0959  3001               	movlw	1
 13572     095A                     u5495:
 13573     095A  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 13574     095B  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 13575     095C  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 13576     095D  0CAA               	rrf	___xxtofl@arg^(0+128),f
 13577     095E  0B89               	decfsz	9,f
 13578     095F  295A               	goto	u5495
 13579     0960  2953               	goto	l4821
 13580     0961                     l4823:
 13581     0961  3001               	movlw	1
 13582     0962  07A9               	addwf	___xxtofl@exp^(0+128),f
 13583     0963  3001               	movlw	1
 13584     0964  07AA               	addwf	___xxtofl@arg^(0+128),f
 13585     0965  3000               	movlw	0
 13586     0966  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
 13587     0967  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
 13588     0968  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
 13589     0969  3001               	movlw	1
 13590     096A                     u5515:
 13591     096A  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 13592     096B  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 13593     096C  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 13594     096D  0CAA               	rrf	___xxtofl@arg^(0+128),f
 13595     096E  0B89               	decfsz	9,f
 13596     096F  296A               	goto	u5515
 13597     0970                     l4825:
 13598     0970  30FF               	movlw	255
 13599     0971  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 13600     0972  1903               	btfsc	3,2
 13601     0973  2982               	goto	l4829
 13602     0974  2961               	goto	l4823
 13603     0975                     l4831:
 13604     0975  3002               	movlw	2
 13605     0976  0229               	subwf	___xxtofl@exp^(0+128),w
 13606     0977  1C03               	btfss	3,0
 13607     0978  2984               	goto	l1635
 13608     0979  3001               	movlw	1
 13609     097A  02A9               	subwf	___xxtofl@exp^(0+128),f
 13610     097B  3001               	movlw	1
 13611     097C                     u5535:
 13612     097C  35AA               	lslf	___xxtofl@arg^(0+128),f
 13613     097D  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
 13614     097E  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
 13615     097F  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
 13616     0980  0B89               	decfsz	9,f
 13617     0981  297C               	goto	u5535
 13618     0982                     l4829:
 13619     0982  1FAC               	btfss	(___xxtofl@arg+2)^(0+128),7
 13620     0983  2975               	goto	l4831
 13621     0984                     l1635:
 13622     0984  1829               	btfsc	___xxtofl@exp^(0+128),0
 13623     0985  298E               	goto	l1636
 13624     0986  30FF               	movlw	255
 13625     0987  05AA               	andwf	___xxtofl@arg^(0+128),f
 13626     0988  30FF               	movlw	255
 13627     0989  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
 13628     098A  307F               	movlw	127
 13629     098B  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
 13630     098C  30FF               	movlw	255
 13631     098D  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
 13632     098E                     l1636:
 13633     098E  1003               	clrc
 13634     098F  0CA9               	rrf	___xxtofl@exp^(0+128),f
 13635     0990  0829               	movf	___xxtofl@exp^(0+128),w
 13636     0991  00A4               	movwf	??___xxtofl^(0+128)
 13637     0992  01A5               	clrf	(??___xxtofl^(0+128)+1)
 13638     0993  01A6               	clrf	(??___xxtofl^(0+128)+2)
 13639     0994  01A7               	clrf	(??___xxtofl^(0+128)+3)
 13640     0995  3018               	movlw	24
 13641     0996                     u5575:
 13642     0996  35A4               	lslf	??___xxtofl^(0+128),f
 13643     0997  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
 13644     0998  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
 13645     0999  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
 13646     099A  0B89               	decfsz	9,f
 13647     099B  2996               	goto	u5575
 13648     099C  0824               	movf	??___xxtofl^(0+128),w
 13649     099D  04AA               	iorwf	___xxtofl@arg^(0+128),f
 13650     099E  0825               	movf	(??___xxtofl+1)^(0+128),w
 13651     099F  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
 13652     09A0  0826               	movf	(??___xxtofl+2)^(0+128),w
 13653     09A1  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
 13654     09A2  0827               	movf	(??___xxtofl+3)^(0+128),w
 13655     09A3  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
 13656     09A4  0828               	movf	___xxtofl@sign^(0+128),w
 13657     09A5  1D03               	btfss	3,2
 13658     09A6  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 13659     09A7  29A9               	goto	l4843
 13660     09A8  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
 13661     09A9                     l4843:
 13662     09A9  082D               	movf	(___xxtofl@arg+3)^(0+128),w
 13663     09AA  00A3               	movwf	(?___xxtofl+3)^(0+128)
 13664     09AB  082C               	movf	(___xxtofl@arg+2)^(0+128),w
 13665     09AC  00A2               	movwf	(?___xxtofl+2)^(0+128)
 13666     09AD  082B               	movf	(___xxtofl@arg+1)^(0+128),w
 13667     09AE  00A1               	movwf	(?___xxtofl+1)^(0+128)
 13668     09AF  082A               	movf	___xxtofl@arg^(0+128),w
 13669     09B0  00A0               	movwf	?___xxtofl^(0+128)
 13670     09B1  0008               	return
 13671     09B2                     __end_of___xxtofl:
 13672                           
 13673                           	psect	text52
 13674     15E7                     __ptext52:	
 13675 ;; *************** function ___fltol *****************
 13676 ;; Defined at:
 13677 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 13678 ;; Parameters:    Size  Location     Type
 13679 ;;  f1              4   68[BANK1 ] unsigned char 
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;  exp1            1   77[BANK1 ] unsigned char 
 13682 ;;  sign1           1   76[BANK1 ] unsigned char 
 13683 ;; Return value:  Size  Location     Type
 13684 ;;                  4   68[BANK1 ] long 
 13685 ;; Registers used:
 13686 ;;		wreg, status,2, status,0
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13692 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;Total ram usage:       10 bytes
 13697 ;; Hardware stack levels used: 1
 13698 ;; Hardware stack levels required when called: 5
 13699 ;; This function calls:
 13700 ;;		Nothing
 13701 ;; This function is called by:
 13702 ;;		_printFloat
 13703 ;;		_getLedNumber
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707     15E7                     ___fltol:	
 13708                           ;psect for function ___fltol
 13709                           
 13710                           
 13711                           ;incstack = 0
 13712                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13713     15E7  1003               	clrc
 13714     15E8  0021               	movlb	1	; select bank1
 13715     15E9  0D66               	rlf	(___fltol@f1+2)^(0+128),w
 13716     15EA  0D67               	rlf	(___fltol@f1+3)^(0+128),w
 13717     15EB  00ED               	movwf	___fltol@exp1^(0+128)
 13718     15EC  086D               	movf	___fltol@exp1^(0+128),w
 13719     15ED  1D03               	btfss	3,2
 13720     15EE  2DF8               	goto	l4441
 13721     15EF                     l4437:
 13722     15EF  3000               	movlw	0
 13723     15F0  00E7               	movwf	(?___fltol+3)^(0+128)
 13724     15F1  3000               	movlw	0
 13725     15F2  00E6               	movwf	(?___fltol+2)^(0+128)
 13726     15F3  3000               	movlw	0
 13727     15F4  00E5               	movwf	(?___fltol+1)^(0+128)
 13728     15F5  3000               	movlw	0
 13729     15F6  00E4               	movwf	?___fltol^(0+128)
 13730     15F7  0008               	return
 13731     15F8                     l4441:
 13732     15F8  0864               	movf	___fltol@f1^(0+128),w
 13733     15F9  00E8               	movwf	??___fltol^(0+128)
 13734     15FA  0865               	movf	(___fltol@f1+1)^(0+128),w
 13735     15FB  00E9               	movwf	(??___fltol^(0+128)+1)
 13736     15FC  0866               	movf	(___fltol@f1+2)^(0+128),w
 13737     15FD  00EA               	movwf	(??___fltol^(0+128)+2)
 13738     15FE  0867               	movf	(___fltol@f1+3)^(0+128),w
 13739     15FF  00EB               	movwf	(??___fltol^(0+128)+3)
 13740     1600  301F               	movlw	31
 13741     1601                     u4645:
 13742     1601  36EB               	lsrf	(??___fltol^(0+128)+3),f
 13743     1602  0CEA               	rrf	(??___fltol^(0+128)+2),f
 13744     1603  0CE9               	rrf	(??___fltol^(0+128)+1),f
 13745     1604  0CE8               	rrf	??___fltol^(0+128),f
 13746     1605  0B89               	decfsz	9,f
 13747     1606  2E01               	goto	u4645
 13748     1607  0868               	movf	??___fltol^(0+128),w
 13749     1608  00EC               	movwf	___fltol@sign1^(0+128)
 13750     1609  17E6               	bsf	(___fltol@f1^(0+128)+2),7
 13751     160A  30FF               	movlw	255
 13752     160B  05E4               	andwf	___fltol@f1^(0+128),f
 13753     160C  30FF               	movlw	255
 13754     160D  05E5               	andwf	(___fltol@f1+1)^(0+128),f
 13755     160E  30FF               	movlw	255
 13756     160F  05E6               	andwf	(___fltol@f1+2)^(0+128),f
 13757     1610  3000               	movlw	0
 13758     1611  05E7               	andwf	(___fltol@f1+3)^(0+128),f
 13759     1612  3096               	movlw	150
 13760     1613  02ED               	subwf	___fltol@exp1^(0+128),f
 13761     1614  1FED               	btfss	___fltol@exp1^(0+128),7
 13762     1615  2E27               	goto	l4459
 13763     1616  086D               	movf	___fltol@exp1^(0+128),w
 13764     1617  3A80               	xorlw	128
 13765     1618  3E97               	addlw	151
 13766     1619  1C03               	btfss	3,0
 13767     161A  2DEF               	goto	l4437
 13768     161B                     l4457:
 13769     161B  3001               	movlw	1
 13770     161C                     u4675:
 13771     161C  36E7               	lsrf	(___fltol@f1+3)^(0+128),f
 13772     161D  0CE6               	rrf	(___fltol@f1+2)^(0+128),f
 13773     161E  0CE5               	rrf	(___fltol@f1+1)^(0+128),f
 13774     161F  0CE4               	rrf	___fltol@f1^(0+128),f
 13775     1620  0B89               	decfsz	9,f
 13776     1621  2E1C               	goto	u4675
 13777     1622  3001               	movlw	1
 13778     1623  07ED               	addwf	___fltol@exp1^(0+128),f
 13779     1624  1903               	btfsc	3,2
 13780     1625  2E38               	goto	l4467
 13781     1626  2E1B               	goto	l4457
 13782     1627                     l4459:
 13783     1627  3020               	movlw	32
 13784     1628  026D               	subwf	___fltol@exp1^(0+128),w
 13785     1629  1803               	btfsc	3,0
 13786     162A  2DEF               	goto	l4437
 13787     162B                     l1382:
 13788     162B  086D               	movf	___fltol@exp1^(0+128),w
 13789     162C  1903               	btfsc	3,2
 13790     162D  2E38               	goto	l4467
 13791     162E  3001               	movlw	1
 13792     162F                     u4705:
 13793     162F  35E4               	lslf	___fltol@f1^(0+128),f
 13794     1630  0DE5               	rlf	(___fltol@f1+1)^(0+128),f
 13795     1631  0DE6               	rlf	(___fltol@f1+2)^(0+128),f
 13796     1632  0DE7               	rlf	(___fltol@f1+3)^(0+128),f
 13797     1633  0B89               	decfsz	9,f
 13798     1634  2E2F               	goto	u4705
 13799     1635  3001               	movlw	1
 13800     1636  02ED               	subwf	___fltol@exp1^(0+128),f
 13801     1637  2E2B               	goto	l1382
 13802     1638                     l4467:
 13803     1638  086C               	movf	___fltol@sign1^(0+128),w
 13804     1639  1903               	btfsc	3,2
 13805     163A  0008               	return
 13806     163B  09E4               	comf	___fltol@f1^(0+128),f
 13807     163C  09E5               	comf	(___fltol@f1+1)^(0+128),f
 13808     163D  09E6               	comf	(___fltol@f1+2)^(0+128),f
 13809     163E  09E7               	comf	(___fltol@f1+3)^(0+128),f
 13810     163F  0AE4               	incf	___fltol@f1^(0+128),f
 13811     1640  1903               	skipnz
 13812     1641  0AE5               	incf	(___fltol@f1+1)^(0+128),f
 13813     1642  1903               	skipnz
 13814     1643  0AE6               	incf	(___fltol@f1+2)^(0+128),f
 13815     1644  1903               	skipnz
 13816     1645  0AE7               	incf	(___fltol@f1+3)^(0+128),f
 13817     1646  0008               	return
 13818     1647                     __end_of___fltol:
 13819                           
 13820                           	psect	text53
 13821     0075                     __ptext53:	
 13822 ;; *************** function ___flmul *****************
 13823 ;; Defined at:
 13824 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;  b               4   42[BANK1 ] long 
 13827 ;;  a               4   46[BANK1 ] long 
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;  prod            4   62[BANK1 ] struct .
 13830 ;;  grs             4   56[BANK1 ] unsigned long 
 13831 ;;  temp            2   66[BANK1 ] struct .
 13832 ;;  bexp            1   61[BANK1 ] unsigned char 
 13833 ;;  aexp            1   60[BANK1 ] unsigned char 
 13834 ;;  sign            1   55[BANK1 ] unsigned char 
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  4   42[BANK1 ] unsigned char 
 13837 ;; Registers used:
 13838 ;;		wreg, status,2, status,0, pclath, cstack
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13844 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13847 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 13848 ;;Total ram usage:       26 bytes
 13849 ;; Hardware stack levels used: 1
 13850 ;; Hardware stack levels required when called: 6
 13851 ;; This function calls:
 13852 ;;		__Umul8_16
 13853 ;; This function is called by:
 13854 ;;		_printFloat
 13855 ;;		_str2float
 13856 ;;		_getLedNumber
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860     0075                     ___flmul:	
 13861                           ;psect for function ___flmul
 13862                           
 13863                           
 13864                           ;incstack = 0
 13865                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13866     0075  0021               	movlb	1	; select bank1
 13867     0076  084D               	movf	(___flmul@b^(0+128)+3),w
 13868     0077  3980               	andlw	128
 13869     0078  00D7               	movwf	___flmul@sign^(0+128)
 13870     0079  354D               	lslf	(___flmul@b^(0+128)+3),w
 13871     007A  00DD               	movwf	___flmul@bexp^(0+128)
 13872     007B  1BCC               	btfsc	(___flmul@b^(0+128)+2),7
 13873     007C  145D               	bsf	___flmul@bexp^(0+128),0
 13874     007D  085D               	movf	___flmul@bexp^(0+128),w
 13875     007E  1903               	btfsc	3,2
 13876     007F  288D               	goto	l4683
 13877     0080  0A5D               	incf	___flmul@bexp^(0+128),w
 13878     0081  1D03               	btfss	3,2
 13879     0082  288B               	goto	l4681
 13880     0083  3000               	movlw	0
 13881     0084  00CD               	movwf	(___flmul@b+3)^(0+128)
 13882     0085  3000               	movlw	0
 13883     0086  00CC               	movwf	(___flmul@b+2)^(0+128)
 13884     0087  3000               	movlw	0
 13885     0088  00CB               	movwf	(___flmul@b+1)^(0+128)
 13886     0089  3000               	movlw	0
 13887     008A  00CA               	movwf	___flmul@b^(0+128)
 13888     008B                     l4681:
 13889     008B  17CC               	bsf	(___flmul@b^(0+128)+2),7
 13890     008C  2895               	goto	l4685
 13891     008D                     l4683:
 13892     008D  3000               	movlw	0
 13893     008E  00CD               	movwf	(___flmul@b+3)^(0+128)
 13894     008F  3000               	movlw	0
 13895     0090  00CC               	movwf	(___flmul@b+2)^(0+128)
 13896     0091  3000               	movlw	0
 13897     0092  00CB               	movwf	(___flmul@b+1)^(0+128)
 13898     0093  3000               	movlw	0
 13899     0094  00CA               	movwf	___flmul@b^(0+128)
 13900     0095                     l4685:
 13901     0095  0851               	movf	(___flmul@a^(0+128)+3),w
 13902     0096  3980               	andlw	128
 13903     0097  06D7               	xorwf	___flmul@sign^(0+128),f
 13904     0098  3551               	lslf	(___flmul@a^(0+128)+3),w
 13905     0099  00DC               	movwf	___flmul@aexp^(0+128)
 13906     009A  1BD0               	btfsc	(___flmul@a^(0+128)+2),7
 13907     009B  145C               	bsf	___flmul@aexp^(0+128),0
 13908     009C  085C               	movf	___flmul@aexp^(0+128),w
 13909     009D  1903               	btfsc	3,2
 13910     009E  28AC               	goto	l4701
 13911     009F  0A5C               	incf	___flmul@aexp^(0+128),w
 13912     00A0  1D03               	btfss	3,2
 13913     00A1  28AA               	goto	l4699
 13914     00A2  3000               	movlw	0
 13915     00A3  00D1               	movwf	(___flmul@a+3)^(0+128)
 13916     00A4  3000               	movlw	0
 13917     00A5  00D0               	movwf	(___flmul@a+2)^(0+128)
 13918     00A6  3000               	movlw	0
 13919     00A7  00CF               	movwf	(___flmul@a+1)^(0+128)
 13920     00A8  3000               	movlw	0
 13921     00A9  00CE               	movwf	___flmul@a^(0+128)
 13922     00AA                     l4699:
 13923     00AA  17D0               	bsf	(___flmul@a^(0+128)+2),7
 13924     00AB  28B4               	goto	l4703
 13925     00AC                     l4701:
 13926     00AC  3000               	movlw	0
 13927     00AD  00D1               	movwf	(___flmul@a+3)^(0+128)
 13928     00AE  3000               	movlw	0
 13929     00AF  00D0               	movwf	(___flmul@a+2)^(0+128)
 13930     00B0  3000               	movlw	0
 13931     00B1  00CF               	movwf	(___flmul@a+1)^(0+128)
 13932     00B2  3000               	movlw	0
 13933     00B3  00CE               	movwf	___flmul@a^(0+128)
 13934     00B4                     l4703:
 13935     00B4  085C               	movf	___flmul@aexp^(0+128),w
 13936     00B5  1D03               	btfss	3,2
 13937     00B6  085D               	movf	___flmul@bexp^(0+128),w
 13938     00B7  1D03               	btfss	3,2
 13939     00B8  28C2               	goto	l4711
 13940     00B9  3000               	movlw	0
 13941     00BA  00CD               	movwf	(?___flmul+3)^(0+128)
 13942     00BB  3000               	movlw	0
 13943     00BC  00CC               	movwf	(?___flmul+2)^(0+128)
 13944     00BD  3000               	movlw	0
 13945     00BE  00CB               	movwf	(?___flmul+1)^(0+128)
 13946     00BF  3000               	movlw	0
 13947     00C0  00CA               	movwf	?___flmul^(0+128)
 13948     00C1  0008               	return
 13949     00C2                     l4711:
 13950     00C2  084A               	movf	___flmul@b^(0+128),w
 13951     00C3  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 13952     00C4  0850               	movf	(___flmul@a^(0+128)+2),w
 13953     00C5  3191  21AA  3180   	fcall	__Umul8_16
 13954     00C8  0021               	movlb	1	; select bank1
 13955     00C9  0821               	movf	(?__Umul8_16+1)^(0+128),w
 13956     00CA  00E3               	movwf	(___flmul@temp+1)^(0+128)
 13957     00CB  0820               	movf	?__Umul8_16^(0+128),w
 13958     00CC  00E2               	movwf	___flmul@temp^(0+128)
 13959     00CD  0862               	movf	___flmul@temp^(0+128),w
 13960     00CE  00D2               	movwf	??___flmul^(0+128)
 13961     00CF  01D3               	clrf	(??___flmul^(0+128)+1)
 13962     00D0  01D4               	clrf	(??___flmul^(0+128)+2)
 13963     00D1  01D5               	clrf	(??___flmul^(0+128)+3)
 13964     00D2  0855               	movf	(??___flmul+3)^(0+128),w
 13965     00D3  00DB               	movwf	(___flmul@grs+3)^(0+128)
 13966     00D4  0854               	movf	(??___flmul+2)^(0+128),w
 13967     00D5  00DA               	movwf	(___flmul@grs+2)^(0+128)
 13968     00D6  0853               	movf	(??___flmul+1)^(0+128),w
 13969     00D7  00D9               	movwf	(___flmul@grs+1)^(0+128)
 13970     00D8  0852               	movf	??___flmul^(0+128),w
 13971     00D9  00D8               	movwf	___flmul@grs^(0+128)
 13972     00DA  0863               	movf	(___flmul@temp^(0+128)+1),w
 13973     00DB  00D2               	movwf	??___flmul^(0+128)
 13974     00DC  01D3               	clrf	(??___flmul^(0+128)+1)
 13975     00DD  01D4               	clrf	(??___flmul^(0+128)+2)
 13976     00DE  01D5               	clrf	(??___flmul^(0+128)+3)
 13977     00DF  0855               	movf	(??___flmul+3)^(0+128),w
 13978     00E0  00E1               	movwf	(___flmul@prod+3)^(0+128)
 13979     00E1  0854               	movf	(??___flmul+2)^(0+128),w
 13980     00E2  00E0               	movwf	(___flmul@prod+2)^(0+128)
 13981     00E3  0853               	movf	(??___flmul+1)^(0+128),w
 13982     00E4  00DF               	movwf	(___flmul@prod+1)^(0+128)
 13983     00E5  0852               	movf	??___flmul^(0+128),w
 13984     00E6  00DE               	movwf	___flmul@prod^(0+128)
 13985     00E7  084B               	movf	(___flmul@b^(0+128)+1),w
 13986     00E8  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 13987     00E9  084F               	movf	(___flmul@a^(0+128)+1),w
 13988     00EA  3191  21AA  3180   	fcall	__Umul8_16
 13989     00ED  0021               	movlb	1	; select bank1
 13990     00EE  0821               	movf	(?__Umul8_16+1)^(0+128),w
 13991     00EF  00E3               	movwf	(___flmul@temp+1)^(0+128)
 13992     00F0  0820               	movf	?__Umul8_16^(0+128),w
 13993     00F1  00E2               	movwf	___flmul@temp^(0+128)
 13994     00F2  0862               	movf	___flmul@temp^(0+128),w
 13995     00F3  00D2               	movwf	??___flmul^(0+128)
 13996     00F4  01D3               	clrf	(??___flmul^(0+128)+1)
 13997     00F5  01D4               	clrf	(??___flmul^(0+128)+2)
 13998     00F6  01D5               	clrf	(??___flmul^(0+128)+3)
 13999     00F7  0852               	movf	??___flmul^(0+128),w
 14000     00F8  07D8               	addwf	___flmul@grs^(0+128),f
 14001     00F9  0853               	movf	(??___flmul+1)^(0+128),w
 14002     00FA  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 14003     00FB  0854               	movf	(??___flmul+2)^(0+128),w
 14004     00FC  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 14005     00FD  0855               	movf	(??___flmul+3)^(0+128),w
 14006     00FE  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 14007     00FF  0863               	movf	(___flmul@temp^(0+128)+1),w
 14008     0100  00D2               	movwf	??___flmul^(0+128)
 14009     0101  01D3               	clrf	(??___flmul^(0+128)+1)
 14010     0102  01D4               	clrf	(??___flmul^(0+128)+2)
 14011     0103  01D5               	clrf	(??___flmul^(0+128)+3)
 14012     0104  0852               	movf	??___flmul^(0+128),w
 14013     0105  07DE               	addwf	___flmul@prod^(0+128),f
 14014     0106  0853               	movf	(??___flmul+1)^(0+128),w
 14015     0107  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14016     0108  0854               	movf	(??___flmul+2)^(0+128),w
 14017     0109  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14018     010A  0855               	movf	(??___flmul+3)^(0+128),w
 14019     010B  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14020     010C  084C               	movf	(___flmul@b^(0+128)+2),w
 14021     010D  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14022     010E  084E               	movf	___flmul@a^(0+128),w
 14023     010F  3191  21AA  3180   	fcall	__Umul8_16
 14024     0112  0021               	movlb	1	; select bank1
 14025     0113  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14026     0114  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14027     0115  0820               	movf	?__Umul8_16^(0+128),w
 14028     0116  00E2               	movwf	___flmul@temp^(0+128)
 14029     0117  0862               	movf	___flmul@temp^(0+128),w
 14030     0118  00D2               	movwf	??___flmul^(0+128)
 14031     0119  01D3               	clrf	(??___flmul^(0+128)+1)
 14032     011A  01D4               	clrf	(??___flmul^(0+128)+2)
 14033     011B  01D5               	clrf	(??___flmul^(0+128)+3)
 14034     011C  0852               	movf	??___flmul^(0+128),w
 14035     011D  07D8               	addwf	___flmul@grs^(0+128),f
 14036     011E  0853               	movf	(??___flmul+1)^(0+128),w
 14037     011F  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 14038     0120  0854               	movf	(??___flmul+2)^(0+128),w
 14039     0121  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 14040     0122  0855               	movf	(??___flmul+3)^(0+128),w
 14041     0123  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 14042     0124  0863               	movf	(___flmul@temp^(0+128)+1),w
 14043     0125  00D2               	movwf	??___flmul^(0+128)
 14044     0126  01D3               	clrf	(??___flmul^(0+128)+1)
 14045     0127  01D4               	clrf	(??___flmul^(0+128)+2)
 14046     0128  01D5               	clrf	(??___flmul^(0+128)+3)
 14047     0129  0852               	movf	??___flmul^(0+128),w
 14048     012A  07DE               	addwf	___flmul@prod^(0+128),f
 14049     012B  0853               	movf	(??___flmul+1)^(0+128),w
 14050     012C  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14051     012D  0854               	movf	(??___flmul+2)^(0+128),w
 14052     012E  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14053     012F  0855               	movf	(??___flmul+3)^(0+128),w
 14054     0130  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14055     0131  3008               	movlw	8
 14056     0132                     u5275:
 14057     0132  35D8               	lslf	___flmul@grs^(0+128),f
 14058     0133  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 14059     0134  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 14060     0135  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 14061     0136  0B89               	decfsz	9,f
 14062     0137  2932               	goto	u5275
 14063     0138  084B               	movf	(___flmul@b^(0+128)+1),w
 14064     0139  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14065     013A  084E               	movf	___flmul@a^(0+128),w
 14066     013B  3191  21AA  3180   	fcall	__Umul8_16
 14067     013E  0021               	movlb	1	; select bank1
 14068     013F  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14069     0140  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14070     0141  0820               	movf	?__Umul8_16^(0+128),w
 14071     0142  00E2               	movwf	___flmul@temp^(0+128)
 14072     0143  0862               	movf	___flmul@temp^(0+128),w
 14073     0144  07D8               	addwf	___flmul@grs^(0+128),f
 14074     0145  0863               	movf	(___flmul@temp+1)^(0+128),w
 14075     0146  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 14076     0147  3000               	movlw	0
 14077     0148  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 14078     0149  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 14079     014A  084A               	movf	___flmul@b^(0+128),w
 14080     014B  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14081     014C  084F               	movf	(___flmul@a^(0+128)+1),w
 14082     014D  3191  21AA  3180   	fcall	__Umul8_16
 14083     0150  0021               	movlb	1	; select bank1
 14084     0151  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14085     0152  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14086     0153  0820               	movf	?__Umul8_16^(0+128),w
 14087     0154  00E2               	movwf	___flmul@temp^(0+128)
 14088     0155  0862               	movf	___flmul@temp^(0+128),w
 14089     0156  07D8               	addwf	___flmul@grs^(0+128),f
 14090     0157  0863               	movf	(___flmul@temp+1)^(0+128),w
 14091     0158  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 14092     0159  3000               	movlw	0
 14093     015A  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 14094     015B  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 14095     015C  3008               	movlw	8
 14096     015D                     u5285:
 14097     015D  35D8               	lslf	___flmul@grs^(0+128),f
 14098     015E  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 14099     015F  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 14100     0160  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 14101     0161  0B89               	decfsz	9,f
 14102     0162  295D               	goto	u5285
 14103     0163  084A               	movf	___flmul@b^(0+128),w
 14104     0164  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14105     0165  084E               	movf	___flmul@a^(0+128),w
 14106     0166  3191  21AA  3180   	fcall	__Umul8_16
 14107     0169  0021               	movlb	1	; select bank1
 14108     016A  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14109     016B  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14110     016C  0820               	movf	?__Umul8_16^(0+128),w
 14111     016D  00E2               	movwf	___flmul@temp^(0+128)
 14112     016E  0862               	movf	___flmul@temp^(0+128),w
 14113     016F  07D8               	addwf	___flmul@grs^(0+128),f
 14114     0170  0863               	movf	(___flmul@temp+1)^(0+128),w
 14115     0171  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 14116     0172  3000               	movlw	0
 14117     0173  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 14118     0174  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 14119     0175  084B               	movf	(___flmul@b^(0+128)+1),w
 14120     0176  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14121     0177  0850               	movf	(___flmul@a^(0+128)+2),w
 14122     0178  3191  21AA  3180   	fcall	__Umul8_16
 14123     017B  0021               	movlb	1	; select bank1
 14124     017C  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14125     017D  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14126     017E  0820               	movf	?__Umul8_16^(0+128),w
 14127     017F  00E2               	movwf	___flmul@temp^(0+128)
 14128     0180  0862               	movf	___flmul@temp^(0+128),w
 14129     0181  07DE               	addwf	___flmul@prod^(0+128),f
 14130     0182  0863               	movf	(___flmul@temp+1)^(0+128),w
 14131     0183  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14132     0184  3000               	movlw	0
 14133     0185  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14134     0186  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14135     0187  084C               	movf	(___flmul@b^(0+128)+2),w
 14136     0188  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14137     0189  084F               	movf	(___flmul@a^(0+128)+1),w
 14138     018A  3191  21AA  3180   	fcall	__Umul8_16
 14139     018D  0021               	movlb	1	; select bank1
 14140     018E  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14141     018F  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14142     0190  0820               	movf	?__Umul8_16^(0+128),w
 14143     0191  00E2               	movwf	___flmul@temp^(0+128)
 14144     0192  0862               	movf	___flmul@temp^(0+128),w
 14145     0193  07DE               	addwf	___flmul@prod^(0+128),f
 14146     0194  0863               	movf	(___flmul@temp+1)^(0+128),w
 14147     0195  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14148     0196  3000               	movlw	0
 14149     0197  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14150     0198  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14151     0199  084C               	movf	(___flmul@b^(0+128)+2),w
 14152     019A  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14153     019B  0850               	movf	(___flmul@a^(0+128)+2),w
 14154     019C  3191  21AA  3180   	fcall	__Umul8_16
 14155     019F  0021               	movlb	1	; select bank1
 14156     01A0  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14157     01A1  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14158     01A2  0820               	movf	?__Umul8_16^(0+128),w
 14159     01A3  00E2               	movwf	___flmul@temp^(0+128)
 14160     01A4  0862               	movf	___flmul@temp^(0+128),w
 14161     01A5  00D2               	movwf	??___flmul^(0+128)
 14162     01A6  0863               	movf	(___flmul@temp+1)^(0+128),w
 14163     01A7  00D3               	movwf	(??___flmul^(0+128)+1)
 14164     01A8  01D4               	clrf	(??___flmul^(0+128)+2)
 14165     01A9  01D5               	clrf	(??___flmul^(0+128)+3)
 14166     01AA  3008               	movlw	8
 14167     01AB                     u5295:
 14168     01AB  35D2               	lslf	??___flmul^(0+128),f
 14169     01AC  0DD3               	rlf	(??___flmul^(0+128)+1),f
 14170     01AD  0DD4               	rlf	(??___flmul^(0+128)+2),f
 14171     01AE  0DD5               	rlf	(??___flmul^(0+128)+3),f
 14172     01AF  0B89               	decfsz	9,f
 14173     01B0  29AB               	goto	u5295
 14174     01B1  0852               	movf	??___flmul^(0+128),w
 14175     01B2  07DE               	addwf	___flmul@prod^(0+128),f
 14176     01B3  0853               	movf	(??___flmul+1)^(0+128),w
 14177     01B4  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14178     01B5  0854               	movf	(??___flmul+2)^(0+128),w
 14179     01B6  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14180     01B7  0855               	movf	(??___flmul+3)^(0+128),w
 14181     01B8  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14182     01B9  0858               	movf	___flmul@grs^(0+128),w
 14183     01BA  00D2               	movwf	??___flmul^(0+128)
 14184     01BB  0859               	movf	(___flmul@grs+1)^(0+128),w
 14185     01BC  00D3               	movwf	(??___flmul^(0+128)+1)
 14186     01BD  085A               	movf	(___flmul@grs+2)^(0+128),w
 14187     01BE  00D4               	movwf	(??___flmul^(0+128)+2)
 14188     01BF  085B               	movf	(___flmul@grs+3)^(0+128),w
 14189     01C0  00D5               	movwf	(??___flmul^(0+128)+3)
 14190     01C1  3018               	movlw	24
 14191     01C2                     u5305:
 14192     01C2  36D5               	lsrf	(??___flmul^(0+128)+3),f
 14193     01C3  0CD4               	rrf	(??___flmul^(0+128)+2),f
 14194     01C4  0CD3               	rrf	(??___flmul^(0+128)+1),f
 14195     01C5  0CD2               	rrf	??___flmul^(0+128),f
 14196     01C6  0B89               	decfsz	9,f
 14197     01C7  29C2               	goto	u5305
 14198     01C8  0852               	movf	??___flmul^(0+128),w
 14199     01C9  07DE               	addwf	___flmul@prod^(0+128),f
 14200     01CA  0853               	movf	(??___flmul+1)^(0+128),w
 14201     01CB  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14202     01CC  0854               	movf	(??___flmul+2)^(0+128),w
 14203     01CD  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14204     01CE  0855               	movf	(??___flmul+3)^(0+128),w
 14205     01CF  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14206     01D0  3008               	movlw	8
 14207     01D1                     u5315:
 14208     01D1  35D8               	lslf	___flmul@grs^(0+128),f
 14209     01D2  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 14210     01D3  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 14211     01D4  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 14212     01D5  0B89               	decfsz	9,f
 14213     01D6  29D1               	goto	u5315
 14214     01D7  085D               	movf	___flmul@bexp^(0+128),w
 14215     01D8  075C               	addwf	___flmul@aexp^(0+128),w
 14216     01D9  00D2               	movwf	??___flmul^(0+128)
 14217     01DA  01D3               	clrf	(??___flmul^(0+128)+1)
 14218     01DB  0DD3               	rlf	(??___flmul+1)^(0+128),f
 14219     01DC  0852               	movf	??___flmul^(0+128),w
 14220     01DD  3E82               	addlw	130
 14221     01DE  00E2               	movwf	___flmul@temp^(0+128)
 14222     01DF  30FF               	movlw	255
 14223     01E0  3D53               	addwfc	(??___flmul+1)^(0+128),w
 14224     01E1  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14225     01E2                     l4763:
 14226     01E2  1BE0               	btfsc	(___flmul@prod+2)^(0+128),7
 14227     01E3  29F9               	goto	l4765
 14228     01E4  3001               	movlw	1
 14229     01E5                     u5325:
 14230     01E5  35DE               	lslf	___flmul@prod^(0+128),f
 14231     01E6  0DDF               	rlf	(___flmul@prod+1)^(0+128),f
 14232     01E7  0DE0               	rlf	(___flmul@prod+2)^(0+128),f
 14233     01E8  0DE1               	rlf	(___flmul@prod+3)^(0+128),f
 14234     01E9  0B89               	decfsz	9,f
 14235     01EA  29E5               	goto	u5325
 14236     01EB  1BDB               	btfsc	(___flmul@grs+3)^(0+128),7
 14237     01EC  145E               	bsf	___flmul@prod^(0+128),0
 14238     01ED  3001               	movlw	1
 14239     01EE                     u5345:
 14240     01EE  35D8               	lslf	___flmul@grs^(0+128),f
 14241     01EF  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 14242     01F0  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 14243     01F1  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 14244     01F2  0B89               	decfsz	9,f
 14245     01F3  29EE               	goto	u5345
 14246     01F4  30FF               	movlw	255
 14247     01F5  07E2               	addwf	___flmul@temp^(0+128),f
 14248     01F6  30FF               	movlw	255
 14249     01F7  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 14250     01F8  29E2               	goto	l4763
 14251     01F9                     l4765:
 14252     01F9  01DC               	clrf	___flmul@aexp^(0+128)
 14253     01FA  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 14254     01FB  2A12               	goto	l4775
 14255     01FC  30FF               	movlw	255
 14256     01FD  0558               	andwf	___flmul@grs^(0+128),w
 14257     01FE  00D2               	movwf	??___flmul^(0+128)
 14258     01FF  30FF               	movlw	255
 14259     0200  0559               	andwf	(___flmul@grs+1)^(0+128),w
 14260     0201  00D3               	movwf	(??___flmul^(0+128)+1)
 14261     0202  30FF               	movlw	255
 14262     0203  055A               	andwf	(___flmul@grs+2)^(0+128),w
 14263     0204  00D4               	movwf	(??___flmul^(0+128)+2)
 14264     0205  307F               	movlw	127
 14265     0206  055B               	andwf	(___flmul@grs+3)^(0+128),w
 14266     0207  00D5               	movwf	(??___flmul^(0+128)+3)
 14267     0208  0855               	movf	(??___flmul+3)^(0+128),w
 14268     0209  0454               	iorwf	(??___flmul+2)^(0+128),w
 14269     020A  0453               	iorwf	(??___flmul+1)^(0+128),w
 14270     020B  0452               	iorwf	??___flmul^(0+128),w
 14271     020C  1903               	skipnz
 14272     020D  185E               	btfsc	___flmul@prod^(0+128),0
 14273     020E  2A10               	goto	l4771
 14274     020F  2A12               	goto	l4775
 14275     0210                     l4771:
 14276     0210  3001               	movlw	1
 14277     0211  00DC               	movwf	___flmul@aexp^(0+128)
 14278     0212                     l4775:
 14279     0212  085C               	movf	___flmul@aexp^(0+128),w
 14280     0213  1903               	btfsc	3,2
 14281     0214  2A39               	goto	l4785
 14282     0215  3001               	movlw	1
 14283     0216  07DE               	addwf	___flmul@prod^(0+128),f
 14284     0217  3000               	movlw	0
 14285     0218  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 14286     0219  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 14287     021A  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 14288     021B  1C61               	btfss	(___flmul@prod+3)^(0+128),0
 14289     021C  2A39               	goto	l4785
 14290     021D  085E               	movf	___flmul@prod^(0+128),w
 14291     021E  00D2               	movwf	??___flmul^(0+128)
 14292     021F  085F               	movf	(___flmul@prod+1)^(0+128),w
 14293     0220  00D3               	movwf	(??___flmul^(0+128)+1)
 14294     0221  0860               	movf	(___flmul@prod+2)^(0+128),w
 14295     0222  00D4               	movwf	(??___flmul^(0+128)+2)
 14296     0223  0861               	movf	(___flmul@prod+3)^(0+128),w
 14297     0224  00D5               	movwf	(??___flmul^(0+128)+3)
 14298     0225  3001               	movlw	1
 14299     0226  00D6               	movwf	(??___flmul+4)^(0+128)
 14300     0227                     u5415:
 14301     0227  37D5               	asrf	(??___flmul^(0+128)+3),f
 14302     0228  0CD4               	rrf	(??___flmul^(0+128)+2),f
 14303     0229  0CD3               	rrf	(??___flmul^(0+128)+1),f
 14304     022A  0CD2               	rrf	??___flmul^(0+128),f
 14305     022B  0BD6               	decfsz	(??___flmul+4)^(0+128),f
 14306     022C  2A27               	goto	u5415
 14307     022D  0855               	movf	(??___flmul+3)^(0+128),w
 14308     022E  00E1               	movwf	(___flmul@prod+3)^(0+128)
 14309     022F  0854               	movf	(??___flmul+2)^(0+128),w
 14310     0230  00E0               	movwf	(___flmul@prod+2)^(0+128)
 14311     0231  0853               	movf	(??___flmul+1)^(0+128),w
 14312     0232  00DF               	movwf	(___flmul@prod+1)^(0+128)
 14313     0233  0852               	movf	??___flmul^(0+128),w
 14314     0234  00DE               	movwf	___flmul@prod^(0+128)
 14315     0235  3001               	movlw	1
 14316     0236  07E2               	addwf	___flmul@temp^(0+128),f
 14317     0237  3000               	movlw	0
 14318     0238  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 14319     0239                     l4785:
 14320     0239  0863               	movf	(___flmul@temp+1)^(0+128),w
 14321     023A  3A80               	xorlw	128
 14322     023B  00D2               	movwf	??___flmul^(0+128)
 14323     023C  3080               	movlw	128
 14324     023D  0252               	subwf	??___flmul^(0+128),w
 14325     023E  1D03               	skipz
 14326     023F  2A42               	goto	u5425
 14327     0240  30FF               	movlw	255
 14328     0241  0262               	subwf	___flmul@temp^(0+128),w
 14329     0242                     u5425:
 14330     0242  1C03               	skipc
 14331     0243  2A4E               	goto	l4789
 14332     0244  307F               	movlw	127
 14333     0245  0021               	movlb	1	; select bank1
 14334     0246  00E1               	movwf	(___flmul@prod+3)^(0+128)
 14335     0247  3080               	movlw	128
 14336     0248  00E0               	movwf	(___flmul@prod+2)^(0+128)
 14337     0249  3000               	movlw	0
 14338     024A  00DF               	movwf	(___flmul@prod+1)^(0+128)
 14339     024B  3000               	movlw	0
 14340     024C  00DE               	movwf	___flmul@prod^(0+128)
 14341     024D  2A7A               	goto	l1590
 14342     024E                     l4789:
 14343     024E  0021               	movlb	1	; select bank1
 14344     024F  0863               	movf	(___flmul@temp+1)^(0+128),w
 14345     0250  3A80               	xorlw	128
 14346     0251  00D2               	movwf	??___flmul^(0+128)
 14347     0252  3080               	movlw	128
 14348     0253  0252               	subwf	??___flmul^(0+128),w
 14349     0254  1D03               	skipz
 14350     0255  2A58               	goto	u5435
 14351     0256  3001               	movlw	1
 14352     0257  0262               	subwf	___flmul@temp^(0+128),w
 14353     0258                     u5435:
 14354     0258  1803               	skipnc
 14355     0259  2A65               	goto	l4795
 14356     025A  3000               	movlw	0
 14357     025B  0021               	movlb	1	; select bank1
 14358     025C  00E1               	movwf	(___flmul@prod+3)^(0+128)
 14359     025D  3000               	movlw	0
 14360     025E  00E0               	movwf	(___flmul@prod+2)^(0+128)
 14361     025F  3000               	movlw	0
 14362     0260  00DF               	movwf	(___flmul@prod+1)^(0+128)
 14363     0261  3000               	movlw	0
 14364     0262  00DE               	movwf	___flmul@prod^(0+128)
 14365     0263  01D7               	clrf	___flmul@sign^(0+128)
 14366     0264  2A7A               	goto	l1590
 14367     0265                     l4795:
 14368     0265  0021               	movlb	1	; select bank1
 14369     0266  0862               	movf	___flmul@temp^(0+128),w
 14370     0267  00DD               	movwf	___flmul@bexp^(0+128)
 14371     0268  30FF               	movlw	255
 14372     0269  05DE               	andwf	___flmul@prod^(0+128),f
 14373     026A  30FF               	movlw	255
 14374     026B  05DF               	andwf	(___flmul@prod+1)^(0+128),f
 14375     026C  307F               	movlw	127
 14376     026D  05E0               	andwf	(___flmul@prod+2)^(0+128),f
 14377     026E  3000               	movlw	0
 14378     026F  05E1               	andwf	(___flmul@prod+3)^(0+128),f
 14379     0270  185D               	btfsc	___flmul@bexp^(0+128),0
 14380     0271  17E0               	bsf	(___flmul@prod^(0+128)+2),7
 14381     0272  085D               	movf	___flmul@bexp^(0+128),w
 14382     0273  00D2               	movwf	??___flmul^(0+128)
 14383     0274  3001               	movlw	1
 14384     0275                     u5455:
 14385     0275  36D2               	lsrf	??___flmul^(0+128),f
 14386     0276  0B89               	decfsz	9,f
 14387     0277  2A75               	goto	u5455
 14388     0278  0852               	movf	??___flmul^(0+128),w
 14389     0279  00E1               	movwf	(___flmul@prod^(0+128)+3)
 14390     027A                     l1590:
 14391     027A  0857               	movf	___flmul@sign^(0+128),w
 14392     027B  04E1               	iorwf	(___flmul@prod^(0+128)+3),f
 14393     027C  0861               	movf	(___flmul@prod+3)^(0+128),w
 14394     027D  00CD               	movwf	(?___flmul+3)^(0+128)
 14395     027E  0860               	movf	(___flmul@prod+2)^(0+128),w
 14396     027F  00CC               	movwf	(?___flmul+2)^(0+128)
 14397     0280  085F               	movf	(___flmul@prod+1)^(0+128),w
 14398     0281  00CB               	movwf	(?___flmul+1)^(0+128)
 14399     0282  085E               	movf	___flmul@prod^(0+128),w
 14400     0283  00CA               	movwf	?___flmul^(0+128)
 14401     0284  0008               	return
 14402     0285                     __end_of___flmul:
 14403                           
 14404                           	psect	text54
 14405     11AA                     __ptext54:	
 14406 ;; *************** function __Umul8_16 *****************
 14407 ;; Defined at:
 14408 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;  multiplier      1    wreg     unsigned char 
 14411 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;  multiplier      1    8[BANK1 ] unsigned char 
 14414 ;;  word_mpld       2    6[BANK1 ] unsigned short 
 14415 ;;  product         2    4[BANK1 ] unsigned short 
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  2    0[BANK1 ] unsigned int 
 14418 ;; Registers used:
 14419 ;;		wreg, status,2, status,0
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14425 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14426 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14427 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14428 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 14429 ;;Total ram usage:        9 bytes
 14430 ;; Hardware stack levels used: 1
 14431 ;; Hardware stack levels required when called: 5
 14432 ;; This function calls:
 14433 ;;		Nothing
 14434 ;; This function is called by:
 14435 ;;		___flmul
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439     11AA                     __Umul8_16:	
 14440                           ;psect for function __Umul8_16
 14441                           
 14442                           
 14443                           ;incstack = 0
 14444                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14445                           ;__Umul8_16@multiplier stored from wreg
 14446     11AA  0021               	movlb	1	; select bank1
 14447     11AB  00A8               	movwf	__Umul8_16@multiplier^(0+128)
 14448     11AC  01A4               	clrf	__Umul8_16@product^(0+128)
 14449     11AD  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
 14450     11AE  0820               	movf	__Umul8_16@multiplicand^(0+128),w
 14451     11AF  00A2               	movwf	??__Umul8_16^(0+128)
 14452     11B0  01A3               	clrf	(??__Umul8_16^(0+128)+1)
 14453     11B1  0822               	movf	??__Umul8_16^(0+128),w
 14454     11B2  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
 14455     11B3  0823               	movf	(??__Umul8_16+1)^(0+128),w
 14456     11B4  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
 14457     11B5                     l4325:
 14458     11B5  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
 14459     11B6  29BB               	goto	l1597
 14460     11B7  0826               	movf	__Umul8_16@word_mpld^(0+128),w
 14461     11B8  07A4               	addwf	__Umul8_16@product^(0+128),f
 14462     11B9  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
 14463     11BA  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
 14464     11BB                     l1597:
 14465     11BB  3001               	movlw	1
 14466     11BC                     u4435:
 14467     11BC  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
 14468     11BD  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
 14469     11BE  0B89               	decfsz	9,f
 14470     11BF  29BC               	goto	u4435
 14471     11C0  1003               	clrc
 14472     11C1  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
 14473     11C2  0828               	movf	__Umul8_16@multiplier^(0+128),w
 14474     11C3  1D03               	btfss	3,2
 14475     11C4  29B5               	goto	l4325
 14476     11C5  0825               	movf	(__Umul8_16@product+1)^(0+128),w
 14477     11C6  00A1               	movwf	(?__Umul8_16+1)^(0+128)
 14478     11C7  0824               	movf	__Umul8_16@product^(0+128),w
 14479     11C8  00A0               	movwf	?__Umul8_16^(0+128)
 14480     11C9  0008               	return
 14481     11CA                     __end_of__Umul8_16:
 14482                           
 14483                           	psect	text55
 14484     0495                     __ptext55:	
 14485 ;; *************** function ___fladd *****************
 14486 ;; Defined at:
 14487 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  b               4   14[BANK1 ] unsigned int 
 14490 ;;  a               4   18[BANK1 ] unsigned int 
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;  grs             1   33[BANK1 ] unsigned char 
 14493 ;;  bexp            1   32[BANK1 ] unsigned char 
 14494 ;;  aexp            1   31[BANK1 ] unsigned char 
 14495 ;;  signs           1   30[BANK1 ] unsigned char 
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  4   14[BANK1 ] unsigned char 
 14498 ;; Registers used:
 14499 ;;		wreg, status,2, status,0
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14505 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14506 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14507 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14508 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 14509 ;;Total ram usage:       20 bytes
 14510 ;; Hardware stack levels used: 1
 14511 ;; Hardware stack levels required when called: 5
 14512 ;; This function calls:
 14513 ;;		Nothing
 14514 ;; This function is called by:
 14515 ;;		_str2float
 14516 ;;		_getLedNumber
 14517 ;;		___flsub
 14518 ;; This function uses a non-reentrant model
 14519 ;;
 14520                           
 14521     0495                     ___fladd:	
 14522                           ;psect for function ___fladd
 14523                           
 14524                           
 14525                           ;incstack = 0
 14526                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14527     0495  0021               	movlb	1	; select bank1
 14528     0496  0831               	movf	(___fladd@b^(0+128)+3),w
 14529     0497  3980               	andlw	128
 14530     0498  00BE               	movwf	___fladd@signs^(0+128)
 14531     0499  3531               	lslf	(___fladd@b^(0+128)+3),w
 14532     049A  00C0               	movwf	___fladd@bexp^(0+128)
 14533     049B  1BB0               	btfsc	(___fladd@b^(0+128)+2),7
 14534     049C  1440               	bsf	___fladd@bexp^(0+128),0
 14535     049D  0840               	movf	___fladd@bexp^(0+128),w
 14536     049E  1903               	btfsc	3,2
 14537     049F  2CAE               	goto	l4489
 14538     04A0  0A40               	incf	___fladd@bexp^(0+128),w
 14539     04A1  1D03               	btfss	3,2
 14540     04A2  2CAB               	goto	l4485
 14541     04A3  3000               	movlw	0
 14542     04A4  00B1               	movwf	(___fladd@b+3)^(0+128)
 14543     04A5  3000               	movlw	0
 14544     04A6  00B0               	movwf	(___fladd@b+2)^(0+128)
 14545     04A7  3000               	movlw	0
 14546     04A8  00AF               	movwf	(___fladd@b+1)^(0+128)
 14547     04A9  3000               	movlw	0
 14548     04AA  00AE               	movwf	___fladd@b^(0+128)
 14549     04AB                     l4485:
 14550     04AB  17B0               	bsf	(___fladd@b^(0+128)+2),7
 14551     04AC  01B1               	clrf	(___fladd@b^(0+128)+3)
 14552     04AD  2CB6               	goto	l4491
 14553     04AE                     l4489:
 14554     04AE  3000               	movlw	0
 14555     04AF  00B1               	movwf	(___fladd@b+3)^(0+128)
 14556     04B0  3000               	movlw	0
 14557     04B1  00B0               	movwf	(___fladd@b+2)^(0+128)
 14558     04B2  3000               	movlw	0
 14559     04B3  00AF               	movwf	(___fladd@b+1)^(0+128)
 14560     04B4  3000               	movlw	0
 14561     04B5  00AE               	movwf	___fladd@b^(0+128)
 14562     04B6                     l4491:
 14563     04B6  0835               	movf	(___fladd@a^(0+128)+3),w
 14564     04B7  3980               	andlw	128
 14565     04B8  00BF               	movwf	___fladd@aexp^(0+128)
 14566     04B9  083F               	movf	___fladd@aexp^(0+128),w
 14567     04BA  063E               	xorwf	___fladd@signs^(0+128),w
 14568     04BB  1D03               	btfss	3,2
 14569     04BC  173E               	bsf	___fladd@signs^(0+128),6
 14570     04BD  3535               	lslf	(___fladd@a^(0+128)+3),w
 14571     04BE  00BF               	movwf	___fladd@aexp^(0+128)
 14572     04BF  1BB4               	btfsc	(___fladd@a^(0+128)+2),7
 14573     04C0  143F               	bsf	___fladd@aexp^(0+128),0
 14574     04C1  083F               	movf	___fladd@aexp^(0+128),w
 14575     04C2  1903               	btfsc	3,2
 14576     04C3  2CD2               	goto	l4513
 14577     04C4  0A3F               	incf	___fladd@aexp^(0+128),w
 14578     04C5  1D03               	btfss	3,2
 14579     04C6  2CCF               	goto	l4509
 14580     04C7  3000               	movlw	0
 14581     04C8  00B5               	movwf	(___fladd@a+3)^(0+128)
 14582     04C9  3000               	movlw	0
 14583     04CA  00B4               	movwf	(___fladd@a+2)^(0+128)
 14584     04CB  3000               	movlw	0
 14585     04CC  00B3               	movwf	(___fladd@a+1)^(0+128)
 14586     04CD  3000               	movlw	0
 14587     04CE  00B2               	movwf	___fladd@a^(0+128)
 14588     04CF                     l4509:
 14589     04CF  17B4               	bsf	(___fladd@a^(0+128)+2),7
 14590     04D0  01B5               	clrf	(___fladd@a^(0+128)+3)
 14591     04D1  2CDA               	goto	l1482
 14592     04D2                     l4513:
 14593     04D2  3000               	movlw	0
 14594     04D3  00B5               	movwf	(___fladd@a+3)^(0+128)
 14595     04D4  3000               	movlw	0
 14596     04D5  00B4               	movwf	(___fladd@a+2)^(0+128)
 14597     04D6  3000               	movlw	0
 14598     04D7  00B3               	movwf	(___fladd@a+1)^(0+128)
 14599     04D8  3000               	movlw	0
 14600     04D9  00B2               	movwf	___fladd@a^(0+128)
 14601     04DA                     l1482:
 14602     04DA  0840               	movf	___fladd@bexp^(0+128),w
 14603     04DB  023F               	subwf	___fladd@aexp^(0+128),w
 14604     04DC  1803               	skipnc
 14605     04DD  2D00               	goto	l4549
 14606     04DE  1F3E               	btfss	___fladd@signs^(0+128),6
 14607     04DF  2CE2               	goto	l4519
 14608     04E0  3080               	movlw	128
 14609     04E1  06BE               	xorwf	___fladd@signs^(0+128),f
 14610     04E2                     l4519:
 14611     04E2  0840               	movf	___fladd@bexp^(0+128),w
 14612     04E3  00C1               	movwf	___fladd@grs^(0+128)
 14613     04E4  083F               	movf	___fladd@aexp^(0+128),w
 14614     04E5  00C0               	movwf	___fladd@bexp^(0+128)
 14615     04E6  0841               	movf	___fladd@grs^(0+128),w
 14616     04E7  00BF               	movwf	___fladd@aexp^(0+128)
 14617     04E8  082E               	movf	___fladd@b^(0+128),w
 14618     04E9  00C1               	movwf	___fladd@grs^(0+128)
 14619     04EA  0832               	movf	___fladd@a^(0+128),w
 14620     04EB  00AE               	movwf	___fladd@b^(0+128)
 14621     04EC  0841               	movf	___fladd@grs^(0+128),w
 14622     04ED  00B2               	movwf	___fladd@a^(0+128)
 14623     04EE  082F               	movf	(___fladd@b^(0+128)+1),w
 14624     04EF  00C1               	movwf	___fladd@grs^(0+128)
 14625     04F0  0833               	movf	(___fladd@a^(0+128)+1),w
 14626     04F1  00AF               	movwf	(___fladd@b^(0+128)+1)
 14627     04F2  0841               	movf	___fladd@grs^(0+128),w
 14628     04F3  00B3               	movwf	(___fladd@a^(0+128)+1)
 14629     04F4  0830               	movf	(___fladd@b^(0+128)+2),w
 14630     04F5  00C1               	movwf	___fladd@grs^(0+128)
 14631     04F6  0834               	movf	(___fladd@a^(0+128)+2),w
 14632     04F7  00B0               	movwf	(___fladd@b^(0+128)+2)
 14633     04F8  0841               	movf	___fladd@grs^(0+128),w
 14634     04F9  00B4               	movwf	(___fladd@a^(0+128)+2)
 14635     04FA  0831               	movf	(___fladd@b^(0+128)+3),w
 14636     04FB  00C1               	movwf	___fladd@grs^(0+128)
 14637     04FC  0835               	movf	(___fladd@a^(0+128)+3),w
 14638     04FD  00B1               	movwf	(___fladd@b^(0+128)+3)
 14639     04FE  0841               	movf	___fladd@grs^(0+128),w
 14640     04FF  00B5               	movwf	(___fladd@a^(0+128)+3)
 14641     0500                     l4549:
 14642     0500  01C1               	clrf	___fladd@grs^(0+128)
 14643     0501  083F               	movf	___fladd@aexp^(0+128),w
 14644     0502  00B6               	movwf	??___fladd^(0+128)
 14645     0503  01B7               	clrf	(??___fladd^(0+128)+1)
 14646     0504  0837               	movf	(??___fladd+1)^(0+128),w
 14647     0505  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 14648     0506  0840               	movf	___fladd@bexp^(0+128),w
 14649     0507  0236               	subwf	??___fladd^(0+128),w
 14650     0508  00B8               	movwf	(??___fladd+2)^(0+128)
 14651     0509  1C03               	skipc
 14652     050A  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 14653     050B  0839               	movf	(??___fladd+3)^(0+128),w
 14654     050C  3A80               	xorlw	128
 14655     050D  00BA               	movwf	(??___fladd+4)^(0+128)
 14656     050E  3080               	movlw	128
 14657     050F  023A               	subwf	(??___fladd+4)^(0+128),w
 14658     0510  1D03               	skipz
 14659     0511  2D14               	goto	u4825
 14660     0512  301A               	movlw	26
 14661     0513  0238               	subwf	(??___fladd+2)^(0+128),w
 14662     0514                     u4825:
 14663     0514  1C03               	skipc
 14664     0515  2D46               	goto	l4567
 14665     0516  0021               	movlb	1	; select bank1
 14666     0517  0831               	movf	(___fladd@b+3)^(0+128),w
 14667     0518  0430               	iorwf	(___fladd@b+2)^(0+128),w
 14668     0519  042F               	iorwf	(___fladd@b+1)^(0+128),w
 14669     051A  042E               	iorwf	___fladd@b^(0+128),w
 14670     051B  1903               	btfsc	3,2
 14671     051C  2D1F               	goto	u4830
 14672     051D  3001               	movlw	1
 14673     051E  2D20               	goto	u4840
 14674     051F                     u4830:
 14675     051F  3000               	movlw	0
 14676     0520                     u4840:
 14677     0520  00C1               	movwf	___fladd@grs^(0+128)
 14678     0521  3000               	movlw	0
 14679     0522  00B1               	movwf	(___fladd@b+3)^(0+128)
 14680     0523  3000               	movlw	0
 14681     0524  00B0               	movwf	(___fladd@b+2)^(0+128)
 14682     0525  3000               	movlw	0
 14683     0526  00AF               	movwf	(___fladd@b+1)^(0+128)
 14684     0527  3000               	movlw	0
 14685     0528  00AE               	movwf	___fladd@b^(0+128)
 14686     0529  083F               	movf	___fladd@aexp^(0+128),w
 14687     052A  00C0               	movwf	___fladd@bexp^(0+128)
 14688     052B  2D4B               	goto	l1486
 14689     052C                     l1488:
 14690     052C  1C41               	btfss	___fladd@grs^(0+128),0
 14691     052D  2D38               	goto	l4557
 14692     052E  0841               	movf	___fladd@grs^(0+128),w
 14693     052F  00B6               	movwf	??___fladd^(0+128)
 14694     0530  3001               	movlw	1
 14695     0531                     u4865:
 14696     0531  36B6               	lsrf	??___fladd^(0+128),f
 14697     0532  0B89               	decfsz	9,f
 14698     0533  2D31               	goto	u4865
 14699     0534  0836               	movf	??___fladd^(0+128),w
 14700     0535  3801               	iorlw	1
 14701     0536  00C1               	movwf	___fladd@grs^(0+128)
 14702     0537  2D3A               	goto	l4559
 14703     0538                     l4557:
 14704     0538  1003               	clrc
 14705     0539  0CC1               	rrf	___fladd@grs^(0+128),f
 14706     053A                     l4559:
 14707     053A  182E               	btfsc	___fladd@b^(0+128),0
 14708     053B  17C1               	bsf	___fladd@grs^(0+128),7
 14709     053C  3001               	movlw	1
 14710     053D  00B6               	movwf	??___fladd^(0+128)
 14711     053E                     u4885:
 14712     053E  37B1               	asrf	(___fladd@b+3)^(0+128),f
 14713     053F  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 14714     0540  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 14715     0541  0CAE               	rrf	___fladd@b^(0+128),f
 14716     0542  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 14717     0543  2D3E               	goto	u4885
 14718     0544  3001               	movlw	1
 14719     0545  07C0               	addwf	___fladd@bexp^(0+128),f
 14720     0546                     l4567:
 14721     0546  0021               	movlb	1	; select bank1
 14722     0547  083F               	movf	___fladd@aexp^(0+128),w
 14723     0548  0240               	subwf	___fladd@bexp^(0+128),w
 14724     0549  1C03               	skipc
 14725     054A  2D2C               	goto	l1488
 14726     054B                     l1486:
 14727     054B  1B3E               	btfsc	___fladd@signs^(0+128),6
 14728     054C  2D7E               	goto	l4593
 14729     054D  0840               	movf	___fladd@bexp^(0+128),w
 14730     054E  1D03               	btfss	3,2
 14731     054F  2D59               	goto	l4575
 14732     0550  3000               	movlw	0
 14733     0551  00B1               	movwf	(?___fladd+3)^(0+128)
 14734     0552  3000               	movlw	0
 14735     0553  00B0               	movwf	(?___fladd+2)^(0+128)
 14736     0554  3000               	movlw	0
 14737     0555  00AF               	movwf	(?___fladd+1)^(0+128)
 14738     0556  3000               	movlw	0
 14739     0557  00AE               	movwf	?___fladd^(0+128)
 14740     0558  0008               	return
 14741     0559                     l4575:
 14742     0559  0832               	movf	___fladd@a^(0+128),w
 14743     055A  07AE               	addwf	___fladd@b^(0+128),f
 14744     055B  0833               	movf	(___fladd@a+1)^(0+128),w
 14745     055C  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 14746     055D  0834               	movf	(___fladd@a+2)^(0+128),w
 14747     055E  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 14748     055F  0835               	movf	(___fladd@a+3)^(0+128),w
 14749     0560  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 14750     0561  1C31               	btfss	(___fladd@b+3)^(0+128),0
 14751     0562  2DF7               	goto	l4629
 14752     0563  1C41               	btfss	___fladd@grs^(0+128),0
 14753     0564  2D6F               	goto	l4583
 14754     0565  0841               	movf	___fladd@grs^(0+128),w
 14755     0566  00B6               	movwf	??___fladd^(0+128)
 14756     0567  3001               	movlw	1
 14757     0568                     u4945:
 14758     0568  36B6               	lsrf	??___fladd^(0+128),f
 14759     0569  0B89               	decfsz	9,f
 14760     056A  2D68               	goto	u4945
 14761     056B  0836               	movf	??___fladd^(0+128),w
 14762     056C  3801               	iorlw	1
 14763     056D  00C1               	movwf	___fladd@grs^(0+128)
 14764     056E  2D71               	goto	l4585
 14765     056F                     l4583:
 14766     056F  1003               	clrc
 14767     0570  0CC1               	rrf	___fladd@grs^(0+128),f
 14768     0571                     l4585:
 14769     0571  182E               	btfsc	___fladd@b^(0+128),0
 14770     0572  17C1               	bsf	___fladd@grs^(0+128),7
 14771     0573  3001               	movlw	1
 14772     0574  00B6               	movwf	??___fladd^(0+128)
 14773     0575                     u4965:
 14774     0575  37B1               	asrf	(___fladd@b+3)^(0+128),f
 14775     0576  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 14776     0577  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 14777     0578  0CAE               	rrf	___fladd@b^(0+128),f
 14778     0579  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 14779     057A  2D75               	goto	u4965
 14780     057B  3001               	movlw	1
 14781     057C  07C0               	addwf	___fladd@bexp^(0+128),f
 14782     057D  2DF7               	goto	l4629
 14783     057E                     l4593:
 14784     057E  0831               	movf	(___fladd@b+3)^(0+128),w
 14785     057F  3A80               	xorlw	128
 14786     0580  00B6               	movwf	??___fladd^(0+128)
 14787     0581  0835               	movf	(___fladd@a+3)^(0+128),w
 14788     0582  3A80               	xorlw	128
 14789     0583  0236               	subwf	??___fladd^(0+128),w
 14790     0584  1D03               	skipz
 14791     0585  2D90               	goto	u4973
 14792     0586  0834               	movf	(___fladd@a+2)^(0+128),w
 14793     0587  0230               	subwf	(___fladd@b+2)^(0+128),w
 14794     0588  1D03               	skipz
 14795     0589  2D90               	goto	u4973
 14796     058A  0833               	movf	(___fladd@a+1)^(0+128),w
 14797     058B  022F               	subwf	(___fladd@b+1)^(0+128),w
 14798     058C  1D03               	skipz
 14799     058D  2D90               	goto	u4973
 14800     058E  0832               	movf	___fladd@a^(0+128),w
 14801     058F  022E               	subwf	___fladd@b^(0+128),w
 14802     0590                     u4973:
 14803     0590  1803               	skipnc
 14804     0591  2DC5               	goto	l4605
 14805     0592  30FF               	movlw	255
 14806     0593  00B6               	movwf	??___fladd^(0+128)
 14807     0594  30FF               	movlw	255
 14808     0595  00B7               	movwf	(??___fladd^(0+128)+1)
 14809     0596  30FF               	movlw	255
 14810     0597  00B8               	movwf	(??___fladd^(0+128)+2)
 14811     0598  30FF               	movlw	255
 14812     0599  00B9               	movwf	(??___fladd^(0+128)+3)
 14813     059A  082E               	movf	___fladd@b^(0+128),w
 14814     059B  0232               	subwf	___fladd@a^(0+128),w
 14815     059C  00BA               	movwf	(??___fladd+4)^(0+128)
 14816     059D  082F               	movf	(___fladd@b+1)^(0+128),w
 14817     059E  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 14818     059F  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 14819     05A0  0830               	movf	(___fladd@b+2)^(0+128),w
 14820     05A1  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 14821     05A2  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 14822     05A3  0831               	movf	(___fladd@b+3)^(0+128),w
 14823     05A4  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 14824     05A5  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 14825     05A6  083A               	movf	(??___fladd+4)^(0+128),w
 14826     05A7  07B6               	addwf	??___fladd^(0+128),f
 14827     05A8  083B               	movf	(??___fladd+5)^(0+128),w
 14828     05A9  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 14829     05AA  083C               	movf	(??___fladd+6)^(0+128),w
 14830     05AB  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 14831     05AC  083D               	movf	(??___fladd+7)^(0+128),w
 14832     05AD  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 14833     05AE  0839               	movf	(??___fladd+3)^(0+128),w
 14834     05AF  00B1               	movwf	(___fladd@b+3)^(0+128)
 14835     05B0  0838               	movf	(??___fladd+2)^(0+128),w
 14836     05B1  00B0               	movwf	(___fladd@b+2)^(0+128)
 14837     05B2  0837               	movf	(??___fladd+1)^(0+128),w
 14838     05B3  00AF               	movwf	(___fladd@b+1)^(0+128)
 14839     05B4  0836               	movf	??___fladd^(0+128),w
 14840     05B5  00AE               	movwf	___fladd@b^(0+128)
 14841     05B6  3080               	movlw	128
 14842     05B7  06BE               	xorwf	___fladd@signs^(0+128),f
 14843     05B8  0341               	decf	___fladd@grs^(0+128),w
 14844     05B9  3AFF               	xorlw	255
 14845     05BA  00C1               	movwf	___fladd@grs^(0+128)
 14846     05BB  0841               	movf	___fladd@grs^(0+128),w
 14847     05BC  1D03               	btfss	3,2
 14848     05BD  2DCD               	goto	l1503
 14849     05BE  3001               	movlw	1
 14850     05BF  07AE               	addwf	___fladd@b^(0+128),f
 14851     05C0  3000               	movlw	0
 14852     05C1  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 14853     05C2  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 14854     05C3  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 14855     05C4  2DCD               	goto	l1503
 14856     05C5                     l4605:
 14857     05C5  0832               	movf	___fladd@a^(0+128),w
 14858     05C6  02AE               	subwf	___fladd@b^(0+128),f
 14859     05C7  0833               	movf	(___fladd@a+1)^(0+128),w
 14860     05C8  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 14861     05C9  0834               	movf	(___fladd@a+2)^(0+128),w
 14862     05CA  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 14863     05CB  0835               	movf	(___fladd@a+3)^(0+128),w
 14864     05CC  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 14865     05CD                     l1503:
 14866     05CD  0831               	movf	(___fladd@b+3)^(0+128),w
 14867     05CE  0430               	iorwf	(___fladd@b+2)^(0+128),w
 14868     05CF  042F               	iorwf	(___fladd@b+1)^(0+128),w
 14869     05D0  042E               	iorwf	___fladd@b^(0+128),w
 14870     05D1  1D03               	skipz
 14871     05D2  2DF5               	goto	l4627
 14872     05D3  0841               	movf	___fladd@grs^(0+128),w
 14873     05D4  1D03               	btfss	3,2
 14874     05D5  2DF5               	goto	l4627
 14875     05D6  3000               	movlw	0
 14876     05D7  00B1               	movwf	(?___fladd+3)^(0+128)
 14877     05D8  3000               	movlw	0
 14878     05D9  00B0               	movwf	(?___fladd+2)^(0+128)
 14879     05DA  3000               	movlw	0
 14880     05DB  00AF               	movwf	(?___fladd+1)^(0+128)
 14881     05DC  3000               	movlw	0
 14882     05DD  00AE               	movwf	?___fladd^(0+128)
 14883     05DE  0008               	return
 14884     05DF                     l4613:
 14885     05DF  3001               	movlw	1
 14886     05E0                     u5015:
 14887     05E0  35AE               	lslf	___fladd@b^(0+128),f
 14888     05E1  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 14889     05E2  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 14890     05E3  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 14891     05E4  0B89               	decfsz	9,f
 14892     05E5  2DE0               	goto	u5015
 14893     05E6  1BC1               	btfsc	___fladd@grs^(0+128),7
 14894     05E7  142E               	bsf	___fladd@b^(0+128),0
 14895     05E8  1C41               	btfss	___fladd@grs^(0+128),0
 14896     05E9  2DEE               	goto	l4621
 14897     05EA  1403               	setc
 14898     05EB  0D41               	rlf	___fladd@grs^(0+128),w
 14899     05EC  00C1               	movwf	___fladd@grs^(0+128)
 14900     05ED  2DF0               	goto	l4623
 14901     05EE                     l4621:
 14902     05EE  1003               	clrc
 14903     05EF  0DC1               	rlf	___fladd@grs^(0+128),f
 14904     05F0                     l4623:
 14905     05F0  0840               	movf	___fladd@bexp^(0+128),w
 14906     05F1  1903               	btfsc	3,2
 14907     05F2  2DF5               	goto	l4627
 14908     05F3  3001               	movlw	1
 14909     05F4  02C0               	subwf	___fladd@bexp^(0+128),f
 14910     05F5                     l4627:
 14911     05F5  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 14912     05F6  2DDF               	goto	l4613
 14913     05F7                     l4629:
 14914     05F7  01BF               	clrf	___fladd@aexp^(0+128)
 14915     05F8  1FC1               	btfss	___fladd@grs^(0+128),7
 14916     05F9  2E02               	goto	l4639
 14917     05FA  0841               	movf	___fladd@grs^(0+128),w
 14918     05FB  397F               	andlw	127
 14919     05FC  1903               	btfsc	3,2
 14920     05FD  182E               	btfsc	___fladd@b^(0+128),0
 14921     05FE  2E00               	goto	l4635
 14922     05FF  2E02               	goto	l4639
 14923     0600                     l4635:
 14924     0600  3001               	movlw	1
 14925     0601  00BF               	movwf	___fladd@aexp^(0+128)
 14926     0602                     l4639:
 14927     0602  083F               	movf	___fladd@aexp^(0+128),w
 14928     0603  1903               	btfsc	3,2
 14929     0604  2E2A               	goto	l1516
 14930     0605  3001               	movlw	1
 14931     0606  07AE               	addwf	___fladd@b^(0+128),f
 14932     0607  3000               	movlw	0
 14933     0608  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 14934     0609  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 14935     060A  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 14936     060B  1C31               	btfss	(___fladd@b+3)^(0+128),0
 14937     060C  2E2A               	goto	l1516
 14938     060D  082E               	movf	___fladd@b^(0+128),w
 14939     060E  00B6               	movwf	??___fladd^(0+128)
 14940     060F  082F               	movf	(___fladd@b+1)^(0+128),w
 14941     0610  00B7               	movwf	(??___fladd^(0+128)+1)
 14942     0611  0830               	movf	(___fladd@b+2)^(0+128),w
 14943     0612  00B8               	movwf	(??___fladd^(0+128)+2)
 14944     0613  0831               	movf	(___fladd@b+3)^(0+128),w
 14945     0614  00B9               	movwf	(??___fladd^(0+128)+3)
 14946     0615  3001               	movlw	1
 14947     0616  00BA               	movwf	(??___fladd+4)^(0+128)
 14948     0617                     u5115:
 14949     0617  37B9               	asrf	(??___fladd^(0+128)+3),f
 14950     0618  0CB8               	rrf	(??___fladd^(0+128)+2),f
 14951     0619  0CB7               	rrf	(??___fladd^(0+128)+1),f
 14952     061A  0CB6               	rrf	??___fladd^(0+128),f
 14953     061B  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 14954     061C  2E17               	goto	u5115
 14955     061D  0839               	movf	(??___fladd+3)^(0+128),w
 14956     061E  00B1               	movwf	(___fladd@b+3)^(0+128)
 14957     061F  0838               	movf	(??___fladd+2)^(0+128),w
 14958     0620  00B0               	movwf	(___fladd@b+2)^(0+128)
 14959     0621  0837               	movf	(??___fladd+1)^(0+128),w
 14960     0622  00AF               	movwf	(___fladd@b+1)^(0+128)
 14961     0623  0836               	movf	??___fladd^(0+128),w
 14962     0624  00AE               	movwf	___fladd@b^(0+128)
 14963     0625  0A40               	incf	___fladd@bexp^(0+128),w
 14964     0626  1903               	btfsc	3,2
 14965     0627  2E2A               	goto	l1516
 14966     0628  3001               	movlw	1
 14967     0629  07C0               	addwf	___fladd@bexp^(0+128),f
 14968     062A                     l1516:
 14969     062A  0A40               	incf	___fladd@bexp^(0+128),w
 14970     062B  1D03               	btfss	3,2
 14971     062C  0840               	movf	___fladd@bexp^(0+128),w
 14972     062D  1D03               	btfss	3,2
 14973     062E  2E3A               	goto	l4657
 14974     062F  3000               	movlw	0
 14975     0630  00B1               	movwf	(___fladd@b+3)^(0+128)
 14976     0631  3000               	movlw	0
 14977     0632  00B0               	movwf	(___fladd@b+2)^(0+128)
 14978     0633  3000               	movlw	0
 14979     0634  00AF               	movwf	(___fladd@b+1)^(0+128)
 14980     0635  3000               	movlw	0
 14981     0636  00AE               	movwf	___fladd@b^(0+128)
 14982     0637  0840               	movf	___fladd@bexp^(0+128),w
 14983     0638  1903               	btfsc	3,2
 14984     0639  01BE               	clrf	___fladd@signs^(0+128)
 14985     063A                     l4657:
 14986     063A  1C40               	btfss	___fladd@bexp^(0+128),0
 14987     063B  2E3E               	goto	l4661
 14988     063C  17B0               	bsf	(___fladd@b^(0+128)+2),7
 14989     063D  2E40               	goto	l1524
 14990     063E                     l4661:
 14991     063E  307F               	movlw	127
 14992     063F  05B0               	andwf	(___fladd@b^(0+128)+2),f
 14993     0640                     l1524:
 14994     0640  0840               	movf	___fladd@bexp^(0+128),w
 14995     0641  00B6               	movwf	??___fladd^(0+128)
 14996     0642  3001               	movlw	1
 14997     0643                     u5175:
 14998     0643  36B6               	lsrf	??___fladd^(0+128),f
 14999     0644  0B89               	decfsz	9,f
 15000     0645  2E43               	goto	u5175
 15001     0646  0836               	movf	??___fladd^(0+128),w
 15002     0647  00B1               	movwf	(___fladd@b^(0+128)+3)
 15003     0648  1FBE               	btfss	___fladd@signs^(0+128),7
 15004     0649  0008               	return
 15005     064A  17B1               	bsf	(___fladd@b^(0+128)+3),7
 15006     064B  0008               	return
 15007     064C                     __end_of___fladd:
 15008                           
 15009                           	psect	text56
 15010     1F08                     __ptext56:	
 15011 ;; *************** function _getHoogtesensor *****************
 15012 ;; Defined at:
 15013 ;;		line 33 in file "adcMeasurements.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;		None
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  2    0[BANK1 ] unsigned short 
 15020 ;; Registers used:
 15021 ;;		wreg
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15030 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15031 ;;Total ram usage:        2 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; Hardware stack levels required when called: 5
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		_printLogs
 15038 ;;		_position_led_strip
 15039 ;; This function uses a non-reentrant model
 15040 ;;
 15041                           
 15042     1F08                     _getHoogtesensor:	
 15043                           ;psect for function _getHoogtesensor
 15044                           
 15045                           
 15046                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 15047                           
 15048                           ;incstack = 0
 15049                           ; Regs used in _getHoogtesensor: [wreg]
 15050     1F08  0020               	movlb	0	; select bank0
 15051     1F09  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 15052     1F0A  0021               	movlb	1	; select bank1
 15053     1F0B  00A1               	movwf	(?_getHoogtesensor+1)^(0+128)
 15054     1F0C  0020               	movlb	0	; select bank0
 15055     1F0D  0859               	movf	_ADC_hoogtesensor,w	;volatile
 15056     1F0E  0021               	movlb	1	; select bank1
 15057     1F0F  00A0               	movwf	?_getHoogtesensor^(0+128)
 15058     1F10  0008               	return
 15059     1F11                     __end_of_getHoogtesensor:
 15060                           
 15061                           	psect	text57
 15062     1EFF                     __ptext57:	
 15063 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 15064 ;; Defined at:
 15065 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 15066 ;; Parameters:    Size  Location     Type
 15067 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 15068 ;;		 -> controller(1), 
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;		None
 15071 ;; Return value:  Size  Location     Type
 15072 ;;                  1    wreg      void 
 15073 ;; Registers used:
 15074 ;;		wreg
 15075 ;; Tracked objects:
 15076 ;;		On entry : 0/0
 15077 ;;		On exit  : 0/0
 15078 ;;		Unchanged: 0/0
 15079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15080 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;Total ram usage:        2 bytes
 15085 ;; Hardware stack levels used: 1
 15086 ;; Hardware stack levels required when called: 5
 15087 ;; This function calls:
 15088 ;;		Nothing
 15089 ;; This function is called by:
 15090 ;;		_main
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094     1EFF                     _TMR4_PeriodMatchCallbackRegister:	
 15095                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 15096                           
 15097                           
 15098                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 15099                           
 15100                           ;incstack = 0
 15101                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 15102     1EFF  0021               	movlb	1	; select bank1
 15103     1F00  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 15104     1F01  0022               	movlb	2	; select bank2
 15105     1F02  00E1               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 15106     1F03  0021               	movlb	1	; select bank1
 15107     1F04  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 15108     1F05  0022               	movlb	2	; select bank2
 15109     1F06  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 15110     1F07  0008               	return
 15111     1F08                     __end_of_TMR4_PeriodMatchCallbackRegister:
 15112                           
 15113                           	psect	text58
 15114     1130                     __ptext58:	
 15115 ;; *************** function _SYSTEM_Initialize *****************
 15116 ;; Defined at:
 15117 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;		None
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  1    wreg      void 
 15124 ;; Registers used:
 15125 ;;		wreg, status,2, status,0, pclath, cstack
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;Total ram usage:        0 bytes
 15136 ;; Hardware stack levels used: 1
 15137 ;; Hardware stack levels required when called: 7
 15138 ;; This function calls:
 15139 ;;		_ADC_Initialize
 15140 ;;		_CLOCK_Initialize
 15141 ;;		_EUSART_Initialize
 15142 ;;		_INTERRUPT_Initialize
 15143 ;;		_PIN_MANAGER_Initialize
 15144 ;;		_SPI1_Initialize
 15145 ;;		_TMR2_Initialize
 15146 ;;		_TMR4_Initialize
 15147 ;;		_TMR6_Initialize
 15148 ;;		_pwm_fan_Initialize
 15149 ;; This function is called by:
 15150 ;;		_main
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154     1130                     _SYSTEM_Initialize:	
 15155                           ;psect for function _SYSTEM_Initialize
 15156                           
 15157                           
 15158                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 15159                           
 15160                           ;incstack = 0
 15161                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15162     1130  319E  26ED  3191   	fcall	_CLOCK_Initialize
 15163                           
 15164                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 15165     1133  3193  230D  3191   	fcall	_PIN_MANAGER_Initialize
 15166                           
 15167                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 15168     1136  3190  203B  3191   	fcall	_TMR2_Initialize
 15169                           
 15170                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 15171     1139  3190  204C  3191   	fcall	_TMR4_Initialize
 15172                           
 15173                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 15174     113C  319F  27F1  3191   	fcall	_TMR6_Initialize
 15175                           
 15176                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 15177     113F  3190  2097  3191   	fcall	_ADC_Initialize
 15178                           
 15179                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 15180     1142  3192  2298  3191   	fcall	_EUSART_Initialize
 15181                           
 15182                           ;mcc_generated_files/system/src/system.c: 48:     pwm_fan_Initialize();
 15183     1145  319F  277E  3191   	fcall	_pwm_fan_Initialize
 15184                           
 15185                           ;mcc_generated_files/system/src/system.c: 49:     SPI1_Initialize();
 15186     1148  319F  273E  3191   	fcall	_SPI1_Initialize
 15187                           
 15188                           ;mcc_generated_files/system/src/system.c: 50:     INTERRUPT_Initialize();
 15189     114B  319F  275C         	fcall	_INTERRUPT_Initialize
 15190     114D  0008               	return
 15191     114E                     __end_of_SYSTEM_Initialize:
 15192                           
 15193                           	psect	text59
 15194     1F7E                     __ptext59:	
 15195 ;; *************** function _pwm_fan_Initialize *****************
 15196 ;; Defined at:
 15197 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 15198 ;; Parameters:    Size  Location     Type
 15199 ;;		None
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;		None
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  1    wreg      void 
 15204 ;; Registers used:
 15205 ;;		wreg, status,2, status,0
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;Total ram usage:        0 bytes
 15216 ;; Hardware stack levels used: 1
 15217 ;; Hardware stack levels required when called: 5
 15218 ;; This function calls:
 15219 ;;		Nothing
 15220 ;; This function is called by:
 15221 ;;		_SYSTEM_Initialize
 15222 ;; This function uses a non-reentrant model
 15223 ;;
 15224                           
 15225     1F7E                     _pwm_fan_Initialize:	
 15226                           ;psect for function _pwm_fan_Initialize
 15227                           
 15228                           
 15229                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 15230                           
 15231                           ;incstack = 0
 15232                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 15233     1F7E  3080               	movlw	128
 15234     1F7F  002C               	movlb	12	; select bank12
 15235     1F80  0099               	movwf	25	;volatile
 15236                           
 15237                           ;mcc_generated_files/pwm/src/pwm5.c: 53:     PWM5DCH = 0x7F;
 15238     1F81  307F               	movlw	127
 15239     1F82  0098               	movwf	24	;volatile
 15240                           
 15241                           ;mcc_generated_files/pwm/src/pwm5.c: 56:     PWM5DCL = 0xC0;
 15242     1F83  30C0               	movlw	192
 15243     1F84  0097               	movwf	23	;volatile
 15244                           
 15245                           ;mcc_generated_files/pwm/src/pwm5.c: 60:     PWMTMRSbits.P5TSEL = 0x1;
 15246     1F85  081F               	movf	31,w	;volatile
 15247     1F86  39FC               	andlw	-4
 15248     1F87  3801               	iorlw	1
 15249     1F88  009F               	movwf	31	;volatile
 15250     1F89  0008               	return
 15251     1F8A                     __end_of_pwm_fan_Initialize:
 15252                           
 15253                           	psect	text60
 15254     1FF1                     __ptext60:	
 15255 ;; *************** function _TMR6_Initialize *****************
 15256 ;; Defined at:
 15257 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;		None
 15260 ;; Auto vars:     Size  Location     Type
 15261 ;;		None
 15262 ;; Return value:  Size  Location     Type
 15263 ;;                  1    wreg      void 
 15264 ;; Registers used:
 15265 ;;		wreg, status,2
 15266 ;; Tracked objects:
 15267 ;;		On entry : 0/0
 15268 ;;		On exit  : 0/0
 15269 ;;		Unchanged: 0/0
 15270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15275 ;;Total ram usage:        0 bytes
 15276 ;; Hardware stack levels used: 1
 15277 ;; Hardware stack levels required when called: 5
 15278 ;; This function calls:
 15279 ;;		Nothing
 15280 ;; This function is called by:
 15281 ;;		_SYSTEM_Initialize
 15282 ;; This function uses a non-reentrant model
 15283 ;;
 15284                           
 15285     1FF1                     _TMR6_Initialize:	
 15286                           ;psect for function _TMR6_Initialize
 15287                           
 15288                           
 15289                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 15290                           
 15291                           ;incstack = 0
 15292                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 15293     1FF1  300E               	movlw	14
 15294     1FF2  0028               	movlb	8	; select bank8
 15295     1FF3  009D               	movwf	29	;volatile
 15296                           
 15297                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 15298     1FF4  019C               	clrf	28	;volatile
 15299                           
 15300                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 15301     1FF5  30FF               	movlw	low _TMR6_DefaultPeriodMatchCallback
 15302     1FF6  0022               	movlb	2	; select bank2
 15303     1FF7  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 15304     1FF8  3007               	movlw	high _TMR6_DefaultPeriodMatchCallback
 15305     1FF9  00DF               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 15306                           
 15307                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 15308     1FFA  0020               	movlb	0	; select bank0
 15309     1FFB  1392               	bcf	18,7	;volatile
 15310                           
 15311                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 15312     1FFC  301D               	movlw	29
 15313     1FFD  0028               	movlb	8	; select bank8
 15314     1FFE  009E               	movwf	30	;volatile
 15315     1FFF  0008               	return
 15316     2000                     __end_of_TMR6_Initialize:
 15317                           
 15318                           	psect	text61
 15319     104C                     __ptext61:	
 15320 ;; *************** function _TMR4_Initialize *****************
 15321 ;; Defined at:
 15322 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;		None
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;		None
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      void 
 15329 ;; Registers used:
 15330 ;;		wreg, status,2
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;Total ram usage:        0 bytes
 15341 ;; Hardware stack levels used: 1
 15342 ;; Hardware stack levels required when called: 5
 15343 ;; This function calls:
 15344 ;;		Nothing
 15345 ;; This function is called by:
 15346 ;;		_SYSTEM_Initialize
 15347 ;; This function uses a non-reentrant model
 15348 ;;
 15349                           
 15350     104C                     _TMR4_Initialize:	
 15351                           ;psect for function _TMR4_Initialize
 15352                           
 15353                           
 15354                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xFF;
 15355                           
 15356                           ;incstack = 0
 15357                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 15358     104C  30FF               	movlw	255
 15359     104D  0028               	movlb	8	; select bank8
 15360     104E  0096               	movwf	22	;volatile
 15361                           
 15362                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 15363     104F  0195               	clrf	21	;volatile
 15364                           
 15365                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 15366     1050  3003               	movlw	low _TMR4_DefaultPeriodMatchCallback
 15367     1051  0022               	movlb	2	; select bank2
 15368     1052  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 15369     1053  3000               	movlw	high _TMR4_DefaultPeriodMatchCallback
 15370     1054  00E1               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 15371                           
 15372                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 15373     1055  0020               	movlb	0	; select bank0
 15374     1056  1092               	bcf	18,1	;volatile
 15375                           
 15376                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 15377     1057  0021               	movlb	1	; select bank1
 15378     1058  1492               	bsf	18,1	;volatile
 15379                           
 15380                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (2 << 0x0)
 15381     1059  3076               	movlw	118
 15382     105A  0028               	movlb	8	; select bank8
 15383     105B  0097               	movwf	23	;volatile
 15384     105C  0008               	return
 15385     105D                     __end_of_TMR4_Initialize:
 15386                           
 15387                           	psect	text62
 15388     103B                     __ptext62:	
 15389 ;; *************** function _TMR2_Initialize *****************
 15390 ;; Defined at:
 15391 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 15392 ;; Parameters:    Size  Location     Type
 15393 ;;		None
 15394 ;; Auto vars:     Size  Location     Type
 15395 ;;		None
 15396 ;; Return value:  Size  Location     Type
 15397 ;;                  1    wreg      void 
 15398 ;; Registers used:
 15399 ;;		wreg, status,2
 15400 ;; Tracked objects:
 15401 ;;		On entry : 0/0
 15402 ;;		On exit  : 0/0
 15403 ;;		Unchanged: 0/0
 15404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;Total ram usage:        0 bytes
 15410 ;; Hardware stack levels used: 1
 15411 ;; Hardware stack levels required when called: 5
 15412 ;; This function calls:
 15413 ;;		Nothing
 15414 ;; This function is called by:
 15415 ;;		_SYSTEM_Initialize
 15416 ;; This function uses a non-reentrant model
 15417 ;;
 15418                           
 15419     103B                     _TMR2_Initialize:	
 15420                           ;psect for function _TMR2_Initialize
 15421                           
 15422                           
 15423                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xFF;
 15424                           
 15425                           ;incstack = 0
 15426                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 15427     103B  30FF               	movlw	255
 15428     103C  0020               	movlb	0	; select bank0
 15429     103D  009E               	movwf	30	;volatile
 15430                           
 15431                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 15432     103E  019D               	clrf	29	;volatile
 15433                           
 15434                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 15435     103F  3002               	movlw	low _TMR2_DefaultPeriodMatchCallback
 15436     1040  0022               	movlb	2	; select bank2
 15437     1041  00E2               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 15438     1042  3000               	movlw	high _TMR2_DefaultPeriodMatchCallback
 15439     1043  00E3               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 15440                           
 15441                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 15442     1044  0020               	movlb	0	; select bank0
 15443     1045  1091               	bcf	17,1	;volatile
 15444                           
 15445                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 15446     1046  0021               	movlb	1	; select bank1
 15447     1047  1491               	bsf	17,1	;volatile
 15448                           
 15449                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (1 << 0x0)
 15450     1048  301D               	movlw	29
 15451     1049  0020               	movlb	0	; select bank0
 15452     104A  009F               	movwf	31	;volatile
 15453     104B  0008               	return
 15454     104C                     __end_of_TMR2_Initialize:
 15455                           
 15456                           	psect	text63
 15457     1F3E                     __ptext63:	
 15458 ;; *************** function _SPI1_Initialize *****************
 15459 ;; Defined at:
 15460 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 15461 ;; Parameters:    Size  Location     Type
 15462 ;;		None
 15463 ;; Auto vars:     Size  Location     Type
 15464 ;;		None
 15465 ;; Return value:  Size  Location     Type
 15466 ;;                  1    wreg      void 
 15467 ;; Registers used:
 15468 ;;		status,2
 15469 ;; Tracked objects:
 15470 ;;		On entry : 0/0
 15471 ;;		On exit  : 0/0
 15472 ;;		Unchanged: 0/0
 15473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;Total ram usage:        0 bytes
 15479 ;; Hardware stack levels used: 1
 15480 ;; Hardware stack levels required when called: 5
 15481 ;; This function calls:
 15482 ;;		Nothing
 15483 ;; This function is called by:
 15484 ;;		_SYSTEM_Initialize
 15485 ;; This function uses a non-reentrant model
 15486 ;;
 15487                           
 15488     1F3E                     _SPI1_Initialize:	
 15489                           ;psect for function _SPI1_Initialize
 15490                           
 15491                           
 15492                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 15493                           
 15494                           ;incstack = 0
 15495                           ; Regs used in _SPI1_Initialize: [status,2]
 15496     1F3E  0021               	movlb	1	; select bank1
 15497     1F3F  1191               	bcf	17,3	;volatile
 15498                           
 15499                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 15500     1F40  0020               	movlb	0	; select bank0
 15501     1F41  1191               	bcf	17,3	;volatile
 15502                           
 15503                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 15504     1F42  0024               	movlb	4	; select bank4
 15505     1F43  0194               	clrf	20	;volatile
 15506                           
 15507                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 15508     1F44  0195               	clrf	21	;volatile
 15509                           
 15510                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 15511     1F45  0197               	clrf	23	;volatile
 15512                           
 15513                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 15514     1F46  0192               	clrf	18	;volatile
 15515     1F47  0008               	return
 15516     1F48                     __end_of_SPI1_Initialize:
 15517                           
 15518                           	psect	text64
 15519     130D                     __ptext64:	
 15520 ;; *************** function _PIN_MANAGER_Initialize *****************
 15521 ;; Defined at:
 15522 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 15523 ;; Parameters:    Size  Location     Type
 15524 ;;		None
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;		None
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  1    wreg      void 
 15529 ;; Registers used:
 15530 ;;		status,2
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15540 ;;Total ram usage:        0 bytes
 15541 ;; Hardware stack levels used: 1
 15542 ;; Hardware stack levels required when called: 5
 15543 ;; This function calls:
 15544 ;;		Nothing
 15545 ;; This function is called by:
 15546 ;;		_SYSTEM_Initialize
 15547 ;; This function uses a non-reentrant model
 15548 ;;
 15549                           
 15550     130D                     _PIN_MANAGER_Initialize:	
 15551                           ;psect for function _PIN_MANAGER_Initialize
 15552                           
 15553                           
 15554                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 15555                           
 15556                           ;incstack = 0
 15557                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 15558     130D  0022               	movlb	2	; select bank2
 15559     130E  018C               	clrf	12	;volatile
 15560                           
 15561                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 15562     130F  018D               	clrf	13	;volatile
 15563                           
 15564                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 15565     1310  018E               	clrf	14	;volatile
 15566                           
 15567                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 15568     1311  3019               	movlw	25
 15569     1312  0021               	movlb	1	; select bank1
 15570     1313  008C               	movwf	12	;volatile
 15571                           
 15572                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 15573     1314  3020               	movlw	32
 15574     1315  008D               	movwf	13	;volatile
 15575                           
 15576                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xDF;
 15577     1316  30DF               	movlw	223
 15578     1317  008E               	movwf	14	;volatile
 15579                           
 15580                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 15581     1318  3010               	movlw	16
 15582     1319  0023               	movlb	3	; select bank3
 15583     131A  008C               	movwf	12	;volatile
 15584                           
 15585                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 15586     131B  3080               	movlw	128
 15587     131C  008D               	movwf	13	;volatile
 15588                           
 15589                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xFF;
 15590     131D  30FF               	movlw	255
 15591     131E  008E               	movwf	14	;volatile
 15592                           
 15593                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 15594     131F  0024               	movlb	4	; select bank4
 15595     1320  018C               	clrf	12	;volatile
 15596                           
 15597                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 15598     1321  018D               	clrf	13	;volatile
 15599                           
 15600                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 15601     1322  018E               	clrf	14	;volatile
 15602                           
 15603                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 15604     1323  0025               	movlb	5	; select bank5
 15605     1324  018C               	clrf	12	;volatile
 15606                           
 15607                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 15608     1325  018D               	clrf	13	;volatile
 15609                           
 15610                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 15611     1326  018E               	clrf	14	;volatile
 15612                           
 15613                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 15614     1327  3037               	movlw	55
 15615     1328  0026               	movlb	6	; select bank6
 15616     1329  008C               	movwf	12	;volatile
 15617                           
 15618                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 15619     132A  30F0               	movlw	240
 15620     132B  008D               	movwf	13	;volatile
 15621                           
 15622                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 15623     132C  30FF               	movlw	255
 15624     132D  008E               	movwf	14	;volatile
 15625                           
 15626                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 15627     132E  303F               	movlw	63
 15628     132F  0027               	movlb	7	; select bank7
 15629     1330  008C               	movwf	12	;volatile
 15630                           
 15631                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 15632     1331  30F0               	movlw	240
 15633     1332  008D               	movwf	13	;volatile
 15634                           
 15635                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 15636     1333  30FF               	movlw	255
 15637     1334  008E               	movwf	14	;volatile
 15638                           
 15639                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 15640     1335  003C               	movlb	28	; select bank28
 15641     1336  01A1               	clrf	33	;volatile
 15642                           
 15643                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 15644     1337  300D               	movlw	13
 15645     1338  00A4               	movwf	36	;volatile
 15646                           
 15647                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 15648     1339  3019               	movlw	25
 15649     133A  003D               	movlb	29	; select bank29
 15650     133B  009C               	movwf	28	;volatile
 15651                           
 15652                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 15653     133C  3002               	movlw	2
 15654     133D  00A5               	movwf	37	;volatile
 15655                           
 15656                           ;mcc_generated_files/system/src/pins.c: 95:     RB7PPS = 20;
 15657     133E  3014               	movlw	20
 15658     133F  009F               	movwf	31	;volatile
 15659                           
 15660                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xE;
 15661     1340  300E               	movlw	14
 15662     1341  003C               	movlb	28	; select bank28
 15663     1342  00A0               	movwf	32	;volatile
 15664                           
 15665                           ;mcc_generated_files/system/src/pins.c: 97:     RB6PPS = 24;
 15666     1343  3018               	movlw	24
 15667     1344  003D               	movlb	29	; select bank29
 15668     1345  009E               	movwf	30	;volatile
 15669                           
 15670                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
 15671     1346  0027               	movlb	7	; select bank7
 15672     1347  0191               	clrf	17	;volatile
 15673                           
 15674                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
 15675     1348  0192               	clrf	18	;volatile
 15676                           
 15677                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
 15678     1349  0193               	clrf	19	;volatile
 15679                           
 15680                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
 15681     134A  0194               	clrf	20	;volatile
 15682                           
 15683                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
 15684     134B  0195               	clrf	21	;volatile
 15685                           
 15686                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
 15687     134C  0196               	clrf	22	;volatile
 15688                           
 15689                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
 15690     134D  0197               	clrf	23	;volatile
 15691                           
 15692                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
 15693     134E  0198               	clrf	24	;volatile
 15694                           
 15695                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
 15696     134F  0199               	clrf	25	;volatile
 15697     1350  0008               	return
 15698     1351                     __end_of_PIN_MANAGER_Initialize:
 15699                           
 15700                           	psect	text65
 15701     1F5C                     __ptext65:	
 15702 ;; *************** function _INTERRUPT_Initialize *****************
 15703 ;; Defined at:
 15704 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;		None
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;		None
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  1    wreg      void 
 15711 ;; Registers used:
 15712 ;;		wreg, status,2, status,0, pclath, cstack
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;Total ram usage:        0 bytes
 15723 ;; Hardware stack levels used: 1
 15724 ;; Hardware stack levels required when called: 6
 15725 ;; This function calls:
 15726 ;;		_INT_SetInterruptHandler
 15727 ;; This function is called by:
 15728 ;;		_SYSTEM_Initialize
 15729 ;; This function uses a non-reentrant model
 15730 ;;
 15731                           
 15732     1F5C                     _INTERRUPT_Initialize:	
 15733                           ;psect for function _INTERRUPT_Initialize
 15734                           
 15735                           
 15736                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 15737                           
 15738                           ;incstack = 0
 15739                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15740     1F5C  0020               	movlb	0	; select bank0
 15741     1F5D  1010               	bcf	16,0	;volatile
 15742                           
 15743                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 15744     1F5E  140B               	bsf	11,0	;volatile
 15745                           
 15746                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 15747     1F5F  3000               	movlw	0
 15748     1F60  0021               	movlb	1	; select bank1
 15749     1F61  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 15750     1F62  3000               	movlw	0
 15751     1F63  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15752     1F64  319E  26F6         	fcall	_INT_SetInterruptHandler
 15753     1F66  0008               	return
 15754     1F67                     __end_of_INTERRUPT_Initialize:
 15755                           
 15756                           	psect	text66
 15757     1EF6                     __ptext66:	
 15758 ;; *************** function _INT_SetInterruptHandler *****************
 15759 ;; Defined at:
 15760 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 15761 ;; Parameters:    Size  Location     Type
 15762 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 15763 ;;		 -> INT_DefaultInterruptHandler(1), 
 15764 ;; Auto vars:     Size  Location     Type
 15765 ;;		None
 15766 ;; Return value:  Size  Location     Type
 15767 ;;                  1    wreg      void 
 15768 ;; Registers used:
 15769 ;;		wreg
 15770 ;; Tracked objects:
 15771 ;;		On entry : 0/0
 15772 ;;		On exit  : 0/0
 15773 ;;		Unchanged: 0/0
 15774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15775 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15778 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15779 ;;Total ram usage:        2 bytes
 15780 ;; Hardware stack levels used: 1
 15781 ;; Hardware stack levels required when called: 5
 15782 ;; This function calls:
 15783 ;;		Nothing
 15784 ;; This function is called by:
 15785 ;;		_INTERRUPT_Initialize
 15786 ;; This function uses a non-reentrant model
 15787 ;;
 15788                           
 15789     1EF6                     _INT_SetInterruptHandler:	
 15790                           ;psect for function _INT_SetInterruptHandler
 15791                           
 15792                           
 15793                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 15794                           
 15795                           ;incstack = 0
 15796                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 15797     1EF6  0021               	movlb	1	; select bank1
 15798     1EF7  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 15799     1EF8  0020               	movlb	0	; select bank0
 15800     1EF9  00E2               	movwf	_INT_InterruptHandler+1
 15801     1EFA  0021               	movlb	1	; select bank1
 15802     1EFB  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 15803     1EFC  0020               	movlb	0	; select bank0
 15804     1EFD  00E1               	movwf	_INT_InterruptHandler
 15805     1EFE  0008               	return
 15806     1EFF                     __end_of_INT_SetInterruptHandler:
 15807                           
 15808                           	psect	text67
 15809     1298                     __ptext67:	
 15810 ;; *************** function _EUSART_Initialize *****************
 15811 ;; Defined at:
 15812 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;		None
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  1    wreg      void 
 15819 ;; Registers used:
 15820 ;;		wreg, status,2, status,0, pclath, cstack
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15830 ;;Total ram usage:        0 bytes
 15831 ;; Hardware stack levels used: 1
 15832 ;; Hardware stack levels required when called: 6
 15833 ;; This function calls:
 15834 ;;		_EUSART_FramingErrorCallbackRegister
 15835 ;;		_EUSART_OverrunErrorCallbackRegister
 15836 ;; This function is called by:
 15837 ;;		_SYSTEM_Initialize
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841     1298                     _EUSART_Initialize:	
 15842                           ;psect for function _EUSART_Initialize
 15843                           
 15844                           
 15845                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 15846                           
 15847                           ;incstack = 0
 15848                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15849     1298  0021               	movlb	1	; select bank1
 15850     1299  1291               	bcf	17,5	;volatile
 15851                           
 15852                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 15853     129A  30B8               	movlw	low _EUSART_ReceiveISR
 15854     129B  0023               	movlb	3	; select bank3
 15855     129C  00D4               	movwf	_EUSART_RxInterruptHandler^(0+384)
 15856     129D  3007               	movlw	high _EUSART_ReceiveISR
 15857     129E  00D5               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 15858                           
 15859                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 15860     129F  0021               	movlb	1	; select bank1
 15861     12A0  1211               	bcf	17,4	;volatile
 15862                           
 15863                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 15864     12A1  30C4               	movlw	low _EUSART_TransmitISR
 15865     12A2  0022               	movlb	2	; select bank2
 15866     12A3  00E4               	movwf	_EUSART_TxInterruptHandler^(0+256)
 15867     12A4  3010               	movlw	high _EUSART_TransmitISR
 15868     12A5  00E5               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 15869                           
 15870                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 15871     12A6  3048               	movlw	72
 15872     12A7  0023               	movlb	3	; select bank3
 15873     12A8  009F               	movwf	31	;volatile
 15874                           
 15875                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 15876     12A9  3090               	movlw	144
 15877     12AA  009D               	movwf	29	;volatile
 15878                           
 15879                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 15880     12AB  3026               	movlw	38
 15881     12AC  009E               	movwf	30	;volatile
 15882                           
 15883                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 15884     12AD  3040               	movlw	64
 15885     12AE  009B               	movwf	27	;volatile
 15886                           
 15887                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 15888     12AF  3003               	movlw	3
 15889     12B0  009C               	movwf	28	;volatile
 15890                           
 15891                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 15892     12B1  3000               	movlw	low _EUSART_DefaultFramingErrorCallback
 15893     12B2  0021               	movlb	1	; select bank1
 15894     12B3  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 15895     12B4  3008               	movlw	high _EUSART_DefaultFramingErrorCallback
 15896     12B5  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 15897     12B6  319F  27C9  3192   	fcall	_EUSART_FramingErrorCallbackRegister
 15898                           
 15899                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 15900     12B9  30AC               	movlw	low _EUSART_DefaultOverrunErrorCallback
 15901     12BA  0021               	movlb	1	; select bank1
 15902     12BB  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 15903     12BC  301E               	movlw	high _EUSART_DefaultOverrunErrorCallback
 15904     12BD  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 15905     12BE  319F  27D6         	fcall	_EUSART_OverrunErrorCallbackRegister
 15906                           
 15907                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 15908     12C0  0022               	movlb	2	; select bank2
 15909     12C1  01CC               	clrf	_eusartRxLastError^(0+256)	;volatile
 15910     12C2  01CD               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 15911                           
 15912                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 15913     12C3  0020               	movlb	0	; select bank0
 15914     12C4  01EB               	clrf	_eusartTxHead	;volatile
 15915                           
 15916                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 15917     12C5  01EA               	clrf	_eusartTxTail	;volatile
 15918                           
 15919                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 15920     12C6  3008               	movlw	8
 15921     12C7  00E9               	movwf	_eusartTxBufferRemaining	;volatile
 15922                           
 15923                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 15924     12C8  01E8               	clrf	_eusartRxHead	;volatile
 15925                           
 15926                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 15927     12C9  01E7               	clrf	_eusartRxTail	;volatile
 15928                           
 15929                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 15930     12CA  01E6               	clrf	_eusartRxCount	;volatile
 15931                           
 15932                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 15933     12CB  0021               	movlb	1	; select bank1
 15934     12CC  1691               	bsf	17,5	;volatile
 15935     12CD  0008               	return
 15936     12CE                     __end_of_EUSART_Initialize:
 15937                           
 15938                           	psect	text68
 15939     1FD6                     __ptext68:	
 15940 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 15941 ;; Defined at:
 15942 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 15945 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 15946 ;; Auto vars:     Size  Location     Type
 15947 ;;		None
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      void 
 15950 ;; Registers used:
 15951 ;;		wreg, status,2, status,0
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15957 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15960 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15961 ;;Total ram usage:        2 bytes
 15962 ;; Hardware stack levels used: 1
 15963 ;; Hardware stack levels required when called: 5
 15964 ;; This function calls:
 15965 ;;		Nothing
 15966 ;; This function is called by:
 15967 ;;		_EUSART_Initialize
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           
 15971     1FD6                     _EUSART_OverrunErrorCallbackRegister:	
 15972                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 15973                           
 15974                           
 15975                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 15976                           
 15977                           ;incstack = 0
 15978                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 15979     1FD6  0021               	movlb	1	; select bank1
 15980     1FD7  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 15981     1FD8  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15982     1FD9  1903               	btfsc	3,2
 15983     1FDA  0008               	return
 15984                           
 15985                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 15986     1FDB  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 15987     1FDC  0020               	movlb	0	; select bank0
 15988     1FDD  00DE               	movwf	_EUSART_OverrunErrorHandler+1
 15989     1FDE  0021               	movlb	1	; select bank1
 15990     1FDF  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 15991     1FE0  0020               	movlb	0	; select bank0
 15992     1FE1  00DD               	movwf	_EUSART_OverrunErrorHandler
 15993     1FE2  0008               	return
 15994     1FE3                     __end_of_EUSART_OverrunErrorCallbackRegister:
 15995                           
 15996                           	psect	text69
 15997     1FC9                     __ptext69:	
 15998 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 15999 ;; Defined at:
 16000 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 16003 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 16004 ;; Auto vars:     Size  Location     Type
 16005 ;;		None
 16006 ;; Return value:  Size  Location     Type
 16007 ;;                  1    wreg      void 
 16008 ;; Registers used:
 16009 ;;		wreg, status,2, status,0
 16010 ;; Tracked objects:
 16011 ;;		On entry : 0/0
 16012 ;;		On exit  : 0/0
 16013 ;;		Unchanged: 0/0
 16014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16015 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16018 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16019 ;;Total ram usage:        2 bytes
 16020 ;; Hardware stack levels used: 1
 16021 ;; Hardware stack levels required when called: 5
 16022 ;; This function calls:
 16023 ;;		Nothing
 16024 ;; This function is called by:
 16025 ;;		_EUSART_Initialize
 16026 ;; This function uses a non-reentrant model
 16027 ;;
 16028                           
 16029     1FC9                     _EUSART_FramingErrorCallbackRegister:	
 16030                           ;psect for function _EUSART_FramingErrorCallbackRegister
 16031                           
 16032                           
 16033                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 16034                           
 16035                           ;incstack = 0
 16036                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 16037     1FC9  0021               	movlb	1	; select bank1
 16038     1FCA  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 16039     1FCB  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 16040     1FCC  1903               	btfsc	3,2
 16041     1FCD  0008               	return
 16042                           
 16043                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 16044     1FCE  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 16045     1FCF  0020               	movlb	0	; select bank0
 16046     1FD0  00E0               	movwf	_EUSART_FramingErrorHandler+1
 16047     1FD1  0021               	movlb	1	; select bank1
 16048     1FD2  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 16049     1FD3  0020               	movlb	0	; select bank0
 16050     1FD4  00DF               	movwf	_EUSART_FramingErrorHandler
 16051     1FD5  0008               	return
 16052     1FD6                     __end_of_EUSART_FramingErrorCallbackRegister:
 16053                           
 16054                           	psect	text70
 16055     1EED                     __ptext70:	
 16056 ;; *************** function _CLOCK_Initialize *****************
 16057 ;; Defined at:
 16058 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 16059 ;; Parameters:    Size  Location     Type
 16060 ;;		None
 16061 ;; Auto vars:     Size  Location     Type
 16062 ;;		None
 16063 ;; Return value:  Size  Location     Type
 16064 ;;                  1    wreg      void 
 16065 ;; Registers used:
 16066 ;;		status,2
 16067 ;; Tracked objects:
 16068 ;;		On entry : 0/0
 16069 ;;		On exit  : 0/0
 16070 ;;		Unchanged: 0/0
 16071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16076 ;;Total ram usage:        0 bytes
 16077 ;; Hardware stack levels used: 1
 16078 ;; Hardware stack levels required when called: 5
 16079 ;; This function calls:
 16080 ;;		Nothing
 16081 ;; This function is called by:
 16082 ;;		_SYSTEM_Initialize
 16083 ;; This function uses a non-reentrant model
 16084 ;;
 16085                           
 16086     1EED                     _CLOCK_Initialize:	
 16087                           ;psect for function _CLOCK_Initialize
 16088                           
 16089                           
 16090                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 16091                           
 16092                           ;incstack = 0
 16093                           ; Regs used in _CLOCK_Initialize: [status,2]
 16094     1EED  0032               	movlb	18	; select bank18
 16095     1EEE  0199               	clrf	25	;volatile
 16096                           
 16097                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 16098     1EEF  019B               	clrf	27	;volatile
 16099                           
 16100                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 16101     1EF0  019D               	clrf	29	;volatile
 16102                           
 16103                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 16104     1EF1  3006               	movlw	6
 16105     1EF2  009F               	movwf	31	;volatile
 16106                           
 16107                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 16108     1EF3  019E               	clrf	30	;volatile
 16109     1EF4  019C               	clrf	28	;volatile
 16110     1EF5  0008               	return
 16111     1EF6                     __end_of_CLOCK_Initialize:
 16112                           
 16113                           	psect	text71
 16114     1097                     __ptext71:	
 16115 ;; *************** function _ADC_Initialize *****************
 16116 ;; Defined at:
 16117 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 16118 ;; Parameters:    Size  Location     Type
 16119 ;;		None
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;		None
 16122 ;; Return value:  Size  Location     Type
 16123 ;;                  1    wreg      void 
 16124 ;; Registers used:
 16125 ;;		wreg, status,2, status,0, pclath, cstack
 16126 ;; Tracked objects:
 16127 ;;		On entry : 0/0
 16128 ;;		On exit  : 0/0
 16129 ;;		Unchanged: 0/0
 16130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16135 ;;Total ram usage:        0 bytes
 16136 ;; Hardware stack levels used: 1
 16137 ;; Hardware stack levels required when called: 6
 16138 ;; This function calls:
 16139 ;;		_ADC_SetInterruptHandler
 16140 ;; This function is called by:
 16141 ;;		_SYSTEM_Initialize
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145     1097                     _ADC_Initialize:	
 16146                           ;psect for function _ADC_Initialize
 16147                           
 16148                           
 16149                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 16150                           
 16151                           ;incstack = 0
 16152                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16153     1097  30A0               	movlw	160
 16154     1098  0021               	movlb	1	; select bank1
 16155     1099  009E               	movwf	30	;volatile
 16156                           
 16157                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 16158     109A  019B               	clrf	27	;volatile
 16159                           
 16160                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 16161     109B  019C               	clrf	28	;volatile
 16162                           
 16163                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 16164     109C  3005               	movlw	5
 16165     109D  009F               	movwf	31	;volatile
 16166                           
 16167                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 16168     109E  3001               	movlw	1
 16169     109F  009D               	movwf	29	;volatile
 16170                           
 16171                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 16172     10A0  0020               	movlb	0	; select bank0
 16173     10A1  1311               	bcf	17,6	;volatile
 16174                           
 16175                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 16176     10A2  30A8               	movlw	low _ADC_DefaultInterruptHandler
 16177     10A3  0021               	movlb	1	; select bank1
 16178     10A4  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 16179     10A5  301E               	movlw	high _ADC_DefaultInterruptHandler
 16180     10A6  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 16181     10A7  319E  26E4         	fcall	_ADC_SetInterruptHandler
 16182                           
 16183                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 16184     10A9  0021               	movlb	1	; select bank1
 16185     10AA  1711               	bsf	17,6	;volatile
 16186     10AB  0008               	return
 16187     10AC                     __end_of_ADC_Initialize:
 16188                           
 16189                           	psect	text72
 16190     1EE4                     __ptext72:	
 16191 ;; *************** function _ADC_SetInterruptHandler *****************
 16192 ;; Defined at:
 16193 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 16196 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;		None
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      void 
 16201 ;; Registers used:
 16202 ;;		wreg
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16208 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16211 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16212 ;;Total ram usage:        2 bytes
 16213 ;; Hardware stack levels used: 1
 16214 ;; Hardware stack levels required when called: 5
 16215 ;; This function calls:
 16216 ;;		Nothing
 16217 ;; This function is called by:
 16218 ;;		_ADC_Initialize
 16219 ;;		_initAdcMultiplexer
 16220 ;; This function uses a non-reentrant model
 16221 ;;
 16222                           
 16223     1EE4                     _ADC_SetInterruptHandler:	
 16224                           ;psect for function _ADC_SetInterruptHandler
 16225                           
 16226                           
 16227                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 16228                           
 16229                           ;incstack = 0
 16230                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 16231     1EE4  0021               	movlb	1	; select bank1
 16232     1EE5  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 16233     1EE6  0022               	movlb	2	; select bank2
 16234     1EE7  00E7               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 16235     1EE8  0021               	movlb	1	; select bank1
 16236     1EE9  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 16237     1EEA  0022               	movlb	2	; select bank2
 16238     1EEB  00E6               	movwf	_ADC_InterruptHandler^(0+256)
 16239     1EEC  0008               	return
 16240     1EED                     __end_of_ADC_SetInterruptHandler:
 16241                           
 16242                           	psect	intentry
 16243     0004                     __pintentry:	
 16244 ;; *************** function _INTERRUPT_InterruptManager *****************
 16245 ;; Defined at:
 16246 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;		None
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;		None
 16251 ;; Return value:  Size  Location     Type
 16252 ;;                  1    wreg      void 
 16253 ;; Registers used:
 16254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16255 ;; Tracked objects:
 16256 ;;		On entry : 0/0
 16257 ;;		On exit  : 0/0
 16258 ;;		Unchanged: 0/0
 16259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16264 ;;Total ram usage:        0 bytes
 16265 ;; Hardware stack levels used: 1
 16266 ;; Hardware stack levels required when called: 4
 16267 ;; This function calls:
 16268 ;;		NULL
 16269 ;;		_ADC_ISR
 16270 ;;		_EUSART_ReceiveISR
 16271 ;;		_EUSART_TransmitISR
 16272 ;;		_TMR2_ISR
 16273 ;;		_TMR4_ISR
 16274 ;; This function is called by:
 16275 ;;		Interrupt level 1
 16276 ;; This function uses a non-reentrant model
 16277 ;;
 16278                           
 16279     0004                     _INTERRUPT_InterruptManager:
 16280                           
 16281                           ;incstack = 0
 16282     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16283                           
 16284                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16285     0005  3180               	pagesel	$
 16286                           
 16287                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 16288     0006  1F0B               	btfss	11,6	;volatile
 16289     0007  283E               	goto	i1l230
 16290                           
 16291                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 16292     0008  0021               	movlb	1	; select bank1
 16293     0009  1E11               	btfss	17,4	;volatile
 16294     000A  2815               	goto	i1l219
 16295     000B  0020               	movlb	0	; select bank0
 16296     000C  1E11               	btfss	17,4	;volatile
 16297     000D  2815               	goto	i1l219
 16298                           
 16299                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 16300     000E  0022               	movlb	2	; select bank2
 16301     000F  0865               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 16302     0010  008A               	movwf	10
 16303     0011  0864               	movf	_EUSART_TxInterruptHandler^(0+256),w
 16304     0012  000A               	callw
 16305     0013  3180               	pagesel	$
 16306                           
 16307                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 16308     0014  283E               	goto	i1l230
 16309     0015                     i1l219:	
 16310                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 16311                           
 16312     0015  0021               	movlb	1	; select bank1
 16313     0016  1E91               	btfss	17,5	;volatile
 16314     0017  2822               	goto	i1l221
 16315     0018  0020               	movlb	0	; select bank0
 16316     0019  1E91               	btfss	17,5	;volatile
 16317     001A  2822               	goto	i1l221
 16318                           
 16319                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 16320     001B  0023               	movlb	3	; select bank3
 16321     001C  0855               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 16322     001D  008A               	movwf	10
 16323     001E  0854               	movf	_EUSART_RxInterruptHandler^(0+384),w
 16324     001F  000A               	callw
 16325     0020  3180               	pagesel	$
 16326                           
 16327                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 16328     0021  283E               	goto	i1l230
 16329     0022                     i1l221:	
 16330                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 16331                           
 16332     0022  0021               	movlb	1	; select bank1
 16333     0023  1C92               	btfss	18,1	;volatile
 16334     0024  282C               	goto	i1l223
 16335     0025  0020               	movlb	0	; select bank0
 16336     0026  1C92               	btfss	18,1	;volatile
 16337     0027  282C               	goto	i1l223
 16338                           
 16339                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 16340     0028  319F  27BC  3180   	fcall	_TMR4_ISR
 16341                           
 16342                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 16343     002B  283E               	goto	i1l230
 16344     002C                     i1l223:	
 16345                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 16346                           
 16347     002C  0021               	movlb	1	; select bank1
 16348     002D  1C91               	btfss	17,1	;volatile
 16349     002E  2836               	goto	i1l225
 16350     002F  0020               	movlb	0	; select bank0
 16351     0030  1C91               	btfss	17,1	;volatile
 16352     0031  2836               	goto	i1l225
 16353                           
 16354                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 16355     0032  319F  27AF  3180   	fcall	_TMR2_ISR
 16356                           
 16357                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 16358     0035  283E               	goto	i1l230
 16359     0036                     i1l225:	
 16360                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 16361                           
 16362     0036  0021               	movlb	1	; select bank1
 16363     0037  1F11               	btfss	17,6	;volatile
 16364     0038  283E               	goto	i1l230
 16365     0039  0020               	movlb	0	; select bank0
 16366     003A  1F11               	btfss	17,6	;volatile
 16367     003B  283E               	goto	i1l230
 16368                           
 16369                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 16370     003C  319F  27A2         	fcall	_ADC_ISR
 16371     003E                     i1l230:	
 16372                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 16373                           
 16374     003E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16375     003F  0009               	retfie
 16376     0040                     __end_of_INTERRUPT_InterruptManager:
 16377                           
 16378                           	psect	text74
 16379     1FBC                     __ptext74:	
 16380 ;; *************** function _TMR4_ISR *****************
 16381 ;; Defined at:
 16382 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 16383 ;; Parameters:    Size  Location     Type
 16384 ;;		None
 16385 ;; Auto vars:     Size  Location     Type
 16386 ;;		None
 16387 ;; Return value:  Size  Location     Type
 16388 ;;                  1    wreg      void 
 16389 ;; Registers used:
 16390 ;;		wreg, status,2, status,0, pclath, cstack
 16391 ;; Tracked objects:
 16392 ;;		On entry : 0/0
 16393 ;;		On exit  : 0/0
 16394 ;;		Unchanged: 0/0
 16395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16400 ;;Total ram usage:        0 bytes
 16401 ;; Hardware stack levels used: 1
 16402 ;; Hardware stack levels required when called: 3
 16403 ;; This function calls:
 16404 ;;		NULL
 16405 ;;		_TMR4_DefaultPeriodMatchCallback
 16406 ;;		_controller
 16407 ;; This function is called by:
 16408 ;;		_INTERRUPT_InterruptManager
 16409 ;; This function uses a non-reentrant model
 16410 ;;
 16411                           
 16412     1FBC                     _TMR4_ISR:	
 16413                           ;psect for function _TMR4_ISR
 16414                           
 16415                           
 16416                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 16417                           
 16418                           ;incstack = 0
 16419                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 16420     1FBC  0022               	movlb	2	; select bank2
 16421     1FBD  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 16422     1FBE  0461               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 16423     1FBF  1903               	btfsc	3,2
 16424     1FC0  2FC6               	goto	i1l5983
 16425                           
 16426                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 16427     1FC1  0861               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 16428     1FC2  008A               	movwf	10
 16429     1FC3  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 16430     1FC4  000A               	callw
 16431     1FC5  319F               	pagesel	$
 16432     1FC6                     i1l5983:
 16433                           
 16434                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 16435     1FC6  0020               	movlb	0	; select bank0
 16436     1FC7  1092               	bcf	18,1	;volatile
 16437     1FC8  0008               	return
 16438     1FC9                     __end_of_TMR4_ISR:
 16439                           
 16440                           	psect	text75
 16441     0003                     __ptext75:	
 16442 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 16443 ;; Defined at:
 16444 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;		None
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1    wreg      void 
 16451 ;; Registers used:
 16452 ;;		None
 16453 ;; Tracked objects:
 16454 ;;		On entry : 0/0
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16462 ;;Total ram usage:        0 bytes
 16463 ;; Hardware stack levels used: 1
 16464 ;; This function calls:
 16465 ;;		Nothing
 16466 ;; This function is called by:
 16467 ;;		_TMR4_Initialize
 16468 ;;		_TMR4_ISR
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           
 16472     0003                     _TMR4_DefaultPeriodMatchCallback:	
 16473                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 16474                           
 16475                           
 16476                           ;incstack = 0
 16477                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 16478     0003  0008               	return
 16479     0004                     __end_of_TMR4_DefaultPeriodMatchCallback:
 16480                           
 16481                           	psect	text76
 16482     0D4C                     __ptext76:	
 16483 ;; *************** function _controller *****************
 16484 ;; Defined at:
 16485 ;;		line 13 in file "controller.c"
 16486 ;; Parameters:    Size  Location     Type
 16487 ;;		None
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  error           2   51[BANK0 ] short 
 16490 ;;  I               2   49[BANK0 ] short 
 16491 ;;  P               2   47[BANK0 ] short 
 16492 ;; Return value:  Size  Location     Type
 16493 ;;                  1    wreg      void 
 16494 ;; Registers used:
 16495 ;;		wreg, status,2, status,0, pclath, cstack
 16496 ;; Tracked objects:
 16497 ;;		On entry : 0/0
 16498 ;;		On exit  : 0/0
 16499 ;;		Unchanged: 0/0
 16500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16504 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16505 ;;Total ram usage:        7 bytes
 16506 ;; Hardware stack levels used: 1
 16507 ;; Hardware stack levels required when called: 2
 16508 ;; This function calls:
 16509 ;;		_pwm_fan_LoadDutyValue
 16510 ;;		i1___fladd
 16511 ;;		i1___flmul
 16512 ;;		i1___fltol
 16513 ;;		i1___xxtofl
 16514 ;;		i1_getHoogtesensor
 16515 ;; This function is called by:
 16516 ;;		_main
 16517 ;;		_TMR4_ISR
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521     0D4C                     _controller:	
 16522                           ;psect for function _controller
 16523                           
 16524                           
 16525                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 16526                           
 16527                           ;incstack = 0
 16528                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 16529     0D4C  319E  26BA  318D   	fcall	i1_getHoogtesensor
 16530     0D4F  0871               	movf	?i1_getHoogtesensor+1,w
 16531     0D50  0022               	movlb	2	; select bank2
 16532     0D51  00C7               	movwf	(_hoogte_bal+1)^(0+256)
 16533     0D52  0870               	movf	?i1_getHoogtesensor,w
 16534     0D53  00C6               	movwf	_hoogte_bal^(0+256)
 16535                           
 16536                           ;controller.c: 18:     int16_t error = setpoint - hoogte_bal;
 16537     0D54  0846               	movf	_hoogte_bal^(0+256),w
 16538     0D55  0020               	movlb	0	; select bank0
 16539     0D56  026C               	subwf	_setpoint,w
 16540     0D57  00D3               	movwf	controller@error
 16541     0D58  0022               	movlb	2	; select bank2
 16542     0D59  0847               	movf	(_hoogte_bal+1)^(0+256),w
 16543     0D5A  0020               	movlb	0	; select bank0
 16544     0D5B  3B6D               	subwfb	_setpoint+1,w
 16545     0D5C  00D4               	movwf	controller@error+1
 16546                           
 16547                           ;controller.c: 20:     integraal += error * 0.0005;
 16548     0D5D  0853               	movf	controller@error,w
 16549     0D5E  00F0               	movwf	i1___xxtofl@val
 16550     0D5F  0854               	movf	controller@error+1,w
 16551     0D60  00F1               	movwf	i1___xxtofl@val+1
 16552     0D61  0D89               	rlf	9,f
 16553     0D62  3B89               	subwfb	9,f
 16554     0D63  0989               	comf	9,f
 16555     0D64  00F2               	movwf	i1___xxtofl@val+2
 16556     0D65  00F3               	movwf	i1___xxtofl@val+3
 16557     0D66  3001               	movlw	1
 16558     0D67  3188  2097  318D   	fcall	i1___xxtofl
 16559     0D6A  0873               	movf	?i1___xxtofl+3,w
 16560     0D6B  0020               	movlb	0	; select bank0
 16561     0D6C  00A7               	movwf	i1___flmul@a+3
 16562     0D6D  0872               	movf	?i1___xxtofl+2,w
 16563     0D6E  00A6               	movwf	i1___flmul@a+2
 16564     0D6F  0871               	movf	?i1___xxtofl+1,w
 16565     0D70  00A5               	movwf	i1___flmul@a+1
 16566     0D71  0870               	movf	?i1___xxtofl,w
 16567     0D72  00A4               	movwf	i1___flmul@a
 16568     0D73  303A               	movlw	58
 16569     0D74  00A3               	movwf	i1___flmul@b+3
 16570     0D75  3003               	movlw	3
 16571     0D76  00A2               	movwf	i1___flmul@b+2
 16572     0D77  3012               	movlw	18
 16573     0D78  00A1               	movwf	i1___flmul@b+1
 16574     0D79  306F               	movlw	111
 16575     0D7A  00A0               	movwf	i1___flmul@b
 16576     0D7B  3182  2285  318D   	fcall	i1___flmul
 16577     0D7E  0020               	movlb	0	; select bank0
 16578     0D7F  0823               	movf	?i1___flmul+3,w
 16579     0D80  00BD               	movwf	i1___fladd@b+3
 16580     0D81  0822               	movf	?i1___flmul+2,w
 16581     0D82  00BC               	movwf	i1___fladd@b+2
 16582     0D83  0821               	movf	?i1___flmul+1,w
 16583     0D84  00BB               	movwf	i1___fladd@b+1
 16584     0D85  0820               	movf	?i1___flmul,w
 16585     0D86  00BA               	movwf	i1___fladd@b
 16586     0D87  0022               	movlb	2	; select bank2
 16587     0D88  0843               	movf	(_integraal+3)^(0+256),w
 16588     0D89  0020               	movlb	0	; select bank0
 16589     0D8A  00C1               	movwf	i1___fladd@a+3
 16590     0D8B  0022               	movlb	2	; select bank2
 16591     0D8C  0842               	movf	(_integraal+2)^(0+256),w
 16592     0D8D  0020               	movlb	0	; select bank0
 16593     0D8E  00C0               	movwf	i1___fladd@a+2
 16594     0D8F  0022               	movlb	2	; select bank2
 16595     0D90  0841               	movf	(_integraal+1)^(0+256),w
 16596     0D91  0020               	movlb	0	; select bank0
 16597     0D92  00BF               	movwf	i1___fladd@a+1
 16598     0D93  0022               	movlb	2	; select bank2
 16599     0D94  0840               	movf	_integraal^(0+256),w
 16600     0D95  0020               	movlb	0	; select bank0
 16601     0D96  00BE               	movwf	i1___fladd@a
 16602     0D97  318E  2649  318D   	fcall	i1___fladd
 16603     0D9A  0020               	movlb	0	; select bank0
 16604     0D9B  083D               	movf	?i1___fladd+3,w
 16605     0D9C  0022               	movlb	2	; select bank2
 16606     0D9D  00C3               	movwf	(_integraal+3)^(0+256)
 16607     0D9E  0020               	movlb	0	; select bank0
 16608     0D9F  083C               	movf	?i1___fladd+2,w
 16609     0DA0  0022               	movlb	2	; select bank2
 16610     0DA1  00C2               	movwf	(_integraal+2)^(0+256)
 16611     0DA2  0020               	movlb	0	; select bank0
 16612     0DA3  083B               	movf	?i1___fladd+1,w
 16613     0DA4  0022               	movlb	2	; select bank2
 16614     0DA5  00C1               	movwf	(_integraal+1)^(0+256)
 16615     0DA6  0020               	movlb	0	; select bank0
 16616     0DA7  083A               	movf	?i1___fladd,w
 16617     0DA8  0022               	movlb	2	; select bank2
 16618     0DA9  00C0               	movwf	_integraal^(0+256)
 16619                           
 16620                           ;controller.c: 22:     int16_t P = kp * error;
 16621     0DAA  0020               	movlb	0	; select bank0
 16622     0DAB  0853               	movf	controller@error,w
 16623     0DAC  00F0               	movwf	i1___xxtofl@val
 16624     0DAD  0854               	movf	controller@error+1,w
 16625     0DAE  00F1               	movwf	i1___xxtofl@val+1
 16626     0DAF  0D89               	rlf	9,f
 16627     0DB0  3B89               	subwfb	9,f
 16628     0DB1  0989               	comf	9,f
 16629     0DB2  00F2               	movwf	i1___xxtofl@val+2
 16630     0DB3  00F3               	movwf	i1___xxtofl@val+3
 16631     0DB4  3001               	movlw	1
 16632     0DB5  3188  2097  318D   	fcall	i1___xxtofl
 16633     0DB8  0873               	movf	?i1___xxtofl+3,w
 16634     0DB9  0020               	movlb	0	; select bank0
 16635     0DBA  00A7               	movwf	i1___flmul@a+3
 16636     0DBB  0872               	movf	?i1___xxtofl+2,w
 16637     0DBC  00A6               	movwf	i1___flmul@a+2
 16638     0DBD  0871               	movf	?i1___xxtofl+1,w
 16639     0DBE  00A5               	movwf	i1___flmul@a+1
 16640     0DBF  0870               	movf	?i1___xxtofl,w
 16641     0DC0  00A4               	movwf	i1___flmul@a
 16642     0DC1  0022               	movlb	2	; select bank2
 16643     0DC2  086F               	movf	(_kp+3)^(0+256),w
 16644     0DC3  0020               	movlb	0	; select bank0
 16645     0DC4  00A3               	movwf	i1___flmul@b+3
 16646     0DC5  0022               	movlb	2	; select bank2
 16647     0DC6  086E               	movf	(_kp+2)^(0+256),w
 16648     0DC7  0020               	movlb	0	; select bank0
 16649     0DC8  00A2               	movwf	i1___flmul@b+2
 16650     0DC9  0022               	movlb	2	; select bank2
 16651     0DCA  086D               	movf	(_kp+1)^(0+256),w
 16652     0DCB  0020               	movlb	0	; select bank0
 16653     0DCC  00A1               	movwf	i1___flmul@b+1
 16654     0DCD  0022               	movlb	2	; select bank2
 16655     0DCE  086C               	movf	_kp^(0+256),w
 16656     0DCF  0020               	movlb	0	; select bank0
 16657     0DD0  00A0               	movwf	i1___flmul@b
 16658     0DD1  3182  2285  318D   	fcall	i1___flmul
 16659     0DD4  0020               	movlb	0	; select bank0
 16660     0DD5  0823               	movf	?i1___flmul+3,w
 16661     0DD6  00BD               	movwf	i1___fltol@f1+3
 16662     0DD7  0822               	movf	?i1___flmul+2,w
 16663     0DD8  00BC               	movwf	i1___fltol@f1+2
 16664     0DD9  0821               	movf	?i1___flmul+1,w
 16665     0DDA  00BB               	movwf	i1___fltol@f1+1
 16666     0DDB  0820               	movf	?i1___flmul,w
 16667     0DDC  00BA               	movwf	i1___fltol@f1
 16668     0DDD  3195  2587  318D   	fcall	i1___fltol
 16669     0DE0  0020               	movlb	0	; select bank0
 16670     0DE1  083B               	movf	?i1___fltol+1,w
 16671     0DE2  00D0               	movwf	controller@P+1
 16672     0DE3  083A               	movf	?i1___fltol,w
 16673     0DE4  00CF               	movwf	controller@P
 16674                           
 16675                           ;controller.c: 23:     int16_t I = ki * integraal;
 16676     0DE5  0022               	movlb	2	; select bank2
 16677     0DE6  086B               	movf	(_ki+3)^(0+256),w
 16678     0DE7  0020               	movlb	0	; select bank0
 16679     0DE8  00A7               	movwf	i1___flmul@a+3
 16680     0DE9  0022               	movlb	2	; select bank2
 16681     0DEA  086A               	movf	(_ki+2)^(0+256),w
 16682     0DEB  0020               	movlb	0	; select bank0
 16683     0DEC  00A6               	movwf	i1___flmul@a+2
 16684     0DED  0022               	movlb	2	; select bank2
 16685     0DEE  0869               	movf	(_ki+1)^(0+256),w
 16686     0DEF  0020               	movlb	0	; select bank0
 16687     0DF0  00A5               	movwf	i1___flmul@a+1
 16688     0DF1  0022               	movlb	2	; select bank2
 16689     0DF2  0868               	movf	_ki^(0+256),w
 16690     0DF3  0020               	movlb	0	; select bank0
 16691     0DF4  00A4               	movwf	i1___flmul@a
 16692     0DF5  0022               	movlb	2	; select bank2
 16693     0DF6  0843               	movf	(_integraal+3)^(0+256),w
 16694     0DF7  0020               	movlb	0	; select bank0
 16695     0DF8  00A3               	movwf	i1___flmul@b+3
 16696     0DF9  0022               	movlb	2	; select bank2
 16697     0DFA  0842               	movf	(_integraal+2)^(0+256),w
 16698     0DFB  0020               	movlb	0	; select bank0
 16699     0DFC  00A2               	movwf	i1___flmul@b+2
 16700     0DFD  0022               	movlb	2	; select bank2
 16701     0DFE  0841               	movf	(_integraal+1)^(0+256),w
 16702     0DFF  0020               	movlb	0	; select bank0
 16703     0E00  00A1               	movwf	i1___flmul@b+1
 16704     0E01  0022               	movlb	2	; select bank2
 16705     0E02  0840               	movf	_integraal^(0+256),w
 16706     0E03  0020               	movlb	0	; select bank0
 16707     0E04  00A0               	movwf	i1___flmul@b
 16708     0E05  3182  2285  318D   	fcall	i1___flmul
 16709     0E08  0020               	movlb	0	; select bank0
 16710     0E09  0823               	movf	?i1___flmul+3,w
 16711     0E0A  00BD               	movwf	i1___fltol@f1+3
 16712     0E0B  0822               	movf	?i1___flmul+2,w
 16713     0E0C  00BC               	movwf	i1___fltol@f1+2
 16714     0E0D  0821               	movf	?i1___flmul+1,w
 16715     0E0E  00BB               	movwf	i1___fltol@f1+1
 16716     0E0F  0820               	movf	?i1___flmul,w
 16717     0E10  00BA               	movwf	i1___fltol@f1
 16718     0E11  3195  2587  318D   	fcall	i1___fltol
 16719     0E14  0020               	movlb	0	; select bank0
 16720     0E15  083B               	movf	?i1___fltol+1,w
 16721     0E16  00D2               	movwf	controller@I+1
 16722     0E17  083A               	movf	?i1___fltol,w
 16723     0E18  00D1               	movwf	controller@I
 16724                           
 16725                           ;controller.c: 25:     dutycycle = P + I;
 16726     0E19  0851               	movf	controller@I,w
 16727     0E1A  074F               	addwf	controller@P,w
 16728     0E1B  00D7               	movwf	_dutycycle
 16729     0E1C  0852               	movf	controller@I+1,w
 16730     0E1D  3D50               	addwfc	controller@P+1,w
 16731     0E1E  00D8               	movwf	_dutycycle+1
 16732                           
 16733                           ;controller.c: 27:     if (dutycycle > 1023 && error > 0) {
 16734     0E1F  3004               	movlw	4
 16735     0E20  0258               	subwf	_dutycycle+1,w
 16736     0E21  3000               	movlw	0
 16737     0E22  1903               	skipnz
 16738     0E23  0257               	subwf	_dutycycle,w
 16739     0E24  1C03               	skipc
 16740     0E25  2E37               	goto	i1l5961
 16741     0E26  0854               	movf	controller@error+1,w
 16742     0E27  3A80               	xorlw	128
 16743     0E28  00CE               	movwf	??_controller
 16744     0E29  3080               	movlw	128
 16745     0E2A  024E               	subwf	??_controller,w
 16746     0E2B  1D03               	skipz
 16747     0E2C  2E2F               	goto	u733_25
 16748     0E2D  3001               	movlw	1
 16749     0E2E  0253               	subwf	controller@error,w
 16750     0E2F                     u733_25:
 16751     0E2F  1C03               	skipc
 16752     0E30  2E37               	goto	i1l5961
 16753                           
 16754                           ;controller.c: 28:         dutycycle = 1023;
 16755     0E31  30FF               	movlw	255
 16756     0E32  0020               	movlb	0	; select bank0
 16757     0E33  00D7               	movwf	_dutycycle
 16758     0E34  3003               	movlw	3
 16759     0E35  00D8               	movwf	_dutycycle+1
 16760                           
 16761                           ;controller.c: 29:     } else if (dutycycle > 1023 && error < 0) {
 16762     0E36  2E42               	goto	i1l5969
 16763     0E37                     i1l5961:
 16764     0E37  3004               	movlw	4
 16765     0E38  0020               	movlb	0	; select bank0
 16766     0E39  0258               	subwf	_dutycycle+1,w
 16767     0E3A  3000               	movlw	0
 16768     0E3B  1903               	skipnz
 16769     0E3C  0257               	subwf	_dutycycle,w
 16770     0E3D  1803               	btfsc	3,0
 16771     0E3E  1FD4               	btfss	controller@error+1,7
 16772     0E3F  2E42               	goto	i1l5969
 16773                           
 16774                           ;controller.c: 30:         dutycycle = 0;
 16775     0E40  01D7               	clrf	_dutycycle
 16776     0E41  01D8               	clrf	_dutycycle+1
 16777     0E42                     i1l5969:	
 16778                           ;controller.c: 31:     } else if (dutycycle < 0) {
 16779                           
 16780                           
 16781                           ;controller.c: 35:     pwm_fan_LoadDutyValue(dutycycle);
 16782     0E42  0858               	movf	_dutycycle+1,w
 16783     0E43  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 16784     0E44  0857               	movf	_dutycycle,w
 16785     0E45  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 16786     0E46  3190  2082         	fcall	_pwm_fan_LoadDutyValue
 16787     0E48  0008               	return
 16788     0E49                     __end_of_controller:
 16789                           
 16790                           	psect	text77
 16791     1EBA                     __ptext77:	
 16792 ;; *************** function i1_getHoogtesensor *****************
 16793 ;; Defined at:
 16794 ;;		line 33 in file "adcMeasurements.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;		None
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;		None
 16799 ;; Return value:  Size  Location     Type
 16800 ;;                  2    0[COMMON] unsigned short 
 16801 ;; Registers used:
 16802 ;;		wreg
 16803 ;; Tracked objects:
 16804 ;;		On entry : 0/0
 16805 ;;		On exit  : 0/0
 16806 ;;		Unchanged: 0/0
 16807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16812 ;;Total ram usage:        2 bytes
 16813 ;; Hardware stack levels used: 1
 16814 ;; This function calls:
 16815 ;;		Nothing
 16816 ;; This function is called by:
 16817 ;;		_controller
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821     1EBA                     i1_getHoogtesensor:	
 16822                           ;psect for function i1_getHoogtesensor
 16823                           
 16824                           
 16825                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 16826                           
 16827                           ;incstack = 0
 16828                           ; Regs used in i1_getHoogtesensor: [wreg]
 16829     1EBA  0020               	movlb	0	; select bank0
 16830     1EBB  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 16831     1EBC  00F1               	movwf	?i1_getHoogtesensor+1
 16832     1EBD  0859               	movf	_ADC_hoogtesensor,w	;volatile
 16833     1EBE  00F0               	movwf	?i1_getHoogtesensor
 16834     1EBF  0008               	return
 16835     1EC0                     __end_ofi1_getHoogtesensor:
 16836                           
 16837                           	psect	text78
 16838     0897                     __ptext78:	
 16839 ;; *************** function i1___xxtofl *****************
 16840 ;; Defined at:
 16841 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 16842 ;; Parameters:    Size  Location     Type
 16843 ;;  sign            1    wreg     unsigned char 
 16844 ;;  val             4    0[COMMON] long 
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;  sign            1    8[COMMON] unsigned char 
 16847 ;;  arg             4   10[COMMON] unsigned long 
 16848 ;;  exp             1    9[COMMON] unsigned char 
 16849 ;; Return value:  Size  Location     Type
 16850 ;;                  4    0[COMMON] unsigned char 
 16851 ;; Registers used:
 16852 ;;		wreg, status,2, status,0
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16859 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16860 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16861 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;Total ram usage:       14 bytes
 16863 ;; Hardware stack levels used: 1
 16864 ;; This function calls:
 16865 ;;		Nothing
 16866 ;; This function is called by:
 16867 ;;		_controller
 16868 ;; This function uses a non-reentrant model
 16869 ;;
 16870                           
 16871     0897                     i1___xxtofl:	
 16872                           ;psect for function i1___xxtofl
 16873                           
 16874                           
 16875                           ;incstack = 0
 16876                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 16877                           ;i1___xxtofl@sign stored from wreg
 16878     0897  00F8               	movwf	i1___xxtofl@sign
 16879     0898  0878               	movf	i1___xxtofl@sign,w
 16880     0899  1D03               	btfss	3,2
 16881     089A  1FF3               	btfss	i1___xxtofl@val+3,7
 16882     089B  28AC               	goto	i1l5601
 16883     089C  0970               	comf	i1___xxtofl@val,w
 16884     089D  00FA               	movwf	i1___xxtofl@arg
 16885     089E  0971               	comf	i1___xxtofl@val+1,w
 16886     089F  00FB               	movwf	i1___xxtofl@arg+1
 16887     08A0  0972               	comf	i1___xxtofl@val+2,w
 16888     08A1  00FC               	movwf	i1___xxtofl@arg+2
 16889     08A2  0973               	comf	i1___xxtofl@val+3,w
 16890     08A3  00FD               	movwf	i1___xxtofl@arg+3
 16891     08A4  0AFA               	incf	i1___xxtofl@arg,f
 16892     08A5  1903               	skipnz
 16893     08A6  0AFB               	incf	i1___xxtofl@arg+1,f
 16894     08A7  1903               	skipnz
 16895     08A8  0AFC               	incf	i1___xxtofl@arg+2,f
 16896     08A9  1903               	skipnz
 16897     08AA  0AFD               	incf	i1___xxtofl@arg+3,f
 16898     08AB  28B4               	goto	i1l1622
 16899     08AC                     i1l5601:
 16900     08AC  0873               	movf	i1___xxtofl@val+3,w
 16901     08AD  00FD               	movwf	i1___xxtofl@arg+3
 16902     08AE  0872               	movf	i1___xxtofl@val+2,w
 16903     08AF  00FC               	movwf	i1___xxtofl@arg+2
 16904     08B0  0871               	movf	i1___xxtofl@val+1,w
 16905     08B1  00FB               	movwf	i1___xxtofl@arg+1
 16906     08B2  0870               	movf	i1___xxtofl@val,w
 16907     08B3  00FA               	movwf	i1___xxtofl@arg
 16908     08B4                     i1l1622:
 16909     08B4  0873               	movf	i1___xxtofl@val+3,w
 16910     08B5  0472               	iorwf	i1___xxtofl@val+2,w
 16911     08B6  0471               	iorwf	i1___xxtofl@val+1,w
 16912     08B7  0470               	iorwf	i1___xxtofl@val,w
 16913     08B8  1D03               	skipz
 16914     08B9  28C3               	goto	i1l1623
 16915     08BA  3000               	movlw	0
 16916     08BB  00F3               	movwf	?i1___xxtofl+3
 16917     08BC  3000               	movlw	0
 16918     08BD  00F2               	movwf	?i1___xxtofl+2
 16919     08BE  3000               	movlw	0
 16920     08BF  00F1               	movwf	?i1___xxtofl+1
 16921     08C0  3000               	movlw	0
 16922     08C1  00F0               	movwf	?i1___xxtofl
 16923     08C2  0008               	return
 16924     08C3                     i1l1623:
 16925     08C3  3096               	movlw	150
 16926     08C4  00F9               	movwf	i1___xxtofl@exp
 16927     08C5                     i1l5609:
 16928     08C5  30FE               	movlw	254
 16929     08C6  057D               	andwf	i1___xxtofl@arg+3,w
 16930     08C7  1903               	btfsc	3,2
 16931     08C8  28E2               	goto	i1l5613
 16932     08C9  3001               	movlw	1
 16933     08CA  07F9               	addwf	i1___xxtofl@exp,f
 16934     08CB  3001               	movlw	1
 16935     08CC                     u704_25:
 16936     08CC  36FD               	lsrf	i1___xxtofl@arg+3,f
 16937     08CD  0CFC               	rrf	i1___xxtofl@arg+2,f
 16938     08CE  0CFB               	rrf	i1___xxtofl@arg+1,f
 16939     08CF  0CFA               	rrf	i1___xxtofl@arg,f
 16940     08D0  0B89               	decfsz	9,f
 16941     08D1  28CC               	goto	u704_25
 16942     08D2  28C5               	goto	i1l5609
 16943     08D3                     i1l5611:
 16944     08D3  3001               	movlw	1
 16945     08D4  07F9               	addwf	i1___xxtofl@exp,f
 16946     08D5  3001               	movlw	1
 16947     08D6  07FA               	addwf	i1___xxtofl@arg,f
 16948     08D7  3000               	movlw	0
 16949     08D8  3DFB               	addwfc	i1___xxtofl@arg+1,f
 16950     08D9  3DFC               	addwfc	i1___xxtofl@arg+2,f
 16951     08DA  3DFD               	addwfc	i1___xxtofl@arg+3,f
 16952     08DB  3001               	movlw	1
 16953     08DC                     u706_25:
 16954     08DC  36FD               	lsrf	i1___xxtofl@arg+3,f
 16955     08DD  0CFC               	rrf	i1___xxtofl@arg+2,f
 16956     08DE  0CFB               	rrf	i1___xxtofl@arg+1,f
 16957     08DF  0CFA               	rrf	i1___xxtofl@arg,f
 16958     08E0  0B89               	decfsz	9,f
 16959     08E1  28DC               	goto	u706_25
 16960     08E2                     i1l5613:
 16961     08E2  30FF               	movlw	255
 16962     08E3  057D               	andwf	i1___xxtofl@arg+3,w
 16963     08E4  1903               	btfsc	3,2
 16964     08E5  28F4               	goto	i1l5617
 16965     08E6  28D3               	goto	i1l5611
 16966     08E7                     i1l5619:
 16967     08E7  3002               	movlw	2
 16968     08E8  0279               	subwf	i1___xxtofl@exp,w
 16969     08E9  1C03               	btfss	3,0
 16970     08EA  28F6               	goto	i1l1635
 16971     08EB  3001               	movlw	1
 16972     08EC  02F9               	subwf	i1___xxtofl@exp,f
 16973     08ED  3001               	movlw	1
 16974     08EE                     u708_25:
 16975     08EE  35FA               	lslf	i1___xxtofl@arg,f
 16976     08EF  0DFB               	rlf	i1___xxtofl@arg+1,f
 16977     08F0  0DFC               	rlf	i1___xxtofl@arg+2,f
 16978     08F1  0DFD               	rlf	i1___xxtofl@arg+3,f
 16979     08F2  0B89               	decfsz	9,f
 16980     08F3  28EE               	goto	u708_25
 16981     08F4                     i1l5617:
 16982     08F4  1FFC               	btfss	i1___xxtofl@arg+2,7
 16983     08F5  28E7               	goto	i1l5619
 16984     08F6                     i1l1635:
 16985     08F6  1879               	btfsc	i1___xxtofl@exp,0
 16986     08F7  2900               	goto	i1l1636
 16987     08F8  30FF               	movlw	255
 16988     08F9  05FA               	andwf	i1___xxtofl@arg,f
 16989     08FA  30FF               	movlw	255
 16990     08FB  05FB               	andwf	i1___xxtofl@arg+1,f
 16991     08FC  307F               	movlw	127
 16992     08FD  05FC               	andwf	i1___xxtofl@arg+2,f
 16993     08FE  30FF               	movlw	255
 16994     08FF  05FD               	andwf	i1___xxtofl@arg+3,f
 16995     0900                     i1l1636:
 16996     0900  1003               	clrc
 16997     0901  0CF9               	rrf	i1___xxtofl@exp,f
 16998     0902  0879               	movf	i1___xxtofl@exp,w
 16999     0903  00F4               	movwf	??i1___xxtofl
 17000     0904  01F5               	clrf	??i1___xxtofl+1
 17001     0905  01F6               	clrf	??i1___xxtofl+2
 17002     0906  01F7               	clrf	??i1___xxtofl+3
 17003     0907  3018               	movlw	24
 17004     0908                     u712_25:
 17005     0908  35F4               	lslf	??i1___xxtofl,f
 17006     0909  0DF5               	rlf	??i1___xxtofl+1,f
 17007     090A  0DF6               	rlf	??i1___xxtofl+2,f
 17008     090B  0DF7               	rlf	??i1___xxtofl+3,f
 17009     090C  0B89               	decfsz	9,f
 17010     090D  2908               	goto	u712_25
 17011     090E  0874               	movf	??i1___xxtofl,w
 17012     090F  04FA               	iorwf	i1___xxtofl@arg,f
 17013     0910  0875               	movf	??i1___xxtofl+1,w
 17014     0911  04FB               	iorwf	i1___xxtofl@arg+1,f
 17015     0912  0876               	movf	??i1___xxtofl+2,w
 17016     0913  04FC               	iorwf	i1___xxtofl@arg+2,f
 17017     0914  0877               	movf	??i1___xxtofl+3,w
 17018     0915  04FD               	iorwf	i1___xxtofl@arg+3,f
 17019     0916  0878               	movf	i1___xxtofl@sign,w
 17020     0917  1D03               	btfss	3,2
 17021     0918  1FF3               	btfss	i1___xxtofl@val+3,7
 17022     0919  291B               	goto	i1l5631
 17023     091A  17FD               	bsf	i1___xxtofl@arg+3,7
 17024     091B                     i1l5631:
 17025     091B  087D               	movf	i1___xxtofl@arg+3,w
 17026     091C  00F3               	movwf	?i1___xxtofl+3
 17027     091D  087C               	movf	i1___xxtofl@arg+2,w
 17028     091E  00F2               	movwf	?i1___xxtofl+2
 17029     091F  087B               	movf	i1___xxtofl@arg+1,w
 17030     0920  00F1               	movwf	?i1___xxtofl+1
 17031     0921  087A               	movf	i1___xxtofl@arg,w
 17032     0922  00F0               	movwf	?i1___xxtofl
 17033     0923  0008               	return
 17034     0924                     __end_ofi1___xxtofl:
 17035                           
 17036                           	psect	text79
 17037     1587                     __ptext79:	
 17038 ;; *************** function i1___fltol *****************
 17039 ;; Defined at:
 17040 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;  f1              4   26[BANK0 ] unsigned char 
 17043 ;; Auto vars:     Size  Location     Type
 17044 ;;  exp1            1   35[BANK0 ] unsigned char 
 17045 ;;  sign1           1   34[BANK0 ] unsigned char 
 17046 ;; Return value:  Size  Location     Type
 17047 ;;                  4   26[BANK0 ] long 
 17048 ;; Registers used:
 17049 ;;		wreg, status,2, status,0
 17050 ;; Tracked objects:
 17051 ;;		On entry : 0/0
 17052 ;;		On exit  : 0/0
 17053 ;;		Unchanged: 0/0
 17054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17058 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17059 ;;Total ram usage:       10 bytes
 17060 ;; Hardware stack levels used: 1
 17061 ;; This function calls:
 17062 ;;		Nothing
 17063 ;; This function is called by:
 17064 ;;		_controller
 17065 ;; This function uses a non-reentrant model
 17066 ;;
 17067                           
 17068     1587                     i1___fltol:	
 17069                           ;psect for function i1___fltol
 17070                           
 17071                           
 17072                           ;incstack = 0
 17073                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 17074     1587  1003               	clrc
 17075     1588  0020               	movlb	0	; select bank0
 17076     1589  0D3C               	rlf	i1___fltol@f1+2,w
 17077     158A  0D3D               	rlf	i1___fltol@f1+3,w
 17078     158B  00C3               	movwf	i1___fltol@exp1
 17079     158C  0843               	movf	i1___fltol@exp1,w
 17080     158D  1D03               	btfss	3,2
 17081     158E  2D98               	goto	i1l5229
 17082     158F                     i1l5225:
 17083     158F  3000               	movlw	0
 17084     1590  00BD               	movwf	?i1___fltol+3
 17085     1591  3000               	movlw	0
 17086     1592  00BC               	movwf	?i1___fltol+2
 17087     1593  3000               	movlw	0
 17088     1594  00BB               	movwf	?i1___fltol+1
 17089     1595  3000               	movlw	0
 17090     1596  00BA               	movwf	?i1___fltol
 17091     1597  0008               	return
 17092     1598                     i1l5229:
 17093     1598  083A               	movf	i1___fltol@f1,w
 17094     1599  00BE               	movwf	??i1___fltol
 17095     159A  083B               	movf	i1___fltol@f1+1,w
 17096     159B  00BF               	movwf	??i1___fltol+1
 17097     159C  083C               	movf	i1___fltol@f1+2,w
 17098     159D  00C0               	movwf	??i1___fltol+2
 17099     159E  083D               	movf	i1___fltol@f1+3,w
 17100     159F  00C1               	movwf	??i1___fltol+3
 17101     15A0  301F               	movlw	31
 17102     15A1                     u619_25:
 17103     15A1  36C1               	lsrf	??i1___fltol+3,f
 17104     15A2  0CC0               	rrf	??i1___fltol+2,f
 17105     15A3  0CBF               	rrf	??i1___fltol+1,f
 17106     15A4  0CBE               	rrf	??i1___fltol,f
 17107     15A5  0B89               	decfsz	9,f
 17108     15A6  2DA1               	goto	u619_25
 17109     15A7  083E               	movf	??i1___fltol,w
 17110     15A8  00C2               	movwf	i1___fltol@sign1
 17111     15A9  17BC               	bsf	i1___fltol@f1+2,7
 17112     15AA  30FF               	movlw	255
 17113     15AB  05BA               	andwf	i1___fltol@f1,f
 17114     15AC  30FF               	movlw	255
 17115     15AD  05BB               	andwf	i1___fltol@f1+1,f
 17116     15AE  30FF               	movlw	255
 17117     15AF  05BC               	andwf	i1___fltol@f1+2,f
 17118     15B0  3000               	movlw	0
 17119     15B1  05BD               	andwf	i1___fltol@f1+3,f
 17120     15B2  3096               	movlw	150
 17121     15B3  02C3               	subwf	i1___fltol@exp1,f
 17122     15B4  1FC3               	btfss	i1___fltol@exp1,7
 17123     15B5  2DC7               	goto	i1l5247
 17124     15B6  0843               	movf	i1___fltol@exp1,w
 17125     15B7  3A80               	xorlw	128
 17126     15B8  3E97               	addlw	151
 17127     15B9  1C03               	btfss	3,0
 17128     15BA  2D8F               	goto	i1l5225
 17129     15BB                     i1l5245:
 17130     15BB  3001               	movlw	1
 17131     15BC                     u622_25:
 17132     15BC  36BD               	lsrf	i1___fltol@f1+3,f
 17133     15BD  0CBC               	rrf	i1___fltol@f1+2,f
 17134     15BE  0CBB               	rrf	i1___fltol@f1+1,f
 17135     15BF  0CBA               	rrf	i1___fltol@f1,f
 17136     15C0  0B89               	decfsz	9,f
 17137     15C1  2DBC               	goto	u622_25
 17138     15C2  3001               	movlw	1
 17139     15C3  07C3               	addwf	i1___fltol@exp1,f
 17140     15C4  1903               	btfsc	3,2
 17141     15C5  2DD8               	goto	i1l5255
 17142     15C6  2DBB               	goto	i1l5245
 17143     15C7                     i1l5247:
 17144     15C7  3020               	movlw	32
 17145     15C8  0243               	subwf	i1___fltol@exp1,w
 17146     15C9  1803               	btfsc	3,0
 17147     15CA  2D8F               	goto	i1l5225
 17148     15CB                     i1l1382:
 17149     15CB  0843               	movf	i1___fltol@exp1,w
 17150     15CC  1903               	btfsc	3,2
 17151     15CD  2DD8               	goto	i1l5255
 17152     15CE  3001               	movlw	1
 17153     15CF                     u625_25:
 17154     15CF  35BA               	lslf	i1___fltol@f1,f
 17155     15D0  0DBB               	rlf	i1___fltol@f1+1,f
 17156     15D1  0DBC               	rlf	i1___fltol@f1+2,f
 17157     15D2  0DBD               	rlf	i1___fltol@f1+3,f
 17158     15D3  0B89               	decfsz	9,f
 17159     15D4  2DCF               	goto	u625_25
 17160     15D5  3001               	movlw	1
 17161     15D6  02C3               	subwf	i1___fltol@exp1,f
 17162     15D7  2DCB               	goto	i1l1382
 17163     15D8                     i1l5255:
 17164     15D8  0842               	movf	i1___fltol@sign1,w
 17165     15D9  1903               	btfsc	3,2
 17166     15DA  0008               	return
 17167     15DB  09BA               	comf	i1___fltol@f1,f
 17168     15DC  09BB               	comf	i1___fltol@f1+1,f
 17169     15DD  09BC               	comf	i1___fltol@f1+2,f
 17170     15DE  09BD               	comf	i1___fltol@f1+3,f
 17171     15DF  0ABA               	incf	i1___fltol@f1,f
 17172     15E0  1903               	skipnz
 17173     15E1  0ABB               	incf	i1___fltol@f1+1,f
 17174     15E2  1903               	skipnz
 17175     15E3  0ABC               	incf	i1___fltol@f1+2,f
 17176     15E4  1903               	skipnz
 17177     15E5  0ABD               	incf	i1___fltol@f1+3,f
 17178     15E6  0008               	return
 17179     15E7                     __end_ofi1___fltol:
 17180                           
 17181                           	psect	text80
 17182     0285                     __ptext80:	
 17183 ;; *************** function i1___flmul *****************
 17184 ;; Defined at:
 17185 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 17186 ;; Parameters:    Size  Location     Type
 17187 ;;  b               4    0[BANK0 ] long 
 17188 ;;  a               4    4[BANK0 ] long 
 17189 ;; Auto vars:     Size  Location     Type
 17190 ;;  prod            4   20[BANK0 ] struct .
 17191 ;;  grs             4   14[BANK0 ] unsigned long 
 17192 ;;  temp            2   24[BANK0 ] struct .
 17193 ;;  bexp            1   19[BANK0 ] unsigned char 
 17194 ;;  aexp            1   18[BANK0 ] unsigned char 
 17195 ;;  sign            1   13[BANK0 ] unsigned char 
 17196 ;; Return value:  Size  Location     Type
 17197 ;;                  4    0[BANK0 ] unsigned char 
 17198 ;; Registers used:
 17199 ;;		wreg, status,2, status,0, pclath, cstack
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17205 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17206 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17207 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17208 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17209 ;;Total ram usage:       26 bytes
 17210 ;; Hardware stack levels used: 1
 17211 ;; Hardware stack levels required when called: 1
 17212 ;; This function calls:
 17213 ;;		i1__Umul8_16
 17214 ;; This function is called by:
 17215 ;;		_controller
 17216 ;; This function uses a non-reentrant model
 17217 ;;
 17218                           
 17219     0285                     i1___flmul:	
 17220                           ;psect for function i1___flmul
 17221                           
 17222                           
 17223                           ;incstack = 0
 17224                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 17225     0285  0020               	movlb	0	; select bank0
 17226     0286  0823               	movf	i1___flmul@b+3,w
 17227     0287  3980               	andlw	128
 17228     0288  00AD               	movwf	i1___flmul@sign
 17229     0289  3523               	lslf	i1___flmul@b+3,w
 17230     028A  00B3               	movwf	i1___flmul@bexp
 17231     028B  1BA2               	btfsc	i1___flmul@b+2,7
 17232     028C  1433               	bsf	i1___flmul@bexp,0
 17233     028D  0833               	movf	i1___flmul@bexp,w
 17234     028E  1903               	btfsc	3,2
 17235     028F  2A9D               	goto	i1l5471
 17236     0290  0A33               	incf	i1___flmul@bexp,w
 17237     0291  1D03               	btfss	3,2
 17238     0292  2A9B               	goto	i1l5469
 17239     0293  3000               	movlw	0
 17240     0294  00A3               	movwf	i1___flmul@b+3
 17241     0295  3000               	movlw	0
 17242     0296  00A2               	movwf	i1___flmul@b+2
 17243     0297  3000               	movlw	0
 17244     0298  00A1               	movwf	i1___flmul@b+1
 17245     0299  3000               	movlw	0
 17246     029A  00A0               	movwf	i1___flmul@b
 17247     029B                     i1l5469:
 17248     029B  17A2               	bsf	i1___flmul@b+2,7
 17249     029C  2AA5               	goto	i1l5473
 17250     029D                     i1l5471:
 17251     029D  3000               	movlw	0
 17252     029E  00A3               	movwf	i1___flmul@b+3
 17253     029F  3000               	movlw	0
 17254     02A0  00A2               	movwf	i1___flmul@b+2
 17255     02A1  3000               	movlw	0
 17256     02A2  00A1               	movwf	i1___flmul@b+1
 17257     02A3  3000               	movlw	0
 17258     02A4  00A0               	movwf	i1___flmul@b
 17259     02A5                     i1l5473:
 17260     02A5  0827               	movf	i1___flmul@a+3,w
 17261     02A6  3980               	andlw	128
 17262     02A7  06AD               	xorwf	i1___flmul@sign,f
 17263     02A8  3527               	lslf	i1___flmul@a+3,w
 17264     02A9  00B2               	movwf	i1___flmul@aexp
 17265     02AA  1BA6               	btfsc	i1___flmul@a+2,7
 17266     02AB  1432               	bsf	i1___flmul@aexp,0
 17267     02AC  0832               	movf	i1___flmul@aexp,w
 17268     02AD  1903               	btfsc	3,2
 17269     02AE  2ABC               	goto	i1l5489
 17270     02AF  0A32               	incf	i1___flmul@aexp,w
 17271     02B0  1D03               	btfss	3,2
 17272     02B1  2ABA               	goto	i1l5487
 17273     02B2  3000               	movlw	0
 17274     02B3  00A7               	movwf	i1___flmul@a+3
 17275     02B4  3000               	movlw	0
 17276     02B5  00A6               	movwf	i1___flmul@a+2
 17277     02B6  3000               	movlw	0
 17278     02B7  00A5               	movwf	i1___flmul@a+1
 17279     02B8  3000               	movlw	0
 17280     02B9  00A4               	movwf	i1___flmul@a
 17281     02BA                     i1l5487:
 17282     02BA  17A6               	bsf	i1___flmul@a+2,7
 17283     02BB  2AC4               	goto	i1l5491
 17284     02BC                     i1l5489:
 17285     02BC  3000               	movlw	0
 17286     02BD  00A7               	movwf	i1___flmul@a+3
 17287     02BE  3000               	movlw	0
 17288     02BF  00A6               	movwf	i1___flmul@a+2
 17289     02C0  3000               	movlw	0
 17290     02C1  00A5               	movwf	i1___flmul@a+1
 17291     02C2  3000               	movlw	0
 17292     02C3  00A4               	movwf	i1___flmul@a
 17293     02C4                     i1l5491:
 17294     02C4  0832               	movf	i1___flmul@aexp,w
 17295     02C5  1D03               	btfss	3,2
 17296     02C6  0833               	movf	i1___flmul@bexp,w
 17297     02C7  1D03               	btfss	3,2
 17298     02C8  2AD2               	goto	i1l5499
 17299     02C9  3000               	movlw	0
 17300     02CA  00A3               	movwf	?i1___flmul+3
 17301     02CB  3000               	movlw	0
 17302     02CC  00A2               	movwf	?i1___flmul+2
 17303     02CD  3000               	movlw	0
 17304     02CE  00A1               	movwf	?i1___flmul+1
 17305     02CF  3000               	movlw	0
 17306     02D0  00A0               	movwf	?i1___flmul
 17307     02D1  0008               	return
 17308     02D2                     i1l5499:
 17309     02D2  0820               	movf	i1___flmul@b,w
 17310     02D3  00F0               	movwf	i1__Umul8_16@multiplicand
 17311     02D4  0826               	movf	i1___flmul@a+2,w
 17312     02D5  3191  216C  3182   	fcall	i1__Umul8_16
 17313     02D8  0871               	movf	?i1__Umul8_16+1,w
 17314     02D9  0020               	movlb	0	; select bank0
 17315     02DA  00B9               	movwf	i1___flmul@temp+1
 17316     02DB  0870               	movf	?i1__Umul8_16,w
 17317     02DC  00B8               	movwf	i1___flmul@temp
 17318     02DD  0838               	movf	i1___flmul@temp,w
 17319     02DE  00A8               	movwf	??i1___flmul
 17320     02DF  01A9               	clrf	??i1___flmul+1
 17321     02E0  01AA               	clrf	??i1___flmul+2
 17322     02E1  01AB               	clrf	??i1___flmul+3
 17323     02E2  082B               	movf	??i1___flmul+3,w
 17324     02E3  00B1               	movwf	i1___flmul@grs+3
 17325     02E4  082A               	movf	??i1___flmul+2,w
 17326     02E5  00B0               	movwf	i1___flmul@grs+2
 17327     02E6  0829               	movf	??i1___flmul+1,w
 17328     02E7  00AF               	movwf	i1___flmul@grs+1
 17329     02E8  0828               	movf	??i1___flmul,w
 17330     02E9  00AE               	movwf	i1___flmul@grs
 17331     02EA  0839               	movf	i1___flmul@temp+1,w
 17332     02EB  00A8               	movwf	??i1___flmul
 17333     02EC  01A9               	clrf	??i1___flmul+1
 17334     02ED  01AA               	clrf	??i1___flmul+2
 17335     02EE  01AB               	clrf	??i1___flmul+3
 17336     02EF  082B               	movf	??i1___flmul+3,w
 17337     02F0  00B7               	movwf	i1___flmul@prod+3
 17338     02F1  082A               	movf	??i1___flmul+2,w
 17339     02F2  00B6               	movwf	i1___flmul@prod+2
 17340     02F3  0829               	movf	??i1___flmul+1,w
 17341     02F4  00B5               	movwf	i1___flmul@prod+1
 17342     02F5  0828               	movf	??i1___flmul,w
 17343     02F6  00B4               	movwf	i1___flmul@prod
 17344     02F7  0821               	movf	i1___flmul@b+1,w
 17345     02F8  00F0               	movwf	i1__Umul8_16@multiplicand
 17346     02F9  0825               	movf	i1___flmul@a+1,w
 17347     02FA  3191  216C  3182   	fcall	i1__Umul8_16
 17348     02FD  0871               	movf	?i1__Umul8_16+1,w
 17349     02FE  0020               	movlb	0	; select bank0
 17350     02FF  00B9               	movwf	i1___flmul@temp+1
 17351     0300  0870               	movf	?i1__Umul8_16,w
 17352     0301  00B8               	movwf	i1___flmul@temp
 17353     0302  0838               	movf	i1___flmul@temp,w
 17354     0303  00A8               	movwf	??i1___flmul
 17355     0304  01A9               	clrf	??i1___flmul+1
 17356     0305  01AA               	clrf	??i1___flmul+2
 17357     0306  01AB               	clrf	??i1___flmul+3
 17358     0307  0828               	movf	??i1___flmul,w
 17359     0308  07AE               	addwf	i1___flmul@grs,f
 17360     0309  0829               	movf	??i1___flmul+1,w
 17361     030A  3DAF               	addwfc	i1___flmul@grs+1,f
 17362     030B  082A               	movf	??i1___flmul+2,w
 17363     030C  3DB0               	addwfc	i1___flmul@grs+2,f
 17364     030D  082B               	movf	??i1___flmul+3,w
 17365     030E  3DB1               	addwfc	i1___flmul@grs+3,f
 17366     030F  0839               	movf	i1___flmul@temp+1,w
 17367     0310  00A8               	movwf	??i1___flmul
 17368     0311  01A9               	clrf	??i1___flmul+1
 17369     0312  01AA               	clrf	??i1___flmul+2
 17370     0313  01AB               	clrf	??i1___flmul+3
 17371     0314  0828               	movf	??i1___flmul,w
 17372     0315  07B4               	addwf	i1___flmul@prod,f
 17373     0316  0829               	movf	??i1___flmul+1,w
 17374     0317  3DB5               	addwfc	i1___flmul@prod+1,f
 17375     0318  082A               	movf	??i1___flmul+2,w
 17376     0319  3DB6               	addwfc	i1___flmul@prod+2,f
 17377     031A  082B               	movf	??i1___flmul+3,w
 17378     031B  3DB7               	addwfc	i1___flmul@prod+3,f
 17379     031C  0822               	movf	i1___flmul@b+2,w
 17380     031D  00F0               	movwf	i1__Umul8_16@multiplicand
 17381     031E  0824               	movf	i1___flmul@a,w
 17382     031F  3191  216C  3182   	fcall	i1__Umul8_16
 17383     0322  0871               	movf	?i1__Umul8_16+1,w
 17384     0323  0020               	movlb	0	; select bank0
 17385     0324  00B9               	movwf	i1___flmul@temp+1
 17386     0325  0870               	movf	?i1__Umul8_16,w
 17387     0326  00B8               	movwf	i1___flmul@temp
 17388     0327  0838               	movf	i1___flmul@temp,w
 17389     0328  00A8               	movwf	??i1___flmul
 17390     0329  01A9               	clrf	??i1___flmul+1
 17391     032A  01AA               	clrf	??i1___flmul+2
 17392     032B  01AB               	clrf	??i1___flmul+3
 17393     032C  0828               	movf	??i1___flmul,w
 17394     032D  07AE               	addwf	i1___flmul@grs,f
 17395     032E  0829               	movf	??i1___flmul+1,w
 17396     032F  3DAF               	addwfc	i1___flmul@grs+1,f
 17397     0330  082A               	movf	??i1___flmul+2,w
 17398     0331  3DB0               	addwfc	i1___flmul@grs+2,f
 17399     0332  082B               	movf	??i1___flmul+3,w
 17400     0333  3DB1               	addwfc	i1___flmul@grs+3,f
 17401     0334  0839               	movf	i1___flmul@temp+1,w
 17402     0335  00A8               	movwf	??i1___flmul
 17403     0336  01A9               	clrf	??i1___flmul+1
 17404     0337  01AA               	clrf	??i1___flmul+2
 17405     0338  01AB               	clrf	??i1___flmul+3
 17406     0339  0828               	movf	??i1___flmul,w
 17407     033A  07B4               	addwf	i1___flmul@prod,f
 17408     033B  0829               	movf	??i1___flmul+1,w
 17409     033C  3DB5               	addwfc	i1___flmul@prod+1,f
 17410     033D  082A               	movf	??i1___flmul+2,w
 17411     033E  3DB6               	addwfc	i1___flmul@prod+2,f
 17412     033F  082B               	movf	??i1___flmul+3,w
 17413     0340  3DB7               	addwfc	i1___flmul@prod+3,f
 17414     0341  3008               	movlw	8
 17415     0342                     u682_25:
 17416     0342  35AE               	lslf	i1___flmul@grs,f
 17417     0343  0DAF               	rlf	i1___flmul@grs+1,f
 17418     0344  0DB0               	rlf	i1___flmul@grs+2,f
 17419     0345  0DB1               	rlf	i1___flmul@grs+3,f
 17420     0346  0B89               	decfsz	9,f
 17421     0347  2B42               	goto	u682_25
 17422     0348  0821               	movf	i1___flmul@b+1,w
 17423     0349  00F0               	movwf	i1__Umul8_16@multiplicand
 17424     034A  0824               	movf	i1___flmul@a,w
 17425     034B  3191  216C  3182   	fcall	i1__Umul8_16
 17426     034E  0871               	movf	?i1__Umul8_16+1,w
 17427     034F  0020               	movlb	0	; select bank0
 17428     0350  00B9               	movwf	i1___flmul@temp+1
 17429     0351  0870               	movf	?i1__Umul8_16,w
 17430     0352  00B8               	movwf	i1___flmul@temp
 17431     0353  0838               	movf	i1___flmul@temp,w
 17432     0354  07AE               	addwf	i1___flmul@grs,f
 17433     0355  0839               	movf	i1___flmul@temp+1,w
 17434     0356  3DAF               	addwfc	i1___flmul@grs+1,f
 17435     0357  3000               	movlw	0
 17436     0358  3DB0               	addwfc	i1___flmul@grs+2,f
 17437     0359  3DB1               	addwfc	i1___flmul@grs+3,f
 17438     035A  0820               	movf	i1___flmul@b,w
 17439     035B  00F0               	movwf	i1__Umul8_16@multiplicand
 17440     035C  0825               	movf	i1___flmul@a+1,w
 17441     035D  3191  216C  3182   	fcall	i1__Umul8_16
 17442     0360  0871               	movf	?i1__Umul8_16+1,w
 17443     0361  0020               	movlb	0	; select bank0
 17444     0362  00B9               	movwf	i1___flmul@temp+1
 17445     0363  0870               	movf	?i1__Umul8_16,w
 17446     0364  00B8               	movwf	i1___flmul@temp
 17447     0365  0838               	movf	i1___flmul@temp,w
 17448     0366  07AE               	addwf	i1___flmul@grs,f
 17449     0367  0839               	movf	i1___flmul@temp+1,w
 17450     0368  3DAF               	addwfc	i1___flmul@grs+1,f
 17451     0369  3000               	movlw	0
 17452     036A  3DB0               	addwfc	i1___flmul@grs+2,f
 17453     036B  3DB1               	addwfc	i1___flmul@grs+3,f
 17454     036C  3008               	movlw	8
 17455     036D                     u683_25:
 17456     036D  35AE               	lslf	i1___flmul@grs,f
 17457     036E  0DAF               	rlf	i1___flmul@grs+1,f
 17458     036F  0DB0               	rlf	i1___flmul@grs+2,f
 17459     0370  0DB1               	rlf	i1___flmul@grs+3,f
 17460     0371  0B89               	decfsz	9,f
 17461     0372  2B6D               	goto	u683_25
 17462     0373  0820               	movf	i1___flmul@b,w
 17463     0374  00F0               	movwf	i1__Umul8_16@multiplicand
 17464     0375  0824               	movf	i1___flmul@a,w
 17465     0376  3191  216C  3182   	fcall	i1__Umul8_16
 17466     0379  0871               	movf	?i1__Umul8_16+1,w
 17467     037A  0020               	movlb	0	; select bank0
 17468     037B  00B9               	movwf	i1___flmul@temp+1
 17469     037C  0870               	movf	?i1__Umul8_16,w
 17470     037D  00B8               	movwf	i1___flmul@temp
 17471     037E  0838               	movf	i1___flmul@temp,w
 17472     037F  07AE               	addwf	i1___flmul@grs,f
 17473     0380  0839               	movf	i1___flmul@temp+1,w
 17474     0381  3DAF               	addwfc	i1___flmul@grs+1,f
 17475     0382  3000               	movlw	0
 17476     0383  3DB0               	addwfc	i1___flmul@grs+2,f
 17477     0384  3DB1               	addwfc	i1___flmul@grs+3,f
 17478     0385  0821               	movf	i1___flmul@b+1,w
 17479     0386  00F0               	movwf	i1__Umul8_16@multiplicand
 17480     0387  0826               	movf	i1___flmul@a+2,w
 17481     0388  3191  216C  3182   	fcall	i1__Umul8_16
 17482     038B  0871               	movf	?i1__Umul8_16+1,w
 17483     038C  0020               	movlb	0	; select bank0
 17484     038D  00B9               	movwf	i1___flmul@temp+1
 17485     038E  0870               	movf	?i1__Umul8_16,w
 17486     038F  00B8               	movwf	i1___flmul@temp
 17487     0390  0838               	movf	i1___flmul@temp,w
 17488     0391  07B4               	addwf	i1___flmul@prod,f
 17489     0392  0839               	movf	i1___flmul@temp+1,w
 17490     0393  3DB5               	addwfc	i1___flmul@prod+1,f
 17491     0394  3000               	movlw	0
 17492     0395  3DB6               	addwfc	i1___flmul@prod+2,f
 17493     0396  3DB7               	addwfc	i1___flmul@prod+3,f
 17494     0397  0822               	movf	i1___flmul@b+2,w
 17495     0398  00F0               	movwf	i1__Umul8_16@multiplicand
 17496     0399  0825               	movf	i1___flmul@a+1,w
 17497     039A  3191  216C  3182   	fcall	i1__Umul8_16
 17498     039D  0871               	movf	?i1__Umul8_16+1,w
 17499     039E  0020               	movlb	0	; select bank0
 17500     039F  00B9               	movwf	i1___flmul@temp+1
 17501     03A0  0870               	movf	?i1__Umul8_16,w
 17502     03A1  00B8               	movwf	i1___flmul@temp
 17503     03A2  0838               	movf	i1___flmul@temp,w
 17504     03A3  07B4               	addwf	i1___flmul@prod,f
 17505     03A4  0839               	movf	i1___flmul@temp+1,w
 17506     03A5  3DB5               	addwfc	i1___flmul@prod+1,f
 17507     03A6  3000               	movlw	0
 17508     03A7  3DB6               	addwfc	i1___flmul@prod+2,f
 17509     03A8  3DB7               	addwfc	i1___flmul@prod+3,f
 17510     03A9  0822               	movf	i1___flmul@b+2,w
 17511     03AA  00F0               	movwf	i1__Umul8_16@multiplicand
 17512     03AB  0826               	movf	i1___flmul@a+2,w
 17513     03AC  3191  216C  3182   	fcall	i1__Umul8_16
 17514     03AF  0871               	movf	?i1__Umul8_16+1,w
 17515     03B0  0020               	movlb	0	; select bank0
 17516     03B1  00B9               	movwf	i1___flmul@temp+1
 17517     03B2  0870               	movf	?i1__Umul8_16,w
 17518     03B3  00B8               	movwf	i1___flmul@temp
 17519     03B4  0838               	movf	i1___flmul@temp,w
 17520     03B5  00A8               	movwf	??i1___flmul
 17521     03B6  0839               	movf	i1___flmul@temp+1,w
 17522     03B7  00A9               	movwf	??i1___flmul+1
 17523     03B8  01AA               	clrf	??i1___flmul+2
 17524     03B9  01AB               	clrf	??i1___flmul+3
 17525     03BA  3008               	movlw	8
 17526     03BB                     u684_25:
 17527     03BB  35A8               	lslf	??i1___flmul,f
 17528     03BC  0DA9               	rlf	??i1___flmul+1,f
 17529     03BD  0DAA               	rlf	??i1___flmul+2,f
 17530     03BE  0DAB               	rlf	??i1___flmul+3,f
 17531     03BF  0B89               	decfsz	9,f
 17532     03C0  2BBB               	goto	u684_25
 17533     03C1  0828               	movf	??i1___flmul,w
 17534     03C2  07B4               	addwf	i1___flmul@prod,f
 17535     03C3  0829               	movf	??i1___flmul+1,w
 17536     03C4  3DB5               	addwfc	i1___flmul@prod+1,f
 17537     03C5  082A               	movf	??i1___flmul+2,w
 17538     03C6  3DB6               	addwfc	i1___flmul@prod+2,f
 17539     03C7  082B               	movf	??i1___flmul+3,w
 17540     03C8  3DB7               	addwfc	i1___flmul@prod+3,f
 17541     03C9  082E               	movf	i1___flmul@grs,w
 17542     03CA  00A8               	movwf	??i1___flmul
 17543     03CB  082F               	movf	i1___flmul@grs+1,w
 17544     03CC  00A9               	movwf	??i1___flmul+1
 17545     03CD  0830               	movf	i1___flmul@grs+2,w
 17546     03CE  00AA               	movwf	??i1___flmul+2
 17547     03CF  0831               	movf	i1___flmul@grs+3,w
 17548     03D0  00AB               	movwf	??i1___flmul+3
 17549     03D1  3018               	movlw	24
 17550     03D2                     u685_25:
 17551     03D2  36AB               	lsrf	??i1___flmul+3,f
 17552     03D3  0CAA               	rrf	??i1___flmul+2,f
 17553     03D4  0CA9               	rrf	??i1___flmul+1,f
 17554     03D5  0CA8               	rrf	??i1___flmul,f
 17555     03D6  0B89               	decfsz	9,f
 17556     03D7  2BD2               	goto	u685_25
 17557     03D8  0828               	movf	??i1___flmul,w
 17558     03D9  07B4               	addwf	i1___flmul@prod,f
 17559     03DA  0829               	movf	??i1___flmul+1,w
 17560     03DB  3DB5               	addwfc	i1___flmul@prod+1,f
 17561     03DC  082A               	movf	??i1___flmul+2,w
 17562     03DD  3DB6               	addwfc	i1___flmul@prod+2,f
 17563     03DE  082B               	movf	??i1___flmul+3,w
 17564     03DF  3DB7               	addwfc	i1___flmul@prod+3,f
 17565     03E0  3008               	movlw	8
 17566     03E1                     u686_25:
 17567     03E1  35AE               	lslf	i1___flmul@grs,f
 17568     03E2  0DAF               	rlf	i1___flmul@grs+1,f
 17569     03E3  0DB0               	rlf	i1___flmul@grs+2,f
 17570     03E4  0DB1               	rlf	i1___flmul@grs+3,f
 17571     03E5  0B89               	decfsz	9,f
 17572     03E6  2BE1               	goto	u686_25
 17573     03E7  0833               	movf	i1___flmul@bexp,w
 17574     03E8  0732               	addwf	i1___flmul@aexp,w
 17575     03E9  00A8               	movwf	??i1___flmul
 17576     03EA  01A9               	clrf	??i1___flmul+1
 17577     03EB  0DA9               	rlf	??i1___flmul+1,f
 17578     03EC  0828               	movf	??i1___flmul,w
 17579     03ED  3E82               	addlw	130
 17580     03EE  00B8               	movwf	i1___flmul@temp
 17581     03EF  30FF               	movlw	255
 17582     03F0  3D29               	addwfc	??i1___flmul+1,w
 17583     03F1  00B9               	movwf	i1___flmul@temp+1
 17584     03F2                     i1l5551:
 17585     03F2  1BB6               	btfsc	i1___flmul@prod+2,7
 17586     03F3  2C09               	goto	i1l5553
 17587     03F4  3001               	movlw	1
 17588     03F5                     u687_25:
 17589     03F5  35B4               	lslf	i1___flmul@prod,f
 17590     03F6  0DB5               	rlf	i1___flmul@prod+1,f
 17591     03F7  0DB6               	rlf	i1___flmul@prod+2,f
 17592     03F8  0DB7               	rlf	i1___flmul@prod+3,f
 17593     03F9  0B89               	decfsz	9,f
 17594     03FA  2BF5               	goto	u687_25
 17595     03FB  1BB1               	btfsc	i1___flmul@grs+3,7
 17596     03FC  1434               	bsf	i1___flmul@prod,0
 17597     03FD  3001               	movlw	1
 17598     03FE                     u689_25:
 17599     03FE  35AE               	lslf	i1___flmul@grs,f
 17600     03FF  0DAF               	rlf	i1___flmul@grs+1,f
 17601     0400  0DB0               	rlf	i1___flmul@grs+2,f
 17602     0401  0DB1               	rlf	i1___flmul@grs+3,f
 17603     0402  0B89               	decfsz	9,f
 17604     0403  2BFE               	goto	u689_25
 17605     0404  30FF               	movlw	255
 17606     0405  07B8               	addwf	i1___flmul@temp,f
 17607     0406  30FF               	movlw	255
 17608     0407  3DB9               	addwfc	i1___flmul@temp+1,f
 17609     0408  2BF2               	goto	i1l5551
 17610     0409                     i1l5553:
 17611     0409  01B2               	clrf	i1___flmul@aexp
 17612     040A  1FB1               	btfss	i1___flmul@grs+3,7
 17613     040B  2C22               	goto	i1l5563
 17614     040C  30FF               	movlw	255
 17615     040D  052E               	andwf	i1___flmul@grs,w
 17616     040E  00A8               	movwf	??i1___flmul
 17617     040F  30FF               	movlw	255
 17618     0410  052F               	andwf	i1___flmul@grs+1,w
 17619     0411  00A9               	movwf	??i1___flmul+1
 17620     0412  30FF               	movlw	255
 17621     0413  0530               	andwf	i1___flmul@grs+2,w
 17622     0414  00AA               	movwf	??i1___flmul+2
 17623     0415  307F               	movlw	127
 17624     0416  0531               	andwf	i1___flmul@grs+3,w
 17625     0417  00AB               	movwf	??i1___flmul+3
 17626     0418  082B               	movf	??i1___flmul+3,w
 17627     0419  042A               	iorwf	??i1___flmul+2,w
 17628     041A  0429               	iorwf	??i1___flmul+1,w
 17629     041B  0428               	iorwf	??i1___flmul,w
 17630     041C  1903               	skipnz
 17631     041D  1834               	btfsc	i1___flmul@prod,0
 17632     041E  2C20               	goto	i1l5559
 17633     041F  2C22               	goto	i1l5563
 17634     0420                     i1l5559:
 17635     0420  3001               	movlw	1
 17636     0421  00B2               	movwf	i1___flmul@aexp
 17637     0422                     i1l5563:
 17638     0422  0832               	movf	i1___flmul@aexp,w
 17639     0423  1903               	btfsc	3,2
 17640     0424  2C49               	goto	i1l5573
 17641     0425  3001               	movlw	1
 17642     0426  07B4               	addwf	i1___flmul@prod,f
 17643     0427  3000               	movlw	0
 17644     0428  3DB5               	addwfc	i1___flmul@prod+1,f
 17645     0429  3DB6               	addwfc	i1___flmul@prod+2,f
 17646     042A  3DB7               	addwfc	i1___flmul@prod+3,f
 17647     042B  1C37               	btfss	i1___flmul@prod+3,0
 17648     042C  2C49               	goto	i1l5573
 17649     042D  0834               	movf	i1___flmul@prod,w
 17650     042E  00A8               	movwf	??i1___flmul
 17651     042F  0835               	movf	i1___flmul@prod+1,w
 17652     0430  00A9               	movwf	??i1___flmul+1
 17653     0431  0836               	movf	i1___flmul@prod+2,w
 17654     0432  00AA               	movwf	??i1___flmul+2
 17655     0433  0837               	movf	i1___flmul@prod+3,w
 17656     0434  00AB               	movwf	??i1___flmul+3
 17657     0435  3001               	movlw	1
 17658     0436  00AC               	movwf	??i1___flmul+4
 17659     0437                     u696_25:
 17660     0437  37AB               	asrf	??i1___flmul+3,f
 17661     0438  0CAA               	rrf	??i1___flmul+2,f
 17662     0439  0CA9               	rrf	??i1___flmul+1,f
 17663     043A  0CA8               	rrf	??i1___flmul,f
 17664     043B  0BAC               	decfsz	??i1___flmul+4,f
 17665     043C  2C37               	goto	u696_25
 17666     043D  082B               	movf	??i1___flmul+3,w
 17667     043E  00B7               	movwf	i1___flmul@prod+3
 17668     043F  082A               	movf	??i1___flmul+2,w
 17669     0440  00B6               	movwf	i1___flmul@prod+2
 17670     0441  0829               	movf	??i1___flmul+1,w
 17671     0442  00B5               	movwf	i1___flmul@prod+1
 17672     0443  0828               	movf	??i1___flmul,w
 17673     0444  00B4               	movwf	i1___flmul@prod
 17674     0445  3001               	movlw	1
 17675     0446  07B8               	addwf	i1___flmul@temp,f
 17676     0447  3000               	movlw	0
 17677     0448  3DB9               	addwfc	i1___flmul@temp+1,f
 17678     0449                     i1l5573:
 17679     0449  0839               	movf	i1___flmul@temp+1,w
 17680     044A  3A80               	xorlw	128
 17681     044B  00A8               	movwf	??i1___flmul
 17682     044C  3080               	movlw	128
 17683     044D  0228               	subwf	??i1___flmul,w
 17684     044E  1D03               	skipz
 17685     044F  2C52               	goto	u697_25
 17686     0450  30FF               	movlw	255
 17687     0451  0238               	subwf	i1___flmul@temp,w
 17688     0452                     u697_25:
 17689     0452  1C03               	skipc
 17690     0453  2C5E               	goto	i1l5577
 17691     0454  307F               	movlw	127
 17692     0455  0020               	movlb	0	; select bank0
 17693     0456  00B7               	movwf	i1___flmul@prod+3
 17694     0457  3080               	movlw	128
 17695     0458  00B6               	movwf	i1___flmul@prod+2
 17696     0459  3000               	movlw	0
 17697     045A  00B5               	movwf	i1___flmul@prod+1
 17698     045B  3000               	movlw	0
 17699     045C  00B4               	movwf	i1___flmul@prod
 17700     045D  2C8A               	goto	i1l1590
 17701     045E                     i1l5577:
 17702     045E  0020               	movlb	0	; select bank0
 17703     045F  0839               	movf	i1___flmul@temp+1,w
 17704     0460  3A80               	xorlw	128
 17705     0461  00A8               	movwf	??i1___flmul
 17706     0462  3080               	movlw	128
 17707     0463  0228               	subwf	??i1___flmul,w
 17708     0464  1D03               	skipz
 17709     0465  2C68               	goto	u698_25
 17710     0466  3001               	movlw	1
 17711     0467  0238               	subwf	i1___flmul@temp,w
 17712     0468                     u698_25:
 17713     0468  1803               	skipnc
 17714     0469  2C75               	goto	i1l5583
 17715     046A  3000               	movlw	0
 17716     046B  0020               	movlb	0	; select bank0
 17717     046C  00B7               	movwf	i1___flmul@prod+3
 17718     046D  3000               	movlw	0
 17719     046E  00B6               	movwf	i1___flmul@prod+2
 17720     046F  3000               	movlw	0
 17721     0470  00B5               	movwf	i1___flmul@prod+1
 17722     0471  3000               	movlw	0
 17723     0472  00B4               	movwf	i1___flmul@prod
 17724     0473  01AD               	clrf	i1___flmul@sign
 17725     0474  2C8A               	goto	i1l1590
 17726     0475                     i1l5583:
 17727     0475  0020               	movlb	0	; select bank0
 17728     0476  0838               	movf	i1___flmul@temp,w
 17729     0477  00B3               	movwf	i1___flmul@bexp
 17730     0478  30FF               	movlw	255
 17731     0479  05B4               	andwf	i1___flmul@prod,f
 17732     047A  30FF               	movlw	255
 17733     047B  05B5               	andwf	i1___flmul@prod+1,f
 17734     047C  307F               	movlw	127
 17735     047D  05B6               	andwf	i1___flmul@prod+2,f
 17736     047E  3000               	movlw	0
 17737     047F  05B7               	andwf	i1___flmul@prod+3,f
 17738     0480  1833               	btfsc	i1___flmul@bexp,0
 17739     0481  17B6               	bsf	i1___flmul@prod+2,7
 17740     0482  0833               	movf	i1___flmul@bexp,w
 17741     0483  00A8               	movwf	??i1___flmul
 17742     0484  3001               	movlw	1
 17743     0485                     u700_25:
 17744     0485  36A8               	lsrf	??i1___flmul,f
 17745     0486  0B89               	decfsz	9,f
 17746     0487  2C85               	goto	u700_25
 17747     0488  0828               	movf	??i1___flmul,w
 17748     0489  00B7               	movwf	i1___flmul@prod+3
 17749     048A                     i1l1590:
 17750     048A  082D               	movf	i1___flmul@sign,w
 17751     048B  04B7               	iorwf	i1___flmul@prod+3,f
 17752     048C  0837               	movf	i1___flmul@prod+3,w
 17753     048D  00A3               	movwf	?i1___flmul+3
 17754     048E  0836               	movf	i1___flmul@prod+2,w
 17755     048F  00A2               	movwf	?i1___flmul+2
 17756     0490  0835               	movf	i1___flmul@prod+1,w
 17757     0491  00A1               	movwf	?i1___flmul+1
 17758     0492  0834               	movf	i1___flmul@prod,w
 17759     0493  00A0               	movwf	?i1___flmul
 17760     0494  0008               	return
 17761     0495                     __end_ofi1___flmul:
 17762                           
 17763                           	psect	text81
 17764     116C                     __ptext81:	
 17765 ;; *************** function i1__Umul8_16 *****************
 17766 ;; Defined at:
 17767 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;  multiplier      1    wreg     unsigned char 
 17770 ;;  multiplicand    1    0[COMMON] unsigned char 
 17771 ;; Auto vars:     Size  Location     Type
 17772 ;;  multiplier      1    8[COMMON] unsigned char 
 17773 ;;  word_mpld       2    6[COMMON] unsigned short 
 17774 ;;  product         2    4[COMMON] unsigned short 
 17775 ;; Return value:  Size  Location     Type
 17776 ;;                  2    0[COMMON] unsigned int 
 17777 ;; Registers used:
 17778 ;;		wreg, status,2, status,0
 17779 ;; Tracked objects:
 17780 ;;		On entry : 0/0
 17781 ;;		On exit  : 0/0
 17782 ;;		Unchanged: 0/0
 17783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17785 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17788 ;;Total ram usage:        9 bytes
 17789 ;; Hardware stack levels used: 1
 17790 ;; This function calls:
 17791 ;;		Nothing
 17792 ;; This function is called by:
 17793 ;;		i1___flmul
 17794 ;; This function uses a non-reentrant model
 17795 ;;
 17796                           
 17797     116C                     i1__Umul8_16:	
 17798                           ;psect for function i1__Umul8_16
 17799                           
 17800                           
 17801                           ;incstack = 0
 17802                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 17803                           ;i1__Umul8_16@multiplier stored from wreg
 17804     116C  00F8               	movwf	i1__Umul8_16@multiplier
 17805     116D  01F4               	clrf	i1__Umul8_16@product
 17806     116E  01F5               	clrf	i1__Umul8_16@product+1
 17807     116F  0870               	movf	i1__Umul8_16@multiplicand,w
 17808     1170  00F2               	movwf	??i1__Umul8_16
 17809     1171  01F3               	clrf	??i1__Umul8_16+1
 17810     1172  0872               	movf	??i1__Umul8_16,w
 17811     1173  00F6               	movwf	i1__Umul8_16@word_mpld
 17812     1174  0873               	movf	??i1__Umul8_16+1,w
 17813     1175  00F7               	movwf	i1__Umul8_16@word_mpld+1
 17814     1176                     i1l4943:
 17815     1176  1C78               	btfss	i1__Umul8_16@multiplier,0
 17816     1177  297C               	goto	i1l1597
 17817     1178  0876               	movf	i1__Umul8_16@word_mpld,w
 17818     1179  07F4               	addwf	i1__Umul8_16@product,f
 17819     117A  0877               	movf	i1__Umul8_16@word_mpld+1,w
 17820     117B  3DF5               	addwfc	i1__Umul8_16@product+1,f
 17821     117C                     i1l1597:
 17822     117C  3001               	movlw	1
 17823     117D                     u568_25:
 17824     117D  35F6               	lslf	i1__Umul8_16@word_mpld,f
 17825     117E  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 17826     117F  0B89               	decfsz	9,f
 17827     1180  297D               	goto	u568_25
 17828     1181  1003               	clrc
 17829     1182  0CF8               	rrf	i1__Umul8_16@multiplier,f
 17830     1183  0878               	movf	i1__Umul8_16@multiplier,w
 17831     1184  1D03               	btfss	3,2
 17832     1185  2976               	goto	i1l4943
 17833     1186  0875               	movf	i1__Umul8_16@product+1,w
 17834     1187  00F1               	movwf	?i1__Umul8_16+1
 17835     1188  0874               	movf	i1__Umul8_16@product,w
 17836     1189  00F0               	movwf	?i1__Umul8_16
 17837     118A  0008               	return
 17838     118B                     __end_ofi1__Umul8_16:
 17839                           
 17840                           	psect	text82
 17841     0E49                     __ptext82:	
 17842 ;; *************** function i1___fladd *****************
 17843 ;; Defined at:
 17844 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 17845 ;; Parameters:    Size  Location     Type
 17846 ;;  b               4   26[BANK0 ] unsigned int 
 17847 ;;  a               4   30[BANK0 ] unsigned int 
 17848 ;; Auto vars:     Size  Location     Type
 17849 ;;  grs             1   45[BANK0 ] unsigned char 
 17850 ;;  bexp            1   44[BANK0 ] unsigned char 
 17851 ;;  aexp            1   43[BANK0 ] unsigned char 
 17852 ;;  signs           1   42[BANK0 ] unsigned char 
 17853 ;; Return value:  Size  Location     Type
 17854 ;;                  4   26[BANK0 ] unsigned char 
 17855 ;; Registers used:
 17856 ;;		wreg, status,2, status,0
 17857 ;; Tracked objects:
 17858 ;;		On entry : 0/0
 17859 ;;		On exit  : 0/0
 17860 ;;		Unchanged: 0/0
 17861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17862 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17863 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17864 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17865 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17866 ;;Total ram usage:       20 bytes
 17867 ;; Hardware stack levels used: 1
 17868 ;; This function calls:
 17869 ;;		Nothing
 17870 ;; This function is called by:
 17871 ;;		_controller
 17872 ;; This function uses a non-reentrant model
 17873 ;;
 17874                           
 17875     0E49                     i1___fladd:	
 17876                           ;psect for function i1___fladd
 17877                           
 17878                           
 17879                           ;incstack = 0
 17880                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 17881     0E49  0020               	movlb	0	; select bank0
 17882     0E4A  083D               	movf	i1___fladd@b+3,w
 17883     0E4B  3980               	andlw	128
 17884     0E4C  00CA               	movwf	i1___fladd@signs
 17885     0E4D  353D               	lslf	i1___fladd@b+3,w
 17886     0E4E  00CC               	movwf	i1___fladd@bexp
 17887     0E4F  1BBC               	btfsc	i1___fladd@b+2,7
 17888     0E50  144C               	bsf	i1___fladd@bexp,0
 17889     0E51  084C               	movf	i1___fladd@bexp,w
 17890     0E52  1903               	btfsc	3,2
 17891     0E53  2E62               	goto	i1l5277
 17892     0E54  0A4C               	incf	i1___fladd@bexp,w
 17893     0E55  1D03               	btfss	3,2
 17894     0E56  2E5F               	goto	i1l5273
 17895     0E57  3000               	movlw	0
 17896     0E58  00BD               	movwf	i1___fladd@b+3
 17897     0E59  3000               	movlw	0
 17898     0E5A  00BC               	movwf	i1___fladd@b+2
 17899     0E5B  3000               	movlw	0
 17900     0E5C  00BB               	movwf	i1___fladd@b+1
 17901     0E5D  3000               	movlw	0
 17902     0E5E  00BA               	movwf	i1___fladd@b
 17903     0E5F                     i1l5273:
 17904     0E5F  17BC               	bsf	i1___fladd@b+2,7
 17905     0E60  01BD               	clrf	i1___fladd@b+3
 17906     0E61  2E6A               	goto	i1l5279
 17907     0E62                     i1l5277:
 17908     0E62  3000               	movlw	0
 17909     0E63  00BD               	movwf	i1___fladd@b+3
 17910     0E64  3000               	movlw	0
 17911     0E65  00BC               	movwf	i1___fladd@b+2
 17912     0E66  3000               	movlw	0
 17913     0E67  00BB               	movwf	i1___fladd@b+1
 17914     0E68  3000               	movlw	0
 17915     0E69  00BA               	movwf	i1___fladd@b
 17916     0E6A                     i1l5279:
 17917     0E6A  0841               	movf	i1___fladd@a+3,w
 17918     0E6B  3980               	andlw	128
 17919     0E6C  00CB               	movwf	i1___fladd@aexp
 17920     0E6D  084B               	movf	i1___fladd@aexp,w
 17921     0E6E  064A               	xorwf	i1___fladd@signs,w
 17922     0E6F  1D03               	btfss	3,2
 17923     0E70  174A               	bsf	i1___fladd@signs,6
 17924     0E71  3541               	lslf	i1___fladd@a+3,w
 17925     0E72  00CB               	movwf	i1___fladd@aexp
 17926     0E73  1BC0               	btfsc	i1___fladd@a+2,7
 17927     0E74  144B               	bsf	i1___fladd@aexp,0
 17928     0E75  084B               	movf	i1___fladd@aexp,w
 17929     0E76  1903               	btfsc	3,2
 17930     0E77  2E86               	goto	i1l5301
 17931     0E78  0A4B               	incf	i1___fladd@aexp,w
 17932     0E79  1D03               	btfss	3,2
 17933     0E7A  2E83               	goto	i1l5297
 17934     0E7B  3000               	movlw	0
 17935     0E7C  00C1               	movwf	i1___fladd@a+3
 17936     0E7D  3000               	movlw	0
 17937     0E7E  00C0               	movwf	i1___fladd@a+2
 17938     0E7F  3000               	movlw	0
 17939     0E80  00BF               	movwf	i1___fladd@a+1
 17940     0E81  3000               	movlw	0
 17941     0E82  00BE               	movwf	i1___fladd@a
 17942     0E83                     i1l5297:
 17943     0E83  17C0               	bsf	i1___fladd@a+2,7
 17944     0E84  01C1               	clrf	i1___fladd@a+3
 17945     0E85  2E8E               	goto	i1l1482
 17946     0E86                     i1l5301:
 17947     0E86  3000               	movlw	0
 17948     0E87  00C1               	movwf	i1___fladd@a+3
 17949     0E88  3000               	movlw	0
 17950     0E89  00C0               	movwf	i1___fladd@a+2
 17951     0E8A  3000               	movlw	0
 17952     0E8B  00BF               	movwf	i1___fladd@a+1
 17953     0E8C  3000               	movlw	0
 17954     0E8D  00BE               	movwf	i1___fladd@a
 17955     0E8E                     i1l1482:
 17956     0E8E  084C               	movf	i1___fladd@bexp,w
 17957     0E8F  024B               	subwf	i1___fladd@aexp,w
 17958     0E90  1803               	skipnc
 17959     0E91  2EB4               	goto	i1l5337
 17960     0E92  1F4A               	btfss	i1___fladd@signs,6
 17961     0E93  2E96               	goto	i1l5307
 17962     0E94  3080               	movlw	128
 17963     0E95  06CA               	xorwf	i1___fladd@signs,f
 17964     0E96                     i1l5307:
 17965     0E96  084C               	movf	i1___fladd@bexp,w
 17966     0E97  00CD               	movwf	i1___fladd@grs
 17967     0E98  084B               	movf	i1___fladd@aexp,w
 17968     0E99  00CC               	movwf	i1___fladd@bexp
 17969     0E9A  084D               	movf	i1___fladd@grs,w
 17970     0E9B  00CB               	movwf	i1___fladd@aexp
 17971     0E9C  083A               	movf	i1___fladd@b,w
 17972     0E9D  00CD               	movwf	i1___fladd@grs
 17973     0E9E  083E               	movf	i1___fladd@a,w
 17974     0E9F  00BA               	movwf	i1___fladd@b
 17975     0EA0  084D               	movf	i1___fladd@grs,w
 17976     0EA1  00BE               	movwf	i1___fladd@a
 17977     0EA2  083B               	movf	i1___fladd@b+1,w
 17978     0EA3  00CD               	movwf	i1___fladd@grs
 17979     0EA4  083F               	movf	i1___fladd@a+1,w
 17980     0EA5  00BB               	movwf	i1___fladd@b+1
 17981     0EA6  084D               	movf	i1___fladd@grs,w
 17982     0EA7  00BF               	movwf	i1___fladd@a+1
 17983     0EA8  083C               	movf	i1___fladd@b+2,w
 17984     0EA9  00CD               	movwf	i1___fladd@grs
 17985     0EAA  0840               	movf	i1___fladd@a+2,w
 17986     0EAB  00BC               	movwf	i1___fladd@b+2
 17987     0EAC  084D               	movf	i1___fladd@grs,w
 17988     0EAD  00C0               	movwf	i1___fladd@a+2
 17989     0EAE  083D               	movf	i1___fladd@b+3,w
 17990     0EAF  00CD               	movwf	i1___fladd@grs
 17991     0EB0  0841               	movf	i1___fladd@a+3,w
 17992     0EB1  00BD               	movwf	i1___fladd@b+3
 17993     0EB2  084D               	movf	i1___fladd@grs,w
 17994     0EB3  00C1               	movwf	i1___fladd@a+3
 17995     0EB4                     i1l5337:
 17996     0EB4  01CD               	clrf	i1___fladd@grs
 17997     0EB5  084B               	movf	i1___fladd@aexp,w
 17998     0EB6  00C2               	movwf	??i1___fladd
 17999     0EB7  01C3               	clrf	??i1___fladd+1
 18000     0EB8  0843               	movf	??i1___fladd+1,w
 18001     0EB9  00C5               	movwf	??i1___fladd+3
 18002     0EBA  084C               	movf	i1___fladd@bexp,w
 18003     0EBB  0242               	subwf	??i1___fladd,w
 18004     0EBC  00C4               	movwf	??i1___fladd+2
 18005     0EBD  1C03               	skipc
 18006     0EBE  03C5               	decf	??i1___fladd+3,f
 18007     0EBF  0845               	movf	??i1___fladd+3,w
 18008     0EC0  3A80               	xorlw	128
 18009     0EC1  00C6               	movwf	??i1___fladd+4
 18010     0EC2  3080               	movlw	128
 18011     0EC3  0246               	subwf	??i1___fladd+4,w
 18012     0EC4  1D03               	skipz
 18013     0EC5  2EC8               	goto	u637_25
 18014     0EC6  301A               	movlw	26
 18015     0EC7  0244               	subwf	??i1___fladd+2,w
 18016     0EC8                     u637_25:
 18017     0EC8  1C03               	skipc
 18018     0EC9  2EFA               	goto	i1l5355
 18019     0ECA  0020               	movlb	0	; select bank0
 18020     0ECB  083D               	movf	i1___fladd@b+3,w
 18021     0ECC  043C               	iorwf	i1___fladd@b+2,w
 18022     0ECD  043B               	iorwf	i1___fladd@b+1,w
 18023     0ECE  043A               	iorwf	i1___fladd@b,w
 18024     0ECF  1903               	btfsc	3,2
 18025     0ED0  2ED3               	goto	u638_20
 18026     0ED1  3001               	movlw	1
 18027     0ED2  2ED4               	goto	u639_20
 18028     0ED3                     u638_20:
 18029     0ED3  3000               	movlw	0
 18030     0ED4                     u639_20:
 18031     0ED4  00CD               	movwf	i1___fladd@grs
 18032     0ED5  3000               	movlw	0
 18033     0ED6  00BD               	movwf	i1___fladd@b+3
 18034     0ED7  3000               	movlw	0
 18035     0ED8  00BC               	movwf	i1___fladd@b+2
 18036     0ED9  3000               	movlw	0
 18037     0EDA  00BB               	movwf	i1___fladd@b+1
 18038     0EDB  3000               	movlw	0
 18039     0EDC  00BA               	movwf	i1___fladd@b
 18040     0EDD  084B               	movf	i1___fladd@aexp,w
 18041     0EDE  00CC               	movwf	i1___fladd@bexp
 18042     0EDF  2EFF               	goto	i1l1486
 18043     0EE0                     i1l1488:
 18044     0EE0  1C4D               	btfss	i1___fladd@grs,0
 18045     0EE1  2EEC               	goto	i1l5345
 18046     0EE2  084D               	movf	i1___fladd@grs,w
 18047     0EE3  00C2               	movwf	??i1___fladd
 18048     0EE4  3001               	movlw	1
 18049     0EE5                     u641_25:
 18050     0EE5  36C2               	lsrf	??i1___fladd,f
 18051     0EE6  0B89               	decfsz	9,f
 18052     0EE7  2EE5               	goto	u641_25
 18053     0EE8  0842               	movf	??i1___fladd,w
 18054     0EE9  3801               	iorlw	1
 18055     0EEA  00CD               	movwf	i1___fladd@grs
 18056     0EEB  2EEE               	goto	i1l5347
 18057     0EEC                     i1l5345:
 18058     0EEC  1003               	clrc
 18059     0EED  0CCD               	rrf	i1___fladd@grs,f
 18060     0EEE                     i1l5347:
 18061     0EEE  183A               	btfsc	i1___fladd@b,0
 18062     0EEF  17CD               	bsf	i1___fladd@grs,7
 18063     0EF0  3001               	movlw	1
 18064     0EF1  00C2               	movwf	??i1___fladd
 18065     0EF2                     u643_25:
 18066     0EF2  37BD               	asrf	i1___fladd@b+3,f
 18067     0EF3  0CBC               	rrf	i1___fladd@b+2,f
 18068     0EF4  0CBB               	rrf	i1___fladd@b+1,f
 18069     0EF5  0CBA               	rrf	i1___fladd@b,f
 18070     0EF6  0BC2               	decfsz	??i1___fladd& (0+127),f
 18071     0EF7  2EF2               	goto	u643_25
 18072     0EF8  3001               	movlw	1
 18073     0EF9  07CC               	addwf	i1___fladd@bexp,f
 18074     0EFA                     i1l5355:
 18075     0EFA  0020               	movlb	0	; select bank0
 18076     0EFB  084B               	movf	i1___fladd@aexp,w
 18077     0EFC  024C               	subwf	i1___fladd@bexp,w
 18078     0EFD  1C03               	skipc
 18079     0EFE  2EE0               	goto	i1l1488
 18080     0EFF                     i1l1486:
 18081     0EFF  1B4A               	btfsc	i1___fladd@signs,6
 18082     0F00  2F32               	goto	i1l5381
 18083     0F01  084C               	movf	i1___fladd@bexp,w
 18084     0F02  1D03               	btfss	3,2
 18085     0F03  2F0D               	goto	i1l5363
 18086     0F04  3000               	movlw	0
 18087     0F05  00BD               	movwf	?i1___fladd+3
 18088     0F06  3000               	movlw	0
 18089     0F07  00BC               	movwf	?i1___fladd+2
 18090     0F08  3000               	movlw	0
 18091     0F09  00BB               	movwf	?i1___fladd+1
 18092     0F0A  3000               	movlw	0
 18093     0F0B  00BA               	movwf	?i1___fladd
 18094     0F0C  0008               	return
 18095     0F0D                     i1l5363:
 18096     0F0D  083E               	movf	i1___fladd@a,w
 18097     0F0E  07BA               	addwf	i1___fladd@b,f
 18098     0F0F  083F               	movf	i1___fladd@a+1,w
 18099     0F10  3DBB               	addwfc	i1___fladd@b+1,f
 18100     0F11  0840               	movf	i1___fladd@a+2,w
 18101     0F12  3DBC               	addwfc	i1___fladd@b+2,f
 18102     0F13  0841               	movf	i1___fladd@a+3,w
 18103     0F14  3DBD               	addwfc	i1___fladd@b+3,f
 18104     0F15  1C3D               	btfss	i1___fladd@b+3,0
 18105     0F16  2FAB               	goto	i1l5417
 18106     0F17  1C4D               	btfss	i1___fladd@grs,0
 18107     0F18  2F23               	goto	i1l5371
 18108     0F19  084D               	movf	i1___fladd@grs,w
 18109     0F1A  00C2               	movwf	??i1___fladd
 18110     0F1B  3001               	movlw	1
 18111     0F1C                     u649_25:
 18112     0F1C  36C2               	lsrf	??i1___fladd,f
 18113     0F1D  0B89               	decfsz	9,f
 18114     0F1E  2F1C               	goto	u649_25
 18115     0F1F  0842               	movf	??i1___fladd,w
 18116     0F20  3801               	iorlw	1
 18117     0F21  00CD               	movwf	i1___fladd@grs
 18118     0F22  2F25               	goto	i1l5373
 18119     0F23                     i1l5371:
 18120     0F23  1003               	clrc
 18121     0F24  0CCD               	rrf	i1___fladd@grs,f
 18122     0F25                     i1l5373:
 18123     0F25  183A               	btfsc	i1___fladd@b,0
 18124     0F26  17CD               	bsf	i1___fladd@grs,7
 18125     0F27  3001               	movlw	1
 18126     0F28  00C2               	movwf	??i1___fladd
 18127     0F29                     u651_25:
 18128     0F29  37BD               	asrf	i1___fladd@b+3,f
 18129     0F2A  0CBC               	rrf	i1___fladd@b+2,f
 18130     0F2B  0CBB               	rrf	i1___fladd@b+1,f
 18131     0F2C  0CBA               	rrf	i1___fladd@b,f
 18132     0F2D  0BC2               	decfsz	??i1___fladd& (0+127),f
 18133     0F2E  2F29               	goto	u651_25
 18134     0F2F  3001               	movlw	1
 18135     0F30  07CC               	addwf	i1___fladd@bexp,f
 18136     0F31  2FAB               	goto	i1l5417
 18137     0F32                     i1l5381:
 18138     0F32  083D               	movf	i1___fladd@b+3,w
 18139     0F33  3A80               	xorlw	128
 18140     0F34  00C2               	movwf	??i1___fladd
 18141     0F35  0841               	movf	i1___fladd@a+3,w
 18142     0F36  3A80               	xorlw	128
 18143     0F37  0242               	subwf	??i1___fladd,w
 18144     0F38  1D03               	skipz
 18145     0F39  2F44               	goto	u652_23
 18146     0F3A  0840               	movf	i1___fladd@a+2,w
 18147     0F3B  023C               	subwf	i1___fladd@b+2,w
 18148     0F3C  1D03               	skipz
 18149     0F3D  2F44               	goto	u652_23
 18150     0F3E  083F               	movf	i1___fladd@a+1,w
 18151     0F3F  023B               	subwf	i1___fladd@b+1,w
 18152     0F40  1D03               	skipz
 18153     0F41  2F44               	goto	u652_23
 18154     0F42  083E               	movf	i1___fladd@a,w
 18155     0F43  023A               	subwf	i1___fladd@b,w
 18156     0F44                     u652_23:
 18157     0F44  1803               	skipnc
 18158     0F45  2F79               	goto	i1l5393
 18159     0F46  30FF               	movlw	255
 18160     0F47  00C2               	movwf	??i1___fladd
 18161     0F48  30FF               	movlw	255
 18162     0F49  00C3               	movwf	??i1___fladd+1
 18163     0F4A  30FF               	movlw	255
 18164     0F4B  00C4               	movwf	??i1___fladd+2
 18165     0F4C  30FF               	movlw	255
 18166     0F4D  00C5               	movwf	??i1___fladd+3
 18167     0F4E  083A               	movf	i1___fladd@b,w
 18168     0F4F  023E               	subwf	i1___fladd@a,w
 18169     0F50  00C6               	movwf	??i1___fladd+4
 18170     0F51  083B               	movf	i1___fladd@b+1,w
 18171     0F52  3B3F               	subwfb	i1___fladd@a+1,w
 18172     0F53  00C7               	movwf	??i1___fladd+5
 18173     0F54  083C               	movf	i1___fladd@b+2,w
 18174     0F55  3B40               	subwfb	i1___fladd@a+2,w
 18175     0F56  00C8               	movwf	??i1___fladd+6
 18176     0F57  083D               	movf	i1___fladd@b+3,w
 18177     0F58  3B41               	subwfb	i1___fladd@a+3,w
 18178     0F59  00C9               	movwf	??i1___fladd+7
 18179     0F5A  0846               	movf	??i1___fladd+4,w
 18180     0F5B  07C2               	addwf	??i1___fladd,f
 18181     0F5C  0847               	movf	??i1___fladd+5,w
 18182     0F5D  3DC3               	addwfc	??i1___fladd+1,f
 18183     0F5E  0848               	movf	??i1___fladd+6,w
 18184     0F5F  3DC4               	addwfc	??i1___fladd+2,f
 18185     0F60  0849               	movf	??i1___fladd+7,w
 18186     0F61  3DC5               	addwfc	??i1___fladd+3,f
 18187     0F62  0845               	movf	??i1___fladd+3,w
 18188     0F63  00BD               	movwf	i1___fladd@b+3
 18189     0F64  0844               	movf	??i1___fladd+2,w
 18190     0F65  00BC               	movwf	i1___fladd@b+2
 18191     0F66  0843               	movf	??i1___fladd+1,w
 18192     0F67  00BB               	movwf	i1___fladd@b+1
 18193     0F68  0842               	movf	??i1___fladd,w
 18194     0F69  00BA               	movwf	i1___fladd@b
 18195     0F6A  3080               	movlw	128
 18196     0F6B  06CA               	xorwf	i1___fladd@signs,f
 18197     0F6C  034D               	decf	i1___fladd@grs,w
 18198     0F6D  3AFF               	xorlw	255
 18199     0F6E  00CD               	movwf	i1___fladd@grs
 18200     0F6F  084D               	movf	i1___fladd@grs,w
 18201     0F70  1D03               	btfss	3,2
 18202     0F71  2F81               	goto	i1l1503
 18203     0F72  3001               	movlw	1
 18204     0F73  07BA               	addwf	i1___fladd@b,f
 18205     0F74  3000               	movlw	0
 18206     0F75  3DBB               	addwfc	i1___fladd@b+1,f
 18207     0F76  3DBC               	addwfc	i1___fladd@b+2,f
 18208     0F77  3DBD               	addwfc	i1___fladd@b+3,f
 18209     0F78  2F81               	goto	i1l1503
 18210     0F79                     i1l5393:
 18211     0F79  083E               	movf	i1___fladd@a,w
 18212     0F7A  02BA               	subwf	i1___fladd@b,f
 18213     0F7B  083F               	movf	i1___fladd@a+1,w
 18214     0F7C  3BBB               	subwfb	i1___fladd@b+1,f
 18215     0F7D  0840               	movf	i1___fladd@a+2,w
 18216     0F7E  3BBC               	subwfb	i1___fladd@b+2,f
 18217     0F7F  0841               	movf	i1___fladd@a+3,w
 18218     0F80  3BBD               	subwfb	i1___fladd@b+3,f
 18219     0F81                     i1l1503:
 18220     0F81  083D               	movf	i1___fladd@b+3,w
 18221     0F82  043C               	iorwf	i1___fladd@b+2,w
 18222     0F83  043B               	iorwf	i1___fladd@b+1,w
 18223     0F84  043A               	iorwf	i1___fladd@b,w
 18224     0F85  1D03               	skipz
 18225     0F86  2FA9               	goto	i1l5415
 18226     0F87  084D               	movf	i1___fladd@grs,w
 18227     0F88  1D03               	btfss	3,2
 18228     0F89  2FA9               	goto	i1l5415
 18229     0F8A  3000               	movlw	0
 18230     0F8B  00BD               	movwf	?i1___fladd+3
 18231     0F8C  3000               	movlw	0
 18232     0F8D  00BC               	movwf	?i1___fladd+2
 18233     0F8E  3000               	movlw	0
 18234     0F8F  00BB               	movwf	?i1___fladd+1
 18235     0F90  3000               	movlw	0
 18236     0F91  00BA               	movwf	?i1___fladd
 18237     0F92  0008               	return
 18238     0F93                     i1l5401:
 18239     0F93  3001               	movlw	1
 18240     0F94                     u656_25:
 18241     0F94  35BA               	lslf	i1___fladd@b,f
 18242     0F95  0DBB               	rlf	i1___fladd@b+1,f
 18243     0F96  0DBC               	rlf	i1___fladd@b+2,f
 18244     0F97  0DBD               	rlf	i1___fladd@b+3,f
 18245     0F98  0B89               	decfsz	9,f
 18246     0F99  2F94               	goto	u656_25
 18247     0F9A  1BCD               	btfsc	i1___fladd@grs,7
 18248     0F9B  143A               	bsf	i1___fladd@b,0
 18249     0F9C  1C4D               	btfss	i1___fladd@grs,0
 18250     0F9D  2FA2               	goto	i1l5409
 18251     0F9E  1403               	setc
 18252     0F9F  0D4D               	rlf	i1___fladd@grs,w
 18253     0FA0  00CD               	movwf	i1___fladd@grs
 18254     0FA1  2FA4               	goto	i1l5411
 18255     0FA2                     i1l5409:
 18256     0FA2  1003               	clrc
 18257     0FA3  0DCD               	rlf	i1___fladd@grs,f
 18258     0FA4                     i1l5411:
 18259     0FA4  084C               	movf	i1___fladd@bexp,w
 18260     0FA5  1903               	btfsc	3,2
 18261     0FA6  2FA9               	goto	i1l5415
 18262     0FA7  3001               	movlw	1
 18263     0FA8  02CC               	subwf	i1___fladd@bexp,f
 18264     0FA9                     i1l5415:
 18265     0FA9  1FBC               	btfss	i1___fladd@b+2,7
 18266     0FAA  2F93               	goto	i1l5401
 18267     0FAB                     i1l5417:
 18268     0FAB  01CB               	clrf	i1___fladd@aexp
 18269     0FAC  1FCD               	btfss	i1___fladd@grs,7
 18270     0FAD  2FB6               	goto	i1l5427
 18271     0FAE  084D               	movf	i1___fladd@grs,w
 18272     0FAF  397F               	andlw	127
 18273     0FB0  1903               	btfsc	3,2
 18274     0FB1  183A               	btfsc	i1___fladd@b,0
 18275     0FB2  2FB4               	goto	i1l5423
 18276     0FB3  2FB6               	goto	i1l5427
 18277     0FB4                     i1l5423:
 18278     0FB4  3001               	movlw	1
 18279     0FB5  00CB               	movwf	i1___fladd@aexp
 18280     0FB6                     i1l5427:
 18281     0FB6  084B               	movf	i1___fladd@aexp,w
 18282     0FB7  1903               	btfsc	3,2
 18283     0FB8  2FDE               	goto	i1l1516
 18284     0FB9  3001               	movlw	1
 18285     0FBA  07BA               	addwf	i1___fladd@b,f
 18286     0FBB  3000               	movlw	0
 18287     0FBC  3DBB               	addwfc	i1___fladd@b+1,f
 18288     0FBD  3DBC               	addwfc	i1___fladd@b+2,f
 18289     0FBE  3DBD               	addwfc	i1___fladd@b+3,f
 18290     0FBF  1C3D               	btfss	i1___fladd@b+3,0
 18291     0FC0  2FDE               	goto	i1l1516
 18292     0FC1  083A               	movf	i1___fladd@b,w
 18293     0FC2  00C2               	movwf	??i1___fladd
 18294     0FC3  083B               	movf	i1___fladd@b+1,w
 18295     0FC4  00C3               	movwf	??i1___fladd+1
 18296     0FC5  083C               	movf	i1___fladd@b+2,w
 18297     0FC6  00C4               	movwf	??i1___fladd+2
 18298     0FC7  083D               	movf	i1___fladd@b+3,w
 18299     0FC8  00C5               	movwf	??i1___fladd+3
 18300     0FC9  3001               	movlw	1
 18301     0FCA  00C6               	movwf	??i1___fladd+4
 18302     0FCB                     u666_25:
 18303     0FCB  37C5               	asrf	??i1___fladd+3,f
 18304     0FCC  0CC4               	rrf	??i1___fladd+2,f
 18305     0FCD  0CC3               	rrf	??i1___fladd+1,f
 18306     0FCE  0CC2               	rrf	??i1___fladd,f
 18307     0FCF  0BC6               	decfsz	??i1___fladd+4,f
 18308     0FD0  2FCB               	goto	u666_25
 18309     0FD1  0845               	movf	??i1___fladd+3,w
 18310     0FD2  00BD               	movwf	i1___fladd@b+3
 18311     0FD3  0844               	movf	??i1___fladd+2,w
 18312     0FD4  00BC               	movwf	i1___fladd@b+2
 18313     0FD5  0843               	movf	??i1___fladd+1,w
 18314     0FD6  00BB               	movwf	i1___fladd@b+1
 18315     0FD7  0842               	movf	??i1___fladd,w
 18316     0FD8  00BA               	movwf	i1___fladd@b
 18317     0FD9  0A4C               	incf	i1___fladd@bexp,w
 18318     0FDA  1903               	btfsc	3,2
 18319     0FDB  2FDE               	goto	i1l1516
 18320     0FDC  3001               	movlw	1
 18321     0FDD  07CC               	addwf	i1___fladd@bexp,f
 18322     0FDE                     i1l1516:
 18323     0FDE  0A4C               	incf	i1___fladd@bexp,w
 18324     0FDF  1D03               	btfss	3,2
 18325     0FE0  084C               	movf	i1___fladd@bexp,w
 18326     0FE1  1D03               	btfss	3,2
 18327     0FE2  2FEE               	goto	i1l5445
 18328     0FE3  3000               	movlw	0
 18329     0FE4  00BD               	movwf	i1___fladd@b+3
 18330     0FE5  3000               	movlw	0
 18331     0FE6  00BC               	movwf	i1___fladd@b+2
 18332     0FE7  3000               	movlw	0
 18333     0FE8  00BB               	movwf	i1___fladd@b+1
 18334     0FE9  3000               	movlw	0
 18335     0FEA  00BA               	movwf	i1___fladd@b
 18336     0FEB  084C               	movf	i1___fladd@bexp,w
 18337     0FEC  1903               	btfsc	3,2
 18338     0FED  01CA               	clrf	i1___fladd@signs
 18339     0FEE                     i1l5445:
 18340     0FEE  1C4C               	btfss	i1___fladd@bexp,0
 18341     0FEF  2FF2               	goto	i1l5449
 18342     0FF0  17BC               	bsf	i1___fladd@b+2,7
 18343     0FF1  2FF4               	goto	i1l1524
 18344     0FF2                     i1l5449:
 18345     0FF2  307F               	movlw	127
 18346     0FF3  05BC               	andwf	i1___fladd@b+2,f
 18347     0FF4                     i1l1524:
 18348     0FF4  084C               	movf	i1___fladd@bexp,w
 18349     0FF5  00C2               	movwf	??i1___fladd
 18350     0FF6  3001               	movlw	1
 18351     0FF7                     u672_25:
 18352     0FF7  36C2               	lsrf	??i1___fladd,f
 18353     0FF8  0B89               	decfsz	9,f
 18354     0FF9  2FF7               	goto	u672_25
 18355     0FFA  0842               	movf	??i1___fladd,w
 18356     0FFB  00BD               	movwf	i1___fladd@b+3
 18357     0FFC  1FCA               	btfss	i1___fladd@signs,7
 18358     0FFD  0008               	return
 18359     0FFE  17BD               	bsf	i1___fladd@b+3,7
 18360     0FFF  0008               	return
 18361     1000                     __end_ofi1___fladd:
 18362                           
 18363                           	psect	text83
 18364     1082                     __ptext83:	
 18365 ;; *************** function _pwm_fan_LoadDutyValue *****************
 18366 ;; Defined at:
 18367 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm5.c"
 18368 ;; Parameters:    Size  Location     Type
 18369 ;;  dutyValue       2    0[COMMON] unsigned short 
 18370 ;; Auto vars:     Size  Location     Type
 18371 ;;		None
 18372 ;; Return value:  Size  Location     Type
 18373 ;;                  1    wreg      void 
 18374 ;; Registers used:
 18375 ;;		wreg, status,2, status,0
 18376 ;; Tracked objects:
 18377 ;;		On entry : 0/0
 18378 ;;		On exit  : 0/0
 18379 ;;		Unchanged: 0/0
 18380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18385 ;;Total ram usage:        4 bytes
 18386 ;; Hardware stack levels used: 1
 18387 ;; This function calls:
 18388 ;;		Nothing
 18389 ;; This function is called by:
 18390 ;;		_controller
 18391 ;; This function uses a non-reentrant model
 18392 ;;
 18393                           
 18394     1082                     _pwm_fan_LoadDutyValue:	
 18395                           ;psect for function _pwm_fan_LoadDutyValue
 18396                           
 18397                           
 18398                           ;mcc_generated_files/pwm/src/pwm5.c: 63:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 64:  {;mcc_generated_files/pwm/src/pwm5.c: 66:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 18399                           
 18400                           ;incstack = 0
 18401                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 18402     1082  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 18403     1083  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 18404     1084  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 18405     1085  00F2               	movwf	??_pwm_fan_LoadDutyValue
 18406     1086  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 18407     1087  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 18408     1088  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 18409     1089  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 18410     108A  0872               	movf	??_pwm_fan_LoadDutyValue,w
 18411     108B  002C               	movlb	12	; select bank12
 18412     108C  0098               	movwf	24	;volatile
 18413                           
 18414                           ;mcc_generated_files/pwm/src/pwm5.c: 69:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 18415     108D  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 18416     108E  3903               	andlw	3
 18417     108F  00F2               	movwf	??_pwm_fan_LoadDutyValue
 18418     1090  3006               	movlw	6
 18419     1091                     u570_25:
 18420     1091  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 18421     1092  0B89               	decfsz	9,f
 18422     1093  2891               	goto	u570_25
 18423     1094  0872               	movf	??_pwm_fan_LoadDutyValue,w
 18424     1095  0097               	movwf	23	;volatile
 18425     1096  0008               	return
 18426     1097                     __end_of_pwm_fan_LoadDutyValue:
 18427                           
 18428                           	psect	text84
 18429     1FAF                     __ptext84:	
 18430 ;; *************** function _TMR2_ISR *****************
 18431 ;; Defined at:
 18432 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 18433 ;; Parameters:    Size  Location     Type
 18434 ;;		None
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;		None
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      void 
 18439 ;; Registers used:
 18440 ;;		wreg, status,2, status,0, pclath, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18450 ;;Total ram usage:        0 bytes
 18451 ;; Hardware stack levels used: 1
 18452 ;; Hardware stack levels required when called: 1
 18453 ;; This function calls:
 18454 ;;		NULL
 18455 ;;		_TMR2_DefaultPeriodMatchCallback
 18456 ;; This function is called by:
 18457 ;;		_INTERRUPT_InterruptManager
 18458 ;; This function uses a non-reentrant model
 18459 ;;
 18460                           
 18461     1FAF                     _TMR2_ISR:	
 18462                           ;psect for function _TMR2_ISR
 18463                           
 18464                           
 18465                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 18466                           
 18467                           ;incstack = 0
 18468                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 18469     1FAF  0022               	movlb	2	; select bank2
 18470     1FB0  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 18471     1FB1  0463               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 18472     1FB2  1903               	btfsc	3,2
 18473     1FB3  2FB9               	goto	i1l5989
 18474                           
 18475                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 18476     1FB4  0863               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 18477     1FB5  008A               	movwf	10
 18478     1FB6  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 18479     1FB7  000A               	callw
 18480     1FB8  319F               	pagesel	$
 18481     1FB9                     i1l5989:
 18482                           
 18483                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 18484     1FB9  0020               	movlb	0	; select bank0
 18485     1FBA  1091               	bcf	17,1	;volatile
 18486     1FBB  0008               	return
 18487     1FBC                     __end_of_TMR2_ISR:
 18488                           
 18489                           	psect	text85
 18490     0002                     __ptext85:	
 18491 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 18492 ;; Defined at:
 18493 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;		None
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;		None
 18498 ;; Return value:  Size  Location     Type
 18499 ;;                  1    wreg      void 
 18500 ;; Registers used:
 18501 ;;		None
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/0
 18504 ;;		On exit  : 0/0
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18511 ;;Total ram usage:        0 bytes
 18512 ;; Hardware stack levels used: 1
 18513 ;; This function calls:
 18514 ;;		Nothing
 18515 ;; This function is called by:
 18516 ;;		_TMR2_Initialize
 18517 ;;		_TMR2_ISR
 18518 ;; This function uses a non-reentrant model
 18519 ;;
 18520                           
 18521     0002                     _TMR2_DefaultPeriodMatchCallback:	
 18522                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 18523                           
 18524                           
 18525                           ;incstack = 0
 18526                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 18527     0002  0008               	return
 18528     0003                     __end_of_TMR2_DefaultPeriodMatchCallback:
 18529                           
 18530                           	psect	text86
 18531     10C4                     __ptext86:	
 18532 ;; *************** function _EUSART_TransmitISR *****************
 18533 ;; Defined at:
 18534 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 18535 ;; Parameters:    Size  Location     Type
 18536 ;;		None
 18537 ;; Auto vars:     Size  Location     Type
 18538 ;;  tempTxTail      1    0[COMMON] unsigned char 
 18539 ;; Return value:  Size  Location     Type
 18540 ;;                  1    wreg      void 
 18541 ;; Registers used:
 18542 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18543 ;; Tracked objects:
 18544 ;;		On entry : 0/0
 18545 ;;		On exit  : 0/0
 18546 ;;		Unchanged: 0/0
 18547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;Total ram usage:        1 bytes
 18553 ;; Hardware stack levels used: 1
 18554 ;; This function calls:
 18555 ;;		Nothing
 18556 ;; This function is called by:
 18557 ;;		_EUSART_Initialize
 18558 ;;		_INTERRUPT_InterruptManager
 18559 ;; This function uses a non-reentrant model
 18560 ;;
 18561                           
 18562     10C4                     _EUSART_TransmitISR:	
 18563                           ;psect for function _EUSART_TransmitISR
 18564                           
 18565                           
 18566                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 18567                           
 18568                           ;incstack = 0
 18569                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18570     10C4  3008               	movlw	8
 18571     10C5  0020               	movlb	0	; select bank0
 18572     10C6  0269               	subwf	_eusartTxBufferRemaining,w	;volatile
 18573     10C7  1803               	skipnc
 18574     10C8  28DB               	goto	i1l727
 18575                           
 18576                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 18577     10C9  086A               	movf	_eusartTxTail,w
 18578     10CA  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 18579     10CB  0086               	movwf	6
 18580     10CC  3001               	movlw	1	; select bank2/3
 18581     10CD  0087               	movwf	7
 18582     10CE  0801               	movf	1,w
 18583     10CF  0023               	movlb	3	; select bank3
 18584     10D0  009A               	movwf	26	;volatile
 18585                           
 18586                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 18587     10D1  0020               	movlb	0	; select bank0
 18588     10D2  086A               	movf	_eusartTxTail,w	;volatile
 18589     10D3  3E01               	addlw	1
 18590     10D4  3907               	andlw	7
 18591     10D5  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 18592                           
 18593                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 18594     10D6  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 18595     10D7  00EA               	movwf	_eusartTxTail	;volatile
 18596                           
 18597                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 18598     10D8  3001               	movlw	1
 18599     10D9  07E9               	addwf	_eusartTxBufferRemaining,f	;volatile
 18600                           
 18601                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 18602     10DA  0008               	return
 18603     10DB                     i1l727:	
 18604                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 18605                           
 18606                           
 18607                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 18608     10DB  0021               	movlb	1	; select bank1
 18609     10DC  1211               	bcf	17,4	;volatile
 18610     10DD  0008               	return
 18611     10DE                     __end_of_EUSART_TransmitISR:
 18612                           
 18613                           	psect	text87
 18614     07B8                     __ptext87:	
 18615 ;; *************** function _EUSART_ReceiveISR *****************
 18616 ;; Defined at:
 18617 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 18618 ;; Parameters:    Size  Location     Type
 18619 ;;		None
 18620 ;; Auto vars:     Size  Location     Type
 18621 ;;  tempRxHead      1    1[COMMON] unsigned char 
 18622 ;;  regValue        1    0[COMMON] unsigned char 
 18623 ;; Return value:  Size  Location     Type
 18624 ;;                  1    wreg      void 
 18625 ;; Registers used:
 18626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18627 ;; Tracked objects:
 18628 ;;		On entry : 0/0
 18629 ;;		On exit  : 0/0
 18630 ;;		Unchanged: 0/0
 18631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18636 ;;Total ram usage:        2 bytes
 18637 ;; Hardware stack levels used: 1
 18638 ;; Hardware stack levels required when called: 1
 18639 ;; This function calls:
 18640 ;;		NULL
 18641 ;;		_EUSART_DefaultFramingErrorCallback
 18642 ;;		_EUSART_DefaultOverrunErrorCallback
 18643 ;; This function is called by:
 18644 ;;		_EUSART_Initialize
 18645 ;;		_INTERRUPT_InterruptManager
 18646 ;; This function uses a non-reentrant model
 18647 ;;
 18648                           
 18649     07B8                     _EUSART_ReceiveISR:	
 18650                           ;psect for function _EUSART_ReceiveISR
 18651                           
 18652                           
 18653                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 18654                           
 18655                           ;incstack = 0
 18656                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18657     07B8  0020               	movlb	0	; select bank0
 18658     07B9  3568               	lslf	_eusartRxHead,w	;volatile
 18659     07BA  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 18660     07BB  0086               	movwf	6
 18661     07BC  3001               	movlw	1	; select bank2/3
 18662     07BD  0087               	movwf	7
 18663     07BE  3000               	movlw	0
 18664     07BF  3FC0               	movwi [0]fsr1
 18665     07C0  3FC1               	movwi [1]fsr1
 18666                           
 18667                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 18668     07C1  0023               	movlb	3	; select bank3
 18669     07C2  1C9D               	btfss	29,1	;volatile
 18670     07C3  2FD4               	goto	i1l6027
 18671                           
 18672                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 18673     07C4  0020               	movlb	0	; select bank0
 18674     07C5  3568               	lslf	_eusartRxHead,w	;volatile
 18675     07C6  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 18676     07C7  0086               	movwf	6
 18677     07C8  3001               	movlw	1	; select bank2/3
 18678     07C9  0087               	movwf	7
 18679     07CA  1501               	bsf	1,2
 18680                           
 18681                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 18682     07CB  085D               	movf	_EUSART_OverrunErrorHandler,w
 18683     07CC  045E               	iorwf	_EUSART_OverrunErrorHandler+1,w
 18684     07CD  1903               	btfsc	3,2
 18685     07CE  2FD4               	goto	i1l6027
 18686                           
 18687                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 18688     07CF  085E               	movf	_EUSART_OverrunErrorHandler+1,w
 18689     07D0  008A               	movwf	10
 18690     07D1  085D               	movf	_EUSART_OverrunErrorHandler,w
 18691     07D2  000A               	callw
 18692     07D3  3187               	pagesel	$
 18693     07D4                     i1l6027:
 18694                           
 18695                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 18696     07D4  0023               	movlb	3	; select bank3
 18697     07D5  1D1D               	btfss	29,2	;volatile
 18698     07D6  2FE7               	goto	i1l6035
 18699                           
 18700                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 18701     07D7  0020               	movlb	0	; select bank0
 18702     07D8  3568               	lslf	_eusartRxHead,w	;volatile
 18703     07D9  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 18704     07DA  0086               	movwf	6
 18705     07DB  3001               	movlw	1	; select bank2/3
 18706     07DC  0087               	movwf	7
 18707     07DD  1481               	bsf	1,1
 18708                           
 18709                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 18710     07DE  085F               	movf	_EUSART_FramingErrorHandler,w
 18711     07DF  0460               	iorwf	_EUSART_FramingErrorHandler+1,w
 18712     07E0  1903               	btfsc	3,2
 18713     07E1  2FE7               	goto	i1l6035
 18714                           
 18715                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 18716     07E2  0860               	movf	_EUSART_FramingErrorHandler+1,w
 18717     07E3  008A               	movwf	10
 18718     07E4  085F               	movf	_EUSART_FramingErrorHandler,w
 18719     07E5  000A               	callw
 18720     07E6  3187               	pagesel	$
 18721     07E7                     i1l6035:
 18722                           
 18723                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 18724     07E7  0023               	movlb	3	; select bank3
 18725     07E8  0819               	movf	25,w	;volatile
 18726     07E9  00F0               	movwf	EUSART_ReceiveISR@regValue
 18727                           
 18728                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 18729     07EA  0020               	movlb	0	; select bank0
 18730     07EB  0868               	movf	_eusartRxHead,w	;volatile
 18731     07EC  3E01               	addlw	1
 18732     07ED  3907               	andlw	7
 18733     07EE  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 18734                           
 18735                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 18736     07EF  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 18737     07F0  0667               	xorwf	_eusartRxTail,w	;volatile
 18738     07F1  1903               	btfsc	3,2
 18739     07F2  0008               	return
 18740                           
 18741                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 18742     07F3  0868               	movf	_eusartRxHead,w
 18743     07F4  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 18744     07F5  0086               	movwf	6
 18745     07F6  3001               	movlw	1	; select bank2/3
 18746     07F7  0087               	movwf	7
 18747     07F8  0870               	movf	EUSART_ReceiveISR@regValue,w
 18748     07F9  0081               	movwf	1
 18749                           
 18750                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 18751     07FA  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 18752     07FB  00E8               	movwf	_eusartRxHead	;volatile
 18753                           
 18754                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 18755     07FC  3001               	movlw	1
 18756     07FD  07E6               	addwf	_eusartRxCount,f	;volatile
 18757     07FE  0008               	return
 18758     07FF                     __end_of_EUSART_ReceiveISR:
 18759                           
 18760                           	psect	text88
 18761     1EAC                     __ptext88:	
 18762 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 18763 ;; Defined at:
 18764 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 18765 ;; Parameters:    Size  Location     Type
 18766 ;;		None
 18767 ;; Auto vars:     Size  Location     Type
 18768 ;;		None
 18769 ;; Return value:  Size  Location     Type
 18770 ;;                  1    wreg      void 
 18771 ;; Registers used:
 18772 ;;		None
 18773 ;; Tracked objects:
 18774 ;;		On entry : 0/0
 18775 ;;		On exit  : 0/0
 18776 ;;		Unchanged: 0/0
 18777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18782 ;;Total ram usage:        0 bytes
 18783 ;; Hardware stack levels used: 1
 18784 ;; This function calls:
 18785 ;;		Nothing
 18786 ;; This function is called by:
 18787 ;;		_EUSART_Initialize
 18788 ;;		_EUSART_ReceiveISR
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792     1EAC                     _EUSART_DefaultOverrunErrorCallback:	
 18793                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 18794                           
 18795                           
 18796                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 18797                           
 18798                           ;incstack = 0
 18799                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 18800     1EAC  0023               	movlb	3	; select bank3
 18801     1EAD  121D               	bcf	29,4	;volatile
 18802                           
 18803                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 18804     1EAE  161D               	bsf	29,4	;volatile
 18805     1EAF  0008               	return
 18806     1EB0                     __end_of_EUSART_DefaultOverrunErrorCallback:
 18807                           
 18808                           	psect	text89
 18809     0800                     __ptext89:	
 18810 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 18811 ;; Defined at:
 18812 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 18813 ;; Parameters:    Size  Location     Type
 18814 ;;		None
 18815 ;; Auto vars:     Size  Location     Type
 18816 ;;		None
 18817 ;; Return value:  Size  Location     Type
 18818 ;;                  1    wreg      void 
 18819 ;; Registers used:
 18820 ;;		None
 18821 ;; Tracked objects:
 18822 ;;		On entry : 0/0
 18823 ;;		On exit  : 0/0
 18824 ;;		Unchanged: 0/0
 18825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18830 ;;Total ram usage:        0 bytes
 18831 ;; Hardware stack levels used: 1
 18832 ;; This function calls:
 18833 ;;		Nothing
 18834 ;; This function is called by:
 18835 ;;		_EUSART_Initialize
 18836 ;;		_EUSART_ReceiveISR
 18837 ;; This function uses a non-reentrant model
 18838 ;;
 18839                           
 18840     0800                     _EUSART_DefaultFramingErrorCallback:	
 18841                           ;psect for function _EUSART_DefaultFramingErrorCallback
 18842                           
 18843                           
 18844                           ;incstack = 0
 18845                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 18846     0800  0008               	return
 18847     0801                     __end_of_EUSART_DefaultFramingErrorCallback:
 18848                           
 18849                           	psect	text90
 18850     1FA2                     __ptext90:	
 18851 ;; *************** function _ADC_ISR *****************
 18852 ;; Defined at:
 18853 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 18854 ;; Parameters:    Size  Location     Type
 18855 ;;		None
 18856 ;; Auto vars:     Size  Location     Type
 18857 ;;		None
 18858 ;; Return value:  Size  Location     Type
 18859 ;;                  1    wreg      void 
 18860 ;; Registers used:
 18861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18862 ;; Tracked objects:
 18863 ;;		On entry : 0/0
 18864 ;;		On exit  : 0/0
 18865 ;;		Unchanged: 0/0
 18866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18871 ;;Total ram usage:        0 bytes
 18872 ;; Hardware stack levels used: 1
 18873 ;; Hardware stack levels required when called: 2
 18874 ;; This function calls:
 18875 ;;		NULL
 18876 ;;		_ADC_DefaultInterruptHandler
 18877 ;;		_adcConversionDoneHandler
 18878 ;; This function is called by:
 18879 ;;		_INTERRUPT_InterruptManager
 18880 ;; This function uses a non-reentrant model
 18881 ;;
 18882                           
 18883     1FA2                     _ADC_ISR:	
 18884                           ;psect for function _ADC_ISR
 18885                           
 18886                           
 18887                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 18888                           
 18889                           ;incstack = 0
 18890                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18891     1FA2  0020               	movlb	0	; select bank0
 18892     1FA3  1311               	bcf	17,6	;volatile
 18893                           
 18894                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 18895     1FA4  0022               	movlb	2	; select bank2
 18896     1FA5  0866               	movf	_ADC_InterruptHandler^(0+256),w
 18897     1FA6  0467               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 18898     1FA7  1903               	btfsc	3,2
 18899     1FA8  0008               	return
 18900                           
 18901                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 18902     1FA9  0867               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 18903     1FAA  008A               	movwf	10
 18904     1FAB  0866               	movf	_ADC_InterruptHandler^(0+256),w
 18905     1FAC  000A               	callw
 18906     1FAD  319F               	pagesel	$
 18907     1FAE  0008               	return
 18908     1FAF                     __end_of_ADC_ISR:
 18909                           
 18910                           	psect	text91
 18911     1EA8                     __ptext91:	
 18912 ;; *************** function _ADC_DefaultInterruptHandler *****************
 18913 ;; Defined at:
 18914 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;		None
 18917 ;; Auto vars:     Size  Location     Type
 18918 ;;		None
 18919 ;; Return value:  Size  Location     Type
 18920 ;;                  1    wreg      void 
 18921 ;; Registers used:
 18922 ;;		None
 18923 ;; Tracked objects:
 18924 ;;		On entry : 0/0
 18925 ;;		On exit  : 0/0
 18926 ;;		Unchanged: 0/0
 18927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18932 ;;Total ram usage:        0 bytes
 18933 ;; Hardware stack levels used: 1
 18934 ;; This function calls:
 18935 ;;		Nothing
 18936 ;; This function is called by:
 18937 ;;		_ADC_Initialize
 18938 ;;		_ADC_ISR
 18939 ;; This function uses a non-reentrant model
 18940 ;;
 18941                           
 18942     1EA8                     _ADC_DefaultInterruptHandler:	
 18943                           ;psect for function _ADC_DefaultInterruptHandler
 18944                           
 18945                           
 18946                           ;incstack = 0
 18947                           ; Regs used in _ADC_DefaultInterruptHandler: []
 18948     1EA8  0008               	return
 18949     1EA9                     __end_of_ADC_DefaultInterruptHandler:
 18950                           
 18951                           	psect	text92
 18952     120F                     __ptext92:	
 18953 ;; *************** function _adcConversionDoneHandler *****************
 18954 ;; Defined at:
 18955 ;;		line 5 in file "adcMeasurements.c"
 18956 ;; Parameters:    Size  Location     Type
 18957 ;;		None
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;		None
 18960 ;; Return value:  Size  Location     Type
 18961 ;;                  1    wreg      void 
 18962 ;; Registers used:
 18963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18964 ;; Tracked objects:
 18965 ;;		On entry : 0/0
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18973 ;;Total ram usage:        2 bytes
 18974 ;; Hardware stack levels used: 1
 18975 ;; Hardware stack levels required when called: 1
 18976 ;; This function calls:
 18977 ;;		_ADC_GetConversionResult
 18978 ;;		i1_ADC_SelectChannel
 18979 ;; This function is called by:
 18980 ;;		_initAdcMultiplexer
 18981 ;;		_ADC_ISR
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985     120F                     _adcConversionDoneHandler:	
 18986                           ;psect for function _adcConversionDoneHandler
 18987                           
 18988                           
 18989                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 18990                           
 18991                           ;incstack = 0
 18992                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18993     120F  2A25               	goto	i1l5805
 18994     1210                     i1l5795:
 18995                           
 18996                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 18997     1210  319E  26B4  3192   	fcall	_ADC_GetConversionResult
 18998     1213  0871               	movf	?_ADC_GetConversionResult+1,w
 18999     1214  0020               	movlb	0	; select bank0
 19000     1215  00DC               	movwf	_ADC_potentiometer+1	;volatile
 19001     1216  0870               	movf	?_ADC_GetConversionResult,w
 19002     1217  00DB               	movwf	_ADC_potentiometer	;volatile
 19003                           
 19004                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 19005     1218  3012               	movlw	18
 19006     1219  2A23               	goto	L5
 19007     121A                     i1l5799:	
 19008                           ;adcMeasurements.c: 15:             break;
 19009                           
 19010                           
 19011                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 19012     121A  319E  26B4  3192   	fcall	_ADC_GetConversionResult
 19013     121D  0871               	movf	?_ADC_GetConversionResult+1,w
 19014     121E  0020               	movlb	0	; select bank0
 19015     121F  00DA               	movwf	_ADC_hoogtesensor+1	;volatile
 19016     1220  0870               	movf	?_ADC_GetConversionResult,w
 19017     1221  00D9               	movwf	_ADC_hoogtesensor	;volatile
 19018                           
 19019                           ;adcMeasurements.c: 18:             new_channel = potentiometer;
 19020     1222  3010               	movlw	16
 19021     1223                     L5:
 19022     1223  00EF               	movwf	adcConversionDoneHandler@new_channel
 19023                           
 19024                           ;adcMeasurements.c: 19:             break;
 19025     1224  2A36               	goto	i1l5807
 19026     1225                     i1l5805:
 19027     1225  0020               	movlb	0	; select bank0
 19028     1226  086F               	movf	adcConversionDoneHandler@new_channel,w
 19029     1227  00F2               	movwf	??_adcConversionDoneHandler
 19030     1228  01F3               	clrf	??_adcConversionDoneHandler+1
 19031                           
 19032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19033                           ; Switch size 1, requested type "simple"
 19034                           ; Number of cases is 1, Range of values is 0 to 0
 19035                           ; switch strategies available:
 19036                           ; Name         Instructions Cycles
 19037                           ; simple_byte            4     3 (average)
 19038                           ; direct_byte            8     6 (fixed)
 19039                           ; jumptable            260     6 (fixed)
 19040                           ;	Chosen strategy is simple_byte
 19041     1229  0873               	movf	??_adcConversionDoneHandler+1,w
 19042     122A  3A00               	xorlw	0	; case 0
 19043     122B  1903               	skipnz
 19044     122C  2A2E               	goto	i1l6225
 19045     122D  2A36               	goto	i1l5807
 19046     122E                     i1l6225:
 19047                           
 19048                           ; Switch size 1, requested type "simple"
 19049                           ; Number of cases is 2, Range of values is 16 to 18
 19050                           ; switch strategies available:
 19051                           ; Name         Instructions Cycles
 19052                           ; simple_byte            7     4 (average)
 19053                           ; direct_byte           15     9 (fixed)
 19054                           ; jumptable            263     9 (fixed)
 19055                           ;	Chosen strategy is simple_byte
 19056     122E  0872               	movf	??_adcConversionDoneHandler,w
 19057     122F  3A10               	xorlw	16	; case 16
 19058     1230  1903               	skipnz
 19059     1231  2A10               	goto	i1l5795
 19060     1232  3A02               	xorlw	2	; case 18
 19061     1233  1903               	skipnz
 19062     1234  2A1A               	goto	i1l5799
 19063     1235  2A36               	goto	i1l5807
 19064     1236                     i1l5807:
 19065                           
 19066                           ;adcMeasurements.c: 21:     ADC_SelectChannel(new_channel);
 19067     1236  086F               	movf	adcConversionDoneHandler@new_channel,w
 19068     1237  319F  2772         	fcall	i1_ADC_SelectChannel
 19069     1239  0008               	return
 19070     123A                     __end_of_adcConversionDoneHandler:
 19071                           
 19072                           	psect	text93
 19073     1F72                     __ptext93:	
 19074 ;; *************** function i1_ADC_SelectChannel *****************
 19075 ;; Defined at:
 19076 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 19077 ;; Parameters:    Size  Location     Type
 19078 ;;  channel         1    wreg     enum E6663
 19079 ;; Auto vars:     Size  Location     Type
 19080 ;;  channel         1    1[COMMON] enum E6663
 19081 ;; Return value:  Size  Location     Type
 19082 ;;                  1    wreg      void 
 19083 ;; Registers used:
 19084 ;;		wreg, status,2, status,0
 19085 ;; Tracked objects:
 19086 ;;		On entry : 0/0
 19087 ;;		On exit  : 0/0
 19088 ;;		Unchanged: 0/0
 19089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19094 ;;Total ram usage:        2 bytes
 19095 ;; Hardware stack levels used: 1
 19096 ;; This function calls:
 19097 ;;		Nothing
 19098 ;; This function is called by:
 19099 ;;		_adcConversionDoneHandler
 19100 ;; This function uses a non-reentrant model
 19101 ;;
 19102                           
 19103     1F72                     i1_ADC_SelectChannel:	
 19104                           ;psect for function i1_ADC_SelectChannel
 19105                           
 19106                           
 19107                           ;incstack = 0
 19108                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 19109                           ;i1ADC_SelectChannel@channel stored from wreg
 19110     1F72  00F1               	movwf	i1ADC_SelectChannel@channel
 19111                           
 19112                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 19113     1F73  0871               	movf	i1ADC_SelectChannel@channel,w
 19114     1F74  00F0               	movwf	??i1_ADC_SelectChannel
 19115     1F75  0DF0               	rlf	??i1_ADC_SelectChannel,f
 19116     1F76  0DF0               	rlf	??i1_ADC_SelectChannel,f
 19117     1F77  0021               	movlb	1	; select bank1
 19118     1F78  081D               	movf	29,w	;volatile
 19119     1F79  0670               	xorwf	??i1_ADC_SelectChannel,w
 19120     1F7A  3903               	andlw	-253
 19121     1F7B  0670               	xorwf	??i1_ADC_SelectChannel,w
 19122     1F7C  009D               	movwf	29	;volatile
 19123     1F7D  0008               	return
 19124     1F7E                     __end_ofi1_ADC_SelectChannel:
 19125                           
 19126                           	psect	text94
 19127     1EB4                     __ptext94:	
 19128 ;; *************** function _ADC_GetConversionResult *****************
 19129 ;; Defined at:
 19130 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 19131 ;; Parameters:    Size  Location     Type
 19132 ;;		None
 19133 ;; Auto vars:     Size  Location     Type
 19134 ;;		None
 19135 ;; Return value:  Size  Location     Type
 19136 ;;                  2    0[COMMON] unsigned short 
 19137 ;; Registers used:
 19138 ;;		wreg
 19139 ;; Tracked objects:
 19140 ;;		On entry : 0/0
 19141 ;;		On exit  : 0/0
 19142 ;;		Unchanged: 0/0
 19143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;Total ram usage:        2 bytes
 19149 ;; Hardware stack levels used: 1
 19150 ;; This function calls:
 19151 ;;		Nothing
 19152 ;; This function is called by:
 19153 ;;		_adcConversionDoneHandler
 19154 ;; This function uses a non-reentrant model
 19155 ;;
 19156                           
 19157     1EB4                     _ADC_GetConversionResult:	
 19158                           ;psect for function _ADC_GetConversionResult
 19159                           
 19160                           
 19161                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 19162                           
 19163                           ;incstack = 0
 19164                           ; Regs used in _ADC_GetConversionResult: [wreg]
 19165     1EB4  0021               	movlb	1	; select bank1
 19166     1EB5  081C               	movf	28,w	;volatile
 19167     1EB6  00F1               	movwf	?_ADC_GetConversionResult+1
 19168     1EB7  081B               	movf	27,w	;volatile
 19169     1EB8  00F0               	movwf	?_ADC_GetConversionResult
 19170     1EB9  0008               	return
 19171     1EBA                     __end_of_ADC_GetConversionResult:
 19172     0002                     ___latbits      equ	2
 19173     007E                     btemp           set	126	;btemp
 19174     007E                     int$flags       set	126
 19175     007E                     wtemp0          set	126
 19176                           
 19177                           	psect	config
 19178                           
 19179                           ;Config register CONFIG1 @ 0x8007
 19180                           ;	FEXTOSC External Oscillator mode Selection bits
 19181                           ;	FEXTOSC = OFF, Oscillator not enabled
 19182                           ;	Power-up default value for COSC bits
 19183                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 19184                           ;	Clock Out Enable bit
 19185                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 19186                           ;	Clock Switch Enable bit
 19187                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19188                           ;	Fail-Safe Clock Monitor Enable
 19189                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 19190     8007                     	org	32775
 19191     8007  3F8C               	dw	16268
 19192                           
 19193                           ;Config register CONFIG2 @ 0x8008
 19194                           ;	Master Clear Enable bit
 19195                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 19196                           ;	Power-up Timer Enable bit
 19197                           ;	PWRTE = OFF, PWRT disabled
 19198                           ;	Watchdog Timer Enable bits
 19199                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 19200                           ;	Low-power BOR enable bit
 19201                           ;	LPBOREN = OFF, ULPBOR disabled
 19202                           ;	Brown-out Reset Enable bits
 19203                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 19204                           ;	Brown-out Reset Voltage selection bit
 19205                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 19206                           ;	PPSLOCK bit One-Way Set Enable bit
 19207                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 19208                           ;	Stack Overflow/Underflow Reset Enable bit
 19209                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 19210                           ;	Debugger enable bit
 19211                           ;	DEBUG = 0x1, unprogrammed default
 19212     8008                     	org	32776
 19213     8008  3FF3               	dw	16371
 19214                           
 19215                           ;Config register CONFIG3 @ 0x8009
 19216                           ;	User NVM self-write protection bits
 19217                           ;	WRT = OFF, Write protection off
 19218                           ;	Low Voltage Programming Enable bit
 19219                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 19220     8009                     	org	32777
 19221     8009  3FFF               	dw	16383
 19222                           
 19223                           ;Config register CONFIG4 @ 0x800A
 19224                           ;	User NVM Program Memory Code Protection bit
 19225                           ;	CP = OFF, User NVM code protection disabled
 19226                           ;	Data NVM Memory Code Protection bit
 19227                           ;	CPD = OFF, Data NVM code protection disabled
 19228     800A                     	org	32778
 19229     800A  3FFF               	dw	16383

Data Sizes:
    Strings     172
    Constant    86
    Data        12
    BSS         121
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      80
    BANK1            80     80      80
    BANK2            80     16      80
    BANK3            80      0      54
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2063$buffer	PTR unsigned char  size(2) Largest target is 0

    S2063$source	PTR const unsigned char  size(2) Largest target is 0

    S223$4$0	PTR void  size(2) Largest target is 0

    S223$5$0	PTR void  size(2) Largest target is 0

    S223$6$0	PTR void  size(2) Largest target is 0

    S223SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S223SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S223SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S223SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S223SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S223SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S223SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S223SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S223SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S223SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S223SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S223SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S223SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S223SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$17$0	PTR FTN()void  size(2) Largest target is 0

    S975$18$0	PTR FTN()void  size(2) Largest target is 0

    S975$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S975$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S975$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S975$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S975$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S975$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S975$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S975$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S975$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S975$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S975$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S975$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S975$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S975$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S975$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S975$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S975$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S975$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S975$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fltol->i1___flmul
    i1___fladd->i1___flmul

Critical Paths under _main in BANK1

    _uartHandler->_str2float
    _str2float->___flmul
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _printLogs->_printFloat
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    ___flsub->___fladd
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _position_led_strip->_getLedNumber
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _getLedNumber->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _uartHandler->_setKi
    _uartHandler->_setKp
    _printLogs->_printFloat
    _updateLedstripAnimation->_position_led_strip
    _position_led_strip->_getLedNumber

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   35426
                                             12 BANK2      4     4      0
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                   _getPotentiometer
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   15822
                                              4 BANK2      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5363
                                             68 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      23
                                             13 BANK1      2     0      2
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    4995
                                             71 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     336
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0   14229
                       _getDutycycle
                    _getHoogtesensor
                              _getKi
                              _getKp
                        _getSetpoint
                         _printFloat
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printFloat                                           9     5      4    9281
                                             78 BANK1      2     2      0
                                              0 BANK2      7     3      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _getKi (ARG)
                              _getKp (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    4948
                                             64 BANK1      7     1      6
                               _atoi (ARG)
                       _getDutycycle (ARG)
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    4877
                                             56 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    12      4    4741
                                             41 BANK1     15    11      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1522
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     166
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   8     6      2     288
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2022
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5     944
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     430
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     329
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2037
                                             34 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getKp                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getKi                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDutycycle                                         2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     227
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     204
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     106
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _getPotentiometer                                     2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0    4868
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0    4868
                 _position_led_strip
 ---------------------------------------------------------------------------------
 (3) _position_led_strip                                   8     8      0    4868
                                              4 BANK2      8     8      0
                    _getHoogtesensor
                       _getLedNumber
                        _getSetpoint
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     156
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getSetpoint                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _getLedNumber                                         6     4      2    4219
                                             78 BANK1      2     0      2
                                              0 BANK2      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     232
                                             68 BANK1     10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                             42 BANK1     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1990
                                             14 BANK1     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getHoogtesensor                                      2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4466
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4346
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4346
                                             46 BANK0      7     7      0
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                  i1_getHoogtesensor
 ---------------------------------------------------------------------------------
 (15) i1_getHoogtesensor                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___fltol                                          10     6      4     231
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _position_led_strip
         _getHoogtesensor
         _getLedNumber
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
             ___flsub (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _getHoogtesensor (ARG)
           _getSetpoint (ARG)
         _getSetpoint
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   _getPotentiometer
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getDutycycle
     _getHoogtesensor
     _getKi
     _getKp
     _getSetpoint
     _printFloat
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _getKi (ARG)
       _getKp (ARG)
       _printf (ARG)
         _atoi (ARG)
           ___wmul
         _getDutycycle (ARG)
         _getHoogtesensor (ARG)
         _getSetpoint (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_IsTxReady
                     _EUSART_Write
                 _fputs
                   _fputc
             _fputc
             _read_prec_or_width
               ___wmul
             _utoa
               ___lwdiv
               ___lwmod
               _pad
     _printf
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
       _atoi (ARG)
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___fltol
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl
       i1_getHoogtesensor

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      80    100.0%
BANK1               80     80      80    100.0%
BANK2               80     16      80    100.0%
BANK3               80      0      54     67.5%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     308      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 19 14:22:56 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0004                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 0003  
                                 _SPI1_ByteExchange 1F67                          __end_of_pwm_fan_Initialize 1F8A  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5         __end_of_EUSART_OverrunErrorCallbackRegister 1FE3  
             ??_EUSART_OverrunErrorCallbackRegister 00A2                ?_EUSART_OverrunErrorCallbackRegister 00A0  
               _EUSART_OverrunErrorCallbackRegister 1FD6                                         i1___flmul@a 0024  
                                                _ki 0168                                         i1___flmul@b 0020  
                                                _kp 016C                                 ___wmul@multiplicand 00A2  
                               __Umul8_16@word_mpld 00A6                                          i1___xxtofl 0897  
                                               l160 1F6B                                                 l721 120C  
                                               l920 0B97                                                 l892 1430  
                                               l878 0ABC                                                 _PR2 001E  
                                               _PR4 0416                                                 _PR6 041D  
                                               _abs 100D                                                 _pad 12CE  
                                   __end_of_ADC_ISR 1FAF                                        i1___fltol@f1 003A  
                   __end_of_ADC_SetInterruptHandler 1EED                                 ??_SPI1_ByteExchange 00A1  
                                      ___awmod@sign 00A5                                     _TMR2_Initialize 103B  
                      __end_of_sendLedstripEndFrame 10C4                                                 wreg 0009  
                                     i1___fladd@grs 004D                                        ___flmul@aexp 00DC  
                                      ___flmul@bexp 00DD                        ?_ADC_DefaultInterruptHandler 0070  
                                      ___flmul@sign 00D7                                        ___flmul@temp 00E2  
                                      ___flmul@prod 00DE                                 i1_ADC_SelectChannel 1F72  
                                      ?_EUSART_Read 0070                                        _BAUD1CONbits 019F  
                                      ___fltol@exp1 00ED                                                ?_abs 00A6  
                                              l1181 1101                                                l1503 05CD  
                                              l1524 0640                                                l1516 062A  
                                              l1382 162B                                                l1622 0942  
                                              l1623 0951                                                l1560 07A6  
                                              l1482 04DA                                                l1562 07AF  
                                              l1538 068D                                                l1635 0984  
                                              l5011 0BC0                                                l4203 1423  
                                              l4123 1FE5                                                l1636 098E  
                                              l4109 11F2                                                l4133 1489  
                                              l4301 12DB                                                l1486 054B  
                                              l1590 027A                                                l1726 0C7D  
                                              l5007 0BB0                                                l4207 142B  
                                              l4231 1369                                                l4223 1363  
                                              l4135 148D                                                l4151 11CD  
                                              l1559 078E                                                l5111 0682  
                                              l1488 052C                                                l1680 12E0  
                                              l1728 0C89                                                l5025 0BDC  
                                              l5017 0BD7                                                l4233 1373  
                                              l4241 1388                                                l4155 10FB  
                                              l4219 135C                                                l4139 14B4  
                                              l1683 1300                                                l5211 07AD  
                                              l5131 06B6                                                l5115 0685  
                                              l1597 11BB                                                l4325 11B5  
                                              l5061 0C43                                                l5029 0BE7  
                                              l4181 13F6                                                l4245 1390  
                                              l4237 137F                                                l4309 12E2  
                                              l4261 1278                                                l5125 06AA  
                                              l5055 0C31                                                l6015 1038  
                                              l4191 13FE                                                l4175 13ED  
                                              l4351 09F2                                                l4423 1516  
                                              l4271 1293                                                l4407 16A1  
                                              l5151 06FD                                                l1688 09D5  
                                              l4513 04D2                                                l4441 15F8  
                                              l5065 0C4E                                                l5049 0C1C  
                                              l4193 1408                                                l4361 0A28  
                                              l4425 1528                                                l5161 0719  
                                              l4363 09DC                                                l4371 0A34  
                                              l4347 09CF                                                l4419 14FC  
                                              l4267 128A                                                l4259 126E  
                                              l4283 1241                                                l5091 0662  
                                              l4621 05EE                                                l4613 05DF  
                                              l4605 05C5                                                l4509 04CF  
                                              l4701 00AC                                                l4437 15EF  
                                              l4285 124B                                                l4293 1260  
                                              l5157 0716                                                ?_pad 00B4  
                                              l4623 05F0                                                l4519 04E2  
                                              l4711 00C2                                                l4703 00B4  
                                              l4199 141A                                                l5183 074D  
                                              l5175 071F                                                l5159 06DF  
                                              l5095 0665                                                l6071 0AF6  
                                              l4457 161B                                                l4377 0A43  
                                              l4289 1257                                                l5177 0736  
                                              l5097 066D                                                l6161 13A8  
                                              l4635 0600                                                l4627 05F5  
                                              l4491 04B6                                                l4467 1638  
                                              l4459 1627                                                l4387 166E  
                                              l5187 074F                                                l6083 0B5E  
                                              l6075 0B1A                                                l4661 063E  
                                              l4629 05F7                                                l4557 0538  
                                              l4549 0500                                                l4485 04AB  
                                              l4821 0953                                                l4813 093A  
                                              l4397 169C                                                l4901 0D28  
                                              l5197 0776                                                l4639 0602  
                                              l4583 056F                                                l4575 0559  
                                              l4559 053A                                                l4567 0546  
                                              l4831 0975                                                l4823 0961  
                                              l4399 1659                                                l6087 0B6E  
                                              l6079 0B3C                                                l4657 063A  
                                              l4585 0571                                                l4593 057E  
                                              l4489 04AE                                                l4681 008B  
                                              l4825 0970                                                l4905 0D32  
                                              l6089 0B76                                                l4771 0210  
                                              l4763 01E2                                                l4683 008D  
                                              l4843 09A9                                                l4765 01F9  
                                              l4685 0095                                                l4829 0982  
                                              l4933 1119                                                l5821 0AA8  
                                              l4775 0212                                                l4863 0C8B  
                                              l4935 112D                                                l5911 172B  
                                              l4785 0239                                                l4873 0CB6  
                                              l4865 0C9F                                                l5833 0AB4  
                                              l4795 0265                                                l4699 00AA  
                                              l5907 1728                                                l5827 0A5C  
                                              l4789 024E                                                l4893 0D14  
                                              l5933 1783                                                l5917 1771  
                                              l5909 1720                                                l5861 1440  
                                              l5845 0AE4                                                l4887 0CF2  
                                              l4879 0CCE                                                l5927 1749  
                                              l5919 1741                                                l5847 0AC2  
                                              l5839 0AC0                                                l5929 1774  
                                              l5865 1446                                                l5849 0AE7  
                                              l4899 0D1F                                                l5883 145C  
                                              l5875 1463                                                l5867 1449  
                                              l4989 1168                                                l5879 1465  
                                              STR_1 18EC                                                STR_2 1865  
                                              STR_3 18D7                                                STR_4 18AE  
                                              STR_5 188E                                                STR_6 18FB  
                                              STR_7 18F4                                                STR_8 18AB  
                                              STR_9 184C                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              u4025 1102                                                u4105 1409  
                                              u4035 1107                                                u4115 1413  
                                              u4125 141B                                                u4205 1379  
                                              u5015 05E0                                                u4215 1380  
                                              u5115 0617                                                u4085 1401  
                                              u4325 1244                                                u6005 06F7  
                                              u4255 1271                                                u6015 070B  
                                              u5305 01C2                                                u4185 136C  
                                              u4345 1251                                                u4450 09B9  
                                              u4435 11BC                                                u5315 01D1  
                                              u4275 1279                                                u4355 1258  
                                              u4460 09BA                                                u5325 01E5  
                                              u4525 09ED                                                u4285 1283  
                                              u6045 0722                                                u3910 1ED2  
                                              u5175 0643                                                u5415 0227  
                                              u4295 128B                                                u6135 0764  
                                              u5425 0242                                                u5345 01EE  
                                              u4705 162F                                                u6145 077F  
                                              u6065 072B                                                u5435 0258  
                                              u5275 0132                                                u5515 096A  
                                              u4395 12EC                                                u6155 0798  
                                              u5285 015D                                                u4645 1601  
                                              u4830 051F                                                u5455 0275  
                                              u5295 01AB                                                u5535 097C  
                                              u4495 0A32                                                u6175 07B2  
                                              u4840 0520                                                u4825 0514  
                                              u4585 1669                                                u5730 1EDA  
                                              u4675 161C                                                u5575 0996  
                                              u5495 095A                                                u5815 0BFC  
                                              u4945 0568                                                u4865 0531  
                                              u5825 0C0F                                                u3995 14B2  
                                              u4973 0590                                                u4965 0575  
                                              u4885 053E                                                u7470 0B64  
                                              u5855 0C26                                                u5775 0BB9  
                                              u7480 0B65                                                u5865 0C3A  
                                              u5795 0BE2                                                u7707 13D5  
                                              u5975 06E7                                                u5985 06EE  
                                              _TMR2 001D                                                _TMR4 0415  
                                              _TMR6 041C                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0070                                     _getHoogtesensor 1F08  
                                              abs@a 00A6                                                _dbuf 01A0  
                                              _atoi 171C                                                _main 1395  
                                              _dtoa 09B2                                                _line 01C0  
                                     i1___flmul@grs 002E                                                _prec 0144  
                                              pad@i 00BA                                                pad@p 00B7  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                                                _utoa 1647  
                       _INT_DefaultInterruptHandler 0000                    __end_of_adcConversionDoneHandler 123A  
                                    i1___fladd@aexp 004B                                      i1___fladd@bexp 004C  
                                              start 0040          __end_of_EUSART_DefaultOverrunErrorCallback 1EB0  
              ??_EUSART_DefaultOverrunErrorCallback 0070                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 1EAC                                     ___fldiv@new_exp 00B2  
                         __end_of_SPI1_ByteExchange 1F72                     __end_of_INT_SetInterruptHandler 1EFF  
                              ?i1_ADC_SelectChannel 0070                                               ??_abs 00A8  
                                             ??_pad 00B9                                       ?_EUSART_Write 00A0  
                                     ___fltol@sign1 00EC                                               _ADACT 009F  
                                             ?_atoi 00A6                                     __end_of___fladd 064C  
                                             ?_main 0070                                               ?_dtoa 00BC  
                                   __end_of___fldiv 07B8                                     __end_of___awdiv 1430  
                                             STR_10 18CA                                               STR_11 18BD  
                                             STR_12 189F                                               STR_13 187D  
                                   __end_of___awmod 1395                                     __end_of___flmul 0285  
                                   __end_of___flsub 11AA                                     __end_of___fltol 1647  
                                             ?_utoa 00BC                                     ___awdiv@divisor 00A0  
                                             _T2CON 001F                                               _T4CON 0417  
                                             _IOCAF 0393                                               _IOCBF 0396  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCBN 0395  
                                             _T6CON 041E                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                   __end_of___lwdiv 1298                                               i1l221 0022  
                                             i1l230 003E                                               i1l223 002C  
                                             i1l225 0036                                               i1l219 0015  
                                   __end_of___lwmod 1265                                               i1l727 10DB  
                                   ___awdiv@counter 00A4                                               _OSCEN 091D  
                                             _UART1 1800                                        vfpfcnvrt@fmt 00CB  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 104C                                    __end_of_TMR2_ISR 1FBC  
                                  __end_of_TMR4_ISR 1FC9                                               _getKi 105D  
                                             _getKp 0801                                               _flags 0063  
                                _EUSART_TransmitISR 10C4                                      i1___flmul@aexp 0032  
                               read_prec_or_width@c 00AB                                      i1___flmul@bexp 0033  
                               read_prec_or_width@n 00AC                                               _fputc 1480  
                                             _fputs 11CA                                               _setKi 1F48  
                                             _setKp 1F52                                         ?_TMR6_Tasks 0070  
                                    i1___flmul@sign 002D                                      i1___flmul@temp 0038  
                                    i1___flmul@prod 0034                                               atoi@n 00AB  
                                             pad@fp 00B4                                               atoi@s 00A6  
                                             _width 0055                                               _putch 1FE3  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                               pclath 000A  
                                    i1___fltol@exp1 0043                                __end_of_getLedNumber 1587  
                                             utoa@d 00BE                                               utoa@i 00C4  
                                             utoa@p 00C1                                               utoa@w 00C2  
                                             status 0003                                               wtemp0 007E  
                               ?_EUSART_TransmitISR 0070                                     i1___fladd@signs 004A  
                                       controller@I 0051                                         controller@P 004F  
                             ??i1_ADC_SelectChannel 0070                                     __initialization 0042  
                                      __end_of_atoi 1788                                        __end_of_main 13E2  
                                      __end_of_dtoa 0A51                                        __end_of_utoa 16B0  
                                     ?_initLedstrip 0070                                      ??_EUSART_Write 00A1  
                 _EUSART_TxCompleteInterruptHandler 014A                             __end_of_TMR2_Initialize 104C  
                                         ??_ADC_ISR 0074                         ?_INTERRUPT_InterruptManager 0070  
                            printFloat@integer_part 0154                                              ??_atoi 00A8  
                              ??_EUSART_TransmitISR 0070                                              ??_main 015A  
                                            ??_dtoa 00C0                                         ?i1___xxtofl 0070  
                              __end_of_getDutycycle 1F35                                              ??_utoa 00C0  
                           setSetpoint@new_setpoint 00AD                          __end_of_read_prec_or_width 152D  
                                   _TMR6_Initialize 1FF1  EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  
EUSART_FramingErrorCallbackRegister@callbackHandler 00A0                             __end_of_getHoogtesensor 1F11  
                                            ?_getKi 00A0                                              ?_getKp 00A0  
                                            _ADCON0 009D                                              _ADCON1 009E  
                        _EUSART_OverrunErrorHandler 005D                                              ?_fputc 00A3  
                                            ?_fputs 00AC                                              _ADRESH 009C  
                                            _ADRESL 009B                                              ?_setKi 014E  
                                            ?_setKp 014E                          __end_of_position_led_strip 0C58  
                                  ___awdiv@dividend 00A2                                              _ANSELA 018C  
                                            ?_putch 0070                                              _ANSELB 018D  
                                            _ANSELC 018E                                        ?_setSetpoint 00AD  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RB4PPS 0E9C                                              _RB6PPS 0E9E  
                                            _RC5PPS 0EA5                                              _RB7PPS 0E9F  
                                            i1l1503 0F81                                              _ODCONA 028C  
                                            _ODCONB 028D                                              _ODCONC 028E  
                                            i1l1524 0FF4                                              i1l1516 0FDE  
                                            i1l1382 15CB                                              i1l1622 08B4  
                                            i1l1623 08C3                                              i1l1482 0E8E  
                                            i1l1635 08F6                                              i1l1636 0900  
                                            i1l1486 0EFF                                              i1l1590 048A  
                                            i1l1488 0EE0                                              i1l5301 0E86  
                                            i1l1597 117C                                              i1l5401 0F93  
                                            i1l5225 158F                                              i1l6035 07E7  
                                            i1l6027 07D4                                              i1l5411 0FA4  
                                            i1l5307 0E96                                              i1l5245 15BB  
                                            i1l5229 1598                                              i1l5423 0FB4  
                                            i1l5415 0FA9                                              i1l5255 15D8  
                                            i1l5247 15C7                                              i1l6225 122E  
                                            i1l5409 0FA2                                              i1l5417 0FAB  
                                            i1l5345 0EEC                                              i1l5337 0EB4  
                                            i1l5273 0E5F                                              i1l5601 08AC  
                                            i1l5427 0FB6                                              i1l5371 0F23  
                                            i1l5363 0F0D                                              i1l5347 0EEE  
                                            i1l5355 0EFA                                              i1l5611 08D3  
                                            i1l5445 0FEE                                              i1l5373 0F25  
                                            i1l5381 0F32                                              i1l5277 0E62  
                                            i1l5613 08E2                                              i1l5279 0E6A  
                                            i1l5551 03F2                                              i1l5471 029D  
                                            i1l5631 091B                                              i1l5449 0FF2  
                                            i1l5393 0F79                                              i1l5297 0E83  
                                            i1l5553 0409                                              i1l5473 02A5  
                                            i1l5617 08F4                                              i1l5609 08C5  
                                            i1l5563 0422                                              i1l5491 02C4  
                                            i1l5619 08E7                                              i1l5805 1225  
                                            i1l5573 0449                                              i1l5469 029B  
                                            i1l5807 1236                                              i1l4943 1176  
                                            i1l5583 0475                                              i1l5559 0420  
                                            i1l5487 02BA                                              i1l5577 045E  
                                            i1l5489 02BC                                              i1l5499 02D2  
                                            i1l5961 0E37                                              i1l5795 1210  
                                            i1l5799 121A                                              i1l5983 1FC6  
                                            i1l5969 0E42                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            i1l5989 1FB9                                              u700_25 0485  
                                            u622_25 15BC                                              u712_25 0908  
                                            u704_25 08CC                                              u641_25 0EE5  
                                            u625_25 15CF                                              u570_25 1091  
                                            u706_25 08DC                                              u651_25 0F29  
                                            u643_25 0EF2                                              u619_25 15A1  
                                            u652_23 0F44                                              u708_25 08EE  
                                            _OSCFRQ 091F                                              u637_25 0EC8  
                                            u733_25 0E2F                                              u638_20 0ED3  
                                            u639_20 0ED4                                              u672_25 0FF7  
                                            u656_25 0F94                                              u568_25 117D  
                                     vfpfcnvrt@done 00D1                                              u649_25 0F1C  
                                            u666_25 0FCB                                              u682_25 0342  
                                            u683_25 036D                                              u684_25 03BB  
                                            u685_25 03D2                                              u686_25 03E1  
                                            u687_25 03F5                                              u696_25 0437  
                                            u697_25 0452                                              u689_25 03FE  
                                            _TX1REG 019A                                              u698_25 0468  
                                            _TX1STA 019E                                    __end_of___xxtofl 09B2  
                                      ?_uartHandler 0070                                   __end_of_SPI1_Open 171C  
                              _sendLedstripEndFrame 10AC                                   _ADC_potentiometer 005B  
                                      vfprintf@cfmt 00DE                                      ??_initLedstrip 00A9  
                                         ??___fladd 00B6                                              ___wmul 10F8  
                           _updateLedstripAnimation 1EA9                                           ??___fldiv 00A8  
                                         ??___awdiv 00A4                                           ??___awmod 00A4  
                                         ??___flmul 00D2                                           ??___flsub 00CA  
                                         ??___fltol 00E8                                           ??___lwdiv 00A4  
                                         ??___lwmod 00A4                                    __end_of_ledstrip 184C  
                                 ?_getPotentiometer 00A0                                    __end_of_readLine 1480  
                              read_prec_or_width@ap 00A7                             __end_of_TMR4_Initialize 105D  
                                  ___awdiv@quotient 00A6                                   ?_EUSART_IsRxReady 0070  
                                   ___awmod@divisor 00A0                                   ?_EUSART_IsTxReady 0070  
                                   ___awmod@counter 00A4                                              _printf 101C  
                                            pad@buf 00B6                                  ??_getPotentiometer 00A2  
                                 ?_CLOCK_Initialize 0070                                              dtoa@fp 00BC  
                                 __end_ofi1___fladd 1000                                  ??_EUSART_IsRxReady 00A0  
                                 __end_ofi1___flmul 0495                                   __end_ofi1___fltol 15E7  
                                            fputc@c 00A3                                  ??_EUSART_IsTxReady 00A0  
                                            fputs@c 00B1                                              fputs@i 00B2  
                                            fputs@s 00AC                           ?_adcConversionDoneHandler 0070  
                                ??_CLOCK_Initialize 00A0                          str2float@decimal_separator 00E8  
                                   i1___fltol@sign1 0042                                       main@potwaarde 015C  
                           ?_sendLedstripStartFrame 0070                         EUSART_ReceiveISR@tempRxHead 0071  
                                  __end_of_vfprintf 1130                               _pwm_fan_LoadDutyValue 1082  
                                            utoa@fp 00BC             INT_SetInterruptHandler@InterruptHandler 00A0  
           ADC_SetInterruptHandler@InterruptHandler 00A0                                      _SPI1_IsRxReady 0000  
                                    _SPI1_IsTxReady 0000                                        ___xxtofl@arg 00AA  
                                      ___xxtofl@exp 00A9                                   _SYSTEM_Initialize 1130  
                                      ___xxtofl@val 00A0                             __end_of__initialization 0071  
                                    _SPI1_ByteWrite 0000                                    printFloat@number 014E  
                                ?_SYSTEM_Initialize 0070                                          ___fltol@f1 00E4  
                                      ?i1__Umul8_16 0070                                       __end_of_UART1 1830  
                             ?_sendLedstripEndFrame 0070                                      __pcstackCOMMON 0070  
                                      __pidataBANK0 1EB0                                        __pidataBANK2 1EDC  
                               ??_SYSTEM_Initialize 00A2                                           ?_TMR2_ISR 0070  
                                     __end_of_getKi 106E                                       __end_of_getKp 0812  
                                         ?_TMR4_ISR 0070                                       __end_of_fputc 14D5  
                                     __end_of_fputs 11EB                                   ??_SPI1_Initialize 00A0  
                                     __end_of_setKi 1F52                                       __end_of_setKp 1F5C  
                                     __end_of_putch 1FF1                                    ?_TMR2_Initialize 0070  
                           __end_of_TMR6_Initialize 2000                             _ADC_GetConversionResult 1EB4  
                                _spi1_configuration 18E2                      __end_of_sendLedstripStartFrame 1082  
                              _eusartRxStatusBuffer 0120                                    _ADC_hoogtesensor 0059  
                                _pwm_fan_Initialize 1F7E                                    ?_getHoogtesensor 00A0  
                                           ??_getKi 00A4                                             ??_getKp 00A4  
                                       setKi@new_ki 014E                                             ??_fputc 00A7  
                         __end_of_SYSTEM_Initialize 114E                                             ??_fputs 00AF  
                                           ??_setKi 00F0                                             ??_setKp 00F0  
                                           ??_putch 00A2                                          __pbssBANK0 0055  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                               ?_pwm_fan_Initialize 0070                                __end_of_EUSART_Write 120F  
                                       setKp@new_kp 014E                                      i1___xxtofl@arg 007A  
                                    i1___xxtofl@exp 0079                                      i1___xxtofl@val 0070  
                         ??_updateLedstripAnimation 00F0                                   __end_of__Umul8_16 11CA  
                          _TMR6_PeriodMatchCallback 015E                                          __pmaintext 1395  
                                           ?___wmul 00A0                                          ??_TMR2_ISR 0070  
                                        ??_TMR4_ISR 007E                                          __pintentry 0004  
                              _EUSART_AutoBaudQuery 0000                                ??_pwm_fan_Initialize 00A0  
                                           _ADC_ISR 1FA2                                    ?_TMR4_Initialize 0070  
                                           ?_printf 00E0                                        _getLedNumber 152D  
                                   _EUSART_IsTxDone 0000                                       _eusartRxCount 0066  
                 _EUSART_RxCompleteCallbackRegister 0000                                           ?___xxtofl 00A0  
                                   _EUSART_ErrorGet 0000                                             _SP1BRGH 019C  
                                           _SP1BRGL 019B                                             _OSCCON1 0919  
                                           _OSCCON3 091B                                 i1__Umul8_16@product 0074  
                            ?_pwm_fan_LoadDutyValue 0070                                             _OSCTUNE 091E  
                                           _PWM5DCH 0618                                             _PWM5DCL 0617  
                                           _PWM5CON 0619                          sendLedstripFrame@intensity 00A3  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                           _SSP1BUF 0211                                        ??_TMR6_Tasks 00F0  
                              __end_of_initLedstrip 100D                                           ?_readLine 00E7  
                                      _getDutycycle 1F2C                                          _controller 0D4C  
                             EUSART_Read@tempRxTail 00A0                              ??_sendLedstripEndFrame 00A1  
                              _ADC_InterruptHandler 0166                             _ADC_SetInterruptHandler 1EE4  
                                           ___fladd 0495                                             ___fldiv 064C  
                                           ___awdiv 13E2                                             ___awmod 1351  
                                           ___flmul 0075                                             ___flsub 118B  
                                           ___fltol 15E7                 adcConversionDoneHandler@new_channel 006F  
                                    uartHandler@str 0152                                             ___lwdiv 1265  
                                           ___lwmod 123A                                           ?_vfprintf 00D8  
                         ??_ADC_GetConversionResult 0072                                          _hoogte_bal 0146  
                                  ?_TMR6_Initialize 0070                                  __end_of_TMR6_Tasks 103B  
                                      ??i1___xxtofl 0074                                             __ptext1 0AF0  
                                           __ptext2 0A51                                             __ptext3 064C  
                                           __ptext4 1F35                                             __ptext5 1F52  
                                           __ptext6 1F48                                             __ptext7 1430  
                                           __ptext8 114E                                             __ptext9 1ED4  
                                         _T2CONbits 001F                               read_prec_or_width@fmt 00A6  
                   __end_of_updateLedstripAnimation 1EAC                                          ??___xxtofl 00A4  
                                  ___awmod@dividend 00A2                                           _T4CONbits 0417  
                          ??_PIN_MANAGER_Initialize 00A0                             _INT_SetInterruptHandler 1EF6  
                                         _T6CONbits 041E                                             atoi@neg 00AA  
                         printFloat@fractional_part 0152                                             clrloop0 1EC1  
                              end_of_initialization 0071                                             fputc@fp 00A5  
                       __end_ofi1_ADC_SelectChannel 1F7E                                          ??_readLine 00E9  
                                           init_ram 1EC6                                             fputs@fp 00AD  
                                           initloop 1EC7                                  _read_prec_or_width 14D5  
                                 _EUSART_Initialize 1298                                   __end_of_str2float 0AF0  
                                __end_ofi1___xxtofl 0924                                   __end_of_printLogs 1800  
           __end_of_TMR6_DefaultPeriodMatchCallback 0800                    ?_TMR6_DefaultPeriodMatchCallback 0070  
                 ??_TMR6_DefaultPeriodMatchCallback 00A0                     _TMR6_DefaultPeriodMatchCallback 07FF  
                                ?_EUSART_Initialize 0070                                  _position_led_strip 0B98  
                                 __end_of_vfpfcnvrt 0D4C                                     _SPI1_BufferRead 0000  
                                 _EUSART_ReceiveISR 07B8                                 ?_read_prec_or_width 00A6  
                                  vfpfcnvrt@convarg 00D2                                          ??_vfprintf 00DD  
                                ?_EUSART_ReceiveISR 0070                                           _SPI1_Open 16B0  
                               ??_EUSART_Initialize 00A2                                 ?_position_led_strip 0070  
                             i1__Umul8_16@word_mpld 0076                                          _printFloat 0812  
                               _SPI1_BufferExchange 0000                                         ___fladd@grs 00C1  
                               ??_EUSART_ReceiveISR 0070                 __end_of_ADC_DefaultInterruptHandler 1EA9  
                       _ADC_DefaultInterruptHandler 1EA8                                       ___xxtofl@sign 00A8  
   TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0     TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0  
          __end_of_TMR6_PeriodMatchCallbackRegister 1F2C                  ??_TMR6_PeriodMatchCallbackRegister 00A2  
                 ?_TMR6_PeriodMatchCallbackRegister 00A0                    _TMR6_PeriodMatchCallbackRegister 1F23  
                                         i1___fladd 0E49                                ??_read_prec_or_width 00A8  
                                         i1___flmul 0285                                         ___fldiv@grs 00B4  
                                         i1___fltol 1587                                         ___fldiv@rem 00AD  
                               _EUSART_Deinitialize 0000                                       ??_getSetpoint 00A2  
                        __end_of_initAdcMultiplexer 1FA2                                ??_position_led_strip 0152  
                                       ___flmul@grs 00D8                           __end_of_EUSART_Initialize 12CE  
                     ??_ADC_DefaultInterruptHandler 0070                           ??_ADC_SetInterruptHandler 00A2  
                                   _SPI1_Initialize 1F3E                                         ?_controller 0070  
                         __end_of_EUSART_ReceiveISR 07FF             __end_of_TMR2_DefaultPeriodMatchCallback 0003  
                 ??_TMR2_DefaultPeriodMatchCallback 0070                    ?_TMR2_DefaultPeriodMatchCallback 0070  
                   _TMR2_DefaultPeriodMatchCallback 0002                        __end_of_INTERRUPT_Initialize 1F67  
                                        ?_SPI1_Open 00A6                                         vfpfcnvrt@ap 00CC  
                                       vfpfcnvrt@cp 00D6                                         vfpfcnvrt@fp 00C9  
                                    __end_of___wmul 1114                                 str2float@multiplier 00E9  
                                      _EUSART_Write 11EB                                      _ADC_Initialize 1097  
                         ??_INT_SetInterruptHandler 00A2                                      __end_of_printf 102B  
                               start_initialization 0042                                         __end_of_abs 101C  
                                        ?i1___fladd 003A                                         __end_of_pad 130D  
                                        ?i1___flmul 0020                                       ??_EUSART_Read 00A0  
                                        ?i1___fltol 003A            __end_of_TMR4_PeriodMatchCallbackRegister 1F08  
                ??_TMR4_PeriodMatchCallbackRegister 00A2                   ?_TMR4_PeriodMatchCallbackRegister 00A0  
                  _TMR4_PeriodMatchCallbackRegister 1EFF                                         putch@txData 00A2  
                         _EUSART_RxInterruptHandler 01D4                                 __end_of_getSetpoint 1F1A  
                                   str2float@number 00EB                                         vfprintf@fmt 00DA  
                        _EUSART_FramingErrorHandler 005F                                            ??___wmul 00A4  
                            __end_of_ADC_Initialize 10AC                                           __Umul8_16 11AA  
                                      _initLedstrip 1000                                         __pdataBANK0 006C  
                                       __pdataBANK2 0168                               position_led_strip@led 0157  
                                          ?_ADC_ISR 0070                            _adcConversionDoneHandler 120F  
                                          ??_printf 00E6                                         ?_printFloat 014E  
                           ??_pwm_fan_LoadDutyValue 0072                                           ___fladd@a 00B2  
                                         ___fladd@b 00AE                                       _SPI1_ByteRead 0000  
                                         ___fldiv@a 00A0                                           ___fldiv@b 00A4  
                                         ___flmul@a 00CE                                           ___flmul@b 00CA  
                                         ___flsub@a 00C2                                           ___flsub@b 00C6  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                                       __pcstackBANK2 014E  
                           __end_of_SPI1_Initialize 1F48                                   i1_getHoogtesensor 1EBA  
                                   i1___xxtofl@sign 0078                                  ?i1_getHoogtesensor 0070  
                                 _sendLedstripFrame 10DE                                 __end_of_EUSART_Read 116C  
                            EUSART_Write@tempTxHead 00A1                                        _is_on_target 0064  
                                         __pnvBANK2 015E                                           __pnvBANK3 01D4  
                                ?_sendLedstripFrame 00A1                                    ___lwdiv@dividend 00A2  
                            _PIN_MANAGER_Initialize 130D                                 ??i1_getHoogtesensor 0072  
                                         _dtoa$2128 00C1                            _TMR4_PeriodMatchCallback 0160  
                              EUSART_Read@readValue 00A1                                   _ADC_SelectChannel 1F8A  
                          i1__Umul8_16@multiplicand 0070                                            ?___fladd 00AE  
                                          ?___fldiv 00A0                                            ?___awdiv 00A0  
                                          ?___awmod 00A0                                            ?___flmul 00CA  
                                          ?___flsub 00C2                                            ?___fltol 00E4  
                               ??_sendLedstripFrame 00A4                                          ?__Umul8_16 00A0  
                                          ?___lwdiv 00A0                                         ??_SPI1_Open 00A7  
                                          ?___lwmod 00A0                                     ?_ADC_Initialize 0070  
                                      _eusartRxHead 0068                                  ?_ADC_SelectChannel 0070  
                                      _eusartTxHead 006B                                        _eusartRxTail 0067  
                                      _eusartTxTail 006A                        ??_INTERRUPT_InterruptManager 007E  
                                getLedNumber@height 00EE                        EUSART_TransmitISR@tempTxTail 0070  
                           _eusartTxBufferRemaining 0069                                            _BAUD1CON 019F  
                                getLedNumber@result 014E                              _EUSART_TransmitDisable 0000  
                               ??_ADC_SelectChannel 00A0                           __end_ofi1_getHoogtesensor 1EC0  
                                       ??i1___fladd 0042                                         ??i1___flmul 0028  
                                       ??i1___fltol 003E                                    ___lwdiv@quotient 00A4  
                                  _getPotentiometer 1F1A                                         _getSetpoint 1F11  
                                     ??_setSetpoint 00AF                           __end_of_sendLedstripFrame 10F8  
                                  _EUSART_IsRxReady 1ED4                                _INTERRUPT_Initialize 1F5C  
                                         _integraal 0140                                    _EUSART_IsTxReady 1ECC  
                                    _eusartRxBuffer 0130                                    _CLOCK_Initialize 1EED  
                                         _dutycycle 0057                            ?_updateLedstripAnimation 0070  
                                    _eusartTxBuffer 0138                                      ___wmul@product 00A4  
                                          _LATAbits 010C                                           clear_ram0 1EC0  
                                          _PIE1bits 0091                   _EUSART_TxCompleteCallbackRegister 0000  
                                          _PIE2bits 0092                                   _eusartRxLastError 014C  
                                     ??_uartHandler 00F0                           __end_of_ADC_SelectChannel 1F96  
                                          _PIR0bits 0010                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                            _OSCSTAT1 091C  
                                        str2float@i 00EA                                           _str2float 0A51  
                                          _SSP1CON1 0215                                            _SSP1CON3 0217  
                                          _TMR2_ISR 1FAF                                            _TMR4_ISR 1FBC  
                                          _SSP1STAT 0214                                           _printLogs 1788  
                          ??_sendLedstripStartFrame 00A1                                           _vfpfcnvrt 0C58  
                                        _ADCON0bits 009D                                   _SPI1_Deinitialize 0000  
                                 ___wmul@multiplier 00A0                            ADC_SelectChannel@channel 00A1  
                                     readLine@index 0065                                         _EUSART_Read 114E  
                                  ?_SPI1_Initialize 0070                               ?_INTERRUPT_Initialize 0070  
                 _EUSART_RxCompleteInterruptHandler 0148                                   ??_TMR2_Initialize 00A0  
                                      ??_controller 004E                                       ??i1__Umul8_16 0072  
                               __end_of_setSetpoint 1F3E                                      str2float@digit 00EF  
                                _initAdcMultiplexer 1F96                                          vfprintf@ap 00DC  
                                        vfprintf@fp 00D8                            ?_ADC_GetConversionResult 0070  
                                        ?_str2float 00E4                          i1ADC_SelectChannel@channel 0071  
                                 ??_getHoogtesensor 00A2                                         ??__Umul8_16 00A2  
                                        ?_printLogs 0070                                 __end_of_uartHandler 0B98  
                        __end_of_EUSART_TransmitISR 10DE                                 ?_initAdcMultiplexer 0070  
                                        ?_vfpfcnvrt 00C9                                            ___xxtofl 0924  
                                __end_of_controller 0E49                                     ___lwdiv@divisor 00A0  
                                _EUSART_AutoBaudSet 0000                                     ___lwdiv@counter 00A6  
                                          __ptext10 171C                                            __ptext11 1788  
                                          __ptext20 09B2                                            __ptext12 0812  
                                          __ptext21 12CE                                            __ptext13 101C  
                                          __ptext30 118B                                            __ptext22 11CA  
                                          __ptext14 1114                                            __ptext31 0801  
                                          __ptext23 1480                                            __ptext15 0C58  
                                          __ptext40 1F1A                                            __ptext32 105D  
                                          __ptext24 1FE3                                            __ptext16 1647  
                                          __ptext41 102B                                            __ptext33 1F2C  
                                          __ptext25 11EB                                            __ptext17 123A  
                                          __ptext50 152D                                            __ptext42 07FF  
                                          __ptext34 1000                                            __ptext26 1ECC  
                                          __ptext18 1265                                            __ptext51 0924  
                                          __ptext43 1EA9                                            __ptext35 1F23  
                                          __ptext27 100D                                            __ptext19 14D5  
                                          __ptext60 1FF1                                            __ptext52 15E7  
                                          __ptext44 0B98                                            __ptext36 16B0  
                                          __ptext28 1351                                            __ptext61 104C  
                                          __ptext53 0075                                            __ptext45 106E  
                                          __ptext37 10F8                                            __ptext29 13E2  
                                          __ptext70 1EED                                            __ptext62 103B  
                                          __ptext54 11AA                                            __ptext46 10DE  
                                          __ptext38 1F96                                            __ptext71 1097  
                                          __ptext63 1F3E                                            __ptext55 0495  
                                          __ptext47 10AC                                            __ptext39 1F8A  
                                          __ptext80 0285                                            __ptext72 1EE4  
                                          __ptext64 130D                                            __ptext56 1F08  
                                          __ptext48 1F67                                            __ptext81 116C  
                                          __ptext65 1F5C                                            __ptext57 1EFF  
                                          __ptext49 1F11                                            __ptext90 1FA2  
                                          __ptext82 0E49                                            __ptext74 1FBC  
                                          __ptext66 1EF6                                            __ptext58 1130  
                                          __ptext91 1EA8                                            __ptext83 1082  
                                          __ptext75 0003                                            __ptext67 1298  
                                          __ptext59 1F7E                                            __ptext92 120F  
                                          __ptext84 1FAF                                            __ptext76 0D4C  
                                          __ptext68 1FD6                                            __ptext93 1F72  
                                          __ptext85 0002                                            __ptext77 1EBA  
                                          __ptext69 1FC9                                            __ptext94 1EB4  
                                          __ptext86 10C4                                            __ptext78 0897  
                                          __ptext87 07B8                                            __ptext79 1587  
                                          __ptext88 1EAC                                            __ptext89 0800  
                                      _SSP1CON1bits 0215                                ??_initAdcMultiplexer 00A2  
                             _EUSART_TransmitEnable 0000                                            _ledstrip 1830  
                                          _readLine 1430                                   ??_TMR4_Initialize 00A0  
                        ??_adcConversionDoneHandler 0072                                          _RC1STAbits 019D  
                                          _setpoint 006C                                            int$flags 007E  
                               __end_ofi1__Umul8_16 118B                                            _vfprintf 1114  
                __end_of_INTERRUPT_InterruptManager 0040                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1FD6               ??_EUSART_FramingErrorCallbackRegister 00A2  
              ?_EUSART_FramingErrorCallbackRegister 00A0                 _EUSART_FramingErrorCallbackRegister 1FC9  
                                         printf@fmt 00E0                                       ?_getLedNumber 00EE  
                                      ??_printFloat 00EE                      pwm_fan_LoadDutyValue@dutyValue 0070  
                                        _INTCONbits 000B                       __end_of_pwm_fan_LoadDutyValue 1097  
                              _INT_InterruptHandler 0061                                      __pstringtext10 18BD  
                                    __pstringtext11 18CA                                      __pstringtext12 18D7  
                                    __pstringtext13 18EC                                      __pstringtext14 18F4  
                                    __pstringtext15 18FB                                      __pstringtext16 0000  
                            ??_INTERRUPT_Initialize 00A2                            position_led_strip@led_on 0158  
                          ?_ADC_SetInterruptHandler 00A0                            position_led_strip@target 0155  
                                       _setSetpoint 1F35                                            intlevel1 0000  
                            i1__Umul8_16@multiplier 0078                                    ___lwmod@dividend 00A2  
                         _EUSART_TxInterruptHandler 0164                             ?_PIN_MANAGER_Initialize 0070  
                                     ?_getDutycycle 00A0                                   ??_TMR6_Initialize 00A0  
                         SPI1_ByteExchange@byteData 00A0          __end_of_EUSART_DefaultFramingErrorCallback 0801  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 0800                     __end_of_ADC_GetConversionResult 1EBA  
                                __end_of_printFloat 0897                                    ??_ADC_Initialize 00A2  
                                       _uartHandler 0AF0                                         ??_str2float 00E8  
                                     _mustPrintLogs 006E                                            printf@ap 00E6  
                                  _SPI1_BufferWrite 0000                            __end_of_getPotentiometer 1F23  
                                       ??_printLogs 00F0                            ?_INT_SetInterruptHandler 00A0  
                          __end_of_EUSART_IsRxReady 1EDC                                      ??_getLedNumber 00F0  
                                       ??_vfpfcnvrt 00CD                            __end_of_EUSART_IsTxReady 1ED4  
                                      str2float@str 00E4                            __end_of_CLOCK_Initialize 1EF6  
                                     __pstringtext1 1800                                       __pstringtext2 1830  
                                     __pstringtext3 18E2                                       __pstringtext4 184C  
                                     __pstringtext5 1865                                       __pstringtext6 187D  
                                     __pstringtext7 188E                                       __pstringtext8 189F  
                                     __pstringtext9 18AE                                          _SPI1_Close 0000  
                            __Umul8_16@multiplicand 00A0                                          _SSP1DATPPS 0E21  
                                        _SSP1CLKPPS 0E20                                     ___lwmod@divisor 00A0  
                                   ___lwmod@counter 00A4                                          _TX1STAbits 019E  
                                      ?_getSetpoint 00A0                              sendLedstripFrame@green 00A1  
                                     ___fladd@signs 00BE                                     controller@error 0053  
                                        _TMR6_Tasks 102B                                  EUSART_Write@txData 00A0  
                            _sendLedstripStartFrame 106E                      __end_of_PIN_MANAGER_Initialize 1351  
                                    ??_getDutycycle 00A2                                         _PWMTMRSbits 061F  
                                      ___fladd@aexp 00BF                                        ___fladd@bexp 00C0  
                             sendLedstripFrame@blue 00A2                                __Umul8_16@multiplier 00A8  
                           SPI1_Open@spiConfigIndex 00A6                                sendLedstripFrame@red 00A4  
                                       i1__Umul8_16 116C                            _TMR2_PeriodMatchCallback 0162  
                        __end_of_spi1_configuration 18EC                                   __Umul8_16@product 00A4  
