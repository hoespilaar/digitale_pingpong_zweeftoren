

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Feb 19 14:22:49 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,space=0,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,space=0,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,space=0,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,space=0,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,space=0,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,space=0,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,space=0,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,space=0,delta=2,noexec
    24                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	inittext,global,class=CODE,space=0,delta=2
    31                           	psect	clrtext,global,class=CODE,space=0,delta=2
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    47                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    50                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    53                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    54                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    55                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    56                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=1
    57                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=1
    58                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=3
    59                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    60                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=3
    64                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    65                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    66                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    67                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2,group=2
    74                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text50,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2,group=2
    88                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2,group=2
    89                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2,group=2
    90                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2,group=2
    91                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2,group=2
    92                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    94                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    95                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    96                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,space=0,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,space=0,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,space=0,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,space=0,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,space=0,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,space=0,merge=1,delta=2
   106                           	psect	text70,local,class=CODE,space=0,merge=1,delta=2
   107                           	psect	text71,local,class=CODE,space=0,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,space=0,merge=1,delta=2
   109                           	psect	intentry,global,class=CODE,space=0,delta=2
   110                           	psect	text74,local,class=CODE,space=0,merge=1,delta=2
   111                           	psect	text75,local,class=CODE,space=0,merge=1,delta=2
   112                           	psect	text76,local,class=CODE,space=0,merge=1,delta=2
   113                           	psect	text77,local,class=CODE,space=0,merge=1,delta=2
   114                           	psect	text78,local,class=CODE,space=0,merge=1,delta=2
   115                           	psect	text79,local,class=CODE,space=0,merge=1,delta=2
   116                           	psect	text80,local,class=CODE,space=0,merge=1,delta=2
   117                           	psect	text81,local,class=CODE,space=0,merge=1,delta=2
   118                           	psect	text82,local,class=CODE,space=0,merge=1,delta=2
   119                           	psect	text83,local,class=CODE,space=0,merge=1,delta=2
   120                           	psect	text84,local,class=CODE,space=0,merge=1,delta=2
   121                           	psect	text85,local,class=CODE,space=0,merge=1,delta=2
   122                           	psect	text86,local,class=CODE,space=0,merge=1,delta=2
   123                           	psect	text87,local,class=CODE,space=0,merge=1,delta=2
   124                           	psect	text88,local,class=CODE,space=0,merge=1,delta=2
   125                           	psect	text89,local,class=CODE,space=0,merge=1,delta=2
   126                           	psect	text90,local,class=CODE,space=0,merge=1,delta=2
   127                           	psect	text91,local,class=CODE,space=0,merge=1,delta=2
   128                           	psect	text92,local,class=CODE,space=0,merge=1,delta=2
   129                           	psect	text93,local,class=CODE,space=0,merge=1,delta=2
   130                           	psect	text94,local,class=CODE,space=0,merge=1,delta=2
   131                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   132                           	dabs	1,0x7E,2
   133     0000                     
   134                           ; Generated 11/01/2024 GMT
   135                           ; 
   136                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution. Publication is not required when
   150                           ;        this file is used in an embedded application.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC16F18345 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168     0008                     bsr             equ	8
   169     0005                     fsr0h           equ	5
   170     0004                     fsr0l           equ	4
   171     0007                     fsr1h           equ	7
   172     0006                     fsr1l           equ	6
   173     0000                     indf            equ	0
   174     0000                     indf0           equ	0
   175     0001                     indf1           equ	1
   176     000B                     intcon          equ	11
   177     0002                     pc              equ	2
   178     0002                     pcl             equ	2
   179     000A                     pclath          equ	10
   180     0003                     status          equ	3
   181     0009                     wreg            equ	9
   182     0000                     INDF0           equ	0	;# 
   183     0001                     INDF1           equ	1	;# 
   184     0002                     PCL             equ	2	;# 
   185     0003                     STATUS          equ	3	;# 
   186     0004                     FSR0L           equ	4	;# 
   187     0005                     FSR0H           equ	5	;# 
   188     0006                     FSR1L           equ	6	;# 
   189     0007                     FSR1H           equ	7	;# 
   190     0008                     BSR             equ	8	;# 
   191     0009                     WREG            equ	9	;# 
   192     000A                     PCLATH          equ	10	;# 
   193     000B                     INTCON          equ	11	;# 
   194     000C                     PORTA           equ	12	;# 
   195     000D                     PORTB           equ	13	;# 
   196     000E                     PORTC           equ	14	;# 
   197     0010                     PIR0            equ	16	;# 
   198     0011                     PIR1            equ	17	;# 
   199     0012                     PIR2            equ	18	;# 
   200     0013                     PIR3            equ	19	;# 
   201     0014                     PIR4            equ	20	;# 
   202     0015                     TMR0L           equ	21	;# 
   203     0015                     TMR0            equ	21	;# 
   204     0016                     TMR0H           equ	22	;# 
   205     0016                     PR0             equ	22	;# 
   206     0017                     T0CON0          equ	23	;# 
   207     0018                     T0CON1          equ	24	;# 
   208     0019                     TMR1            equ	25	;# 
   209     0019                     TMR1L           equ	25	;# 
   210     001A                     TMR1H           equ	26	;# 
   211     001B                     T1CON           equ	27	;# 
   212     001C                     T1GCON          equ	28	;# 
   213     001D                     TMR2            equ	29	;# 
   214     001E                     PR2             equ	30	;# 
   215     001F                     T2CON           equ	31	;# 
   216     008C                     TRISA           equ	140	;# 
   217     008D                     TRISB           equ	141	;# 
   218     008E                     TRISC           equ	142	;# 
   219     0090                     PIE0            equ	144	;# 
   220     0091                     PIE1            equ	145	;# 
   221     0092                     PIE2            equ	146	;# 
   222     0093                     PIE3            equ	147	;# 
   223     0094                     PIE4            equ	148	;# 
   224     0097                     WDTCON          equ	151	;# 
   225     009B                     ADRES           equ	155	;# 
   226     009B                     ADRESL          equ	155	;# 
   227     009C                     ADRESH          equ	156	;# 
   228     009D                     ADCON0          equ	157	;# 
   229     009E                     ADCON1          equ	158	;# 
   230     009F                     ADACT           equ	159	;# 
   231     010C                     LATA            equ	268	;# 
   232     010D                     LATB            equ	269	;# 
   233     010E                     LATC            equ	270	;# 
   234     0111                     CM1CON0         equ	273	;# 
   235     0112                     CM1CON1         equ	274	;# 
   236     0113                     CM2CON0         equ	275	;# 
   237     0114                     CM2CON1         equ	276	;# 
   238     0115                     CMOUT           equ	277	;# 
   239     0116                     BORCON          equ	278	;# 
   240     0117                     FVRCON          equ	279	;# 
   241     0118                     DACCON0         equ	280	;# 
   242     0119                     DACCON1         equ	281	;# 
   243     018C                     ANSELA          equ	396	;# 
   244     018D                     ANSELB          equ	397	;# 
   245     018E                     ANSELC          equ	398	;# 
   246     0197                     VREGCON         equ	407	;# 
   247     0199                     RC1REG          equ	409	;# 
   248     0199                     RCREG           equ	409	;# 
   249     0199                     RCREG1          equ	409	;# 
   250     019A                     TX1REG          equ	410	;# 
   251     019A                     TXREG1          equ	410	;# 
   252     019A                     TXREG           equ	410	;# 
   253     019B                     SP1BRG          equ	411	;# 
   254     019B                     SPBRG           equ	411	;# 
   255     019B                     SP1BRGL         equ	411	;# 
   256     019B                     SPBRG1          equ	411	;# 
   257     019B                     SPBRGL          equ	411	;# 
   258     019C                     SP1BRGH         equ	412	;# 
   259     019C                     SPBRGH          equ	412	;# 
   260     019C                     SPBRGH1         equ	412	;# 
   261     019D                     RC1STA          equ	413	;# 
   262     019D                     RCSTA1          equ	413	;# 
   263     019D                     RCSTA           equ	413	;# 
   264     019E                     TX1STA          equ	414	;# 
   265     019E                     TXSTA1          equ	414	;# 
   266     019E                     TXSTA           equ	414	;# 
   267     019F                     BAUD1CON        equ	415	;# 
   268     019F                     BAUDCON1        equ	415	;# 
   269     019F                     BAUDCTL1        equ	415	;# 
   270     019F                     BAUDCON         equ	415	;# 
   271     019F                     BAUDCTL         equ	415	;# 
   272     020C                     WPUA            equ	524	;# 
   273     020D                     WPUB            equ	525	;# 
   274     020E                     WPUC            equ	526	;# 
   275     0211                     SSP1BUF         equ	529	;# 
   276     0211                     SSPBUF          equ	529	;# 
   277     0212                     SSP1ADD         equ	530	;# 
   278     0212                     SSPADD          equ	530	;# 
   279     0213                     SSP1MSK         equ	531	;# 
   280     0213                     SSPMSK          equ	531	;# 
   281     0214                     SSP1STAT        equ	532	;# 
   282     0214                     SSPSTAT         equ	532	;# 
   283     0215                     SSP1CON1        equ	533	;# 
   284     0215                     SSPCON          equ	533	;# 
   285     0215                     SSPCON1         equ	533	;# 
   286     0215                     SSP1CON         equ	533	;# 
   287     0216                     SSP1CON2        equ	534	;# 
   288     0216                     SSPCON2         equ	534	;# 
   289     0217                     SSP1CON3        equ	535	;# 
   290     0217                     SSPCON3         equ	535	;# 
   291     0219                     SSP2BUF         equ	537	;# 
   292     021A                     SSP2ADD         equ	538	;# 
   293     021B                     SSP2MSK         equ	539	;# 
   294     021C                     SSP2STAT        equ	540	;# 
   295     021D                     SSP2CON1        equ	541	;# 
   296     021D                     SSP2CON         equ	541	;# 
   297     021E                     SSP2CON2        equ	542	;# 
   298     021F                     SSP2CON3        equ	543	;# 
   299     028C                     ODCONA          equ	652	;# 
   300     028D                     ODCONB          equ	653	;# 
   301     028E                     ODCONC          equ	654	;# 
   302     0291                     CCPR1           equ	657	;# 
   303     0291                     CCPR1L          equ	657	;# 
   304     0292                     CCPR1H          equ	658	;# 
   305     0293                     CCP1CON         equ	659	;# 
   306     0294                     CCP1CAP         equ	660	;# 
   307     0295                     CCPR2           equ	661	;# 
   308     0295                     CCPR2L          equ	661	;# 
   309     0296                     CCPR2H          equ	662	;# 
   310     0297                     CCP2CON         equ	663	;# 
   311     0298                     CCP2CAP         equ	664	;# 
   312     029F                     CCPTMRS         equ	671	;# 
   313     030C                     SLRCONA         equ	780	;# 
   314     030D                     SLRCONB         equ	781	;# 
   315     030E                     SLRCONC         equ	782	;# 
   316     0311                     CCPR3           equ	785	;# 
   317     0311                     CCPR3L          equ	785	;# 
   318     0312                     CCPR3H          equ	786	;# 
   319     0313                     CCP3CON         equ	787	;# 
   320     0314                     CCP3CAP         equ	788	;# 
   321     0315                     CCPR4           equ	789	;# 
   322     0315                     CCPR4L          equ	789	;# 
   323     0316                     CCPR4H          equ	790	;# 
   324     0317                     CCP4CON         equ	791	;# 
   325     0318                     CCP4CAP         equ	792	;# 
   326     038C                     INLVLA          equ	908	;# 
   327     038D                     INLVLB          equ	909	;# 
   328     038E                     INLVLC          equ	910	;# 
   329     0391                     IOCAP           equ	913	;# 
   330     0392                     IOCAN           equ	914	;# 
   331     0393                     IOCAF           equ	915	;# 
   332     0394                     IOCBP           equ	916	;# 
   333     0395                     IOCBN           equ	917	;# 
   334     0396                     IOCBF           equ	918	;# 
   335     0397                     IOCCP           equ	919	;# 
   336     0398                     IOCCN           equ	920	;# 
   337     0399                     IOCCF           equ	921	;# 
   338     039A                     CLKRCON         equ	922	;# 
   339     039C                     MDCON           equ	924	;# 
   340     039D                     MDSRC           equ	925	;# 
   341     039E                     MDCARH          equ	926	;# 
   342     039F                     MDCARL          equ	927	;# 
   343     0411                     TMR3            equ	1041	;# 
   344     0411                     TMR3L           equ	1041	;# 
   345     0412                     TMR3H           equ	1042	;# 
   346     0413                     T3CON           equ	1043	;# 
   347     0414                     T3GCON          equ	1044	;# 
   348     0415                     TMR4            equ	1045	;# 
   349     0416                     PR4             equ	1046	;# 
   350     0417                     T4CON           equ	1047	;# 
   351     0418                     TMR5            equ	1048	;# 
   352     0418                     TMR5L           equ	1048	;# 
   353     0419                     TMR5H           equ	1049	;# 
   354     041A                     T5CON           equ	1050	;# 
   355     041B                     T5GCON          equ	1051	;# 
   356     041C                     TMR6            equ	1052	;# 
   357     041D                     PR6             equ	1053	;# 
   358     041E                     T6CON           equ	1054	;# 
   359     041F                     CCDCON          equ	1055	;# 
   360     0498                     NCO1ACC         equ	1176	;# 
   361     0498                     NCO1ACCL        equ	1176	;# 
   362     0499                     NCO1ACCH        equ	1177	;# 
   363     049A                     NCO1ACCU        equ	1178	;# 
   364     049B                     NCO1INC         equ	1179	;# 
   365     049B                     NCO1INCL        equ	1179	;# 
   366     049C                     NCO1INCH        equ	1180	;# 
   367     049D                     NCO1INCU        equ	1181	;# 
   368     049E                     NCO1CON         equ	1182	;# 
   369     049F                     NCO1CLK         equ	1183	;# 
   370     0617                     PWM5DCL         equ	1559	;# 
   371     0618                     PWM5DCH         equ	1560	;# 
   372     0619                     PWM5CON         equ	1561	;# 
   373     0619                     PWM5CON0        equ	1561	;# 
   374     061A                     PWM6DCL         equ	1562	;# 
   375     061B                     PWM6DCH         equ	1563	;# 
   376     061C                     PWM6CON         equ	1564	;# 
   377     061C                     PWM6CON0        equ	1564	;# 
   378     061F                     PWMTMRS         equ	1567	;# 
   379     0691                     CWG1CLKCON      equ	1681	;# 
   380     0692                     CWG1DAT         equ	1682	;# 
   381     0693                     CWG1DBR         equ	1683	;# 
   382     0694                     CWG1DBF         equ	1684	;# 
   383     0695                     CWG1CON0        equ	1685	;# 
   384     0696                     CWG1CON1        equ	1686	;# 
   385     0697                     CWG1AS0         equ	1687	;# 
   386     0698                     CWG1AS1         equ	1688	;# 
   387     0699                     CWG1STR         equ	1689	;# 
   388     0711                     CWG2CLKCON      equ	1809	;# 
   389     0712                     CWG2DAT         equ	1810	;# 
   390     0713                     CWG2DBR         equ	1811	;# 
   391     0714                     CWG2DBF         equ	1812	;# 
   392     0715                     CWG2CON0        equ	1813	;# 
   393     0716                     CWG2CON1        equ	1814	;# 
   394     0717                     CWG2AS0         equ	1815	;# 
   395     0718                     CWG2AS1         equ	1816	;# 
   396     0719                     CWG2STR         equ	1817	;# 
   397     0891                     NVMADR          equ	2193	;# 
   398     0891                     EEADR           equ	2193	;# 
   399     0891                     PMADR           equ	2193	;# 
   400     0891                     NVMADRL         equ	2193	;# 
   401     0891                     EEADRL          equ	2193	;# 
   402     0891                     PMADRL          equ	2193	;# 
   403     0892                     NVMADRH         equ	2194	;# 
   404     0892                     EEADRH          equ	2194	;# 
   405     0892                     PMADRH          equ	2194	;# 
   406     0893                     NVMDAT          equ	2195	;# 
   407     0893                     EEDAT           equ	2195	;# 
   408     0893                     PMDAT           equ	2195	;# 
   409     0893                     NVMDATL         equ	2195	;# 
   410     0893                     EEDATL          equ	2195	;# 
   411     0893                     PMDATL          equ	2195	;# 
   412     0894                     NVMDATH         equ	2196	;# 
   413     0894                     EEDATH          equ	2196	;# 
   414     0894                     PMDATH          equ	2196	;# 
   415     0895                     NVMCON1         equ	2197	;# 
   416     0895                     EECON1          equ	2197	;# 
   417     0895                     PMCON1          equ	2197	;# 
   418     0896                     NVMCON2         equ	2198	;# 
   419     0896                     EECON2          equ	2198	;# 
   420     0896                     PMCON2          equ	2198	;# 
   421     089B                     PCON0           equ	2203	;# 
   422     0911                     PMD0            equ	2321	;# 
   423     0912                     PMD1            equ	2322	;# 
   424     0913                     PMD2            equ	2323	;# 
   425     0914                     PMD3            equ	2324	;# 
   426     0915                     PMD4            equ	2325	;# 
   427     0916                     PMD5            equ	2326	;# 
   428     0918                     CPUDOZE         equ	2328	;# 
   429     0919                     OSCCON1         equ	2329	;# 
   430     091A                     OSCCON2         equ	2330	;# 
   431     091B                     OSCCON3         equ	2331	;# 
   432     091C                     OSCSTAT1        equ	2332	;# 
   433     091D                     OSCEN           equ	2333	;# 
   434     091E                     OSCTUNE         equ	2334	;# 
   435     091F                     OSCFRQ          equ	2335	;# 
   436     0E0F                     PPSLOCK         equ	3599	;# 
   437     0E10                     INTPPS          equ	3600	;# 
   438     0E11                     T0CKIPPS        equ	3601	;# 
   439     0E12                     T1CKIPPS        equ	3602	;# 
   440     0E13                     T1GPPS          equ	3603	;# 
   441     0E14                     CCP1PPS         equ	3604	;# 
   442     0E15                     CCP2PPS         equ	3605	;# 
   443     0E16                     CCP3PPS         equ	3606	;# 
   444     0E17                     CCP4PPS         equ	3607	;# 
   445     0E18                     CWG1PPS         equ	3608	;# 
   446     0E19                     CWG2PPS         equ	3609	;# 
   447     0E1A                     MDCIN1PPS       equ	3610	;# 
   448     0E1B                     MDCIN2PPS       equ	3611	;# 
   449     0E1C                     MDMINPPS        equ	3612	;# 
   450     0E1D                     SSP2CLKPPS      equ	3613	;# 
   451     0E1E                     SSP2DATPPS      equ	3614	;# 
   452     0E1F                     SSP2SSPPS       equ	3615	;# 
   453     0E20                     SSP1CLKPPS      equ	3616	;# 
   454     0E21                     SSP1DATPPS      equ	3617	;# 
   455     0E22                     SSP1SSPPS       equ	3618	;# 
   456     0E24                     RXPPS           equ	3620	;# 
   457     0E25                     TXPPS           equ	3621	;# 
   458     0E28                     CLCIN0PPS       equ	3624	;# 
   459     0E29                     CLCIN1PPS       equ	3625	;# 
   460     0E2A                     CLCIN2PPS       equ	3626	;# 
   461     0E2B                     CLCIN3PPS       equ	3627	;# 
   462     0E2C                     T3CKIPPS        equ	3628	;# 
   463     0E2D                     T3GPPS          equ	3629	;# 
   464     0E2E                     T5CKIPPS        equ	3630	;# 
   465     0E2F                     T5GPPS          equ	3631	;# 
   466     0E90                     RA0PPS          equ	3728	;# 
   467     0E91                     RA1PPS          equ	3729	;# 
   468     0E92                     RA2PPS          equ	3730	;# 
   469     0E94                     RA4PPS          equ	3732	;# 
   470     0E95                     RA5PPS          equ	3733	;# 
   471     0E9C                     RB4PPS          equ	3740	;# 
   472     0E9D                     RB5PPS          equ	3741	;# 
   473     0E9E                     RB6PPS          equ	3742	;# 
   474     0E9F                     RB7PPS          equ	3743	;# 
   475     0EA0                     RC0PPS          equ	3744	;# 
   476     0EA1                     RC1PPS          equ	3745	;# 
   477     0EA2                     RC2PPS          equ	3746	;# 
   478     0EA3                     RC3PPS          equ	3747	;# 
   479     0EA4                     RC4PPS          equ	3748	;# 
   480     0EA5                     RC5PPS          equ	3749	;# 
   481     0EA6                     RC6PPS          equ	3750	;# 
   482     0EA7                     RC7PPS          equ	3751	;# 
   483     0F0F                     CLCDATA         equ	3855	;# 
   484     0F10                     CLC1CON         equ	3856	;# 
   485     0F11                     CLC1POL         equ	3857	;# 
   486     0F12                     CLC1SEL0        equ	3858	;# 
   487     0F13                     CLC1SEL1        equ	3859	;# 
   488     0F14                     CLC1SEL2        equ	3860	;# 
   489     0F15                     CLC1SEL3        equ	3861	;# 
   490     0F16                     CLC1GLS0        equ	3862	;# 
   491     0F17                     CLC1GLS1        equ	3863	;# 
   492     0F18                     CLC1GLS2        equ	3864	;# 
   493     0F19                     CLC1GLS3        equ	3865	;# 
   494     0F1A                     CLC2CON         equ	3866	;# 
   495     0F1B                     CLC2POL         equ	3867	;# 
   496     0F1C                     CLC2SEL0        equ	3868	;# 
   497     0F1D                     CLC2SEL1        equ	3869	;# 
   498     0F1E                     CLC2SEL2        equ	3870	;# 
   499     0F1F                     CLC2SEL3        equ	3871	;# 
   500     0F20                     CLC2GLS0        equ	3872	;# 
   501     0F21                     CLC2GLS1        equ	3873	;# 
   502     0F22                     CLC2GLS2        equ	3874	;# 
   503     0F23                     CLC2GLS3        equ	3875	;# 
   504     0F24                     CLC3CON         equ	3876	;# 
   505     0F25                     CLC3POL         equ	3877	;# 
   506     0F26                     CLC3SEL0        equ	3878	;# 
   507     0F27                     CLC3SEL1        equ	3879	;# 
   508     0F28                     CLC3SEL2        equ	3880	;# 
   509     0F29                     CLC3SEL3        equ	3881	;# 
   510     0F2A                     CLC3GLS0        equ	3882	;# 
   511     0F2B                     CLC3GLS1        equ	3883	;# 
   512     0F2C                     CLC3GLS2        equ	3884	;# 
   513     0F2D                     CLC3GLS3        equ	3885	;# 
   514     0F2E                     CLC4CON         equ	3886	;# 
   515     0F2F                     CLC4POL         equ	3887	;# 
   516     0F30                     CLC4SEL0        equ	3888	;# 
   517     0F31                     CLC4SEL1        equ	3889	;# 
   518     0F32                     CLC4SEL2        equ	3890	;# 
   519     0F33                     CLC4SEL3        equ	3891	;# 
   520     0F34                     CLC4GLS0        equ	3892	;# 
   521     0F35                     CLC4GLS1        equ	3893	;# 
   522     0F36                     CLC4GLS2        equ	3894	;# 
   523     0F37                     CLC4GLS3        equ	3895	;# 
   524     0FE4                     STATUS_SHAD     equ	4068	;# 
   525     0FE5                     WREG_SHAD       equ	4069	;# 
   526     0FE6                     BSR_SHAD        equ	4070	;# 
   527     0FE7                     PCLATH_SHAD     equ	4071	;# 
   528     0FE8                     FSR0L_SHAD      equ	4072	;# 
   529     0FE9                     FSR0H_SHAD      equ	4073	;# 
   530     0FEA                     FSR1L_SHAD      equ	4074	;# 
   531     0FEB                     FSR1H_SHAD      equ	4075	;# 
   532     0FED                     STKPTR          equ	4077	;# 
   533     0FEE                     TOSL            equ	4078	;# 
   534     0FEF                     TOSH            equ	4079	;# 
   535     0000                     INDF0           equ	0	;# 
   536     0001                     INDF1           equ	1	;# 
   537     0002                     PCL             equ	2	;# 
   538     0003                     STATUS          equ	3	;# 
   539     0004                     FSR0L           equ	4	;# 
   540     0005                     FSR0H           equ	5	;# 
   541     0006                     FSR1L           equ	6	;# 
   542     0007                     FSR1H           equ	7	;# 
   543     0008                     BSR             equ	8	;# 
   544     0009                     WREG            equ	9	;# 
   545     000A                     PCLATH          equ	10	;# 
   546     000B                     INTCON          equ	11	;# 
   547     000C                     PORTA           equ	12	;# 
   548     000D                     PORTB           equ	13	;# 
   549     000E                     PORTC           equ	14	;# 
   550     0010                     PIR0            equ	16	;# 
   551     0011                     PIR1            equ	17	;# 
   552     0012                     PIR2            equ	18	;# 
   553     0013                     PIR3            equ	19	;# 
   554     0014                     PIR4            equ	20	;# 
   555     0015                     TMR0L           equ	21	;# 
   556     0015                     TMR0            equ	21	;# 
   557     0016                     TMR0H           equ	22	;# 
   558     0016                     PR0             equ	22	;# 
   559     0017                     T0CON0          equ	23	;# 
   560     0018                     T0CON1          equ	24	;# 
   561     0019                     TMR1            equ	25	;# 
   562     0019                     TMR1L           equ	25	;# 
   563     001A                     TMR1H           equ	26	;# 
   564     001B                     T1CON           equ	27	;# 
   565     001C                     T1GCON          equ	28	;# 
   566     001D                     TMR2            equ	29	;# 
   567     001E                     PR2             equ	30	;# 
   568     001F                     T2CON           equ	31	;# 
   569     008C                     TRISA           equ	140	;# 
   570     008D                     TRISB           equ	141	;# 
   571     008E                     TRISC           equ	142	;# 
   572     0090                     PIE0            equ	144	;# 
   573     0091                     PIE1            equ	145	;# 
   574     0092                     PIE2            equ	146	;# 
   575     0093                     PIE3            equ	147	;# 
   576     0094                     PIE4            equ	148	;# 
   577     0097                     WDTCON          equ	151	;# 
   578     009B                     ADRES           equ	155	;# 
   579     009B                     ADRESL          equ	155	;# 
   580     009C                     ADRESH          equ	156	;# 
   581     009D                     ADCON0          equ	157	;# 
   582     009E                     ADCON1          equ	158	;# 
   583     009F                     ADACT           equ	159	;# 
   584     010C                     LATA            equ	268	;# 
   585     010D                     LATB            equ	269	;# 
   586     010E                     LATC            equ	270	;# 
   587     0111                     CM1CON0         equ	273	;# 
   588     0112                     CM1CON1         equ	274	;# 
   589     0113                     CM2CON0         equ	275	;# 
   590     0114                     CM2CON1         equ	276	;# 
   591     0115                     CMOUT           equ	277	;# 
   592     0116                     BORCON          equ	278	;# 
   593     0117                     FVRCON          equ	279	;# 
   594     0118                     DACCON0         equ	280	;# 
   595     0119                     DACCON1         equ	281	;# 
   596     018C                     ANSELA          equ	396	;# 
   597     018D                     ANSELB          equ	397	;# 
   598     018E                     ANSELC          equ	398	;# 
   599     0197                     VREGCON         equ	407	;# 
   600     0199                     RC1REG          equ	409	;# 
   601     0199                     RCREG           equ	409	;# 
   602     0199                     RCREG1          equ	409	;# 
   603     019A                     TX1REG          equ	410	;# 
   604     019A                     TXREG1          equ	410	;# 
   605     019A                     TXREG           equ	410	;# 
   606     019B                     SP1BRG          equ	411	;# 
   607     019B                     SPBRG           equ	411	;# 
   608     019B                     SP1BRGL         equ	411	;# 
   609     019B                     SPBRG1          equ	411	;# 
   610     019B                     SPBRGL          equ	411	;# 
   611     019C                     SP1BRGH         equ	412	;# 
   612     019C                     SPBRGH          equ	412	;# 
   613     019C                     SPBRGH1         equ	412	;# 
   614     019D                     RC1STA          equ	413	;# 
   615     019D                     RCSTA1          equ	413	;# 
   616     019D                     RCSTA           equ	413	;# 
   617     019E                     TX1STA          equ	414	;# 
   618     019E                     TXSTA1          equ	414	;# 
   619     019E                     TXSTA           equ	414	;# 
   620     019F                     BAUD1CON        equ	415	;# 
   621     019F                     BAUDCON1        equ	415	;# 
   622     019F                     BAUDCTL1        equ	415	;# 
   623     019F                     BAUDCON         equ	415	;# 
   624     019F                     BAUDCTL         equ	415	;# 
   625     020C                     WPUA            equ	524	;# 
   626     020D                     WPUB            equ	525	;# 
   627     020E                     WPUC            equ	526	;# 
   628     0211                     SSP1BUF         equ	529	;# 
   629     0211                     SSPBUF          equ	529	;# 
   630     0212                     SSP1ADD         equ	530	;# 
   631     0212                     SSPADD          equ	530	;# 
   632     0213                     SSP1MSK         equ	531	;# 
   633     0213                     SSPMSK          equ	531	;# 
   634     0214                     SSP1STAT        equ	532	;# 
   635     0214                     SSPSTAT         equ	532	;# 
   636     0215                     SSP1CON1        equ	533	;# 
   637     0215                     SSPCON          equ	533	;# 
   638     0215                     SSPCON1         equ	533	;# 
   639     0215                     SSP1CON         equ	533	;# 
   640     0216                     SSP1CON2        equ	534	;# 
   641     0216                     SSPCON2         equ	534	;# 
   642     0217                     SSP1CON3        equ	535	;# 
   643     0217                     SSPCON3         equ	535	;# 
   644     0219                     SSP2BUF         equ	537	;# 
   645     021A                     SSP2ADD         equ	538	;# 
   646     021B                     SSP2MSK         equ	539	;# 
   647     021C                     SSP2STAT        equ	540	;# 
   648     021D                     SSP2CON1        equ	541	;# 
   649     021D                     SSP2CON         equ	541	;# 
   650     021E                     SSP2CON2        equ	542	;# 
   651     021F                     SSP2CON3        equ	543	;# 
   652     028C                     ODCONA          equ	652	;# 
   653     028D                     ODCONB          equ	653	;# 
   654     028E                     ODCONC          equ	654	;# 
   655     0291                     CCPR1           equ	657	;# 
   656     0291                     CCPR1L          equ	657	;# 
   657     0292                     CCPR1H          equ	658	;# 
   658     0293                     CCP1CON         equ	659	;# 
   659     0294                     CCP1CAP         equ	660	;# 
   660     0295                     CCPR2           equ	661	;# 
   661     0295                     CCPR2L          equ	661	;# 
   662     0296                     CCPR2H          equ	662	;# 
   663     0297                     CCP2CON         equ	663	;# 
   664     0298                     CCP2CAP         equ	664	;# 
   665     029F                     CCPTMRS         equ	671	;# 
   666     030C                     SLRCONA         equ	780	;# 
   667     030D                     SLRCONB         equ	781	;# 
   668     030E                     SLRCONC         equ	782	;# 
   669     0311                     CCPR3           equ	785	;# 
   670     0311                     CCPR3L          equ	785	;# 
   671     0312                     CCPR3H          equ	786	;# 
   672     0313                     CCP3CON         equ	787	;# 
   673     0314                     CCP3CAP         equ	788	;# 
   674     0315                     CCPR4           equ	789	;# 
   675     0315                     CCPR4L          equ	789	;# 
   676     0316                     CCPR4H          equ	790	;# 
   677     0317                     CCP4CON         equ	791	;# 
   678     0318                     CCP4CAP         equ	792	;# 
   679     038C                     INLVLA          equ	908	;# 
   680     038D                     INLVLB          equ	909	;# 
   681     038E                     INLVLC          equ	910	;# 
   682     0391                     IOCAP           equ	913	;# 
   683     0392                     IOCAN           equ	914	;# 
   684     0393                     IOCAF           equ	915	;# 
   685     0394                     IOCBP           equ	916	;# 
   686     0395                     IOCBN           equ	917	;# 
   687     0396                     IOCBF           equ	918	;# 
   688     0397                     IOCCP           equ	919	;# 
   689     0398                     IOCCN           equ	920	;# 
   690     0399                     IOCCF           equ	921	;# 
   691     039A                     CLKRCON         equ	922	;# 
   692     039C                     MDCON           equ	924	;# 
   693     039D                     MDSRC           equ	925	;# 
   694     039E                     MDCARH          equ	926	;# 
   695     039F                     MDCARL          equ	927	;# 
   696     0411                     TMR3            equ	1041	;# 
   697     0411                     TMR3L           equ	1041	;# 
   698     0412                     TMR3H           equ	1042	;# 
   699     0413                     T3CON           equ	1043	;# 
   700     0414                     T3GCON          equ	1044	;# 
   701     0415                     TMR4            equ	1045	;# 
   702     0416                     PR4             equ	1046	;# 
   703     0417                     T4CON           equ	1047	;# 
   704     0418                     TMR5            equ	1048	;# 
   705     0418                     TMR5L           equ	1048	;# 
   706     0419                     TMR5H           equ	1049	;# 
   707     041A                     T5CON           equ	1050	;# 
   708     041B                     T5GCON          equ	1051	;# 
   709     041C                     TMR6            equ	1052	;# 
   710     041D                     PR6             equ	1053	;# 
   711     041E                     T6CON           equ	1054	;# 
   712     041F                     CCDCON          equ	1055	;# 
   713     0498                     NCO1ACC         equ	1176	;# 
   714     0498                     NCO1ACCL        equ	1176	;# 
   715     0499                     NCO1ACCH        equ	1177	;# 
   716     049A                     NCO1ACCU        equ	1178	;# 
   717     049B                     NCO1INC         equ	1179	;# 
   718     049B                     NCO1INCL        equ	1179	;# 
   719     049C                     NCO1INCH        equ	1180	;# 
   720     049D                     NCO1INCU        equ	1181	;# 
   721     049E                     NCO1CON         equ	1182	;# 
   722     049F                     NCO1CLK         equ	1183	;# 
   723     0617                     PWM5DCL         equ	1559	;# 
   724     0618                     PWM5DCH         equ	1560	;# 
   725     0619                     PWM5CON         equ	1561	;# 
   726     0619                     PWM5CON0        equ	1561	;# 
   727     061A                     PWM6DCL         equ	1562	;# 
   728     061B                     PWM6DCH         equ	1563	;# 
   729     061C                     PWM6CON         equ	1564	;# 
   730     061C                     PWM6CON0        equ	1564	;# 
   731     061F                     PWMTMRS         equ	1567	;# 
   732     0691                     CWG1CLKCON      equ	1681	;# 
   733     0692                     CWG1DAT         equ	1682	;# 
   734     0693                     CWG1DBR         equ	1683	;# 
   735     0694                     CWG1DBF         equ	1684	;# 
   736     0695                     CWG1CON0        equ	1685	;# 
   737     0696                     CWG1CON1        equ	1686	;# 
   738     0697                     CWG1AS0         equ	1687	;# 
   739     0698                     CWG1AS1         equ	1688	;# 
   740     0699                     CWG1STR         equ	1689	;# 
   741     0711                     CWG2CLKCON      equ	1809	;# 
   742     0712                     CWG2DAT         equ	1810	;# 
   743     0713                     CWG2DBR         equ	1811	;# 
   744     0714                     CWG2DBF         equ	1812	;# 
   745     0715                     CWG2CON0        equ	1813	;# 
   746     0716                     CWG2CON1        equ	1814	;# 
   747     0717                     CWG2AS0         equ	1815	;# 
   748     0718                     CWG2AS1         equ	1816	;# 
   749     0719                     CWG2STR         equ	1817	;# 
   750     0891                     NVMADR          equ	2193	;# 
   751     0891                     EEADR           equ	2193	;# 
   752     0891                     PMADR           equ	2193	;# 
   753     0891                     NVMADRL         equ	2193	;# 
   754     0891                     EEADRL          equ	2193	;# 
   755     0891                     PMADRL          equ	2193	;# 
   756     0892                     NVMADRH         equ	2194	;# 
   757     0892                     EEADRH          equ	2194	;# 
   758     0892                     PMADRH          equ	2194	;# 
   759     0893                     NVMDAT          equ	2195	;# 
   760     0893                     EEDAT           equ	2195	;# 
   761     0893                     PMDAT           equ	2195	;# 
   762     0893                     NVMDATL         equ	2195	;# 
   763     0893                     EEDATL          equ	2195	;# 
   764     0893                     PMDATL          equ	2195	;# 
   765     0894                     NVMDATH         equ	2196	;# 
   766     0894                     EEDATH          equ	2196	;# 
   767     0894                     PMDATH          equ	2196	;# 
   768     0895                     NVMCON1         equ	2197	;# 
   769     0895                     EECON1          equ	2197	;# 
   770     0895                     PMCON1          equ	2197	;# 
   771     0896                     NVMCON2         equ	2198	;# 
   772     0896                     EECON2          equ	2198	;# 
   773     0896                     PMCON2          equ	2198	;# 
   774     089B                     PCON0           equ	2203	;# 
   775     0911                     PMD0            equ	2321	;# 
   776     0912                     PMD1            equ	2322	;# 
   777     0913                     PMD2            equ	2323	;# 
   778     0914                     PMD3            equ	2324	;# 
   779     0915                     PMD4            equ	2325	;# 
   780     0916                     PMD5            equ	2326	;# 
   781     0918                     CPUDOZE         equ	2328	;# 
   782     0919                     OSCCON1         equ	2329	;# 
   783     091A                     OSCCON2         equ	2330	;# 
   784     091B                     OSCCON3         equ	2331	;# 
   785     091C                     OSCSTAT1        equ	2332	;# 
   786     091D                     OSCEN           equ	2333	;# 
   787     091E                     OSCTUNE         equ	2334	;# 
   788     091F                     OSCFRQ          equ	2335	;# 
   789     0E0F                     PPSLOCK         equ	3599	;# 
   790     0E10                     INTPPS          equ	3600	;# 
   791     0E11                     T0CKIPPS        equ	3601	;# 
   792     0E12                     T1CKIPPS        equ	3602	;# 
   793     0E13                     T1GPPS          equ	3603	;# 
   794     0E14                     CCP1PPS         equ	3604	;# 
   795     0E15                     CCP2PPS         equ	3605	;# 
   796     0E16                     CCP3PPS         equ	3606	;# 
   797     0E17                     CCP4PPS         equ	3607	;# 
   798     0E18                     CWG1PPS         equ	3608	;# 
   799     0E19                     CWG2PPS         equ	3609	;# 
   800     0E1A                     MDCIN1PPS       equ	3610	;# 
   801     0E1B                     MDCIN2PPS       equ	3611	;# 
   802     0E1C                     MDMINPPS        equ	3612	;# 
   803     0E1D                     SSP2CLKPPS      equ	3613	;# 
   804     0E1E                     SSP2DATPPS      equ	3614	;# 
   805     0E1F                     SSP2SSPPS       equ	3615	;# 
   806     0E20                     SSP1CLKPPS      equ	3616	;# 
   807     0E21                     SSP1DATPPS      equ	3617	;# 
   808     0E22                     SSP1SSPPS       equ	3618	;# 
   809     0E24                     RXPPS           equ	3620	;# 
   810     0E25                     TXPPS           equ	3621	;# 
   811     0E28                     CLCIN0PPS       equ	3624	;# 
   812     0E29                     CLCIN1PPS       equ	3625	;# 
   813     0E2A                     CLCIN2PPS       equ	3626	;# 
   814     0E2B                     CLCIN3PPS       equ	3627	;# 
   815     0E2C                     T3CKIPPS        equ	3628	;# 
   816     0E2D                     T3GPPS          equ	3629	;# 
   817     0E2E                     T5CKIPPS        equ	3630	;# 
   818     0E2F                     T5GPPS          equ	3631	;# 
   819     0E90                     RA0PPS          equ	3728	;# 
   820     0E91                     RA1PPS          equ	3729	;# 
   821     0E92                     RA2PPS          equ	3730	;# 
   822     0E94                     RA4PPS          equ	3732	;# 
   823     0E95                     RA5PPS          equ	3733	;# 
   824     0E9C                     RB4PPS          equ	3740	;# 
   825     0E9D                     RB5PPS          equ	3741	;# 
   826     0E9E                     RB6PPS          equ	3742	;# 
   827     0E9F                     RB7PPS          equ	3743	;# 
   828     0EA0                     RC0PPS          equ	3744	;# 
   829     0EA1                     RC1PPS          equ	3745	;# 
   830     0EA2                     RC2PPS          equ	3746	;# 
   831     0EA3                     RC3PPS          equ	3747	;# 
   832     0EA4                     RC4PPS          equ	3748	;# 
   833     0EA5                     RC5PPS          equ	3749	;# 
   834     0EA6                     RC6PPS          equ	3750	;# 
   835     0EA7                     RC7PPS          equ	3751	;# 
   836     0F0F                     CLCDATA         equ	3855	;# 
   837     0F10                     CLC1CON         equ	3856	;# 
   838     0F11                     CLC1POL         equ	3857	;# 
   839     0F12                     CLC1SEL0        equ	3858	;# 
   840     0F13                     CLC1SEL1        equ	3859	;# 
   841     0F14                     CLC1SEL2        equ	3860	;# 
   842     0F15                     CLC1SEL3        equ	3861	;# 
   843     0F16                     CLC1GLS0        equ	3862	;# 
   844     0F17                     CLC1GLS1        equ	3863	;# 
   845     0F18                     CLC1GLS2        equ	3864	;# 
   846     0F19                     CLC1GLS3        equ	3865	;# 
   847     0F1A                     CLC2CON         equ	3866	;# 
   848     0F1B                     CLC2POL         equ	3867	;# 
   849     0F1C                     CLC2SEL0        equ	3868	;# 
   850     0F1D                     CLC2SEL1        equ	3869	;# 
   851     0F1E                     CLC2SEL2        equ	3870	;# 
   852     0F1F                     CLC2SEL3        equ	3871	;# 
   853     0F20                     CLC2GLS0        equ	3872	;# 
   854     0F21                     CLC2GLS1        equ	3873	;# 
   855     0F22                     CLC2GLS2        equ	3874	;# 
   856     0F23                     CLC2GLS3        equ	3875	;# 
   857     0F24                     CLC3CON         equ	3876	;# 
   858     0F25                     CLC3POL         equ	3877	;# 
   859     0F26                     CLC3SEL0        equ	3878	;# 
   860     0F27                     CLC3SEL1        equ	3879	;# 
   861     0F28                     CLC3SEL2        equ	3880	;# 
   862     0F29                     CLC3SEL3        equ	3881	;# 
   863     0F2A                     CLC3GLS0        equ	3882	;# 
   864     0F2B                     CLC3GLS1        equ	3883	;# 
   865     0F2C                     CLC3GLS2        equ	3884	;# 
   866     0F2D                     CLC3GLS3        equ	3885	;# 
   867     0F2E                     CLC4CON         equ	3886	;# 
   868     0F2F                     CLC4POL         equ	3887	;# 
   869     0F30                     CLC4SEL0        equ	3888	;# 
   870     0F31                     CLC4SEL1        equ	3889	;# 
   871     0F32                     CLC4SEL2        equ	3890	;# 
   872     0F33                     CLC4SEL3        equ	3891	;# 
   873     0F34                     CLC4GLS0        equ	3892	;# 
   874     0F35                     CLC4GLS1        equ	3893	;# 
   875     0F36                     CLC4GLS2        equ	3894	;# 
   876     0F37                     CLC4GLS3        equ	3895	;# 
   877     0FE4                     STATUS_SHAD     equ	4068	;# 
   878     0FE5                     WREG_SHAD       equ	4069	;# 
   879     0FE6                     BSR_SHAD        equ	4070	;# 
   880     0FE7                     PCLATH_SHAD     equ	4071	;# 
   881     0FE8                     FSR0L_SHAD      equ	4072	;# 
   882     0FE9                     FSR0H_SHAD      equ	4073	;# 
   883     0FEA                     FSR1L_SHAD      equ	4074	;# 
   884     0FEB                     FSR1H_SHAD      equ	4075	;# 
   885     0FED                     STKPTR          equ	4077	;# 
   886     0FEE                     TOSL            equ	4078	;# 
   887     0FEF                     TOSH            equ	4079	;# 
   888     0000                     INDF0           equ	0	;# 
   889     0001                     INDF1           equ	1	;# 
   890     0002                     PCL             equ	2	;# 
   891     0003                     STATUS          equ	3	;# 
   892     0004                     FSR0L           equ	4	;# 
   893     0005                     FSR0H           equ	5	;# 
   894     0006                     FSR1L           equ	6	;# 
   895     0007                     FSR1H           equ	7	;# 
   896     0008                     BSR             equ	8	;# 
   897     0009                     WREG            equ	9	;# 
   898     000A                     PCLATH          equ	10	;# 
   899     000B                     INTCON          equ	11	;# 
   900     000C                     PORTA           equ	12	;# 
   901     000D                     PORTB           equ	13	;# 
   902     000E                     PORTC           equ	14	;# 
   903     0010                     PIR0            equ	16	;# 
   904     0011                     PIR1            equ	17	;# 
   905     0012                     PIR2            equ	18	;# 
   906     0013                     PIR3            equ	19	;# 
   907     0014                     PIR4            equ	20	;# 
   908     0015                     TMR0L           equ	21	;# 
   909     0015                     TMR0            equ	21	;# 
   910     0016                     TMR0H           equ	22	;# 
   911     0016                     PR0             equ	22	;# 
   912     0017                     T0CON0          equ	23	;# 
   913     0018                     T0CON1          equ	24	;# 
   914     0019                     TMR1            equ	25	;# 
   915     0019                     TMR1L           equ	25	;# 
   916     001A                     TMR1H           equ	26	;# 
   917     001B                     T1CON           equ	27	;# 
   918     001C                     T1GCON          equ	28	;# 
   919     001D                     TMR2            equ	29	;# 
   920     001E                     PR2             equ	30	;# 
   921     001F                     T2CON           equ	31	;# 
   922     008C                     TRISA           equ	140	;# 
   923     008D                     TRISB           equ	141	;# 
   924     008E                     TRISC           equ	142	;# 
   925     0090                     PIE0            equ	144	;# 
   926     0091                     PIE1            equ	145	;# 
   927     0092                     PIE2            equ	146	;# 
   928     0093                     PIE3            equ	147	;# 
   929     0094                     PIE4            equ	148	;# 
   930     0097                     WDTCON          equ	151	;# 
   931     009B                     ADRES           equ	155	;# 
   932     009B                     ADRESL          equ	155	;# 
   933     009C                     ADRESH          equ	156	;# 
   934     009D                     ADCON0          equ	157	;# 
   935     009E                     ADCON1          equ	158	;# 
   936     009F                     ADACT           equ	159	;# 
   937     010C                     LATA            equ	268	;# 
   938     010D                     LATB            equ	269	;# 
   939     010E                     LATC            equ	270	;# 
   940     0111                     CM1CON0         equ	273	;# 
   941     0112                     CM1CON1         equ	274	;# 
   942     0113                     CM2CON0         equ	275	;# 
   943     0114                     CM2CON1         equ	276	;# 
   944     0115                     CMOUT           equ	277	;# 
   945     0116                     BORCON          equ	278	;# 
   946     0117                     FVRCON          equ	279	;# 
   947     0118                     DACCON0         equ	280	;# 
   948     0119                     DACCON1         equ	281	;# 
   949     018C                     ANSELA          equ	396	;# 
   950     018D                     ANSELB          equ	397	;# 
   951     018E                     ANSELC          equ	398	;# 
   952     0197                     VREGCON         equ	407	;# 
   953     0199                     RC1REG          equ	409	;# 
   954     0199                     RCREG           equ	409	;# 
   955     0199                     RCREG1          equ	409	;# 
   956     019A                     TX1REG          equ	410	;# 
   957     019A                     TXREG1          equ	410	;# 
   958     019A                     TXREG           equ	410	;# 
   959     019B                     SP1BRG          equ	411	;# 
   960     019B                     SPBRG           equ	411	;# 
   961     019B                     SP1BRGL         equ	411	;# 
   962     019B                     SPBRG1          equ	411	;# 
   963     019B                     SPBRGL          equ	411	;# 
   964     019C                     SP1BRGH         equ	412	;# 
   965     019C                     SPBRGH          equ	412	;# 
   966     019C                     SPBRGH1         equ	412	;# 
   967     019D                     RC1STA          equ	413	;# 
   968     019D                     RCSTA1          equ	413	;# 
   969     019D                     RCSTA           equ	413	;# 
   970     019E                     TX1STA          equ	414	;# 
   971     019E                     TXSTA1          equ	414	;# 
   972     019E                     TXSTA           equ	414	;# 
   973     019F                     BAUD1CON        equ	415	;# 
   974     019F                     BAUDCON1        equ	415	;# 
   975     019F                     BAUDCTL1        equ	415	;# 
   976     019F                     BAUDCON         equ	415	;# 
   977     019F                     BAUDCTL         equ	415	;# 
   978     020C                     WPUA            equ	524	;# 
   979     020D                     WPUB            equ	525	;# 
   980     020E                     WPUC            equ	526	;# 
   981     0211                     SSP1BUF         equ	529	;# 
   982     0211                     SSPBUF          equ	529	;# 
   983     0212                     SSP1ADD         equ	530	;# 
   984     0212                     SSPADD          equ	530	;# 
   985     0213                     SSP1MSK         equ	531	;# 
   986     0213                     SSPMSK          equ	531	;# 
   987     0214                     SSP1STAT        equ	532	;# 
   988     0214                     SSPSTAT         equ	532	;# 
   989     0215                     SSP1CON1        equ	533	;# 
   990     0215                     SSPCON          equ	533	;# 
   991     0215                     SSPCON1         equ	533	;# 
   992     0215                     SSP1CON         equ	533	;# 
   993     0216                     SSP1CON2        equ	534	;# 
   994     0216                     SSPCON2         equ	534	;# 
   995     0217                     SSP1CON3        equ	535	;# 
   996     0217                     SSPCON3         equ	535	;# 
   997     0219                     SSP2BUF         equ	537	;# 
   998     021A                     SSP2ADD         equ	538	;# 
   999     021B                     SSP2MSK         equ	539	;# 
  1000     021C                     SSP2STAT        equ	540	;# 
  1001     021D                     SSP2CON1        equ	541	;# 
  1002     021D                     SSP2CON         equ	541	;# 
  1003     021E                     SSP2CON2        equ	542	;# 
  1004     021F                     SSP2CON3        equ	543	;# 
  1005     028C                     ODCONA          equ	652	;# 
  1006     028D                     ODCONB          equ	653	;# 
  1007     028E                     ODCONC          equ	654	;# 
  1008     0291                     CCPR1           equ	657	;# 
  1009     0291                     CCPR1L          equ	657	;# 
  1010     0292                     CCPR1H          equ	658	;# 
  1011     0293                     CCP1CON         equ	659	;# 
  1012     0294                     CCP1CAP         equ	660	;# 
  1013     0295                     CCPR2           equ	661	;# 
  1014     0295                     CCPR2L          equ	661	;# 
  1015     0296                     CCPR2H          equ	662	;# 
  1016     0297                     CCP2CON         equ	663	;# 
  1017     0298                     CCP2CAP         equ	664	;# 
  1018     029F                     CCPTMRS         equ	671	;# 
  1019     030C                     SLRCONA         equ	780	;# 
  1020     030D                     SLRCONB         equ	781	;# 
  1021     030E                     SLRCONC         equ	782	;# 
  1022     0311                     CCPR3           equ	785	;# 
  1023     0311                     CCPR3L          equ	785	;# 
  1024     0312                     CCPR3H          equ	786	;# 
  1025     0313                     CCP3CON         equ	787	;# 
  1026     0314                     CCP3CAP         equ	788	;# 
  1027     0315                     CCPR4           equ	789	;# 
  1028     0315                     CCPR4L          equ	789	;# 
  1029     0316                     CCPR4H          equ	790	;# 
  1030     0317                     CCP4CON         equ	791	;# 
  1031     0318                     CCP4CAP         equ	792	;# 
  1032     038C                     INLVLA          equ	908	;# 
  1033     038D                     INLVLB          equ	909	;# 
  1034     038E                     INLVLC          equ	910	;# 
  1035     0391                     IOCAP           equ	913	;# 
  1036     0392                     IOCAN           equ	914	;# 
  1037     0393                     IOCAF           equ	915	;# 
  1038     0394                     IOCBP           equ	916	;# 
  1039     0395                     IOCBN           equ	917	;# 
  1040     0396                     IOCBF           equ	918	;# 
  1041     0397                     IOCCP           equ	919	;# 
  1042     0398                     IOCCN           equ	920	;# 
  1043     0399                     IOCCF           equ	921	;# 
  1044     039A                     CLKRCON         equ	922	;# 
  1045     039C                     MDCON           equ	924	;# 
  1046     039D                     MDSRC           equ	925	;# 
  1047     039E                     MDCARH          equ	926	;# 
  1048     039F                     MDCARL          equ	927	;# 
  1049     0411                     TMR3            equ	1041	;# 
  1050     0411                     TMR3L           equ	1041	;# 
  1051     0412                     TMR3H           equ	1042	;# 
  1052     0413                     T3CON           equ	1043	;# 
  1053     0414                     T3GCON          equ	1044	;# 
  1054     0415                     TMR4            equ	1045	;# 
  1055     0416                     PR4             equ	1046	;# 
  1056     0417                     T4CON           equ	1047	;# 
  1057     0418                     TMR5            equ	1048	;# 
  1058     0418                     TMR5L           equ	1048	;# 
  1059     0419                     TMR5H           equ	1049	;# 
  1060     041A                     T5CON           equ	1050	;# 
  1061     041B                     T5GCON          equ	1051	;# 
  1062     041C                     TMR6            equ	1052	;# 
  1063     041D                     PR6             equ	1053	;# 
  1064     041E                     T6CON           equ	1054	;# 
  1065     041F                     CCDCON          equ	1055	;# 
  1066     0498                     NCO1ACC         equ	1176	;# 
  1067     0498                     NCO1ACCL        equ	1176	;# 
  1068     0499                     NCO1ACCH        equ	1177	;# 
  1069     049A                     NCO1ACCU        equ	1178	;# 
  1070     049B                     NCO1INC         equ	1179	;# 
  1071     049B                     NCO1INCL        equ	1179	;# 
  1072     049C                     NCO1INCH        equ	1180	;# 
  1073     049D                     NCO1INCU        equ	1181	;# 
  1074     049E                     NCO1CON         equ	1182	;# 
  1075     049F                     NCO1CLK         equ	1183	;# 
  1076     0617                     PWM5DCL         equ	1559	;# 
  1077     0618                     PWM5DCH         equ	1560	;# 
  1078     0619                     PWM5CON         equ	1561	;# 
  1079     0619                     PWM5CON0        equ	1561	;# 
  1080     061A                     PWM6DCL         equ	1562	;# 
  1081     061B                     PWM6DCH         equ	1563	;# 
  1082     061C                     PWM6CON         equ	1564	;# 
  1083     061C                     PWM6CON0        equ	1564	;# 
  1084     061F                     PWMTMRS         equ	1567	;# 
  1085     0691                     CWG1CLKCON      equ	1681	;# 
  1086     0692                     CWG1DAT         equ	1682	;# 
  1087     0693                     CWG1DBR         equ	1683	;# 
  1088     0694                     CWG1DBF         equ	1684	;# 
  1089     0695                     CWG1CON0        equ	1685	;# 
  1090     0696                     CWG1CON1        equ	1686	;# 
  1091     0697                     CWG1AS0         equ	1687	;# 
  1092     0698                     CWG1AS1         equ	1688	;# 
  1093     0699                     CWG1STR         equ	1689	;# 
  1094     0711                     CWG2CLKCON      equ	1809	;# 
  1095     0712                     CWG2DAT         equ	1810	;# 
  1096     0713                     CWG2DBR         equ	1811	;# 
  1097     0714                     CWG2DBF         equ	1812	;# 
  1098     0715                     CWG2CON0        equ	1813	;# 
  1099     0716                     CWG2CON1        equ	1814	;# 
  1100     0717                     CWG2AS0         equ	1815	;# 
  1101     0718                     CWG2AS1         equ	1816	;# 
  1102     0719                     CWG2STR         equ	1817	;# 
  1103     0891                     NVMADR          equ	2193	;# 
  1104     0891                     EEADR           equ	2193	;# 
  1105     0891                     PMADR           equ	2193	;# 
  1106     0891                     NVMADRL         equ	2193	;# 
  1107     0891                     EEADRL          equ	2193	;# 
  1108     0891                     PMADRL          equ	2193	;# 
  1109     0892                     NVMADRH         equ	2194	;# 
  1110     0892                     EEADRH          equ	2194	;# 
  1111     0892                     PMADRH          equ	2194	;# 
  1112     0893                     NVMDAT          equ	2195	;# 
  1113     0893                     EEDAT           equ	2195	;# 
  1114     0893                     PMDAT           equ	2195	;# 
  1115     0893                     NVMDATL         equ	2195	;# 
  1116     0893                     EEDATL          equ	2195	;# 
  1117     0893                     PMDATL          equ	2195	;# 
  1118     0894                     NVMDATH         equ	2196	;# 
  1119     0894                     EEDATH          equ	2196	;# 
  1120     0894                     PMDATH          equ	2196	;# 
  1121     0895                     NVMCON1         equ	2197	;# 
  1122     0895                     EECON1          equ	2197	;# 
  1123     0895                     PMCON1          equ	2197	;# 
  1124     0896                     NVMCON2         equ	2198	;# 
  1125     0896                     EECON2          equ	2198	;# 
  1126     0896                     PMCON2          equ	2198	;# 
  1127     089B                     PCON0           equ	2203	;# 
  1128     0911                     PMD0            equ	2321	;# 
  1129     0912                     PMD1            equ	2322	;# 
  1130     0913                     PMD2            equ	2323	;# 
  1131     0914                     PMD3            equ	2324	;# 
  1132     0915                     PMD4            equ	2325	;# 
  1133     0916                     PMD5            equ	2326	;# 
  1134     0918                     CPUDOZE         equ	2328	;# 
  1135     0919                     OSCCON1         equ	2329	;# 
  1136     091A                     OSCCON2         equ	2330	;# 
  1137     091B                     OSCCON3         equ	2331	;# 
  1138     091C                     OSCSTAT1        equ	2332	;# 
  1139     091D                     OSCEN           equ	2333	;# 
  1140     091E                     OSCTUNE         equ	2334	;# 
  1141     091F                     OSCFRQ          equ	2335	;# 
  1142     0E0F                     PPSLOCK         equ	3599	;# 
  1143     0E10                     INTPPS          equ	3600	;# 
  1144     0E11                     T0CKIPPS        equ	3601	;# 
  1145     0E12                     T1CKIPPS        equ	3602	;# 
  1146     0E13                     T1GPPS          equ	3603	;# 
  1147     0E14                     CCP1PPS         equ	3604	;# 
  1148     0E15                     CCP2PPS         equ	3605	;# 
  1149     0E16                     CCP3PPS         equ	3606	;# 
  1150     0E17                     CCP4PPS         equ	3607	;# 
  1151     0E18                     CWG1PPS         equ	3608	;# 
  1152     0E19                     CWG2PPS         equ	3609	;# 
  1153     0E1A                     MDCIN1PPS       equ	3610	;# 
  1154     0E1B                     MDCIN2PPS       equ	3611	;# 
  1155     0E1C                     MDMINPPS        equ	3612	;# 
  1156     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1157     0E1E                     SSP2DATPPS      equ	3614	;# 
  1158     0E1F                     SSP2SSPPS       equ	3615	;# 
  1159     0E20                     SSP1CLKPPS      equ	3616	;# 
  1160     0E21                     SSP1DATPPS      equ	3617	;# 
  1161     0E22                     SSP1SSPPS       equ	3618	;# 
  1162     0E24                     RXPPS           equ	3620	;# 
  1163     0E25                     TXPPS           equ	3621	;# 
  1164     0E28                     CLCIN0PPS       equ	3624	;# 
  1165     0E29                     CLCIN1PPS       equ	3625	;# 
  1166     0E2A                     CLCIN2PPS       equ	3626	;# 
  1167     0E2B                     CLCIN3PPS       equ	3627	;# 
  1168     0E2C                     T3CKIPPS        equ	3628	;# 
  1169     0E2D                     T3GPPS          equ	3629	;# 
  1170     0E2E                     T5CKIPPS        equ	3630	;# 
  1171     0E2F                     T5GPPS          equ	3631	;# 
  1172     0E90                     RA0PPS          equ	3728	;# 
  1173     0E91                     RA1PPS          equ	3729	;# 
  1174     0E92                     RA2PPS          equ	3730	;# 
  1175     0E94                     RA4PPS          equ	3732	;# 
  1176     0E95                     RA5PPS          equ	3733	;# 
  1177     0E9C                     RB4PPS          equ	3740	;# 
  1178     0E9D                     RB5PPS          equ	3741	;# 
  1179     0E9E                     RB6PPS          equ	3742	;# 
  1180     0E9F                     RB7PPS          equ	3743	;# 
  1181     0EA0                     RC0PPS          equ	3744	;# 
  1182     0EA1                     RC1PPS          equ	3745	;# 
  1183     0EA2                     RC2PPS          equ	3746	;# 
  1184     0EA3                     RC3PPS          equ	3747	;# 
  1185     0EA4                     RC4PPS          equ	3748	;# 
  1186     0EA5                     RC5PPS          equ	3749	;# 
  1187     0EA6                     RC6PPS          equ	3750	;# 
  1188     0EA7                     RC7PPS          equ	3751	;# 
  1189     0F0F                     CLCDATA         equ	3855	;# 
  1190     0F10                     CLC1CON         equ	3856	;# 
  1191     0F11                     CLC1POL         equ	3857	;# 
  1192     0F12                     CLC1SEL0        equ	3858	;# 
  1193     0F13                     CLC1SEL1        equ	3859	;# 
  1194     0F14                     CLC1SEL2        equ	3860	;# 
  1195     0F15                     CLC1SEL3        equ	3861	;# 
  1196     0F16                     CLC1GLS0        equ	3862	;# 
  1197     0F17                     CLC1GLS1        equ	3863	;# 
  1198     0F18                     CLC1GLS2        equ	3864	;# 
  1199     0F19                     CLC1GLS3        equ	3865	;# 
  1200     0F1A                     CLC2CON         equ	3866	;# 
  1201     0F1B                     CLC2POL         equ	3867	;# 
  1202     0F1C                     CLC2SEL0        equ	3868	;# 
  1203     0F1D                     CLC2SEL1        equ	3869	;# 
  1204     0F1E                     CLC2SEL2        equ	3870	;# 
  1205     0F1F                     CLC2SEL3        equ	3871	;# 
  1206     0F20                     CLC2GLS0        equ	3872	;# 
  1207     0F21                     CLC2GLS1        equ	3873	;# 
  1208     0F22                     CLC2GLS2        equ	3874	;# 
  1209     0F23                     CLC2GLS3        equ	3875	;# 
  1210     0F24                     CLC3CON         equ	3876	;# 
  1211     0F25                     CLC3POL         equ	3877	;# 
  1212     0F26                     CLC3SEL0        equ	3878	;# 
  1213     0F27                     CLC3SEL1        equ	3879	;# 
  1214     0F28                     CLC3SEL2        equ	3880	;# 
  1215     0F29                     CLC3SEL3        equ	3881	;# 
  1216     0F2A                     CLC3GLS0        equ	3882	;# 
  1217     0F2B                     CLC3GLS1        equ	3883	;# 
  1218     0F2C                     CLC3GLS2        equ	3884	;# 
  1219     0F2D                     CLC3GLS3        equ	3885	;# 
  1220     0F2E                     CLC4CON         equ	3886	;# 
  1221     0F2F                     CLC4POL         equ	3887	;# 
  1222     0F30                     CLC4SEL0        equ	3888	;# 
  1223     0F31                     CLC4SEL1        equ	3889	;# 
  1224     0F32                     CLC4SEL2        equ	3890	;# 
  1225     0F33                     CLC4SEL3        equ	3891	;# 
  1226     0F34                     CLC4GLS0        equ	3892	;# 
  1227     0F35                     CLC4GLS1        equ	3893	;# 
  1228     0F36                     CLC4GLS2        equ	3894	;# 
  1229     0F37                     CLC4GLS3        equ	3895	;# 
  1230     0FE4                     STATUS_SHAD     equ	4068	;# 
  1231     0FE5                     WREG_SHAD       equ	4069	;# 
  1232     0FE6                     BSR_SHAD        equ	4070	;# 
  1233     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1234     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1235     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1236     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1237     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1238     0FED                     STKPTR          equ	4077	;# 
  1239     0FEE                     TOSL            equ	4078	;# 
  1240     0FEF                     TOSH            equ	4079	;# 
  1241     0000                     INDF0           equ	0	;# 
  1242     0001                     INDF1           equ	1	;# 
  1243     0002                     PCL             equ	2	;# 
  1244     0003                     STATUS          equ	3	;# 
  1245     0004                     FSR0L           equ	4	;# 
  1246     0005                     FSR0H           equ	5	;# 
  1247     0006                     FSR1L           equ	6	;# 
  1248     0007                     FSR1H           equ	7	;# 
  1249     0008                     BSR             equ	8	;# 
  1250     0009                     WREG            equ	9	;# 
  1251     000A                     PCLATH          equ	10	;# 
  1252     000B                     INTCON          equ	11	;# 
  1253     000C                     PORTA           equ	12	;# 
  1254     000D                     PORTB           equ	13	;# 
  1255     000E                     PORTC           equ	14	;# 
  1256     0010                     PIR0            equ	16	;# 
  1257     0011                     PIR1            equ	17	;# 
  1258     0012                     PIR2            equ	18	;# 
  1259     0013                     PIR3            equ	19	;# 
  1260     0014                     PIR4            equ	20	;# 
  1261     0015                     TMR0L           equ	21	;# 
  1262     0015                     TMR0            equ	21	;# 
  1263     0016                     TMR0H           equ	22	;# 
  1264     0016                     PR0             equ	22	;# 
  1265     0017                     T0CON0          equ	23	;# 
  1266     0018                     T0CON1          equ	24	;# 
  1267     0019                     TMR1            equ	25	;# 
  1268     0019                     TMR1L           equ	25	;# 
  1269     001A                     TMR1H           equ	26	;# 
  1270     001B                     T1CON           equ	27	;# 
  1271     001C                     T1GCON          equ	28	;# 
  1272     001D                     TMR2            equ	29	;# 
  1273     001E                     PR2             equ	30	;# 
  1274     001F                     T2CON           equ	31	;# 
  1275     008C                     TRISA           equ	140	;# 
  1276     008D                     TRISB           equ	141	;# 
  1277     008E                     TRISC           equ	142	;# 
  1278     0090                     PIE0            equ	144	;# 
  1279     0091                     PIE1            equ	145	;# 
  1280     0092                     PIE2            equ	146	;# 
  1281     0093                     PIE3            equ	147	;# 
  1282     0094                     PIE4            equ	148	;# 
  1283     0097                     WDTCON          equ	151	;# 
  1284     009B                     ADRES           equ	155	;# 
  1285     009B                     ADRESL          equ	155	;# 
  1286     009C                     ADRESH          equ	156	;# 
  1287     009D                     ADCON0          equ	157	;# 
  1288     009E                     ADCON1          equ	158	;# 
  1289     009F                     ADACT           equ	159	;# 
  1290     010C                     LATA            equ	268	;# 
  1291     010D                     LATB            equ	269	;# 
  1292     010E                     LATC            equ	270	;# 
  1293     0111                     CM1CON0         equ	273	;# 
  1294     0112                     CM1CON1         equ	274	;# 
  1295     0113                     CM2CON0         equ	275	;# 
  1296     0114                     CM2CON1         equ	276	;# 
  1297     0115                     CMOUT           equ	277	;# 
  1298     0116                     BORCON          equ	278	;# 
  1299     0117                     FVRCON          equ	279	;# 
  1300     0118                     DACCON0         equ	280	;# 
  1301     0119                     DACCON1         equ	281	;# 
  1302     018C                     ANSELA          equ	396	;# 
  1303     018D                     ANSELB          equ	397	;# 
  1304     018E                     ANSELC          equ	398	;# 
  1305     0197                     VREGCON         equ	407	;# 
  1306     0199                     RC1REG          equ	409	;# 
  1307     0199                     RCREG           equ	409	;# 
  1308     0199                     RCREG1          equ	409	;# 
  1309     019A                     TX1REG          equ	410	;# 
  1310     019A                     TXREG1          equ	410	;# 
  1311     019A                     TXREG           equ	410	;# 
  1312     019B                     SP1BRG          equ	411	;# 
  1313     019B                     SPBRG           equ	411	;# 
  1314     019B                     SP1BRGL         equ	411	;# 
  1315     019B                     SPBRG1          equ	411	;# 
  1316     019B                     SPBRGL          equ	411	;# 
  1317     019C                     SP1BRGH         equ	412	;# 
  1318     019C                     SPBRGH          equ	412	;# 
  1319     019C                     SPBRGH1         equ	412	;# 
  1320     019D                     RC1STA          equ	413	;# 
  1321     019D                     RCSTA1          equ	413	;# 
  1322     019D                     RCSTA           equ	413	;# 
  1323     019E                     TX1STA          equ	414	;# 
  1324     019E                     TXSTA1          equ	414	;# 
  1325     019E                     TXSTA           equ	414	;# 
  1326     019F                     BAUD1CON        equ	415	;# 
  1327     019F                     BAUDCON1        equ	415	;# 
  1328     019F                     BAUDCTL1        equ	415	;# 
  1329     019F                     BAUDCON         equ	415	;# 
  1330     019F                     BAUDCTL         equ	415	;# 
  1331     020C                     WPUA            equ	524	;# 
  1332     020D                     WPUB            equ	525	;# 
  1333     020E                     WPUC            equ	526	;# 
  1334     0211                     SSP1BUF         equ	529	;# 
  1335     0211                     SSPBUF          equ	529	;# 
  1336     0212                     SSP1ADD         equ	530	;# 
  1337     0212                     SSPADD          equ	530	;# 
  1338     0213                     SSP1MSK         equ	531	;# 
  1339     0213                     SSPMSK          equ	531	;# 
  1340     0214                     SSP1STAT        equ	532	;# 
  1341     0214                     SSPSTAT         equ	532	;# 
  1342     0215                     SSP1CON1        equ	533	;# 
  1343     0215                     SSPCON          equ	533	;# 
  1344     0215                     SSPCON1         equ	533	;# 
  1345     0215                     SSP1CON         equ	533	;# 
  1346     0216                     SSP1CON2        equ	534	;# 
  1347     0216                     SSPCON2         equ	534	;# 
  1348     0217                     SSP1CON3        equ	535	;# 
  1349     0217                     SSPCON3         equ	535	;# 
  1350     0219                     SSP2BUF         equ	537	;# 
  1351     021A                     SSP2ADD         equ	538	;# 
  1352     021B                     SSP2MSK         equ	539	;# 
  1353     021C                     SSP2STAT        equ	540	;# 
  1354     021D                     SSP2CON1        equ	541	;# 
  1355     021D                     SSP2CON         equ	541	;# 
  1356     021E                     SSP2CON2        equ	542	;# 
  1357     021F                     SSP2CON3        equ	543	;# 
  1358     028C                     ODCONA          equ	652	;# 
  1359     028D                     ODCONB          equ	653	;# 
  1360     028E                     ODCONC          equ	654	;# 
  1361     0291                     CCPR1           equ	657	;# 
  1362     0291                     CCPR1L          equ	657	;# 
  1363     0292                     CCPR1H          equ	658	;# 
  1364     0293                     CCP1CON         equ	659	;# 
  1365     0294                     CCP1CAP         equ	660	;# 
  1366     0295                     CCPR2           equ	661	;# 
  1367     0295                     CCPR2L          equ	661	;# 
  1368     0296                     CCPR2H          equ	662	;# 
  1369     0297                     CCP2CON         equ	663	;# 
  1370     0298                     CCP2CAP         equ	664	;# 
  1371     029F                     CCPTMRS         equ	671	;# 
  1372     030C                     SLRCONA         equ	780	;# 
  1373     030D                     SLRCONB         equ	781	;# 
  1374     030E                     SLRCONC         equ	782	;# 
  1375     0311                     CCPR3           equ	785	;# 
  1376     0311                     CCPR3L          equ	785	;# 
  1377     0312                     CCPR3H          equ	786	;# 
  1378     0313                     CCP3CON         equ	787	;# 
  1379     0314                     CCP3CAP         equ	788	;# 
  1380     0315                     CCPR4           equ	789	;# 
  1381     0315                     CCPR4L          equ	789	;# 
  1382     0316                     CCPR4H          equ	790	;# 
  1383     0317                     CCP4CON         equ	791	;# 
  1384     0318                     CCP4CAP         equ	792	;# 
  1385     038C                     INLVLA          equ	908	;# 
  1386     038D                     INLVLB          equ	909	;# 
  1387     038E                     INLVLC          equ	910	;# 
  1388     0391                     IOCAP           equ	913	;# 
  1389     0392                     IOCAN           equ	914	;# 
  1390     0393                     IOCAF           equ	915	;# 
  1391     0394                     IOCBP           equ	916	;# 
  1392     0395                     IOCBN           equ	917	;# 
  1393     0396                     IOCBF           equ	918	;# 
  1394     0397                     IOCCP           equ	919	;# 
  1395     0398                     IOCCN           equ	920	;# 
  1396     0399                     IOCCF           equ	921	;# 
  1397     039A                     CLKRCON         equ	922	;# 
  1398     039C                     MDCON           equ	924	;# 
  1399     039D                     MDSRC           equ	925	;# 
  1400     039E                     MDCARH          equ	926	;# 
  1401     039F                     MDCARL          equ	927	;# 
  1402     0411                     TMR3            equ	1041	;# 
  1403     0411                     TMR3L           equ	1041	;# 
  1404     0412                     TMR3H           equ	1042	;# 
  1405     0413                     T3CON           equ	1043	;# 
  1406     0414                     T3GCON          equ	1044	;# 
  1407     0415                     TMR4            equ	1045	;# 
  1408     0416                     PR4             equ	1046	;# 
  1409     0417                     T4CON           equ	1047	;# 
  1410     0418                     TMR5            equ	1048	;# 
  1411     0418                     TMR5L           equ	1048	;# 
  1412     0419                     TMR5H           equ	1049	;# 
  1413     041A                     T5CON           equ	1050	;# 
  1414     041B                     T5GCON          equ	1051	;# 
  1415     041C                     TMR6            equ	1052	;# 
  1416     041D                     PR6             equ	1053	;# 
  1417     041E                     T6CON           equ	1054	;# 
  1418     041F                     CCDCON          equ	1055	;# 
  1419     0498                     NCO1ACC         equ	1176	;# 
  1420     0498                     NCO1ACCL        equ	1176	;# 
  1421     0499                     NCO1ACCH        equ	1177	;# 
  1422     049A                     NCO1ACCU        equ	1178	;# 
  1423     049B                     NCO1INC         equ	1179	;# 
  1424     049B                     NCO1INCL        equ	1179	;# 
  1425     049C                     NCO1INCH        equ	1180	;# 
  1426     049D                     NCO1INCU        equ	1181	;# 
  1427     049E                     NCO1CON         equ	1182	;# 
  1428     049F                     NCO1CLK         equ	1183	;# 
  1429     0617                     PWM5DCL         equ	1559	;# 
  1430     0618                     PWM5DCH         equ	1560	;# 
  1431     0619                     PWM5CON         equ	1561	;# 
  1432     0619                     PWM5CON0        equ	1561	;# 
  1433     061A                     PWM6DCL         equ	1562	;# 
  1434     061B                     PWM6DCH         equ	1563	;# 
  1435     061C                     PWM6CON         equ	1564	;# 
  1436     061C                     PWM6CON0        equ	1564	;# 
  1437     061F                     PWMTMRS         equ	1567	;# 
  1438     0691                     CWG1CLKCON      equ	1681	;# 
  1439     0692                     CWG1DAT         equ	1682	;# 
  1440     0693                     CWG1DBR         equ	1683	;# 
  1441     0694                     CWG1DBF         equ	1684	;# 
  1442     0695                     CWG1CON0        equ	1685	;# 
  1443     0696                     CWG1CON1        equ	1686	;# 
  1444     0697                     CWG1AS0         equ	1687	;# 
  1445     0698                     CWG1AS1         equ	1688	;# 
  1446     0699                     CWG1STR         equ	1689	;# 
  1447     0711                     CWG2CLKCON      equ	1809	;# 
  1448     0712                     CWG2DAT         equ	1810	;# 
  1449     0713                     CWG2DBR         equ	1811	;# 
  1450     0714                     CWG2DBF         equ	1812	;# 
  1451     0715                     CWG2CON0        equ	1813	;# 
  1452     0716                     CWG2CON1        equ	1814	;# 
  1453     0717                     CWG2AS0         equ	1815	;# 
  1454     0718                     CWG2AS1         equ	1816	;# 
  1455     0719                     CWG2STR         equ	1817	;# 
  1456     0891                     NVMADR          equ	2193	;# 
  1457     0891                     EEADR           equ	2193	;# 
  1458     0891                     PMADR           equ	2193	;# 
  1459     0891                     NVMADRL         equ	2193	;# 
  1460     0891                     EEADRL          equ	2193	;# 
  1461     0891                     PMADRL          equ	2193	;# 
  1462     0892                     NVMADRH         equ	2194	;# 
  1463     0892                     EEADRH          equ	2194	;# 
  1464     0892                     PMADRH          equ	2194	;# 
  1465     0893                     NVMDAT          equ	2195	;# 
  1466     0893                     EEDAT           equ	2195	;# 
  1467     0893                     PMDAT           equ	2195	;# 
  1468     0893                     NVMDATL         equ	2195	;# 
  1469     0893                     EEDATL          equ	2195	;# 
  1470     0893                     PMDATL          equ	2195	;# 
  1471     0894                     NVMDATH         equ	2196	;# 
  1472     0894                     EEDATH          equ	2196	;# 
  1473     0894                     PMDATH          equ	2196	;# 
  1474     0895                     NVMCON1         equ	2197	;# 
  1475     0895                     EECON1          equ	2197	;# 
  1476     0895                     PMCON1          equ	2197	;# 
  1477     0896                     NVMCON2         equ	2198	;# 
  1478     0896                     EECON2          equ	2198	;# 
  1479     0896                     PMCON2          equ	2198	;# 
  1480     089B                     PCON0           equ	2203	;# 
  1481     0911                     PMD0            equ	2321	;# 
  1482     0912                     PMD1            equ	2322	;# 
  1483     0913                     PMD2            equ	2323	;# 
  1484     0914                     PMD3            equ	2324	;# 
  1485     0915                     PMD4            equ	2325	;# 
  1486     0916                     PMD5            equ	2326	;# 
  1487     0918                     CPUDOZE         equ	2328	;# 
  1488     0919                     OSCCON1         equ	2329	;# 
  1489     091A                     OSCCON2         equ	2330	;# 
  1490     091B                     OSCCON3         equ	2331	;# 
  1491     091C                     OSCSTAT1        equ	2332	;# 
  1492     091D                     OSCEN           equ	2333	;# 
  1493     091E                     OSCTUNE         equ	2334	;# 
  1494     091F                     OSCFRQ          equ	2335	;# 
  1495     0E0F                     PPSLOCK         equ	3599	;# 
  1496     0E10                     INTPPS          equ	3600	;# 
  1497     0E11                     T0CKIPPS        equ	3601	;# 
  1498     0E12                     T1CKIPPS        equ	3602	;# 
  1499     0E13                     T1GPPS          equ	3603	;# 
  1500     0E14                     CCP1PPS         equ	3604	;# 
  1501     0E15                     CCP2PPS         equ	3605	;# 
  1502     0E16                     CCP3PPS         equ	3606	;# 
  1503     0E17                     CCP4PPS         equ	3607	;# 
  1504     0E18                     CWG1PPS         equ	3608	;# 
  1505     0E19                     CWG2PPS         equ	3609	;# 
  1506     0E1A                     MDCIN1PPS       equ	3610	;# 
  1507     0E1B                     MDCIN2PPS       equ	3611	;# 
  1508     0E1C                     MDMINPPS        equ	3612	;# 
  1509     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1510     0E1E                     SSP2DATPPS      equ	3614	;# 
  1511     0E1F                     SSP2SSPPS       equ	3615	;# 
  1512     0E20                     SSP1CLKPPS      equ	3616	;# 
  1513     0E21                     SSP1DATPPS      equ	3617	;# 
  1514     0E22                     SSP1SSPPS       equ	3618	;# 
  1515     0E24                     RXPPS           equ	3620	;# 
  1516     0E25                     TXPPS           equ	3621	;# 
  1517     0E28                     CLCIN0PPS       equ	3624	;# 
  1518     0E29                     CLCIN1PPS       equ	3625	;# 
  1519     0E2A                     CLCIN2PPS       equ	3626	;# 
  1520     0E2B                     CLCIN3PPS       equ	3627	;# 
  1521     0E2C                     T3CKIPPS        equ	3628	;# 
  1522     0E2D                     T3GPPS          equ	3629	;# 
  1523     0E2E                     T5CKIPPS        equ	3630	;# 
  1524     0E2F                     T5GPPS          equ	3631	;# 
  1525     0E90                     RA0PPS          equ	3728	;# 
  1526     0E91                     RA1PPS          equ	3729	;# 
  1527     0E92                     RA2PPS          equ	3730	;# 
  1528     0E94                     RA4PPS          equ	3732	;# 
  1529     0E95                     RA5PPS          equ	3733	;# 
  1530     0E9C                     RB4PPS          equ	3740	;# 
  1531     0E9D                     RB5PPS          equ	3741	;# 
  1532     0E9E                     RB6PPS          equ	3742	;# 
  1533     0E9F                     RB7PPS          equ	3743	;# 
  1534     0EA0                     RC0PPS          equ	3744	;# 
  1535     0EA1                     RC1PPS          equ	3745	;# 
  1536     0EA2                     RC2PPS          equ	3746	;# 
  1537     0EA3                     RC3PPS          equ	3747	;# 
  1538     0EA4                     RC4PPS          equ	3748	;# 
  1539     0EA5                     RC5PPS          equ	3749	;# 
  1540     0EA6                     RC6PPS          equ	3750	;# 
  1541     0EA7                     RC7PPS          equ	3751	;# 
  1542     0F0F                     CLCDATA         equ	3855	;# 
  1543     0F10                     CLC1CON         equ	3856	;# 
  1544     0F11                     CLC1POL         equ	3857	;# 
  1545     0F12                     CLC1SEL0        equ	3858	;# 
  1546     0F13                     CLC1SEL1        equ	3859	;# 
  1547     0F14                     CLC1SEL2        equ	3860	;# 
  1548     0F15                     CLC1SEL3        equ	3861	;# 
  1549     0F16                     CLC1GLS0        equ	3862	;# 
  1550     0F17                     CLC1GLS1        equ	3863	;# 
  1551     0F18                     CLC1GLS2        equ	3864	;# 
  1552     0F19                     CLC1GLS3        equ	3865	;# 
  1553     0F1A                     CLC2CON         equ	3866	;# 
  1554     0F1B                     CLC2POL         equ	3867	;# 
  1555     0F1C                     CLC2SEL0        equ	3868	;# 
  1556     0F1D                     CLC2SEL1        equ	3869	;# 
  1557     0F1E                     CLC2SEL2        equ	3870	;# 
  1558     0F1F                     CLC2SEL3        equ	3871	;# 
  1559     0F20                     CLC2GLS0        equ	3872	;# 
  1560     0F21                     CLC2GLS1        equ	3873	;# 
  1561     0F22                     CLC2GLS2        equ	3874	;# 
  1562     0F23                     CLC2GLS3        equ	3875	;# 
  1563     0F24                     CLC3CON         equ	3876	;# 
  1564     0F25                     CLC3POL         equ	3877	;# 
  1565     0F26                     CLC3SEL0        equ	3878	;# 
  1566     0F27                     CLC3SEL1        equ	3879	;# 
  1567     0F28                     CLC3SEL2        equ	3880	;# 
  1568     0F29                     CLC3SEL3        equ	3881	;# 
  1569     0F2A                     CLC3GLS0        equ	3882	;# 
  1570     0F2B                     CLC3GLS1        equ	3883	;# 
  1571     0F2C                     CLC3GLS2        equ	3884	;# 
  1572     0F2D                     CLC3GLS3        equ	3885	;# 
  1573     0F2E                     CLC4CON         equ	3886	;# 
  1574     0F2F                     CLC4POL         equ	3887	;# 
  1575     0F30                     CLC4SEL0        equ	3888	;# 
  1576     0F31                     CLC4SEL1        equ	3889	;# 
  1577     0F32                     CLC4SEL2        equ	3890	;# 
  1578     0F33                     CLC4SEL3        equ	3891	;# 
  1579     0F34                     CLC4GLS0        equ	3892	;# 
  1580     0F35                     CLC4GLS1        equ	3893	;# 
  1581     0F36                     CLC4GLS2        equ	3894	;# 
  1582     0F37                     CLC4GLS3        equ	3895	;# 
  1583     0FE4                     STATUS_SHAD     equ	4068	;# 
  1584     0FE5                     WREG_SHAD       equ	4069	;# 
  1585     0FE6                     BSR_SHAD        equ	4070	;# 
  1586     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1587     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1588     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1589     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1590     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1591     0FED                     STKPTR          equ	4077	;# 
  1592     0FEE                     TOSL            equ	4078	;# 
  1593     0FEF                     TOSH            equ	4079	;# 
  1594     0000                     INDF0           equ	0	;# 
  1595     0001                     INDF1           equ	1	;# 
  1596     0002                     PCL             equ	2	;# 
  1597     0003                     STATUS          equ	3	;# 
  1598     0004                     FSR0L           equ	4	;# 
  1599     0005                     FSR0H           equ	5	;# 
  1600     0006                     FSR1L           equ	6	;# 
  1601     0007                     FSR1H           equ	7	;# 
  1602     0008                     BSR             equ	8	;# 
  1603     0009                     WREG            equ	9	;# 
  1604     000A                     PCLATH          equ	10	;# 
  1605     000B                     INTCON          equ	11	;# 
  1606     000C                     PORTA           equ	12	;# 
  1607     000D                     PORTB           equ	13	;# 
  1608     000E                     PORTC           equ	14	;# 
  1609     0010                     PIR0            equ	16	;# 
  1610     0011                     PIR1            equ	17	;# 
  1611     0012                     PIR2            equ	18	;# 
  1612     0013                     PIR3            equ	19	;# 
  1613     0014                     PIR4            equ	20	;# 
  1614     0015                     TMR0L           equ	21	;# 
  1615     0015                     TMR0            equ	21	;# 
  1616     0016                     TMR0H           equ	22	;# 
  1617     0016                     PR0             equ	22	;# 
  1618     0017                     T0CON0          equ	23	;# 
  1619     0018                     T0CON1          equ	24	;# 
  1620     0019                     TMR1            equ	25	;# 
  1621     0019                     TMR1L           equ	25	;# 
  1622     001A                     TMR1H           equ	26	;# 
  1623     001B                     T1CON           equ	27	;# 
  1624     001C                     T1GCON          equ	28	;# 
  1625     001D                     TMR2            equ	29	;# 
  1626     001E                     PR2             equ	30	;# 
  1627     001F                     T2CON           equ	31	;# 
  1628     008C                     TRISA           equ	140	;# 
  1629     008D                     TRISB           equ	141	;# 
  1630     008E                     TRISC           equ	142	;# 
  1631     0090                     PIE0            equ	144	;# 
  1632     0091                     PIE1            equ	145	;# 
  1633     0092                     PIE2            equ	146	;# 
  1634     0093                     PIE3            equ	147	;# 
  1635     0094                     PIE4            equ	148	;# 
  1636     0097                     WDTCON          equ	151	;# 
  1637     009B                     ADRES           equ	155	;# 
  1638     009B                     ADRESL          equ	155	;# 
  1639     009C                     ADRESH          equ	156	;# 
  1640     009D                     ADCON0          equ	157	;# 
  1641     009E                     ADCON1          equ	158	;# 
  1642     009F                     ADACT           equ	159	;# 
  1643     010C                     LATA            equ	268	;# 
  1644     010D                     LATB            equ	269	;# 
  1645     010E                     LATC            equ	270	;# 
  1646     0111                     CM1CON0         equ	273	;# 
  1647     0112                     CM1CON1         equ	274	;# 
  1648     0113                     CM2CON0         equ	275	;# 
  1649     0114                     CM2CON1         equ	276	;# 
  1650     0115                     CMOUT           equ	277	;# 
  1651     0116                     BORCON          equ	278	;# 
  1652     0117                     FVRCON          equ	279	;# 
  1653     0118                     DACCON0         equ	280	;# 
  1654     0119                     DACCON1         equ	281	;# 
  1655     018C                     ANSELA          equ	396	;# 
  1656     018D                     ANSELB          equ	397	;# 
  1657     018E                     ANSELC          equ	398	;# 
  1658     0197                     VREGCON         equ	407	;# 
  1659     0199                     RC1REG          equ	409	;# 
  1660     0199                     RCREG           equ	409	;# 
  1661     0199                     RCREG1          equ	409	;# 
  1662     019A                     TX1REG          equ	410	;# 
  1663     019A                     TXREG1          equ	410	;# 
  1664     019A                     TXREG           equ	410	;# 
  1665     019B                     SP1BRG          equ	411	;# 
  1666     019B                     SPBRG           equ	411	;# 
  1667     019B                     SP1BRGL         equ	411	;# 
  1668     019B                     SPBRG1          equ	411	;# 
  1669     019B                     SPBRGL          equ	411	;# 
  1670     019C                     SP1BRGH         equ	412	;# 
  1671     019C                     SPBRGH          equ	412	;# 
  1672     019C                     SPBRGH1         equ	412	;# 
  1673     019D                     RC1STA          equ	413	;# 
  1674     019D                     RCSTA1          equ	413	;# 
  1675     019D                     RCSTA           equ	413	;# 
  1676     019E                     TX1STA          equ	414	;# 
  1677     019E                     TXSTA1          equ	414	;# 
  1678     019E                     TXSTA           equ	414	;# 
  1679     019F                     BAUD1CON        equ	415	;# 
  1680     019F                     BAUDCON1        equ	415	;# 
  1681     019F                     BAUDCTL1        equ	415	;# 
  1682     019F                     BAUDCON         equ	415	;# 
  1683     019F                     BAUDCTL         equ	415	;# 
  1684     020C                     WPUA            equ	524	;# 
  1685     020D                     WPUB            equ	525	;# 
  1686     020E                     WPUC            equ	526	;# 
  1687     0211                     SSP1BUF         equ	529	;# 
  1688     0211                     SSPBUF          equ	529	;# 
  1689     0212                     SSP1ADD         equ	530	;# 
  1690     0212                     SSPADD          equ	530	;# 
  1691     0213                     SSP1MSK         equ	531	;# 
  1692     0213                     SSPMSK          equ	531	;# 
  1693     0214                     SSP1STAT        equ	532	;# 
  1694     0214                     SSPSTAT         equ	532	;# 
  1695     0215                     SSP1CON1        equ	533	;# 
  1696     0215                     SSPCON          equ	533	;# 
  1697     0215                     SSPCON1         equ	533	;# 
  1698     0215                     SSP1CON         equ	533	;# 
  1699     0216                     SSP1CON2        equ	534	;# 
  1700     0216                     SSPCON2         equ	534	;# 
  1701     0217                     SSP1CON3        equ	535	;# 
  1702     0217                     SSPCON3         equ	535	;# 
  1703     0219                     SSP2BUF         equ	537	;# 
  1704     021A                     SSP2ADD         equ	538	;# 
  1705     021B                     SSP2MSK         equ	539	;# 
  1706     021C                     SSP2STAT        equ	540	;# 
  1707     021D                     SSP2CON1        equ	541	;# 
  1708     021D                     SSP2CON         equ	541	;# 
  1709     021E                     SSP2CON2        equ	542	;# 
  1710     021F                     SSP2CON3        equ	543	;# 
  1711     028C                     ODCONA          equ	652	;# 
  1712     028D                     ODCONB          equ	653	;# 
  1713     028E                     ODCONC          equ	654	;# 
  1714     0291                     CCPR1           equ	657	;# 
  1715     0291                     CCPR1L          equ	657	;# 
  1716     0292                     CCPR1H          equ	658	;# 
  1717     0293                     CCP1CON         equ	659	;# 
  1718     0294                     CCP1CAP         equ	660	;# 
  1719     0295                     CCPR2           equ	661	;# 
  1720     0295                     CCPR2L          equ	661	;# 
  1721     0296                     CCPR2H          equ	662	;# 
  1722     0297                     CCP2CON         equ	663	;# 
  1723     0298                     CCP2CAP         equ	664	;# 
  1724     029F                     CCPTMRS         equ	671	;# 
  1725     030C                     SLRCONA         equ	780	;# 
  1726     030D                     SLRCONB         equ	781	;# 
  1727     030E                     SLRCONC         equ	782	;# 
  1728     0311                     CCPR3           equ	785	;# 
  1729     0311                     CCPR3L          equ	785	;# 
  1730     0312                     CCPR3H          equ	786	;# 
  1731     0313                     CCP3CON         equ	787	;# 
  1732     0314                     CCP3CAP         equ	788	;# 
  1733     0315                     CCPR4           equ	789	;# 
  1734     0315                     CCPR4L          equ	789	;# 
  1735     0316                     CCPR4H          equ	790	;# 
  1736     0317                     CCP4CON         equ	791	;# 
  1737     0318                     CCP4CAP         equ	792	;# 
  1738     038C                     INLVLA          equ	908	;# 
  1739     038D                     INLVLB          equ	909	;# 
  1740     038E                     INLVLC          equ	910	;# 
  1741     0391                     IOCAP           equ	913	;# 
  1742     0392                     IOCAN           equ	914	;# 
  1743     0393                     IOCAF           equ	915	;# 
  1744     0394                     IOCBP           equ	916	;# 
  1745     0395                     IOCBN           equ	917	;# 
  1746     0396                     IOCBF           equ	918	;# 
  1747     0397                     IOCCP           equ	919	;# 
  1748     0398                     IOCCN           equ	920	;# 
  1749     0399                     IOCCF           equ	921	;# 
  1750     039A                     CLKRCON         equ	922	;# 
  1751     039C                     MDCON           equ	924	;# 
  1752     039D                     MDSRC           equ	925	;# 
  1753     039E                     MDCARH          equ	926	;# 
  1754     039F                     MDCARL          equ	927	;# 
  1755     0411                     TMR3            equ	1041	;# 
  1756     0411                     TMR3L           equ	1041	;# 
  1757     0412                     TMR3H           equ	1042	;# 
  1758     0413                     T3CON           equ	1043	;# 
  1759     0414                     T3GCON          equ	1044	;# 
  1760     0415                     TMR4            equ	1045	;# 
  1761     0416                     PR4             equ	1046	;# 
  1762     0417                     T4CON           equ	1047	;# 
  1763     0418                     TMR5            equ	1048	;# 
  1764     0418                     TMR5L           equ	1048	;# 
  1765     0419                     TMR5H           equ	1049	;# 
  1766     041A                     T5CON           equ	1050	;# 
  1767     041B                     T5GCON          equ	1051	;# 
  1768     041C                     TMR6            equ	1052	;# 
  1769     041D                     PR6             equ	1053	;# 
  1770     041E                     T6CON           equ	1054	;# 
  1771     041F                     CCDCON          equ	1055	;# 
  1772     0498                     NCO1ACC         equ	1176	;# 
  1773     0498                     NCO1ACCL        equ	1176	;# 
  1774     0499                     NCO1ACCH        equ	1177	;# 
  1775     049A                     NCO1ACCU        equ	1178	;# 
  1776     049B                     NCO1INC         equ	1179	;# 
  1777     049B                     NCO1INCL        equ	1179	;# 
  1778     049C                     NCO1INCH        equ	1180	;# 
  1779     049D                     NCO1INCU        equ	1181	;# 
  1780     049E                     NCO1CON         equ	1182	;# 
  1781     049F                     NCO1CLK         equ	1183	;# 
  1782     0617                     PWM5DCL         equ	1559	;# 
  1783     0618                     PWM5DCH         equ	1560	;# 
  1784     0619                     PWM5CON         equ	1561	;# 
  1785     0619                     PWM5CON0        equ	1561	;# 
  1786     061A                     PWM6DCL         equ	1562	;# 
  1787     061B                     PWM6DCH         equ	1563	;# 
  1788     061C                     PWM6CON         equ	1564	;# 
  1789     061C                     PWM6CON0        equ	1564	;# 
  1790     061F                     PWMTMRS         equ	1567	;# 
  1791     0691                     CWG1CLKCON      equ	1681	;# 
  1792     0692                     CWG1DAT         equ	1682	;# 
  1793     0693                     CWG1DBR         equ	1683	;# 
  1794     0694                     CWG1DBF         equ	1684	;# 
  1795     0695                     CWG1CON0        equ	1685	;# 
  1796     0696                     CWG1CON1        equ	1686	;# 
  1797     0697                     CWG1AS0         equ	1687	;# 
  1798     0698                     CWG1AS1         equ	1688	;# 
  1799     0699                     CWG1STR         equ	1689	;# 
  1800     0711                     CWG2CLKCON      equ	1809	;# 
  1801     0712                     CWG2DAT         equ	1810	;# 
  1802     0713                     CWG2DBR         equ	1811	;# 
  1803     0714                     CWG2DBF         equ	1812	;# 
  1804     0715                     CWG2CON0        equ	1813	;# 
  1805     0716                     CWG2CON1        equ	1814	;# 
  1806     0717                     CWG2AS0         equ	1815	;# 
  1807     0718                     CWG2AS1         equ	1816	;# 
  1808     0719                     CWG2STR         equ	1817	;# 
  1809     0891                     NVMADR          equ	2193	;# 
  1810     0891                     EEADR           equ	2193	;# 
  1811     0891                     PMADR           equ	2193	;# 
  1812     0891                     NVMADRL         equ	2193	;# 
  1813     0891                     EEADRL          equ	2193	;# 
  1814     0891                     PMADRL          equ	2193	;# 
  1815     0892                     NVMADRH         equ	2194	;# 
  1816     0892                     EEADRH          equ	2194	;# 
  1817     0892                     PMADRH          equ	2194	;# 
  1818     0893                     NVMDAT          equ	2195	;# 
  1819     0893                     EEDAT           equ	2195	;# 
  1820     0893                     PMDAT           equ	2195	;# 
  1821     0893                     NVMDATL         equ	2195	;# 
  1822     0893                     EEDATL          equ	2195	;# 
  1823     0893                     PMDATL          equ	2195	;# 
  1824     0894                     NVMDATH         equ	2196	;# 
  1825     0894                     EEDATH          equ	2196	;# 
  1826     0894                     PMDATH          equ	2196	;# 
  1827     0895                     NVMCON1         equ	2197	;# 
  1828     0895                     EECON1          equ	2197	;# 
  1829     0895                     PMCON1          equ	2197	;# 
  1830     0896                     NVMCON2         equ	2198	;# 
  1831     0896                     EECON2          equ	2198	;# 
  1832     0896                     PMCON2          equ	2198	;# 
  1833     089B                     PCON0           equ	2203	;# 
  1834     0911                     PMD0            equ	2321	;# 
  1835     0912                     PMD1            equ	2322	;# 
  1836     0913                     PMD2            equ	2323	;# 
  1837     0914                     PMD3            equ	2324	;# 
  1838     0915                     PMD4            equ	2325	;# 
  1839     0916                     PMD5            equ	2326	;# 
  1840     0918                     CPUDOZE         equ	2328	;# 
  1841     0919                     OSCCON1         equ	2329	;# 
  1842     091A                     OSCCON2         equ	2330	;# 
  1843     091B                     OSCCON3         equ	2331	;# 
  1844     091C                     OSCSTAT1        equ	2332	;# 
  1845     091D                     OSCEN           equ	2333	;# 
  1846     091E                     OSCTUNE         equ	2334	;# 
  1847     091F                     OSCFRQ          equ	2335	;# 
  1848     0E0F                     PPSLOCK         equ	3599	;# 
  1849     0E10                     INTPPS          equ	3600	;# 
  1850     0E11                     T0CKIPPS        equ	3601	;# 
  1851     0E12                     T1CKIPPS        equ	3602	;# 
  1852     0E13                     T1GPPS          equ	3603	;# 
  1853     0E14                     CCP1PPS         equ	3604	;# 
  1854     0E15                     CCP2PPS         equ	3605	;# 
  1855     0E16                     CCP3PPS         equ	3606	;# 
  1856     0E17                     CCP4PPS         equ	3607	;# 
  1857     0E18                     CWG1PPS         equ	3608	;# 
  1858     0E19                     CWG2PPS         equ	3609	;# 
  1859     0E1A                     MDCIN1PPS       equ	3610	;# 
  1860     0E1B                     MDCIN2PPS       equ	3611	;# 
  1861     0E1C                     MDMINPPS        equ	3612	;# 
  1862     0E1D                     SSP2CLKPPS      equ	3613	;# 
  1863     0E1E                     SSP2DATPPS      equ	3614	;# 
  1864     0E1F                     SSP2SSPPS       equ	3615	;# 
  1865     0E20                     SSP1CLKPPS      equ	3616	;# 
  1866     0E21                     SSP1DATPPS      equ	3617	;# 
  1867     0E22                     SSP1SSPPS       equ	3618	;# 
  1868     0E24                     RXPPS           equ	3620	;# 
  1869     0E25                     TXPPS           equ	3621	;# 
  1870     0E28                     CLCIN0PPS       equ	3624	;# 
  1871     0E29                     CLCIN1PPS       equ	3625	;# 
  1872     0E2A                     CLCIN2PPS       equ	3626	;# 
  1873     0E2B                     CLCIN3PPS       equ	3627	;# 
  1874     0E2C                     T3CKIPPS        equ	3628	;# 
  1875     0E2D                     T3GPPS          equ	3629	;# 
  1876     0E2E                     T5CKIPPS        equ	3630	;# 
  1877     0E2F                     T5GPPS          equ	3631	;# 
  1878     0E90                     RA0PPS          equ	3728	;# 
  1879     0E91                     RA1PPS          equ	3729	;# 
  1880     0E92                     RA2PPS          equ	3730	;# 
  1881     0E94                     RA4PPS          equ	3732	;# 
  1882     0E95                     RA5PPS          equ	3733	;# 
  1883     0E9C                     RB4PPS          equ	3740	;# 
  1884     0E9D                     RB5PPS          equ	3741	;# 
  1885     0E9E                     RB6PPS          equ	3742	;# 
  1886     0E9F                     RB7PPS          equ	3743	;# 
  1887     0EA0                     RC0PPS          equ	3744	;# 
  1888     0EA1                     RC1PPS          equ	3745	;# 
  1889     0EA2                     RC2PPS          equ	3746	;# 
  1890     0EA3                     RC3PPS          equ	3747	;# 
  1891     0EA4                     RC4PPS          equ	3748	;# 
  1892     0EA5                     RC5PPS          equ	3749	;# 
  1893     0EA6                     RC6PPS          equ	3750	;# 
  1894     0EA7                     RC7PPS          equ	3751	;# 
  1895     0F0F                     CLCDATA         equ	3855	;# 
  1896     0F10                     CLC1CON         equ	3856	;# 
  1897     0F11                     CLC1POL         equ	3857	;# 
  1898     0F12                     CLC1SEL0        equ	3858	;# 
  1899     0F13                     CLC1SEL1        equ	3859	;# 
  1900     0F14                     CLC1SEL2        equ	3860	;# 
  1901     0F15                     CLC1SEL3        equ	3861	;# 
  1902     0F16                     CLC1GLS0        equ	3862	;# 
  1903     0F17                     CLC1GLS1        equ	3863	;# 
  1904     0F18                     CLC1GLS2        equ	3864	;# 
  1905     0F19                     CLC1GLS3        equ	3865	;# 
  1906     0F1A                     CLC2CON         equ	3866	;# 
  1907     0F1B                     CLC2POL         equ	3867	;# 
  1908     0F1C                     CLC2SEL0        equ	3868	;# 
  1909     0F1D                     CLC2SEL1        equ	3869	;# 
  1910     0F1E                     CLC2SEL2        equ	3870	;# 
  1911     0F1F                     CLC2SEL3        equ	3871	;# 
  1912     0F20                     CLC2GLS0        equ	3872	;# 
  1913     0F21                     CLC2GLS1        equ	3873	;# 
  1914     0F22                     CLC2GLS2        equ	3874	;# 
  1915     0F23                     CLC2GLS3        equ	3875	;# 
  1916     0F24                     CLC3CON         equ	3876	;# 
  1917     0F25                     CLC3POL         equ	3877	;# 
  1918     0F26                     CLC3SEL0        equ	3878	;# 
  1919     0F27                     CLC3SEL1        equ	3879	;# 
  1920     0F28                     CLC3SEL2        equ	3880	;# 
  1921     0F29                     CLC3SEL3        equ	3881	;# 
  1922     0F2A                     CLC3GLS0        equ	3882	;# 
  1923     0F2B                     CLC3GLS1        equ	3883	;# 
  1924     0F2C                     CLC3GLS2        equ	3884	;# 
  1925     0F2D                     CLC3GLS3        equ	3885	;# 
  1926     0F2E                     CLC4CON         equ	3886	;# 
  1927     0F2F                     CLC4POL         equ	3887	;# 
  1928     0F30                     CLC4SEL0        equ	3888	;# 
  1929     0F31                     CLC4SEL1        equ	3889	;# 
  1930     0F32                     CLC4SEL2        equ	3890	;# 
  1931     0F33                     CLC4SEL3        equ	3891	;# 
  1932     0F34                     CLC4GLS0        equ	3892	;# 
  1933     0F35                     CLC4GLS1        equ	3893	;# 
  1934     0F36                     CLC4GLS2        equ	3894	;# 
  1935     0F37                     CLC4GLS3        equ	3895	;# 
  1936     0FE4                     STATUS_SHAD     equ	4068	;# 
  1937     0FE5                     WREG_SHAD       equ	4069	;# 
  1938     0FE6                     BSR_SHAD        equ	4070	;# 
  1939     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1940     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1941     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1942     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1943     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1944     0FED                     STKPTR          equ	4077	;# 
  1945     0FEE                     TOSL            equ	4078	;# 
  1946     0FEF                     TOSH            equ	4079	;# 
  1947     0000                     INDF0           equ	0	;# 
  1948     0001                     INDF1           equ	1	;# 
  1949     0002                     PCL             equ	2	;# 
  1950     0003                     STATUS          equ	3	;# 
  1951     0004                     FSR0L           equ	4	;# 
  1952     0005                     FSR0H           equ	5	;# 
  1953     0006                     FSR1L           equ	6	;# 
  1954     0007                     FSR1H           equ	7	;# 
  1955     0008                     BSR             equ	8	;# 
  1956     0009                     WREG            equ	9	;# 
  1957     000A                     PCLATH          equ	10	;# 
  1958     000B                     INTCON          equ	11	;# 
  1959     000C                     PORTA           equ	12	;# 
  1960     000D                     PORTB           equ	13	;# 
  1961     000E                     PORTC           equ	14	;# 
  1962     0010                     PIR0            equ	16	;# 
  1963     0011                     PIR1            equ	17	;# 
  1964     0012                     PIR2            equ	18	;# 
  1965     0013                     PIR3            equ	19	;# 
  1966     0014                     PIR4            equ	20	;# 
  1967     0015                     TMR0L           equ	21	;# 
  1968     0015                     TMR0            equ	21	;# 
  1969     0016                     TMR0H           equ	22	;# 
  1970     0016                     PR0             equ	22	;# 
  1971     0017                     T0CON0          equ	23	;# 
  1972     0018                     T0CON1          equ	24	;# 
  1973     0019                     TMR1            equ	25	;# 
  1974     0019                     TMR1L           equ	25	;# 
  1975     001A                     TMR1H           equ	26	;# 
  1976     001B                     T1CON           equ	27	;# 
  1977     001C                     T1GCON          equ	28	;# 
  1978     001D                     TMR2            equ	29	;# 
  1979     001E                     PR2             equ	30	;# 
  1980     001F                     T2CON           equ	31	;# 
  1981     008C                     TRISA           equ	140	;# 
  1982     008D                     TRISB           equ	141	;# 
  1983     008E                     TRISC           equ	142	;# 
  1984     0090                     PIE0            equ	144	;# 
  1985     0091                     PIE1            equ	145	;# 
  1986     0092                     PIE2            equ	146	;# 
  1987     0093                     PIE3            equ	147	;# 
  1988     0094                     PIE4            equ	148	;# 
  1989     0097                     WDTCON          equ	151	;# 
  1990     009B                     ADRES           equ	155	;# 
  1991     009B                     ADRESL          equ	155	;# 
  1992     009C                     ADRESH          equ	156	;# 
  1993     009D                     ADCON0          equ	157	;# 
  1994     009E                     ADCON1          equ	158	;# 
  1995     009F                     ADACT           equ	159	;# 
  1996     010C                     LATA            equ	268	;# 
  1997     010D                     LATB            equ	269	;# 
  1998     010E                     LATC            equ	270	;# 
  1999     0111                     CM1CON0         equ	273	;# 
  2000     0112                     CM1CON1         equ	274	;# 
  2001     0113                     CM2CON0         equ	275	;# 
  2002     0114                     CM2CON1         equ	276	;# 
  2003     0115                     CMOUT           equ	277	;# 
  2004     0116                     BORCON          equ	278	;# 
  2005     0117                     FVRCON          equ	279	;# 
  2006     0118                     DACCON0         equ	280	;# 
  2007     0119                     DACCON1         equ	281	;# 
  2008     018C                     ANSELA          equ	396	;# 
  2009     018D                     ANSELB          equ	397	;# 
  2010     018E                     ANSELC          equ	398	;# 
  2011     0197                     VREGCON         equ	407	;# 
  2012     0199                     RC1REG          equ	409	;# 
  2013     0199                     RCREG           equ	409	;# 
  2014     0199                     RCREG1          equ	409	;# 
  2015     019A                     TX1REG          equ	410	;# 
  2016     019A                     TXREG1          equ	410	;# 
  2017     019A                     TXREG           equ	410	;# 
  2018     019B                     SP1BRG          equ	411	;# 
  2019     019B                     SPBRG           equ	411	;# 
  2020     019B                     SP1BRGL         equ	411	;# 
  2021     019B                     SPBRG1          equ	411	;# 
  2022     019B                     SPBRGL          equ	411	;# 
  2023     019C                     SP1BRGH         equ	412	;# 
  2024     019C                     SPBRGH          equ	412	;# 
  2025     019C                     SPBRGH1         equ	412	;# 
  2026     019D                     RC1STA          equ	413	;# 
  2027     019D                     RCSTA1          equ	413	;# 
  2028     019D                     RCSTA           equ	413	;# 
  2029     019E                     TX1STA          equ	414	;# 
  2030     019E                     TXSTA1          equ	414	;# 
  2031     019E                     TXSTA           equ	414	;# 
  2032     019F                     BAUD1CON        equ	415	;# 
  2033     019F                     BAUDCON1        equ	415	;# 
  2034     019F                     BAUDCTL1        equ	415	;# 
  2035     019F                     BAUDCON         equ	415	;# 
  2036     019F                     BAUDCTL         equ	415	;# 
  2037     020C                     WPUA            equ	524	;# 
  2038     020D                     WPUB            equ	525	;# 
  2039     020E                     WPUC            equ	526	;# 
  2040     0211                     SSP1BUF         equ	529	;# 
  2041     0211                     SSPBUF          equ	529	;# 
  2042     0212                     SSP1ADD         equ	530	;# 
  2043     0212                     SSPADD          equ	530	;# 
  2044     0213                     SSP1MSK         equ	531	;# 
  2045     0213                     SSPMSK          equ	531	;# 
  2046     0214                     SSP1STAT        equ	532	;# 
  2047     0214                     SSPSTAT         equ	532	;# 
  2048     0215                     SSP1CON1        equ	533	;# 
  2049     0215                     SSPCON          equ	533	;# 
  2050     0215                     SSPCON1         equ	533	;# 
  2051     0215                     SSP1CON         equ	533	;# 
  2052     0216                     SSP1CON2        equ	534	;# 
  2053     0216                     SSPCON2         equ	534	;# 
  2054     0217                     SSP1CON3        equ	535	;# 
  2055     0217                     SSPCON3         equ	535	;# 
  2056     0219                     SSP2BUF         equ	537	;# 
  2057     021A                     SSP2ADD         equ	538	;# 
  2058     021B                     SSP2MSK         equ	539	;# 
  2059     021C                     SSP2STAT        equ	540	;# 
  2060     021D                     SSP2CON1        equ	541	;# 
  2061     021D                     SSP2CON         equ	541	;# 
  2062     021E                     SSP2CON2        equ	542	;# 
  2063     021F                     SSP2CON3        equ	543	;# 
  2064     028C                     ODCONA          equ	652	;# 
  2065     028D                     ODCONB          equ	653	;# 
  2066     028E                     ODCONC          equ	654	;# 
  2067     0291                     CCPR1           equ	657	;# 
  2068     0291                     CCPR1L          equ	657	;# 
  2069     0292                     CCPR1H          equ	658	;# 
  2070     0293                     CCP1CON         equ	659	;# 
  2071     0294                     CCP1CAP         equ	660	;# 
  2072     0295                     CCPR2           equ	661	;# 
  2073     0295                     CCPR2L          equ	661	;# 
  2074     0296                     CCPR2H          equ	662	;# 
  2075     0297                     CCP2CON         equ	663	;# 
  2076     0298                     CCP2CAP         equ	664	;# 
  2077     029F                     CCPTMRS         equ	671	;# 
  2078     030C                     SLRCONA         equ	780	;# 
  2079     030D                     SLRCONB         equ	781	;# 
  2080     030E                     SLRCONC         equ	782	;# 
  2081     0311                     CCPR3           equ	785	;# 
  2082     0311                     CCPR3L          equ	785	;# 
  2083     0312                     CCPR3H          equ	786	;# 
  2084     0313                     CCP3CON         equ	787	;# 
  2085     0314                     CCP3CAP         equ	788	;# 
  2086     0315                     CCPR4           equ	789	;# 
  2087     0315                     CCPR4L          equ	789	;# 
  2088     0316                     CCPR4H          equ	790	;# 
  2089     0317                     CCP4CON         equ	791	;# 
  2090     0318                     CCP4CAP         equ	792	;# 
  2091     038C                     INLVLA          equ	908	;# 
  2092     038D                     INLVLB          equ	909	;# 
  2093     038E                     INLVLC          equ	910	;# 
  2094     0391                     IOCAP           equ	913	;# 
  2095     0392                     IOCAN           equ	914	;# 
  2096     0393                     IOCAF           equ	915	;# 
  2097     0394                     IOCBP           equ	916	;# 
  2098     0395                     IOCBN           equ	917	;# 
  2099     0396                     IOCBF           equ	918	;# 
  2100     0397                     IOCCP           equ	919	;# 
  2101     0398                     IOCCN           equ	920	;# 
  2102     0399                     IOCCF           equ	921	;# 
  2103     039A                     CLKRCON         equ	922	;# 
  2104     039C                     MDCON           equ	924	;# 
  2105     039D                     MDSRC           equ	925	;# 
  2106     039E                     MDCARH          equ	926	;# 
  2107     039F                     MDCARL          equ	927	;# 
  2108     0411                     TMR3            equ	1041	;# 
  2109     0411                     TMR3L           equ	1041	;# 
  2110     0412                     TMR3H           equ	1042	;# 
  2111     0413                     T3CON           equ	1043	;# 
  2112     0414                     T3GCON          equ	1044	;# 
  2113     0415                     TMR4            equ	1045	;# 
  2114     0416                     PR4             equ	1046	;# 
  2115     0417                     T4CON           equ	1047	;# 
  2116     0418                     TMR5            equ	1048	;# 
  2117     0418                     TMR5L           equ	1048	;# 
  2118     0419                     TMR5H           equ	1049	;# 
  2119     041A                     T5CON           equ	1050	;# 
  2120     041B                     T5GCON          equ	1051	;# 
  2121     041C                     TMR6            equ	1052	;# 
  2122     041D                     PR6             equ	1053	;# 
  2123     041E                     T6CON           equ	1054	;# 
  2124     041F                     CCDCON          equ	1055	;# 
  2125     0498                     NCO1ACC         equ	1176	;# 
  2126     0498                     NCO1ACCL        equ	1176	;# 
  2127     0499                     NCO1ACCH        equ	1177	;# 
  2128     049A                     NCO1ACCU        equ	1178	;# 
  2129     049B                     NCO1INC         equ	1179	;# 
  2130     049B                     NCO1INCL        equ	1179	;# 
  2131     049C                     NCO1INCH        equ	1180	;# 
  2132     049D                     NCO1INCU        equ	1181	;# 
  2133     049E                     NCO1CON         equ	1182	;# 
  2134     049F                     NCO1CLK         equ	1183	;# 
  2135     0617                     PWM5DCL         equ	1559	;# 
  2136     0618                     PWM5DCH         equ	1560	;# 
  2137     0619                     PWM5CON         equ	1561	;# 
  2138     0619                     PWM5CON0        equ	1561	;# 
  2139     061A                     PWM6DCL         equ	1562	;# 
  2140     061B                     PWM6DCH         equ	1563	;# 
  2141     061C                     PWM6CON         equ	1564	;# 
  2142     061C                     PWM6CON0        equ	1564	;# 
  2143     061F                     PWMTMRS         equ	1567	;# 
  2144     0691                     CWG1CLKCON      equ	1681	;# 
  2145     0692                     CWG1DAT         equ	1682	;# 
  2146     0693                     CWG1DBR         equ	1683	;# 
  2147     0694                     CWG1DBF         equ	1684	;# 
  2148     0695                     CWG1CON0        equ	1685	;# 
  2149     0696                     CWG1CON1        equ	1686	;# 
  2150     0697                     CWG1AS0         equ	1687	;# 
  2151     0698                     CWG1AS1         equ	1688	;# 
  2152     0699                     CWG1STR         equ	1689	;# 
  2153     0711                     CWG2CLKCON      equ	1809	;# 
  2154     0712                     CWG2DAT         equ	1810	;# 
  2155     0713                     CWG2DBR         equ	1811	;# 
  2156     0714                     CWG2DBF         equ	1812	;# 
  2157     0715                     CWG2CON0        equ	1813	;# 
  2158     0716                     CWG2CON1        equ	1814	;# 
  2159     0717                     CWG2AS0         equ	1815	;# 
  2160     0718                     CWG2AS1         equ	1816	;# 
  2161     0719                     CWG2STR         equ	1817	;# 
  2162     0891                     NVMADR          equ	2193	;# 
  2163     0891                     EEADR           equ	2193	;# 
  2164     0891                     PMADR           equ	2193	;# 
  2165     0891                     NVMADRL         equ	2193	;# 
  2166     0891                     EEADRL          equ	2193	;# 
  2167     0891                     PMADRL          equ	2193	;# 
  2168     0892                     NVMADRH         equ	2194	;# 
  2169     0892                     EEADRH          equ	2194	;# 
  2170     0892                     PMADRH          equ	2194	;# 
  2171     0893                     NVMDAT          equ	2195	;# 
  2172     0893                     EEDAT           equ	2195	;# 
  2173     0893                     PMDAT           equ	2195	;# 
  2174     0893                     NVMDATL         equ	2195	;# 
  2175     0893                     EEDATL          equ	2195	;# 
  2176     0893                     PMDATL          equ	2195	;# 
  2177     0894                     NVMDATH         equ	2196	;# 
  2178     0894                     EEDATH          equ	2196	;# 
  2179     0894                     PMDATH          equ	2196	;# 
  2180     0895                     NVMCON1         equ	2197	;# 
  2181     0895                     EECON1          equ	2197	;# 
  2182     0895                     PMCON1          equ	2197	;# 
  2183     0896                     NVMCON2         equ	2198	;# 
  2184     0896                     EECON2          equ	2198	;# 
  2185     0896                     PMCON2          equ	2198	;# 
  2186     089B                     PCON0           equ	2203	;# 
  2187     0911                     PMD0            equ	2321	;# 
  2188     0912                     PMD1            equ	2322	;# 
  2189     0913                     PMD2            equ	2323	;# 
  2190     0914                     PMD3            equ	2324	;# 
  2191     0915                     PMD4            equ	2325	;# 
  2192     0916                     PMD5            equ	2326	;# 
  2193     0918                     CPUDOZE         equ	2328	;# 
  2194     0919                     OSCCON1         equ	2329	;# 
  2195     091A                     OSCCON2         equ	2330	;# 
  2196     091B                     OSCCON3         equ	2331	;# 
  2197     091C                     OSCSTAT1        equ	2332	;# 
  2198     091D                     OSCEN           equ	2333	;# 
  2199     091E                     OSCTUNE         equ	2334	;# 
  2200     091F                     OSCFRQ          equ	2335	;# 
  2201     0E0F                     PPSLOCK         equ	3599	;# 
  2202     0E10                     INTPPS          equ	3600	;# 
  2203     0E11                     T0CKIPPS        equ	3601	;# 
  2204     0E12                     T1CKIPPS        equ	3602	;# 
  2205     0E13                     T1GPPS          equ	3603	;# 
  2206     0E14                     CCP1PPS         equ	3604	;# 
  2207     0E15                     CCP2PPS         equ	3605	;# 
  2208     0E16                     CCP3PPS         equ	3606	;# 
  2209     0E17                     CCP4PPS         equ	3607	;# 
  2210     0E18                     CWG1PPS         equ	3608	;# 
  2211     0E19                     CWG2PPS         equ	3609	;# 
  2212     0E1A                     MDCIN1PPS       equ	3610	;# 
  2213     0E1B                     MDCIN2PPS       equ	3611	;# 
  2214     0E1C                     MDMINPPS        equ	3612	;# 
  2215     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2216     0E1E                     SSP2DATPPS      equ	3614	;# 
  2217     0E1F                     SSP2SSPPS       equ	3615	;# 
  2218     0E20                     SSP1CLKPPS      equ	3616	;# 
  2219     0E21                     SSP1DATPPS      equ	3617	;# 
  2220     0E22                     SSP1SSPPS       equ	3618	;# 
  2221     0E24                     RXPPS           equ	3620	;# 
  2222     0E25                     TXPPS           equ	3621	;# 
  2223     0E28                     CLCIN0PPS       equ	3624	;# 
  2224     0E29                     CLCIN1PPS       equ	3625	;# 
  2225     0E2A                     CLCIN2PPS       equ	3626	;# 
  2226     0E2B                     CLCIN3PPS       equ	3627	;# 
  2227     0E2C                     T3CKIPPS        equ	3628	;# 
  2228     0E2D                     T3GPPS          equ	3629	;# 
  2229     0E2E                     T5CKIPPS        equ	3630	;# 
  2230     0E2F                     T5GPPS          equ	3631	;# 
  2231     0E90                     RA0PPS          equ	3728	;# 
  2232     0E91                     RA1PPS          equ	3729	;# 
  2233     0E92                     RA2PPS          equ	3730	;# 
  2234     0E94                     RA4PPS          equ	3732	;# 
  2235     0E95                     RA5PPS          equ	3733	;# 
  2236     0E9C                     RB4PPS          equ	3740	;# 
  2237     0E9D                     RB5PPS          equ	3741	;# 
  2238     0E9E                     RB6PPS          equ	3742	;# 
  2239     0E9F                     RB7PPS          equ	3743	;# 
  2240     0EA0                     RC0PPS          equ	3744	;# 
  2241     0EA1                     RC1PPS          equ	3745	;# 
  2242     0EA2                     RC2PPS          equ	3746	;# 
  2243     0EA3                     RC3PPS          equ	3747	;# 
  2244     0EA4                     RC4PPS          equ	3748	;# 
  2245     0EA5                     RC5PPS          equ	3749	;# 
  2246     0EA6                     RC6PPS          equ	3750	;# 
  2247     0EA7                     RC7PPS          equ	3751	;# 
  2248     0F0F                     CLCDATA         equ	3855	;# 
  2249     0F10                     CLC1CON         equ	3856	;# 
  2250     0F11                     CLC1POL         equ	3857	;# 
  2251     0F12                     CLC1SEL0        equ	3858	;# 
  2252     0F13                     CLC1SEL1        equ	3859	;# 
  2253     0F14                     CLC1SEL2        equ	3860	;# 
  2254     0F15                     CLC1SEL3        equ	3861	;# 
  2255     0F16                     CLC1GLS0        equ	3862	;# 
  2256     0F17                     CLC1GLS1        equ	3863	;# 
  2257     0F18                     CLC1GLS2        equ	3864	;# 
  2258     0F19                     CLC1GLS3        equ	3865	;# 
  2259     0F1A                     CLC2CON         equ	3866	;# 
  2260     0F1B                     CLC2POL         equ	3867	;# 
  2261     0F1C                     CLC2SEL0        equ	3868	;# 
  2262     0F1D                     CLC2SEL1        equ	3869	;# 
  2263     0F1E                     CLC2SEL2        equ	3870	;# 
  2264     0F1F                     CLC2SEL3        equ	3871	;# 
  2265     0F20                     CLC2GLS0        equ	3872	;# 
  2266     0F21                     CLC2GLS1        equ	3873	;# 
  2267     0F22                     CLC2GLS2        equ	3874	;# 
  2268     0F23                     CLC2GLS3        equ	3875	;# 
  2269     0F24                     CLC3CON         equ	3876	;# 
  2270     0F25                     CLC3POL         equ	3877	;# 
  2271     0F26                     CLC3SEL0        equ	3878	;# 
  2272     0F27                     CLC3SEL1        equ	3879	;# 
  2273     0F28                     CLC3SEL2        equ	3880	;# 
  2274     0F29                     CLC3SEL3        equ	3881	;# 
  2275     0F2A                     CLC3GLS0        equ	3882	;# 
  2276     0F2B                     CLC3GLS1        equ	3883	;# 
  2277     0F2C                     CLC3GLS2        equ	3884	;# 
  2278     0F2D                     CLC3GLS3        equ	3885	;# 
  2279     0F2E                     CLC4CON         equ	3886	;# 
  2280     0F2F                     CLC4POL         equ	3887	;# 
  2281     0F30                     CLC4SEL0        equ	3888	;# 
  2282     0F31                     CLC4SEL1        equ	3889	;# 
  2283     0F32                     CLC4SEL2        equ	3890	;# 
  2284     0F33                     CLC4SEL3        equ	3891	;# 
  2285     0F34                     CLC4GLS0        equ	3892	;# 
  2286     0F35                     CLC4GLS1        equ	3893	;# 
  2287     0F36                     CLC4GLS2        equ	3894	;# 
  2288     0F37                     CLC4GLS3        equ	3895	;# 
  2289     0FE4                     STATUS_SHAD     equ	4068	;# 
  2290     0FE5                     WREG_SHAD       equ	4069	;# 
  2291     0FE6                     BSR_SHAD        equ	4070	;# 
  2292     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2293     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2294     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2295     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2296     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2297     0FED                     STKPTR          equ	4077	;# 
  2298     0FEE                     TOSL            equ	4078	;# 
  2299     0FEF                     TOSH            equ	4079	;# 
  2300     0000                     INDF0           equ	0	;# 
  2301     0001                     INDF1           equ	1	;# 
  2302     0002                     PCL             equ	2	;# 
  2303     0003                     STATUS          equ	3	;# 
  2304     0004                     FSR0L           equ	4	;# 
  2305     0005                     FSR0H           equ	5	;# 
  2306     0006                     FSR1L           equ	6	;# 
  2307     0007                     FSR1H           equ	7	;# 
  2308     0008                     BSR             equ	8	;# 
  2309     0009                     WREG            equ	9	;# 
  2310     000A                     PCLATH          equ	10	;# 
  2311     000B                     INTCON          equ	11	;# 
  2312     000C                     PORTA           equ	12	;# 
  2313     000D                     PORTB           equ	13	;# 
  2314     000E                     PORTC           equ	14	;# 
  2315     0010                     PIR0            equ	16	;# 
  2316     0011                     PIR1            equ	17	;# 
  2317     0012                     PIR2            equ	18	;# 
  2318     0013                     PIR3            equ	19	;# 
  2319     0014                     PIR4            equ	20	;# 
  2320     0015                     TMR0L           equ	21	;# 
  2321     0015                     TMR0            equ	21	;# 
  2322     0016                     TMR0H           equ	22	;# 
  2323     0016                     PR0             equ	22	;# 
  2324     0017                     T0CON0          equ	23	;# 
  2325     0018                     T0CON1          equ	24	;# 
  2326     0019                     TMR1            equ	25	;# 
  2327     0019                     TMR1L           equ	25	;# 
  2328     001A                     TMR1H           equ	26	;# 
  2329     001B                     T1CON           equ	27	;# 
  2330     001C                     T1GCON          equ	28	;# 
  2331     001D                     TMR2            equ	29	;# 
  2332     001E                     PR2             equ	30	;# 
  2333     001F                     T2CON           equ	31	;# 
  2334     008C                     TRISA           equ	140	;# 
  2335     008D                     TRISB           equ	141	;# 
  2336     008E                     TRISC           equ	142	;# 
  2337     0090                     PIE0            equ	144	;# 
  2338     0091                     PIE1            equ	145	;# 
  2339     0092                     PIE2            equ	146	;# 
  2340     0093                     PIE3            equ	147	;# 
  2341     0094                     PIE4            equ	148	;# 
  2342     0097                     WDTCON          equ	151	;# 
  2343     009B                     ADRES           equ	155	;# 
  2344     009B                     ADRESL          equ	155	;# 
  2345     009C                     ADRESH          equ	156	;# 
  2346     009D                     ADCON0          equ	157	;# 
  2347     009E                     ADCON1          equ	158	;# 
  2348     009F                     ADACT           equ	159	;# 
  2349     010C                     LATA            equ	268	;# 
  2350     010D                     LATB            equ	269	;# 
  2351     010E                     LATC            equ	270	;# 
  2352     0111                     CM1CON0         equ	273	;# 
  2353     0112                     CM1CON1         equ	274	;# 
  2354     0113                     CM2CON0         equ	275	;# 
  2355     0114                     CM2CON1         equ	276	;# 
  2356     0115                     CMOUT           equ	277	;# 
  2357     0116                     BORCON          equ	278	;# 
  2358     0117                     FVRCON          equ	279	;# 
  2359     0118                     DACCON0         equ	280	;# 
  2360     0119                     DACCON1         equ	281	;# 
  2361     018C                     ANSELA          equ	396	;# 
  2362     018D                     ANSELB          equ	397	;# 
  2363     018E                     ANSELC          equ	398	;# 
  2364     0197                     VREGCON         equ	407	;# 
  2365     0199                     RC1REG          equ	409	;# 
  2366     0199                     RCREG           equ	409	;# 
  2367     0199                     RCREG1          equ	409	;# 
  2368     019A                     TX1REG          equ	410	;# 
  2369     019A                     TXREG1          equ	410	;# 
  2370     019A                     TXREG           equ	410	;# 
  2371     019B                     SP1BRG          equ	411	;# 
  2372     019B                     SPBRG           equ	411	;# 
  2373     019B                     SP1BRGL         equ	411	;# 
  2374     019B                     SPBRG1          equ	411	;# 
  2375     019B                     SPBRGL          equ	411	;# 
  2376     019C                     SP1BRGH         equ	412	;# 
  2377     019C                     SPBRGH          equ	412	;# 
  2378     019C                     SPBRGH1         equ	412	;# 
  2379     019D                     RC1STA          equ	413	;# 
  2380     019D                     RCSTA1          equ	413	;# 
  2381     019D                     RCSTA           equ	413	;# 
  2382     019E                     TX1STA          equ	414	;# 
  2383     019E                     TXSTA1          equ	414	;# 
  2384     019E                     TXSTA           equ	414	;# 
  2385     019F                     BAUD1CON        equ	415	;# 
  2386     019F                     BAUDCON1        equ	415	;# 
  2387     019F                     BAUDCTL1        equ	415	;# 
  2388     019F                     BAUDCON         equ	415	;# 
  2389     019F                     BAUDCTL         equ	415	;# 
  2390     020C                     WPUA            equ	524	;# 
  2391     020D                     WPUB            equ	525	;# 
  2392     020E                     WPUC            equ	526	;# 
  2393     0211                     SSP1BUF         equ	529	;# 
  2394     0211                     SSPBUF          equ	529	;# 
  2395     0212                     SSP1ADD         equ	530	;# 
  2396     0212                     SSPADD          equ	530	;# 
  2397     0213                     SSP1MSK         equ	531	;# 
  2398     0213                     SSPMSK          equ	531	;# 
  2399     0214                     SSP1STAT        equ	532	;# 
  2400     0214                     SSPSTAT         equ	532	;# 
  2401     0215                     SSP1CON1        equ	533	;# 
  2402     0215                     SSPCON          equ	533	;# 
  2403     0215                     SSPCON1         equ	533	;# 
  2404     0215                     SSP1CON         equ	533	;# 
  2405     0216                     SSP1CON2        equ	534	;# 
  2406     0216                     SSPCON2         equ	534	;# 
  2407     0217                     SSP1CON3        equ	535	;# 
  2408     0217                     SSPCON3         equ	535	;# 
  2409     0219                     SSP2BUF         equ	537	;# 
  2410     021A                     SSP2ADD         equ	538	;# 
  2411     021B                     SSP2MSK         equ	539	;# 
  2412     021C                     SSP2STAT        equ	540	;# 
  2413     021D                     SSP2CON1        equ	541	;# 
  2414     021D                     SSP2CON         equ	541	;# 
  2415     021E                     SSP2CON2        equ	542	;# 
  2416     021F                     SSP2CON3        equ	543	;# 
  2417     028C                     ODCONA          equ	652	;# 
  2418     028D                     ODCONB          equ	653	;# 
  2419     028E                     ODCONC          equ	654	;# 
  2420     0291                     CCPR1           equ	657	;# 
  2421     0291                     CCPR1L          equ	657	;# 
  2422     0292                     CCPR1H          equ	658	;# 
  2423     0293                     CCP1CON         equ	659	;# 
  2424     0294                     CCP1CAP         equ	660	;# 
  2425     0295                     CCPR2           equ	661	;# 
  2426     0295                     CCPR2L          equ	661	;# 
  2427     0296                     CCPR2H          equ	662	;# 
  2428     0297                     CCP2CON         equ	663	;# 
  2429     0298                     CCP2CAP         equ	664	;# 
  2430     029F                     CCPTMRS         equ	671	;# 
  2431     030C                     SLRCONA         equ	780	;# 
  2432     030D                     SLRCONB         equ	781	;# 
  2433     030E                     SLRCONC         equ	782	;# 
  2434     0311                     CCPR3           equ	785	;# 
  2435     0311                     CCPR3L          equ	785	;# 
  2436     0312                     CCPR3H          equ	786	;# 
  2437     0313                     CCP3CON         equ	787	;# 
  2438     0314                     CCP3CAP         equ	788	;# 
  2439     0315                     CCPR4           equ	789	;# 
  2440     0315                     CCPR4L          equ	789	;# 
  2441     0316                     CCPR4H          equ	790	;# 
  2442     0317                     CCP4CON         equ	791	;# 
  2443     0318                     CCP4CAP         equ	792	;# 
  2444     038C                     INLVLA          equ	908	;# 
  2445     038D                     INLVLB          equ	909	;# 
  2446     038E                     INLVLC          equ	910	;# 
  2447     0391                     IOCAP           equ	913	;# 
  2448     0392                     IOCAN           equ	914	;# 
  2449     0393                     IOCAF           equ	915	;# 
  2450     0394                     IOCBP           equ	916	;# 
  2451     0395                     IOCBN           equ	917	;# 
  2452     0396                     IOCBF           equ	918	;# 
  2453     0397                     IOCCP           equ	919	;# 
  2454     0398                     IOCCN           equ	920	;# 
  2455     0399                     IOCCF           equ	921	;# 
  2456     039A                     CLKRCON         equ	922	;# 
  2457     039C                     MDCON           equ	924	;# 
  2458     039D                     MDSRC           equ	925	;# 
  2459     039E                     MDCARH          equ	926	;# 
  2460     039F                     MDCARL          equ	927	;# 
  2461     0411                     TMR3            equ	1041	;# 
  2462     0411                     TMR3L           equ	1041	;# 
  2463     0412                     TMR3H           equ	1042	;# 
  2464     0413                     T3CON           equ	1043	;# 
  2465     0414                     T3GCON          equ	1044	;# 
  2466     0415                     TMR4            equ	1045	;# 
  2467     0416                     PR4             equ	1046	;# 
  2468     0417                     T4CON           equ	1047	;# 
  2469     0418                     TMR5            equ	1048	;# 
  2470     0418                     TMR5L           equ	1048	;# 
  2471     0419                     TMR5H           equ	1049	;# 
  2472     041A                     T5CON           equ	1050	;# 
  2473     041B                     T5GCON          equ	1051	;# 
  2474     041C                     TMR6            equ	1052	;# 
  2475     041D                     PR6             equ	1053	;# 
  2476     041E                     T6CON           equ	1054	;# 
  2477     041F                     CCDCON          equ	1055	;# 
  2478     0498                     NCO1ACC         equ	1176	;# 
  2479     0498                     NCO1ACCL        equ	1176	;# 
  2480     0499                     NCO1ACCH        equ	1177	;# 
  2481     049A                     NCO1ACCU        equ	1178	;# 
  2482     049B                     NCO1INC         equ	1179	;# 
  2483     049B                     NCO1INCL        equ	1179	;# 
  2484     049C                     NCO1INCH        equ	1180	;# 
  2485     049D                     NCO1INCU        equ	1181	;# 
  2486     049E                     NCO1CON         equ	1182	;# 
  2487     049F                     NCO1CLK         equ	1183	;# 
  2488     0617                     PWM5DCL         equ	1559	;# 
  2489     0618                     PWM5DCH         equ	1560	;# 
  2490     0619                     PWM5CON         equ	1561	;# 
  2491     0619                     PWM5CON0        equ	1561	;# 
  2492     061A                     PWM6DCL         equ	1562	;# 
  2493     061B                     PWM6DCH         equ	1563	;# 
  2494     061C                     PWM6CON         equ	1564	;# 
  2495     061C                     PWM6CON0        equ	1564	;# 
  2496     061F                     PWMTMRS         equ	1567	;# 
  2497     0691                     CWG1CLKCON      equ	1681	;# 
  2498     0692                     CWG1DAT         equ	1682	;# 
  2499     0693                     CWG1DBR         equ	1683	;# 
  2500     0694                     CWG1DBF         equ	1684	;# 
  2501     0695                     CWG1CON0        equ	1685	;# 
  2502     0696                     CWG1CON1        equ	1686	;# 
  2503     0697                     CWG1AS0         equ	1687	;# 
  2504     0698                     CWG1AS1         equ	1688	;# 
  2505     0699                     CWG1STR         equ	1689	;# 
  2506     0711                     CWG2CLKCON      equ	1809	;# 
  2507     0712                     CWG2DAT         equ	1810	;# 
  2508     0713                     CWG2DBR         equ	1811	;# 
  2509     0714                     CWG2DBF         equ	1812	;# 
  2510     0715                     CWG2CON0        equ	1813	;# 
  2511     0716                     CWG2CON1        equ	1814	;# 
  2512     0717                     CWG2AS0         equ	1815	;# 
  2513     0718                     CWG2AS1         equ	1816	;# 
  2514     0719                     CWG2STR         equ	1817	;# 
  2515     0891                     NVMADR          equ	2193	;# 
  2516     0891                     EEADR           equ	2193	;# 
  2517     0891                     PMADR           equ	2193	;# 
  2518     0891                     NVMADRL         equ	2193	;# 
  2519     0891                     EEADRL          equ	2193	;# 
  2520     0891                     PMADRL          equ	2193	;# 
  2521     0892                     NVMADRH         equ	2194	;# 
  2522     0892                     EEADRH          equ	2194	;# 
  2523     0892                     PMADRH          equ	2194	;# 
  2524     0893                     NVMDAT          equ	2195	;# 
  2525     0893                     EEDAT           equ	2195	;# 
  2526     0893                     PMDAT           equ	2195	;# 
  2527     0893                     NVMDATL         equ	2195	;# 
  2528     0893                     EEDATL          equ	2195	;# 
  2529     0893                     PMDATL          equ	2195	;# 
  2530     0894                     NVMDATH         equ	2196	;# 
  2531     0894                     EEDATH          equ	2196	;# 
  2532     0894                     PMDATH          equ	2196	;# 
  2533     0895                     NVMCON1         equ	2197	;# 
  2534     0895                     EECON1          equ	2197	;# 
  2535     0895                     PMCON1          equ	2197	;# 
  2536     0896                     NVMCON2         equ	2198	;# 
  2537     0896                     EECON2          equ	2198	;# 
  2538     0896                     PMCON2          equ	2198	;# 
  2539     089B                     PCON0           equ	2203	;# 
  2540     0911                     PMD0            equ	2321	;# 
  2541     0912                     PMD1            equ	2322	;# 
  2542     0913                     PMD2            equ	2323	;# 
  2543     0914                     PMD3            equ	2324	;# 
  2544     0915                     PMD4            equ	2325	;# 
  2545     0916                     PMD5            equ	2326	;# 
  2546     0918                     CPUDOZE         equ	2328	;# 
  2547     0919                     OSCCON1         equ	2329	;# 
  2548     091A                     OSCCON2         equ	2330	;# 
  2549     091B                     OSCCON3         equ	2331	;# 
  2550     091C                     OSCSTAT1        equ	2332	;# 
  2551     091D                     OSCEN           equ	2333	;# 
  2552     091E                     OSCTUNE         equ	2334	;# 
  2553     091F                     OSCFRQ          equ	2335	;# 
  2554     0E0F                     PPSLOCK         equ	3599	;# 
  2555     0E10                     INTPPS          equ	3600	;# 
  2556     0E11                     T0CKIPPS        equ	3601	;# 
  2557     0E12                     T1CKIPPS        equ	3602	;# 
  2558     0E13                     T1GPPS          equ	3603	;# 
  2559     0E14                     CCP1PPS         equ	3604	;# 
  2560     0E15                     CCP2PPS         equ	3605	;# 
  2561     0E16                     CCP3PPS         equ	3606	;# 
  2562     0E17                     CCP4PPS         equ	3607	;# 
  2563     0E18                     CWG1PPS         equ	3608	;# 
  2564     0E19                     CWG2PPS         equ	3609	;# 
  2565     0E1A                     MDCIN1PPS       equ	3610	;# 
  2566     0E1B                     MDCIN2PPS       equ	3611	;# 
  2567     0E1C                     MDMINPPS        equ	3612	;# 
  2568     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2569     0E1E                     SSP2DATPPS      equ	3614	;# 
  2570     0E1F                     SSP2SSPPS       equ	3615	;# 
  2571     0E20                     SSP1CLKPPS      equ	3616	;# 
  2572     0E21                     SSP1DATPPS      equ	3617	;# 
  2573     0E22                     SSP1SSPPS       equ	3618	;# 
  2574     0E24                     RXPPS           equ	3620	;# 
  2575     0E25                     TXPPS           equ	3621	;# 
  2576     0E28                     CLCIN0PPS       equ	3624	;# 
  2577     0E29                     CLCIN1PPS       equ	3625	;# 
  2578     0E2A                     CLCIN2PPS       equ	3626	;# 
  2579     0E2B                     CLCIN3PPS       equ	3627	;# 
  2580     0E2C                     T3CKIPPS        equ	3628	;# 
  2581     0E2D                     T3GPPS          equ	3629	;# 
  2582     0E2E                     T5CKIPPS        equ	3630	;# 
  2583     0E2F                     T5GPPS          equ	3631	;# 
  2584     0E90                     RA0PPS          equ	3728	;# 
  2585     0E91                     RA1PPS          equ	3729	;# 
  2586     0E92                     RA2PPS          equ	3730	;# 
  2587     0E94                     RA4PPS          equ	3732	;# 
  2588     0E95                     RA5PPS          equ	3733	;# 
  2589     0E9C                     RB4PPS          equ	3740	;# 
  2590     0E9D                     RB5PPS          equ	3741	;# 
  2591     0E9E                     RB6PPS          equ	3742	;# 
  2592     0E9F                     RB7PPS          equ	3743	;# 
  2593     0EA0                     RC0PPS          equ	3744	;# 
  2594     0EA1                     RC1PPS          equ	3745	;# 
  2595     0EA2                     RC2PPS          equ	3746	;# 
  2596     0EA3                     RC3PPS          equ	3747	;# 
  2597     0EA4                     RC4PPS          equ	3748	;# 
  2598     0EA5                     RC5PPS          equ	3749	;# 
  2599     0EA6                     RC6PPS          equ	3750	;# 
  2600     0EA7                     RC7PPS          equ	3751	;# 
  2601     0F0F                     CLCDATA         equ	3855	;# 
  2602     0F10                     CLC1CON         equ	3856	;# 
  2603     0F11                     CLC1POL         equ	3857	;# 
  2604     0F12                     CLC1SEL0        equ	3858	;# 
  2605     0F13                     CLC1SEL1        equ	3859	;# 
  2606     0F14                     CLC1SEL2        equ	3860	;# 
  2607     0F15                     CLC1SEL3        equ	3861	;# 
  2608     0F16                     CLC1GLS0        equ	3862	;# 
  2609     0F17                     CLC1GLS1        equ	3863	;# 
  2610     0F18                     CLC1GLS2        equ	3864	;# 
  2611     0F19                     CLC1GLS3        equ	3865	;# 
  2612     0F1A                     CLC2CON         equ	3866	;# 
  2613     0F1B                     CLC2POL         equ	3867	;# 
  2614     0F1C                     CLC2SEL0        equ	3868	;# 
  2615     0F1D                     CLC2SEL1        equ	3869	;# 
  2616     0F1E                     CLC2SEL2        equ	3870	;# 
  2617     0F1F                     CLC2SEL3        equ	3871	;# 
  2618     0F20                     CLC2GLS0        equ	3872	;# 
  2619     0F21                     CLC2GLS1        equ	3873	;# 
  2620     0F22                     CLC2GLS2        equ	3874	;# 
  2621     0F23                     CLC2GLS3        equ	3875	;# 
  2622     0F24                     CLC3CON         equ	3876	;# 
  2623     0F25                     CLC3POL         equ	3877	;# 
  2624     0F26                     CLC3SEL0        equ	3878	;# 
  2625     0F27                     CLC3SEL1        equ	3879	;# 
  2626     0F28                     CLC3SEL2        equ	3880	;# 
  2627     0F29                     CLC3SEL3        equ	3881	;# 
  2628     0F2A                     CLC3GLS0        equ	3882	;# 
  2629     0F2B                     CLC3GLS1        equ	3883	;# 
  2630     0F2C                     CLC3GLS2        equ	3884	;# 
  2631     0F2D                     CLC3GLS3        equ	3885	;# 
  2632     0F2E                     CLC4CON         equ	3886	;# 
  2633     0F2F                     CLC4POL         equ	3887	;# 
  2634     0F30                     CLC4SEL0        equ	3888	;# 
  2635     0F31                     CLC4SEL1        equ	3889	;# 
  2636     0F32                     CLC4SEL2        equ	3890	;# 
  2637     0F33                     CLC4SEL3        equ	3891	;# 
  2638     0F34                     CLC4GLS0        equ	3892	;# 
  2639     0F35                     CLC4GLS1        equ	3893	;# 
  2640     0F36                     CLC4GLS2        equ	3894	;# 
  2641     0F37                     CLC4GLS3        equ	3895	;# 
  2642     0FE4                     STATUS_SHAD     equ	4068	;# 
  2643     0FE5                     WREG_SHAD       equ	4069	;# 
  2644     0FE6                     BSR_SHAD        equ	4070	;# 
  2645     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2646     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2647     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2648     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2649     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2650     0FED                     STKPTR          equ	4077	;# 
  2651     0FEE                     TOSL            equ	4078	;# 
  2652     0FEF                     TOSH            equ	4079	;# 
  2653     0000                     INDF0           equ	0	;# 
  2654     0001                     INDF1           equ	1	;# 
  2655     0002                     PCL             equ	2	;# 
  2656     0003                     STATUS          equ	3	;# 
  2657     0004                     FSR0L           equ	4	;# 
  2658     0005                     FSR0H           equ	5	;# 
  2659     0006                     FSR1L           equ	6	;# 
  2660     0007                     FSR1H           equ	7	;# 
  2661     0008                     BSR             equ	8	;# 
  2662     0009                     WREG            equ	9	;# 
  2663     000A                     PCLATH          equ	10	;# 
  2664     000B                     INTCON          equ	11	;# 
  2665     000C                     PORTA           equ	12	;# 
  2666     000D                     PORTB           equ	13	;# 
  2667     000E                     PORTC           equ	14	;# 
  2668     0010                     PIR0            equ	16	;# 
  2669     0011                     PIR1            equ	17	;# 
  2670     0012                     PIR2            equ	18	;# 
  2671     0013                     PIR3            equ	19	;# 
  2672     0014                     PIR4            equ	20	;# 
  2673     0015                     TMR0L           equ	21	;# 
  2674     0015                     TMR0            equ	21	;# 
  2675     0016                     TMR0H           equ	22	;# 
  2676     0016                     PR0             equ	22	;# 
  2677     0017                     T0CON0          equ	23	;# 
  2678     0018                     T0CON1          equ	24	;# 
  2679     0019                     TMR1            equ	25	;# 
  2680     0019                     TMR1L           equ	25	;# 
  2681     001A                     TMR1H           equ	26	;# 
  2682     001B                     T1CON           equ	27	;# 
  2683     001C                     T1GCON          equ	28	;# 
  2684     001D                     TMR2            equ	29	;# 
  2685     001E                     PR2             equ	30	;# 
  2686     001F                     T2CON           equ	31	;# 
  2687     008C                     TRISA           equ	140	;# 
  2688     008D                     TRISB           equ	141	;# 
  2689     008E                     TRISC           equ	142	;# 
  2690     0090                     PIE0            equ	144	;# 
  2691     0091                     PIE1            equ	145	;# 
  2692     0092                     PIE2            equ	146	;# 
  2693     0093                     PIE3            equ	147	;# 
  2694     0094                     PIE4            equ	148	;# 
  2695     0097                     WDTCON          equ	151	;# 
  2696     009B                     ADRES           equ	155	;# 
  2697     009B                     ADRESL          equ	155	;# 
  2698     009C                     ADRESH          equ	156	;# 
  2699     009D                     ADCON0          equ	157	;# 
  2700     009E                     ADCON1          equ	158	;# 
  2701     009F                     ADACT           equ	159	;# 
  2702     010C                     LATA            equ	268	;# 
  2703     010D                     LATB            equ	269	;# 
  2704     010E                     LATC            equ	270	;# 
  2705     0111                     CM1CON0         equ	273	;# 
  2706     0112                     CM1CON1         equ	274	;# 
  2707     0113                     CM2CON0         equ	275	;# 
  2708     0114                     CM2CON1         equ	276	;# 
  2709     0115                     CMOUT           equ	277	;# 
  2710     0116                     BORCON          equ	278	;# 
  2711     0117                     FVRCON          equ	279	;# 
  2712     0118                     DACCON0         equ	280	;# 
  2713     0119                     DACCON1         equ	281	;# 
  2714     018C                     ANSELA          equ	396	;# 
  2715     018D                     ANSELB          equ	397	;# 
  2716     018E                     ANSELC          equ	398	;# 
  2717     0197                     VREGCON         equ	407	;# 
  2718     0199                     RC1REG          equ	409	;# 
  2719     0199                     RCREG           equ	409	;# 
  2720     0199                     RCREG1          equ	409	;# 
  2721     019A                     TX1REG          equ	410	;# 
  2722     019A                     TXREG1          equ	410	;# 
  2723     019A                     TXREG           equ	410	;# 
  2724     019B                     SP1BRG          equ	411	;# 
  2725     019B                     SPBRG           equ	411	;# 
  2726     019B                     SP1BRGL         equ	411	;# 
  2727     019B                     SPBRG1          equ	411	;# 
  2728     019B                     SPBRGL          equ	411	;# 
  2729     019C                     SP1BRGH         equ	412	;# 
  2730     019C                     SPBRGH          equ	412	;# 
  2731     019C                     SPBRGH1         equ	412	;# 
  2732     019D                     RC1STA          equ	413	;# 
  2733     019D                     RCSTA1          equ	413	;# 
  2734     019D                     RCSTA           equ	413	;# 
  2735     019E                     TX1STA          equ	414	;# 
  2736     019E                     TXSTA1          equ	414	;# 
  2737     019E                     TXSTA           equ	414	;# 
  2738     019F                     BAUD1CON        equ	415	;# 
  2739     019F                     BAUDCON1        equ	415	;# 
  2740     019F                     BAUDCTL1        equ	415	;# 
  2741     019F                     BAUDCON         equ	415	;# 
  2742     019F                     BAUDCTL         equ	415	;# 
  2743     020C                     WPUA            equ	524	;# 
  2744     020D                     WPUB            equ	525	;# 
  2745     020E                     WPUC            equ	526	;# 
  2746     0211                     SSP1BUF         equ	529	;# 
  2747     0211                     SSPBUF          equ	529	;# 
  2748     0212                     SSP1ADD         equ	530	;# 
  2749     0212                     SSPADD          equ	530	;# 
  2750     0213                     SSP1MSK         equ	531	;# 
  2751     0213                     SSPMSK          equ	531	;# 
  2752     0214                     SSP1STAT        equ	532	;# 
  2753     0214                     SSPSTAT         equ	532	;# 
  2754     0215                     SSP1CON1        equ	533	;# 
  2755     0215                     SSPCON          equ	533	;# 
  2756     0215                     SSPCON1         equ	533	;# 
  2757     0215                     SSP1CON         equ	533	;# 
  2758     0216                     SSP1CON2        equ	534	;# 
  2759     0216                     SSPCON2         equ	534	;# 
  2760     0217                     SSP1CON3        equ	535	;# 
  2761     0217                     SSPCON3         equ	535	;# 
  2762     0219                     SSP2BUF         equ	537	;# 
  2763     021A                     SSP2ADD         equ	538	;# 
  2764     021B                     SSP2MSK         equ	539	;# 
  2765     021C                     SSP2STAT        equ	540	;# 
  2766     021D                     SSP2CON1        equ	541	;# 
  2767     021D                     SSP2CON         equ	541	;# 
  2768     021E                     SSP2CON2        equ	542	;# 
  2769     021F                     SSP2CON3        equ	543	;# 
  2770     028C                     ODCONA          equ	652	;# 
  2771     028D                     ODCONB          equ	653	;# 
  2772     028E                     ODCONC          equ	654	;# 
  2773     0291                     CCPR1           equ	657	;# 
  2774     0291                     CCPR1L          equ	657	;# 
  2775     0292                     CCPR1H          equ	658	;# 
  2776     0293                     CCP1CON         equ	659	;# 
  2777     0294                     CCP1CAP         equ	660	;# 
  2778     0295                     CCPR2           equ	661	;# 
  2779     0295                     CCPR2L          equ	661	;# 
  2780     0296                     CCPR2H          equ	662	;# 
  2781     0297                     CCP2CON         equ	663	;# 
  2782     0298                     CCP2CAP         equ	664	;# 
  2783     029F                     CCPTMRS         equ	671	;# 
  2784     030C                     SLRCONA         equ	780	;# 
  2785     030D                     SLRCONB         equ	781	;# 
  2786     030E                     SLRCONC         equ	782	;# 
  2787     0311                     CCPR3           equ	785	;# 
  2788     0311                     CCPR3L          equ	785	;# 
  2789     0312                     CCPR3H          equ	786	;# 
  2790     0313                     CCP3CON         equ	787	;# 
  2791     0314                     CCP3CAP         equ	788	;# 
  2792     0315                     CCPR4           equ	789	;# 
  2793     0315                     CCPR4L          equ	789	;# 
  2794     0316                     CCPR4H          equ	790	;# 
  2795     0317                     CCP4CON         equ	791	;# 
  2796     0318                     CCP4CAP         equ	792	;# 
  2797     038C                     INLVLA          equ	908	;# 
  2798     038D                     INLVLB          equ	909	;# 
  2799     038E                     INLVLC          equ	910	;# 
  2800     0391                     IOCAP           equ	913	;# 
  2801     0392                     IOCAN           equ	914	;# 
  2802     0393                     IOCAF           equ	915	;# 
  2803     0394                     IOCBP           equ	916	;# 
  2804     0395                     IOCBN           equ	917	;# 
  2805     0396                     IOCBF           equ	918	;# 
  2806     0397                     IOCCP           equ	919	;# 
  2807     0398                     IOCCN           equ	920	;# 
  2808     0399                     IOCCF           equ	921	;# 
  2809     039A                     CLKRCON         equ	922	;# 
  2810     039C                     MDCON           equ	924	;# 
  2811     039D                     MDSRC           equ	925	;# 
  2812     039E                     MDCARH          equ	926	;# 
  2813     039F                     MDCARL          equ	927	;# 
  2814     0411                     TMR3            equ	1041	;# 
  2815     0411                     TMR3L           equ	1041	;# 
  2816     0412                     TMR3H           equ	1042	;# 
  2817     0413                     T3CON           equ	1043	;# 
  2818     0414                     T3GCON          equ	1044	;# 
  2819     0415                     TMR4            equ	1045	;# 
  2820     0416                     PR4             equ	1046	;# 
  2821     0417                     T4CON           equ	1047	;# 
  2822     0418                     TMR5            equ	1048	;# 
  2823     0418                     TMR5L           equ	1048	;# 
  2824     0419                     TMR5H           equ	1049	;# 
  2825     041A                     T5CON           equ	1050	;# 
  2826     041B                     T5GCON          equ	1051	;# 
  2827     041C                     TMR6            equ	1052	;# 
  2828     041D                     PR6             equ	1053	;# 
  2829     041E                     T6CON           equ	1054	;# 
  2830     041F                     CCDCON          equ	1055	;# 
  2831     0498                     NCO1ACC         equ	1176	;# 
  2832     0498                     NCO1ACCL        equ	1176	;# 
  2833     0499                     NCO1ACCH        equ	1177	;# 
  2834     049A                     NCO1ACCU        equ	1178	;# 
  2835     049B                     NCO1INC         equ	1179	;# 
  2836     049B                     NCO1INCL        equ	1179	;# 
  2837     049C                     NCO1INCH        equ	1180	;# 
  2838     049D                     NCO1INCU        equ	1181	;# 
  2839     049E                     NCO1CON         equ	1182	;# 
  2840     049F                     NCO1CLK         equ	1183	;# 
  2841     0617                     PWM5DCL         equ	1559	;# 
  2842     0618                     PWM5DCH         equ	1560	;# 
  2843     0619                     PWM5CON         equ	1561	;# 
  2844     0619                     PWM5CON0        equ	1561	;# 
  2845     061A                     PWM6DCL         equ	1562	;# 
  2846     061B                     PWM6DCH         equ	1563	;# 
  2847     061C                     PWM6CON         equ	1564	;# 
  2848     061C                     PWM6CON0        equ	1564	;# 
  2849     061F                     PWMTMRS         equ	1567	;# 
  2850     0691                     CWG1CLKCON      equ	1681	;# 
  2851     0692                     CWG1DAT         equ	1682	;# 
  2852     0693                     CWG1DBR         equ	1683	;# 
  2853     0694                     CWG1DBF         equ	1684	;# 
  2854     0695                     CWG1CON0        equ	1685	;# 
  2855     0696                     CWG1CON1        equ	1686	;# 
  2856     0697                     CWG1AS0         equ	1687	;# 
  2857     0698                     CWG1AS1         equ	1688	;# 
  2858     0699                     CWG1STR         equ	1689	;# 
  2859     0711                     CWG2CLKCON      equ	1809	;# 
  2860     0712                     CWG2DAT         equ	1810	;# 
  2861     0713                     CWG2DBR         equ	1811	;# 
  2862     0714                     CWG2DBF         equ	1812	;# 
  2863     0715                     CWG2CON0        equ	1813	;# 
  2864     0716                     CWG2CON1        equ	1814	;# 
  2865     0717                     CWG2AS0         equ	1815	;# 
  2866     0718                     CWG2AS1         equ	1816	;# 
  2867     0719                     CWG2STR         equ	1817	;# 
  2868     0891                     NVMADR          equ	2193	;# 
  2869     0891                     EEADR           equ	2193	;# 
  2870     0891                     PMADR           equ	2193	;# 
  2871     0891                     NVMADRL         equ	2193	;# 
  2872     0891                     EEADRL          equ	2193	;# 
  2873     0891                     PMADRL          equ	2193	;# 
  2874     0892                     NVMADRH         equ	2194	;# 
  2875     0892                     EEADRH          equ	2194	;# 
  2876     0892                     PMADRH          equ	2194	;# 
  2877     0893                     NVMDAT          equ	2195	;# 
  2878     0893                     EEDAT           equ	2195	;# 
  2879     0893                     PMDAT           equ	2195	;# 
  2880     0893                     NVMDATL         equ	2195	;# 
  2881     0893                     EEDATL          equ	2195	;# 
  2882     0893                     PMDATL          equ	2195	;# 
  2883     0894                     NVMDATH         equ	2196	;# 
  2884     0894                     EEDATH          equ	2196	;# 
  2885     0894                     PMDATH          equ	2196	;# 
  2886     0895                     NVMCON1         equ	2197	;# 
  2887     0895                     EECON1          equ	2197	;# 
  2888     0895                     PMCON1          equ	2197	;# 
  2889     0896                     NVMCON2         equ	2198	;# 
  2890     0896                     EECON2          equ	2198	;# 
  2891     0896                     PMCON2          equ	2198	;# 
  2892     089B                     PCON0           equ	2203	;# 
  2893     0911                     PMD0            equ	2321	;# 
  2894     0912                     PMD1            equ	2322	;# 
  2895     0913                     PMD2            equ	2323	;# 
  2896     0914                     PMD3            equ	2324	;# 
  2897     0915                     PMD4            equ	2325	;# 
  2898     0916                     PMD5            equ	2326	;# 
  2899     0918                     CPUDOZE         equ	2328	;# 
  2900     0919                     OSCCON1         equ	2329	;# 
  2901     091A                     OSCCON2         equ	2330	;# 
  2902     091B                     OSCCON3         equ	2331	;# 
  2903     091C                     OSCSTAT1        equ	2332	;# 
  2904     091D                     OSCEN           equ	2333	;# 
  2905     091E                     OSCTUNE         equ	2334	;# 
  2906     091F                     OSCFRQ          equ	2335	;# 
  2907     0E0F                     PPSLOCK         equ	3599	;# 
  2908     0E10                     INTPPS          equ	3600	;# 
  2909     0E11                     T0CKIPPS        equ	3601	;# 
  2910     0E12                     T1CKIPPS        equ	3602	;# 
  2911     0E13                     T1GPPS          equ	3603	;# 
  2912     0E14                     CCP1PPS         equ	3604	;# 
  2913     0E15                     CCP2PPS         equ	3605	;# 
  2914     0E16                     CCP3PPS         equ	3606	;# 
  2915     0E17                     CCP4PPS         equ	3607	;# 
  2916     0E18                     CWG1PPS         equ	3608	;# 
  2917     0E19                     CWG2PPS         equ	3609	;# 
  2918     0E1A                     MDCIN1PPS       equ	3610	;# 
  2919     0E1B                     MDCIN2PPS       equ	3611	;# 
  2920     0E1C                     MDMINPPS        equ	3612	;# 
  2921     0E1D                     SSP2CLKPPS      equ	3613	;# 
  2922     0E1E                     SSP2DATPPS      equ	3614	;# 
  2923     0E1F                     SSP2SSPPS       equ	3615	;# 
  2924     0E20                     SSP1CLKPPS      equ	3616	;# 
  2925     0E21                     SSP1DATPPS      equ	3617	;# 
  2926     0E22                     SSP1SSPPS       equ	3618	;# 
  2927     0E24                     RXPPS           equ	3620	;# 
  2928     0E25                     TXPPS           equ	3621	;# 
  2929     0E28                     CLCIN0PPS       equ	3624	;# 
  2930     0E29                     CLCIN1PPS       equ	3625	;# 
  2931     0E2A                     CLCIN2PPS       equ	3626	;# 
  2932     0E2B                     CLCIN3PPS       equ	3627	;# 
  2933     0E2C                     T3CKIPPS        equ	3628	;# 
  2934     0E2D                     T3GPPS          equ	3629	;# 
  2935     0E2E                     T5CKIPPS        equ	3630	;# 
  2936     0E2F                     T5GPPS          equ	3631	;# 
  2937     0E90                     RA0PPS          equ	3728	;# 
  2938     0E91                     RA1PPS          equ	3729	;# 
  2939     0E92                     RA2PPS          equ	3730	;# 
  2940     0E94                     RA4PPS          equ	3732	;# 
  2941     0E95                     RA5PPS          equ	3733	;# 
  2942     0E9C                     RB4PPS          equ	3740	;# 
  2943     0E9D                     RB5PPS          equ	3741	;# 
  2944     0E9E                     RB6PPS          equ	3742	;# 
  2945     0E9F                     RB7PPS          equ	3743	;# 
  2946     0EA0                     RC0PPS          equ	3744	;# 
  2947     0EA1                     RC1PPS          equ	3745	;# 
  2948     0EA2                     RC2PPS          equ	3746	;# 
  2949     0EA3                     RC3PPS          equ	3747	;# 
  2950     0EA4                     RC4PPS          equ	3748	;# 
  2951     0EA5                     RC5PPS          equ	3749	;# 
  2952     0EA6                     RC6PPS          equ	3750	;# 
  2953     0EA7                     RC7PPS          equ	3751	;# 
  2954     0F0F                     CLCDATA         equ	3855	;# 
  2955     0F10                     CLC1CON         equ	3856	;# 
  2956     0F11                     CLC1POL         equ	3857	;# 
  2957     0F12                     CLC1SEL0        equ	3858	;# 
  2958     0F13                     CLC1SEL1        equ	3859	;# 
  2959     0F14                     CLC1SEL2        equ	3860	;# 
  2960     0F15                     CLC1SEL3        equ	3861	;# 
  2961     0F16                     CLC1GLS0        equ	3862	;# 
  2962     0F17                     CLC1GLS1        equ	3863	;# 
  2963     0F18                     CLC1GLS2        equ	3864	;# 
  2964     0F19                     CLC1GLS3        equ	3865	;# 
  2965     0F1A                     CLC2CON         equ	3866	;# 
  2966     0F1B                     CLC2POL         equ	3867	;# 
  2967     0F1C                     CLC2SEL0        equ	3868	;# 
  2968     0F1D                     CLC2SEL1        equ	3869	;# 
  2969     0F1E                     CLC2SEL2        equ	3870	;# 
  2970     0F1F                     CLC2SEL3        equ	3871	;# 
  2971     0F20                     CLC2GLS0        equ	3872	;# 
  2972     0F21                     CLC2GLS1        equ	3873	;# 
  2973     0F22                     CLC2GLS2        equ	3874	;# 
  2974     0F23                     CLC2GLS3        equ	3875	;# 
  2975     0F24                     CLC3CON         equ	3876	;# 
  2976     0F25                     CLC3POL         equ	3877	;# 
  2977     0F26                     CLC3SEL0        equ	3878	;# 
  2978     0F27                     CLC3SEL1        equ	3879	;# 
  2979     0F28                     CLC3SEL2        equ	3880	;# 
  2980     0F29                     CLC3SEL3        equ	3881	;# 
  2981     0F2A                     CLC3GLS0        equ	3882	;# 
  2982     0F2B                     CLC3GLS1        equ	3883	;# 
  2983     0F2C                     CLC3GLS2        equ	3884	;# 
  2984     0F2D                     CLC3GLS3        equ	3885	;# 
  2985     0F2E                     CLC4CON         equ	3886	;# 
  2986     0F2F                     CLC4POL         equ	3887	;# 
  2987     0F30                     CLC4SEL0        equ	3888	;# 
  2988     0F31                     CLC4SEL1        equ	3889	;# 
  2989     0F32                     CLC4SEL2        equ	3890	;# 
  2990     0F33                     CLC4SEL3        equ	3891	;# 
  2991     0F34                     CLC4GLS0        equ	3892	;# 
  2992     0F35                     CLC4GLS1        equ	3893	;# 
  2993     0F36                     CLC4GLS2        equ	3894	;# 
  2994     0F37                     CLC4GLS3        equ	3895	;# 
  2995     0FE4                     STATUS_SHAD     equ	4068	;# 
  2996     0FE5                     WREG_SHAD       equ	4069	;# 
  2997     0FE6                     BSR_SHAD        equ	4070	;# 
  2998     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2999     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3000     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3001     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3002     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3003     0FED                     STKPTR          equ	4077	;# 
  3004     0FEE                     TOSL            equ	4078	;# 
  3005     0FEF                     TOSH            equ	4079	;# 
  3006     0000                     INDF0           equ	0	;# 
  3007     0001                     INDF1           equ	1	;# 
  3008     0002                     PCL             equ	2	;# 
  3009     0003                     STATUS          equ	3	;# 
  3010     0004                     FSR0L           equ	4	;# 
  3011     0005                     FSR0H           equ	5	;# 
  3012     0006                     FSR1L           equ	6	;# 
  3013     0007                     FSR1H           equ	7	;# 
  3014     0008                     BSR             equ	8	;# 
  3015     0009                     WREG            equ	9	;# 
  3016     000A                     PCLATH          equ	10	;# 
  3017     000B                     INTCON          equ	11	;# 
  3018     000C                     PORTA           equ	12	;# 
  3019     000D                     PORTB           equ	13	;# 
  3020     000E                     PORTC           equ	14	;# 
  3021     0010                     PIR0            equ	16	;# 
  3022     0011                     PIR1            equ	17	;# 
  3023     0012                     PIR2            equ	18	;# 
  3024     0013                     PIR3            equ	19	;# 
  3025     0014                     PIR4            equ	20	;# 
  3026     0015                     TMR0L           equ	21	;# 
  3027     0015                     TMR0            equ	21	;# 
  3028     0016                     TMR0H           equ	22	;# 
  3029     0016                     PR0             equ	22	;# 
  3030     0017                     T0CON0          equ	23	;# 
  3031     0018                     T0CON1          equ	24	;# 
  3032     0019                     TMR1            equ	25	;# 
  3033     0019                     TMR1L           equ	25	;# 
  3034     001A                     TMR1H           equ	26	;# 
  3035     001B                     T1CON           equ	27	;# 
  3036     001C                     T1GCON          equ	28	;# 
  3037     001D                     TMR2            equ	29	;# 
  3038     001E                     PR2             equ	30	;# 
  3039     001F                     T2CON           equ	31	;# 
  3040     008C                     TRISA           equ	140	;# 
  3041     008D                     TRISB           equ	141	;# 
  3042     008E                     TRISC           equ	142	;# 
  3043     0090                     PIE0            equ	144	;# 
  3044     0091                     PIE1            equ	145	;# 
  3045     0092                     PIE2            equ	146	;# 
  3046     0093                     PIE3            equ	147	;# 
  3047     0094                     PIE4            equ	148	;# 
  3048     0097                     WDTCON          equ	151	;# 
  3049     009B                     ADRES           equ	155	;# 
  3050     009B                     ADRESL          equ	155	;# 
  3051     009C                     ADRESH          equ	156	;# 
  3052     009D                     ADCON0          equ	157	;# 
  3053     009E                     ADCON1          equ	158	;# 
  3054     009F                     ADACT           equ	159	;# 
  3055     010C                     LATA            equ	268	;# 
  3056     010D                     LATB            equ	269	;# 
  3057     010E                     LATC            equ	270	;# 
  3058     0111                     CM1CON0         equ	273	;# 
  3059     0112                     CM1CON1         equ	274	;# 
  3060     0113                     CM2CON0         equ	275	;# 
  3061     0114                     CM2CON1         equ	276	;# 
  3062     0115                     CMOUT           equ	277	;# 
  3063     0116                     BORCON          equ	278	;# 
  3064     0117                     FVRCON          equ	279	;# 
  3065     0118                     DACCON0         equ	280	;# 
  3066     0119                     DACCON1         equ	281	;# 
  3067     018C                     ANSELA          equ	396	;# 
  3068     018D                     ANSELB          equ	397	;# 
  3069     018E                     ANSELC          equ	398	;# 
  3070     0197                     VREGCON         equ	407	;# 
  3071     0199                     RC1REG          equ	409	;# 
  3072     0199                     RCREG           equ	409	;# 
  3073     0199                     RCREG1          equ	409	;# 
  3074     019A                     TX1REG          equ	410	;# 
  3075     019A                     TXREG1          equ	410	;# 
  3076     019A                     TXREG           equ	410	;# 
  3077     019B                     SP1BRG          equ	411	;# 
  3078     019B                     SPBRG           equ	411	;# 
  3079     019B                     SP1BRGL         equ	411	;# 
  3080     019B                     SPBRG1          equ	411	;# 
  3081     019B                     SPBRGL          equ	411	;# 
  3082     019C                     SP1BRGH         equ	412	;# 
  3083     019C                     SPBRGH          equ	412	;# 
  3084     019C                     SPBRGH1         equ	412	;# 
  3085     019D                     RC1STA          equ	413	;# 
  3086     019D                     RCSTA1          equ	413	;# 
  3087     019D                     RCSTA           equ	413	;# 
  3088     019E                     TX1STA          equ	414	;# 
  3089     019E                     TXSTA1          equ	414	;# 
  3090     019E                     TXSTA           equ	414	;# 
  3091     019F                     BAUD1CON        equ	415	;# 
  3092     019F                     BAUDCON1        equ	415	;# 
  3093     019F                     BAUDCTL1        equ	415	;# 
  3094     019F                     BAUDCON         equ	415	;# 
  3095     019F                     BAUDCTL         equ	415	;# 
  3096     020C                     WPUA            equ	524	;# 
  3097     020D                     WPUB            equ	525	;# 
  3098     020E                     WPUC            equ	526	;# 
  3099     0211                     SSP1BUF         equ	529	;# 
  3100     0211                     SSPBUF          equ	529	;# 
  3101     0212                     SSP1ADD         equ	530	;# 
  3102     0212                     SSPADD          equ	530	;# 
  3103     0213                     SSP1MSK         equ	531	;# 
  3104     0213                     SSPMSK          equ	531	;# 
  3105     0214                     SSP1STAT        equ	532	;# 
  3106     0214                     SSPSTAT         equ	532	;# 
  3107     0215                     SSP1CON1        equ	533	;# 
  3108     0215                     SSPCON          equ	533	;# 
  3109     0215                     SSPCON1         equ	533	;# 
  3110     0215                     SSP1CON         equ	533	;# 
  3111     0216                     SSP1CON2        equ	534	;# 
  3112     0216                     SSPCON2         equ	534	;# 
  3113     0217                     SSP1CON3        equ	535	;# 
  3114     0217                     SSPCON3         equ	535	;# 
  3115     0219                     SSP2BUF         equ	537	;# 
  3116     021A                     SSP2ADD         equ	538	;# 
  3117     021B                     SSP2MSK         equ	539	;# 
  3118     021C                     SSP2STAT        equ	540	;# 
  3119     021D                     SSP2CON1        equ	541	;# 
  3120     021D                     SSP2CON         equ	541	;# 
  3121     021E                     SSP2CON2        equ	542	;# 
  3122     021F                     SSP2CON3        equ	543	;# 
  3123     028C                     ODCONA          equ	652	;# 
  3124     028D                     ODCONB          equ	653	;# 
  3125     028E                     ODCONC          equ	654	;# 
  3126     0291                     CCPR1           equ	657	;# 
  3127     0291                     CCPR1L          equ	657	;# 
  3128     0292                     CCPR1H          equ	658	;# 
  3129     0293                     CCP1CON         equ	659	;# 
  3130     0294                     CCP1CAP         equ	660	;# 
  3131     0295                     CCPR2           equ	661	;# 
  3132     0295                     CCPR2L          equ	661	;# 
  3133     0296                     CCPR2H          equ	662	;# 
  3134     0297                     CCP2CON         equ	663	;# 
  3135     0298                     CCP2CAP         equ	664	;# 
  3136     029F                     CCPTMRS         equ	671	;# 
  3137     030C                     SLRCONA         equ	780	;# 
  3138     030D                     SLRCONB         equ	781	;# 
  3139     030E                     SLRCONC         equ	782	;# 
  3140     0311                     CCPR3           equ	785	;# 
  3141     0311                     CCPR3L          equ	785	;# 
  3142     0312                     CCPR3H          equ	786	;# 
  3143     0313                     CCP3CON         equ	787	;# 
  3144     0314                     CCP3CAP         equ	788	;# 
  3145     0315                     CCPR4           equ	789	;# 
  3146     0315                     CCPR4L          equ	789	;# 
  3147     0316                     CCPR4H          equ	790	;# 
  3148     0317                     CCP4CON         equ	791	;# 
  3149     0318                     CCP4CAP         equ	792	;# 
  3150     038C                     INLVLA          equ	908	;# 
  3151     038D                     INLVLB          equ	909	;# 
  3152     038E                     INLVLC          equ	910	;# 
  3153     0391                     IOCAP           equ	913	;# 
  3154     0392                     IOCAN           equ	914	;# 
  3155     0393                     IOCAF           equ	915	;# 
  3156     0394                     IOCBP           equ	916	;# 
  3157     0395                     IOCBN           equ	917	;# 
  3158     0396                     IOCBF           equ	918	;# 
  3159     0397                     IOCCP           equ	919	;# 
  3160     0398                     IOCCN           equ	920	;# 
  3161     0399                     IOCCF           equ	921	;# 
  3162     039A                     CLKRCON         equ	922	;# 
  3163     039C                     MDCON           equ	924	;# 
  3164     039D                     MDSRC           equ	925	;# 
  3165     039E                     MDCARH          equ	926	;# 
  3166     039F                     MDCARL          equ	927	;# 
  3167     0411                     TMR3            equ	1041	;# 
  3168     0411                     TMR3L           equ	1041	;# 
  3169     0412                     TMR3H           equ	1042	;# 
  3170     0413                     T3CON           equ	1043	;# 
  3171     0414                     T3GCON          equ	1044	;# 
  3172     0415                     TMR4            equ	1045	;# 
  3173     0416                     PR4             equ	1046	;# 
  3174     0417                     T4CON           equ	1047	;# 
  3175     0418                     TMR5            equ	1048	;# 
  3176     0418                     TMR5L           equ	1048	;# 
  3177     0419                     TMR5H           equ	1049	;# 
  3178     041A                     T5CON           equ	1050	;# 
  3179     041B                     T5GCON          equ	1051	;# 
  3180     041C                     TMR6            equ	1052	;# 
  3181     041D                     PR6             equ	1053	;# 
  3182     041E                     T6CON           equ	1054	;# 
  3183     041F                     CCDCON          equ	1055	;# 
  3184     0498                     NCO1ACC         equ	1176	;# 
  3185     0498                     NCO1ACCL        equ	1176	;# 
  3186     0499                     NCO1ACCH        equ	1177	;# 
  3187     049A                     NCO1ACCU        equ	1178	;# 
  3188     049B                     NCO1INC         equ	1179	;# 
  3189     049B                     NCO1INCL        equ	1179	;# 
  3190     049C                     NCO1INCH        equ	1180	;# 
  3191     049D                     NCO1INCU        equ	1181	;# 
  3192     049E                     NCO1CON         equ	1182	;# 
  3193     049F                     NCO1CLK         equ	1183	;# 
  3194     0617                     PWM5DCL         equ	1559	;# 
  3195     0618                     PWM5DCH         equ	1560	;# 
  3196     0619                     PWM5CON         equ	1561	;# 
  3197     0619                     PWM5CON0        equ	1561	;# 
  3198     061A                     PWM6DCL         equ	1562	;# 
  3199     061B                     PWM6DCH         equ	1563	;# 
  3200     061C                     PWM6CON         equ	1564	;# 
  3201     061C                     PWM6CON0        equ	1564	;# 
  3202     061F                     PWMTMRS         equ	1567	;# 
  3203     0691                     CWG1CLKCON      equ	1681	;# 
  3204     0692                     CWG1DAT         equ	1682	;# 
  3205     0693                     CWG1DBR         equ	1683	;# 
  3206     0694                     CWG1DBF         equ	1684	;# 
  3207     0695                     CWG1CON0        equ	1685	;# 
  3208     0696                     CWG1CON1        equ	1686	;# 
  3209     0697                     CWG1AS0         equ	1687	;# 
  3210     0698                     CWG1AS1         equ	1688	;# 
  3211     0699                     CWG1STR         equ	1689	;# 
  3212     0711                     CWG2CLKCON      equ	1809	;# 
  3213     0712                     CWG2DAT         equ	1810	;# 
  3214     0713                     CWG2DBR         equ	1811	;# 
  3215     0714                     CWG2DBF         equ	1812	;# 
  3216     0715                     CWG2CON0        equ	1813	;# 
  3217     0716                     CWG2CON1        equ	1814	;# 
  3218     0717                     CWG2AS0         equ	1815	;# 
  3219     0718                     CWG2AS1         equ	1816	;# 
  3220     0719                     CWG2STR         equ	1817	;# 
  3221     0891                     NVMADR          equ	2193	;# 
  3222     0891                     EEADR           equ	2193	;# 
  3223     0891                     PMADR           equ	2193	;# 
  3224     0891                     NVMADRL         equ	2193	;# 
  3225     0891                     EEADRL          equ	2193	;# 
  3226     0891                     PMADRL          equ	2193	;# 
  3227     0892                     NVMADRH         equ	2194	;# 
  3228     0892                     EEADRH          equ	2194	;# 
  3229     0892                     PMADRH          equ	2194	;# 
  3230     0893                     NVMDAT          equ	2195	;# 
  3231     0893                     EEDAT           equ	2195	;# 
  3232     0893                     PMDAT           equ	2195	;# 
  3233     0893                     NVMDATL         equ	2195	;# 
  3234     0893                     EEDATL          equ	2195	;# 
  3235     0893                     PMDATL          equ	2195	;# 
  3236     0894                     NVMDATH         equ	2196	;# 
  3237     0894                     EEDATH          equ	2196	;# 
  3238     0894                     PMDATH          equ	2196	;# 
  3239     0895                     NVMCON1         equ	2197	;# 
  3240     0895                     EECON1          equ	2197	;# 
  3241     0895                     PMCON1          equ	2197	;# 
  3242     0896                     NVMCON2         equ	2198	;# 
  3243     0896                     EECON2          equ	2198	;# 
  3244     0896                     PMCON2          equ	2198	;# 
  3245     089B                     PCON0           equ	2203	;# 
  3246     0911                     PMD0            equ	2321	;# 
  3247     0912                     PMD1            equ	2322	;# 
  3248     0913                     PMD2            equ	2323	;# 
  3249     0914                     PMD3            equ	2324	;# 
  3250     0915                     PMD4            equ	2325	;# 
  3251     0916                     PMD5            equ	2326	;# 
  3252     0918                     CPUDOZE         equ	2328	;# 
  3253     0919                     OSCCON1         equ	2329	;# 
  3254     091A                     OSCCON2         equ	2330	;# 
  3255     091B                     OSCCON3         equ	2331	;# 
  3256     091C                     OSCSTAT1        equ	2332	;# 
  3257     091D                     OSCEN           equ	2333	;# 
  3258     091E                     OSCTUNE         equ	2334	;# 
  3259     091F                     OSCFRQ          equ	2335	;# 
  3260     0E0F                     PPSLOCK         equ	3599	;# 
  3261     0E10                     INTPPS          equ	3600	;# 
  3262     0E11                     T0CKIPPS        equ	3601	;# 
  3263     0E12                     T1CKIPPS        equ	3602	;# 
  3264     0E13                     T1GPPS          equ	3603	;# 
  3265     0E14                     CCP1PPS         equ	3604	;# 
  3266     0E15                     CCP2PPS         equ	3605	;# 
  3267     0E16                     CCP3PPS         equ	3606	;# 
  3268     0E17                     CCP4PPS         equ	3607	;# 
  3269     0E18                     CWG1PPS         equ	3608	;# 
  3270     0E19                     CWG2PPS         equ	3609	;# 
  3271     0E1A                     MDCIN1PPS       equ	3610	;# 
  3272     0E1B                     MDCIN2PPS       equ	3611	;# 
  3273     0E1C                     MDMINPPS        equ	3612	;# 
  3274     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3275     0E1E                     SSP2DATPPS      equ	3614	;# 
  3276     0E1F                     SSP2SSPPS       equ	3615	;# 
  3277     0E20                     SSP1CLKPPS      equ	3616	;# 
  3278     0E21                     SSP1DATPPS      equ	3617	;# 
  3279     0E22                     SSP1SSPPS       equ	3618	;# 
  3280     0E24                     RXPPS           equ	3620	;# 
  3281     0E25                     TXPPS           equ	3621	;# 
  3282     0E28                     CLCIN0PPS       equ	3624	;# 
  3283     0E29                     CLCIN1PPS       equ	3625	;# 
  3284     0E2A                     CLCIN2PPS       equ	3626	;# 
  3285     0E2B                     CLCIN3PPS       equ	3627	;# 
  3286     0E2C                     T3CKIPPS        equ	3628	;# 
  3287     0E2D                     T3GPPS          equ	3629	;# 
  3288     0E2E                     T5CKIPPS        equ	3630	;# 
  3289     0E2F                     T5GPPS          equ	3631	;# 
  3290     0E90                     RA0PPS          equ	3728	;# 
  3291     0E91                     RA1PPS          equ	3729	;# 
  3292     0E92                     RA2PPS          equ	3730	;# 
  3293     0E94                     RA4PPS          equ	3732	;# 
  3294     0E95                     RA5PPS          equ	3733	;# 
  3295     0E9C                     RB4PPS          equ	3740	;# 
  3296     0E9D                     RB5PPS          equ	3741	;# 
  3297     0E9E                     RB6PPS          equ	3742	;# 
  3298     0E9F                     RB7PPS          equ	3743	;# 
  3299     0EA0                     RC0PPS          equ	3744	;# 
  3300     0EA1                     RC1PPS          equ	3745	;# 
  3301     0EA2                     RC2PPS          equ	3746	;# 
  3302     0EA3                     RC3PPS          equ	3747	;# 
  3303     0EA4                     RC4PPS          equ	3748	;# 
  3304     0EA5                     RC5PPS          equ	3749	;# 
  3305     0EA6                     RC6PPS          equ	3750	;# 
  3306     0EA7                     RC7PPS          equ	3751	;# 
  3307     0F0F                     CLCDATA         equ	3855	;# 
  3308     0F10                     CLC1CON         equ	3856	;# 
  3309     0F11                     CLC1POL         equ	3857	;# 
  3310     0F12                     CLC1SEL0        equ	3858	;# 
  3311     0F13                     CLC1SEL1        equ	3859	;# 
  3312     0F14                     CLC1SEL2        equ	3860	;# 
  3313     0F15                     CLC1SEL3        equ	3861	;# 
  3314     0F16                     CLC1GLS0        equ	3862	;# 
  3315     0F17                     CLC1GLS1        equ	3863	;# 
  3316     0F18                     CLC1GLS2        equ	3864	;# 
  3317     0F19                     CLC1GLS3        equ	3865	;# 
  3318     0F1A                     CLC2CON         equ	3866	;# 
  3319     0F1B                     CLC2POL         equ	3867	;# 
  3320     0F1C                     CLC2SEL0        equ	3868	;# 
  3321     0F1D                     CLC2SEL1        equ	3869	;# 
  3322     0F1E                     CLC2SEL2        equ	3870	;# 
  3323     0F1F                     CLC2SEL3        equ	3871	;# 
  3324     0F20                     CLC2GLS0        equ	3872	;# 
  3325     0F21                     CLC2GLS1        equ	3873	;# 
  3326     0F22                     CLC2GLS2        equ	3874	;# 
  3327     0F23                     CLC2GLS3        equ	3875	;# 
  3328     0F24                     CLC3CON         equ	3876	;# 
  3329     0F25                     CLC3POL         equ	3877	;# 
  3330     0F26                     CLC3SEL0        equ	3878	;# 
  3331     0F27                     CLC3SEL1        equ	3879	;# 
  3332     0F28                     CLC3SEL2        equ	3880	;# 
  3333     0F29                     CLC3SEL3        equ	3881	;# 
  3334     0F2A                     CLC3GLS0        equ	3882	;# 
  3335     0F2B                     CLC3GLS1        equ	3883	;# 
  3336     0F2C                     CLC3GLS2        equ	3884	;# 
  3337     0F2D                     CLC3GLS3        equ	3885	;# 
  3338     0F2E                     CLC4CON         equ	3886	;# 
  3339     0F2F                     CLC4POL         equ	3887	;# 
  3340     0F30                     CLC4SEL0        equ	3888	;# 
  3341     0F31                     CLC4SEL1        equ	3889	;# 
  3342     0F32                     CLC4SEL2        equ	3890	;# 
  3343     0F33                     CLC4SEL3        equ	3891	;# 
  3344     0F34                     CLC4GLS0        equ	3892	;# 
  3345     0F35                     CLC4GLS1        equ	3893	;# 
  3346     0F36                     CLC4GLS2        equ	3894	;# 
  3347     0F37                     CLC4GLS3        equ	3895	;# 
  3348     0FE4                     STATUS_SHAD     equ	4068	;# 
  3349     0FE5                     WREG_SHAD       equ	4069	;# 
  3350     0FE6                     BSR_SHAD        equ	4070	;# 
  3351     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3352     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3353     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3354     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3355     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3356     0FED                     STKPTR          equ	4077	;# 
  3357     0FEE                     TOSL            equ	4078	;# 
  3358     0FEF                     TOSH            equ	4079	;# 
  3359     0000                     INDF0           equ	0	;# 
  3360     0001                     INDF1           equ	1	;# 
  3361     0002                     PCL             equ	2	;# 
  3362     0003                     STATUS          equ	3	;# 
  3363     0004                     FSR0L           equ	4	;# 
  3364     0005                     FSR0H           equ	5	;# 
  3365     0006                     FSR1L           equ	6	;# 
  3366     0007                     FSR1H           equ	7	;# 
  3367     0008                     BSR             equ	8	;# 
  3368     0009                     WREG            equ	9	;# 
  3369     000A                     PCLATH          equ	10	;# 
  3370     000B                     INTCON          equ	11	;# 
  3371     000C                     PORTA           equ	12	;# 
  3372     000D                     PORTB           equ	13	;# 
  3373     000E                     PORTC           equ	14	;# 
  3374     0010                     PIR0            equ	16	;# 
  3375     0011                     PIR1            equ	17	;# 
  3376     0012                     PIR2            equ	18	;# 
  3377     0013                     PIR3            equ	19	;# 
  3378     0014                     PIR4            equ	20	;# 
  3379     0015                     TMR0L           equ	21	;# 
  3380     0015                     TMR0            equ	21	;# 
  3381     0016                     TMR0H           equ	22	;# 
  3382     0016                     PR0             equ	22	;# 
  3383     0017                     T0CON0          equ	23	;# 
  3384     0018                     T0CON1          equ	24	;# 
  3385     0019                     TMR1            equ	25	;# 
  3386     0019                     TMR1L           equ	25	;# 
  3387     001A                     TMR1H           equ	26	;# 
  3388     001B                     T1CON           equ	27	;# 
  3389     001C                     T1GCON          equ	28	;# 
  3390     001D                     TMR2            equ	29	;# 
  3391     001E                     PR2             equ	30	;# 
  3392     001F                     T2CON           equ	31	;# 
  3393     008C                     TRISA           equ	140	;# 
  3394     008D                     TRISB           equ	141	;# 
  3395     008E                     TRISC           equ	142	;# 
  3396     0090                     PIE0            equ	144	;# 
  3397     0091                     PIE1            equ	145	;# 
  3398     0092                     PIE2            equ	146	;# 
  3399     0093                     PIE3            equ	147	;# 
  3400     0094                     PIE4            equ	148	;# 
  3401     0097                     WDTCON          equ	151	;# 
  3402     009B                     ADRES           equ	155	;# 
  3403     009B                     ADRESL          equ	155	;# 
  3404     009C                     ADRESH          equ	156	;# 
  3405     009D                     ADCON0          equ	157	;# 
  3406     009E                     ADCON1          equ	158	;# 
  3407     009F                     ADACT           equ	159	;# 
  3408     010C                     LATA            equ	268	;# 
  3409     010D                     LATB            equ	269	;# 
  3410     010E                     LATC            equ	270	;# 
  3411     0111                     CM1CON0         equ	273	;# 
  3412     0112                     CM1CON1         equ	274	;# 
  3413     0113                     CM2CON0         equ	275	;# 
  3414     0114                     CM2CON1         equ	276	;# 
  3415     0115                     CMOUT           equ	277	;# 
  3416     0116                     BORCON          equ	278	;# 
  3417     0117                     FVRCON          equ	279	;# 
  3418     0118                     DACCON0         equ	280	;# 
  3419     0119                     DACCON1         equ	281	;# 
  3420     018C                     ANSELA          equ	396	;# 
  3421     018D                     ANSELB          equ	397	;# 
  3422     018E                     ANSELC          equ	398	;# 
  3423     0197                     VREGCON         equ	407	;# 
  3424     0199                     RC1REG          equ	409	;# 
  3425     0199                     RCREG           equ	409	;# 
  3426     0199                     RCREG1          equ	409	;# 
  3427     019A                     TX1REG          equ	410	;# 
  3428     019A                     TXREG1          equ	410	;# 
  3429     019A                     TXREG           equ	410	;# 
  3430     019B                     SP1BRG          equ	411	;# 
  3431     019B                     SPBRG           equ	411	;# 
  3432     019B                     SP1BRGL         equ	411	;# 
  3433     019B                     SPBRG1          equ	411	;# 
  3434     019B                     SPBRGL          equ	411	;# 
  3435     019C                     SP1BRGH         equ	412	;# 
  3436     019C                     SPBRGH          equ	412	;# 
  3437     019C                     SPBRGH1         equ	412	;# 
  3438     019D                     RC1STA          equ	413	;# 
  3439     019D                     RCSTA1          equ	413	;# 
  3440     019D                     RCSTA           equ	413	;# 
  3441     019E                     TX1STA          equ	414	;# 
  3442     019E                     TXSTA1          equ	414	;# 
  3443     019E                     TXSTA           equ	414	;# 
  3444     019F                     BAUD1CON        equ	415	;# 
  3445     019F                     BAUDCON1        equ	415	;# 
  3446     019F                     BAUDCTL1        equ	415	;# 
  3447     019F                     BAUDCON         equ	415	;# 
  3448     019F                     BAUDCTL         equ	415	;# 
  3449     020C                     WPUA            equ	524	;# 
  3450     020D                     WPUB            equ	525	;# 
  3451     020E                     WPUC            equ	526	;# 
  3452     0211                     SSP1BUF         equ	529	;# 
  3453     0211                     SSPBUF          equ	529	;# 
  3454     0212                     SSP1ADD         equ	530	;# 
  3455     0212                     SSPADD          equ	530	;# 
  3456     0213                     SSP1MSK         equ	531	;# 
  3457     0213                     SSPMSK          equ	531	;# 
  3458     0214                     SSP1STAT        equ	532	;# 
  3459     0214                     SSPSTAT         equ	532	;# 
  3460     0215                     SSP1CON1        equ	533	;# 
  3461     0215                     SSPCON          equ	533	;# 
  3462     0215                     SSPCON1         equ	533	;# 
  3463     0215                     SSP1CON         equ	533	;# 
  3464     0216                     SSP1CON2        equ	534	;# 
  3465     0216                     SSPCON2         equ	534	;# 
  3466     0217                     SSP1CON3        equ	535	;# 
  3467     0217                     SSPCON3         equ	535	;# 
  3468     0219                     SSP2BUF         equ	537	;# 
  3469     021A                     SSP2ADD         equ	538	;# 
  3470     021B                     SSP2MSK         equ	539	;# 
  3471     021C                     SSP2STAT        equ	540	;# 
  3472     021D                     SSP2CON1        equ	541	;# 
  3473     021D                     SSP2CON         equ	541	;# 
  3474     021E                     SSP2CON2        equ	542	;# 
  3475     021F                     SSP2CON3        equ	543	;# 
  3476     028C                     ODCONA          equ	652	;# 
  3477     028D                     ODCONB          equ	653	;# 
  3478     028E                     ODCONC          equ	654	;# 
  3479     0291                     CCPR1           equ	657	;# 
  3480     0291                     CCPR1L          equ	657	;# 
  3481     0292                     CCPR1H          equ	658	;# 
  3482     0293                     CCP1CON         equ	659	;# 
  3483     0294                     CCP1CAP         equ	660	;# 
  3484     0295                     CCPR2           equ	661	;# 
  3485     0295                     CCPR2L          equ	661	;# 
  3486     0296                     CCPR2H          equ	662	;# 
  3487     0297                     CCP2CON         equ	663	;# 
  3488     0298                     CCP2CAP         equ	664	;# 
  3489     029F                     CCPTMRS         equ	671	;# 
  3490     030C                     SLRCONA         equ	780	;# 
  3491     030D                     SLRCONB         equ	781	;# 
  3492     030E                     SLRCONC         equ	782	;# 
  3493     0311                     CCPR3           equ	785	;# 
  3494     0311                     CCPR3L          equ	785	;# 
  3495     0312                     CCPR3H          equ	786	;# 
  3496     0313                     CCP3CON         equ	787	;# 
  3497     0314                     CCP3CAP         equ	788	;# 
  3498     0315                     CCPR4           equ	789	;# 
  3499     0315                     CCPR4L          equ	789	;# 
  3500     0316                     CCPR4H          equ	790	;# 
  3501     0317                     CCP4CON         equ	791	;# 
  3502     0318                     CCP4CAP         equ	792	;# 
  3503     038C                     INLVLA          equ	908	;# 
  3504     038D                     INLVLB          equ	909	;# 
  3505     038E                     INLVLC          equ	910	;# 
  3506     0391                     IOCAP           equ	913	;# 
  3507     0392                     IOCAN           equ	914	;# 
  3508     0393                     IOCAF           equ	915	;# 
  3509     0394                     IOCBP           equ	916	;# 
  3510     0395                     IOCBN           equ	917	;# 
  3511     0396                     IOCBF           equ	918	;# 
  3512     0397                     IOCCP           equ	919	;# 
  3513     0398                     IOCCN           equ	920	;# 
  3514     0399                     IOCCF           equ	921	;# 
  3515     039A                     CLKRCON         equ	922	;# 
  3516     039C                     MDCON           equ	924	;# 
  3517     039D                     MDSRC           equ	925	;# 
  3518     039E                     MDCARH          equ	926	;# 
  3519     039F                     MDCARL          equ	927	;# 
  3520     0411                     TMR3            equ	1041	;# 
  3521     0411                     TMR3L           equ	1041	;# 
  3522     0412                     TMR3H           equ	1042	;# 
  3523     0413                     T3CON           equ	1043	;# 
  3524     0414                     T3GCON          equ	1044	;# 
  3525     0415                     TMR4            equ	1045	;# 
  3526     0416                     PR4             equ	1046	;# 
  3527     0417                     T4CON           equ	1047	;# 
  3528     0418                     TMR5            equ	1048	;# 
  3529     0418                     TMR5L           equ	1048	;# 
  3530     0419                     TMR5H           equ	1049	;# 
  3531     041A                     T5CON           equ	1050	;# 
  3532     041B                     T5GCON          equ	1051	;# 
  3533     041C                     TMR6            equ	1052	;# 
  3534     041D                     PR6             equ	1053	;# 
  3535     041E                     T6CON           equ	1054	;# 
  3536     041F                     CCDCON          equ	1055	;# 
  3537     0498                     NCO1ACC         equ	1176	;# 
  3538     0498                     NCO1ACCL        equ	1176	;# 
  3539     0499                     NCO1ACCH        equ	1177	;# 
  3540     049A                     NCO1ACCU        equ	1178	;# 
  3541     049B                     NCO1INC         equ	1179	;# 
  3542     049B                     NCO1INCL        equ	1179	;# 
  3543     049C                     NCO1INCH        equ	1180	;# 
  3544     049D                     NCO1INCU        equ	1181	;# 
  3545     049E                     NCO1CON         equ	1182	;# 
  3546     049F                     NCO1CLK         equ	1183	;# 
  3547     0617                     PWM5DCL         equ	1559	;# 
  3548     0618                     PWM5DCH         equ	1560	;# 
  3549     0619                     PWM5CON         equ	1561	;# 
  3550     0619                     PWM5CON0        equ	1561	;# 
  3551     061A                     PWM6DCL         equ	1562	;# 
  3552     061B                     PWM6DCH         equ	1563	;# 
  3553     061C                     PWM6CON         equ	1564	;# 
  3554     061C                     PWM6CON0        equ	1564	;# 
  3555     061F                     PWMTMRS         equ	1567	;# 
  3556     0691                     CWG1CLKCON      equ	1681	;# 
  3557     0692                     CWG1DAT         equ	1682	;# 
  3558     0693                     CWG1DBR         equ	1683	;# 
  3559     0694                     CWG1DBF         equ	1684	;# 
  3560     0695                     CWG1CON0        equ	1685	;# 
  3561     0696                     CWG1CON1        equ	1686	;# 
  3562     0697                     CWG1AS0         equ	1687	;# 
  3563     0698                     CWG1AS1         equ	1688	;# 
  3564     0699                     CWG1STR         equ	1689	;# 
  3565     0711                     CWG2CLKCON      equ	1809	;# 
  3566     0712                     CWG2DAT         equ	1810	;# 
  3567     0713                     CWG2DBR         equ	1811	;# 
  3568     0714                     CWG2DBF         equ	1812	;# 
  3569     0715                     CWG2CON0        equ	1813	;# 
  3570     0716                     CWG2CON1        equ	1814	;# 
  3571     0717                     CWG2AS0         equ	1815	;# 
  3572     0718                     CWG2AS1         equ	1816	;# 
  3573     0719                     CWG2STR         equ	1817	;# 
  3574     0891                     NVMADR          equ	2193	;# 
  3575     0891                     EEADR           equ	2193	;# 
  3576     0891                     PMADR           equ	2193	;# 
  3577     0891                     NVMADRL         equ	2193	;# 
  3578     0891                     EEADRL          equ	2193	;# 
  3579     0891                     PMADRL          equ	2193	;# 
  3580     0892                     NVMADRH         equ	2194	;# 
  3581     0892                     EEADRH          equ	2194	;# 
  3582     0892                     PMADRH          equ	2194	;# 
  3583     0893                     NVMDAT          equ	2195	;# 
  3584     0893                     EEDAT           equ	2195	;# 
  3585     0893                     PMDAT           equ	2195	;# 
  3586     0893                     NVMDATL         equ	2195	;# 
  3587     0893                     EEDATL          equ	2195	;# 
  3588     0893                     PMDATL          equ	2195	;# 
  3589     0894                     NVMDATH         equ	2196	;# 
  3590     0894                     EEDATH          equ	2196	;# 
  3591     0894                     PMDATH          equ	2196	;# 
  3592     0895                     NVMCON1         equ	2197	;# 
  3593     0895                     EECON1          equ	2197	;# 
  3594     0895                     PMCON1          equ	2197	;# 
  3595     0896                     NVMCON2         equ	2198	;# 
  3596     0896                     EECON2          equ	2198	;# 
  3597     0896                     PMCON2          equ	2198	;# 
  3598     089B                     PCON0           equ	2203	;# 
  3599     0911                     PMD0            equ	2321	;# 
  3600     0912                     PMD1            equ	2322	;# 
  3601     0913                     PMD2            equ	2323	;# 
  3602     0914                     PMD3            equ	2324	;# 
  3603     0915                     PMD4            equ	2325	;# 
  3604     0916                     PMD5            equ	2326	;# 
  3605     0918                     CPUDOZE         equ	2328	;# 
  3606     0919                     OSCCON1         equ	2329	;# 
  3607     091A                     OSCCON2         equ	2330	;# 
  3608     091B                     OSCCON3         equ	2331	;# 
  3609     091C                     OSCSTAT1        equ	2332	;# 
  3610     091D                     OSCEN           equ	2333	;# 
  3611     091E                     OSCTUNE         equ	2334	;# 
  3612     091F                     OSCFRQ          equ	2335	;# 
  3613     0E0F                     PPSLOCK         equ	3599	;# 
  3614     0E10                     INTPPS          equ	3600	;# 
  3615     0E11                     T0CKIPPS        equ	3601	;# 
  3616     0E12                     T1CKIPPS        equ	3602	;# 
  3617     0E13                     T1GPPS          equ	3603	;# 
  3618     0E14                     CCP1PPS         equ	3604	;# 
  3619     0E15                     CCP2PPS         equ	3605	;# 
  3620     0E16                     CCP3PPS         equ	3606	;# 
  3621     0E17                     CCP4PPS         equ	3607	;# 
  3622     0E18                     CWG1PPS         equ	3608	;# 
  3623     0E19                     CWG2PPS         equ	3609	;# 
  3624     0E1A                     MDCIN1PPS       equ	3610	;# 
  3625     0E1B                     MDCIN2PPS       equ	3611	;# 
  3626     0E1C                     MDMINPPS        equ	3612	;# 
  3627     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3628     0E1E                     SSP2DATPPS      equ	3614	;# 
  3629     0E1F                     SSP2SSPPS       equ	3615	;# 
  3630     0E20                     SSP1CLKPPS      equ	3616	;# 
  3631     0E21                     SSP1DATPPS      equ	3617	;# 
  3632     0E22                     SSP1SSPPS       equ	3618	;# 
  3633     0E24                     RXPPS           equ	3620	;# 
  3634     0E25                     TXPPS           equ	3621	;# 
  3635     0E28                     CLCIN0PPS       equ	3624	;# 
  3636     0E29                     CLCIN1PPS       equ	3625	;# 
  3637     0E2A                     CLCIN2PPS       equ	3626	;# 
  3638     0E2B                     CLCIN3PPS       equ	3627	;# 
  3639     0E2C                     T3CKIPPS        equ	3628	;# 
  3640     0E2D                     T3GPPS          equ	3629	;# 
  3641     0E2E                     T5CKIPPS        equ	3630	;# 
  3642     0E2F                     T5GPPS          equ	3631	;# 
  3643     0E90                     RA0PPS          equ	3728	;# 
  3644     0E91                     RA1PPS          equ	3729	;# 
  3645     0E92                     RA2PPS          equ	3730	;# 
  3646     0E94                     RA4PPS          equ	3732	;# 
  3647     0E95                     RA5PPS          equ	3733	;# 
  3648     0E9C                     RB4PPS          equ	3740	;# 
  3649     0E9D                     RB5PPS          equ	3741	;# 
  3650     0E9E                     RB6PPS          equ	3742	;# 
  3651     0E9F                     RB7PPS          equ	3743	;# 
  3652     0EA0                     RC0PPS          equ	3744	;# 
  3653     0EA1                     RC1PPS          equ	3745	;# 
  3654     0EA2                     RC2PPS          equ	3746	;# 
  3655     0EA3                     RC3PPS          equ	3747	;# 
  3656     0EA4                     RC4PPS          equ	3748	;# 
  3657     0EA5                     RC5PPS          equ	3749	;# 
  3658     0EA6                     RC6PPS          equ	3750	;# 
  3659     0EA7                     RC7PPS          equ	3751	;# 
  3660     0F0F                     CLCDATA         equ	3855	;# 
  3661     0F10                     CLC1CON         equ	3856	;# 
  3662     0F11                     CLC1POL         equ	3857	;# 
  3663     0F12                     CLC1SEL0        equ	3858	;# 
  3664     0F13                     CLC1SEL1        equ	3859	;# 
  3665     0F14                     CLC1SEL2        equ	3860	;# 
  3666     0F15                     CLC1SEL3        equ	3861	;# 
  3667     0F16                     CLC1GLS0        equ	3862	;# 
  3668     0F17                     CLC1GLS1        equ	3863	;# 
  3669     0F18                     CLC1GLS2        equ	3864	;# 
  3670     0F19                     CLC1GLS3        equ	3865	;# 
  3671     0F1A                     CLC2CON         equ	3866	;# 
  3672     0F1B                     CLC2POL         equ	3867	;# 
  3673     0F1C                     CLC2SEL0        equ	3868	;# 
  3674     0F1D                     CLC2SEL1        equ	3869	;# 
  3675     0F1E                     CLC2SEL2        equ	3870	;# 
  3676     0F1F                     CLC2SEL3        equ	3871	;# 
  3677     0F20                     CLC2GLS0        equ	3872	;# 
  3678     0F21                     CLC2GLS1        equ	3873	;# 
  3679     0F22                     CLC2GLS2        equ	3874	;# 
  3680     0F23                     CLC2GLS3        equ	3875	;# 
  3681     0F24                     CLC3CON         equ	3876	;# 
  3682     0F25                     CLC3POL         equ	3877	;# 
  3683     0F26                     CLC3SEL0        equ	3878	;# 
  3684     0F27                     CLC3SEL1        equ	3879	;# 
  3685     0F28                     CLC3SEL2        equ	3880	;# 
  3686     0F29                     CLC3SEL3        equ	3881	;# 
  3687     0F2A                     CLC3GLS0        equ	3882	;# 
  3688     0F2B                     CLC3GLS1        equ	3883	;# 
  3689     0F2C                     CLC3GLS2        equ	3884	;# 
  3690     0F2D                     CLC3GLS3        equ	3885	;# 
  3691     0F2E                     CLC4CON         equ	3886	;# 
  3692     0F2F                     CLC4POL         equ	3887	;# 
  3693     0F30                     CLC4SEL0        equ	3888	;# 
  3694     0F31                     CLC4SEL1        equ	3889	;# 
  3695     0F32                     CLC4SEL2        equ	3890	;# 
  3696     0F33                     CLC4SEL3        equ	3891	;# 
  3697     0F34                     CLC4GLS0        equ	3892	;# 
  3698     0F35                     CLC4GLS1        equ	3893	;# 
  3699     0F36                     CLC4GLS2        equ	3894	;# 
  3700     0F37                     CLC4GLS3        equ	3895	;# 
  3701     0FE4                     STATUS_SHAD     equ	4068	;# 
  3702     0FE5                     WREG_SHAD       equ	4069	;# 
  3703     0FE6                     BSR_SHAD        equ	4070	;# 
  3704     0FE7                     PCLATH_SHAD     equ	4071	;# 
  3705     0FE8                     FSR0L_SHAD      equ	4072	;# 
  3706     0FE9                     FSR0H_SHAD      equ	4073	;# 
  3707     0FEA                     FSR1L_SHAD      equ	4074	;# 
  3708     0FEB                     FSR1H_SHAD      equ	4075	;# 
  3709     0FED                     STKPTR          equ	4077	;# 
  3710     0FEE                     TOSL            equ	4078	;# 
  3711     0FEF                     TOSH            equ	4079	;# 
  3712     0000                     INDF0           equ	0	;# 
  3713     0001                     INDF1           equ	1	;# 
  3714     0002                     PCL             equ	2	;# 
  3715     0003                     STATUS          equ	3	;# 
  3716     0004                     FSR0L           equ	4	;# 
  3717     0005                     FSR0H           equ	5	;# 
  3718     0006                     FSR1L           equ	6	;# 
  3719     0007                     FSR1H           equ	7	;# 
  3720     0008                     BSR             equ	8	;# 
  3721     0009                     WREG            equ	9	;# 
  3722     000A                     PCLATH          equ	10	;# 
  3723     000B                     INTCON          equ	11	;# 
  3724     000C                     PORTA           equ	12	;# 
  3725     000D                     PORTB           equ	13	;# 
  3726     000E                     PORTC           equ	14	;# 
  3727     0010                     PIR0            equ	16	;# 
  3728     0011                     PIR1            equ	17	;# 
  3729     0012                     PIR2            equ	18	;# 
  3730     0013                     PIR3            equ	19	;# 
  3731     0014                     PIR4            equ	20	;# 
  3732     0015                     TMR0L           equ	21	;# 
  3733     0015                     TMR0            equ	21	;# 
  3734     0016                     TMR0H           equ	22	;# 
  3735     0016                     PR0             equ	22	;# 
  3736     0017                     T0CON0          equ	23	;# 
  3737     0018                     T0CON1          equ	24	;# 
  3738     0019                     TMR1            equ	25	;# 
  3739     0019                     TMR1L           equ	25	;# 
  3740     001A                     TMR1H           equ	26	;# 
  3741     001B                     T1CON           equ	27	;# 
  3742     001C                     T1GCON          equ	28	;# 
  3743     001D                     TMR2            equ	29	;# 
  3744     001E                     PR2             equ	30	;# 
  3745     001F                     T2CON           equ	31	;# 
  3746     008C                     TRISA           equ	140	;# 
  3747     008D                     TRISB           equ	141	;# 
  3748     008E                     TRISC           equ	142	;# 
  3749     0090                     PIE0            equ	144	;# 
  3750     0091                     PIE1            equ	145	;# 
  3751     0092                     PIE2            equ	146	;# 
  3752     0093                     PIE3            equ	147	;# 
  3753     0094                     PIE4            equ	148	;# 
  3754     0097                     WDTCON          equ	151	;# 
  3755     009B                     ADRES           equ	155	;# 
  3756     009B                     ADRESL          equ	155	;# 
  3757     009C                     ADRESH          equ	156	;# 
  3758     009D                     ADCON0          equ	157	;# 
  3759     009E                     ADCON1          equ	158	;# 
  3760     009F                     ADACT           equ	159	;# 
  3761     010C                     LATA            equ	268	;# 
  3762     010D                     LATB            equ	269	;# 
  3763     010E                     LATC            equ	270	;# 
  3764     0111                     CM1CON0         equ	273	;# 
  3765     0112                     CM1CON1         equ	274	;# 
  3766     0113                     CM2CON0         equ	275	;# 
  3767     0114                     CM2CON1         equ	276	;# 
  3768     0115                     CMOUT           equ	277	;# 
  3769     0116                     BORCON          equ	278	;# 
  3770     0117                     FVRCON          equ	279	;# 
  3771     0118                     DACCON0         equ	280	;# 
  3772     0119                     DACCON1         equ	281	;# 
  3773     018C                     ANSELA          equ	396	;# 
  3774     018D                     ANSELB          equ	397	;# 
  3775     018E                     ANSELC          equ	398	;# 
  3776     0197                     VREGCON         equ	407	;# 
  3777     0199                     RC1REG          equ	409	;# 
  3778     0199                     RCREG           equ	409	;# 
  3779     0199                     RCREG1          equ	409	;# 
  3780     019A                     TX1REG          equ	410	;# 
  3781     019A                     TXREG1          equ	410	;# 
  3782     019A                     TXREG           equ	410	;# 
  3783     019B                     SP1BRG          equ	411	;# 
  3784     019B                     SPBRG           equ	411	;# 
  3785     019B                     SP1BRGL         equ	411	;# 
  3786     019B                     SPBRG1          equ	411	;# 
  3787     019B                     SPBRGL          equ	411	;# 
  3788     019C                     SP1BRGH         equ	412	;# 
  3789     019C                     SPBRGH          equ	412	;# 
  3790     019C                     SPBRGH1         equ	412	;# 
  3791     019D                     RC1STA          equ	413	;# 
  3792     019D                     RCSTA1          equ	413	;# 
  3793     019D                     RCSTA           equ	413	;# 
  3794     019E                     TX1STA          equ	414	;# 
  3795     019E                     TXSTA1          equ	414	;# 
  3796     019E                     TXSTA           equ	414	;# 
  3797     019F                     BAUD1CON        equ	415	;# 
  3798     019F                     BAUDCON1        equ	415	;# 
  3799     019F                     BAUDCTL1        equ	415	;# 
  3800     019F                     BAUDCON         equ	415	;# 
  3801     019F                     BAUDCTL         equ	415	;# 
  3802     020C                     WPUA            equ	524	;# 
  3803     020D                     WPUB            equ	525	;# 
  3804     020E                     WPUC            equ	526	;# 
  3805     0211                     SSP1BUF         equ	529	;# 
  3806     0211                     SSPBUF          equ	529	;# 
  3807     0212                     SSP1ADD         equ	530	;# 
  3808     0212                     SSPADD          equ	530	;# 
  3809     0213                     SSP1MSK         equ	531	;# 
  3810     0213                     SSPMSK          equ	531	;# 
  3811     0214                     SSP1STAT        equ	532	;# 
  3812     0214                     SSPSTAT         equ	532	;# 
  3813     0215                     SSP1CON1        equ	533	;# 
  3814     0215                     SSPCON          equ	533	;# 
  3815     0215                     SSPCON1         equ	533	;# 
  3816     0215                     SSP1CON         equ	533	;# 
  3817     0216                     SSP1CON2        equ	534	;# 
  3818     0216                     SSPCON2         equ	534	;# 
  3819     0217                     SSP1CON3        equ	535	;# 
  3820     0217                     SSPCON3         equ	535	;# 
  3821     0219                     SSP2BUF         equ	537	;# 
  3822     021A                     SSP2ADD         equ	538	;# 
  3823     021B                     SSP2MSK         equ	539	;# 
  3824     021C                     SSP2STAT        equ	540	;# 
  3825     021D                     SSP2CON1        equ	541	;# 
  3826     021D                     SSP2CON         equ	541	;# 
  3827     021E                     SSP2CON2        equ	542	;# 
  3828     021F                     SSP2CON3        equ	543	;# 
  3829     028C                     ODCONA          equ	652	;# 
  3830     028D                     ODCONB          equ	653	;# 
  3831     028E                     ODCONC          equ	654	;# 
  3832     0291                     CCPR1           equ	657	;# 
  3833     0291                     CCPR1L          equ	657	;# 
  3834     0292                     CCPR1H          equ	658	;# 
  3835     0293                     CCP1CON         equ	659	;# 
  3836     0294                     CCP1CAP         equ	660	;# 
  3837     0295                     CCPR2           equ	661	;# 
  3838     0295                     CCPR2L          equ	661	;# 
  3839     0296                     CCPR2H          equ	662	;# 
  3840     0297                     CCP2CON         equ	663	;# 
  3841     0298                     CCP2CAP         equ	664	;# 
  3842     029F                     CCPTMRS         equ	671	;# 
  3843     030C                     SLRCONA         equ	780	;# 
  3844     030D                     SLRCONB         equ	781	;# 
  3845     030E                     SLRCONC         equ	782	;# 
  3846     0311                     CCPR3           equ	785	;# 
  3847     0311                     CCPR3L          equ	785	;# 
  3848     0312                     CCPR3H          equ	786	;# 
  3849     0313                     CCP3CON         equ	787	;# 
  3850     0314                     CCP3CAP         equ	788	;# 
  3851     0315                     CCPR4           equ	789	;# 
  3852     0315                     CCPR4L          equ	789	;# 
  3853     0316                     CCPR4H          equ	790	;# 
  3854     0317                     CCP4CON         equ	791	;# 
  3855     0318                     CCP4CAP         equ	792	;# 
  3856     038C                     INLVLA          equ	908	;# 
  3857     038D                     INLVLB          equ	909	;# 
  3858     038E                     INLVLC          equ	910	;# 
  3859     0391                     IOCAP           equ	913	;# 
  3860     0392                     IOCAN           equ	914	;# 
  3861     0393                     IOCAF           equ	915	;# 
  3862     0394                     IOCBP           equ	916	;# 
  3863     0395                     IOCBN           equ	917	;# 
  3864     0396                     IOCBF           equ	918	;# 
  3865     0397                     IOCCP           equ	919	;# 
  3866     0398                     IOCCN           equ	920	;# 
  3867     0399                     IOCCF           equ	921	;# 
  3868     039A                     CLKRCON         equ	922	;# 
  3869     039C                     MDCON           equ	924	;# 
  3870     039D                     MDSRC           equ	925	;# 
  3871     039E                     MDCARH          equ	926	;# 
  3872     039F                     MDCARL          equ	927	;# 
  3873     0411                     TMR3            equ	1041	;# 
  3874     0411                     TMR3L           equ	1041	;# 
  3875     0412                     TMR3H           equ	1042	;# 
  3876     0413                     T3CON           equ	1043	;# 
  3877     0414                     T3GCON          equ	1044	;# 
  3878     0415                     TMR4            equ	1045	;# 
  3879     0416                     PR4             equ	1046	;# 
  3880     0417                     T4CON           equ	1047	;# 
  3881     0418                     TMR5            equ	1048	;# 
  3882     0418                     TMR5L           equ	1048	;# 
  3883     0419                     TMR5H           equ	1049	;# 
  3884     041A                     T5CON           equ	1050	;# 
  3885     041B                     T5GCON          equ	1051	;# 
  3886     041C                     TMR6            equ	1052	;# 
  3887     041D                     PR6             equ	1053	;# 
  3888     041E                     T6CON           equ	1054	;# 
  3889     041F                     CCDCON          equ	1055	;# 
  3890     0498                     NCO1ACC         equ	1176	;# 
  3891     0498                     NCO1ACCL        equ	1176	;# 
  3892     0499                     NCO1ACCH        equ	1177	;# 
  3893     049A                     NCO1ACCU        equ	1178	;# 
  3894     049B                     NCO1INC         equ	1179	;# 
  3895     049B                     NCO1INCL        equ	1179	;# 
  3896     049C                     NCO1INCH        equ	1180	;# 
  3897     049D                     NCO1INCU        equ	1181	;# 
  3898     049E                     NCO1CON         equ	1182	;# 
  3899     049F                     NCO1CLK         equ	1183	;# 
  3900     0617                     PWM5DCL         equ	1559	;# 
  3901     0618                     PWM5DCH         equ	1560	;# 
  3902     0619                     PWM5CON         equ	1561	;# 
  3903     0619                     PWM5CON0        equ	1561	;# 
  3904     061A                     PWM6DCL         equ	1562	;# 
  3905     061B                     PWM6DCH         equ	1563	;# 
  3906     061C                     PWM6CON         equ	1564	;# 
  3907     061C                     PWM6CON0        equ	1564	;# 
  3908     061F                     PWMTMRS         equ	1567	;# 
  3909     0691                     CWG1CLKCON      equ	1681	;# 
  3910     0692                     CWG1DAT         equ	1682	;# 
  3911     0693                     CWG1DBR         equ	1683	;# 
  3912     0694                     CWG1DBF         equ	1684	;# 
  3913     0695                     CWG1CON0        equ	1685	;# 
  3914     0696                     CWG1CON1        equ	1686	;# 
  3915     0697                     CWG1AS0         equ	1687	;# 
  3916     0698                     CWG1AS1         equ	1688	;# 
  3917     0699                     CWG1STR         equ	1689	;# 
  3918     0711                     CWG2CLKCON      equ	1809	;# 
  3919     0712                     CWG2DAT         equ	1810	;# 
  3920     0713                     CWG2DBR         equ	1811	;# 
  3921     0714                     CWG2DBF         equ	1812	;# 
  3922     0715                     CWG2CON0        equ	1813	;# 
  3923     0716                     CWG2CON1        equ	1814	;# 
  3924     0717                     CWG2AS0         equ	1815	;# 
  3925     0718                     CWG2AS1         equ	1816	;# 
  3926     0719                     CWG2STR         equ	1817	;# 
  3927     0891                     NVMADR          equ	2193	;# 
  3928     0891                     EEADR           equ	2193	;# 
  3929     0891                     PMADR           equ	2193	;# 
  3930     0891                     NVMADRL         equ	2193	;# 
  3931     0891                     EEADRL          equ	2193	;# 
  3932     0891                     PMADRL          equ	2193	;# 
  3933     0892                     NVMADRH         equ	2194	;# 
  3934     0892                     EEADRH          equ	2194	;# 
  3935     0892                     PMADRH          equ	2194	;# 
  3936     0893                     NVMDAT          equ	2195	;# 
  3937     0893                     EEDAT           equ	2195	;# 
  3938     0893                     PMDAT           equ	2195	;# 
  3939     0893                     NVMDATL         equ	2195	;# 
  3940     0893                     EEDATL          equ	2195	;# 
  3941     0893                     PMDATL          equ	2195	;# 
  3942     0894                     NVMDATH         equ	2196	;# 
  3943     0894                     EEDATH          equ	2196	;# 
  3944     0894                     PMDATH          equ	2196	;# 
  3945     0895                     NVMCON1         equ	2197	;# 
  3946     0895                     EECON1          equ	2197	;# 
  3947     0895                     PMCON1          equ	2197	;# 
  3948     0896                     NVMCON2         equ	2198	;# 
  3949     0896                     EECON2          equ	2198	;# 
  3950     0896                     PMCON2          equ	2198	;# 
  3951     089B                     PCON0           equ	2203	;# 
  3952     0911                     PMD0            equ	2321	;# 
  3953     0912                     PMD1            equ	2322	;# 
  3954     0913                     PMD2            equ	2323	;# 
  3955     0914                     PMD3            equ	2324	;# 
  3956     0915                     PMD4            equ	2325	;# 
  3957     0916                     PMD5            equ	2326	;# 
  3958     0918                     CPUDOZE         equ	2328	;# 
  3959     0919                     OSCCON1         equ	2329	;# 
  3960     091A                     OSCCON2         equ	2330	;# 
  3961     091B                     OSCCON3         equ	2331	;# 
  3962     091C                     OSCSTAT1        equ	2332	;# 
  3963     091D                     OSCEN           equ	2333	;# 
  3964     091E                     OSCTUNE         equ	2334	;# 
  3965     091F                     OSCFRQ          equ	2335	;# 
  3966     0E0F                     PPSLOCK         equ	3599	;# 
  3967     0E10                     INTPPS          equ	3600	;# 
  3968     0E11                     T0CKIPPS        equ	3601	;# 
  3969     0E12                     T1CKIPPS        equ	3602	;# 
  3970     0E13                     T1GPPS          equ	3603	;# 
  3971     0E14                     CCP1PPS         equ	3604	;# 
  3972     0E15                     CCP2PPS         equ	3605	;# 
  3973     0E16                     CCP3PPS         equ	3606	;# 
  3974     0E17                     CCP4PPS         equ	3607	;# 
  3975     0E18                     CWG1PPS         equ	3608	;# 
  3976     0E19                     CWG2PPS         equ	3609	;# 
  3977     0E1A                     MDCIN1PPS       equ	3610	;# 
  3978     0E1B                     MDCIN2PPS       equ	3611	;# 
  3979     0E1C                     MDMINPPS        equ	3612	;# 
  3980     0E1D                     SSP2CLKPPS      equ	3613	;# 
  3981     0E1E                     SSP2DATPPS      equ	3614	;# 
  3982     0E1F                     SSP2SSPPS       equ	3615	;# 
  3983     0E20                     SSP1CLKPPS      equ	3616	;# 
  3984     0E21                     SSP1DATPPS      equ	3617	;# 
  3985     0E22                     SSP1SSPPS       equ	3618	;# 
  3986     0E24                     RXPPS           equ	3620	;# 
  3987     0E25                     TXPPS           equ	3621	;# 
  3988     0E28                     CLCIN0PPS       equ	3624	;# 
  3989     0E29                     CLCIN1PPS       equ	3625	;# 
  3990     0E2A                     CLCIN2PPS       equ	3626	;# 
  3991     0E2B                     CLCIN3PPS       equ	3627	;# 
  3992     0E2C                     T3CKIPPS        equ	3628	;# 
  3993     0E2D                     T3GPPS          equ	3629	;# 
  3994     0E2E                     T5CKIPPS        equ	3630	;# 
  3995     0E2F                     T5GPPS          equ	3631	;# 
  3996     0E90                     RA0PPS          equ	3728	;# 
  3997     0E91                     RA1PPS          equ	3729	;# 
  3998     0E92                     RA2PPS          equ	3730	;# 
  3999     0E94                     RA4PPS          equ	3732	;# 
  4000     0E95                     RA5PPS          equ	3733	;# 
  4001     0E9C                     RB4PPS          equ	3740	;# 
  4002     0E9D                     RB5PPS          equ	3741	;# 
  4003     0E9E                     RB6PPS          equ	3742	;# 
  4004     0E9F                     RB7PPS          equ	3743	;# 
  4005     0EA0                     RC0PPS          equ	3744	;# 
  4006     0EA1                     RC1PPS          equ	3745	;# 
  4007     0EA2                     RC2PPS          equ	3746	;# 
  4008     0EA3                     RC3PPS          equ	3747	;# 
  4009     0EA4                     RC4PPS          equ	3748	;# 
  4010     0EA5                     RC5PPS          equ	3749	;# 
  4011     0EA6                     RC6PPS          equ	3750	;# 
  4012     0EA7                     RC7PPS          equ	3751	;# 
  4013     0F0F                     CLCDATA         equ	3855	;# 
  4014     0F10                     CLC1CON         equ	3856	;# 
  4015     0F11                     CLC1POL         equ	3857	;# 
  4016     0F12                     CLC1SEL0        equ	3858	;# 
  4017     0F13                     CLC1SEL1        equ	3859	;# 
  4018     0F14                     CLC1SEL2        equ	3860	;# 
  4019     0F15                     CLC1SEL3        equ	3861	;# 
  4020     0F16                     CLC1GLS0        equ	3862	;# 
  4021     0F17                     CLC1GLS1        equ	3863	;# 
  4022     0F18                     CLC1GLS2        equ	3864	;# 
  4023     0F19                     CLC1GLS3        equ	3865	;# 
  4024     0F1A                     CLC2CON         equ	3866	;# 
  4025     0F1B                     CLC2POL         equ	3867	;# 
  4026     0F1C                     CLC2SEL0        equ	3868	;# 
  4027     0F1D                     CLC2SEL1        equ	3869	;# 
  4028     0F1E                     CLC2SEL2        equ	3870	;# 
  4029     0F1F                     CLC2SEL3        equ	3871	;# 
  4030     0F20                     CLC2GLS0        equ	3872	;# 
  4031     0F21                     CLC2GLS1        equ	3873	;# 
  4032     0F22                     CLC2GLS2        equ	3874	;# 
  4033     0F23                     CLC2GLS3        equ	3875	;# 
  4034     0F24                     CLC3CON         equ	3876	;# 
  4035     0F25                     CLC3POL         equ	3877	;# 
  4036     0F26                     CLC3SEL0        equ	3878	;# 
  4037     0F27                     CLC3SEL1        equ	3879	;# 
  4038     0F28                     CLC3SEL2        equ	3880	;# 
  4039     0F29                     CLC3SEL3        equ	3881	;# 
  4040     0F2A                     CLC3GLS0        equ	3882	;# 
  4041     0F2B                     CLC3GLS1        equ	3883	;# 
  4042     0F2C                     CLC3GLS2        equ	3884	;# 
  4043     0F2D                     CLC3GLS3        equ	3885	;# 
  4044     0F2E                     CLC4CON         equ	3886	;# 
  4045     0F2F                     CLC4POL         equ	3887	;# 
  4046     0F30                     CLC4SEL0        equ	3888	;# 
  4047     0F31                     CLC4SEL1        equ	3889	;# 
  4048     0F32                     CLC4SEL2        equ	3890	;# 
  4049     0F33                     CLC4SEL3        equ	3891	;# 
  4050     0F34                     CLC4GLS0        equ	3892	;# 
  4051     0F35                     CLC4GLS1        equ	3893	;# 
  4052     0F36                     CLC4GLS2        equ	3894	;# 
  4053     0F37                     CLC4GLS3        equ	3895	;# 
  4054     0FE4                     STATUS_SHAD     equ	4068	;# 
  4055     0FE5                     WREG_SHAD       equ	4069	;# 
  4056     0FE6                     BSR_SHAD        equ	4070	;# 
  4057     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4058     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4059     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4060     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4061     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4062     0FED                     STKPTR          equ	4077	;# 
  4063     0FEE                     TOSL            equ	4078	;# 
  4064     0FEF                     TOSH            equ	4079	;# 
  4065     0000                     INDF0           equ	0	;# 
  4066     0001                     INDF1           equ	1	;# 
  4067     0002                     PCL             equ	2	;# 
  4068     0003                     STATUS          equ	3	;# 
  4069     0004                     FSR0L           equ	4	;# 
  4070     0005                     FSR0H           equ	5	;# 
  4071     0006                     FSR1L           equ	6	;# 
  4072     0007                     FSR1H           equ	7	;# 
  4073     0008                     BSR             equ	8	;# 
  4074     0009                     WREG            equ	9	;# 
  4075     000A                     PCLATH          equ	10	;# 
  4076     000B                     INTCON          equ	11	;# 
  4077     000C                     PORTA           equ	12	;# 
  4078     000D                     PORTB           equ	13	;# 
  4079     000E                     PORTC           equ	14	;# 
  4080     0010                     PIR0            equ	16	;# 
  4081     0011                     PIR1            equ	17	;# 
  4082     0012                     PIR2            equ	18	;# 
  4083     0013                     PIR3            equ	19	;# 
  4084     0014                     PIR4            equ	20	;# 
  4085     0015                     TMR0L           equ	21	;# 
  4086     0015                     TMR0            equ	21	;# 
  4087     0016                     TMR0H           equ	22	;# 
  4088     0016                     PR0             equ	22	;# 
  4089     0017                     T0CON0          equ	23	;# 
  4090     0018                     T0CON1          equ	24	;# 
  4091     0019                     TMR1            equ	25	;# 
  4092     0019                     TMR1L           equ	25	;# 
  4093     001A                     TMR1H           equ	26	;# 
  4094     001B                     T1CON           equ	27	;# 
  4095     001C                     T1GCON          equ	28	;# 
  4096     001D                     TMR2            equ	29	;# 
  4097     001E                     PR2             equ	30	;# 
  4098     001F                     T2CON           equ	31	;# 
  4099     008C                     TRISA           equ	140	;# 
  4100     008D                     TRISB           equ	141	;# 
  4101     008E                     TRISC           equ	142	;# 
  4102     0090                     PIE0            equ	144	;# 
  4103     0091                     PIE1            equ	145	;# 
  4104     0092                     PIE2            equ	146	;# 
  4105     0093                     PIE3            equ	147	;# 
  4106     0094                     PIE4            equ	148	;# 
  4107     0097                     WDTCON          equ	151	;# 
  4108     009B                     ADRES           equ	155	;# 
  4109     009B                     ADRESL          equ	155	;# 
  4110     009C                     ADRESH          equ	156	;# 
  4111     009D                     ADCON0          equ	157	;# 
  4112     009E                     ADCON1          equ	158	;# 
  4113     009F                     ADACT           equ	159	;# 
  4114     010C                     LATA            equ	268	;# 
  4115     010D                     LATB            equ	269	;# 
  4116     010E                     LATC            equ	270	;# 
  4117     0111                     CM1CON0         equ	273	;# 
  4118     0112                     CM1CON1         equ	274	;# 
  4119     0113                     CM2CON0         equ	275	;# 
  4120     0114                     CM2CON1         equ	276	;# 
  4121     0115                     CMOUT           equ	277	;# 
  4122     0116                     BORCON          equ	278	;# 
  4123     0117                     FVRCON          equ	279	;# 
  4124     0118                     DACCON0         equ	280	;# 
  4125     0119                     DACCON1         equ	281	;# 
  4126     018C                     ANSELA          equ	396	;# 
  4127     018D                     ANSELB          equ	397	;# 
  4128     018E                     ANSELC          equ	398	;# 
  4129     0197                     VREGCON         equ	407	;# 
  4130     0199                     RC1REG          equ	409	;# 
  4131     0199                     RCREG           equ	409	;# 
  4132     0199                     RCREG1          equ	409	;# 
  4133     019A                     TX1REG          equ	410	;# 
  4134     019A                     TXREG1          equ	410	;# 
  4135     019A                     TXREG           equ	410	;# 
  4136     019B                     SP1BRG          equ	411	;# 
  4137     019B                     SPBRG           equ	411	;# 
  4138     019B                     SP1BRGL         equ	411	;# 
  4139     019B                     SPBRG1          equ	411	;# 
  4140     019B                     SPBRGL          equ	411	;# 
  4141     019C                     SP1BRGH         equ	412	;# 
  4142     019C                     SPBRGH          equ	412	;# 
  4143     019C                     SPBRGH1         equ	412	;# 
  4144     019D                     RC1STA          equ	413	;# 
  4145     019D                     RCSTA1          equ	413	;# 
  4146     019D                     RCSTA           equ	413	;# 
  4147     019E                     TX1STA          equ	414	;# 
  4148     019E                     TXSTA1          equ	414	;# 
  4149     019E                     TXSTA           equ	414	;# 
  4150     019F                     BAUD1CON        equ	415	;# 
  4151     019F                     BAUDCON1        equ	415	;# 
  4152     019F                     BAUDCTL1        equ	415	;# 
  4153     019F                     BAUDCON         equ	415	;# 
  4154     019F                     BAUDCTL         equ	415	;# 
  4155     020C                     WPUA            equ	524	;# 
  4156     020D                     WPUB            equ	525	;# 
  4157     020E                     WPUC            equ	526	;# 
  4158     0211                     SSP1BUF         equ	529	;# 
  4159     0211                     SSPBUF          equ	529	;# 
  4160     0212                     SSP1ADD         equ	530	;# 
  4161     0212                     SSPADD          equ	530	;# 
  4162     0213                     SSP1MSK         equ	531	;# 
  4163     0213                     SSPMSK          equ	531	;# 
  4164     0214                     SSP1STAT        equ	532	;# 
  4165     0214                     SSPSTAT         equ	532	;# 
  4166     0215                     SSP1CON1        equ	533	;# 
  4167     0215                     SSPCON          equ	533	;# 
  4168     0215                     SSPCON1         equ	533	;# 
  4169     0215                     SSP1CON         equ	533	;# 
  4170     0216                     SSP1CON2        equ	534	;# 
  4171     0216                     SSPCON2         equ	534	;# 
  4172     0217                     SSP1CON3        equ	535	;# 
  4173     0217                     SSPCON3         equ	535	;# 
  4174     0219                     SSP2BUF         equ	537	;# 
  4175     021A                     SSP2ADD         equ	538	;# 
  4176     021B                     SSP2MSK         equ	539	;# 
  4177     021C                     SSP2STAT        equ	540	;# 
  4178     021D                     SSP2CON1        equ	541	;# 
  4179     021D                     SSP2CON         equ	541	;# 
  4180     021E                     SSP2CON2        equ	542	;# 
  4181     021F                     SSP2CON3        equ	543	;# 
  4182     028C                     ODCONA          equ	652	;# 
  4183     028D                     ODCONB          equ	653	;# 
  4184     028E                     ODCONC          equ	654	;# 
  4185     0291                     CCPR1           equ	657	;# 
  4186     0291                     CCPR1L          equ	657	;# 
  4187     0292                     CCPR1H          equ	658	;# 
  4188     0293                     CCP1CON         equ	659	;# 
  4189     0294                     CCP1CAP         equ	660	;# 
  4190     0295                     CCPR2           equ	661	;# 
  4191     0295                     CCPR2L          equ	661	;# 
  4192     0296                     CCPR2H          equ	662	;# 
  4193     0297                     CCP2CON         equ	663	;# 
  4194     0298                     CCP2CAP         equ	664	;# 
  4195     029F                     CCPTMRS         equ	671	;# 
  4196     030C                     SLRCONA         equ	780	;# 
  4197     030D                     SLRCONB         equ	781	;# 
  4198     030E                     SLRCONC         equ	782	;# 
  4199     0311                     CCPR3           equ	785	;# 
  4200     0311                     CCPR3L          equ	785	;# 
  4201     0312                     CCPR3H          equ	786	;# 
  4202     0313                     CCP3CON         equ	787	;# 
  4203     0314                     CCP3CAP         equ	788	;# 
  4204     0315                     CCPR4           equ	789	;# 
  4205     0315                     CCPR4L          equ	789	;# 
  4206     0316                     CCPR4H          equ	790	;# 
  4207     0317                     CCP4CON         equ	791	;# 
  4208     0318                     CCP4CAP         equ	792	;# 
  4209     038C                     INLVLA          equ	908	;# 
  4210     038D                     INLVLB          equ	909	;# 
  4211     038E                     INLVLC          equ	910	;# 
  4212     0391                     IOCAP           equ	913	;# 
  4213     0392                     IOCAN           equ	914	;# 
  4214     0393                     IOCAF           equ	915	;# 
  4215     0394                     IOCBP           equ	916	;# 
  4216     0395                     IOCBN           equ	917	;# 
  4217     0396                     IOCBF           equ	918	;# 
  4218     0397                     IOCCP           equ	919	;# 
  4219     0398                     IOCCN           equ	920	;# 
  4220     0399                     IOCCF           equ	921	;# 
  4221     039A                     CLKRCON         equ	922	;# 
  4222     039C                     MDCON           equ	924	;# 
  4223     039D                     MDSRC           equ	925	;# 
  4224     039E                     MDCARH          equ	926	;# 
  4225     039F                     MDCARL          equ	927	;# 
  4226     0411                     TMR3            equ	1041	;# 
  4227     0411                     TMR3L           equ	1041	;# 
  4228     0412                     TMR3H           equ	1042	;# 
  4229     0413                     T3CON           equ	1043	;# 
  4230     0414                     T3GCON          equ	1044	;# 
  4231     0415                     TMR4            equ	1045	;# 
  4232     0416                     PR4             equ	1046	;# 
  4233     0417                     T4CON           equ	1047	;# 
  4234     0418                     TMR5            equ	1048	;# 
  4235     0418                     TMR5L           equ	1048	;# 
  4236     0419                     TMR5H           equ	1049	;# 
  4237     041A                     T5CON           equ	1050	;# 
  4238     041B                     T5GCON          equ	1051	;# 
  4239     041C                     TMR6            equ	1052	;# 
  4240     041D                     PR6             equ	1053	;# 
  4241     041E                     T6CON           equ	1054	;# 
  4242     041F                     CCDCON          equ	1055	;# 
  4243     0498                     NCO1ACC         equ	1176	;# 
  4244     0498                     NCO1ACCL        equ	1176	;# 
  4245     0499                     NCO1ACCH        equ	1177	;# 
  4246     049A                     NCO1ACCU        equ	1178	;# 
  4247     049B                     NCO1INC         equ	1179	;# 
  4248     049B                     NCO1INCL        equ	1179	;# 
  4249     049C                     NCO1INCH        equ	1180	;# 
  4250     049D                     NCO1INCU        equ	1181	;# 
  4251     049E                     NCO1CON         equ	1182	;# 
  4252     049F                     NCO1CLK         equ	1183	;# 
  4253     0617                     PWM5DCL         equ	1559	;# 
  4254     0618                     PWM5DCH         equ	1560	;# 
  4255     0619                     PWM5CON         equ	1561	;# 
  4256     0619                     PWM5CON0        equ	1561	;# 
  4257     061A                     PWM6DCL         equ	1562	;# 
  4258     061B                     PWM6DCH         equ	1563	;# 
  4259     061C                     PWM6CON         equ	1564	;# 
  4260     061C                     PWM6CON0        equ	1564	;# 
  4261     061F                     PWMTMRS         equ	1567	;# 
  4262     0691                     CWG1CLKCON      equ	1681	;# 
  4263     0692                     CWG1DAT         equ	1682	;# 
  4264     0693                     CWG1DBR         equ	1683	;# 
  4265     0694                     CWG1DBF         equ	1684	;# 
  4266     0695                     CWG1CON0        equ	1685	;# 
  4267     0696                     CWG1CON1        equ	1686	;# 
  4268     0697                     CWG1AS0         equ	1687	;# 
  4269     0698                     CWG1AS1         equ	1688	;# 
  4270     0699                     CWG1STR         equ	1689	;# 
  4271     0711                     CWG2CLKCON      equ	1809	;# 
  4272     0712                     CWG2DAT         equ	1810	;# 
  4273     0713                     CWG2DBR         equ	1811	;# 
  4274     0714                     CWG2DBF         equ	1812	;# 
  4275     0715                     CWG2CON0        equ	1813	;# 
  4276     0716                     CWG2CON1        equ	1814	;# 
  4277     0717                     CWG2AS0         equ	1815	;# 
  4278     0718                     CWG2AS1         equ	1816	;# 
  4279     0719                     CWG2STR         equ	1817	;# 
  4280     0891                     NVMADR          equ	2193	;# 
  4281     0891                     EEADR           equ	2193	;# 
  4282     0891                     PMADR           equ	2193	;# 
  4283     0891                     NVMADRL         equ	2193	;# 
  4284     0891                     EEADRL          equ	2193	;# 
  4285     0891                     PMADRL          equ	2193	;# 
  4286     0892                     NVMADRH         equ	2194	;# 
  4287     0892                     EEADRH          equ	2194	;# 
  4288     0892                     PMADRH          equ	2194	;# 
  4289     0893                     NVMDAT          equ	2195	;# 
  4290     0893                     EEDAT           equ	2195	;# 
  4291     0893                     PMDAT           equ	2195	;# 
  4292     0893                     NVMDATL         equ	2195	;# 
  4293     0893                     EEDATL          equ	2195	;# 
  4294     0893                     PMDATL          equ	2195	;# 
  4295     0894                     NVMDATH         equ	2196	;# 
  4296     0894                     EEDATH          equ	2196	;# 
  4297     0894                     PMDATH          equ	2196	;# 
  4298     0895                     NVMCON1         equ	2197	;# 
  4299     0895                     EECON1          equ	2197	;# 
  4300     0895                     PMCON1          equ	2197	;# 
  4301     0896                     NVMCON2         equ	2198	;# 
  4302     0896                     EECON2          equ	2198	;# 
  4303     0896                     PMCON2          equ	2198	;# 
  4304     089B                     PCON0           equ	2203	;# 
  4305     0911                     PMD0            equ	2321	;# 
  4306     0912                     PMD1            equ	2322	;# 
  4307     0913                     PMD2            equ	2323	;# 
  4308     0914                     PMD3            equ	2324	;# 
  4309     0915                     PMD4            equ	2325	;# 
  4310     0916                     PMD5            equ	2326	;# 
  4311     0918                     CPUDOZE         equ	2328	;# 
  4312     0919                     OSCCON1         equ	2329	;# 
  4313     091A                     OSCCON2         equ	2330	;# 
  4314     091B                     OSCCON3         equ	2331	;# 
  4315     091C                     OSCSTAT1        equ	2332	;# 
  4316     091D                     OSCEN           equ	2333	;# 
  4317     091E                     OSCTUNE         equ	2334	;# 
  4318     091F                     OSCFRQ          equ	2335	;# 
  4319     0E0F                     PPSLOCK         equ	3599	;# 
  4320     0E10                     INTPPS          equ	3600	;# 
  4321     0E11                     T0CKIPPS        equ	3601	;# 
  4322     0E12                     T1CKIPPS        equ	3602	;# 
  4323     0E13                     T1GPPS          equ	3603	;# 
  4324     0E14                     CCP1PPS         equ	3604	;# 
  4325     0E15                     CCP2PPS         equ	3605	;# 
  4326     0E16                     CCP3PPS         equ	3606	;# 
  4327     0E17                     CCP4PPS         equ	3607	;# 
  4328     0E18                     CWG1PPS         equ	3608	;# 
  4329     0E19                     CWG2PPS         equ	3609	;# 
  4330     0E1A                     MDCIN1PPS       equ	3610	;# 
  4331     0E1B                     MDCIN2PPS       equ	3611	;# 
  4332     0E1C                     MDMINPPS        equ	3612	;# 
  4333     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4334     0E1E                     SSP2DATPPS      equ	3614	;# 
  4335     0E1F                     SSP2SSPPS       equ	3615	;# 
  4336     0E20                     SSP1CLKPPS      equ	3616	;# 
  4337     0E21                     SSP1DATPPS      equ	3617	;# 
  4338     0E22                     SSP1SSPPS       equ	3618	;# 
  4339     0E24                     RXPPS           equ	3620	;# 
  4340     0E25                     TXPPS           equ	3621	;# 
  4341     0E28                     CLCIN0PPS       equ	3624	;# 
  4342     0E29                     CLCIN1PPS       equ	3625	;# 
  4343     0E2A                     CLCIN2PPS       equ	3626	;# 
  4344     0E2B                     CLCIN3PPS       equ	3627	;# 
  4345     0E2C                     T3CKIPPS        equ	3628	;# 
  4346     0E2D                     T3GPPS          equ	3629	;# 
  4347     0E2E                     T5CKIPPS        equ	3630	;# 
  4348     0E2F                     T5GPPS          equ	3631	;# 
  4349     0E90                     RA0PPS          equ	3728	;# 
  4350     0E91                     RA1PPS          equ	3729	;# 
  4351     0E92                     RA2PPS          equ	3730	;# 
  4352     0E94                     RA4PPS          equ	3732	;# 
  4353     0E95                     RA5PPS          equ	3733	;# 
  4354     0E9C                     RB4PPS          equ	3740	;# 
  4355     0E9D                     RB5PPS          equ	3741	;# 
  4356     0E9E                     RB6PPS          equ	3742	;# 
  4357     0E9F                     RB7PPS          equ	3743	;# 
  4358     0EA0                     RC0PPS          equ	3744	;# 
  4359     0EA1                     RC1PPS          equ	3745	;# 
  4360     0EA2                     RC2PPS          equ	3746	;# 
  4361     0EA3                     RC3PPS          equ	3747	;# 
  4362     0EA4                     RC4PPS          equ	3748	;# 
  4363     0EA5                     RC5PPS          equ	3749	;# 
  4364     0EA6                     RC6PPS          equ	3750	;# 
  4365     0EA7                     RC7PPS          equ	3751	;# 
  4366     0F0F                     CLCDATA         equ	3855	;# 
  4367     0F10                     CLC1CON         equ	3856	;# 
  4368     0F11                     CLC1POL         equ	3857	;# 
  4369     0F12                     CLC1SEL0        equ	3858	;# 
  4370     0F13                     CLC1SEL1        equ	3859	;# 
  4371     0F14                     CLC1SEL2        equ	3860	;# 
  4372     0F15                     CLC1SEL3        equ	3861	;# 
  4373     0F16                     CLC1GLS0        equ	3862	;# 
  4374     0F17                     CLC1GLS1        equ	3863	;# 
  4375     0F18                     CLC1GLS2        equ	3864	;# 
  4376     0F19                     CLC1GLS3        equ	3865	;# 
  4377     0F1A                     CLC2CON         equ	3866	;# 
  4378     0F1B                     CLC2POL         equ	3867	;# 
  4379     0F1C                     CLC2SEL0        equ	3868	;# 
  4380     0F1D                     CLC2SEL1        equ	3869	;# 
  4381     0F1E                     CLC2SEL2        equ	3870	;# 
  4382     0F1F                     CLC2SEL3        equ	3871	;# 
  4383     0F20                     CLC2GLS0        equ	3872	;# 
  4384     0F21                     CLC2GLS1        equ	3873	;# 
  4385     0F22                     CLC2GLS2        equ	3874	;# 
  4386     0F23                     CLC2GLS3        equ	3875	;# 
  4387     0F24                     CLC3CON         equ	3876	;# 
  4388     0F25                     CLC3POL         equ	3877	;# 
  4389     0F26                     CLC3SEL0        equ	3878	;# 
  4390     0F27                     CLC3SEL1        equ	3879	;# 
  4391     0F28                     CLC3SEL2        equ	3880	;# 
  4392     0F29                     CLC3SEL3        equ	3881	;# 
  4393     0F2A                     CLC3GLS0        equ	3882	;# 
  4394     0F2B                     CLC3GLS1        equ	3883	;# 
  4395     0F2C                     CLC3GLS2        equ	3884	;# 
  4396     0F2D                     CLC3GLS3        equ	3885	;# 
  4397     0F2E                     CLC4CON         equ	3886	;# 
  4398     0F2F                     CLC4POL         equ	3887	;# 
  4399     0F30                     CLC4SEL0        equ	3888	;# 
  4400     0F31                     CLC4SEL1        equ	3889	;# 
  4401     0F32                     CLC4SEL2        equ	3890	;# 
  4402     0F33                     CLC4SEL3        equ	3891	;# 
  4403     0F34                     CLC4GLS0        equ	3892	;# 
  4404     0F35                     CLC4GLS1        equ	3893	;# 
  4405     0F36                     CLC4GLS2        equ	3894	;# 
  4406     0F37                     CLC4GLS3        equ	3895	;# 
  4407     0FE4                     STATUS_SHAD     equ	4068	;# 
  4408     0FE5                     WREG_SHAD       equ	4069	;# 
  4409     0FE6                     BSR_SHAD        equ	4070	;# 
  4410     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4411     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4412     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4413     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4414     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4415     0FED                     STKPTR          equ	4077	;# 
  4416     0FEE                     TOSL            equ	4078	;# 
  4417     0FEF                     TOSH            equ	4079	;# 
  4418     0000                     INDF0           equ	0	;# 
  4419     0001                     INDF1           equ	1	;# 
  4420     0002                     PCL             equ	2	;# 
  4421     0003                     STATUS          equ	3	;# 
  4422     0004                     FSR0L           equ	4	;# 
  4423     0005                     FSR0H           equ	5	;# 
  4424     0006                     FSR1L           equ	6	;# 
  4425     0007                     FSR1H           equ	7	;# 
  4426     0008                     BSR             equ	8	;# 
  4427     0009                     WREG            equ	9	;# 
  4428     000A                     PCLATH          equ	10	;# 
  4429     000B                     INTCON          equ	11	;# 
  4430     000C                     PORTA           equ	12	;# 
  4431     000D                     PORTB           equ	13	;# 
  4432     000E                     PORTC           equ	14	;# 
  4433     0010                     PIR0            equ	16	;# 
  4434     0011                     PIR1            equ	17	;# 
  4435     0012                     PIR2            equ	18	;# 
  4436     0013                     PIR3            equ	19	;# 
  4437     0014                     PIR4            equ	20	;# 
  4438     0015                     TMR0L           equ	21	;# 
  4439     0015                     TMR0            equ	21	;# 
  4440     0016                     TMR0H           equ	22	;# 
  4441     0016                     PR0             equ	22	;# 
  4442     0017                     T0CON0          equ	23	;# 
  4443     0018                     T0CON1          equ	24	;# 
  4444     0019                     TMR1            equ	25	;# 
  4445     0019                     TMR1L           equ	25	;# 
  4446     001A                     TMR1H           equ	26	;# 
  4447     001B                     T1CON           equ	27	;# 
  4448     001C                     T1GCON          equ	28	;# 
  4449     001D                     TMR2            equ	29	;# 
  4450     001E                     PR2             equ	30	;# 
  4451     001F                     T2CON           equ	31	;# 
  4452     008C                     TRISA           equ	140	;# 
  4453     008D                     TRISB           equ	141	;# 
  4454     008E                     TRISC           equ	142	;# 
  4455     0090                     PIE0            equ	144	;# 
  4456     0091                     PIE1            equ	145	;# 
  4457     0092                     PIE2            equ	146	;# 
  4458     0093                     PIE3            equ	147	;# 
  4459     0094                     PIE4            equ	148	;# 
  4460     0097                     WDTCON          equ	151	;# 
  4461     009B                     ADRES           equ	155	;# 
  4462     009B                     ADRESL          equ	155	;# 
  4463     009C                     ADRESH          equ	156	;# 
  4464     009D                     ADCON0          equ	157	;# 
  4465     009E                     ADCON1          equ	158	;# 
  4466     009F                     ADACT           equ	159	;# 
  4467     010C                     LATA            equ	268	;# 
  4468     010D                     LATB            equ	269	;# 
  4469     010E                     LATC            equ	270	;# 
  4470     0111                     CM1CON0         equ	273	;# 
  4471     0112                     CM1CON1         equ	274	;# 
  4472     0113                     CM2CON0         equ	275	;# 
  4473     0114                     CM2CON1         equ	276	;# 
  4474     0115                     CMOUT           equ	277	;# 
  4475     0116                     BORCON          equ	278	;# 
  4476     0117                     FVRCON          equ	279	;# 
  4477     0118                     DACCON0         equ	280	;# 
  4478     0119                     DACCON1         equ	281	;# 
  4479     018C                     ANSELA          equ	396	;# 
  4480     018D                     ANSELB          equ	397	;# 
  4481     018E                     ANSELC          equ	398	;# 
  4482     0197                     VREGCON         equ	407	;# 
  4483     0199                     RC1REG          equ	409	;# 
  4484     0199                     RCREG           equ	409	;# 
  4485     0199                     RCREG1          equ	409	;# 
  4486     019A                     TX1REG          equ	410	;# 
  4487     019A                     TXREG1          equ	410	;# 
  4488     019A                     TXREG           equ	410	;# 
  4489     019B                     SP1BRG          equ	411	;# 
  4490     019B                     SPBRG           equ	411	;# 
  4491     019B                     SP1BRGL         equ	411	;# 
  4492     019B                     SPBRG1          equ	411	;# 
  4493     019B                     SPBRGL          equ	411	;# 
  4494     019C                     SP1BRGH         equ	412	;# 
  4495     019C                     SPBRGH          equ	412	;# 
  4496     019C                     SPBRGH1         equ	412	;# 
  4497     019D                     RC1STA          equ	413	;# 
  4498     019D                     RCSTA1          equ	413	;# 
  4499     019D                     RCSTA           equ	413	;# 
  4500     019E                     TX1STA          equ	414	;# 
  4501     019E                     TXSTA1          equ	414	;# 
  4502     019E                     TXSTA           equ	414	;# 
  4503     019F                     BAUD1CON        equ	415	;# 
  4504     019F                     BAUDCON1        equ	415	;# 
  4505     019F                     BAUDCTL1        equ	415	;# 
  4506     019F                     BAUDCON         equ	415	;# 
  4507     019F                     BAUDCTL         equ	415	;# 
  4508     020C                     WPUA            equ	524	;# 
  4509     020D                     WPUB            equ	525	;# 
  4510     020E                     WPUC            equ	526	;# 
  4511     0211                     SSP1BUF         equ	529	;# 
  4512     0211                     SSPBUF          equ	529	;# 
  4513     0212                     SSP1ADD         equ	530	;# 
  4514     0212                     SSPADD          equ	530	;# 
  4515     0213                     SSP1MSK         equ	531	;# 
  4516     0213                     SSPMSK          equ	531	;# 
  4517     0214                     SSP1STAT        equ	532	;# 
  4518     0214                     SSPSTAT         equ	532	;# 
  4519     0215                     SSP1CON1        equ	533	;# 
  4520     0215                     SSPCON          equ	533	;# 
  4521     0215                     SSPCON1         equ	533	;# 
  4522     0215                     SSP1CON         equ	533	;# 
  4523     0216                     SSP1CON2        equ	534	;# 
  4524     0216                     SSPCON2         equ	534	;# 
  4525     0217                     SSP1CON3        equ	535	;# 
  4526     0217                     SSPCON3         equ	535	;# 
  4527     0219                     SSP2BUF         equ	537	;# 
  4528     021A                     SSP2ADD         equ	538	;# 
  4529     021B                     SSP2MSK         equ	539	;# 
  4530     021C                     SSP2STAT        equ	540	;# 
  4531     021D                     SSP2CON1        equ	541	;# 
  4532     021D                     SSP2CON         equ	541	;# 
  4533     021E                     SSP2CON2        equ	542	;# 
  4534     021F                     SSP2CON3        equ	543	;# 
  4535     028C                     ODCONA          equ	652	;# 
  4536     028D                     ODCONB          equ	653	;# 
  4537     028E                     ODCONC          equ	654	;# 
  4538     0291                     CCPR1           equ	657	;# 
  4539     0291                     CCPR1L          equ	657	;# 
  4540     0292                     CCPR1H          equ	658	;# 
  4541     0293                     CCP1CON         equ	659	;# 
  4542     0294                     CCP1CAP         equ	660	;# 
  4543     0295                     CCPR2           equ	661	;# 
  4544     0295                     CCPR2L          equ	661	;# 
  4545     0296                     CCPR2H          equ	662	;# 
  4546     0297                     CCP2CON         equ	663	;# 
  4547     0298                     CCP2CAP         equ	664	;# 
  4548     029F                     CCPTMRS         equ	671	;# 
  4549     030C                     SLRCONA         equ	780	;# 
  4550     030D                     SLRCONB         equ	781	;# 
  4551     030E                     SLRCONC         equ	782	;# 
  4552     0311                     CCPR3           equ	785	;# 
  4553     0311                     CCPR3L          equ	785	;# 
  4554     0312                     CCPR3H          equ	786	;# 
  4555     0313                     CCP3CON         equ	787	;# 
  4556     0314                     CCP3CAP         equ	788	;# 
  4557     0315                     CCPR4           equ	789	;# 
  4558     0315                     CCPR4L          equ	789	;# 
  4559     0316                     CCPR4H          equ	790	;# 
  4560     0317                     CCP4CON         equ	791	;# 
  4561     0318                     CCP4CAP         equ	792	;# 
  4562     038C                     INLVLA          equ	908	;# 
  4563     038D                     INLVLB          equ	909	;# 
  4564     038E                     INLVLC          equ	910	;# 
  4565     0391                     IOCAP           equ	913	;# 
  4566     0392                     IOCAN           equ	914	;# 
  4567     0393                     IOCAF           equ	915	;# 
  4568     0394                     IOCBP           equ	916	;# 
  4569     0395                     IOCBN           equ	917	;# 
  4570     0396                     IOCBF           equ	918	;# 
  4571     0397                     IOCCP           equ	919	;# 
  4572     0398                     IOCCN           equ	920	;# 
  4573     0399                     IOCCF           equ	921	;# 
  4574     039A                     CLKRCON         equ	922	;# 
  4575     039C                     MDCON           equ	924	;# 
  4576     039D                     MDSRC           equ	925	;# 
  4577     039E                     MDCARH          equ	926	;# 
  4578     039F                     MDCARL          equ	927	;# 
  4579     0411                     TMR3            equ	1041	;# 
  4580     0411                     TMR3L           equ	1041	;# 
  4581     0412                     TMR3H           equ	1042	;# 
  4582     0413                     T3CON           equ	1043	;# 
  4583     0414                     T3GCON          equ	1044	;# 
  4584     0415                     TMR4            equ	1045	;# 
  4585     0416                     PR4             equ	1046	;# 
  4586     0417                     T4CON           equ	1047	;# 
  4587     0418                     TMR5            equ	1048	;# 
  4588     0418                     TMR5L           equ	1048	;# 
  4589     0419                     TMR5H           equ	1049	;# 
  4590     041A                     T5CON           equ	1050	;# 
  4591     041B                     T5GCON          equ	1051	;# 
  4592     041C                     TMR6            equ	1052	;# 
  4593     041D                     PR6             equ	1053	;# 
  4594     041E                     T6CON           equ	1054	;# 
  4595     041F                     CCDCON          equ	1055	;# 
  4596     0498                     NCO1ACC         equ	1176	;# 
  4597     0498                     NCO1ACCL        equ	1176	;# 
  4598     0499                     NCO1ACCH        equ	1177	;# 
  4599     049A                     NCO1ACCU        equ	1178	;# 
  4600     049B                     NCO1INC         equ	1179	;# 
  4601     049B                     NCO1INCL        equ	1179	;# 
  4602     049C                     NCO1INCH        equ	1180	;# 
  4603     049D                     NCO1INCU        equ	1181	;# 
  4604     049E                     NCO1CON         equ	1182	;# 
  4605     049F                     NCO1CLK         equ	1183	;# 
  4606     0617                     PWM5DCL         equ	1559	;# 
  4607     0618                     PWM5DCH         equ	1560	;# 
  4608     0619                     PWM5CON         equ	1561	;# 
  4609     0619                     PWM5CON0        equ	1561	;# 
  4610     061A                     PWM6DCL         equ	1562	;# 
  4611     061B                     PWM6DCH         equ	1563	;# 
  4612     061C                     PWM6CON         equ	1564	;# 
  4613     061C                     PWM6CON0        equ	1564	;# 
  4614     061F                     PWMTMRS         equ	1567	;# 
  4615     0691                     CWG1CLKCON      equ	1681	;# 
  4616     0692                     CWG1DAT         equ	1682	;# 
  4617     0693                     CWG1DBR         equ	1683	;# 
  4618     0694                     CWG1DBF         equ	1684	;# 
  4619     0695                     CWG1CON0        equ	1685	;# 
  4620     0696                     CWG1CON1        equ	1686	;# 
  4621     0697                     CWG1AS0         equ	1687	;# 
  4622     0698                     CWG1AS1         equ	1688	;# 
  4623     0699                     CWG1STR         equ	1689	;# 
  4624     0711                     CWG2CLKCON      equ	1809	;# 
  4625     0712                     CWG2DAT         equ	1810	;# 
  4626     0713                     CWG2DBR         equ	1811	;# 
  4627     0714                     CWG2DBF         equ	1812	;# 
  4628     0715                     CWG2CON0        equ	1813	;# 
  4629     0716                     CWG2CON1        equ	1814	;# 
  4630     0717                     CWG2AS0         equ	1815	;# 
  4631     0718                     CWG2AS1         equ	1816	;# 
  4632     0719                     CWG2STR         equ	1817	;# 
  4633     0891                     NVMADR          equ	2193	;# 
  4634     0891                     EEADR           equ	2193	;# 
  4635     0891                     PMADR           equ	2193	;# 
  4636     0891                     NVMADRL         equ	2193	;# 
  4637     0891                     EEADRL          equ	2193	;# 
  4638     0891                     PMADRL          equ	2193	;# 
  4639     0892                     NVMADRH         equ	2194	;# 
  4640     0892                     EEADRH          equ	2194	;# 
  4641     0892                     PMADRH          equ	2194	;# 
  4642     0893                     NVMDAT          equ	2195	;# 
  4643     0893                     EEDAT           equ	2195	;# 
  4644     0893                     PMDAT           equ	2195	;# 
  4645     0893                     NVMDATL         equ	2195	;# 
  4646     0893                     EEDATL          equ	2195	;# 
  4647     0893                     PMDATL          equ	2195	;# 
  4648     0894                     NVMDATH         equ	2196	;# 
  4649     0894                     EEDATH          equ	2196	;# 
  4650     0894                     PMDATH          equ	2196	;# 
  4651     0895                     NVMCON1         equ	2197	;# 
  4652     0895                     EECON1          equ	2197	;# 
  4653     0895                     PMCON1          equ	2197	;# 
  4654     0896                     NVMCON2         equ	2198	;# 
  4655     0896                     EECON2          equ	2198	;# 
  4656     0896                     PMCON2          equ	2198	;# 
  4657     089B                     PCON0           equ	2203	;# 
  4658     0911                     PMD0            equ	2321	;# 
  4659     0912                     PMD1            equ	2322	;# 
  4660     0913                     PMD2            equ	2323	;# 
  4661     0914                     PMD3            equ	2324	;# 
  4662     0915                     PMD4            equ	2325	;# 
  4663     0916                     PMD5            equ	2326	;# 
  4664     0918                     CPUDOZE         equ	2328	;# 
  4665     0919                     OSCCON1         equ	2329	;# 
  4666     091A                     OSCCON2         equ	2330	;# 
  4667     091B                     OSCCON3         equ	2331	;# 
  4668     091C                     OSCSTAT1        equ	2332	;# 
  4669     091D                     OSCEN           equ	2333	;# 
  4670     091E                     OSCTUNE         equ	2334	;# 
  4671     091F                     OSCFRQ          equ	2335	;# 
  4672     0E0F                     PPSLOCK         equ	3599	;# 
  4673     0E10                     INTPPS          equ	3600	;# 
  4674     0E11                     T0CKIPPS        equ	3601	;# 
  4675     0E12                     T1CKIPPS        equ	3602	;# 
  4676     0E13                     T1GPPS          equ	3603	;# 
  4677     0E14                     CCP1PPS         equ	3604	;# 
  4678     0E15                     CCP2PPS         equ	3605	;# 
  4679     0E16                     CCP3PPS         equ	3606	;# 
  4680     0E17                     CCP4PPS         equ	3607	;# 
  4681     0E18                     CWG1PPS         equ	3608	;# 
  4682     0E19                     CWG2PPS         equ	3609	;# 
  4683     0E1A                     MDCIN1PPS       equ	3610	;# 
  4684     0E1B                     MDCIN2PPS       equ	3611	;# 
  4685     0E1C                     MDMINPPS        equ	3612	;# 
  4686     0E1D                     SSP2CLKPPS      equ	3613	;# 
  4687     0E1E                     SSP2DATPPS      equ	3614	;# 
  4688     0E1F                     SSP2SSPPS       equ	3615	;# 
  4689     0E20                     SSP1CLKPPS      equ	3616	;# 
  4690     0E21                     SSP1DATPPS      equ	3617	;# 
  4691     0E22                     SSP1SSPPS       equ	3618	;# 
  4692     0E24                     RXPPS           equ	3620	;# 
  4693     0E25                     TXPPS           equ	3621	;# 
  4694     0E28                     CLCIN0PPS       equ	3624	;# 
  4695     0E29                     CLCIN1PPS       equ	3625	;# 
  4696     0E2A                     CLCIN2PPS       equ	3626	;# 
  4697     0E2B                     CLCIN3PPS       equ	3627	;# 
  4698     0E2C                     T3CKIPPS        equ	3628	;# 
  4699     0E2D                     T3GPPS          equ	3629	;# 
  4700     0E2E                     T5CKIPPS        equ	3630	;# 
  4701     0E2F                     T5GPPS          equ	3631	;# 
  4702     0E90                     RA0PPS          equ	3728	;# 
  4703     0E91                     RA1PPS          equ	3729	;# 
  4704     0E92                     RA2PPS          equ	3730	;# 
  4705     0E94                     RA4PPS          equ	3732	;# 
  4706     0E95                     RA5PPS          equ	3733	;# 
  4707     0E9C                     RB4PPS          equ	3740	;# 
  4708     0E9D                     RB5PPS          equ	3741	;# 
  4709     0E9E                     RB6PPS          equ	3742	;# 
  4710     0E9F                     RB7PPS          equ	3743	;# 
  4711     0EA0                     RC0PPS          equ	3744	;# 
  4712     0EA1                     RC1PPS          equ	3745	;# 
  4713     0EA2                     RC2PPS          equ	3746	;# 
  4714     0EA3                     RC3PPS          equ	3747	;# 
  4715     0EA4                     RC4PPS          equ	3748	;# 
  4716     0EA5                     RC5PPS          equ	3749	;# 
  4717     0EA6                     RC6PPS          equ	3750	;# 
  4718     0EA7                     RC7PPS          equ	3751	;# 
  4719     0F0F                     CLCDATA         equ	3855	;# 
  4720     0F10                     CLC1CON         equ	3856	;# 
  4721     0F11                     CLC1POL         equ	3857	;# 
  4722     0F12                     CLC1SEL0        equ	3858	;# 
  4723     0F13                     CLC1SEL1        equ	3859	;# 
  4724     0F14                     CLC1SEL2        equ	3860	;# 
  4725     0F15                     CLC1SEL3        equ	3861	;# 
  4726     0F16                     CLC1GLS0        equ	3862	;# 
  4727     0F17                     CLC1GLS1        equ	3863	;# 
  4728     0F18                     CLC1GLS2        equ	3864	;# 
  4729     0F19                     CLC1GLS3        equ	3865	;# 
  4730     0F1A                     CLC2CON         equ	3866	;# 
  4731     0F1B                     CLC2POL         equ	3867	;# 
  4732     0F1C                     CLC2SEL0        equ	3868	;# 
  4733     0F1D                     CLC2SEL1        equ	3869	;# 
  4734     0F1E                     CLC2SEL2        equ	3870	;# 
  4735     0F1F                     CLC2SEL3        equ	3871	;# 
  4736     0F20                     CLC2GLS0        equ	3872	;# 
  4737     0F21                     CLC2GLS1        equ	3873	;# 
  4738     0F22                     CLC2GLS2        equ	3874	;# 
  4739     0F23                     CLC2GLS3        equ	3875	;# 
  4740     0F24                     CLC3CON         equ	3876	;# 
  4741     0F25                     CLC3POL         equ	3877	;# 
  4742     0F26                     CLC3SEL0        equ	3878	;# 
  4743     0F27                     CLC3SEL1        equ	3879	;# 
  4744     0F28                     CLC3SEL2        equ	3880	;# 
  4745     0F29                     CLC3SEL3        equ	3881	;# 
  4746     0F2A                     CLC3GLS0        equ	3882	;# 
  4747     0F2B                     CLC3GLS1        equ	3883	;# 
  4748     0F2C                     CLC3GLS2        equ	3884	;# 
  4749     0F2D                     CLC3GLS3        equ	3885	;# 
  4750     0F2E                     CLC4CON         equ	3886	;# 
  4751     0F2F                     CLC4POL         equ	3887	;# 
  4752     0F30                     CLC4SEL0        equ	3888	;# 
  4753     0F31                     CLC4SEL1        equ	3889	;# 
  4754     0F32                     CLC4SEL2        equ	3890	;# 
  4755     0F33                     CLC4SEL3        equ	3891	;# 
  4756     0F34                     CLC4GLS0        equ	3892	;# 
  4757     0F35                     CLC4GLS1        equ	3893	;# 
  4758     0F36                     CLC4GLS2        equ	3894	;# 
  4759     0F37                     CLC4GLS3        equ	3895	;# 
  4760     0FE4                     STATUS_SHAD     equ	4068	;# 
  4761     0FE5                     WREG_SHAD       equ	4069	;# 
  4762     0FE6                     BSR_SHAD        equ	4070	;# 
  4763     0FE7                     PCLATH_SHAD     equ	4071	;# 
  4764     0FE8                     FSR0L_SHAD      equ	4072	;# 
  4765     0FE9                     FSR0H_SHAD      equ	4073	;# 
  4766     0FEA                     FSR1L_SHAD      equ	4074	;# 
  4767     0FEB                     FSR1H_SHAD      equ	4075	;# 
  4768     0FED                     STKPTR          equ	4077	;# 
  4769     0FEE                     TOSL            equ	4078	;# 
  4770     0FEF                     TOSH            equ	4079	;# 
  4771     0000                     INDF0           equ	0	;# 
  4772     0001                     INDF1           equ	1	;# 
  4773     0002                     PCL             equ	2	;# 
  4774     0003                     STATUS          equ	3	;# 
  4775     0004                     FSR0L           equ	4	;# 
  4776     0005                     FSR0H           equ	5	;# 
  4777     0006                     FSR1L           equ	6	;# 
  4778     0007                     FSR1H           equ	7	;# 
  4779     0008                     BSR             equ	8	;# 
  4780     0009                     WREG            equ	9	;# 
  4781     000A                     PCLATH          equ	10	;# 
  4782     000B                     INTCON          equ	11	;# 
  4783     000C                     PORTA           equ	12	;# 
  4784     000D                     PORTB           equ	13	;# 
  4785     000E                     PORTC           equ	14	;# 
  4786     0010                     PIR0            equ	16	;# 
  4787     0011                     PIR1            equ	17	;# 
  4788     0012                     PIR2            equ	18	;# 
  4789     0013                     PIR3            equ	19	;# 
  4790     0014                     PIR4            equ	20	;# 
  4791     0015                     TMR0L           equ	21	;# 
  4792     0015                     TMR0            equ	21	;# 
  4793     0016                     TMR0H           equ	22	;# 
  4794     0016                     PR0             equ	22	;# 
  4795     0017                     T0CON0          equ	23	;# 
  4796     0018                     T0CON1          equ	24	;# 
  4797     0019                     TMR1            equ	25	;# 
  4798     0019                     TMR1L           equ	25	;# 
  4799     001A                     TMR1H           equ	26	;# 
  4800     001B                     T1CON           equ	27	;# 
  4801     001C                     T1GCON          equ	28	;# 
  4802     001D                     TMR2            equ	29	;# 
  4803     001E                     PR2             equ	30	;# 
  4804     001F                     T2CON           equ	31	;# 
  4805     008C                     TRISA           equ	140	;# 
  4806     008D                     TRISB           equ	141	;# 
  4807     008E                     TRISC           equ	142	;# 
  4808     0090                     PIE0            equ	144	;# 
  4809     0091                     PIE1            equ	145	;# 
  4810     0092                     PIE2            equ	146	;# 
  4811     0093                     PIE3            equ	147	;# 
  4812     0094                     PIE4            equ	148	;# 
  4813     0097                     WDTCON          equ	151	;# 
  4814     009B                     ADRES           equ	155	;# 
  4815     009B                     ADRESL          equ	155	;# 
  4816     009C                     ADRESH          equ	156	;# 
  4817     009D                     ADCON0          equ	157	;# 
  4818     009E                     ADCON1          equ	158	;# 
  4819     009F                     ADACT           equ	159	;# 
  4820     010C                     LATA            equ	268	;# 
  4821     010D                     LATB            equ	269	;# 
  4822     010E                     LATC            equ	270	;# 
  4823     0111                     CM1CON0         equ	273	;# 
  4824     0112                     CM1CON1         equ	274	;# 
  4825     0113                     CM2CON0         equ	275	;# 
  4826     0114                     CM2CON1         equ	276	;# 
  4827     0115                     CMOUT           equ	277	;# 
  4828     0116                     BORCON          equ	278	;# 
  4829     0117                     FVRCON          equ	279	;# 
  4830     0118                     DACCON0         equ	280	;# 
  4831     0119                     DACCON1         equ	281	;# 
  4832     018C                     ANSELA          equ	396	;# 
  4833     018D                     ANSELB          equ	397	;# 
  4834     018E                     ANSELC          equ	398	;# 
  4835     0197                     VREGCON         equ	407	;# 
  4836     0199                     RC1REG          equ	409	;# 
  4837     0199                     RCREG           equ	409	;# 
  4838     0199                     RCREG1          equ	409	;# 
  4839     019A                     TX1REG          equ	410	;# 
  4840     019A                     TXREG1          equ	410	;# 
  4841     019A                     TXREG           equ	410	;# 
  4842     019B                     SP1BRG          equ	411	;# 
  4843     019B                     SPBRG           equ	411	;# 
  4844     019B                     SP1BRGL         equ	411	;# 
  4845     019B                     SPBRG1          equ	411	;# 
  4846     019B                     SPBRGL          equ	411	;# 
  4847     019C                     SP1BRGH         equ	412	;# 
  4848     019C                     SPBRGH          equ	412	;# 
  4849     019C                     SPBRGH1         equ	412	;# 
  4850     019D                     RC1STA          equ	413	;# 
  4851     019D                     RCSTA1          equ	413	;# 
  4852     019D                     RCSTA           equ	413	;# 
  4853     019E                     TX1STA          equ	414	;# 
  4854     019E                     TXSTA1          equ	414	;# 
  4855     019E                     TXSTA           equ	414	;# 
  4856     019F                     BAUD1CON        equ	415	;# 
  4857     019F                     BAUDCON1        equ	415	;# 
  4858     019F                     BAUDCTL1        equ	415	;# 
  4859     019F                     BAUDCON         equ	415	;# 
  4860     019F                     BAUDCTL         equ	415	;# 
  4861     020C                     WPUA            equ	524	;# 
  4862     020D                     WPUB            equ	525	;# 
  4863     020E                     WPUC            equ	526	;# 
  4864     0211                     SSP1BUF         equ	529	;# 
  4865     0211                     SSPBUF          equ	529	;# 
  4866     0212                     SSP1ADD         equ	530	;# 
  4867     0212                     SSPADD          equ	530	;# 
  4868     0213                     SSP1MSK         equ	531	;# 
  4869     0213                     SSPMSK          equ	531	;# 
  4870     0214                     SSP1STAT        equ	532	;# 
  4871     0214                     SSPSTAT         equ	532	;# 
  4872     0215                     SSP1CON1        equ	533	;# 
  4873     0215                     SSPCON          equ	533	;# 
  4874     0215                     SSPCON1         equ	533	;# 
  4875     0215                     SSP1CON         equ	533	;# 
  4876     0216                     SSP1CON2        equ	534	;# 
  4877     0216                     SSPCON2         equ	534	;# 
  4878     0217                     SSP1CON3        equ	535	;# 
  4879     0217                     SSPCON3         equ	535	;# 
  4880     0219                     SSP2BUF         equ	537	;# 
  4881     021A                     SSP2ADD         equ	538	;# 
  4882     021B                     SSP2MSK         equ	539	;# 
  4883     021C                     SSP2STAT        equ	540	;# 
  4884     021D                     SSP2CON1        equ	541	;# 
  4885     021D                     SSP2CON         equ	541	;# 
  4886     021E                     SSP2CON2        equ	542	;# 
  4887     021F                     SSP2CON3        equ	543	;# 
  4888     028C                     ODCONA          equ	652	;# 
  4889     028D                     ODCONB          equ	653	;# 
  4890     028E                     ODCONC          equ	654	;# 
  4891     0291                     CCPR1           equ	657	;# 
  4892     0291                     CCPR1L          equ	657	;# 
  4893     0292                     CCPR1H          equ	658	;# 
  4894     0293                     CCP1CON         equ	659	;# 
  4895     0294                     CCP1CAP         equ	660	;# 
  4896     0295                     CCPR2           equ	661	;# 
  4897     0295                     CCPR2L          equ	661	;# 
  4898     0296                     CCPR2H          equ	662	;# 
  4899     0297                     CCP2CON         equ	663	;# 
  4900     0298                     CCP2CAP         equ	664	;# 
  4901     029F                     CCPTMRS         equ	671	;# 
  4902     030C                     SLRCONA         equ	780	;# 
  4903     030D                     SLRCONB         equ	781	;# 
  4904     030E                     SLRCONC         equ	782	;# 
  4905     0311                     CCPR3           equ	785	;# 
  4906     0311                     CCPR3L          equ	785	;# 
  4907     0312                     CCPR3H          equ	786	;# 
  4908     0313                     CCP3CON         equ	787	;# 
  4909     0314                     CCP3CAP         equ	788	;# 
  4910     0315                     CCPR4           equ	789	;# 
  4911     0315                     CCPR4L          equ	789	;# 
  4912     0316                     CCPR4H          equ	790	;# 
  4913     0317                     CCP4CON         equ	791	;# 
  4914     0318                     CCP4CAP         equ	792	;# 
  4915     038C                     INLVLA          equ	908	;# 
  4916     038D                     INLVLB          equ	909	;# 
  4917     038E                     INLVLC          equ	910	;# 
  4918     0391                     IOCAP           equ	913	;# 
  4919     0392                     IOCAN           equ	914	;# 
  4920     0393                     IOCAF           equ	915	;# 
  4921     0394                     IOCBP           equ	916	;# 
  4922     0395                     IOCBN           equ	917	;# 
  4923     0396                     IOCBF           equ	918	;# 
  4924     0397                     IOCCP           equ	919	;# 
  4925     0398                     IOCCN           equ	920	;# 
  4926     0399                     IOCCF           equ	921	;# 
  4927     039A                     CLKRCON         equ	922	;# 
  4928     039C                     MDCON           equ	924	;# 
  4929     039D                     MDSRC           equ	925	;# 
  4930     039E                     MDCARH          equ	926	;# 
  4931     039F                     MDCARL          equ	927	;# 
  4932     0411                     TMR3            equ	1041	;# 
  4933     0411                     TMR3L           equ	1041	;# 
  4934     0412                     TMR3H           equ	1042	;# 
  4935     0413                     T3CON           equ	1043	;# 
  4936     0414                     T3GCON          equ	1044	;# 
  4937     0415                     TMR4            equ	1045	;# 
  4938     0416                     PR4             equ	1046	;# 
  4939     0417                     T4CON           equ	1047	;# 
  4940     0418                     TMR5            equ	1048	;# 
  4941     0418                     TMR5L           equ	1048	;# 
  4942     0419                     TMR5H           equ	1049	;# 
  4943     041A                     T5CON           equ	1050	;# 
  4944     041B                     T5GCON          equ	1051	;# 
  4945     041C                     TMR6            equ	1052	;# 
  4946     041D                     PR6             equ	1053	;# 
  4947     041E                     T6CON           equ	1054	;# 
  4948     041F                     CCDCON          equ	1055	;# 
  4949     0498                     NCO1ACC         equ	1176	;# 
  4950     0498                     NCO1ACCL        equ	1176	;# 
  4951     0499                     NCO1ACCH        equ	1177	;# 
  4952     049A                     NCO1ACCU        equ	1178	;# 
  4953     049B                     NCO1INC         equ	1179	;# 
  4954     049B                     NCO1INCL        equ	1179	;# 
  4955     049C                     NCO1INCH        equ	1180	;# 
  4956     049D                     NCO1INCU        equ	1181	;# 
  4957     049E                     NCO1CON         equ	1182	;# 
  4958     049F                     NCO1CLK         equ	1183	;# 
  4959     0617                     PWM5DCL         equ	1559	;# 
  4960     0618                     PWM5DCH         equ	1560	;# 
  4961     0619                     PWM5CON         equ	1561	;# 
  4962     0619                     PWM5CON0        equ	1561	;# 
  4963     061A                     PWM6DCL         equ	1562	;# 
  4964     061B                     PWM6DCH         equ	1563	;# 
  4965     061C                     PWM6CON         equ	1564	;# 
  4966     061C                     PWM6CON0        equ	1564	;# 
  4967     061F                     PWMTMRS         equ	1567	;# 
  4968     0691                     CWG1CLKCON      equ	1681	;# 
  4969     0692                     CWG1DAT         equ	1682	;# 
  4970     0693                     CWG1DBR         equ	1683	;# 
  4971     0694                     CWG1DBF         equ	1684	;# 
  4972     0695                     CWG1CON0        equ	1685	;# 
  4973     0696                     CWG1CON1        equ	1686	;# 
  4974     0697                     CWG1AS0         equ	1687	;# 
  4975     0698                     CWG1AS1         equ	1688	;# 
  4976     0699                     CWG1STR         equ	1689	;# 
  4977     0711                     CWG2CLKCON      equ	1809	;# 
  4978     0712                     CWG2DAT         equ	1810	;# 
  4979     0713                     CWG2DBR         equ	1811	;# 
  4980     0714                     CWG2DBF         equ	1812	;# 
  4981     0715                     CWG2CON0        equ	1813	;# 
  4982     0716                     CWG2CON1        equ	1814	;# 
  4983     0717                     CWG2AS0         equ	1815	;# 
  4984     0718                     CWG2AS1         equ	1816	;# 
  4985     0719                     CWG2STR         equ	1817	;# 
  4986     0891                     NVMADR          equ	2193	;# 
  4987     0891                     EEADR           equ	2193	;# 
  4988     0891                     PMADR           equ	2193	;# 
  4989     0891                     NVMADRL         equ	2193	;# 
  4990     0891                     EEADRL          equ	2193	;# 
  4991     0891                     PMADRL          equ	2193	;# 
  4992     0892                     NVMADRH         equ	2194	;# 
  4993     0892                     EEADRH          equ	2194	;# 
  4994     0892                     PMADRH          equ	2194	;# 
  4995     0893                     NVMDAT          equ	2195	;# 
  4996     0893                     EEDAT           equ	2195	;# 
  4997     0893                     PMDAT           equ	2195	;# 
  4998     0893                     NVMDATL         equ	2195	;# 
  4999     0893                     EEDATL          equ	2195	;# 
  5000     0893                     PMDATL          equ	2195	;# 
  5001     0894                     NVMDATH         equ	2196	;# 
  5002     0894                     EEDATH          equ	2196	;# 
  5003     0894                     PMDATH          equ	2196	;# 
  5004     0895                     NVMCON1         equ	2197	;# 
  5005     0895                     EECON1          equ	2197	;# 
  5006     0895                     PMCON1          equ	2197	;# 
  5007     0896                     NVMCON2         equ	2198	;# 
  5008     0896                     EECON2          equ	2198	;# 
  5009     0896                     PMCON2          equ	2198	;# 
  5010     089B                     PCON0           equ	2203	;# 
  5011     0911                     PMD0            equ	2321	;# 
  5012     0912                     PMD1            equ	2322	;# 
  5013     0913                     PMD2            equ	2323	;# 
  5014     0914                     PMD3            equ	2324	;# 
  5015     0915                     PMD4            equ	2325	;# 
  5016     0916                     PMD5            equ	2326	;# 
  5017     0918                     CPUDOZE         equ	2328	;# 
  5018     0919                     OSCCON1         equ	2329	;# 
  5019     091A                     OSCCON2         equ	2330	;# 
  5020     091B                     OSCCON3         equ	2331	;# 
  5021     091C                     OSCSTAT1        equ	2332	;# 
  5022     091D                     OSCEN           equ	2333	;# 
  5023     091E                     OSCTUNE         equ	2334	;# 
  5024     091F                     OSCFRQ          equ	2335	;# 
  5025     0E0F                     PPSLOCK         equ	3599	;# 
  5026     0E10                     INTPPS          equ	3600	;# 
  5027     0E11                     T0CKIPPS        equ	3601	;# 
  5028     0E12                     T1CKIPPS        equ	3602	;# 
  5029     0E13                     T1GPPS          equ	3603	;# 
  5030     0E14                     CCP1PPS         equ	3604	;# 
  5031     0E15                     CCP2PPS         equ	3605	;# 
  5032     0E16                     CCP3PPS         equ	3606	;# 
  5033     0E17                     CCP4PPS         equ	3607	;# 
  5034     0E18                     CWG1PPS         equ	3608	;# 
  5035     0E19                     CWG2PPS         equ	3609	;# 
  5036     0E1A                     MDCIN1PPS       equ	3610	;# 
  5037     0E1B                     MDCIN2PPS       equ	3611	;# 
  5038     0E1C                     MDMINPPS        equ	3612	;# 
  5039     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5040     0E1E                     SSP2DATPPS      equ	3614	;# 
  5041     0E1F                     SSP2SSPPS       equ	3615	;# 
  5042     0E20                     SSP1CLKPPS      equ	3616	;# 
  5043     0E21                     SSP1DATPPS      equ	3617	;# 
  5044     0E22                     SSP1SSPPS       equ	3618	;# 
  5045     0E24                     RXPPS           equ	3620	;# 
  5046     0E25                     TXPPS           equ	3621	;# 
  5047     0E28                     CLCIN0PPS       equ	3624	;# 
  5048     0E29                     CLCIN1PPS       equ	3625	;# 
  5049     0E2A                     CLCIN2PPS       equ	3626	;# 
  5050     0E2B                     CLCIN3PPS       equ	3627	;# 
  5051     0E2C                     T3CKIPPS        equ	3628	;# 
  5052     0E2D                     T3GPPS          equ	3629	;# 
  5053     0E2E                     T5CKIPPS        equ	3630	;# 
  5054     0E2F                     T5GPPS          equ	3631	;# 
  5055     0E90                     RA0PPS          equ	3728	;# 
  5056     0E91                     RA1PPS          equ	3729	;# 
  5057     0E92                     RA2PPS          equ	3730	;# 
  5058     0E94                     RA4PPS          equ	3732	;# 
  5059     0E95                     RA5PPS          equ	3733	;# 
  5060     0E9C                     RB4PPS          equ	3740	;# 
  5061     0E9D                     RB5PPS          equ	3741	;# 
  5062     0E9E                     RB6PPS          equ	3742	;# 
  5063     0E9F                     RB7PPS          equ	3743	;# 
  5064     0EA0                     RC0PPS          equ	3744	;# 
  5065     0EA1                     RC1PPS          equ	3745	;# 
  5066     0EA2                     RC2PPS          equ	3746	;# 
  5067     0EA3                     RC3PPS          equ	3747	;# 
  5068     0EA4                     RC4PPS          equ	3748	;# 
  5069     0EA5                     RC5PPS          equ	3749	;# 
  5070     0EA6                     RC6PPS          equ	3750	;# 
  5071     0EA7                     RC7PPS          equ	3751	;# 
  5072     0F0F                     CLCDATA         equ	3855	;# 
  5073     0F10                     CLC1CON         equ	3856	;# 
  5074     0F11                     CLC1POL         equ	3857	;# 
  5075     0F12                     CLC1SEL0        equ	3858	;# 
  5076     0F13                     CLC1SEL1        equ	3859	;# 
  5077     0F14                     CLC1SEL2        equ	3860	;# 
  5078     0F15                     CLC1SEL3        equ	3861	;# 
  5079     0F16                     CLC1GLS0        equ	3862	;# 
  5080     0F17                     CLC1GLS1        equ	3863	;# 
  5081     0F18                     CLC1GLS2        equ	3864	;# 
  5082     0F19                     CLC1GLS3        equ	3865	;# 
  5083     0F1A                     CLC2CON         equ	3866	;# 
  5084     0F1B                     CLC2POL         equ	3867	;# 
  5085     0F1C                     CLC2SEL0        equ	3868	;# 
  5086     0F1D                     CLC2SEL1        equ	3869	;# 
  5087     0F1E                     CLC2SEL2        equ	3870	;# 
  5088     0F1F                     CLC2SEL3        equ	3871	;# 
  5089     0F20                     CLC2GLS0        equ	3872	;# 
  5090     0F21                     CLC2GLS1        equ	3873	;# 
  5091     0F22                     CLC2GLS2        equ	3874	;# 
  5092     0F23                     CLC2GLS3        equ	3875	;# 
  5093     0F24                     CLC3CON         equ	3876	;# 
  5094     0F25                     CLC3POL         equ	3877	;# 
  5095     0F26                     CLC3SEL0        equ	3878	;# 
  5096     0F27                     CLC3SEL1        equ	3879	;# 
  5097     0F28                     CLC3SEL2        equ	3880	;# 
  5098     0F29                     CLC3SEL3        equ	3881	;# 
  5099     0F2A                     CLC3GLS0        equ	3882	;# 
  5100     0F2B                     CLC3GLS1        equ	3883	;# 
  5101     0F2C                     CLC3GLS2        equ	3884	;# 
  5102     0F2D                     CLC3GLS3        equ	3885	;# 
  5103     0F2E                     CLC4CON         equ	3886	;# 
  5104     0F2F                     CLC4POL         equ	3887	;# 
  5105     0F30                     CLC4SEL0        equ	3888	;# 
  5106     0F31                     CLC4SEL1        equ	3889	;# 
  5107     0F32                     CLC4SEL2        equ	3890	;# 
  5108     0F33                     CLC4SEL3        equ	3891	;# 
  5109     0F34                     CLC4GLS0        equ	3892	;# 
  5110     0F35                     CLC4GLS1        equ	3893	;# 
  5111     0F36                     CLC4GLS2        equ	3894	;# 
  5112     0F37                     CLC4GLS3        equ	3895	;# 
  5113     0FE4                     STATUS_SHAD     equ	4068	;# 
  5114     0FE5                     WREG_SHAD       equ	4069	;# 
  5115     0FE6                     BSR_SHAD        equ	4070	;# 
  5116     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5117     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5118     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5119     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5120     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5121     0FED                     STKPTR          equ	4077	;# 
  5122     0FEE                     TOSL            equ	4078	;# 
  5123     0FEF                     TOSH            equ	4079	;# 
  5124     0000                     INDF0           equ	0	;# 
  5125     0001                     INDF1           equ	1	;# 
  5126     0002                     PCL             equ	2	;# 
  5127     0003                     STATUS          equ	3	;# 
  5128     0004                     FSR0L           equ	4	;# 
  5129     0005                     FSR0H           equ	5	;# 
  5130     0006                     FSR1L           equ	6	;# 
  5131     0007                     FSR1H           equ	7	;# 
  5132     0008                     BSR             equ	8	;# 
  5133     0009                     WREG            equ	9	;# 
  5134     000A                     PCLATH          equ	10	;# 
  5135     000B                     INTCON          equ	11	;# 
  5136     000C                     PORTA           equ	12	;# 
  5137     000D                     PORTB           equ	13	;# 
  5138     000E                     PORTC           equ	14	;# 
  5139     0010                     PIR0            equ	16	;# 
  5140     0011                     PIR1            equ	17	;# 
  5141     0012                     PIR2            equ	18	;# 
  5142     0013                     PIR3            equ	19	;# 
  5143     0014                     PIR4            equ	20	;# 
  5144     0015                     TMR0L           equ	21	;# 
  5145     0015                     TMR0            equ	21	;# 
  5146     0016                     TMR0H           equ	22	;# 
  5147     0016                     PR0             equ	22	;# 
  5148     0017                     T0CON0          equ	23	;# 
  5149     0018                     T0CON1          equ	24	;# 
  5150     0019                     TMR1            equ	25	;# 
  5151     0019                     TMR1L           equ	25	;# 
  5152     001A                     TMR1H           equ	26	;# 
  5153     001B                     T1CON           equ	27	;# 
  5154     001C                     T1GCON          equ	28	;# 
  5155     001D                     TMR2            equ	29	;# 
  5156     001E                     PR2             equ	30	;# 
  5157     001F                     T2CON           equ	31	;# 
  5158     008C                     TRISA           equ	140	;# 
  5159     008D                     TRISB           equ	141	;# 
  5160     008E                     TRISC           equ	142	;# 
  5161     0090                     PIE0            equ	144	;# 
  5162     0091                     PIE1            equ	145	;# 
  5163     0092                     PIE2            equ	146	;# 
  5164     0093                     PIE3            equ	147	;# 
  5165     0094                     PIE4            equ	148	;# 
  5166     0097                     WDTCON          equ	151	;# 
  5167     009B                     ADRES           equ	155	;# 
  5168     009B                     ADRESL          equ	155	;# 
  5169     009C                     ADRESH          equ	156	;# 
  5170     009D                     ADCON0          equ	157	;# 
  5171     009E                     ADCON1          equ	158	;# 
  5172     009F                     ADACT           equ	159	;# 
  5173     010C                     LATA            equ	268	;# 
  5174     010D                     LATB            equ	269	;# 
  5175     010E                     LATC            equ	270	;# 
  5176     0111                     CM1CON0         equ	273	;# 
  5177     0112                     CM1CON1         equ	274	;# 
  5178     0113                     CM2CON0         equ	275	;# 
  5179     0114                     CM2CON1         equ	276	;# 
  5180     0115                     CMOUT           equ	277	;# 
  5181     0116                     BORCON          equ	278	;# 
  5182     0117                     FVRCON          equ	279	;# 
  5183     0118                     DACCON0         equ	280	;# 
  5184     0119                     DACCON1         equ	281	;# 
  5185     018C                     ANSELA          equ	396	;# 
  5186     018D                     ANSELB          equ	397	;# 
  5187     018E                     ANSELC          equ	398	;# 
  5188     0197                     VREGCON         equ	407	;# 
  5189     0199                     RC1REG          equ	409	;# 
  5190     0199                     RCREG           equ	409	;# 
  5191     0199                     RCREG1          equ	409	;# 
  5192     019A                     TX1REG          equ	410	;# 
  5193     019A                     TXREG1          equ	410	;# 
  5194     019A                     TXREG           equ	410	;# 
  5195     019B                     SP1BRG          equ	411	;# 
  5196     019B                     SPBRG           equ	411	;# 
  5197     019B                     SP1BRGL         equ	411	;# 
  5198     019B                     SPBRG1          equ	411	;# 
  5199     019B                     SPBRGL          equ	411	;# 
  5200     019C                     SP1BRGH         equ	412	;# 
  5201     019C                     SPBRGH          equ	412	;# 
  5202     019C                     SPBRGH1         equ	412	;# 
  5203     019D                     RC1STA          equ	413	;# 
  5204     019D                     RCSTA1          equ	413	;# 
  5205     019D                     RCSTA           equ	413	;# 
  5206     019E                     TX1STA          equ	414	;# 
  5207     019E                     TXSTA1          equ	414	;# 
  5208     019E                     TXSTA           equ	414	;# 
  5209     019F                     BAUD1CON        equ	415	;# 
  5210     019F                     BAUDCON1        equ	415	;# 
  5211     019F                     BAUDCTL1        equ	415	;# 
  5212     019F                     BAUDCON         equ	415	;# 
  5213     019F                     BAUDCTL         equ	415	;# 
  5214     020C                     WPUA            equ	524	;# 
  5215     020D                     WPUB            equ	525	;# 
  5216     020E                     WPUC            equ	526	;# 
  5217     0211                     SSP1BUF         equ	529	;# 
  5218     0211                     SSPBUF          equ	529	;# 
  5219     0212                     SSP1ADD         equ	530	;# 
  5220     0212                     SSPADD          equ	530	;# 
  5221     0213                     SSP1MSK         equ	531	;# 
  5222     0213                     SSPMSK          equ	531	;# 
  5223     0214                     SSP1STAT        equ	532	;# 
  5224     0214                     SSPSTAT         equ	532	;# 
  5225     0215                     SSP1CON1        equ	533	;# 
  5226     0215                     SSPCON          equ	533	;# 
  5227     0215                     SSPCON1         equ	533	;# 
  5228     0215                     SSP1CON         equ	533	;# 
  5229     0216                     SSP1CON2        equ	534	;# 
  5230     0216                     SSPCON2         equ	534	;# 
  5231     0217                     SSP1CON3        equ	535	;# 
  5232     0217                     SSPCON3         equ	535	;# 
  5233     0219                     SSP2BUF         equ	537	;# 
  5234     021A                     SSP2ADD         equ	538	;# 
  5235     021B                     SSP2MSK         equ	539	;# 
  5236     021C                     SSP2STAT        equ	540	;# 
  5237     021D                     SSP2CON1        equ	541	;# 
  5238     021D                     SSP2CON         equ	541	;# 
  5239     021E                     SSP2CON2        equ	542	;# 
  5240     021F                     SSP2CON3        equ	543	;# 
  5241     028C                     ODCONA          equ	652	;# 
  5242     028D                     ODCONB          equ	653	;# 
  5243     028E                     ODCONC          equ	654	;# 
  5244     0291                     CCPR1           equ	657	;# 
  5245     0291                     CCPR1L          equ	657	;# 
  5246     0292                     CCPR1H          equ	658	;# 
  5247     0293                     CCP1CON         equ	659	;# 
  5248     0294                     CCP1CAP         equ	660	;# 
  5249     0295                     CCPR2           equ	661	;# 
  5250     0295                     CCPR2L          equ	661	;# 
  5251     0296                     CCPR2H          equ	662	;# 
  5252     0297                     CCP2CON         equ	663	;# 
  5253     0298                     CCP2CAP         equ	664	;# 
  5254     029F                     CCPTMRS         equ	671	;# 
  5255     030C                     SLRCONA         equ	780	;# 
  5256     030D                     SLRCONB         equ	781	;# 
  5257     030E                     SLRCONC         equ	782	;# 
  5258     0311                     CCPR3           equ	785	;# 
  5259     0311                     CCPR3L          equ	785	;# 
  5260     0312                     CCPR3H          equ	786	;# 
  5261     0313                     CCP3CON         equ	787	;# 
  5262     0314                     CCP3CAP         equ	788	;# 
  5263     0315                     CCPR4           equ	789	;# 
  5264     0315                     CCPR4L          equ	789	;# 
  5265     0316                     CCPR4H          equ	790	;# 
  5266     0317                     CCP4CON         equ	791	;# 
  5267     0318                     CCP4CAP         equ	792	;# 
  5268     038C                     INLVLA          equ	908	;# 
  5269     038D                     INLVLB          equ	909	;# 
  5270     038E                     INLVLC          equ	910	;# 
  5271     0391                     IOCAP           equ	913	;# 
  5272     0392                     IOCAN           equ	914	;# 
  5273     0393                     IOCAF           equ	915	;# 
  5274     0394                     IOCBP           equ	916	;# 
  5275     0395                     IOCBN           equ	917	;# 
  5276     0396                     IOCBF           equ	918	;# 
  5277     0397                     IOCCP           equ	919	;# 
  5278     0398                     IOCCN           equ	920	;# 
  5279     0399                     IOCCF           equ	921	;# 
  5280     039A                     CLKRCON         equ	922	;# 
  5281     039C                     MDCON           equ	924	;# 
  5282     039D                     MDSRC           equ	925	;# 
  5283     039E                     MDCARH          equ	926	;# 
  5284     039F                     MDCARL          equ	927	;# 
  5285     0411                     TMR3            equ	1041	;# 
  5286     0411                     TMR3L           equ	1041	;# 
  5287     0412                     TMR3H           equ	1042	;# 
  5288     0413                     T3CON           equ	1043	;# 
  5289     0414                     T3GCON          equ	1044	;# 
  5290     0415                     TMR4            equ	1045	;# 
  5291     0416                     PR4             equ	1046	;# 
  5292     0417                     T4CON           equ	1047	;# 
  5293     0418                     TMR5            equ	1048	;# 
  5294     0418                     TMR5L           equ	1048	;# 
  5295     0419                     TMR5H           equ	1049	;# 
  5296     041A                     T5CON           equ	1050	;# 
  5297     041B                     T5GCON          equ	1051	;# 
  5298     041C                     TMR6            equ	1052	;# 
  5299     041D                     PR6             equ	1053	;# 
  5300     041E                     T6CON           equ	1054	;# 
  5301     041F                     CCDCON          equ	1055	;# 
  5302     0498                     NCO1ACC         equ	1176	;# 
  5303     0498                     NCO1ACCL        equ	1176	;# 
  5304     0499                     NCO1ACCH        equ	1177	;# 
  5305     049A                     NCO1ACCU        equ	1178	;# 
  5306     049B                     NCO1INC         equ	1179	;# 
  5307     049B                     NCO1INCL        equ	1179	;# 
  5308     049C                     NCO1INCH        equ	1180	;# 
  5309     049D                     NCO1INCU        equ	1181	;# 
  5310     049E                     NCO1CON         equ	1182	;# 
  5311     049F                     NCO1CLK         equ	1183	;# 
  5312     0617                     PWM5DCL         equ	1559	;# 
  5313     0618                     PWM5DCH         equ	1560	;# 
  5314     0619                     PWM5CON         equ	1561	;# 
  5315     0619                     PWM5CON0        equ	1561	;# 
  5316     061A                     PWM6DCL         equ	1562	;# 
  5317     061B                     PWM6DCH         equ	1563	;# 
  5318     061C                     PWM6CON         equ	1564	;# 
  5319     061C                     PWM6CON0        equ	1564	;# 
  5320     061F                     PWMTMRS         equ	1567	;# 
  5321     0691                     CWG1CLKCON      equ	1681	;# 
  5322     0692                     CWG1DAT         equ	1682	;# 
  5323     0693                     CWG1DBR         equ	1683	;# 
  5324     0694                     CWG1DBF         equ	1684	;# 
  5325     0695                     CWG1CON0        equ	1685	;# 
  5326     0696                     CWG1CON1        equ	1686	;# 
  5327     0697                     CWG1AS0         equ	1687	;# 
  5328     0698                     CWG1AS1         equ	1688	;# 
  5329     0699                     CWG1STR         equ	1689	;# 
  5330     0711                     CWG2CLKCON      equ	1809	;# 
  5331     0712                     CWG2DAT         equ	1810	;# 
  5332     0713                     CWG2DBR         equ	1811	;# 
  5333     0714                     CWG2DBF         equ	1812	;# 
  5334     0715                     CWG2CON0        equ	1813	;# 
  5335     0716                     CWG2CON1        equ	1814	;# 
  5336     0717                     CWG2AS0         equ	1815	;# 
  5337     0718                     CWG2AS1         equ	1816	;# 
  5338     0719                     CWG2STR         equ	1817	;# 
  5339     0891                     NVMADR          equ	2193	;# 
  5340     0891                     EEADR           equ	2193	;# 
  5341     0891                     PMADR           equ	2193	;# 
  5342     0891                     NVMADRL         equ	2193	;# 
  5343     0891                     EEADRL          equ	2193	;# 
  5344     0891                     PMADRL          equ	2193	;# 
  5345     0892                     NVMADRH         equ	2194	;# 
  5346     0892                     EEADRH          equ	2194	;# 
  5347     0892                     PMADRH          equ	2194	;# 
  5348     0893                     NVMDAT          equ	2195	;# 
  5349     0893                     EEDAT           equ	2195	;# 
  5350     0893                     PMDAT           equ	2195	;# 
  5351     0893                     NVMDATL         equ	2195	;# 
  5352     0893                     EEDATL          equ	2195	;# 
  5353     0893                     PMDATL          equ	2195	;# 
  5354     0894                     NVMDATH         equ	2196	;# 
  5355     0894                     EEDATH          equ	2196	;# 
  5356     0894                     PMDATH          equ	2196	;# 
  5357     0895                     NVMCON1         equ	2197	;# 
  5358     0895                     EECON1          equ	2197	;# 
  5359     0895                     PMCON1          equ	2197	;# 
  5360     0896                     NVMCON2         equ	2198	;# 
  5361     0896                     EECON2          equ	2198	;# 
  5362     0896                     PMCON2          equ	2198	;# 
  5363     089B                     PCON0           equ	2203	;# 
  5364     0911                     PMD0            equ	2321	;# 
  5365     0912                     PMD1            equ	2322	;# 
  5366     0913                     PMD2            equ	2323	;# 
  5367     0914                     PMD3            equ	2324	;# 
  5368     0915                     PMD4            equ	2325	;# 
  5369     0916                     PMD5            equ	2326	;# 
  5370     0918                     CPUDOZE         equ	2328	;# 
  5371     0919                     OSCCON1         equ	2329	;# 
  5372     091A                     OSCCON2         equ	2330	;# 
  5373     091B                     OSCCON3         equ	2331	;# 
  5374     091C                     OSCSTAT1        equ	2332	;# 
  5375     091D                     OSCEN           equ	2333	;# 
  5376     091E                     OSCTUNE         equ	2334	;# 
  5377     091F                     OSCFRQ          equ	2335	;# 
  5378     0E0F                     PPSLOCK         equ	3599	;# 
  5379     0E10                     INTPPS          equ	3600	;# 
  5380     0E11                     T0CKIPPS        equ	3601	;# 
  5381     0E12                     T1CKIPPS        equ	3602	;# 
  5382     0E13                     T1GPPS          equ	3603	;# 
  5383     0E14                     CCP1PPS         equ	3604	;# 
  5384     0E15                     CCP2PPS         equ	3605	;# 
  5385     0E16                     CCP3PPS         equ	3606	;# 
  5386     0E17                     CCP4PPS         equ	3607	;# 
  5387     0E18                     CWG1PPS         equ	3608	;# 
  5388     0E19                     CWG2PPS         equ	3609	;# 
  5389     0E1A                     MDCIN1PPS       equ	3610	;# 
  5390     0E1B                     MDCIN2PPS       equ	3611	;# 
  5391     0E1C                     MDMINPPS        equ	3612	;# 
  5392     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5393     0E1E                     SSP2DATPPS      equ	3614	;# 
  5394     0E1F                     SSP2SSPPS       equ	3615	;# 
  5395     0E20                     SSP1CLKPPS      equ	3616	;# 
  5396     0E21                     SSP1DATPPS      equ	3617	;# 
  5397     0E22                     SSP1SSPPS       equ	3618	;# 
  5398     0E24                     RXPPS           equ	3620	;# 
  5399     0E25                     TXPPS           equ	3621	;# 
  5400     0E28                     CLCIN0PPS       equ	3624	;# 
  5401     0E29                     CLCIN1PPS       equ	3625	;# 
  5402     0E2A                     CLCIN2PPS       equ	3626	;# 
  5403     0E2B                     CLCIN3PPS       equ	3627	;# 
  5404     0E2C                     T3CKIPPS        equ	3628	;# 
  5405     0E2D                     T3GPPS          equ	3629	;# 
  5406     0E2E                     T5CKIPPS        equ	3630	;# 
  5407     0E2F                     T5GPPS          equ	3631	;# 
  5408     0E90                     RA0PPS          equ	3728	;# 
  5409     0E91                     RA1PPS          equ	3729	;# 
  5410     0E92                     RA2PPS          equ	3730	;# 
  5411     0E94                     RA4PPS          equ	3732	;# 
  5412     0E95                     RA5PPS          equ	3733	;# 
  5413     0E9C                     RB4PPS          equ	3740	;# 
  5414     0E9D                     RB5PPS          equ	3741	;# 
  5415     0E9E                     RB6PPS          equ	3742	;# 
  5416     0E9F                     RB7PPS          equ	3743	;# 
  5417     0EA0                     RC0PPS          equ	3744	;# 
  5418     0EA1                     RC1PPS          equ	3745	;# 
  5419     0EA2                     RC2PPS          equ	3746	;# 
  5420     0EA3                     RC3PPS          equ	3747	;# 
  5421     0EA4                     RC4PPS          equ	3748	;# 
  5422     0EA5                     RC5PPS          equ	3749	;# 
  5423     0EA6                     RC6PPS          equ	3750	;# 
  5424     0EA7                     RC7PPS          equ	3751	;# 
  5425     0F0F                     CLCDATA         equ	3855	;# 
  5426     0F10                     CLC1CON         equ	3856	;# 
  5427     0F11                     CLC1POL         equ	3857	;# 
  5428     0F12                     CLC1SEL0        equ	3858	;# 
  5429     0F13                     CLC1SEL1        equ	3859	;# 
  5430     0F14                     CLC1SEL2        equ	3860	;# 
  5431     0F15                     CLC1SEL3        equ	3861	;# 
  5432     0F16                     CLC1GLS0        equ	3862	;# 
  5433     0F17                     CLC1GLS1        equ	3863	;# 
  5434     0F18                     CLC1GLS2        equ	3864	;# 
  5435     0F19                     CLC1GLS3        equ	3865	;# 
  5436     0F1A                     CLC2CON         equ	3866	;# 
  5437     0F1B                     CLC2POL         equ	3867	;# 
  5438     0F1C                     CLC2SEL0        equ	3868	;# 
  5439     0F1D                     CLC2SEL1        equ	3869	;# 
  5440     0F1E                     CLC2SEL2        equ	3870	;# 
  5441     0F1F                     CLC2SEL3        equ	3871	;# 
  5442     0F20                     CLC2GLS0        equ	3872	;# 
  5443     0F21                     CLC2GLS1        equ	3873	;# 
  5444     0F22                     CLC2GLS2        equ	3874	;# 
  5445     0F23                     CLC2GLS3        equ	3875	;# 
  5446     0F24                     CLC3CON         equ	3876	;# 
  5447     0F25                     CLC3POL         equ	3877	;# 
  5448     0F26                     CLC3SEL0        equ	3878	;# 
  5449     0F27                     CLC3SEL1        equ	3879	;# 
  5450     0F28                     CLC3SEL2        equ	3880	;# 
  5451     0F29                     CLC3SEL3        equ	3881	;# 
  5452     0F2A                     CLC3GLS0        equ	3882	;# 
  5453     0F2B                     CLC3GLS1        equ	3883	;# 
  5454     0F2C                     CLC3GLS2        equ	3884	;# 
  5455     0F2D                     CLC3GLS3        equ	3885	;# 
  5456     0F2E                     CLC4CON         equ	3886	;# 
  5457     0F2F                     CLC4POL         equ	3887	;# 
  5458     0F30                     CLC4SEL0        equ	3888	;# 
  5459     0F31                     CLC4SEL1        equ	3889	;# 
  5460     0F32                     CLC4SEL2        equ	3890	;# 
  5461     0F33                     CLC4SEL3        equ	3891	;# 
  5462     0F34                     CLC4GLS0        equ	3892	;# 
  5463     0F35                     CLC4GLS1        equ	3893	;# 
  5464     0F36                     CLC4GLS2        equ	3894	;# 
  5465     0F37                     CLC4GLS3        equ	3895	;# 
  5466     0FE4                     STATUS_SHAD     equ	4068	;# 
  5467     0FE5                     WREG_SHAD       equ	4069	;# 
  5468     0FE6                     BSR_SHAD        equ	4070	;# 
  5469     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5470     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5471     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5472     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5473     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5474     0FED                     STKPTR          equ	4077	;# 
  5475     0FEE                     TOSL            equ	4078	;# 
  5476     0FEF                     TOSH            equ	4079	;# 
  5477     0000                     INDF0           equ	0	;# 
  5478     0001                     INDF1           equ	1	;# 
  5479     0002                     PCL             equ	2	;# 
  5480     0003                     STATUS          equ	3	;# 
  5481     0004                     FSR0L           equ	4	;# 
  5482     0005                     FSR0H           equ	5	;# 
  5483     0006                     FSR1L           equ	6	;# 
  5484     0007                     FSR1H           equ	7	;# 
  5485     0008                     BSR             equ	8	;# 
  5486     0009                     WREG            equ	9	;# 
  5487     000A                     PCLATH          equ	10	;# 
  5488     000B                     INTCON          equ	11	;# 
  5489     000C                     PORTA           equ	12	;# 
  5490     000D                     PORTB           equ	13	;# 
  5491     000E                     PORTC           equ	14	;# 
  5492     0010                     PIR0            equ	16	;# 
  5493     0011                     PIR1            equ	17	;# 
  5494     0012                     PIR2            equ	18	;# 
  5495     0013                     PIR3            equ	19	;# 
  5496     0014                     PIR4            equ	20	;# 
  5497     0015                     TMR0L           equ	21	;# 
  5498     0015                     TMR0            equ	21	;# 
  5499     0016                     TMR0H           equ	22	;# 
  5500     0016                     PR0             equ	22	;# 
  5501     0017                     T0CON0          equ	23	;# 
  5502     0018                     T0CON1          equ	24	;# 
  5503     0019                     TMR1            equ	25	;# 
  5504     0019                     TMR1L           equ	25	;# 
  5505     001A                     TMR1H           equ	26	;# 
  5506     001B                     T1CON           equ	27	;# 
  5507     001C                     T1GCON          equ	28	;# 
  5508     001D                     TMR2            equ	29	;# 
  5509     001E                     PR2             equ	30	;# 
  5510     001F                     T2CON           equ	31	;# 
  5511     008C                     TRISA           equ	140	;# 
  5512     008D                     TRISB           equ	141	;# 
  5513     008E                     TRISC           equ	142	;# 
  5514     0090                     PIE0            equ	144	;# 
  5515     0091                     PIE1            equ	145	;# 
  5516     0092                     PIE2            equ	146	;# 
  5517     0093                     PIE3            equ	147	;# 
  5518     0094                     PIE4            equ	148	;# 
  5519     0097                     WDTCON          equ	151	;# 
  5520     009B                     ADRES           equ	155	;# 
  5521     009B                     ADRESL          equ	155	;# 
  5522     009C                     ADRESH          equ	156	;# 
  5523     009D                     ADCON0          equ	157	;# 
  5524     009E                     ADCON1          equ	158	;# 
  5525     009F                     ADACT           equ	159	;# 
  5526     010C                     LATA            equ	268	;# 
  5527     010D                     LATB            equ	269	;# 
  5528     010E                     LATC            equ	270	;# 
  5529     0111                     CM1CON0         equ	273	;# 
  5530     0112                     CM1CON1         equ	274	;# 
  5531     0113                     CM2CON0         equ	275	;# 
  5532     0114                     CM2CON1         equ	276	;# 
  5533     0115                     CMOUT           equ	277	;# 
  5534     0116                     BORCON          equ	278	;# 
  5535     0117                     FVRCON          equ	279	;# 
  5536     0118                     DACCON0         equ	280	;# 
  5537     0119                     DACCON1         equ	281	;# 
  5538     018C                     ANSELA          equ	396	;# 
  5539     018D                     ANSELB          equ	397	;# 
  5540     018E                     ANSELC          equ	398	;# 
  5541     0197                     VREGCON         equ	407	;# 
  5542     0199                     RC1REG          equ	409	;# 
  5543     0199                     RCREG           equ	409	;# 
  5544     0199                     RCREG1          equ	409	;# 
  5545     019A                     TX1REG          equ	410	;# 
  5546     019A                     TXREG1          equ	410	;# 
  5547     019A                     TXREG           equ	410	;# 
  5548     019B                     SP1BRG          equ	411	;# 
  5549     019B                     SPBRG           equ	411	;# 
  5550     019B                     SP1BRGL         equ	411	;# 
  5551     019B                     SPBRG1          equ	411	;# 
  5552     019B                     SPBRGL          equ	411	;# 
  5553     019C                     SP1BRGH         equ	412	;# 
  5554     019C                     SPBRGH          equ	412	;# 
  5555     019C                     SPBRGH1         equ	412	;# 
  5556     019D                     RC1STA          equ	413	;# 
  5557     019D                     RCSTA1          equ	413	;# 
  5558     019D                     RCSTA           equ	413	;# 
  5559     019E                     TX1STA          equ	414	;# 
  5560     019E                     TXSTA1          equ	414	;# 
  5561     019E                     TXSTA           equ	414	;# 
  5562     019F                     BAUD1CON        equ	415	;# 
  5563     019F                     BAUDCON1        equ	415	;# 
  5564     019F                     BAUDCTL1        equ	415	;# 
  5565     019F                     BAUDCON         equ	415	;# 
  5566     019F                     BAUDCTL         equ	415	;# 
  5567     020C                     WPUA            equ	524	;# 
  5568     020D                     WPUB            equ	525	;# 
  5569     020E                     WPUC            equ	526	;# 
  5570     0211                     SSP1BUF         equ	529	;# 
  5571     0211                     SSPBUF          equ	529	;# 
  5572     0212                     SSP1ADD         equ	530	;# 
  5573     0212                     SSPADD          equ	530	;# 
  5574     0213                     SSP1MSK         equ	531	;# 
  5575     0213                     SSPMSK          equ	531	;# 
  5576     0214                     SSP1STAT        equ	532	;# 
  5577     0214                     SSPSTAT         equ	532	;# 
  5578     0215                     SSP1CON1        equ	533	;# 
  5579     0215                     SSPCON          equ	533	;# 
  5580     0215                     SSPCON1         equ	533	;# 
  5581     0215                     SSP1CON         equ	533	;# 
  5582     0216                     SSP1CON2        equ	534	;# 
  5583     0216                     SSPCON2         equ	534	;# 
  5584     0217                     SSP1CON3        equ	535	;# 
  5585     0217                     SSPCON3         equ	535	;# 
  5586     0219                     SSP2BUF         equ	537	;# 
  5587     021A                     SSP2ADD         equ	538	;# 
  5588     021B                     SSP2MSK         equ	539	;# 
  5589     021C                     SSP2STAT        equ	540	;# 
  5590     021D                     SSP2CON1        equ	541	;# 
  5591     021D                     SSP2CON         equ	541	;# 
  5592     021E                     SSP2CON2        equ	542	;# 
  5593     021F                     SSP2CON3        equ	543	;# 
  5594     028C                     ODCONA          equ	652	;# 
  5595     028D                     ODCONB          equ	653	;# 
  5596     028E                     ODCONC          equ	654	;# 
  5597     0291                     CCPR1           equ	657	;# 
  5598     0291                     CCPR1L          equ	657	;# 
  5599     0292                     CCPR1H          equ	658	;# 
  5600     0293                     CCP1CON         equ	659	;# 
  5601     0294                     CCP1CAP         equ	660	;# 
  5602     0295                     CCPR2           equ	661	;# 
  5603     0295                     CCPR2L          equ	661	;# 
  5604     0296                     CCPR2H          equ	662	;# 
  5605     0297                     CCP2CON         equ	663	;# 
  5606     0298                     CCP2CAP         equ	664	;# 
  5607     029F                     CCPTMRS         equ	671	;# 
  5608     030C                     SLRCONA         equ	780	;# 
  5609     030D                     SLRCONB         equ	781	;# 
  5610     030E                     SLRCONC         equ	782	;# 
  5611     0311                     CCPR3           equ	785	;# 
  5612     0311                     CCPR3L          equ	785	;# 
  5613     0312                     CCPR3H          equ	786	;# 
  5614     0313                     CCP3CON         equ	787	;# 
  5615     0314                     CCP3CAP         equ	788	;# 
  5616     0315                     CCPR4           equ	789	;# 
  5617     0315                     CCPR4L          equ	789	;# 
  5618     0316                     CCPR4H          equ	790	;# 
  5619     0317                     CCP4CON         equ	791	;# 
  5620     0318                     CCP4CAP         equ	792	;# 
  5621     038C                     INLVLA          equ	908	;# 
  5622     038D                     INLVLB          equ	909	;# 
  5623     038E                     INLVLC          equ	910	;# 
  5624     0391                     IOCAP           equ	913	;# 
  5625     0392                     IOCAN           equ	914	;# 
  5626     0393                     IOCAF           equ	915	;# 
  5627     0394                     IOCBP           equ	916	;# 
  5628     0395                     IOCBN           equ	917	;# 
  5629     0396                     IOCBF           equ	918	;# 
  5630     0397                     IOCCP           equ	919	;# 
  5631     0398                     IOCCN           equ	920	;# 
  5632     0399                     IOCCF           equ	921	;# 
  5633     039A                     CLKRCON         equ	922	;# 
  5634     039C                     MDCON           equ	924	;# 
  5635     039D                     MDSRC           equ	925	;# 
  5636     039E                     MDCARH          equ	926	;# 
  5637     039F                     MDCARL          equ	927	;# 
  5638     0411                     TMR3            equ	1041	;# 
  5639     0411                     TMR3L           equ	1041	;# 
  5640     0412                     TMR3H           equ	1042	;# 
  5641     0413                     T3CON           equ	1043	;# 
  5642     0414                     T3GCON          equ	1044	;# 
  5643     0415                     TMR4            equ	1045	;# 
  5644     0416                     PR4             equ	1046	;# 
  5645     0417                     T4CON           equ	1047	;# 
  5646     0418                     TMR5            equ	1048	;# 
  5647     0418                     TMR5L           equ	1048	;# 
  5648     0419                     TMR5H           equ	1049	;# 
  5649     041A                     T5CON           equ	1050	;# 
  5650     041B                     T5GCON          equ	1051	;# 
  5651     041C                     TMR6            equ	1052	;# 
  5652     041D                     PR6             equ	1053	;# 
  5653     041E                     T6CON           equ	1054	;# 
  5654     041F                     CCDCON          equ	1055	;# 
  5655     0498                     NCO1ACC         equ	1176	;# 
  5656     0498                     NCO1ACCL        equ	1176	;# 
  5657     0499                     NCO1ACCH        equ	1177	;# 
  5658     049A                     NCO1ACCU        equ	1178	;# 
  5659     049B                     NCO1INC         equ	1179	;# 
  5660     049B                     NCO1INCL        equ	1179	;# 
  5661     049C                     NCO1INCH        equ	1180	;# 
  5662     049D                     NCO1INCU        equ	1181	;# 
  5663     049E                     NCO1CON         equ	1182	;# 
  5664     049F                     NCO1CLK         equ	1183	;# 
  5665     0617                     PWM5DCL         equ	1559	;# 
  5666     0618                     PWM5DCH         equ	1560	;# 
  5667     0619                     PWM5CON         equ	1561	;# 
  5668     0619                     PWM5CON0        equ	1561	;# 
  5669     061A                     PWM6DCL         equ	1562	;# 
  5670     061B                     PWM6DCH         equ	1563	;# 
  5671     061C                     PWM6CON         equ	1564	;# 
  5672     061C                     PWM6CON0        equ	1564	;# 
  5673     061F                     PWMTMRS         equ	1567	;# 
  5674     0691                     CWG1CLKCON      equ	1681	;# 
  5675     0692                     CWG1DAT         equ	1682	;# 
  5676     0693                     CWG1DBR         equ	1683	;# 
  5677     0694                     CWG1DBF         equ	1684	;# 
  5678     0695                     CWG1CON0        equ	1685	;# 
  5679     0696                     CWG1CON1        equ	1686	;# 
  5680     0697                     CWG1AS0         equ	1687	;# 
  5681     0698                     CWG1AS1         equ	1688	;# 
  5682     0699                     CWG1STR         equ	1689	;# 
  5683     0711                     CWG2CLKCON      equ	1809	;# 
  5684     0712                     CWG2DAT         equ	1810	;# 
  5685     0713                     CWG2DBR         equ	1811	;# 
  5686     0714                     CWG2DBF         equ	1812	;# 
  5687     0715                     CWG2CON0        equ	1813	;# 
  5688     0716                     CWG2CON1        equ	1814	;# 
  5689     0717                     CWG2AS0         equ	1815	;# 
  5690     0718                     CWG2AS1         equ	1816	;# 
  5691     0719                     CWG2STR         equ	1817	;# 
  5692     0891                     NVMADR          equ	2193	;# 
  5693     0891                     EEADR           equ	2193	;# 
  5694     0891                     PMADR           equ	2193	;# 
  5695     0891                     NVMADRL         equ	2193	;# 
  5696     0891                     EEADRL          equ	2193	;# 
  5697     0891                     PMADRL          equ	2193	;# 
  5698     0892                     NVMADRH         equ	2194	;# 
  5699     0892                     EEADRH          equ	2194	;# 
  5700     0892                     PMADRH          equ	2194	;# 
  5701     0893                     NVMDAT          equ	2195	;# 
  5702     0893                     EEDAT           equ	2195	;# 
  5703     0893                     PMDAT           equ	2195	;# 
  5704     0893                     NVMDATL         equ	2195	;# 
  5705     0893                     EEDATL          equ	2195	;# 
  5706     0893                     PMDATL          equ	2195	;# 
  5707     0894                     NVMDATH         equ	2196	;# 
  5708     0894                     EEDATH          equ	2196	;# 
  5709     0894                     PMDATH          equ	2196	;# 
  5710     0895                     NVMCON1         equ	2197	;# 
  5711     0895                     EECON1          equ	2197	;# 
  5712     0895                     PMCON1          equ	2197	;# 
  5713     0896                     NVMCON2         equ	2198	;# 
  5714     0896                     EECON2          equ	2198	;# 
  5715     0896                     PMCON2          equ	2198	;# 
  5716     089B                     PCON0           equ	2203	;# 
  5717     0911                     PMD0            equ	2321	;# 
  5718     0912                     PMD1            equ	2322	;# 
  5719     0913                     PMD2            equ	2323	;# 
  5720     0914                     PMD3            equ	2324	;# 
  5721     0915                     PMD4            equ	2325	;# 
  5722     0916                     PMD5            equ	2326	;# 
  5723     0918                     CPUDOZE         equ	2328	;# 
  5724     0919                     OSCCON1         equ	2329	;# 
  5725     091A                     OSCCON2         equ	2330	;# 
  5726     091B                     OSCCON3         equ	2331	;# 
  5727     091C                     OSCSTAT1        equ	2332	;# 
  5728     091D                     OSCEN           equ	2333	;# 
  5729     091E                     OSCTUNE         equ	2334	;# 
  5730     091F                     OSCFRQ          equ	2335	;# 
  5731     0E0F                     PPSLOCK         equ	3599	;# 
  5732     0E10                     INTPPS          equ	3600	;# 
  5733     0E11                     T0CKIPPS        equ	3601	;# 
  5734     0E12                     T1CKIPPS        equ	3602	;# 
  5735     0E13                     T1GPPS          equ	3603	;# 
  5736     0E14                     CCP1PPS         equ	3604	;# 
  5737     0E15                     CCP2PPS         equ	3605	;# 
  5738     0E16                     CCP3PPS         equ	3606	;# 
  5739     0E17                     CCP4PPS         equ	3607	;# 
  5740     0E18                     CWG1PPS         equ	3608	;# 
  5741     0E19                     CWG2PPS         equ	3609	;# 
  5742     0E1A                     MDCIN1PPS       equ	3610	;# 
  5743     0E1B                     MDCIN2PPS       equ	3611	;# 
  5744     0E1C                     MDMINPPS        equ	3612	;# 
  5745     0E1D                     SSP2CLKPPS      equ	3613	;# 
  5746     0E1E                     SSP2DATPPS      equ	3614	;# 
  5747     0E1F                     SSP2SSPPS       equ	3615	;# 
  5748     0E20                     SSP1CLKPPS      equ	3616	;# 
  5749     0E21                     SSP1DATPPS      equ	3617	;# 
  5750     0E22                     SSP1SSPPS       equ	3618	;# 
  5751     0E24                     RXPPS           equ	3620	;# 
  5752     0E25                     TXPPS           equ	3621	;# 
  5753     0E28                     CLCIN0PPS       equ	3624	;# 
  5754     0E29                     CLCIN1PPS       equ	3625	;# 
  5755     0E2A                     CLCIN2PPS       equ	3626	;# 
  5756     0E2B                     CLCIN3PPS       equ	3627	;# 
  5757     0E2C                     T3CKIPPS        equ	3628	;# 
  5758     0E2D                     T3GPPS          equ	3629	;# 
  5759     0E2E                     T5CKIPPS        equ	3630	;# 
  5760     0E2F                     T5GPPS          equ	3631	;# 
  5761     0E90                     RA0PPS          equ	3728	;# 
  5762     0E91                     RA1PPS          equ	3729	;# 
  5763     0E92                     RA2PPS          equ	3730	;# 
  5764     0E94                     RA4PPS          equ	3732	;# 
  5765     0E95                     RA5PPS          equ	3733	;# 
  5766     0E9C                     RB4PPS          equ	3740	;# 
  5767     0E9D                     RB5PPS          equ	3741	;# 
  5768     0E9E                     RB6PPS          equ	3742	;# 
  5769     0E9F                     RB7PPS          equ	3743	;# 
  5770     0EA0                     RC0PPS          equ	3744	;# 
  5771     0EA1                     RC1PPS          equ	3745	;# 
  5772     0EA2                     RC2PPS          equ	3746	;# 
  5773     0EA3                     RC3PPS          equ	3747	;# 
  5774     0EA4                     RC4PPS          equ	3748	;# 
  5775     0EA5                     RC5PPS          equ	3749	;# 
  5776     0EA6                     RC6PPS          equ	3750	;# 
  5777     0EA7                     RC7PPS          equ	3751	;# 
  5778     0F0F                     CLCDATA         equ	3855	;# 
  5779     0F10                     CLC1CON         equ	3856	;# 
  5780     0F11                     CLC1POL         equ	3857	;# 
  5781     0F12                     CLC1SEL0        equ	3858	;# 
  5782     0F13                     CLC1SEL1        equ	3859	;# 
  5783     0F14                     CLC1SEL2        equ	3860	;# 
  5784     0F15                     CLC1SEL3        equ	3861	;# 
  5785     0F16                     CLC1GLS0        equ	3862	;# 
  5786     0F17                     CLC1GLS1        equ	3863	;# 
  5787     0F18                     CLC1GLS2        equ	3864	;# 
  5788     0F19                     CLC1GLS3        equ	3865	;# 
  5789     0F1A                     CLC2CON         equ	3866	;# 
  5790     0F1B                     CLC2POL         equ	3867	;# 
  5791     0F1C                     CLC2SEL0        equ	3868	;# 
  5792     0F1D                     CLC2SEL1        equ	3869	;# 
  5793     0F1E                     CLC2SEL2        equ	3870	;# 
  5794     0F1F                     CLC2SEL3        equ	3871	;# 
  5795     0F20                     CLC2GLS0        equ	3872	;# 
  5796     0F21                     CLC2GLS1        equ	3873	;# 
  5797     0F22                     CLC2GLS2        equ	3874	;# 
  5798     0F23                     CLC2GLS3        equ	3875	;# 
  5799     0F24                     CLC3CON         equ	3876	;# 
  5800     0F25                     CLC3POL         equ	3877	;# 
  5801     0F26                     CLC3SEL0        equ	3878	;# 
  5802     0F27                     CLC3SEL1        equ	3879	;# 
  5803     0F28                     CLC3SEL2        equ	3880	;# 
  5804     0F29                     CLC3SEL3        equ	3881	;# 
  5805     0F2A                     CLC3GLS0        equ	3882	;# 
  5806     0F2B                     CLC3GLS1        equ	3883	;# 
  5807     0F2C                     CLC3GLS2        equ	3884	;# 
  5808     0F2D                     CLC3GLS3        equ	3885	;# 
  5809     0F2E                     CLC4CON         equ	3886	;# 
  5810     0F2F                     CLC4POL         equ	3887	;# 
  5811     0F30                     CLC4SEL0        equ	3888	;# 
  5812     0F31                     CLC4SEL1        equ	3889	;# 
  5813     0F32                     CLC4SEL2        equ	3890	;# 
  5814     0F33                     CLC4SEL3        equ	3891	;# 
  5815     0F34                     CLC4GLS0        equ	3892	;# 
  5816     0F35                     CLC4GLS1        equ	3893	;# 
  5817     0F36                     CLC4GLS2        equ	3894	;# 
  5818     0F37                     CLC4GLS3        equ	3895	;# 
  5819     0FE4                     STATUS_SHAD     equ	4068	;# 
  5820     0FE5                     WREG_SHAD       equ	4069	;# 
  5821     0FE6                     BSR_SHAD        equ	4070	;# 
  5822     0FE7                     PCLATH_SHAD     equ	4071	;# 
  5823     0FE8                     FSR0L_SHAD      equ	4072	;# 
  5824     0FE9                     FSR0H_SHAD      equ	4073	;# 
  5825     0FEA                     FSR1L_SHAD      equ	4074	;# 
  5826     0FEB                     FSR1H_SHAD      equ	4075	;# 
  5827     0FED                     STKPTR          equ	4077	;# 
  5828     0FEE                     TOSL            equ	4078	;# 
  5829     0FEF                     TOSH            equ	4079	;# 
  5830                           
  5831 ;; Function _SPI1_Deinitialize is unused but had its address taken
  5832     0000                     _SPI1_Deinitialize equ	0
  5833                           
  5834 ;; Function _SPI1_Close is unused but had its address taken
  5835     0000                     _SPI1_Close     equ	0
  5836                           
  5837 ;; Function _SPI1_BufferExchange is unused but had its address taken
  5838     0000                     _SPI1_BufferExchange equ	0
  5839                           
  5840 ;; Function _SPI1_BufferWrite is unused but had its address taken
  5841     0000                     _SPI1_BufferWrite equ	0
  5842                           
  5843 ;; Function _SPI1_BufferRead is unused but had its address taken
  5844     0000                     _SPI1_BufferRead equ	0
  5845                           
  5846 ;; Function _SPI1_ByteWrite is unused but had its address taken
  5847     0000                     _SPI1_ByteWrite equ	0
  5848                           
  5849 ;; Function _SPI1_ByteRead is unused but had its address taken
  5850     0000                     _SPI1_ByteRead  equ	0
  5851                           
  5852 ;; Function _SPI1_IsRxReady is unused but had its address taken
  5853     0000                     _SPI1_IsRxReady equ	0
  5854                           
  5855 ;; Function _SPI1_IsTxReady is unused but had its address taken
  5856     0000                     _SPI1_IsTxReady equ	0
  5857                           
  5858 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  5859     0000                     _INT_DefaultInterruptHandler equ	0
  5860                           
  5861 ;; Function _EUSART_Deinitialize is unused but had its address taken
  5862     0000                     _EUSART_Deinitialize equ	0
  5863                           
  5864 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  5865     0000                     _EUSART_TransmitEnable equ	0
  5866                           
  5867 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  5868     0000                     _EUSART_TransmitDisable equ	0
  5869                           
  5870 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  5871     0000                     _EUSART_AutoBaudSet equ	0
  5872                           
  5873 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  5874     0000                     _EUSART_AutoBaudQuery equ	0
  5875                           
  5876 ;; Function _EUSART_IsTxDone is unused but had its address taken
  5877     0000                     _EUSART_IsTxDone equ	0
  5878                           
  5879 ;; Function _EUSART_ErrorGet is unused but had its address taken
  5880     0000                     _EUSART_ErrorGet equ	0
  5881                           
  5882 ;; Function _EUSART_RxCompleteCallbackRegister is unused but had its address taken
  5883     0000                     _EUSART_RxCompleteCallbackRegister equ	0
  5884                           
  5885 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  5886     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  5887                           
  5888                           	psect	idataBANK0
  5889     0801                     __pidataBANK0:
  5890                           
  5891                           ;initializer for _setpoint
  5892     0801  34C2               	retlw	194
  5893     0802  3401               	retlw	1
  5894                           
  5895                           ;initializer for _mustPrintLogs
  5896     0803  3401               	retlw	1
  5897                           
  5898                           ;initializer for adcConversionDoneHandler@new_channel
  5899     0804  3410               	retlw	16
  5900                           
  5901                           	psect	idataBANK2
  5902     1BCD                     __pidataBANK2:
  5903                           
  5904                           ;initializer for _ki
  5905     1BCD  3400               	retlw	0
  5906     1BCE  3400               	retlw	0
  5907     1BCF  34A0               	retlw	160
  5908     1BD0  3440               	retlw	64
  5909                           
  5910                           ;initializer for _kp
  5911     1BD1  3466               	retlw	102
  5912     1BD2  3466               	retlw	102
  5913     1BD3  3466               	retlw	102
  5914     1BD4  343F               	retlw	63
  5915                           
  5916                           	psect	stringtext1
  5917     1800                     __pstringtext1:
  5918     1800                     _UART1:
  5919     1800  3406               	retlw	low _EUSART_Initialize
  5920     1801  3410               	retlw	high _EUSART_Initialize
  5921     1802  3400               	retlw	0
  5922     1803  3400               	retlw	0
  5923     1804  34A9               	retlw	low _EUSART_Read
  5924     1805  341E               	retlw	high _EUSART_Read
  5925     1806  3434               	retlw	low _EUSART_Write
  5926     1807  341F               	retlw	high _EUSART_Write
  5927     1808  342F               	retlw	low _EUSART_IsRxReady
  5928     1809  341C               	retlw	high _EUSART_IsRxReady
  5929     180A  3426               	retlw	low _EUSART_IsTxReady
  5930     180B  341C               	retlw	high _EUSART_IsTxReady
  5931     180C  3400               	retlw	0
  5932     180D  3400               	retlw	0
  5933     180E  3400               	retlw	0
  5934     180F  3400               	retlw	0
  5935     1810  3400               	retlw	0
  5936     1811  3400               	retlw	0
  5937     1812  3400               	retlw	0
  5938     1813  3400               	retlw	0
  5939     1814  3400               	retlw	0
  5940     1815  3400               	retlw	0
  5941     1816  3400               	retlw	0
  5942     1817  3400               	retlw	0
  5943     1818  3400               	retlw	0
  5944     1819  3400               	retlw	0
  5945     181A  3400               	retlw	0
  5946     181B  3400               	retlw	0
  5947     181C  3400               	retlw	0
  5948     181D  3400               	retlw	0
  5949     181E  3400               	retlw	0
  5950     181F  3400               	retlw	0
  5951     1820  3400               	retlw	0
  5952     1821  3400               	retlw	0
  5953     1822  3400               	retlw	0
  5954     1823  3400               	retlw	0
  5955     1824  3400               	retlw	0
  5956     1825  3400               	retlw	0
  5957     1826  3400               	retlw	0
  5958     1827  3400               	retlw	0
  5959     1828  34E4               	retlw	low _EUSART_FramingErrorCallbackRegister
  5960     1829  341C               	retlw	high _EUSART_FramingErrorCallbackRegister
  5961     182A  34F3               	retlw	low _EUSART_OverrunErrorCallbackRegister
  5962     182B  341C               	retlw	high _EUSART_OverrunErrorCallbackRegister
  5963     182C  3400               	retlw	0
  5964     182D  3400               	retlw	0
  5965     182E  3400               	retlw	0
  5966     182F  3400               	retlw	0
  5967     1830                     __end_of_UART1:
  5968                           
  5969                           	psect	stringtext2
  5970     1830                     __pstringtext2:
  5971     1830                     _ledstrip:
  5972     1830  3441               	retlw	low _SPI1_Initialize
  5973     1831  341C               	retlw	high _SPI1_Initialize
  5974     1832  3400               	retlw	0
  5975     1833  3400               	retlw	0
  5976     1834  3429               	retlw	low _SPI1_Open
  5977     1835  3414               	retlw	high _SPI1_Open
  5978     1836  3400               	retlw	0
  5979     1837  3400               	retlw	0
  5980     1838  3400               	retlw	0
  5981     1839  3400               	retlw	0
  5982     183A  3400               	retlw	0
  5983     183B  3400               	retlw	0
  5984     183C  3400               	retlw	0
  5985     183D  3400               	retlw	0
  5986     183E  348F               	retlw	low _SPI1_ByteExchange
  5987     183F  341C               	retlw	high _SPI1_ByteExchange
  5988     1840  3400               	retlw	0
  5989     1841  3400               	retlw	0
  5990     1842  3400               	retlw	0
  5991     1843  3400               	retlw	0
  5992     1844  3400               	retlw	0
  5993     1845  3400               	retlw	0
  5994     1846  3400               	retlw	0
  5995     1847  3400               	retlw	0
  5996     1848  3400               	retlw	0
  5997     1849  3400               	retlw	0
  5998     184A  3400               	retlw	0
  5999     184B  3400               	retlw	0
  6000     184C                     __end_of_ledstrip:
  6001                           
  6002                           	psect	stringtext3
  6003     18E2                     __pstringtext3:
  6004     18E2                     _spi1_configuration:
  6005     18E2  3440               	retlw	64
  6006     18E3  340A               	retlw	10
  6007     18E4  3410               	retlw	16
  6008     18E5  3407               	retlw	7
  6009     18E6  3400               	retlw	0
  6010     18E7  3464               	retlw	100
  6011     18E8  3400               	retlw	0
  6012     18E9  3410               	retlw	16
  6013     18EA  3401               	retlw	1
  6014     18EB  3400               	retlw	0
  6015     18EC                     __end_of_spi1_configuration:
  6016                           
  6017                           	psect	nvBANK2
  6018     015E                     __pnvBANK2:
  6019     015E                     _TMR6_PeriodMatchCallback:
  6020     015E                     	ds	2
  6021     0160                     _TMR4_PeriodMatchCallback:
  6022     0160                     	ds	2
  6023     0162                     _TMR2_PeriodMatchCallback:
  6024     0162                     	ds	2
  6025     0164                     _EUSART_TxInterruptHandler:
  6026     0164                     	ds	2
  6027     0166                     _ADC_InterruptHandler:
  6028     0166                     	ds	2
  6029                           
  6030                           	psect	nvBANK3
  6031     01D4                     __pnvBANK3:
  6032     01D4                     _EUSART_RxInterruptHandler:
  6033     01D4                     	ds	2
  6034     001F                     _T2CONbits      set	31
  6035     001F                     _T2CON          set	31
  6036     001D                     _TMR2           set	29
  6037     001E                     _PR2            set	30
  6038     0012                     _PIR2bits       set	18
  6039     000B                     _INTCONbits     set	11
  6040     0010                     _PIR0bits       set	16
  6041     0011                     _PIR1bits       set	17
  6042     008E                     _TRISC          set	142
  6043     008D                     _TRISB          set	141
  6044     008C                     _TRISA          set	140
  6045     0092                     _PIE2bits       set	146
  6046     009D                     _ADCON0bits     set	157
  6047     0091                     _PIE1bits       set	145
  6048     009D                     _ADCON0         set	157
  6049     009F                     _ADACT          set	159
  6050     009C                     _ADRESH         set	156
  6051     009B                     _ADRESL         set	155
  6052     009E                     _ADCON1         set	158
  6053     010C                     _LATAbits       set	268
  6054     010E                     _LATC           set	270
  6055     010D                     _LATB           set	269
  6056     010C                     _LATA           set	268
  6057     019A                     _TX1REG         set	410
  6058     0199                     _RC1REG         set	409
  6059     019F                     _BAUD1CONbits   set	415
  6060     019E                     _TX1STAbits     set	414
  6061     019D                     _RC1STAbits     set	413
  6062     019C                     _SP1BRGH        set	412
  6063     019B                     _SP1BRGL        set	411
  6064     019E                     _TX1STA         set	414
  6065     019D                     _RC1STA         set	413
  6066     019F                     _BAUD1CON       set	415
  6067     018E                     _ANSELC         set	398
  6068     018D                     _ANSELB         set	397
  6069     018C                     _ANSELA         set	396
  6070     020E                     _WPUC           set	526
  6071     020D                     _WPUB           set	525
  6072     020C                     _WPUA           set	524
  6073     0211                     _SSP1BUF        set	529
  6074     0215                     _SSP1CON1bits   set	533
  6075     0212                     _SSP1ADD        set	530
  6076     0217                     _SSP1CON3       set	535
  6077     0215                     _SSP1CON1       set	533
  6078     0214                     _SSP1STAT       set	532
  6079     028E                     _ODCONC         set	654
  6080     028D                     _ODCONB         set	653
  6081     028C                     _ODCONA         set	652
  6082     030E                     _SLRCONC        set	782
  6083     030D                     _SLRCONB        set	781
  6084     030C                     _SLRCONA        set	780
  6085     0399                     _IOCCF          set	921
  6086     0398                     _IOCCN          set	920
  6087     0397                     _IOCCP          set	919
  6088     0396                     _IOCBF          set	918
  6089     0395                     _IOCBN          set	917
  6090     0394                     _IOCBP          set	916
  6091     0393                     _IOCAF          set	915
  6092     0392                     _IOCAN          set	914
  6093     0391                     _IOCAP          set	913
  6094     038E                     _INLVLC         set	910
  6095     038D                     _INLVLB         set	909
  6096     038C                     _INLVLA         set	908
  6097     041E                     _T6CONbits      set	1054
  6098     041E                     _T6CON          set	1054
  6099     041C                     _TMR6           set	1052
  6100     041D                     _PR6            set	1053
  6101     0417                     _T4CONbits      set	1047
  6102     0417                     _T4CON          set	1047
  6103     0415                     _TMR4           set	1045
  6104     0416                     _PR4            set	1046
  6105     061F                     _PWMTMRSbits    set	1567
  6106     0617                     _PWM5DCL        set	1559
  6107     0618                     _PWM5DCH        set	1560
  6108     0619                     _PWM5CON        set	1561
  6109     091E                     _OSCTUNE        set	2334
  6110     091C                     _OSCSTAT1       set	2332
  6111     091F                     _OSCFRQ         set	2335
  6112     091D                     _OSCEN          set	2333
  6113     091B                     _OSCCON3        set	2331
  6114     0919                     _OSCCON1        set	2329
  6115     0E20                     _SSP1CLKPPS     set	3616
  6116     0E24                     _RXPPS          set	3620
  6117     0E21                     _SSP1DATPPS     set	3617
  6118     0E9E                     _RB6PPS         set	3742
  6119     0E9F                     _RB7PPS         set	3743
  6120     0EA5                     _RC5PPS         set	3749
  6121     0E9C                     _RB4PPS         set	3740
  6122                           
  6123                           	psect	stringtext4
  6124     184C                     __pstringtext4:
  6125     184C                     STR_9:
  6126     184C  3463               	retlw	99	;'c'
  6127     184D  3468               	retlw	104	;'h'
  6128     184E  3461               	retlw	97	;'a'
  6129     184F  346E               	retlw	110	;'n'
  6130     1850  3467               	retlw	103	;'g'
  6131     1851  3465               	retlw	101	;'e'
  6132     1852  3464               	retlw	100	;'d'
  6133     1853  3420               	retlw	32	;' '
  6134     1854  3473               	retlw	115	;'s'
  6135     1855  3465               	retlw	101	;'e'
  6136     1856  3474               	retlw	116	;'t'
  6137     1857  3470               	retlw	112	;'p'
  6138     1858  346F               	retlw	111	;'o'
  6139     1859  3469               	retlw	105	;'i'
  6140     185A  346E               	retlw	110	;'n'
  6141     185B  3474               	retlw	116	;'t'
  6142     185C  3420               	retlw	32	;' '
  6143     185D  3474               	retlw	116	;'t'
  6144     185E  346F               	retlw	111	;'o'
  6145     185F  3420               	retlw	32	;' '
  6146     1860  3425               	retlw	37	;'%'
  6147     1861  3475               	retlw	117	;'u'
  6148     1862  340D               	retlw	13
  6149     1863  340A               	retlw	10
  6150     1864  3400               	retlw	0
  6151                           
  6152                           	psect	stringtext5
  6153     1865                     __pstringtext5:
  6154     1865                     STR_2:
  6155     1865  3469               	retlw	105	;'i'
  6156     1866  346E               	retlw	110	;'n'
  6157     1867  3470               	retlw	112	;'p'
  6158     1868  3475               	retlw	117	;'u'
  6159     1869  3474               	retlw	116	;'t'
  6160     186A  3420               	retlw	32	;' '
  6161     186B  3462               	retlw	98	;'b'
  6162     186C  3475               	retlw	117	;'u'
  6163     186D  3466               	retlw	102	;'f'
  6164     186E  3466               	retlw	102	;'f'
  6165     186F  3465               	retlw	101	;'e'
  6166     1870  3472               	retlw	114	;'r'
  6167     1871  3420               	retlw	32	;' '
  6168     1872  346F               	retlw	111	;'o'
  6169     1873  3476               	retlw	118	;'v'
  6170     1874  3465               	retlw	101	;'e'
  6171     1875  3472               	retlw	114	;'r'
  6172     1876  3466               	retlw	102	;'f'
  6173     1877  346C               	retlw	108	;'l'
  6174     1878  346F               	retlw	111	;'o'
  6175     1879  3477               	retlw	119	;'w'
  6176     187A  340D               	retlw	13
  6177     187B  340A               	retlw	10
  6178     187C  3400               	retlw	0
  6179                           
  6180                           	psect	stringtext6
  6181     187D                     __pstringtext6:
  6182     187D                     STR_13:
  6183     187D  3455               	retlw	85	;'U'
  6184     187E  346E               	retlw	110	;'n'
  6185     187F  346B               	retlw	107	;'k'
  6186     1880  346F               	retlw	111	;'o'
  6187     1881  3477               	retlw	119	;'w'
  6188     1882  346E               	retlw	110	;'n'
  6189     1883  3420               	retlw	32	;' '
  6190     1884  3463               	retlw	99	;'c'
  6191     1885  346F               	retlw	111	;'o'
  6192     1886  346D               	retlw	109	;'m'
  6193     1887  346D               	retlw	109	;'m'
  6194     1888  3461               	retlw	97	;'a'
  6195     1889  346E               	retlw	110	;'n'
  6196     188A  3464               	retlw	100	;'d'
  6197     188B  340D               	retlw	13
  6198     188C  340A               	retlw	10
  6199     188D  3400               	retlw	0
  6200                           
  6201                           	psect	stringtext7
  6202     188E                     __pstringtext7:
  6203     188E                     STR_5:
  6204     188E  342C               	retlw	44	;','
  6205     188F  3420               	retlw	32	;' '
  6206     1890  3464               	retlw	100	;'d'
  6207     1891  3475               	retlw	117	;'u'
  6208     1892  3474               	retlw	116	;'t'
  6209     1893  3479               	retlw	121	;'y'
  6210     1894  3420               	retlw	32	;' '
  6211     1895  3463               	retlw	99	;'c'
  6212     1896  3479               	retlw	121	;'y'
  6213     1897  3463               	retlw	99	;'c'
  6214     1898  346C               	retlw	108	;'l'
  6215     1899  3465               	retlw	101	;'e'
  6216     189A  343A               	retlw	58	;':'
  6217     189B  3420               	retlw	32	;' '
  6218     189C  3425               	retlw	37	;'%'
  6219     189D  3475               	retlw	117	;'u'
  6220     189E  3400               	retlw	0
  6221                           
  6222                           	psect	stringtext8
  6223     189F                     __pstringtext8:
  6224     189F                     STR_12:
  6225     189F  346C               	retlw	108	;'l'
  6226     18A0  346F               	retlw	111	;'o'
  6227     18A1  3467               	retlw	103	;'g'
  6228     18A2  3473               	retlw	115	;'s'
  6229     18A3  3420               	retlw	32	;' '
  6230     18A4  3474               	retlw	116	;'t'
  6231     18A5  346F               	retlw	111	;'o'
  6232     18A6  3467               	retlw	103	;'g'
  6233     18A7  3467               	retlw	103	;'g'
  6234     18A8  346C               	retlw	108	;'l'
  6235     18A9  3465               	retlw	101	;'e'
  6236     18AA  3464               	retlw	100	;'d'
  6237     18AB  340D               	retlw	13
  6238     18AC  340A               	retlw	10
  6239     18AD  3400               	retlw	0
  6240                           
  6241                           	psect	stringtext9
  6242     18AE                     __pstringtext9:
  6243     18AE                     STR_4:
  6244     18AE  342C               	retlw	44	;','
  6245     18AF  3420               	retlw	32	;' '
  6246     18B0  3473               	retlw	115	;'s'
  6247     18B1  3465               	retlw	101	;'e'
  6248     18B2  3474               	retlw	116	;'t'
  6249     18B3  3470               	retlw	112	;'p'
  6250     18B4  346F               	retlw	111	;'o'
  6251     18B5  3469               	retlw	105	;'i'
  6252     18B6  346E               	retlw	110	;'n'
  6253     18B7  3474               	retlw	116	;'t'
  6254     18B8  343A               	retlw	58	;':'
  6255     18B9  3420               	retlw	32	;' '
  6256     18BA  3425               	retlw	37	;'%'
  6257     18BB  3475               	retlw	117	;'u'
  6258     18BC  3400               	retlw	0
  6259                           
  6260                           	psect	stringtext10
  6261     18BD                     __pstringtext10:
  6262     18BD                     STR_11:
  6263     18BD  3463               	retlw	99	;'c'
  6264     18BE  3468               	retlw	104	;'h'
  6265     18BF  3461               	retlw	97	;'a'
  6266     18C0  346E               	retlw	110	;'n'
  6267     18C1  3467               	retlw	103	;'g'
  6268     18C2  3465               	retlw	101	;'e'
  6269     18C3  3464               	retlw	100	;'d'
  6270     18C4  3420               	retlw	32	;' '
  6271     18C5  346B               	retlw	107	;'k'
  6272     18C6  3469               	retlw	105	;'i'
  6273     18C7  340D               	retlw	13
  6274     18C8  340A               	retlw	10
  6275     18C9  3400               	retlw	0
  6276                           
  6277                           	psect	stringtext11
  6278     18CA                     __pstringtext11:
  6279     18CA                     STR_10:
  6280     18CA  3463               	retlw	99	;'c'
  6281     18CB  3468               	retlw	104	;'h'
  6282     18CC  3461               	retlw	97	;'a'
  6283     18CD  346E               	retlw	110	;'n'
  6284     18CE  3467               	retlw	103	;'g'
  6285     18CF  3465               	retlw	101	;'e'
  6286     18D0  3464               	retlw	100	;'d'
  6287     18D1  3420               	retlw	32	;' '
  6288     18D2  346B               	retlw	107	;'k'
  6289     18D3  3470               	retlw	112	;'p'
  6290     18D4  340D               	retlw	13
  6291     18D5  340A               	retlw	10
  6292     18D6  3400               	retlw	0
  6293                           
  6294                           	psect	stringtext12
  6295     18D7                     __pstringtext12:
  6296     18D7                     STR_3:
  6297     18D7  3468               	retlw	104	;'h'
  6298     18D8  346F               	retlw	111	;'o'
  6299     18D9  346F               	retlw	111	;'o'
  6300     18DA  3467               	retlw	103	;'g'
  6301     18DB  3474               	retlw	116	;'t'
  6302     18DC  3465               	retlw	101	;'e'
  6303     18DD  343A               	retlw	58	;':'
  6304     18DE  3420               	retlw	32	;' '
  6305     18DF  3425               	retlw	37	;'%'
  6306     18E0  3475               	retlw	117	;'u'
  6307     18E1  3400               	retlw	0
  6308                           
  6309                           	psect	stringtext13
  6310     18EC                     __pstringtext13:
  6311     18EC                     STR_1:
  6312     18EC  3425               	retlw	37	;'%'
  6313     18ED  3469               	retlw	105	;'i'
  6314     18EE  342E               	retlw	46	;'.'
  6315     18EF  3425               	retlw	37	;'%'
  6316     18F0  3430               	retlw	48	;'0'
  6317     18F1  3433               	retlw	51	;'3'
  6318     18F2  3475               	retlw	117	;'u'
  6319     18F3  3400               	retlw	0
  6320                           
  6321                           	psect	stringtext14
  6322     18F4                     __pstringtext14:
  6323     18F4                     STR_7:
  6324     18F4  342C               	retlw	44	;','
  6325     18F5  3420               	retlw	32	;' '
  6326     18F6  346B               	retlw	107	;'k'
  6327     18F7  3469               	retlw	105	;'i'
  6328     18F8  343A               	retlw	58	;':'
  6329     18F9  3420               	retlw	32	;' '
  6330     18FA  3400               	retlw	0
  6331                           
  6332                           	psect	stringtext15
  6333     18FB                     __pstringtext15:
  6334     18FB                     STR_6:
  6335     18FB  342C               	retlw	44	;','
  6336     18FC  3420               	retlw	32	;' '
  6337     18FD  346B               	retlw	107	;'k'
  6338     18FE  3470               	retlw	112	;'p'
  6339     18FF  343A               	retlw	58	;':'
  6340     1900  3420               	retlw	32	;' '
  6341     1901  3400               	retlw	0
  6342                           
  6343                           	psect	stringtext16
  6344     0000                     __pstringtext16:
  6345     18AB                     STR_8           equ	STR_12+12
  6346                           
  6347                           	psect	cinit
  6348     005A                     start_initialization:	
  6349                           ; #config settings
  6350                           
  6351     005A                     __initialization:
  6352                           
  6353                           ; Initialize objects allocated to BANK0
  6354     005A  3001               	movlw	low __pidataBANK0
  6355     005B  0084               	movwf	4
  6356     005C  3088               	movlw	(high __pidataBANK0)| (0+128)
  6357     005D  0085               	movwf	5
  6358     005E  306C               	movlw	low __pdataBANK0
  6359     005F  0086               	movwf	6
  6360     0060  3000               	movlw	high __pdataBANK0
  6361     0061  0087               	movwf	7
  6362     0062  3004               	movlw	4
  6363     0063  3190  2000  3180   	fcall	init_ram
  6364                           
  6365                           ; Initialize objects allocated to BANK2
  6366     0066  30CD               	movlw	low __pidataBANK2
  6367     0067  0084               	movwf	4
  6368     0068  309B               	movlw	(high __pidataBANK2)| (0+128)
  6369     0069  0085               	movwf	5
  6370     006A  3068               	movlw	low __pdataBANK2
  6371     006B  0086               	movwf	6
  6372     006C  3001               	movlw	high __pdataBANK2
  6373     006D  0087               	movwf	7
  6374     006E  3008               	movlw	8
  6375     006F  3190  2000  3180   	fcall	init_ram
  6376                           
  6377                           ; Clear objects allocated to BANK0
  6378     0072  3055               	movlw	low __pbssBANK0
  6379     0073  0084               	movwf	4
  6380     0074  3000               	movlw	high __pbssBANK0
  6381     0075  0085               	movwf	5
  6382     0076  3017               	movlw	23
  6383     0077  319B  23C7  3180   	fcall	clear_ram0
  6384                           
  6385                           ; Clear objects allocated to BANK2
  6386     007A  3020               	movlw	low __pbssBANK2
  6387     007B  0084               	movwf	4
  6388     007C  3001               	movlw	high __pbssBANK2
  6389     007D  0085               	movwf	5
  6390     007E  302E               	movlw	46
  6391     007F  319B  23C7  3180   	fcall	clear_ram0
  6392                           
  6393                           ; Clear objects allocated to BANK3
  6394     0082  30A0               	movlw	low __pbssBANK3
  6395     0083  0084               	movwf	4
  6396     0084  3001               	movlw	high __pbssBANK3
  6397     0085  0085               	movwf	5
  6398     0086  3034               	movlw	52
  6399     0087  319B  23C7  3180   	fcall	clear_ram0
  6400     008A                     end_of_initialization:	
  6401                           ;End of C runtime variable initialization code
  6402                           
  6403     008A                     __end_of__initialization:
  6404     008A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6405     008B  0020               	movlb	0
  6406     008C  3191  2929         	ljmp	_main	;jump to C main() function
  6407                           
  6408                           	psect	bssBANK0
  6409     0055                     __pbssBANK0:
  6410     0055                     _width:
  6411     0055                     	ds	2
  6412     0057                     _dutycycle:
  6413     0057                     	ds	2
  6414     0059                     _ADC_hoogtesensor:
  6415     0059                     	ds	2
  6416     005B                     _ADC_potentiometer:
  6417     005B                     	ds	2
  6418     005D                     _EUSART_OverrunErrorHandler:
  6419     005D                     	ds	2
  6420     005F                     _EUSART_FramingErrorHandler:
  6421     005F                     	ds	2
  6422     0061                     _INT_InterruptHandler:
  6423     0061                     	ds	2
  6424     0063                     _flags:
  6425     0063                     	ds	1
  6426     0064                     _is_on_target:
  6427     0064                     	ds	1
  6428     0065                     readLine@index:
  6429     0065                     	ds	1
  6430     0066                     _eusartRxCount:
  6431     0066                     	ds	1
  6432     0067                     _eusartRxTail:
  6433     0067                     	ds	1
  6434     0068                     _eusartRxHead:
  6435     0068                     	ds	1
  6436     0069                     _eusartTxBufferRemaining:
  6437     0069                     	ds	1
  6438     006A                     _eusartTxTail:
  6439     006A                     	ds	1
  6440     006B                     _eusartTxHead:
  6441     006B                     	ds	1
  6442                           
  6443                           	psect	dataBANK0
  6444     006C                     __pdataBANK0:
  6445     006C                     _setpoint:
  6446     006C                     	ds	2
  6447     006E                     _mustPrintLogs:
  6448     006E                     	ds	1
  6449     006F                     adcConversionDoneHandler@new_channel:
  6450     006F                     	ds	1
  6451                           
  6452                           	psect	bssBANK2
  6453     0120                     __pbssBANK2:
  6454     0120                     _eusartRxStatusBuffer:
  6455     0120                     	ds	16
  6456     0130                     _eusartRxBuffer:
  6457     0130                     	ds	8
  6458     0138                     _eusartTxBuffer:
  6459     0138                     	ds	8
  6460     0140                     _integraal:
  6461     0140                     	ds	4
  6462     0144                     _prec:
  6463     0144                     	ds	2
  6464     0146                     _hoogte_bal:
  6465     0146                     	ds	2
  6466     0148                     _EUSART_RxCompleteInterruptHandler:
  6467     0148                     	ds	2
  6468     014A                     _EUSART_TxCompleteInterruptHandler:
  6469     014A                     	ds	2
  6470     014C                     _eusartRxLastError:
  6471     014C                     	ds	2
  6472                           
  6473                           	psect	dataBANK2
  6474     0168                     __pdataBANK2:
  6475     0168                     _ki:
  6476     0168                     	ds	4
  6477     016C                     _kp:
  6478     016C                     	ds	4
  6479                           
  6480                           	psect	bssBANK3
  6481     01A0                     __pbssBANK3:
  6482     01A0                     _dbuf:
  6483     01A0                     	ds	32
  6484     01C0                     _line:
  6485     01C0                     	ds	20
  6486                           
  6487                           	psect	inittext
  6488     1000                     init_ram:
  6489     1000  00FE               	movwf	btemp
  6490     1001                     initloop:
  6491     1001  0012               	moviw fsr0++
  6492     1002  001E               	movwi fsr1++
  6493     1003  0BFE               	decfsz	btemp,f
  6494     1004  2801               	goto	initloop
  6495     1005  3400               	retlw	0
  6496                           
  6497                           	psect	clrtext
  6498     1BC7                     clear_ram0:	
  6499                           ;	Called with FSR0 containing the base address, and
  6500                           ;	WREG with the size to clear
  6501                           
  6502     1BC7  0064               	clrwdt	;clear the watchdog before getting into this loop
  6503     1BC8                     clrloop0:
  6504     1BC8  0180               	clrf	0	;clear RAM location pointed to by FSR
  6505     1BC9  3101               	addfsr 0,1
  6506     1BCA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6507     1BCB  2BC8               	goto	clrloop0	;have we reached the end yet?
  6508     1BCC  3400               	retlw	0	;all done for this memory range, return
  6509                           
  6510                           	psect	cstackBANK2
  6511     014E                     __pcstackBANK2:
  6512     014E                     ?_setKp:
  6513     014E                     ?_setKi:	
  6514                           ; 1 bytes @ 0x0
  6515                           
  6516     014E                     ?_printFloat:	
  6517                           ; 1 bytes @ 0x0
  6518                           
  6519     014E                     printFloat@number:	
  6520                           ; 1 bytes @ 0x0
  6521                           
  6522     014E                     setKp@new_kp:	
  6523                           ; 4 bytes @ 0x0
  6524                           
  6525     014E                     setKi@new_ki:	
  6526                           ; 4 bytes @ 0x0
  6527                           
  6528     014E                     getLedNumber@result:	
  6529                           ; 4 bytes @ 0x0
  6530                           
  6531                           
  6532                           ; 4 bytes @ 0x0
  6533     014E                     	ds	4
  6534     0152                     uartHandler@str:
  6535     0152                     printFloat@fractional_part:	
  6536                           ; 1 bytes @ 0x4
  6537                           
  6538     0152                     ??_position_led_strip:	
  6539                           ; 2 bytes @ 0x4
  6540                           
  6541                           
  6542                           ; 1 bytes @ 0x4
  6543     0152                     	ds	2
  6544     0154                     printFloat@integer_part:
  6545                           
  6546                           ; 1 bytes @ 0x6
  6547     0154                     	ds	1
  6548     0155                     position_led_strip@target:
  6549                           
  6550                           ; 2 bytes @ 0x7
  6551     0155                     	ds	2
  6552     0157                     position_led_strip@led:
  6553                           
  6554                           ; 1 bytes @ 0x9
  6555     0157                     	ds	1
  6556     0158                     position_led_strip@led_on:
  6557                           
  6558                           ; 2 bytes @ 0xA
  6559     0158                     	ds	2
  6560     015A                     ??_main:
  6561                           
  6562                           ; 1 bytes @ 0xC
  6563     015A                     	ds	2
  6564     015C                     main@potwaarde:
  6565                           
  6566                           ; 2 bytes @ 0xE
  6567     015C                     	ds	2
  6568                           
  6569                           	psect	cstackBANK1
  6570     00A0                     __pcstackBANK1:
  6571     00A0                     ?_ADC_SetInterruptHandler:
  6572     00A0                     ?_SPI1_ByteExchange:	
  6573                           ; 1 bytes @ 0x0
  6574                           
  6575     00A0                     ?_INT_SetInterruptHandler:	
  6576                           ; 1 bytes @ 0x0
  6577                           
  6578     00A0                     ?_EUSART_Write:	
  6579                           ; 1 bytes @ 0x0
  6580                           
  6581     00A0                     ?_EUSART_FramingErrorCallbackRegister:	
  6582                           ; 1 bytes @ 0x0
  6583                           
  6584     00A0                     ?_EUSART_OverrunErrorCallbackRegister:	
  6585                           ; 1 bytes @ 0x0
  6586                           
  6587     00A0                     ?_TMR4_PeriodMatchCallbackRegister:	
  6588                           ; 1 bytes @ 0x0
  6589                           
  6590     00A0                     ?_TMR6_PeriodMatchCallbackRegister:	
  6591                           ; 1 bytes @ 0x0
  6592                           
  6593     00A0                     ?_getPotentiometer:	
  6594                           ; 1 bytes @ 0x0
  6595                           
  6596     00A0                     ?_getSetpoint:	
  6597                           ; 2 bytes @ 0x0
  6598                           
  6599     00A0                     ?_getDutycycle:	
  6600                           ; 2 bytes @ 0x0
  6601                           
  6602     00A0                     ?__Umul8_16:	
  6603                           ; 2 bytes @ 0x0
  6604                           
  6605     00A0                     ?_getHoogtesensor:	
  6606                           ; 2 bytes @ 0x0
  6607                           
  6608     00A0                     ?___wmul:	
  6609                           ; 2 bytes @ 0x0
  6610                           
  6611     00A0                     ?___awdiv:	
  6612                           ; 2 bytes @ 0x0
  6613                           
  6614     00A0                     ?___awmod:	
  6615                           ; 2 bytes @ 0x0
  6616                           
  6617     00A0                     ?___lwdiv:	
  6618                           ; 2 bytes @ 0x0
  6619                           
  6620     00A0                     ?___lwmod:	
  6621                           ; 2 bytes @ 0x0
  6622                           
  6623     00A0                     ?_getKp:	
  6624                           ; 2 bytes @ 0x0
  6625                           
  6626     00A0                     ?_getKi:	
  6627                           ; 4 bytes @ 0x0
  6628                           
  6629     00A0                     ?___fldiv:	
  6630                           ; 4 bytes @ 0x0
  6631                           
  6632     00A0                     ?___xxtofl:	
  6633                           ; 4 bytes @ 0x0
  6634                           
  6635     00A0                     SPI1_ByteExchange@byteData:	
  6636                           ; 4 bytes @ 0x0
  6637                           
  6638     00A0                     EUSART_Read@tempRxTail:	
  6639                           ; 1 bytes @ 0x0
  6640                           
  6641     00A0                     EUSART_Write@txData:	
  6642                           ; 1 bytes @ 0x0
  6643                           
  6644     00A0                     __Umul8_16@multiplicand:	
  6645                           ; 1 bytes @ 0x0
  6646                           
  6647     00A0                     ADC_SetInterruptHandler@InterruptHandler:	
  6648                           ; 1 bytes @ 0x0
  6649                           
  6650     00A0                     INT_SetInterruptHandler@InterruptHandler:	
  6651                           ; 2 bytes @ 0x0
  6652                           
  6653     00A0                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  6654                           ; 2 bytes @ 0x0
  6655                           
  6656     00A0                     TMR6_PeriodMatchCallbackRegister@CallbackHandler:	
  6657                           ; 2 bytes @ 0x0
  6658                           
  6659     00A0                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  6660                           ; 2 bytes @ 0x0
  6661                           
  6662     00A0                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  6663                           ; 2 bytes @ 0x0
  6664                           
  6665     00A0                     ___wmul@multiplier:	
  6666                           ; 2 bytes @ 0x0
  6667                           
  6668     00A0                     ___awdiv@divisor:	
  6669                           ; 2 bytes @ 0x0
  6670                           
  6671     00A0                     ___awmod@divisor:	
  6672                           ; 2 bytes @ 0x0
  6673                           
  6674     00A0                     ___lwdiv@divisor:	
  6675                           ; 2 bytes @ 0x0
  6676                           
  6677     00A0                     ___lwmod@divisor:	
  6678                           ; 2 bytes @ 0x0
  6679                           
  6680     00A0                     ___fldiv@a:	
  6681                           ; 2 bytes @ 0x0
  6682                           
  6683     00A0                     ___xxtofl@val:	
  6684                           ; 4 bytes @ 0x0
  6685                           
  6686     00A0                     ??_SPI1_Initialize:	
  6687                           ; 4 bytes @ 0x0
  6688                           
  6689     00A0                     ??_TMR2_Initialize:	
  6690                           ; 1 bytes @ 0x0
  6691                           
  6692     00A0                     ??_TMR4_Initialize:	
  6693                           ; 1 bytes @ 0x0
  6694                           
  6695     00A0                     ??_TMR6_Initialize:	
  6696                           ; 1 bytes @ 0x0
  6697                           
  6698     00A0                     ??_TMR6_DefaultPeriodMatchCallback:	
  6699                           ; 1 bytes @ 0x0
  6700                           
  6701     00A0                     ??_EUSART_Read:	
  6702                           ; 1 bytes @ 0x0
  6703                           
  6704     00A0                     ??_EUSART_IsRxReady:	
  6705                           ; 1 bytes @ 0x0
  6706                           
  6707     00A0                     ??_EUSART_IsTxReady:	
  6708                           ; 1 bytes @ 0x0
  6709                           
  6710     00A0                     ??_ADC_SelectChannel:	
  6711                           ; 1 bytes @ 0x0
  6712                           
  6713     00A0                     ??_pwm_fan_Initialize:	
  6714                           ; 1 bytes @ 0x0
  6715                           
  6716     00A0                     ??_CLOCK_Initialize:	
  6717                           ; 1 bytes @ 0x0
  6718                           
  6719     00A0                     ??_PIN_MANAGER_Initialize:	
  6720                           ; 1 bytes @ 0x0
  6721                           
  6722                           
  6723                           ; 1 bytes @ 0x0
  6724     00A0                     	ds	1
  6725     00A1                     ?_sendLedstripFrame:
  6726     00A1                     ADC_SelectChannel@channel:	
  6727                           ; 1 bytes @ 0x1
  6728                           
  6729     00A1                     EUSART_Read@readValue:	
  6730                           ; 1 bytes @ 0x1
  6731                           
  6732     00A1                     EUSART_Write@tempTxHead:	
  6733                           ; 1 bytes @ 0x1
  6734                           
  6735     00A1                     sendLedstripFrame@green:	
  6736                           ; 1 bytes @ 0x1
  6737                           
  6738     00A1                     ??_SPI1_ByteExchange:	
  6739                           ; 1 bytes @ 0x1
  6740                           
  6741     00A1                     ??_EUSART_Write:	
  6742                           ; 1 bytes @ 0x1
  6743                           
  6744     00A1                     ??_sendLedstripStartFrame:	
  6745                           ; 1 bytes @ 0x1
  6746                           
  6747     00A1                     ??_sendLedstripEndFrame:	
  6748                           ; 1 bytes @ 0x1
  6749                           
  6750                           
  6751                           ; 1 bytes @ 0x1
  6752     00A1                     	ds	1
  6753     00A2                     putch@txData:
  6754     00A2                     sendLedstripFrame@blue:	
  6755                           ; 1 bytes @ 0x2
  6756                           
  6757     00A2                     ___wmul@multiplicand:	
  6758                           ; 1 bytes @ 0x2
  6759                           
  6760     00A2                     ___awdiv@dividend:	
  6761                           ; 2 bytes @ 0x2
  6762                           
  6763     00A2                     ___awmod@dividend:	
  6764                           ; 2 bytes @ 0x2
  6765                           
  6766     00A2                     ___lwdiv@dividend:	
  6767                           ; 2 bytes @ 0x2
  6768                           
  6769     00A2                     ___lwmod@dividend:	
  6770                           ; 2 bytes @ 0x2
  6771                           
  6772     00A2                     ??_ADC_SetInterruptHandler:	
  6773                           ; 2 bytes @ 0x2
  6774                           
  6775     00A2                     ??_INT_SetInterruptHandler:	
  6776                           ; 1 bytes @ 0x2
  6777                           
  6778     00A2                     ??_EUSART_Initialize:	
  6779                           ; 1 bytes @ 0x2
  6780                           
  6781     00A2                     ??_EUSART_FramingErrorCallbackRegister:	
  6782                           ; 1 bytes @ 0x2
  6783                           
  6784     00A2                     ??_EUSART_OverrunErrorCallbackRegister:	
  6785                           ; 1 bytes @ 0x2
  6786                           
  6787     00A2                     ??_initAdcMultiplexer:	
  6788                           ; 1 bytes @ 0x2
  6789                           
  6790     00A2                     ??_getPotentiometer:	
  6791                           ; 1 bytes @ 0x2
  6792                           
  6793     00A2                     ??_getSetpoint:	
  6794                           ; 1 bytes @ 0x2
  6795                           
  6796     00A2                     ??_getDutycycle:	
  6797                           ; 1 bytes @ 0x2
  6798                           
  6799     00A2                     ??__Umul8_16:	
  6800                           ; 1 bytes @ 0x2
  6801                           
  6802     00A2                     ??_ADC_Initialize:	
  6803                           ; 1 bytes @ 0x2
  6804                           
  6805     00A2                     ??_INTERRUPT_Initialize:	
  6806                           ; 1 bytes @ 0x2
  6807                           
  6808     00A2                     ??_SYSTEM_Initialize:	
  6809                           ; 1 bytes @ 0x2
  6810                           
  6811     00A2                     ??_TMR4_PeriodMatchCallbackRegister:	
  6812                           ; 1 bytes @ 0x2
  6813                           
  6814     00A2                     ??_TMR6_PeriodMatchCallbackRegister:	
  6815                           ; 1 bytes @ 0x2
  6816                           
  6817     00A2                     ??_putch:	
  6818                           ; 1 bytes @ 0x2
  6819                           
  6820     00A2                     ??_getHoogtesensor:	
  6821                           ; 1 bytes @ 0x2
  6822                           
  6823                           
  6824                           ; 1 bytes @ 0x2
  6825     00A2                     	ds	1
  6826     00A3                     ?_fputc:
  6827     00A3                     sendLedstripFrame@intensity:	
  6828                           ; 2 bytes @ 0x3
  6829                           
  6830     00A3                     fputc@c:	
  6831                           ; 1 bytes @ 0x3
  6832                           
  6833                           
  6834                           ; 2 bytes @ 0x3
  6835     00A3                     	ds	1
  6836     00A4                     sendLedstripFrame@red:
  6837     00A4                     ___awdiv@counter:	
  6838                           ; 1 bytes @ 0x4
  6839                           
  6840     00A4                     ___awmod@counter:	
  6841                           ; 1 bytes @ 0x4
  6842                           
  6843     00A4                     ___lwmod@counter:	
  6844                           ; 1 bytes @ 0x4
  6845                           
  6846     00A4                     ___wmul@product:	
  6847                           ; 1 bytes @ 0x4
  6848                           
  6849     00A4                     ___lwdiv@quotient:	
  6850                           ; 2 bytes @ 0x4
  6851                           
  6852     00A4                     __Umul8_16@product:	
  6853                           ; 2 bytes @ 0x4
  6854                           
  6855     00A4                     ___fldiv@b:	
  6856                           ; 2 bytes @ 0x4
  6857                           
  6858     00A4                     ??_getKp:	
  6859                           ; 4 bytes @ 0x4
  6860                           
  6861     00A4                     ??_getKi:	
  6862                           ; 1 bytes @ 0x4
  6863                           
  6864     00A4                     ??_sendLedstripFrame:	
  6865                           ; 1 bytes @ 0x4
  6866                           
  6867     00A4                     ??___wmul:	
  6868                           ; 1 bytes @ 0x4
  6869                           
  6870     00A4                     ??___awdiv:	
  6871                           ; 1 bytes @ 0x4
  6872                           
  6873     00A4                     ??___awmod:	
  6874                           ; 1 bytes @ 0x4
  6875                           
  6876     00A4                     ??___lwdiv:	
  6877                           ; 1 bytes @ 0x4
  6878                           
  6879     00A4                     ??___lwmod:	
  6880                           ; 1 bytes @ 0x4
  6881                           
  6882     00A4                     ??___xxtofl:	
  6883                           ; 1 bytes @ 0x4
  6884                           
  6885                           
  6886                           ; 1 bytes @ 0x4
  6887     00A4                     	ds	1
  6888     00A5                     ___awdiv@sign:
  6889     00A5                     ___awmod@sign:	
  6890                           ; 1 bytes @ 0x5
  6891                           
  6892     00A5                     fputc@fp:	
  6893                           ; 1 bytes @ 0x5
  6894                           
  6895                           
  6896                           ; 2 bytes @ 0x5
  6897     00A5                     	ds	1
  6898     00A6                     ?_SPI1_Open:
  6899     00A6                     ?_atoi:	
  6900                           ; 1 bytes @ 0x6
  6901                           
  6902     00A6                     ?_abs:	
  6903                           ; 2 bytes @ 0x6
  6904                           
  6905     00A6                     ?_read_prec_or_width:	
  6906                           ; 2 bytes @ 0x6
  6907                           
  6908     00A6                     SPI1_Open@spiConfigIndex:	
  6909                           ; 2 bytes @ 0x6
  6910                           
  6911     00A6                     ___lwdiv@counter:	
  6912                           ; 1 bytes @ 0x6
  6913                           
  6914     00A6                     atoi@s:	
  6915                           ; 1 bytes @ 0x6
  6916                           
  6917     00A6                     read_prec_or_width@fmt:	
  6918                           ; 1 bytes @ 0x6
  6919                           
  6920     00A6                     ___awdiv@quotient:	
  6921                           ; 1 bytes @ 0x6
  6922                           
  6923     00A6                     __Umul8_16@word_mpld:	
  6924                           ; 2 bytes @ 0x6
  6925                           
  6926     00A6                     abs@a:	
  6927                           ; 2 bytes @ 0x6
  6928                           
  6929                           
  6930                           ; 2 bytes @ 0x6
  6931     00A6                     	ds	1
  6932     00A7                     read_prec_or_width@ap:
  6933     00A7                     ??_SPI1_Open:	
  6934                           ; 1 bytes @ 0x7
  6935                           
  6936     00A7                     ??_fputc:	
  6937                           ; 1 bytes @ 0x7
  6938                           
  6939                           
  6940                           ; 1 bytes @ 0x7
  6941     00A7                     	ds	1
  6942     00A8                     __Umul8_16@multiplier:
  6943     00A8                     ___xxtofl@sign:	
  6944                           ; 1 bytes @ 0x8
  6945                           
  6946     00A8                     ??_atoi:	
  6947                           ; 1 bytes @ 0x8
  6948                           
  6949     00A8                     ??_abs:	
  6950                           ; 1 bytes @ 0x8
  6951                           
  6952     00A8                     ??___fldiv:	
  6953                           ; 1 bytes @ 0x8
  6954                           
  6955     00A8                     ??_read_prec_or_width:	
  6956                           ; 1 bytes @ 0x8
  6957                           
  6958                           
  6959                           ; 1 bytes @ 0x8
  6960     00A8                     	ds	1
  6961     00A9                     ___xxtofl@exp:
  6962     00A9                     ??_initLedstrip:	
  6963                           ; 1 bytes @ 0x9
  6964                           
  6965                           
  6966                           ; 1 bytes @ 0x9
  6967     00A9                     	ds	1
  6968     00AA                     atoi@neg:
  6969     00AA                     ___xxtofl@arg:	
  6970                           ; 1 bytes @ 0xA
  6971                           
  6972                           
  6973                           ; 4 bytes @ 0xA
  6974     00AA                     	ds	1
  6975     00AB                     read_prec_or_width@c:
  6976     00AB                     atoi@n:	
  6977                           ; 1 bytes @ 0xB
  6978                           
  6979                           
  6980                           ; 2 bytes @ 0xB
  6981     00AB                     	ds	1
  6982     00AC                     ?_fputs:
  6983     00AC                     fputs@s:	
  6984                           ; 2 bytes @ 0xC
  6985                           
  6986     00AC                     read_prec_or_width@n:	
  6987                           ; 1 bytes @ 0xC
  6988                           
  6989                           
  6990                           ; 2 bytes @ 0xC
  6991     00AC                     	ds	1
  6992     00AD                     ?_setSetpoint:
  6993     00AD                     setSetpoint@new_setpoint:	
  6994                           ; 1 bytes @ 0xD
  6995                           
  6996     00AD                     fputs@fp:	
  6997                           ; 2 bytes @ 0xD
  6998                           
  6999     00AD                     ___fldiv@rem:	
  7000                           ; 2 bytes @ 0xD
  7001                           
  7002                           
  7003                           ; 4 bytes @ 0xD
  7004     00AD                     	ds	1
  7005     00AE                     ?___fladd:
  7006     00AE                     ___fladd@b:	
  7007                           ; 4 bytes @ 0xE
  7008                           
  7009                           
  7010                           ; 4 bytes @ 0xE
  7011     00AE                     	ds	1
  7012     00AF                     ??_setSetpoint:
  7013     00AF                     ??_fputs:	
  7014                           ; 1 bytes @ 0xF
  7015                           
  7016                           
  7017                           ; 1 bytes @ 0xF
  7018     00AF                     	ds	2
  7019     00B1                     ___fldiv@sign:
  7020     00B1                     fputs@c:	
  7021                           ; 1 bytes @ 0x11
  7022                           
  7023                           
  7024                           ; 1 bytes @ 0x11
  7025     00B1                     	ds	1
  7026     00B2                     ___fldiv@new_exp:
  7027     00B2                     fputs@i:	
  7028                           ; 2 bytes @ 0x12
  7029                           
  7030     00B2                     ___fladd@a:	
  7031                           ; 2 bytes @ 0x12
  7032                           
  7033                           
  7034                           ; 4 bytes @ 0x12
  7035     00B2                     	ds	2
  7036     00B4                     ?_pad:
  7037     00B4                     pad@fp:	
  7038                           ; 1 bytes @ 0x14
  7039                           
  7040     00B4                     ___fldiv@grs:	
  7041                           ; 2 bytes @ 0x14
  7042                           
  7043                           
  7044                           ; 4 bytes @ 0x14
  7045     00B4                     	ds	2
  7046     00B6                     pad@buf:
  7047     00B6                     ??___fladd:	
  7048                           ; 1 bytes @ 0x16
  7049                           
  7050                           
  7051                           ; 1 bytes @ 0x16
  7052     00B6                     	ds	1
  7053     00B7                     pad@p:
  7054                           
  7055                           ; 2 bytes @ 0x17
  7056     00B7                     	ds	1
  7057     00B8                     ___fldiv@bexp:
  7058                           
  7059                           ; 1 bytes @ 0x18
  7060     00B8                     	ds	1
  7061     00B9                     ___fldiv@aexp:
  7062     00B9                     ??_pad:	
  7063                           ; 1 bytes @ 0x19
  7064                           
  7065                           
  7066                           ; 1 bytes @ 0x19
  7067     00B9                     	ds	1
  7068     00BA                     pad@i:
  7069                           
  7070                           ; 2 bytes @ 0x1A
  7071     00BA                     	ds	2
  7072     00BC                     ?_dtoa:
  7073     00BC                     ?_utoa:	
  7074                           ; 1 bytes @ 0x1C
  7075                           
  7076     00BC                     dtoa@fp:	
  7077                           ; 1 bytes @ 0x1C
  7078                           
  7079     00BC                     utoa@fp:	
  7080                           ; 2 bytes @ 0x1C
  7081                           
  7082                           
  7083                           ; 2 bytes @ 0x1C
  7084     00BC                     	ds	2
  7085     00BE                     ___fladd@signs:
  7086     00BE                     dtoa@d:	
  7087                           ; 1 bytes @ 0x1E
  7088                           
  7089     00BE                     utoa@d:	
  7090                           ; 2 bytes @ 0x1E
  7091                           
  7092                           
  7093                           ; 2 bytes @ 0x1E
  7094     00BE                     	ds	1
  7095     00BF                     ___fladd@aexp:
  7096                           
  7097                           ; 1 bytes @ 0x1F
  7098     00BF                     	ds	1
  7099     00C0                     ___fladd@bexp:
  7100     00C0                     ??_dtoa:	
  7101                           ; 1 bytes @ 0x20
  7102                           
  7103     00C0                     ??_utoa:	
  7104                           ; 1 bytes @ 0x20
  7105                           
  7106                           
  7107                           ; 1 bytes @ 0x20
  7108     00C0                     	ds	1
  7109     00C1                     ___fladd@grs:
  7110     00C1                     utoa@p:	
  7111                           ; 1 bytes @ 0x21
  7112                           
  7113     00C1                     _dtoa$2128:	
  7114                           ; 1 bytes @ 0x21
  7115                           
  7116                           
  7117                           ; 2 bytes @ 0x21
  7118     00C1                     	ds	1
  7119     00C2                     ?___flsub:
  7120     00C2                     utoa@w:	
  7121                           ; 4 bytes @ 0x22
  7122                           
  7123     00C2                     ___flsub@a:	
  7124                           ; 2 bytes @ 0x22
  7125                           
  7126                           
  7127                           ; 4 bytes @ 0x22
  7128     00C2                     	ds	1
  7129     00C3                     dtoa@p:
  7130                           
  7131                           ; 1 bytes @ 0x23
  7132     00C3                     	ds	1
  7133     00C4                     dtoa@w:
  7134     00C4                     utoa@i:	
  7135                           ; 2 bytes @ 0x24
  7136                           
  7137                           
  7138                           ; 2 bytes @ 0x24
  7139     00C4                     	ds	2
  7140     00C6                     dtoa@s:
  7141     00C6                     ___flsub@b:	
  7142                           ; 1 bytes @ 0x26
  7143                           
  7144                           
  7145                           ; 4 bytes @ 0x26
  7146     00C6                     	ds	1
  7147     00C7                     dtoa@i:
  7148                           
  7149                           ; 2 bytes @ 0x27
  7150     00C7                     	ds	2
  7151     00C9                     ?_vfpfcnvrt:
  7152     00C9                     vfpfcnvrt@fp:	
  7153                           ; 1 bytes @ 0x29
  7154                           
  7155                           
  7156                           ; 2 bytes @ 0x29
  7157     00C9                     	ds	1
  7158     00CA                     ?___flmul:
  7159     00CA                     ___flmul@b:	
  7160                           ; 4 bytes @ 0x2A
  7161                           
  7162     00CA                     ??___flsub:	
  7163                           ; 4 bytes @ 0x2A
  7164                           
  7165                           
  7166                           ; 1 bytes @ 0x2A
  7167     00CA                     	ds	1
  7168     00CB                     vfpfcnvrt@fmt:
  7169                           
  7170                           ; 1 bytes @ 0x2B
  7171     00CB                     	ds	1
  7172     00CC                     vfpfcnvrt@ap:
  7173                           
  7174                           ; 1 bytes @ 0x2C
  7175     00CC                     	ds	1
  7176     00CD                     ??_vfpfcnvrt:
  7177                           
  7178                           ; 1 bytes @ 0x2D
  7179     00CD                     	ds	1
  7180     00CE                     ___flmul@a:
  7181                           
  7182                           ; 4 bytes @ 0x2E
  7183     00CE                     	ds	3
  7184     00D1                     vfpfcnvrt@done:
  7185                           
  7186                           ; 1 bytes @ 0x31
  7187     00D1                     	ds	1
  7188     00D2                     vfpfcnvrt@convarg:
  7189     00D2                     ??___flmul:	
  7190                           ; 4 bytes @ 0x32
  7191                           
  7192                           
  7193                           ; 1 bytes @ 0x32
  7194     00D2                     	ds	4
  7195     00D6                     vfpfcnvrt@cp:
  7196                           
  7197                           ; 2 bytes @ 0x36
  7198     00D6                     	ds	1
  7199     00D7                     ___flmul@sign:
  7200                           
  7201                           ; 1 bytes @ 0x37
  7202     00D7                     	ds	1
  7203     00D8                     ?_vfprintf:
  7204     00D8                     vfprintf@fp:	
  7205                           ; 2 bytes @ 0x38
  7206                           
  7207     00D8                     ___flmul@grs:	
  7208                           ; 2 bytes @ 0x38
  7209                           
  7210                           
  7211                           ; 4 bytes @ 0x38
  7212     00D8                     	ds	2
  7213     00DA                     vfprintf@fmt:
  7214                           
  7215                           ; 2 bytes @ 0x3A
  7216     00DA                     	ds	2
  7217     00DC                     ___flmul@aexp:
  7218     00DC                     vfprintf@ap:	
  7219                           ; 1 bytes @ 0x3C
  7220                           
  7221                           
  7222                           ; 1 bytes @ 0x3C
  7223     00DC                     	ds	1
  7224     00DD                     ___flmul@bexp:
  7225     00DD                     ??_vfprintf:	
  7226                           ; 1 bytes @ 0x3D
  7227                           
  7228                           
  7229                           ; 1 bytes @ 0x3D
  7230     00DD                     	ds	1
  7231     00DE                     vfprintf@cfmt:
  7232     00DE                     ___flmul@prod:	
  7233                           ; 2 bytes @ 0x3E
  7234                           
  7235                           
  7236                           ; 4 bytes @ 0x3E
  7237     00DE                     	ds	2
  7238     00E0                     ?_printf:
  7239     00E0                     printf@fmt:	
  7240                           ; 2 bytes @ 0x40
  7241                           
  7242                           
  7243                           ; 2 bytes @ 0x40
  7244     00E0                     	ds	2
  7245     00E2                     ___flmul@temp:
  7246                           
  7247                           ; 2 bytes @ 0x42
  7248     00E2                     	ds	2
  7249     00E4                     ?_str2float:
  7250     00E4                     ?___fltol:	
  7251                           ; 4 bytes @ 0x44
  7252                           
  7253     00E4                     str2float@str:	
  7254                           ; 4 bytes @ 0x44
  7255                           
  7256     00E4                     ___fltol@f1:	
  7257                           ; 1 bytes @ 0x44
  7258                           
  7259                           
  7260                           ; 4 bytes @ 0x44
  7261     00E4                     	ds	2
  7262     00E6                     printf@ap:
  7263     00E6                     ??_printf:	
  7264                           ; 1 bytes @ 0x46
  7265                           
  7266                           
  7267                           ; 1 bytes @ 0x46
  7268     00E6                     	ds	1
  7269     00E7                     ?_readLine:
  7270                           
  7271                           ; 1 bytes @ 0x47
  7272     00E7                     	ds	1
  7273     00E8                     str2float@decimal_separator:
  7274     00E8                     ??_str2float:	
  7275                           ; 1 bytes @ 0x48
  7276                           
  7277     00E8                     ??___fltol:	
  7278                           ; 1 bytes @ 0x48
  7279                           
  7280                           
  7281                           ; 1 bytes @ 0x48
  7282     00E8                     	ds	1
  7283     00E9                     str2float@multiplier:
  7284     00E9                     ??_readLine:	
  7285                           ; 1 bytes @ 0x49
  7286                           
  7287                           
  7288                           ; 1 bytes @ 0x49
  7289     00E9                     	ds	1
  7290     00EA                     str2float@i:
  7291                           
  7292                           ; 1 bytes @ 0x4A
  7293     00EA                     	ds	1
  7294     00EB                     str2float@number:
  7295                           
  7296                           ; 4 bytes @ 0x4B
  7297     00EB                     	ds	1
  7298     00EC                     ___fltol@sign1:
  7299                           
  7300                           ; 1 bytes @ 0x4C
  7301     00EC                     	ds	1
  7302     00ED                     ___fltol@exp1:
  7303                           
  7304                           ; 1 bytes @ 0x4D
  7305     00ED                     	ds	1
  7306     00EE                     ?_getLedNumber:
  7307     00EE                     getLedNumber@height:	
  7308                           ; 2 bytes @ 0x4E
  7309                           
  7310     00EE                     ??_printFloat:	
  7311                           ; 2 bytes @ 0x4E
  7312                           
  7313                           
  7314                           ; 1 bytes @ 0x4E
  7315     00EE                     	ds	1
  7316     00EF                     str2float@digit:
  7317                           
  7318                           ; 1 bytes @ 0x4F
  7319     00EF                     	ds	1
  7320     00F0                     ??_uartHandler:
  7321     00F0                     ??_printLogs:	
  7322                           ; 1 bytes @ 0x50
  7323                           
  7324     00F0                     ??_setKp:	
  7325                           ; 1 bytes @ 0x50
  7326                           
  7327     00F0                     ??_setKi:	
  7328                           ; 1 bytes @ 0x50
  7329                           
  7330     00F0                     ??_TMR6_Tasks:	
  7331                           ; 1 bytes @ 0x50
  7332                           
  7333     00F0                     ??_getLedNumber:	
  7334                           ; 1 bytes @ 0x50
  7335                           
  7336     00F0                     ??_updateLedstripAnimation:	
  7337                           ; 1 bytes @ 0x50
  7338                           
  7339                           
  7340                           	psect	cstackCOMMON
  7341     0070                     __pcstackCOMMON:	
  7342                           ; 1 bytes @ 0x50
  7343                           
  7344     0070                     ?_ADC_DefaultInterruptHandler:
  7345     0070                     ?_SPI1_Initialize:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348     0070                     ?_TMR4_ISR:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351     0070                     ?_TMR2_ISR:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354     0070                     ?_TMR2_Initialize:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357     0070                     ?_TMR4_Initialize:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360     0070                     ?_TMR6_Initialize:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363     0070                     ?_EUSART_Initialize:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369     0070                     ?_TMR4_DefaultPeriodMatchCallback:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372     0070                     ?_TMR6_DefaultPeriodMatchCallback:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375     0070                     ?_EUSART_Read:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378     0070                     ?_EUSART_IsRxReady:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381     0070                     ?_EUSART_IsTxReady:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384     0070                     ?_EUSART_ReceiveISR:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387     0070                     ?_EUSART_TransmitISR:	
  7388                           ; 1 bytes @ 0x0
  7389                           
  7390     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  7391                           ; 1 bytes @ 0x0
  7392                           
  7393     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  7394                           ; 1 bytes @ 0x0
  7395                           
  7396     0070                     ?_initAdcMultiplexer:	
  7397                           ; 1 bytes @ 0x0
  7398                           
  7399     0070                     ?_controller:	
  7400                           ; 1 bytes @ 0x0
  7401                           
  7402     0070                     ?_initLedstrip:	
  7403                           ; 1 bytes @ 0x0
  7404                           
  7405     0070                     ?_uartHandler:	
  7406                           ; 1 bytes @ 0x0
  7407                           
  7408     0070                     ?_printLogs:	
  7409                           ; 1 bytes @ 0x0
  7410                           
  7411     0070                     ?_ADC_Initialize:	
  7412                           ; 1 bytes @ 0x0
  7413                           
  7414     0070                     ?_ADC_SelectChannel:	
  7415                           ; 1 bytes @ 0x0
  7416                           
  7417     0070                     ?_ADC_ISR:	
  7418                           ; 1 bytes @ 0x0
  7419                           
  7420     0070                     ?_pwm_fan_Initialize:	
  7421                           ; 1 bytes @ 0x0
  7422                           
  7423     0070                     ?_pwm_fan_LoadDutyValue:	
  7424                           ; 1 bytes @ 0x0
  7425                           
  7426     0070                     ?_INTERRUPT_Initialize:	
  7427                           ; 1 bytes @ 0x0
  7428                           
  7429     0070                     ?_INTERRUPT_InterruptManager:	
  7430                           ; 1 bytes @ 0x0
  7431                           
  7432     0070                     ?_CLOCK_Initialize:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435     0070                     ?_PIN_MANAGER_Initialize:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438     0070                     ?_SYSTEM_Initialize:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441     0070                     ?_TMR6_Tasks:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444     0070                     ?_putch:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447     0070                     ?_adcConversionDoneHandler:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450     0070                     ?_sendLedstripStartFrame:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453     0070                     ?_sendLedstripEndFrame:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456     0070                     ?_position_led_strip:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459     0070                     ?_updateLedstripAnimation:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462     0070                     ?i1_ADC_SelectChannel:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465     0070                     ?_ADC_GetConversionResult:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468     0070                     ?_main:	
  7469                           ; 2 bytes @ 0x0
  7470                           
  7471     0070                     ?i1_getHoogtesensor:	
  7472                           ; 2 bytes @ 0x0
  7473                           
  7474     0070                     ?i1__Umul8_16:	
  7475                           ; 2 bytes @ 0x0
  7476                           
  7477     0070                     ?i1___xxtofl:	
  7478                           ; 2 bytes @ 0x0
  7479                           
  7480     0070                     EUSART_ReceiveISR@regValue:	
  7481                           ; 4 bytes @ 0x0
  7482                           
  7483     0070                     EUSART_TransmitISR@tempTxTail:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486     0070                     i1__Umul8_16@multiplicand:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489     0070                     pwm_fan_LoadDutyValue@dutyValue:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492     0070                     i1___xxtofl@val:	
  7493                           ; 2 bytes @ 0x0
  7494                           
  7495     0070                     ??_ADC_DefaultInterruptHandler:	
  7496                           ; 4 bytes @ 0x0
  7497                           
  7498     0070                     ??_TMR2_ISR:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504     0070                     ??_TMR4_DefaultPeriodMatchCallback:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507     0070                     ??_EUSART_ReceiveISR:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510     0070                     ??_EUSART_TransmitISR:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519     0070                     ??i1_ADC_SelectChannel:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522                           
  7523                           ; 1 bytes @ 0x0
  7524     0070                     	ds	1
  7525     0071                     EUSART_ReceiveISR@tempRxHead:
  7526     0071                     i1ADC_SelectChannel@channel:	
  7527                           ; 1 bytes @ 0x1
  7528                           
  7529                           
  7530                           ; 1 bytes @ 0x1
  7531     0071                     	ds	1
  7532     0072                     ??_ADC_GetConversionResult:
  7533     0072                     ??_pwm_fan_LoadDutyValue:	
  7534                           ; 1 bytes @ 0x2
  7535                           
  7536     0072                     ??_adcConversionDoneHandler:	
  7537                           ; 1 bytes @ 0x2
  7538                           
  7539     0072                     ??i1_getHoogtesensor:	
  7540                           ; 1 bytes @ 0x2
  7541                           
  7542     0072                     ??i1__Umul8_16:	
  7543                           ; 1 bytes @ 0x2
  7544                           
  7545                           
  7546                           ; 1 bytes @ 0x2
  7547     0072                     	ds	2
  7548     0074                     i1__Umul8_16@product:
  7549     0074                     ??_ADC_ISR:	
  7550                           ; 2 bytes @ 0x4
  7551                           
  7552     0074                     ??i1___xxtofl:	
  7553                           ; 1 bytes @ 0x4
  7554                           
  7555                           
  7556                           ; 1 bytes @ 0x4
  7557     0074                     	ds	2
  7558     0076                     i1__Umul8_16@word_mpld:
  7559                           
  7560                           ; 2 bytes @ 0x6
  7561     0076                     	ds	2
  7562     0078                     i1__Umul8_16@multiplier:
  7563     0078                     i1___xxtofl@sign:	
  7564                           ; 1 bytes @ 0x8
  7565                           
  7566                           
  7567                           ; 1 bytes @ 0x8
  7568     0078                     	ds	1
  7569     0079                     i1___xxtofl@exp:
  7570                           
  7571                           ; 1 bytes @ 0x9
  7572     0079                     	ds	1
  7573     007A                     i1___xxtofl@arg:
  7574                           
  7575                           ; 4 bytes @ 0xA
  7576     007A                     	ds	4
  7577     007E                     ??_TMR4_ISR:
  7578     007E                     ??_INTERRUPT_InterruptManager:	
  7579                           ; 1 bytes @ 0xE
  7580                           
  7581                           
  7582                           	psect	cstackBANK0
  7583     0020                     __pcstackBANK0:	
  7584                           ; 1 bytes @ 0xE
  7585                           
  7586     0020                     ?i1___flmul:
  7587     0020                     i1___flmul@b:	
  7588                           ; 4 bytes @ 0x0
  7589                           
  7590                           
  7591                           ; 4 bytes @ 0x0
  7592     0020                     	ds	4
  7593     0024                     i1___flmul@a:
  7594                           
  7595                           ; 4 bytes @ 0x4
  7596     0024                     	ds	4
  7597     0028                     ??i1___flmul:
  7598                           
  7599                           ; 1 bytes @ 0x8
  7600     0028                     	ds	5
  7601     002D                     i1___flmul@sign:
  7602                           
  7603                           ; 1 bytes @ 0xD
  7604     002D                     	ds	1
  7605     002E                     i1___flmul@grs:
  7606                           
  7607                           ; 4 bytes @ 0xE
  7608     002E                     	ds	4
  7609     0032                     i1___flmul@aexp:
  7610                           
  7611                           ; 1 bytes @ 0x12
  7612     0032                     	ds	1
  7613     0033                     i1___flmul@bexp:
  7614                           
  7615                           ; 1 bytes @ 0x13
  7616     0033                     	ds	1
  7617     0034                     i1___flmul@prod:
  7618                           
  7619                           ; 4 bytes @ 0x14
  7620     0034                     	ds	4
  7621     0038                     i1___flmul@temp:
  7622                           
  7623                           ; 2 bytes @ 0x18
  7624     0038                     	ds	2
  7625     003A                     ?i1___fltol:
  7626     003A                     ?i1___fladd:	
  7627                           ; 4 bytes @ 0x1A
  7628                           
  7629     003A                     i1___fltol@f1:	
  7630                           ; 4 bytes @ 0x1A
  7631                           
  7632     003A                     i1___fladd@b:	
  7633                           ; 4 bytes @ 0x1A
  7634                           
  7635                           
  7636                           ; 4 bytes @ 0x1A
  7637     003A                     	ds	4
  7638     003E                     i1___fladd@a:
  7639     003E                     ??i1___fltol:	
  7640                           ; 4 bytes @ 0x1E
  7641                           
  7642                           
  7643                           ; 1 bytes @ 0x1E
  7644     003E                     	ds	4
  7645     0042                     i1___fltol@sign1:
  7646     0042                     ??i1___fladd:	
  7647                           ; 1 bytes @ 0x22
  7648                           
  7649                           
  7650                           ; 1 bytes @ 0x22
  7651     0042                     	ds	1
  7652     0043                     i1___fltol@exp1:
  7653                           
  7654                           ; 1 bytes @ 0x23
  7655     0043                     	ds	7
  7656     004A                     i1___fladd@signs:
  7657                           
  7658                           ; 1 bytes @ 0x2A
  7659     004A                     	ds	1
  7660     004B                     i1___fladd@aexp:
  7661                           
  7662                           ; 1 bytes @ 0x2B
  7663     004B                     	ds	1
  7664     004C                     i1___fladd@bexp:
  7665                           
  7666                           ; 1 bytes @ 0x2C
  7667     004C                     	ds	1
  7668     004D                     i1___fladd@grs:
  7669                           
  7670                           ; 1 bytes @ 0x2D
  7671     004D                     	ds	1
  7672     004E                     ??_controller:
  7673                           
  7674                           ; 1 bytes @ 0x2E
  7675     004E                     	ds	1
  7676     004F                     controller@P:
  7677                           
  7678                           ; 2 bytes @ 0x2F
  7679     004F                     	ds	2
  7680     0051                     controller@I:
  7681                           
  7682                           ; 2 bytes @ 0x31
  7683     0051                     	ds	2
  7684     0053                     controller@error:
  7685                           
  7686                           ; 2 bytes @ 0x33
  7687     0053                     	ds	2
  7688                           
  7689                           	psect	maintext
  7690     1129                     __pmaintext:	
  7691 ;;
  7692 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7693 ;;
  7694 ;; *************** function _main *****************
  7695 ;; Defined at:
  7696 ;;		line 49 in file "main.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;		None
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;  potwaarde       2   14[BANK2 ] unsigned short 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  2  792[None  ] int 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : B1F/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  7713 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;Total ram usage:        4 bytes
  7715 ;; Hardware stack levels required when called: 16
  7716 ;; This function calls:
  7717 ;;		_SYSTEM_Initialize
  7718 ;;		_TMR4_PeriodMatchCallbackRegister
  7719 ;;		_TMR6_Tasks
  7720 ;;		_getPotentiometer
  7721 ;;		_initAdcMultiplexer
  7722 ;;		_initLedstrip
  7723 ;;		_printLogs
  7724 ;;		_uartHandler
  7725 ;; This function is called by:
  7726 ;;		Startup code after reset
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730     1129                     _main:	
  7731                           ;psect for function _main
  7732                           
  7733     1129                     l6153:	
  7734                           ;incstack = 0
  7735                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7736                           
  7737                           
  7738                           ;main.c: 51:     SYSTEM_Initialize();
  7739     1129  319E  264A  3191   	fcall	_SYSTEM_Initialize
  7740     112C                     l6155:
  7741                           
  7742                           ;main.c: 57:     (INTCONbits.GIE = 1);
  7743     112C  178B               	bsf	11,7	;volatile
  7744     112D                     l6157:
  7745                           
  7746                           ;main.c: 63:     (INTCONbits.PEIE = 1);
  7747     112D  170B               	bsf	11,6	;volatile
  7748                           
  7749                           ;main.c: 68:     initAdcMultiplexer();
  7750     112E  319C  249C  3191   	fcall	_initAdcMultiplexer
  7751                           
  7752                           ;main.c: 69:     TMR4_PeriodMatchCallbackRegister(controller);
  7753     1131  3031               	movlw	low _controller
  7754     1132  0021               	movlb	1	; select bank1
  7755     1133  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
  7756     1134  300A               	movlw	high _controller
  7757     1135  00A1               	movwf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
  7758     1136  319B  23F0  3191   	fcall	_TMR4_PeriodMatchCallbackRegister
  7759     1139                     l6159:
  7760                           
  7761                           ;main.c: 70:     initLedstrip();
  7762     1139  319C  24A9  3191   	fcall	_initLedstrip
  7763     113C                     l6161:
  7764                           
  7765                           ;main.c: 73:     {;main.c: 74:         uartHandler();
  7766     113C  3188  2080  3191   	fcall	_uartHandler
  7767     113F                     l6163:
  7768     113F  0022               	movlb	2	; select bank2
  7769     1140  128C               	bcf	12,5	;volatile
  7770     1141                     l6165:
  7771     1141  108C               	bcf	12,1	;volatile
  7772     1142                     l6167:
  7773     1142  110C               	bcf	12,2	;volatile
  7774     1143                     l6169:
  7775                           
  7776                           ;main.c: 80:         uint16_t potwaarde = getPotentiometer();
  7777     1143  319C  240B  3191   	fcall	_getPotentiometer
  7778     1146  0021               	movlb	1	; select bank1
  7779     1147  0821               	movf	(?_getPotentiometer+1)^(0+128),w
  7780     1148  0022               	movlb	2	; select bank2
  7781     1149  00DD               	movwf	(main@potwaarde+1)^(0+256)
  7782     114A  0021               	movlb	1	; select bank1
  7783     114B  0820               	movf	?_getPotentiometer^(0+128),w
  7784     114C  0022               	movlb	2	; select bank2
  7785     114D  00DC               	movwf	main@potwaarde^(0+256)
  7786     114E                     l6171:
  7787                           
  7788                           ;main.c: 82:         if (potwaarde > 256) {
  7789     114E  3001               	movlw	1
  7790     114F  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7791     1150  3001               	movlw	1
  7792     1151  1903               	skipnz
  7793     1152  025C               	subwf	main@potwaarde^(0+256),w
  7794     1153  1C03               	skipc
  7795     1154  2956               	goto	u7651
  7796     1155  2957               	goto	u7650
  7797     1156                     u7651:
  7798     1156  2958               	goto	l6173
  7799     1157                     u7650:
  7800     1157                     l801:	
  7801                           ;main.c: 83:             do { LATAbits.LATA5 = 1; } while(0);
  7802                           
  7803     1157  168C               	bsf	12,5	;volatile
  7804     1158                     l6173:
  7805                           
  7806                           ;main.c: 85:         if (potwaarde > 512) {
  7807     1158  3002               	movlw	2
  7808     1159  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7809     115A  3001               	movlw	1
  7810     115B  1903               	skipnz
  7811     115C  025C               	subwf	main@potwaarde^(0+256),w
  7812     115D  1C03               	skipc
  7813     115E  2960               	goto	u7661
  7814     115F  2961               	goto	u7660
  7815     1160                     u7661:
  7816     1160  2962               	goto	l6175
  7817     1161                     u7660:
  7818     1161                     l804:	
  7819                           ;main.c: 86:             do { LATAbits.LATA1 = 1; } while(0);
  7820                           
  7821     1161  148C               	bsf	12,1	;volatile
  7822     1162                     l6175:
  7823                           
  7824                           ;main.c: 88:         if (potwaarde > 768) {
  7825     1162  3003               	movlw	3
  7826     1163  025D               	subwf	(main@potwaarde+1)^(0+256),w
  7827     1164  3001               	movlw	1
  7828     1165  1903               	skipnz
  7829     1166  025C               	subwf	main@potwaarde^(0+256),w
  7830     1167  1C03               	skipc
  7831     1168  296A               	goto	u7671
  7832     1169  296B               	goto	u7670
  7833     116A                     u7671:
  7834     116A  296C               	goto	l6177
  7835     116B                     u7670:
  7836     116B                     l807:	
  7837                           ;main.c: 89:             do { LATAbits.LATA2 = 1; } while(0);
  7838                           
  7839     116B  150C               	bsf	12,2	;volatile
  7840     116C                     l6177:
  7841                           
  7842                           ;main.c: 91:         _delay((unsigned long)((100)*(32000000U/4000.0)));
  7843     116C  3005               	movlw	5
  7844     116D  0022               	movlb	2	; select bank2
  7845     116E  00DB               	movwf	(??_main^(0+256)+1)
  7846     116F  300F               	movlw	15
  7847     1170  00DA               	movwf	??_main^(0+256)
  7848     1171  30F1               	movlw	241
  7849     1172                     u7707:
  7850     1172  0B89               	decfsz	9,f
  7851     1173  2972               	goto	u7707
  7852     1174  0BDA               	decfsz	??_main^(0+256),f
  7853     1175  2972               	goto	u7707
  7854     1176  0BDB               	decfsz	(??_main^(0+256)+1),f
  7855     1177  2972               	goto	u7707
  7856     1178                     l6179:
  7857                           
  7858                           ;main.c: 93:         printLogs();
  7859     1178  3188  2005  3191   	fcall	_printLogs
  7860     117B                     l6181:
  7861                           
  7862                           ;main.c: 94:         TMR6_Tasks();
  7863     117B  319D  2588  3191   	fcall	_TMR6_Tasks
  7864     117E  293C               	goto	l6161
  7865     117F  3180  2858         	ljmp	start
  7866     1181                     __end_of_main:
  7867                           
  7868                           	psect	text1
  7869     0880                     __ptext1:	
  7870 ;; *************** function _uartHandler *****************
  7871 ;; Defined at:
  7872 ;;		line 93 in file "UART.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;		None
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  str             1    4[BANK2 ] PTR unsigned char 
  7877 ;;		 -> line(20), 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;Total ram usage:        1 bytes
  7892 ;; Hardware stack levels used: 1
  7893 ;; Hardware stack levels required when called: 15
  7894 ;; This function calls:
  7895 ;;		_atoi
  7896 ;;		_printf
  7897 ;;		_readLine
  7898 ;;		_setKi
  7899 ;;		_setKp
  7900 ;;		_setSetpoint
  7901 ;;		_str2float
  7902 ;; This function is called by:
  7903 ;;		_main
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907     0880                     _uartHandler:	
  7908                           ;psect for function _uartHandler
  7909                           
  7910     0880                     l6069:	
  7911                           ;incstack = 0
  7912                           ; Regs used in _uartHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7913                           
  7914                           
  7915                           ;UART.c: 94:     char *str = readLine();
  7916     0880  3191  2181  3188   	fcall	_readLine
  7917     0883  0022               	movlb	2	; select bank2
  7918     0884  00D2               	movwf	uartHandler@str^(0+256)
  7919                           
  7920                           ;UART.c: 95:     switch (*str) {
  7921     0885  290C               	goto	l6089
  7922     0886                     l6071:
  7923                           
  7924                           ;UART.c: 101:             setSetpoint((uint16_t) atoi(str + 1));
  7925     0886  0852               	movf	uartHandler@str^(0+256),w
  7926     0887  3E01               	addlw	1
  7927     0888  0021               	movlb	1	; select bank1
  7928     0889  00A6               	movwf	atoi@s^(0+128)
  7929     088A  3195  250D  3188   	fcall	_atoi
  7930     088D  0021               	movlb	1	; select bank1
  7931     088E  0827               	movf	(?_atoi+1)^(0+128),w
  7932     088F  00AE               	movwf	(setSetpoint@new_setpoint+1)^(0+128)
  7933     0890  0826               	movf	?_atoi^(0+128),w
  7934     0891  00AD               	movwf	setSetpoint@new_setpoint^(0+128)
  7935     0892  319C  2438  3188   	fcall	_setSetpoint
  7936     0895                     l6073:
  7937                           
  7938                           ;UART.c: 102:             printf("changed setpoint to %u\r\n", (uint16_t) atoi(str + 1))
      +                          ;
  7939     0895  304C               	movlw	low (STR_9| (0+32768))
  7940     0896  0021               	movlb	1	; select bank1
  7941     0897  00E0               	movwf	printf@fmt^(0+128)
  7942     0898  3098               	movlw	high (STR_9| (0+32768))
  7943     0899  00E1               	movwf	(printf@fmt^(0+128)+1)
  7944     089A  0022               	movlb	2	; select bank2
  7945     089B  0852               	movf	uartHandler@str^(0+256),w
  7946     089C  3E01               	addlw	1
  7947     089D  0021               	movlb	1	; select bank1
  7948     089E  00A6               	movwf	atoi@s^(0+128)
  7949     089F  3195  250D  3188   	fcall	_atoi
  7950     08A2  0021               	movlb	1	; select bank1
  7951     08A3  0827               	movf	(?_atoi+1)^(0+128),w
  7952     08A4  00E3               	movwf	((?_printf+1)^(0+128)+2)
  7953     08A5  0826               	movf	?_atoi^(0+128),w
  7954     08A6  00E2               	movwf	(?_printf^(0+128)+2)
  7955     08A7  319D  2511  3188   	fcall	_printf
  7956                           
  7957                           ;UART.c: 103:             break;
  7958     08AA  292D               	goto	l920
  7959     08AB                     l6075:
  7960                           
  7961                           ;UART.c: 107:             setKp(str2float(str + 1));
  7962     08AB  0852               	movf	uartHandler@str^(0+256),w
  7963     08AC  3E01               	addlw	1
  7964     08AD  0021               	movlb	1	; select bank1
  7965     08AE  00E4               	movwf	str2float@str^(0+128)
  7966     08AF  3197  2755  3188   	fcall	_str2float
  7967     08B2  0021               	movlb	1	; select bank1
  7968     08B3  0867               	movf	(?_str2float+3)^(0+128),w
  7969     08B4  0022               	movlb	2	; select bank2
  7970     08B5  00D1               	movwf	(setKp@new_kp+3)^(0+256)
  7971     08B6  0021               	movlb	1	; select bank1
  7972     08B7  0866               	movf	(?_str2float+2)^(0+128),w
  7973     08B8  0022               	movlb	2	; select bank2
  7974     08B9  00D0               	movwf	(setKp@new_kp+2)^(0+256)
  7975     08BA  0021               	movlb	1	; select bank1
  7976     08BB  0865               	movf	(?_str2float+1)^(0+128),w
  7977     08BC  0022               	movlb	2	; select bank2
  7978     08BD  00CF               	movwf	(setKp@new_kp+1)^(0+256)
  7979     08BE  0021               	movlb	1	; select bank1
  7980     08BF  0864               	movf	?_str2float^(0+128),w
  7981     08C0  0022               	movlb	2	; select bank2
  7982     08C1  00CE               	movwf	setKp@new_kp^(0+256)
  7983     08C2  319C  2455  3188   	fcall	_setKp
  7984     08C5                     l6077:
  7985                           
  7986                           ;UART.c: 108:             printf("changed kp\r\n");
  7987     08C5  30CA               	movlw	low (STR_10| (0+32768))
  7988     08C6  0021               	movlb	1	; select bank1
  7989     08C7  00E0               	movwf	printf@fmt^(0+128)
  7990     08C8  3098               	movlw	high (STR_10| (0+32768))
  7991     08C9  00E1               	movwf	(printf@fmt^(0+128)+1)
  7992     08CA  319D  2511  3188   	fcall	_printf
  7993                           
  7994                           ;UART.c: 109:             break;
  7995     08CD  292D               	goto	l920
  7996     08CE                     l6079:
  7997                           
  7998                           ;UART.c: 112:             setKi(str2float(str + 1));
  7999     08CE  0852               	movf	uartHandler@str^(0+256),w
  8000     08CF  3E01               	addlw	1
  8001     08D0  0021               	movlb	1	; select bank1
  8002     08D1  00E4               	movwf	str2float@str^(0+128)
  8003     08D2  3197  2755  3188   	fcall	_str2float
  8004     08D5  0021               	movlb	1	; select bank1
  8005     08D6  0867               	movf	(?_str2float+3)^(0+128),w
  8006     08D7  0022               	movlb	2	; select bank2
  8007     08D8  00D1               	movwf	(setKi@new_ki+3)^(0+256)
  8008     08D9  0021               	movlb	1	; select bank1
  8009     08DA  0866               	movf	(?_str2float+2)^(0+128),w
  8010     08DB  0022               	movlb	2	; select bank2
  8011     08DC  00D0               	movwf	(setKi@new_ki+2)^(0+256)
  8012     08DD  0021               	movlb	1	; select bank1
  8013     08DE  0865               	movf	(?_str2float+1)^(0+128),w
  8014     08DF  0022               	movlb	2	; select bank2
  8015     08E0  00CF               	movwf	(setKi@new_ki+1)^(0+256)
  8016     08E1  0021               	movlb	1	; select bank1
  8017     08E2  0864               	movf	?_str2float^(0+128),w
  8018     08E3  0022               	movlb	2	; select bank2
  8019     08E4  00CE               	movwf	setKi@new_ki^(0+256)
  8020     08E5  319C  244B  3188   	fcall	_setKi
  8021     08E8                     l6081:
  8022                           
  8023                           ;UART.c: 113:             printf("changed ki\r\n");
  8024     08E8  30BD               	movlw	low (STR_11| (0+32768))
  8025     08E9  0021               	movlb	1	; select bank1
  8026     08EA  00E0               	movwf	printf@fmt^(0+128)
  8027     08EB  3098               	movlw	high (STR_11| (0+32768))
  8028     08EC  00E1               	movwf	(printf@fmt^(0+128)+1)
  8029     08ED  319D  2511  3188   	fcall	_printf
  8030                           
  8031                           ;UART.c: 114:             break;
  8032     08F0  292D               	goto	l920
  8033     08F1                     l6083:
  8034                           
  8035                           ;UART.c: 117:             mustPrintLogs = !mustPrintLogs;
  8036     08F1  0020               	movlb	0	; select bank0
  8037     08F2  086E               	movf	_mustPrintLogs,w
  8038     08F3  1903               	btfsc	3,2
  8039     08F4  28F6               	goto	u7471
  8040     08F5  28F8               	goto	u7470
  8041     08F6                     u7471:
  8042     08F6  3001               	movlw	1
  8043     08F7  28F9               	goto	u7480
  8044     08F8                     u7470:
  8045     08F8  3000               	movlw	0
  8046     08F9                     u7480:
  8047     08F9  00EE               	movwf	_mustPrintLogs
  8048     08FA                     l6085:
  8049                           
  8050                           ;UART.c: 118:             printf("logs toggled\r\n");
  8051     08FA  309F               	movlw	low (STR_12| (0+32768))
  8052     08FB  0021               	movlb	1	; select bank1
  8053     08FC  00E0               	movwf	printf@fmt^(0+128)
  8054     08FD  3098               	movlw	high (STR_12| (0+32768))
  8055     08FE  00E1               	movwf	(printf@fmt^(0+128)+1)
  8056     08FF  319D  2511  3188   	fcall	_printf
  8057                           
  8058                           ;UART.c: 119:             break;
  8059     0902  292D               	goto	l920
  8060     0903                     l6087:
  8061                           
  8062                           ;UART.c: 123:             printf("Unkown command\r\n");
  8063     0903  307D               	movlw	low (STR_13| (0+32768))
  8064     0904  0021               	movlb	1	; select bank1
  8065     0905  00E0               	movwf	printf@fmt^(0+128)
  8066     0906  3098               	movlw	high (STR_13| (0+32768))
  8067     0907  00E1               	movwf	(printf@fmt^(0+128)+1)
  8068     0908  319D  2511  3188   	fcall	_printf
  8069                           
  8070                           ;UART.c: 124:     };
  8071     090B  292D               	goto	l920
  8072     090C                     l6089:
  8073     090C  0852               	movf	uartHandler@str^(0+256),w
  8074     090D  0086               	movwf	6
  8075     090E  3001               	movlw	1	; select bank2/3
  8076     090F  0087               	movwf	7
  8077     0910  0801               	movf	1,w
  8078                           
  8079                           ; Switch size 1, requested type "simple"
  8080                           ; Number of cases is 9, Range of values is 0 to 115
  8081                           ; switch strategies available:
  8082                           ; Name         Instructions Cycles
  8083                           ; simple_byte           28    15 (average)
  8084                           ; direct_byte          238     6 (fixed)
  8085                           ; jumptable            260     6 (fixed)
  8086                           ;	Chosen strategy is simple_byte
  8087     0911  3A00               	xorlw	0	; case 0
  8088     0912  1903               	skipnz
  8089     0913  292D               	goto	l920
  8090     0914  3A49               	xorlw	73	; case 73
  8091     0915  1903               	skipnz
  8092     0916  28CE               	goto	l6079
  8093     0917  3A05               	xorlw	5	; case 76
  8094     0918  1903               	skipnz
  8095     0919  28F1               	goto	l6083
  8096     091A  3A1C               	xorlw	28	; case 80
  8097     091B  1903               	skipnz
  8098     091C  28AB               	goto	l6075
  8099     091D  3A03               	xorlw	3	; case 83
  8100     091E  1903               	skipnz
  8101     091F  2886               	goto	l6071
  8102     0920  3A3A               	xorlw	58	; case 105
  8103     0921  1903               	skipnz
  8104     0922  28CE               	goto	l6079
  8105     0923  3A05               	xorlw	5	; case 108
  8106     0924  1903               	skipnz
  8107     0925  28F1               	goto	l6083
  8108     0926  3A1C               	xorlw	28	; case 112
  8109     0927  1903               	skipnz
  8110     0928  28AB               	goto	l6075
  8111     0929  3A03               	xorlw	3	; case 115
  8112     092A  1903               	skipnz
  8113     092B  2886               	goto	l6071
  8114     092C  2903               	goto	l6087
  8115     092D                     l920:
  8116     092D  0008               	return
  8117     092E                     __end_of_uartHandler:
  8118                           
  8119                           	psect	text2
  8120     1755                     __ptext2:	
  8121 ;; *************** function _str2float *****************
  8122 ;; Defined at:
  8123 ;;		line 25 in file "UART.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  str             1   68[BANK1 ] PTR unsigned char 
  8126 ;;		 -> line(20), 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  i               1   74[BANK1 ] unsigned char 
  8129 ;;  digit           1   79[BANK1 ] unsigned char 
  8130 ;;  number          4   75[BANK1 ] float 
  8131 ;;  multiplier      1   73[BANK1 ] unsigned char 
  8132 ;;  decimal_sepa    1   72[BANK1 ] _Bool 
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  4   68[BANK1 ] float 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8142 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;Total ram usage:       12 bytes
  8147 ;; Hardware stack levels used: 1
  8148 ;; Hardware stack levels required when called: 7
  8149 ;; This function calls:
  8150 ;;		___fladd
  8151 ;;		___fldiv
  8152 ;;		___flmul
  8153 ;;		___xxtofl
  8154 ;; This function is called by:
  8155 ;;		_uartHandler
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159     1755                     _str2float:	
  8160                           ;psect for function _str2float
  8161                           
  8162     1755                     l5817:	
  8163                           ;incstack = 0
  8164                           ; Regs used in _str2float: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8165                           
  8166                           
  8167                           ;UART.c: 26:     float number = 0;
  8168     1755  3000               	movlw	0
  8169     1756  0021               	movlb	1	; select bank1
  8170     1757  00EE               	movwf	(str2float@number+3)^(0+128)
  8171     1758  3000               	movlw	0
  8172     1759  00ED               	movwf	(str2float@number+2)^(0+128)
  8173     175A  3000               	movlw	0
  8174     175B  00EC               	movwf	(str2float@number+1)^(0+128)
  8175     175C  3000               	movlw	0
  8176     175D  00EB               	movwf	str2float@number^(0+128)
  8177     175E                     l5819:
  8178                           
  8179                           ;UART.c: 27:     _Bool decimal_separator = 0;
  8180     175E  01E8               	clrf	str2float@decimal_separator^(0+128)
  8181     175F                     l5821:
  8182                           
  8183                           ;UART.c: 30:         char digit = *str++;
  8184     175F  0864               	movf	str2float@str^(0+128),w
  8185     1760  0086               	movwf	6
  8186     1761  3001               	movlw	1	; select bank2/3
  8187     1762  0087               	movwf	7
  8188     1763  0801               	movf	1,w
  8189     1764  00EF               	movwf	str2float@digit^(0+128)
  8190     1765                     l5823:
  8191     1765  3001               	movlw	1
  8192     1766  07E4               	addwf	str2float@str^(0+128),f
  8193     1767                     l5825:
  8194                           
  8195                           ;UART.c: 31:         if ('0' <= digit && digit <= '9') {
  8196     1767  3030               	movlw	48
  8197     1768  026F               	subwf	str2float@digit^(0+128),w
  8198     1769  1C03               	skipc
  8199     176A  2F6C               	goto	u7161
  8200     176B  2F6D               	goto	u7160
  8201     176C                     u7161:
  8202     176C  2FBC               	goto	l5833
  8203     176D                     u7160:
  8204     176D                     l5827:
  8205     176D  303A               	movlw	58
  8206     176E  026F               	subwf	str2float@digit^(0+128),w
  8207     176F  1803               	skipnc
  8208     1770  2F72               	goto	u7171
  8209     1771  2F73               	goto	u7170
  8210     1772                     u7171:
  8211     1772  2FBC               	goto	l5833
  8212     1773                     u7170:
  8213     1773                     l5829:
  8214                           
  8215                           ;UART.c: 32:             number *= 10;
  8216     1773  3041               	movlw	65
  8217     1774  00CD               	movwf	(___flmul@b+3)^(0+128)
  8218     1775  3020               	movlw	32
  8219     1776  00CC               	movwf	(___flmul@b+2)^(0+128)
  8220     1777  3000               	movlw	0
  8221     1778  00CB               	movwf	(___flmul@b+1)^(0+128)
  8222     1779  3000               	movlw	0
  8223     177A  00CA               	movwf	___flmul@b^(0+128)
  8224     177B  086E               	movf	(str2float@number+3)^(0+128),w
  8225     177C  00D1               	movwf	(___flmul@a+3)^(0+128)
  8226     177D  086D               	movf	(str2float@number+2)^(0+128),w
  8227     177E  00D0               	movwf	(___flmul@a+2)^(0+128)
  8228     177F  086C               	movf	(str2float@number+1)^(0+128),w
  8229     1780  00CF               	movwf	(___flmul@a+1)^(0+128)
  8230     1781  086B               	movf	str2float@number^(0+128),w
  8231     1782  00CE               	movwf	___flmul@a^(0+128)
  8232     1783  3180  208E  3197   	fcall	___flmul
  8233     1786  0021               	movlb	1	; select bank1
  8234     1787  084D               	movf	(?___flmul+3)^(0+128),w
  8235     1788  00EE               	movwf	(str2float@number+3)^(0+128)
  8236     1789  084C               	movf	(?___flmul+2)^(0+128),w
  8237     178A  00ED               	movwf	(str2float@number+2)^(0+128)
  8238     178B  084B               	movf	(?___flmul+1)^(0+128),w
  8239     178C  00EC               	movwf	(str2float@number+1)^(0+128)
  8240     178D  084A               	movf	?___flmul^(0+128),w
  8241     178E  00EB               	movwf	str2float@number^(0+128)
  8242                           
  8243                           ;UART.c: 33:             number += digit - '0';
  8244     178F  086F               	movf	str2float@digit^(0+128),w
  8245     1790  3ED0               	addlw	208
  8246     1791  00A0               	movwf	___xxtofl@val^(0+128)
  8247     1792  30FF               	movlw	255
  8248     1793  1803               	skipnc
  8249     1794  3000               	movlw	0
  8250     1795  00A1               	movwf	(___xxtofl@val^(0+128)+1)
  8251     1796  01A2               	clrf	(___xxtofl@val+2)^(0+128)
  8252     1797  01A3               	clrf	(___xxtofl@val+3)^(0+128)
  8253     1798  3000               	movlw	0
  8254     1799  3196  26B0  3197   	fcall	___xxtofl
  8255     179C  0021               	movlb	1	; select bank1
  8256     179D  0823               	movf	(?___xxtofl+3)^(0+128),w
  8257     179E  00B1               	movwf	(___fladd@b+3)^(0+128)
  8258     179F  0822               	movf	(?___xxtofl+2)^(0+128),w
  8259     17A0  00B0               	movwf	(___fladd@b+2)^(0+128)
  8260     17A1  0821               	movf	(?___xxtofl+1)^(0+128),w
  8261     17A2  00AF               	movwf	(___fladd@b+1)^(0+128)
  8262     17A3  0820               	movf	?___xxtofl^(0+128),w
  8263     17A4  00AE               	movwf	___fladd@b^(0+128)
  8264     17A5  086E               	movf	(str2float@number+3)^(0+128),w
  8265     17A6  00B5               	movwf	(___fladd@a+3)^(0+128)
  8266     17A7  086D               	movf	(str2float@number+2)^(0+128),w
  8267     17A8  00B4               	movwf	(___fladd@a+2)^(0+128)
  8268     17A9  086C               	movf	(str2float@number+1)^(0+128),w
  8269     17AA  00B3               	movwf	(___fladd@a+1)^(0+128)
  8270     17AB  086B               	movf	str2float@number^(0+128),w
  8271     17AC  00B2               	movwf	___fladd@a^(0+128)
  8272     17AD  3185  2504  3197   	fcall	___fladd
  8273     17B0  0021               	movlb	1	; select bank1
  8274     17B1  0831               	movf	(?___fladd+3)^(0+128),w
  8275     17B2  00EE               	movwf	(str2float@number+3)^(0+128)
  8276     17B3  0830               	movf	(?___fladd+2)^(0+128),w
  8277     17B4  00ED               	movwf	(str2float@number+2)^(0+128)
  8278     17B5  082F               	movf	(?___fladd+1)^(0+128),w
  8279     17B6  00EC               	movwf	(str2float@number+1)^(0+128)
  8280     17B7  082E               	movf	?___fladd^(0+128),w
  8281     17B8  00EB               	movwf	str2float@number^(0+128)
  8282     17B9                     l5831:
  8283                           
  8284                           ;UART.c: 34:             multiplier++;
  8285     17B9  3001               	movlw	1
  8286     17BA  07E9               	addwf	str2float@multiplier^(0+128),f
  8287                           
  8288                           ;UART.c: 35:         } else if (digit == ',' || digit == '.') {
  8289     17BB  2F5F               	goto	l5821
  8290     17BC                     l5833:
  8291     17BC  302C               	movlw	44
  8292     17BD  066F               	xorwf	str2float@digit^(0+128),w
  8293     17BE  1903               	btfsc	3,2
  8294     17BF  2FC1               	goto	u7181
  8295     17C0  2FC2               	goto	u7180
  8296     17C1                     u7181:
  8297     17C1  2FC8               	goto	l878
  8298     17C2                     u7180:
  8299     17C2                     l5835:
  8300     17C2  302E               	movlw	46
  8301     17C3  066F               	xorwf	str2float@digit^(0+128),w
  8302     17C4  1D03               	btfss	3,2
  8303     17C5  2FC7               	goto	u7191
  8304     17C6  2FC8               	goto	u7190
  8305     17C7                     u7191:
  8306     17C7  2FCC               	goto	l5839
  8307     17C8                     u7190:
  8308     17C8                     l878:
  8309                           
  8310                           ;UART.c: 36:             decimal_separator = 1;
  8311     17C8  3001               	movlw	1
  8312     17C9  00E8               	movwf	str2float@decimal_separator^(0+128)
  8313     17CA                     l5837:
  8314                           
  8315                           ;UART.c: 37:             multiplier = 0;
  8316     17CA  01E9               	clrf	str2float@multiplier^(0+128)
  8317                           
  8318                           ;UART.c: 38:         } else {
  8319     17CB  2F5F               	goto	l5821
  8320     17CC                     l5839:
  8321                           
  8322                           ;UART.c: 43:     for (uint8_t i = 0; decimal_separator && i < multiplier; i++) {
  8323     17CC  01EA               	clrf	str2float@i^(0+128)
  8324     17CD  2FEC               	goto	l5845
  8325     17CE                     l5841:
  8326                           
  8327                           ;UART.c: 44:         number /= 10;
  8328     17CE  3041               	movlw	65
  8329     17CF  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8330     17D0  3020               	movlw	32
  8331     17D1  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8332     17D2  3000               	movlw	0
  8333     17D3  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8334     17D4  3000               	movlw	0
  8335     17D5  00A0               	movwf	___fldiv@a^(0+128)
  8336     17D6  086E               	movf	(str2float@number+3)^(0+128),w
  8337     17D7  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8338     17D8  086D               	movf	(str2float@number+2)^(0+128),w
  8339     17D9  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8340     17DA  086C               	movf	(str2float@number+1)^(0+128),w
  8341     17DB  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8342     17DC  086B               	movf	str2float@number^(0+128),w
  8343     17DD  00A4               	movwf	___fldiv@b^(0+128)
  8344     17DE  318C  2450  3197   	fcall	___fldiv
  8345     17E1  0021               	movlb	1	; select bank1
  8346     17E2  0823               	movf	(?___fldiv+3)^(0+128),w
  8347     17E3  00EE               	movwf	(str2float@number+3)^(0+128)
  8348     17E4  0822               	movf	(?___fldiv+2)^(0+128),w
  8349     17E5  00ED               	movwf	(str2float@number+2)^(0+128)
  8350     17E6  0821               	movf	(?___fldiv+1)^(0+128),w
  8351     17E7  00EC               	movwf	(str2float@number+1)^(0+128)
  8352     17E8  0820               	movf	?___fldiv^(0+128),w
  8353     17E9  00EB               	movwf	str2float@number^(0+128)
  8354     17EA                     l5843:
  8355                           
  8356                           ;UART.c: 45:     }
  8357     17EA  3001               	movlw	1
  8358     17EB  07EA               	addwf	str2float@i^(0+128),f
  8359     17EC                     l5845:
  8360     17EC  0868               	movf	str2float@decimal_separator^(0+128),w
  8361     17ED  1903               	btfsc	3,2
  8362     17EE  2FF0               	goto	u7201
  8363     17EF  2FF1               	goto	u7200
  8364     17F0                     u7201:
  8365     17F0  2FF7               	goto	l5849
  8366     17F1                     u7200:
  8367     17F1                     l5847:
  8368     17F1  0869               	movf	str2float@multiplier^(0+128),w
  8369     17F2  026A               	subwf	str2float@i^(0+128),w
  8370     17F3  1C03               	skipc
  8371     17F4  2FF6               	goto	u7211
  8372     17F5  2FF7               	goto	u7210
  8373     17F6                     u7211:
  8374     17F6  2FCE               	goto	l5841
  8375     17F7                     u7210:
  8376     17F7                     l5849:
  8377                           
  8378                           ;UART.c: 46:     return number;
  8379     17F7  086E               	movf	(str2float@number+3)^(0+128),w
  8380     17F8  00E7               	movwf	(?_str2float+3)^(0+128)
  8381     17F9  086D               	movf	(str2float@number+2)^(0+128),w
  8382     17FA  00E6               	movwf	(?_str2float+2)^(0+128)
  8383     17FB  086C               	movf	(str2float@number+1)^(0+128),w
  8384     17FC  00E5               	movwf	(?_str2float+1)^(0+128)
  8385     17FD  086B               	movf	str2float@number^(0+128),w
  8386     17FE  00E4               	movwf	?_str2float^(0+128)
  8387     17FF                     l887:
  8388     17FF  0008               	return
  8389     1800                     __end_of_str2float:
  8390                           
  8391                           	psect	text3
  8392     0C50                     __ptext3:	
  8393 ;; *************** function ___fldiv *****************
  8394 ;; Defined at:
  8395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;  a               4    0[BANK1 ] float 
  8398 ;;  b               4    4[BANK1 ] float 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  grs             4   20[BANK1 ] unsigned long 
  8401 ;;  rem             4   13[BANK1 ] unsigned long 
  8402 ;;  new_exp         2   18[BANK1 ] short 
  8403 ;;  aexp            1   25[BANK1 ] unsigned char 
  8404 ;;  bexp            1   24[BANK1 ] unsigned char 
  8405 ;;  sign            1   17[BANK1 ] unsigned char 
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  4    0[BANK1 ] unsigned char 
  8408 ;; Registers used:
  8409 ;;		wreg, status,2, status,0
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8415 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;Total ram usage:       26 bytes
  8420 ;; Hardware stack levels used: 1
  8421 ;; Hardware stack levels required when called: 5
  8422 ;; This function calls:
  8423 ;;		Nothing
  8424 ;; This function is called by:
  8425 ;;		_str2float
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429     0C50                     ___fldiv:	
  8430                           ;psect for function ___fldiv
  8431                           
  8432     0C50                     l5077:	
  8433                           ;incstack = 0
  8434                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8435                           
  8436     0C50  0021               	movlb	1	; select bank1
  8437     0C51  0827               	movf	(___fldiv@b^(0+128)+3),w
  8438     0C52  3980               	andlw	128
  8439     0C53  00B1               	movwf	___fldiv@sign^(0+128)
  8440     0C54                     l5079:
  8441     0C54  3527               	lslf	(___fldiv@b^(0+128)+3),w
  8442     0C55  00B8               	movwf	___fldiv@bexp^(0+128)
  8443     0C56                     l5081:
  8444     0C56  1FA6               	btfss	(___fldiv@b^(0+128)+2),7
  8445     0C57  2C59               	goto	u5881
  8446     0C58  2C5A               	goto	u5880
  8447     0C59                     u5881:
  8448     0C59  2C5B               	goto	l5085
  8449     0C5A                     u5880:
  8450     0C5A                     l5083:
  8451     0C5A  1438               	bsf	___fldiv@bexp^(0+128),0
  8452     0C5B                     l5085:
  8453     0C5B  0838               	movf	___fldiv@bexp^(0+128),w
  8454     0C5C  1903               	btfsc	3,2
  8455     0C5D  2C5F               	goto	u5891
  8456     0C5E  2C60               	goto	u5890
  8457     0C5F                     u5891:
  8458     0C5F  2C70               	goto	l5095
  8459     0C60                     u5890:
  8460     0C60                     l5087:
  8461     0C60  0A38               	incf	___fldiv@bexp^(0+128),w
  8462     0C61  1D03               	btfss	3,2
  8463     0C62  2C64               	goto	u5901
  8464     0C63  2C65               	goto	u5900
  8465     0C64                     u5901:
  8466     0C64  2C6D               	goto	l5091
  8467     0C65                     u5900:
  8468     0C65                     l5089:
  8469     0C65  3000               	movlw	0
  8470     0C66  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8471     0C67  3000               	movlw	0
  8472     0C68  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8473     0C69  3000               	movlw	0
  8474     0C6A  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8475     0C6B  3000               	movlw	0
  8476     0C6C  00A4               	movwf	___fldiv@b^(0+128)
  8477     0C6D                     l5091:
  8478     0C6D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8479     0C6E                     l5093:
  8480     0C6E  01A7               	clrf	(___fldiv@b^(0+128)+3)
  8481     0C6F  2C78               	goto	l5097
  8482     0C70                     l5095:
  8483     0C70  3000               	movlw	0
  8484     0C71  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8485     0C72  3000               	movlw	0
  8486     0C73  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8487     0C74  3000               	movlw	0
  8488     0C75  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8489     0C76  3000               	movlw	0
  8490     0C77  00A4               	movwf	___fldiv@b^(0+128)
  8491     0C78                     l5097:
  8492     0C78  0823               	movf	(___fldiv@a^(0+128)+3),w
  8493     0C79  3980               	andlw	128
  8494     0C7A  06B1               	xorwf	___fldiv@sign^(0+128),f
  8495     0C7B                     l5099:
  8496     0C7B  3523               	lslf	(___fldiv@a^(0+128)+3),w
  8497     0C7C  00B9               	movwf	___fldiv@aexp^(0+128)
  8498     0C7D                     l5101:
  8499     0C7D  1FA2               	btfss	(___fldiv@a^(0+128)+2),7
  8500     0C7E  2C80               	goto	u5911
  8501     0C7F  2C81               	goto	u5910
  8502     0C80                     u5911:
  8503     0C80  2C82               	goto	l5105
  8504     0C81                     u5910:
  8505     0C81                     l5103:
  8506     0C81  1439               	bsf	___fldiv@aexp^(0+128),0
  8507     0C82                     l5105:
  8508     0C82  0839               	movf	___fldiv@aexp^(0+128),w
  8509     0C83  1903               	btfsc	3,2
  8510     0C84  2C86               	goto	u5921
  8511     0C85  2C87               	goto	u5920
  8512     0C86                     u5921:
  8513     0C86  2C97               	goto	l5115
  8514     0C87                     u5920:
  8515     0C87                     l5107:
  8516     0C87  0A39               	incf	___fldiv@aexp^(0+128),w
  8517     0C88  1D03               	btfss	3,2
  8518     0C89  2C8B               	goto	u5931
  8519     0C8A  2C8C               	goto	u5930
  8520     0C8B                     u5931:
  8521     0C8B  2C94               	goto	l5111
  8522     0C8C                     u5930:
  8523     0C8C                     l5109:
  8524     0C8C  3000               	movlw	0
  8525     0C8D  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8526     0C8E  3000               	movlw	0
  8527     0C8F  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8528     0C90  3000               	movlw	0
  8529     0C91  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8530     0C92  3000               	movlw	0
  8531     0C93  00A0               	movwf	___fldiv@a^(0+128)
  8532     0C94                     l5111:
  8533     0C94  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  8534     0C95                     l5113:
  8535     0C95  01A3               	clrf	(___fldiv@a^(0+128)+3)
  8536     0C96  2C9F               	goto	l1538
  8537     0C97                     l5115:
  8538     0C97  3000               	movlw	0
  8539     0C98  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8540     0C99  3000               	movlw	0
  8541     0C9A  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8542     0C9B  3000               	movlw	0
  8543     0C9C  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8544     0C9D  3000               	movlw	0
  8545     0C9E  00A0               	movwf	___fldiv@a^(0+128)
  8546     0C9F                     l1538:
  8547     0C9F  0823               	movf	(___fldiv@a+3)^(0+128),w
  8548     0CA0  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  8549     0CA1  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  8550     0CA2  0420               	iorwf	___fldiv@a^(0+128),w
  8551     0CA3  1D03               	skipz
  8552     0CA4  2CA6               	goto	u5941
  8553     0CA5  2CA7               	goto	u5940
  8554     0CA6                     u5941:
  8555     0CA6  2CBE               	goto	l5125
  8556     0CA7                     u5940:
  8557     0CA7                     l5117:
  8558     0CA7  3000               	movlw	0
  8559     0CA8  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8560     0CA9  3000               	movlw	0
  8561     0CAA  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8562     0CAB  3000               	movlw	0
  8563     0CAC  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8564     0CAD  3000               	movlw	0
  8565     0CAE  00A4               	movwf	___fldiv@b^(0+128)
  8566     0CAF  3080               	movlw	128
  8567     0CB0  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  8568     0CB1  307F               	movlw	127
  8569     0CB2  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  8570     0CB3                     l5119:
  8571     0CB3  0831               	movf	___fldiv@sign^(0+128),w
  8572     0CB4  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8573     0CB5                     l5121:
  8574     0CB5  0827               	movf	(___fldiv@b+3)^(0+128),w
  8575     0CB6  00A3               	movwf	(?___fldiv+3)^(0+128)
  8576     0CB7  0826               	movf	(___fldiv@b+2)^(0+128),w
  8577     0CB8  00A2               	movwf	(?___fldiv+2)^(0+128)
  8578     0CB9  0825               	movf	(___fldiv@b+1)^(0+128),w
  8579     0CBA  00A1               	movwf	(?___fldiv+1)^(0+128)
  8580     0CBB  0824               	movf	___fldiv@b^(0+128),w
  8581     0CBC  00A0               	movwf	?___fldiv^(0+128)
  8582     0CBD  2DF3               	goto	l1540
  8583     0CBE                     l5125:
  8584     0CBE  0838               	movf	___fldiv@bexp^(0+128),w
  8585     0CBF  1D03               	btfss	3,2
  8586     0CC0  2CC2               	goto	u5951
  8587     0CC1  2CC3               	goto	u5950
  8588     0CC2                     u5951:
  8589     0CC2  2CCC               	goto	l5131
  8590     0CC3                     u5950:
  8591     0CC3                     l5127:
  8592     0CC3  3000               	movlw	0
  8593     0CC4  00A3               	movwf	(?___fldiv+3)^(0+128)
  8594     0CC5  3000               	movlw	0
  8595     0CC6  00A2               	movwf	(?___fldiv+2)^(0+128)
  8596     0CC7  3000               	movlw	0
  8597     0CC8  00A1               	movwf	(?___fldiv+1)^(0+128)
  8598     0CC9  3000               	movlw	0
  8599     0CCA  00A0               	movwf	?___fldiv^(0+128)
  8600     0CCB  2DF3               	goto	l1540
  8601     0CCC                     l5131:
  8602     0CCC  0838               	movf	___fldiv@bexp^(0+128),w
  8603     0CCD  00A8               	movwf	??___fldiv^(0+128)
  8604     0CCE  01A9               	clrf	(??___fldiv^(0+128)+1)
  8605     0CCF  0829               	movf	(??___fldiv+1)^(0+128),w
  8606     0CD0  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  8607     0CD1  0839               	movf	___fldiv@aexp^(0+128),w
  8608     0CD2  0228               	subwf	??___fldiv^(0+128),w
  8609     0CD3  00AA               	movwf	(??___fldiv+2)^(0+128)
  8610     0CD4  1C03               	skipc
  8611     0CD5  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  8612     0CD6  082A               	movf	(??___fldiv+2)^(0+128),w
  8613     0CD7  3E7F               	addlw	127
  8614     0CD8  00B2               	movwf	___fldiv@new_exp^(0+128)
  8615     0CD9  3000               	movlw	0
  8616     0CDA  3D2B               	addwfc	(??___fldiv+3)^(0+128),w
  8617     0CDB  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  8618     0CDC                     l5133:
  8619     0CDC  0827               	movf	(___fldiv@b+3)^(0+128),w
  8620     0CDD  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  8621     0CDE  0826               	movf	(___fldiv@b+2)^(0+128),w
  8622     0CDF  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  8623     0CE0  0825               	movf	(___fldiv@b+1)^(0+128),w
  8624     0CE1  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  8625     0CE2  0824               	movf	___fldiv@b^(0+128),w
  8626     0CE3  00AD               	movwf	___fldiv@rem^(0+128)
  8627     0CE4                     l5135:
  8628     0CE4  3000               	movlw	0
  8629     0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8630     0CE6  3000               	movlw	0
  8631     0CE7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8632     0CE8  3000               	movlw	0
  8633     0CE9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8634     0CEA  3000               	movlw	0
  8635     0CEB  00A4               	movwf	___fldiv@b^(0+128)
  8636     0CEC                     l5137:
  8637     0CEC  3000               	movlw	0
  8638     0CED  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  8639     0CEE  3000               	movlw	0
  8640     0CEF  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  8641     0CF0  3000               	movlw	0
  8642     0CF1  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  8643     0CF2  3000               	movlw	0
  8644     0CF3  00B4               	movwf	___fldiv@grs^(0+128)
  8645     0CF4                     l5139:
  8646     0CF4  01B9               	clrf	___fldiv@aexp^(0+128)
  8647     0CF5  2D32               	goto	l5159
  8648     0CF6                     l5141:
  8649     0CF6  0839               	movf	___fldiv@aexp^(0+128),w
  8650     0CF7  1903               	btfsc	3,2
  8651     0CF8  2CFA               	goto	u5961
  8652     0CF9  2CFB               	goto	u5960
  8653     0CFA                     u5961:
  8654     0CFA  2D15               	goto	l5151
  8655     0CFB                     u5960:
  8656     0CFB                     l5143:
  8657     0CFB  3001               	movlw	1
  8658     0CFC                     u5975:
  8659     0CFC  35AD               	lslf	___fldiv@rem^(0+128),f
  8660     0CFD  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  8661     0CFE  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  8662     0CFF  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  8663     0D00  0B89               	decfsz	9,f
  8664     0D01  2CFC               	goto	u5975
  8665     0D02  3001               	movlw	1
  8666     0D03                     u5985:
  8667     0D03  35A4               	lslf	___fldiv@b^(0+128),f
  8668     0D04  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8669     0D05  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8670     0D06  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8671     0D07  0B89               	decfsz	9,f
  8672     0D08  2D03               	goto	u5985
  8673     0D09                     l5145:
  8674     0D09  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8675     0D0A  2D0C               	goto	u5991
  8676     0D0B  2D0D               	goto	u5990
  8677     0D0C                     u5991:
  8678     0D0C  2D0E               	goto	l5149
  8679     0D0D                     u5990:
  8680     0D0D                     l5147:
  8681     0D0D  1424               	bsf	___fldiv@b^(0+128),0
  8682     0D0E                     l5149:
  8683     0D0E  3001               	movlw	1
  8684     0D0F                     u6005:
  8685     0D0F  35B4               	lslf	___fldiv@grs^(0+128),f
  8686     0D10  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8687     0D11  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8688     0D12  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8689     0D13  0B89               	decfsz	9,f
  8690     0D14  2D0F               	goto	u6005
  8691     0D15                     l5151:
  8692     0D15  0823               	movf	(___fldiv@a+3)^(0+128),w
  8693     0D16  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  8694     0D17  1D03               	skipz
  8695     0D18  2D23               	goto	u6015
  8696     0D19  0822               	movf	(___fldiv@a+2)^(0+128),w
  8697     0D1A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  8698     0D1B  1D03               	skipz
  8699     0D1C  2D23               	goto	u6015
  8700     0D1D  0821               	movf	(___fldiv@a+1)^(0+128),w
  8701     0D1E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  8702     0D1F  1D03               	skipz
  8703     0D20  2D23               	goto	u6015
  8704     0D21  0820               	movf	___fldiv@a^(0+128),w
  8705     0D22  022D               	subwf	___fldiv@rem^(0+128),w
  8706     0D23                     u6015:
  8707     0D23  1C03               	skipc
  8708     0D24  2D26               	goto	u6011
  8709     0D25  2D27               	goto	u6010
  8710     0D26                     u6011:
  8711     0D26  2D30               	goto	l5157
  8712     0D27                     u6010:
  8713     0D27                     l5153:
  8714     0D27  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  8715     0D28                     l5155:
  8716     0D28  0820               	movf	___fldiv@a^(0+128),w
  8717     0D29  02AD               	subwf	___fldiv@rem^(0+128),f
  8718     0D2A  0821               	movf	(___fldiv@a+1)^(0+128),w
  8719     0D2B  3BAE               	subwfb	(___fldiv@rem+1)^(0+128),f
  8720     0D2C  0822               	movf	(___fldiv@a+2)^(0+128),w
  8721     0D2D  3BAF               	subwfb	(___fldiv@rem+2)^(0+128),f
  8722     0D2E  0823               	movf	(___fldiv@a+3)^(0+128),w
  8723     0D2F  3BB0               	subwfb	(___fldiv@rem+3)^(0+128),f
  8724     0D30                     l5157:
  8725     0D30  3001               	movlw	1
  8726     0D31  07B9               	addwf	___fldiv@aexp^(0+128),f
  8727     0D32                     l5159:
  8728     0D32  301A               	movlw	26
  8729     0D33  0239               	subwf	___fldiv@aexp^(0+128),w
  8730     0D34  1C03               	skipc
  8731     0D35  2D37               	goto	u6021
  8732     0D36  2D38               	goto	u6020
  8733     0D37                     u6021:
  8734     0D37  2CF6               	goto	l5141
  8735     0D38                     u6020:
  8736     0D38                     l5161:
  8737     0D38  0830               	movf	(___fldiv@rem+3)^(0+128),w
  8738     0D39  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  8739     0D3A  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  8740     0D3B  042D               	iorwf	___fldiv@rem^(0+128),w
  8741     0D3C  1903               	skipnz
  8742     0D3D  2D3F               	goto	u6031
  8743     0D3E  2D40               	goto	u6030
  8744     0D3F                     u6031:
  8745     0D3F  2D59               	goto	l5175
  8746     0D40                     u6030:
  8747     0D40                     l5163:
  8748     0D40  1434               	bsf	___fldiv@grs^(0+128),0
  8749     0D41  2D59               	goto	l5175
  8750     0D42                     l5165:
  8751     0D42  3001               	movlw	1
  8752     0D43                     u6045:
  8753     0D43  35A4               	lslf	___fldiv@b^(0+128),f
  8754     0D44  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8755     0D45  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8756     0D46  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8757     0D47  0B89               	decfsz	9,f
  8758     0D48  2D43               	goto	u6045
  8759     0D49                     l5167:
  8760     0D49  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8761     0D4A  2D4C               	goto	u6051
  8762     0D4B  2D4D               	goto	u6050
  8763     0D4C                     u6051:
  8764     0D4C  2D4E               	goto	l5171
  8765     0D4D                     u6050:
  8766     0D4D                     l5169:
  8767     0D4D  1424               	bsf	___fldiv@b^(0+128),0
  8768     0D4E                     l5171:
  8769     0D4E  3001               	movlw	1
  8770     0D4F                     u6065:
  8771     0D4F  35B4               	lslf	___fldiv@grs^(0+128),f
  8772     0D50  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  8773     0D51  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  8774     0D52  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  8775     0D53  0B89               	decfsz	9,f
  8776     0D54  2D4F               	goto	u6065
  8777     0D55                     l5173:
  8778     0D55  30FF               	movlw	255
  8779     0D56  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8780     0D57  30FF               	movlw	255
  8781     0D58  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8782     0D59                     l5175:
  8783     0D59  1FA6               	btfss	(___fldiv@b+2)^(0+128),7
  8784     0D5A  2D5C               	goto	u6071
  8785     0D5B  2D5D               	goto	u6070
  8786     0D5C                     u6071:
  8787     0D5C  2D42               	goto	l5165
  8788     0D5D                     u6070:
  8789     0D5D                     l5177:
  8790     0D5D  01B9               	clrf	___fldiv@aexp^(0+128)
  8791     0D5E                     l5179:
  8792     0D5E  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  8793     0D5F  2D61               	goto	u6081
  8794     0D60  2D62               	goto	u6080
  8795     0D61                     u6081:
  8796     0D61  2D7E               	goto	l5187
  8797     0D62                     u6080:
  8798     0D62                     l5181:
  8799     0D62  30FF               	movlw	255
  8800     0D63  0534               	andwf	___fldiv@grs^(0+128),w
  8801     0D64  00A8               	movwf	??___fldiv^(0+128)
  8802     0D65  30FF               	movlw	255
  8803     0D66  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  8804     0D67  00A9               	movwf	(??___fldiv^(0+128)+1)
  8805     0D68  30FF               	movlw	255
  8806     0D69  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  8807     0D6A  00AA               	movwf	(??___fldiv^(0+128)+2)
  8808     0D6B  307F               	movlw	127
  8809     0D6C  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  8810     0D6D  00AB               	movwf	(??___fldiv^(0+128)+3)
  8811     0D6E  082B               	movf	(??___fldiv+3)^(0+128),w
  8812     0D6F  042A               	iorwf	(??___fldiv+2)^(0+128),w
  8813     0D70  0429               	iorwf	(??___fldiv+1)^(0+128),w
  8814     0D71  0428               	iorwf	??___fldiv^(0+128),w
  8815     0D72  1903               	skipnz
  8816     0D73  2D75               	goto	u6091
  8817     0D74  2D76               	goto	u6090
  8818     0D75                     u6091:
  8819     0D75  2D79               	goto	l1554
  8820     0D76                     u6090:
  8821     0D76                     l5183:
  8822     0D76  3001               	movlw	1
  8823     0D77  00B9               	movwf	___fldiv@aexp^(0+128)
  8824     0D78  2D7E               	goto	l5187
  8825     0D79                     l1554:
  8826     0D79  1C24               	btfss	___fldiv@b^(0+128),0
  8827     0D7A  2D7C               	goto	u6101
  8828     0D7B  2D7D               	goto	u6100
  8829     0D7C                     u6101:
  8830     0D7C  2D7E               	goto	l5187
  8831     0D7D                     u6100:
  8832     0D7D  2D76               	goto	l5183
  8833     0D7E                     l5187:
  8834     0D7E  0839               	movf	___fldiv@aexp^(0+128),w
  8835     0D7F  1903               	btfsc	3,2
  8836     0D80  2D82               	goto	u6111
  8837     0D81  2D83               	goto	u6110
  8838     0D82                     u6111:
  8839     0D82  2DA9               	goto	l5197
  8840     0D83                     u6110:
  8841     0D83                     l5189:
  8842     0D83  3001               	movlw	1
  8843     0D84  07A4               	addwf	___fldiv@b^(0+128),f
  8844     0D85  3000               	movlw	0
  8845     0D86  3DA5               	addwfc	(___fldiv@b+1)^(0+128),f
  8846     0D87  3DA6               	addwfc	(___fldiv@b+2)^(0+128),f
  8847     0D88  3DA7               	addwfc	(___fldiv@b+3)^(0+128),f
  8848     0D89                     l5191:
  8849     0D89  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  8850     0D8A  2D8C               	goto	u6121
  8851     0D8B  2D8D               	goto	u6120
  8852     0D8C                     u6121:
  8853     0D8C  2DA9               	goto	l5197
  8854     0D8D                     u6120:
  8855     0D8D                     l5193:
  8856     0D8D  0824               	movf	___fldiv@b^(0+128),w
  8857     0D8E  00A8               	movwf	??___fldiv^(0+128)
  8858     0D8F  0825               	movf	(___fldiv@b+1)^(0+128),w
  8859     0D90  00A9               	movwf	(??___fldiv^(0+128)+1)
  8860     0D91  0826               	movf	(___fldiv@b+2)^(0+128),w
  8861     0D92  00AA               	movwf	(??___fldiv^(0+128)+2)
  8862     0D93  0827               	movf	(___fldiv@b+3)^(0+128),w
  8863     0D94  00AB               	movwf	(??___fldiv^(0+128)+3)
  8864     0D95  3001               	movlw	1
  8865     0D96  00AC               	movwf	(??___fldiv+4)^(0+128)
  8866     0D97                     u6135:
  8867     0D97  37AB               	asrf	(??___fldiv^(0+128)+3),f
  8868     0D98  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  8869     0D99  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  8870     0D9A  0CA8               	rrf	??___fldiv^(0+128),f
  8871     0D9B                     u6130:
  8872     0D9B  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  8873     0D9C  2D97               	goto	u6135
  8874     0D9D  082B               	movf	(??___fldiv+3)^(0+128),w
  8875     0D9E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8876     0D9F  082A               	movf	(??___fldiv+2)^(0+128),w
  8877     0DA0  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8878     0DA1  0829               	movf	(??___fldiv+1)^(0+128),w
  8879     0DA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8880     0DA3  0828               	movf	??___fldiv^(0+128),w
  8881     0DA4  00A4               	movwf	___fldiv@b^(0+128)
  8882     0DA5                     l5195:
  8883     0DA5  3001               	movlw	1
  8884     0DA6  07B2               	addwf	___fldiv@new_exp^(0+128),f
  8885     0DA7  3000               	movlw	0
  8886     0DA8  3DB3               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8887     0DA9                     l5197:
  8888     0DA9  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8889     0DAA  3A80               	xorlw	128
  8890     0DAB  00A8               	movwf	??___fldiv^(0+128)
  8891     0DAC  3080               	movlw	128
  8892     0DAD  0228               	subwf	??___fldiv^(0+128),w
  8893     0DAE  1D03               	skipz
  8894     0DAF  2DB2               	goto	u6145
  8895     0DB0  30FF               	movlw	255
  8896     0DB1  0232               	subwf	___fldiv@new_exp^(0+128),w
  8897     0DB2                     u6145:
  8898     0DB2  1C03               	skipc
  8899     0DB3  2DB5               	goto	u6141
  8900     0DB4  2DB6               	goto	u6140
  8901     0DB5                     u6141:
  8902     0DB5  2DC3               	goto	l1559
  8903     0DB6                     u6140:
  8904     0DB6                     l5199:
  8905     0DB6  30FF               	movlw	255
  8906     0DB7  0021               	movlb	1	; select bank1
  8907     0DB8  00B2               	movwf	___fldiv@new_exp^(0+128)
  8908     0DB9  3000               	movlw	0
  8909     0DBA  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  8910     0DBB  3000               	movlw	0
  8911     0DBC  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8912     0DBD  3000               	movlw	0
  8913     0DBE  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8914     0DBF  3000               	movlw	0
  8915     0DC0  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8916     0DC1  3000               	movlw	0
  8917     0DC2  00A4               	movwf	___fldiv@b^(0+128)
  8918     0DC3                     l1559:
  8919     0DC3  0021               	movlb	1	; select bank1
  8920     0DC4  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  8921     0DC5  3A80               	xorlw	128
  8922     0DC6  00A8               	movwf	??___fldiv^(0+128)
  8923     0DC7  3080               	movlw	128
  8924     0DC8  0228               	subwf	??___fldiv^(0+128),w
  8925     0DC9  1D03               	skipz
  8926     0DCA  2DCD               	goto	u6155
  8927     0DCB  3001               	movlw	1
  8928     0DCC  0232               	subwf	___fldiv@new_exp^(0+128),w
  8929     0DCD                     u6155:
  8930     0DCD  1803               	skipnc
  8931     0DCE  2DD0               	goto	u6151
  8932     0DCF  2DD1               	goto	u6150
  8933     0DD0                     u6151:
  8934     0DD0  2DDD               	goto	l1560
  8935     0DD1                     u6150:
  8936     0DD1                     l5201:
  8937     0DD1  0021               	movlb	1	; select bank1
  8938     0DD2  01B2               	clrf	___fldiv@new_exp^(0+128)
  8939     0DD3  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  8940     0DD4                     l5203:
  8941     0DD4  3000               	movlw	0
  8942     0DD5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8943     0DD6  3000               	movlw	0
  8944     0DD7  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8945     0DD8  3000               	movlw	0
  8946     0DD9  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8947     0DDA  3000               	movlw	0
  8948     0DDB  00A4               	movwf	___fldiv@b^(0+128)
  8949     0DDC                     l5205:
  8950     0DDC  01B1               	clrf	___fldiv@sign^(0+128)
  8951     0DDD                     l1560:
  8952     0DDD  0021               	movlb	1	; select bank1
  8953     0DDE  0832               	movf	___fldiv@new_exp^(0+128),w
  8954     0DDF  00B8               	movwf	___fldiv@bexp^(0+128)
  8955     0DE0                     l5207:
  8956     0DE0  1C38               	btfss	___fldiv@bexp^(0+128),0
  8957     0DE1  2DE3               	goto	u6161
  8958     0DE2  2DE4               	goto	u6160
  8959     0DE3                     u6161:
  8960     0DE3  2DE6               	goto	l5211
  8961     0DE4                     u6160:
  8962     0DE4                     l5209:
  8963     0DE4  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8964     0DE5  2DE8               	goto	l1562
  8965     0DE6                     l5211:
  8966     0DE6  307F               	movlw	127
  8967     0DE7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  8968     0DE8                     l1562:
  8969     0DE8  0838               	movf	___fldiv@bexp^(0+128),w
  8970     0DE9  00A8               	movwf	??___fldiv^(0+128)
  8971     0DEA  3001               	movlw	1
  8972     0DEB                     u6175:
  8973     0DEB  36A8               	lsrf	??___fldiv^(0+128),f
  8974     0DEC  0B89               	decfsz	9,f
  8975     0DED  2DEB               	goto	u6175
  8976     0DEE  0828               	movf	??___fldiv^(0+128),w
  8977     0DEF  00A7               	movwf	(___fldiv@b^(0+128)+3)
  8978     0DF0  0831               	movf	___fldiv@sign^(0+128),w
  8979     0DF1  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8980     0DF2  2CB5               	goto	l5121
  8981     0DF3                     l1540:
  8982     0DF3  0008               	return
  8983     0DF4                     __end_of___fldiv:
  8984                           
  8985                           	psect	text4
  8986     1C38                     __ptext4:	
  8987 ;; *************** function _setSetpoint *****************
  8988 ;; Defined at:
  8989 ;;		line 45 in file "controller.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  new_setpoint    2   13[BANK1 ] unsigned short 
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      void 
  8996 ;; Registers used:
  8997 ;;		wreg
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9003 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;Total ram usage:        2 bytes
  9008 ;; Hardware stack levels used: 1
  9009 ;; Hardware stack levels required when called: 5
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_uartHandler
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017     1C38                     _setSetpoint:	
  9018                           ;psect for function _setSetpoint
  9019                           
  9020     1C38                     l5937:	
  9021                           ;incstack = 0
  9022                           ; Regs used in _setSetpoint: [wreg]
  9023                           
  9024     1C38  0021               	movlb	1	; select bank1
  9025     1C39  082E               	movf	(setSetpoint@new_setpoint+1)^(0+128),w
  9026     1C3A  0020               	movlb	0	; select bank0
  9027     1C3B  00ED               	movwf	_setpoint+1
  9028     1C3C  0021               	movlb	1	; select bank1
  9029     1C3D  082D               	movf	setSetpoint@new_setpoint^(0+128),w
  9030     1C3E  0020               	movlb	0	; select bank0
  9031     1C3F  00EC               	movwf	_setpoint
  9032     1C40                     l959:
  9033     1C40  0008               	return
  9034     1C41                     __end_of_setSetpoint:
  9035                           
  9036                           	psect	text5
  9037     1C55                     __ptext5:	
  9038 ;; *************** function _setKp *****************
  9039 ;; Defined at:
  9040 ;;		line 47 in file "controller.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  new_kp          4    0[BANK2 ] float 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		wreg
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9054 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;Total ram usage:        4 bytes
  9059 ;; Hardware stack levels used: 1
  9060 ;; Hardware stack levels required when called: 5
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_uartHandler
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068     1C55                     _setKp:	
  9069                           ;psect for function _setKp
  9070                           
  9071     1C55                     l5939:	
  9072                           ;incstack = 0
  9073                           ; Regs used in _setKp: [wreg]
  9074                           
  9075     1C55  0022               	movlb	2	; select bank2
  9076     1C56  0851               	movf	(setKp@new_kp+3)^(0+256),w
  9077     1C57  00EF               	movwf	(_kp+3)^(0+256)
  9078     1C58  0850               	movf	(setKp@new_kp+2)^(0+256),w
  9079     1C59  00EE               	movwf	(_kp+2)^(0+256)
  9080     1C5A  084F               	movf	(setKp@new_kp+1)^(0+256),w
  9081     1C5B  00ED               	movwf	(_kp+1)^(0+256)
  9082     1C5C  084E               	movf	setKp@new_kp^(0+256),w
  9083     1C5D  00EC               	movwf	_kp^(0+256)
  9084     1C5E                     l965:
  9085     1C5E  0008               	return
  9086     1C5F                     __end_of_setKp:
  9087                           
  9088                           	psect	text6
  9089     1C4B                     __ptext6:	
  9090 ;; *************** function _setKi *****************
  9091 ;; Defined at:
  9092 ;;		line 48 in file "controller.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  new_ki          4    0[BANK2 ] float 
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;		None
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      void 
  9099 ;; Registers used:
  9100 ;;		wreg
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9106 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9110 ;;Total ram usage:        4 bytes
  9111 ;; Hardware stack levels used: 1
  9112 ;; Hardware stack levels required when called: 5
  9113 ;; This function calls:
  9114 ;;		Nothing
  9115 ;; This function is called by:
  9116 ;;		_uartHandler
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120     1C4B                     _setKi:	
  9121                           ;psect for function _setKi
  9122                           
  9123     1C4B                     l5941:	
  9124                           ;incstack = 0
  9125                           ; Regs used in _setKi: [wreg]
  9126                           
  9127     1C4B  0022               	movlb	2	; select bank2
  9128     1C4C  0851               	movf	(setKi@new_ki+3)^(0+256),w
  9129     1C4D  00EB               	movwf	(_ki+3)^(0+256)
  9130     1C4E  0850               	movf	(setKi@new_ki+2)^(0+256),w
  9131     1C4F  00EA               	movwf	(_ki+2)^(0+256)
  9132     1C50  084F               	movf	(setKi@new_ki+1)^(0+256),w
  9133     1C51  00E9               	movwf	(_ki+1)^(0+256)
  9134     1C52  084E               	movf	setKi@new_ki^(0+256),w
  9135     1C53  00E8               	movwf	_ki^(0+256)
  9136     1C54                     l968:
  9137     1C54  0008               	return
  9138     1C55                     __end_of_setKi:
  9139                           
  9140                           	psect	text7
  9141     1181                     __ptext7:	
  9142 ;; *************** function _readLine *****************
  9143 ;; Defined at:
  9144 ;;		line 50 in file "UART.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1   71[BANK1 ] PTR unsigned char 
  9151 ;; Registers used:
  9152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9158 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;Total ram usage:        3 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; Hardware stack levels required when called: 14
  9165 ;; This function calls:
  9166 ;;		_EUSART_IsRxReady
  9167 ;;		_EUSART_Read
  9168 ;;		_printf
  9169 ;; This function is called by:
  9170 ;;		_uartHandler
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174     1181                     _readLine:	
  9175                           ;psect for function _readLine
  9176                           
  9177     1181                     l892:	
  9178                           ;incstack = 0
  9179                           ; Regs used in _readLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9180                           ;UART.c: 51:     static uint8_t index = 0;;UART.c: 52:     while (1) {
  9181                           
  9182     1181                     l5853:
  9183                           
  9184                           ;UART.c: 53:         if (!EUSART_IsRxReady()) {
  9185     1181  319C  242F  3191   	fcall	_EUSART_IsRxReady
  9186     1184  3A00               	xorlw	0
  9187     1185  1D03               	skipz
  9188     1186  2988               	goto	u7221
  9189     1187  2989               	goto	u7220
  9190     1188                     u7221:
  9191     1188  2993               	goto	l5861
  9192     1189                     u7220:
  9193     1189                     l5855:
  9194                           
  9195                           ;UART.c: 54:             line[index] = 0;
  9196     1189  0020               	movlb	0	; select bank0
  9197     118A  0865               	movf	readLine@index,w
  9198     118B  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9199     118C  0086               	movwf	6
  9200     118D  3001               	movlw	1	; select bank3/4
  9201     118E  0087               	movwf	7
  9202     118F  0181               	clrf	1
  9203     1190                     l5857:
  9204                           
  9205                           ;UART.c: 55:             return line + index;
  9206     1190  0865               	movf	readLine@index,w
  9207     1191  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9208     1192  29D9               	goto	l894
  9209     1193                     l5861:
  9210                           
  9211                           ;UART.c: 57:         if (index >= 20 - 1) {
  9212     1193  3013               	movlw	19
  9213     1194  0020               	movlb	0	; select bank0
  9214     1195  0265               	subwf	readLine@index,w
  9215     1196  1C03               	skipc
  9216     1197  2999               	goto	u7231
  9217     1198  299A               	goto	u7230
  9218     1199                     u7231:
  9219     1199  29B4               	goto	l5879
  9220     119A                     u7230:
  9221     119A  299E               	goto	l5867
  9222     119B                     l5865:
  9223                           
  9224                           ;UART.c: 59:                 EUSART_Read();
  9225     119B  319E  26A9  3191   	fcall	_EUSART_Read
  9226     119E                     l5867:
  9227                           
  9228                           ;UART.c: 58:             while (EUSART_IsRxReady()) {
  9229     119E  319C  242F  3191   	fcall	_EUSART_IsRxReady
  9230     11A1  3A00               	xorlw	0
  9231     11A2  1D03               	skipz
  9232     11A3  29A5               	goto	u7241
  9233     11A4  29A6               	goto	u7240
  9234     11A5                     u7241:
  9235     11A5  299B               	goto	l5865
  9236     11A6                     u7240:
  9237     11A6                     l5869:
  9238                           
  9239                           ;UART.c: 61:             printf("input buffer overflow\r\n");
  9240     11A6  3065               	movlw	low (STR_2| (0+32768))
  9241     11A7  0021               	movlb	1	; select bank1
  9242     11A8  00E0               	movwf	printf@fmt^(0+128)
  9243     11A9  3098               	movlw	high (STR_2| (0+32768))
  9244     11AA  00E1               	movwf	(printf@fmt^(0+128)+1)
  9245     11AB  319D  2511  3191   	fcall	_printf
  9246     11AE                     l5871:
  9247                           
  9248                           ;UART.c: 62:             index = 0;
  9249     11AE  0020               	movlb	0	; select bank0
  9250     11AF  01E5               	clrf	readLine@index
  9251     11B0                     l5873:
  9252                           
  9253                           ;UART.c: 63:             line[index] = 0;
  9254     11B0  0023               	movlb	3	; select bank3
  9255     11B1  01C0               	clrf	_line^(0+384)
  9256     11B2                     l5875:
  9257                           
  9258                           ;UART.c: 64:             return line;
  9259     11B2  30C0               	movlw	(low (_line| (0+256)))& (0+255)
  9260     11B3  29D9               	goto	l894
  9261     11B4                     l5879:
  9262                           
  9263                           ;UART.c: 67:         line[index] = EUSART_Read();
  9264     11B4  319E  26A9  3191   	fcall	_EUSART_Read
  9265     11B7  0021               	movlb	1	; select bank1
  9266     11B8  00E9               	movwf	??_readLine^(0+128)
  9267     11B9  0020               	movlb	0	; select bank0
  9268     11BA  0865               	movf	readLine@index,w
  9269     11BB  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9270     11BC  0086               	movwf	6
  9271     11BD  3001               	movlw	1	; select bank3/4
  9272     11BE  0087               	movwf	7
  9273     11BF  0021               	movlb	1	; select bank1
  9274     11C0  0869               	movf	??_readLine^(0+128),w
  9275     11C1  0081               	movwf	1
  9276     11C2                     l5881:
  9277                           
  9278                           ;UART.c: 68:         if (line[index] == '\n') {
  9279     11C2  0020               	movlb	0	; select bank0
  9280     11C3  0865               	movf	readLine@index,w
  9281     11C4  3EC0               	addlw	(low (_line| (0+256)))& (0+255)
  9282     11C5  0086               	movwf	6
  9283     11C6  3001               	movlw	1	; select bank3/4
  9284     11C7  0087               	movwf	7
  9285     11C8  300A               	movlw	10
  9286     11C9  0601               	xorwf	1,w
  9287     11CA  1D03               	btfss	3,2
  9288     11CB  29CD               	goto	u7251
  9289     11CC  29CE               	goto	u7250
  9290     11CD                     u7251:
  9291     11CD  29D6               	goto	l5891
  9292     11CE                     u7250:
  9293     11CE                     l5883:
  9294                           
  9295                           ;UART.c: 69:             line[index + 1] = 0;
  9296     11CE  0865               	movf	readLine@index,w
  9297     11CF  3EC1               	addlw	(low ((_line| (0+256)+1)))& (0+255)
  9298     11D0  0086               	movwf	6
  9299     11D1  3001               	movlw	1	; select bank3/4
  9300     11D2  0087               	movwf	7
  9301     11D3  0181               	clrf	1
  9302     11D4                     l5885:
  9303                           
  9304                           ;UART.c: 70:             index = 0;
  9305     11D4  01E5               	clrf	readLine@index
  9306     11D5  29B2               	goto	l5875
  9307     11D6                     l5891:
  9308                           
  9309                           ;UART.c: 73:         index++;
  9310     11D6  3001               	movlw	1
  9311     11D7  07E5               	addwf	readLine@index,f
  9312     11D8  2981               	goto	l892
  9313     11D9                     l894:
  9314     11D9  0008               	return
  9315     11DA                     __end_of_readLine:
  9316                           
  9317                           	psect	text8
  9318     1EA9                     __ptext8:	
  9319 ;; *************** function _EUSART_Read *****************
  9320 ;; Defined at:
  9321 ;;		line 288 in file "mcc_generated_files/uart/src/eusart.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;		None
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  readValue       1    1[BANK1 ] unsigned char 
  9326 ;;  tempRxTail      1    0[BANK1 ] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      unsigned char 
  9329 ;; Registers used:
  9330 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;Total ram usage:        2 bytes
  9341 ;; Hardware stack levels used: 1
  9342 ;; Hardware stack levels required when called: 5
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_readLine
  9347 ;;		_getch
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351     1EA9                     _EUSART_Read:	
  9352                           ;psect for function _EUSART_Read
  9353                           
  9354     1EA9                     l4975:	
  9355                           ;incstack = 0
  9356                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9357                           
  9358     1EA9                     l4977:
  9359                           
  9360                           ;mcc_generated_files/uart/src/eusart.c: 291:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 293:     readValue = eusartRxBuffer[eusartRxTail];
  9361     1EA9  0020               	movlb	0	; select bank0
  9362     1EAA  0867               	movf	_eusartRxTail,w
  9363     1EAB  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  9364     1EAC  0086               	movwf	6
  9365     1EAD  3001               	movlw	1	; select bank2/3
  9366     1EAE  0087               	movwf	7
  9367     1EAF  0801               	movf	1,w
  9368     1EB0  0021               	movlb	1	; select bank1
  9369     1EB1  00A1               	movwf	EUSART_Read@readValue^(0+128)
  9370     1EB2                     l4979:
  9371                           
  9372                           ;mcc_generated_files/uart/src/eusart.c: 295:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
  9373     1EB2  0020               	movlb	0	; select bank0
  9374     1EB3  0867               	movf	_eusartRxTail,w	;volatile
  9375     1EB4  3E01               	addlw	1
  9376     1EB5  3907               	andlw	7
  9377     1EB6  0021               	movlb	1	; select bank1
  9378     1EB7  00A0               	movwf	EUSART_Read@tempRxTail^(0+128)
  9379     1EB8                     l4981:
  9380                           
  9381                           ;mcc_generated_files/uart/src/eusart.c: 297:     eusartRxTail = tempRxTail;
  9382     1EB8  0820               	movf	EUSART_Read@tempRxTail^(0+128),w
  9383     1EB9  0020               	movlb	0	; select bank0
  9384     1EBA  00E7               	movwf	_eusartRxTail	;volatile
  9385     1EBB                     l4983:
  9386                           
  9387                           ;mcc_generated_files/uart/src/eusart.c: 299:     PIE1bits.RCIE = 0;
  9388     1EBB  0021               	movlb	1	; select bank1
  9389     1EBC  1291               	bcf	17,5	;volatile
  9390     1EBD                     l4985:
  9391                           
  9392                           ;mcc_generated_files/uart/src/eusart.c: 300:     if(0U != eusartRxCount)
  9393     1EBD  0020               	movlb	0	; select bank0
  9394     1EBE  0866               	movf	_eusartRxCount,w	;volatile
  9395     1EBF  1903               	btfsc	3,2
  9396     1EC0  2EC2               	goto	u5751
  9397     1EC1  2EC3               	goto	u5750
  9398     1EC2                     u5751:
  9399     1EC2  2EC5               	goto	l4989
  9400     1EC3                     u5750:
  9401     1EC3                     l4987:
  9402                           
  9403                           ;mcc_generated_files/uart/src/eusart.c: 301:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 302:         eusartRxCount--;
  9404     1EC3  3001               	movlw	1
  9405     1EC4  02E6               	subwf	_eusartRxCount,f	;volatile
  9406     1EC5                     l4989:
  9407                           
  9408                           ;mcc_generated_files/uart/src/eusart.c: 304:     PIE1bits.RCIE = 1;
  9409     1EC5  0021               	movlb	1	; select bank1
  9410     1EC6  1691               	bsf	17,5	;volatile
  9411     1EC7                     l4991:
  9412                           
  9413                           ;mcc_generated_files/uart/src/eusart.c: 305:     return readValue;
  9414     1EC7  0821               	movf	EUSART_Read@readValue^(0+128),w
  9415     1EC8                     l707:
  9416     1EC8  0008               	return
  9417     1EC9                     __end_of_EUSART_Read:
  9418                           
  9419                           	psect	text9
  9420     1C2F                     __ptext9:	
  9421 ;; *************** function _EUSART_IsRxReady *****************
  9422 ;; Defined at:
  9423 ;;		line 267 in file "mcc_generated_files/uart/src/eusart.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;		None
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;		None
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      _Bool 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;Total ram usage:        0 bytes
  9442 ;; Hardware stack levels used: 1
  9443 ;; Hardware stack levels required when called: 5
  9444 ;; This function calls:
  9445 ;;		Nothing
  9446 ;; This function is called by:
  9447 ;;		_readLine
  9448 ;;		_getch
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452     1C2F                     _EUSART_IsRxReady:	
  9453                           ;psect for function _EUSART_IsRxReady
  9454                           
  9455     1C2F                     l4971:	
  9456                           ;incstack = 0
  9457                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
  9458                           
  9459                           
  9460                           ;mcc_generated_files/uart/src/eusart.c: 269:     return (eusartRxCount ? 1 : 0);
  9461     1C2F  0020               	movlb	0	; select bank0
  9462     1C30  0866               	movf	_eusartRxCount,w	;volatile
  9463     1C31  1D03               	btfss	3,2
  9464     1C32  2C34               	goto	u5731
  9465     1C33  2C36               	goto	u5730
  9466     1C34                     u5731:
  9467     1C34  3001               	movlw	1
  9468     1C35  2C37               	goto	u5740
  9469     1C36                     u5730:
  9470     1C36  3000               	movlw	0
  9471     1C37                     u5740:
  9472     1C37                     l694:
  9473     1C37  0008               	return
  9474     1C38                     __end_of_EUSART_IsRxReady:
  9475                           
  9476                           	psect	text10
  9477     150D                     __ptext10:	
  9478 ;; *************** function _atoi *****************
  9479 ;; Defined at:
  9480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\atoi.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  s               1    6[BANK1 ] PTR const unsigned char 
  9483 ;;		 -> line(20), 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  n               2   11[BANK1 ] int 
  9486 ;;  neg             1   10[BANK1 ] _Bool 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  2    6[BANK1 ] int 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9496 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;Total ram usage:        7 bytes
  9501 ;; Hardware stack levels used: 1
  9502 ;; Hardware stack levels required when called: 6
  9503 ;; This function calls:
  9504 ;;		___wmul
  9505 ;; This function is called by:
  9506 ;;		_uartHandler
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510     150D                     _atoi:	
  9511                           ;psect for function _atoi
  9512                           
  9513     150D                     l5905:	
  9514                           ;incstack = 0
  9515                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9516                           
  9517     150D  0021               	movlb	1	; select bank1
  9518     150E  01AB               	clrf	atoi@n^(0+128)
  9519     150F  01AC               	clrf	(atoi@n+1)^(0+128)
  9520     1510  01AA               	clrf	atoi@neg^(0+128)
  9521     1511  2D14               	goto	l5909
  9522     1512                     l5907:
  9523     1512  3001               	movlw	1
  9524     1513  07A6               	addwf	atoi@s^(0+128),f
  9525     1514                     l5909:
  9526     1514  0826               	movf	atoi@s^(0+128),w
  9527     1515  0086               	movwf	6
  9528     1516  3001               	movlw	1	; select bank2/3
  9529     1517  0087               	movwf	7
  9530     1518  3020               	movlw	32
  9531     1519  0601               	xorwf	1,w
  9532     151A  1903               	btfsc	3,2
  9533     151B  2D1D               	goto	u7261
  9534     151C  2D1E               	goto	u7260
  9535     151D                     u7261:
  9536     151D  2D12               	goto	l5907
  9537     151E                     u7260:
  9538     151E                     l5911:
  9539     151E  0826               	movf	atoi@s^(0+128),w
  9540     151F  0086               	movwf	6
  9541     1520  3001               	movlw	1	; select bank2/3
  9542     1521  0087               	movwf	7
  9543     1522  30F7               	movlw	247
  9544     1523  0701               	addwf	1,w
  9545     1524  00A8               	movwf	??_atoi^(0+128)
  9546     1525  3005               	movlw	5
  9547     1526  0228               	subwf	??_atoi^(0+128),w
  9548     1527  1C03               	skipc
  9549     1528  2D2A               	goto	u7271
  9550     1529  2D2B               	goto	u7270
  9551     152A                     u7271:
  9552     152A  2D12               	goto	l5907
  9553     152B                     u7270:
  9554     152B                     l5913:
  9555     152B  0826               	movf	atoi@s^(0+128),w
  9556     152C  0086               	movwf	6
  9557     152D  3001               	movlw	1	; select bank2/3
  9558     152E  0087               	movwf	7
  9559     152F  302D               	movlw	45
  9560     1530  0601               	xorwf	1,w
  9561     1531  1D03               	btfss	3,2
  9562     1532  2D34               	goto	u7281
  9563     1533  2D35               	goto	u7280
  9564     1534                     u7281:
  9565     1534  2D3A               	goto	l5919
  9566     1535                     u7280:
  9567     1535                     l5915:
  9568     1535  3001               	movlw	1
  9569     1536  00AA               	movwf	atoi@neg^(0+128)
  9570     1537                     l5917:
  9571     1537  3001               	movlw	1
  9572     1538  07A6               	addwf	atoi@s^(0+128),f
  9573     1539  2D63               	goto	l5927
  9574     153A                     l5919:
  9575     153A  0826               	movf	atoi@s^(0+128),w
  9576     153B  0086               	movwf	6
  9577     153C  3001               	movlw	1	; select bank2/3
  9578     153D  0087               	movwf	7
  9579     153E  302B               	movlw	43
  9580     153F  0601               	xorwf	1,w
  9581     1540  1D03               	btfss	3,2
  9582     1541  2D43               	goto	u7291
  9583     1542  2D44               	goto	u7290
  9584     1543                     u7291:
  9585     1543  2D63               	goto	l5927
  9586     1544                     u7290:
  9587     1544  2D37               	goto	l5917
  9588     1545                     l5923:
  9589     1545  0826               	movf	atoi@s^(0+128),w
  9590     1546  0086               	movwf	6
  9591     1547  3001               	movlw	1	; select bank2/3
  9592     1548  0087               	movwf	7
  9593     1549  082C               	movf	(atoi@n+1)^(0+128),w
  9594     154A  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  9595     154B  082B               	movf	atoi@n^(0+128),w
  9596     154C  00A0               	movwf	___wmul@multiplier^(0+128)
  9597     154D  300A               	movlw	10
  9598     154E  00A2               	movwf	___wmul@multiplicand^(0+128)
  9599     154F  3000               	movlw	0
  9600     1550  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  9601     1551  319E  2669  3195   	fcall	___wmul
  9602     1554  0021               	movlb	1	; select bank1
  9603     1555  0821               	movf	(?___wmul+1)^(0+128),w
  9604     1556  00A9               	movwf	(??_atoi^(0+128)+1)
  9605     1557  0801               	movf	1,w
  9606     1558  0220               	subwf	?___wmul^(0+128),w
  9607     1559  00A8               	movwf	??_atoi^(0+128)
  9608     155A  1C03               	skipc
  9609     155B  03A9               	decf	(??_atoi^(0+128)+1),f
  9610     155C  0828               	movf	??_atoi^(0+128),w
  9611     155D  3E30               	addlw	48
  9612     155E  00AB               	movwf	atoi@n^(0+128)
  9613     155F  3000               	movlw	0
  9614     1560  3D29               	addwfc	(??_atoi+1)^(0+128),w
  9615     1561  00AC               	movwf	(atoi@n+1)^(0+128)
  9616     1562  2D37               	goto	l5917
  9617     1563                     l5927:
  9618     1563  0826               	movf	atoi@s^(0+128),w
  9619     1564  0086               	movwf	6
  9620     1565  3001               	movlw	1	; select bank2/3
  9621     1566  0087               	movwf	7
  9622     1567  30D0               	movlw	208
  9623     1568  0701               	addwf	1,w
  9624     1569  00A8               	movwf	??_atoi^(0+128)
  9625     156A  300A               	movlw	10
  9626     156B  0228               	subwf	??_atoi^(0+128),w
  9627     156C  1C03               	skipc
  9628     156D  2D6F               	goto	u7301
  9629     156E  2D70               	goto	u7300
  9630     156F                     u7301:
  9631     156F  2D45               	goto	l5923
  9632     1570                     u7300:
  9633     1570                     l5929:
  9634     1570  082A               	movf	atoi@neg^(0+128),w
  9635     1571  1D03               	btfss	3,2
  9636     1572  2D74               	goto	u7311
  9637     1573  2D75               	goto	u7310
  9638     1574                     u7311:
  9639     1574  2D81               	goto	l5933
  9640     1575                     u7310:
  9641     1575                     l5931:
  9642     1575  092B               	comf	atoi@n^(0+128),w
  9643     1576  00A8               	movwf	??_atoi^(0+128)
  9644     1577  092C               	comf	(atoi@n+1)^(0+128),w
  9645     1578  00A9               	movwf	(??_atoi^(0+128)+1)
  9646     1579  0AA8               	incf	??_atoi^(0+128),f
  9647     157A  1903               	skipnz
  9648     157B  0AA9               	incf	(??_atoi^(0+128)+1),f
  9649     157C  0828               	movf	??_atoi^(0+128),w
  9650     157D  00A6               	movwf	?_atoi^(0+128)
  9651     157E  0829               	movf	(??_atoi+1)^(0+128),w
  9652     157F  00A7               	movwf	(?_atoi+1)^(0+128)
  9653     1580  2D85               	goto	l1653
  9654     1581                     l5933:
  9655     1581  082C               	movf	(atoi@n+1)^(0+128),w
  9656     1582  00A7               	movwf	(?_atoi+1)^(0+128)
  9657     1583  082B               	movf	atoi@n^(0+128),w
  9658     1584  00A6               	movwf	?_atoi^(0+128)
  9659     1585                     l1653:
  9660     1585  0008               	return
  9661     1586                     __end_of_atoi:
  9662                           
  9663                           	psect	text11
  9664     0805                     __ptext11:	
  9665 ;; *************** function _printLogs *****************
  9666 ;; Defined at:
  9667 ;;		line 77 in file "UART.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;Total ram usage:        0 bytes
  9686 ;; Hardware stack levels used: 1
  9687 ;; Hardware stack levels required when called: 15
  9688 ;; This function calls:
  9689 ;;		_getDutycycle
  9690 ;;		_getHoogtesensor
  9691 ;;		_getKi
  9692 ;;		_getKp
  9693 ;;		_getSetpoint
  9694 ;;		_printFloat
  9695 ;;		_printf
  9696 ;; This function is called by:
  9697 ;;		_main
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701     0805                     _printLogs:	
  9702                           ;psect for function _printLogs
  9703                           
  9704     0805                     l6095:	
  9705                           ;incstack = 0
  9706                           ; Regs used in _printLogs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9707                           
  9708                           
  9709                           ;UART.c: 79:     if (mustPrintLogs) {
  9710     0805  0020               	movlb	0	; select bank0
  9711     0806  086E               	movf	_mustPrintLogs,w
  9712     0807  1903               	btfsc	3,2
  9713     0808  280A               	goto	u7491
  9714     0809  280B               	goto	u7490
  9715     080A                     u7491:
  9716     080A  287F               	goto	l905
  9717     080B                     u7490:
  9718     080B                     l6097:
  9719                           
  9720                           ;UART.c: 80:         printf("hoogte: %u", getHoogtesensor());
  9721     080B  30D7               	movlw	low (STR_3| (0+32768))
  9722     080C  0021               	movlb	1	; select bank1
  9723     080D  00E0               	movwf	printf@fmt^(0+128)
  9724     080E  3098               	movlw	high (STR_3| (0+32768))
  9725     080F  00E1               	movwf	(printf@fmt^(0+128)+1)
  9726     0810  319B  23F9  3188   	fcall	_getHoogtesensor
  9727     0813  0021               	movlb	1	; select bank1
  9728     0814  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
  9729     0815  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9730     0816  0820               	movf	?_getHoogtesensor^(0+128),w
  9731     0817  00E2               	movwf	(?_printf^(0+128)+2)
  9732     0818  319D  2511  3188   	fcall	_printf
  9733                           
  9734                           ;UART.c: 81:         printf(", setpoint: %u", getSetpoint());
  9735     081B  30AE               	movlw	low (STR_4| (0+32768))
  9736     081C  0021               	movlb	1	; select bank1
  9737     081D  00E0               	movwf	printf@fmt^(0+128)
  9738     081E  3098               	movlw	high (STR_4| (0+32768))
  9739     081F  00E1               	movwf	(printf@fmt^(0+128)+1)
  9740     0820  319C  2402  3188   	fcall	_getSetpoint
  9741     0823  0021               	movlb	1	; select bank1
  9742     0824  0821               	movf	(?_getSetpoint+1)^(0+128),w
  9743     0825  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9744     0826  0820               	movf	?_getSetpoint^(0+128),w
  9745     0827  00E2               	movwf	(?_printf^(0+128)+2)
  9746     0828  319D  2511  3188   	fcall	_printf
  9747                           
  9748                           ;UART.c: 82:         printf(", duty cycle: %u", getDutycycle());
  9749     082B  308E               	movlw	low (STR_5| (0+32768))
  9750     082C  0021               	movlb	1	; select bank1
  9751     082D  00E0               	movwf	printf@fmt^(0+128)
  9752     082E  3098               	movlw	high (STR_5| (0+32768))
  9753     082F  00E1               	movwf	(printf@fmt^(0+128)+1)
  9754     0830  319C  241D  3188   	fcall	_getDutycycle
  9755     0833  0021               	movlb	1	; select bank1
  9756     0834  0821               	movf	(?_getDutycycle+1)^(0+128),w
  9757     0835  00E3               	movwf	((?_printf+1)^(0+128)+2)
  9758     0836  0820               	movf	?_getDutycycle^(0+128),w
  9759     0837  00E2               	movwf	(?_printf^(0+128)+2)
  9760     0838  319D  2511  3188   	fcall	_printf
  9761                           
  9762                           ;UART.c: 85:         printf(", kp: "); printFloat(getKp());
  9763     083B  30FB               	movlw	low (STR_6| (0+32768))
  9764     083C  0021               	movlb	1	; select bank1
  9765     083D  00E0               	movwf	printf@fmt^(0+128)
  9766     083E  3098               	movlw	high (STR_6| (0+32768))
  9767     083F  00E1               	movwf	(printf@fmt^(0+128)+1)
  9768     0840  319D  2511  3188   	fcall	_printf
  9769     0843  319D  2554  3188   	fcall	_getKp
  9770     0846  0021               	movlb	1	; select bank1
  9771     0847  0823               	movf	(?_getKp+3)^(0+128),w
  9772     0848  0022               	movlb	2	; select bank2
  9773     0849  00D1               	movwf	(printFloat@number+3)^(0+256)
  9774     084A  0021               	movlb	1	; select bank1
  9775     084B  0822               	movf	(?_getKp+2)^(0+128),w
  9776     084C  0022               	movlb	2	; select bank2
  9777     084D  00D0               	movwf	(printFloat@number+2)^(0+256)
  9778     084E  0021               	movlb	1	; select bank1
  9779     084F  0821               	movf	(?_getKp+1)^(0+128),w
  9780     0850  0022               	movlb	2	; select bank2
  9781     0851  00CF               	movwf	(printFloat@number+1)^(0+256)
  9782     0852  0021               	movlb	1	; select bank1
  9783     0853  0820               	movf	?_getKp^(0+128),w
  9784     0854  0022               	movlb	2	; select bank2
  9785     0855  00CE               	movwf	printFloat@number^(0+256)
  9786     0856  3195  2586  3188   	fcall	_printFloat
  9787                           
  9788                           ;UART.c: 86:         printf(", ki: "); printFloat(getKi());
  9789     0859  30F4               	movlw	low (STR_7| (0+32768))
  9790     085A  0021               	movlb	1	; select bank1
  9791     085B  00E0               	movwf	printf@fmt^(0+128)
  9792     085C  3098               	movlw	high (STR_7| (0+32768))
  9793     085D  00E1               	movwf	(printf@fmt^(0+128)+1)
  9794     085E  319D  2511  3188   	fcall	_printf
  9795     0861  319D  2543  3188   	fcall	_getKi
  9796     0864  0021               	movlb	1	; select bank1
  9797     0865  0823               	movf	(?_getKi+3)^(0+128),w
  9798     0866  0022               	movlb	2	; select bank2
  9799     0867  00D1               	movwf	(printFloat@number+3)^(0+256)
  9800     0868  0021               	movlb	1	; select bank1
  9801     0869  0822               	movf	(?_getKi+2)^(0+128),w
  9802     086A  0022               	movlb	2	; select bank2
  9803     086B  00D0               	movwf	(printFloat@number+2)^(0+256)
  9804     086C  0021               	movlb	1	; select bank1
  9805     086D  0821               	movf	(?_getKi+1)^(0+128),w
  9806     086E  0022               	movlb	2	; select bank2
  9807     086F  00CF               	movwf	(printFloat@number+1)^(0+256)
  9808     0870  0021               	movlb	1	; select bank1
  9809     0871  0820               	movf	?_getKi^(0+128),w
  9810     0872  0022               	movlb	2	; select bank2
  9811     0873  00CE               	movwf	printFloat@number^(0+256)
  9812     0874  3195  2586  3188   	fcall	_printFloat
  9813                           
  9814                           ;UART.c: 87:         printf("\r\n");
  9815     0877  30AB               	movlw	low ((STR_12+12)| (0+32768))
  9816     0878  0021               	movlb	1	; select bank1
  9817     0879  00E0               	movwf	printf@fmt^(0+128)
  9818     087A  3098               	movlw	high ((STR_12+12)| (0+32768))
  9819     087B  00E1               	movwf	(printf@fmt^(0+128)+1)
  9820     087C  319D  2511  3188   	fcall	_printf
  9821     087F                     l905:
  9822     087F  0008               	return
  9823     0880                     __end_of_printLogs:
  9824                           
  9825                           	psect	text12
  9826     1586                     __ptext12:	
  9827 ;; *************** function _printFloat *****************
  9828 ;; Defined at:
  9829 ;;		line 14 in file "UART.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  number          4    0[BANK2 ] float 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  fractional_p    2    4[BANK2 ] unsigned short 
  9834 ;;  integer_part    1    6[BANK2 ] char 
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9844 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;Total ram usage:        9 bytes
  9849 ;; Hardware stack levels used: 1
  9850 ;; Hardware stack levels required when called: 14
  9851 ;; This function calls:
  9852 ;;		___flmul
  9853 ;;		___flsub
  9854 ;;		___fltol
  9855 ;;		___xxtofl
  9856 ;;		_printf
  9857 ;; This function is called by:
  9858 ;;		_printLogs
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862     1586                     _printFloat:	
  9863                           ;psect for function _printFloat
  9864                           
  9865     1586                     l5813:	
  9866                           ;incstack = 0
  9867                           ; Regs used in _printFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9868                           
  9869                           
  9870                           ;UART.c: 15:     int8_t integer_part = (int8_t) number;
  9871     1586  0022               	movlb	2	; select bank2
  9872     1587  0851               	movf	(printFloat@number+3)^(0+256),w
  9873     1588  0021               	movlb	1	; select bank1
  9874     1589  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9875     158A  0022               	movlb	2	; select bank2
  9876     158B  0850               	movf	(printFloat@number+2)^(0+256),w
  9877     158C  0021               	movlb	1	; select bank1
  9878     158D  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9879     158E  0022               	movlb	2	; select bank2
  9880     158F  084F               	movf	(printFloat@number+1)^(0+256),w
  9881     1590  0021               	movlb	1	; select bank1
  9882     1591  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9883     1592  0022               	movlb	2	; select bank2
  9884     1593  084E               	movf	printFloat@number^(0+256),w
  9885     1594  0021               	movlb	1	; select bank1
  9886     1595  00E4               	movwf	___fltol@f1^(0+128)
  9887     1596  3193  23BA  3195   	fcall	___fltol
  9888     1599  0021               	movlb	1	; select bank1
  9889     159A  0864               	movf	?___fltol^(0+128),w
  9890     159B  0022               	movlb	2	; select bank2
  9891     159C  00D4               	movwf	printFloat@integer_part^(0+256)
  9892                           
  9893                           ;UART.c: 16:     uint16_t fractional_part = (uint16_t) ((number - integer_part) * 1000);
  9894     159D  0851               	movf	(printFloat@number+3)^(0+256),w
  9895     159E  0021               	movlb	1	; select bank1
  9896     159F  00C9               	movwf	(___flsub@b+3)^(0+128)
  9897     15A0  0022               	movlb	2	; select bank2
  9898     15A1  0850               	movf	(printFloat@number+2)^(0+256),w
  9899     15A2  0021               	movlb	1	; select bank1
  9900     15A3  00C8               	movwf	(___flsub@b+2)^(0+128)
  9901     15A4  0022               	movlb	2	; select bank2
  9902     15A5  084F               	movf	(printFloat@number+1)^(0+256),w
  9903     15A6  0021               	movlb	1	; select bank1
  9904     15A7  00C7               	movwf	(___flsub@b+1)^(0+128)
  9905     15A8  0022               	movlb	2	; select bank2
  9906     15A9  084E               	movf	printFloat@number^(0+256),w
  9907     15AA  0021               	movlb	1	; select bank1
  9908     15AB  00C6               	movwf	___flsub@b^(0+128)
  9909     15AC  0022               	movlb	2	; select bank2
  9910     15AD  0854               	movf	printFloat@integer_part^(0+256),w
  9911     15AE  0021               	movlb	1	; select bank1
  9912     15AF  00EE               	movwf	??_printFloat^(0+128)
  9913     15B0  01EF               	clrf	(??_printFloat^(0+128)+1)
  9914     15B1  1BEE               	btfsc	??_printFloat^(0+128),7
  9915     15B2  03EF               	decf	(??_printFloat^(0+128)+1),f
  9916     15B3  086E               	movf	??_printFloat^(0+128),w
  9917     15B4  00A0               	movwf	___xxtofl@val^(0+128)
  9918     15B5  086F               	movf	(??_printFloat+1)^(0+128),w
  9919     15B6  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  9920     15B7  0D89               	rlf	9,f
  9921     15B8  3B89               	subwfb	9,f
  9922     15B9  0989               	comf	9,f
  9923     15BA  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  9924     15BB  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  9925     15BC  3001               	movlw	1
  9926     15BD  3196  26B0  3195   	fcall	___xxtofl
  9927     15C0  0021               	movlb	1	; select bank1
  9928     15C1  0823               	movf	(?___xxtofl+3)^(0+128),w
  9929     15C2  00C5               	movwf	(___flsub@a+3)^(0+128)
  9930     15C3  0822               	movf	(?___xxtofl+2)^(0+128),w
  9931     15C4  00C4               	movwf	(___flsub@a+2)^(0+128)
  9932     15C5  0821               	movf	(?___xxtofl+1)^(0+128),w
  9933     15C6  00C3               	movwf	(___flsub@a+1)^(0+128)
  9934     15C7  0820               	movf	?___xxtofl^(0+128),w
  9935     15C8  00C2               	movwf	___flsub@a^(0+128)
  9936     15C9  319E  2689  3195   	fcall	___flsub
  9937     15CC  0021               	movlb	1	; select bank1
  9938     15CD  0845               	movf	(?___flsub+3)^(0+128),w
  9939     15CE  00D1               	movwf	(___flmul@a+3)^(0+128)
  9940     15CF  0844               	movf	(?___flsub+2)^(0+128),w
  9941     15D0  00D0               	movwf	(___flmul@a+2)^(0+128)
  9942     15D1  0843               	movf	(?___flsub+1)^(0+128),w
  9943     15D2  00CF               	movwf	(___flmul@a+1)^(0+128)
  9944     15D3  0842               	movf	?___flsub^(0+128),w
  9945     15D4  00CE               	movwf	___flmul@a^(0+128)
  9946     15D5  3044               	movlw	68
  9947     15D6  00CD               	movwf	(___flmul@b+3)^(0+128)
  9948     15D7  307A               	movlw	122
  9949     15D8  00CC               	movwf	(___flmul@b+2)^(0+128)
  9950     15D9  3000               	movlw	0
  9951     15DA  00CB               	movwf	(___flmul@b+1)^(0+128)
  9952     15DB  3000               	movlw	0
  9953     15DC  00CA               	movwf	___flmul@b^(0+128)
  9954     15DD  3180  208E  3195   	fcall	___flmul
  9955     15E0  0021               	movlb	1	; select bank1
  9956     15E1  084D               	movf	(?___flmul+3)^(0+128),w
  9957     15E2  00E7               	movwf	(___fltol@f1+3)^(0+128)
  9958     15E3  084C               	movf	(?___flmul+2)^(0+128),w
  9959     15E4  00E6               	movwf	(___fltol@f1+2)^(0+128)
  9960     15E5  084B               	movf	(?___flmul+1)^(0+128),w
  9961     15E6  00E5               	movwf	(___fltol@f1+1)^(0+128)
  9962     15E7  084A               	movf	?___flmul^(0+128),w
  9963     15E8  00E4               	movwf	___fltol@f1^(0+128)
  9964     15E9  3193  23BA  3195   	fcall	___fltol
  9965     15EC  0021               	movlb	1	; select bank1
  9966     15ED  0865               	movf	(?___fltol+1)^(0+128),w
  9967     15EE  0022               	movlb	2	; select bank2
  9968     15EF  00D3               	movwf	(printFloat@fractional_part+1)^(0+256)
  9969     15F0  0021               	movlb	1	; select bank1
  9970     15F1  0864               	movf	?___fltol^(0+128),w
  9971     15F2  0022               	movlb	2	; select bank2
  9972     15F3  00D2               	movwf	printFloat@fractional_part^(0+256)
  9973     15F4                     l5815:
  9974                           
  9975                           ;UART.c: 17:     printf("%i.%03u", integer_part, fractional_part);
  9976     15F4  30EC               	movlw	low (STR_1| (0+32768))
  9977     15F5  0021               	movlb	1	; select bank1
  9978     15F6  00E0               	movwf	printf@fmt^(0+128)
  9979     15F7  3098               	movlw	high (STR_1| (0+32768))
  9980     15F8  00E1               	movwf	(printf@fmt^(0+128)+1)
  9981     15F9  0022               	movlb	2	; select bank2
  9982     15FA  0854               	movf	printFloat@integer_part^(0+256),w
  9983     15FB  0021               	movlb	1	; select bank1
  9984     15FC  00E2               	movwf	(?_printf^(0+128)+2)
  9985     15FD  01E3               	clrf	((?_printf+1)^(0+128)+2)
  9986     15FE  1BE2               	btfsc	(?_printf^(0+128)+2),7
  9987     15FF  03E3               	decf	((?_printf+1)^(0+128)+2),f
  9988     1600  0022               	movlb	2	; select bank2
  9989     1601  0853               	movf	(printFloat@fractional_part+1)^(0+256),w
  9990     1602  0021               	movlb	1	; select bank1
  9991     1603  00E5               	movwf	((?_printf+1)^(0+128)+4)
  9992     1604  0022               	movlb	2	; select bank2
  9993     1605  0852               	movf	printFloat@fractional_part^(0+256),w
  9994     1606  0021               	movlb	1	; select bank1
  9995     1607  00E4               	movwf	(?_printf^(0+128)+4)
  9996     1608  319D  2511  3195   	fcall	_printf
  9997     160B                     l870:
  9998     160B  0008               	return
  9999     160C                     __end_of_printFloat:
 10000                           
 10001                           	psect	text13
 10002     1D11                     __ptext13:	
 10003 ;; *************** function _printf *****************
 10004 ;; Defined at:
 10005 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\printf.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  fmt             2   64[BANK1 ] PTR const unsigned char 
 10008 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
 10009 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
 10010 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
 10011 ;;		 -> STR_1(8), 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;  ret             2    0        int 
 10014 ;;  ap              1   70[BANK1 ] PTR void [1]
 10015 ;;		 -> ?_printf(2), 
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  2   64[BANK1 ] int 
 10018 ;; Registers used:
 10019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10025 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;Total ram usage:        7 bytes
 10030 ;; Hardware stack levels used: 1
 10031 ;; Hardware stack levels required when called: 13
 10032 ;; This function calls:
 10033 ;;		_vfprintf
 10034 ;; This function is called by:
 10035 ;;		_printFloat
 10036 ;;		_readLine
 10037 ;;		_printLogs
 10038 ;;		_uartHandler
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042     1D11                     _printf:	
 10043                           ;psect for function _printf
 10044                           
 10045     1D11                     l4995:	
 10046                           ;incstack = 0
 10047                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10048                           
 10049     1D11  30E2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10050     1D12  0021               	movlb	1	; select bank1
 10051     1D13  00E6               	movwf	printf@ap^(0+128)
 10052     1D14                     l4997:
 10053     1D14  3000               	movlw	0
 10054     1D15  00D8               	movwf	vfprintf@fp^(0+128)
 10055     1D16  00D9               	movwf	(vfprintf@fp+1)^(0+128)
 10056     1D17  0861               	movf	(printf@fmt+1)^(0+128),w
 10057     1D18  00DB               	movwf	(vfprintf@fmt+1)^(0+128)
 10058     1D19  0860               	movf	printf@fmt^(0+128),w
 10059     1D1A  00DA               	movwf	vfprintf@fmt^(0+128)
 10060     1D1B  30E6               	movlw	(low (printf@ap| 0))& (0+255)
 10061     1D1C  00DC               	movwf	vfprintf@ap^(0+128)
 10062     1D1D  319E  262C  319D   	fcall	_vfprintf
 10063     1D20                     l1660:
 10064     1D20  0008               	return
 10065     1D21                     __end_of_printf:
 10066                           
 10067                           	psect	text14
 10068     1E2C                     __ptext14:	
 10069 ;; *************** function _vfprintf *****************
 10070 ;; Defined at:
 10071 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  fp              2   56[BANK1 ] PTR struct _IO_FILE
 10074 ;;		 -> NULL(0), 
 10075 ;;  fmt             2   58[BANK1 ] PTR const unsigned char 
 10076 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
 10077 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
 10078 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
 10079 ;;		 -> STR_1(8), 
 10080 ;;  ap              1   60[BANK1 ] PTR PTR void 
 10081 ;;		 -> printf@ap(1), 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  cfmt            2   62[BANK1 ] PTR unsigned char 
 10084 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
 10085 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
 10086 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
 10087 ;;		 -> STR_1(8), 
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  2   56[BANK1 ] int 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:        8 bytes
 10102 ;; Hardware stack levels used: 1
 10103 ;; Hardware stack levels required when called: 12
 10104 ;; This function calls:
 10105 ;;		_vfpfcnvrt
 10106 ;; This function is called by:
 10107 ;;		_printf
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111     1E2C                     _vfprintf:	
 10112                           ;psect for function _vfprintf
 10113                           
 10114     1E2C                     l4929:	
 10115                           ;incstack = 0
 10116                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10117                           
 10118                           
 10119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10120     1E2C  0021               	movlb	1	; select bank1
 10121     1E2D  085B               	movf	(vfprintf@fmt+1)^(0+128),w
 10122     1E2E  00DF               	movwf	(vfprintf@cfmt+1)^(0+128)
 10123     1E2F  085A               	movf	vfprintf@fmt^(0+128),w
 10124     1E30  00DE               	movwf	vfprintf@cfmt^(0+128)
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10127     1E31  2E3D               	goto	l4933
 10128     1E32                     l4931:
 10129                           
 10130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10131     1E32  0859               	movf	(vfprintf@fp+1)^(0+128),w
 10132     1E33  00CA               	movwf	(vfpfcnvrt@fp+1)^(0+128)
 10133     1E34  0858               	movf	vfprintf@fp^(0+128),w
 10134     1E35  00C9               	movwf	vfpfcnvrt@fp^(0+128)
 10135     1E36  30DE               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10136     1E37  00CB               	movwf	vfpfcnvrt@fmt^(0+128)
 10137     1E38  085C               	movf	vfprintf@ap^(0+128),w
 10138     1E39  00CC               	movwf	vfpfcnvrt@ap^(0+128)
 10139     1E3A  3189  212E  319E   	fcall	_vfpfcnvrt
 10140     1E3D                     l4933:
 10141                           
 10142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10143     1E3D  0021               	movlb	1	; select bank1
 10144     1E3E  085E               	movf	vfprintf@cfmt^(0+128),w
 10145     1E3F  0084               	movwf	4
 10146     1E40  085F               	movf	(vfprintf@cfmt+1)^(0+128),w
 10147     1E41  0085               	movwf	5
 10148     1E42  0012               	moviw fsr0++
 10149     1E43  1D03               	btfss	3,2
 10150     1E44  2E46               	goto	u5661
 10151     1E45  2E47               	goto	u5660
 10152     1E46                     u5661:
 10153     1E46  2E32               	goto	l4931
 10154     1E47                     u5660:
 10155     1E47                     l4935:
 10156                           
 10157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10158     1E47  01D8               	clrf	?_vfprintf^(0+128)
 10159     1E48  01D9               	clrf	(?_vfprintf+1)^(0+128)
 10160     1E49                     l1746:
 10161     1E49  0008               	return
 10162     1E4A                     __end_of_vfprintf:
 10163                           
 10164                           	psect	text15
 10165     092E                     __ptext15:	
 10166 ;; *************** function _vfpfcnvrt *****************
 10167 ;; Defined at:
 10168 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  fp              2   41[BANK1 ] PTR struct _IO_FILE
 10171 ;;		 -> NULL(0), 
 10172 ;;  fmt             1   43[BANK1 ] PTR PTR unsigned char 
 10173 ;;		 -> vfprintf@cfmt(2), 
 10174 ;;  ap              1   44[BANK1 ] PTR PTR void 
 10175 ;;		 -> printf@ap(1), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  convarg         4   50[BANK1 ] struct .
 10178 ;;  cp              2   54[BANK1 ] PTR unsigned char 
 10179 ;;		 -> STR_13(17), STR_12(15), STR_11(13), STR_10(13), 
 10180 ;;		 -> STR_9(25), STR_8(3), STR_7(7), STR_6(7), 
 10181 ;;		 -> STR_5(17), STR_4(15), STR_3(11), STR_2(24), 
 10182 ;;		 -> STR_1(8), 
 10183 ;;  done            1   49[BANK1 ] _Bool 
 10184 ;;  c               1    0        unsigned char 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  1    wreg      void 
 10187 ;; Registers used:
 10188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/0
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10194 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;Total ram usage:       15 bytes
 10199 ;; Hardware stack levels used: 1
 10200 ;; Hardware stack levels required when called: 11
 10201 ;; This function calls:
 10202 ;;		_dtoa
 10203 ;;		_fputc
 10204 ;;		_read_prec_or_width
 10205 ;;		_utoa
 10206 ;; This function is called by:
 10207 ;;		_vfprintf
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211     092E                     _vfpfcnvrt:	
 10212                           ;psect for function _vfpfcnvrt
 10213                           
 10214     092E                     l4847:	
 10215                           ;incstack = 0
 10216                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10217                           
 10218                           
 10219                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10220     092E  0021               	movlb	1	; select bank1
 10221     092F  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10222     0930  0086               	movwf	6
 10223     0931  0187               	clrf	7
 10224     0932  3F40               	moviw [0]fsr1
 10225     0933  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10226     0934  3F41               	moviw [1]fsr1
 10227     0935  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10228     0936  084D               	movf	??_vfpfcnvrt^(0+128),w
 10229     0937  0084               	movwf	4
 10230     0938  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10231     0939  0085               	movwf	5
 10232     093A  0012               	moviw fsr0++
 10233     093B  3A25               	xorlw	37
 10234     093C  1D03               	btfss	3,2
 10235     093D  293F               	goto	u5601
 10236     093E  2940               	goto	u5600
 10237     093F                     u5601:
 10238     093F  2A16               	goto	l4905
 10239     0940                     u5600:
 10240     0940                     l4849:
 10241                           
 10242                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10243     0940  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10244     0941  0086               	movwf	6
 10245     0942  0187               	clrf	7
 10246     0943  3001               	movlw	1
 10247     0944  0781               	addwf	1,f
 10248     0945  3141               	addfsr 1,1
 10249     0946  1803               	skipnc
 10250     0947  0A81               	incf	1,f
 10251     0948                     l4851:
 10252                           
 10253                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10254     0948  0020               	movlb	0	; select bank0
 10255     0949  01D5               	clrf	_width
 10256     094A  01D6               	clrf	_width+1
 10257     094B  3000               	movlw	0
 10258     094C  00E3               	movwf	_flags
 10259     094D                     l4853:
 10260                           
 10261                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10262     094D  30FF               	movlw	255
 10263     094E  0022               	movlb	2	; select bank2
 10264     094F  00C4               	movwf	_prec^(0+256)
 10265     0950  30FF               	movlw	255
 10266     0951  00C5               	movwf	(_prec^(0+256)+1)
 10267     0952                     l4855:
 10268                           
 10269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 10270     0952  0021               	movlb	1	; select bank1
 10271     0953  01D1               	clrf	vfpfcnvrt@done^(0+128)
 10272                           
 10273                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10274     0954  2974               	goto	l4863
 10275     0955                     l1726:	
 10276                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
 10277                           
 10278                           
 10279                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 10280     0955  0020               	movlb	0	; select bank0
 10281     0956  14E3               	bsf	_flags,1
 10282     0957                     l4857:
 10283                           
 10284                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 10285     0957  0021               	movlb	1	; select bank1
 10286     0958  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10287     0959  0086               	movwf	6
 10288     095A  0187               	clrf	7
 10289     095B  3001               	movlw	1
 10290     095C  0781               	addwf	1,f
 10291     095D  3141               	addfsr 1,1
 10292     095E  1803               	skipnc
 10293     095F  0A81               	incf	1,f
 10294                           
 10295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 10296     0960  2974               	goto	l4863
 10297     0961                     l1728:	
 10298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
 10299                           
 10300                           
 10301                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 10302     0961  3001               	movlw	1
 10303     0962  00D1               	movwf	vfpfcnvrt@done^(0+128)
 10304                           
 10305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 10306     0963  2974               	goto	l4863
 10307     0964                     l4861:
 10308     0964  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10309     0965  0086               	movwf	6
 10310     0966  0187               	clrf	7
 10311     0967  3F40               	moviw [0]fsr1
 10312     0968  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10313     0969  3F41               	moviw [1]fsr1
 10314     096A  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10315     096B  084D               	movf	??_vfpfcnvrt^(0+128),w
 10316     096C  0084               	movwf	4
 10317     096D  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10318     096E  0085               	movwf	5
 10319     096F  0800               	movf	0,w	;code access
 10320                           
 10321                           ; Switch size 1, requested type "simple"
 10322                           ; Number of cases is 1, Range of values is 48 to 48
 10323                           ; switch strategies available:
 10324                           ; Name         Instructions Cycles
 10325                           ; simple_byte            4     3 (average)
 10326                           ; direct_byte           11     9 (fixed)
 10327                           ; jumptable            263     9 (fixed)
 10328                           ;	Chosen strategy is simple_byte
 10329     0970  3A30               	xorlw	48	; case 48
 10330     0971  1903               	skipnz
 10331     0972  2955               	goto	l1726
 10332     0973  2961               	goto	l1728
 10333     0974                     l4863:
 10334                           
 10335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10336     0974  0851               	movf	vfpfcnvrt@done^(0+128),w
 10337     0975  1903               	btfsc	3,2
 10338     0976  2978               	goto	u5611
 10339     0977  2979               	goto	u5610
 10340     0978                     u5611:
 10341     0978  2964               	goto	l4861
 10342     0979                     u5610:
 10343     0979                     l4865:
 10344                           
 10345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 10346     0979  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10347     097A  00A6               	movwf	read_prec_or_width@fmt^(0+128)
 10348     097B  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10349     097C  00A7               	movwf	read_prec_or_width@ap^(0+128)
 10350     097D  3192  2291  3189   	fcall	_read_prec_or_width
 10351     0980  0021               	movlb	1	; select bank1
 10352     0981  0827               	movf	(?_read_prec_or_width+1)^(0+128),w
 10353     0982  0020               	movlb	0	; select bank0
 10354     0983  00D6               	movwf	_width+1
 10355     0984  0021               	movlb	1	; select bank1
 10356     0985  0826               	movf	?_read_prec_or_width^(0+128),w
 10357     0986  0020               	movlb	0	; select bank0
 10358     0987  00D5               	movwf	_width
 10359     0988                     l4867:
 10360                           
 10361                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 10362     0988  1FD6               	btfss	_width+1,7
 10363     0989  298B               	goto	u5621
 10364     098A  298C               	goto	u5620
 10365     098B                     u5621:
 10366     098B  2992               	goto	l4873
 10367     098C                     u5620:
 10368     098C                     l4869:
 10369                           
 10370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 10371     098C  1463               	bsf	_flags,0
 10372     098D                     l4871:
 10373                           
 10374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 10375     098D  09D5               	comf	_width,f
 10376     098E  09D6               	comf	_width+1,f
 10377     098F  0AD5               	incf	_width,f
 10378     0990  1903               	skipnz
 10379     0991  0AD6               	incf	_width+1,f
 10380     0992                     l4873:
 10381                           
 10382                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10383     0992  0021               	movlb	1	; select bank1
 10384     0993  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10385     0994  0086               	movwf	6
 10386     0995  0187               	clrf	7
 10387     0996  3F40               	moviw [0]fsr1
 10388     0997  00D6               	movwf	vfpfcnvrt@cp^(0+128)
 10389     0998  3F41               	moviw [1]fsr1
 10390     0999  00D7               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 10391     099A                     l4875:
 10392                           
 10393                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10394     099A  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10395     099B  0084               	movwf	4
 10396     099C  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10397     099D  0085               	movwf	5
 10398     099E  0012               	moviw fsr0++
 10399     099F  3A64               	xorlw	100
 10400     09A0  1903               	btfsc	3,2
 10401     09A1  29A3               	goto	u5631
 10402     09A2  29A4               	goto	u5630
 10403     09A3                     u5631:
 10404     09A3  29AE               	goto	l4879
 10405     09A4                     u5630:
 10406     09A4                     l4877:
 10407     09A4  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10408     09A5  0084               	movwf	4
 10409     09A6  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10410     09A7  0085               	movwf	5
 10411     09A8  0012               	moviw fsr0++
 10412     09A9  3A69               	xorlw	105
 10413     09AA  1D03               	btfss	3,2
 10414     09AB  29AD               	goto	u5641
 10415     09AC  29AE               	goto	u5640
 10416     09AD                     u5641:
 10417     09AD  29D3               	goto	l4887
 10418     09AE                     u5640:
 10419     09AE                     l4879:
 10420                           
 10421                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10422     09AE  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10423     09AF  0086               	movwf	6
 10424     09B0  0187               	clrf	7
 10425     09B1  0801               	movf	1,w
 10426     09B2  0084               	movwf	4
 10427     09B3  0185               	clrf	5
 10428     09B4  3002               	movlw	2
 10429     09B5  0781               	addwf	1,f
 10430     09B6  3F00               	moviw [0]fsr0
 10431     09B7  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
 10432     09B8  3F01               	moviw [1]fsr0
 10433     09B9  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10434     09BA                     l4881:
 10435                           
 10436                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10437     09BA  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10438     09BB  3E01               	addlw	1
 10439     09BC  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10440     09BD  3000               	movlw	0
 10441     09BE  3D57               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10442     09BF  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10443     09C0  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10444     09C1  0086               	movwf	6
 10445     09C2  0187               	clrf	7
 10446     09C3  084D               	movf	??_vfpfcnvrt^(0+128),w
 10447     09C4  3FC0               	movwi [0]fsr1
 10448     09C5  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10449     09C6  3FC1               	movwi [1]fsr1
 10450     09C7                     l4883:
 10451                           
 10452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10453     09C7  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10454     09C8  00BD               	movwf	(dtoa@fp+1)^(0+128)
 10455     09C9  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10456     09CA  00BC               	movwf	dtoa@fp^(0+128)
 10457     09CB  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10458     09CC  00BF               	movwf	(dtoa@d+1)^(0+128)
 10459     09CD  0852               	movf	vfpfcnvrt@convarg^(0+128),w
 10460     09CE  00BE               	movwf	dtoa@d^(0+128)
 10461     09CF  3187  2710  3189   	fcall	_dtoa
 10462     09D2  2A30               	goto	l1734
 10463     09D3                     l4887:
 10464     09D3  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10465     09D4  0084               	movwf	4
 10466     09D5  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10467     09D6  0085               	movwf	5
 10468     09D7  0012               	moviw fsr0++
 10469     09D8  3A75               	xorlw	117
 10470     09D9  1D03               	btfss	3,2
 10471     09DA  29DC               	goto	u5651
 10472     09DB  29DD               	goto	u5650
 10473     09DC                     u5651:
 10474     09DC  2A0C               	goto	l4901
 10475     09DD                     u5650:
 10476     09DD                     l4889:
 10477                           
 10478                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 10479     09DD  084C               	movf	vfpfcnvrt@ap^(0+128),w
 10480     09DE  0086               	movwf	6
 10481     09DF  0187               	clrf	7
 10482     09E0  0801               	movf	1,w
 10483     09E1  0084               	movwf	4
 10484     09E2  0185               	clrf	5
 10485     09E3  3002               	movlw	2
 10486     09E4  0781               	addwf	1,f
 10487     09E5  3F00               	moviw [0]fsr0
 10488     09E6  00D2               	movwf	vfpfcnvrt@convarg^(0+128)
 10489     09E7  3F01               	moviw [1]fsr0
 10490     09E8  00D3               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 10491     09E9                     l4891:
 10492                           
 10493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10494     09E9  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10495     09EA  3E01               	addlw	1
 10496     09EB  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10497     09EC  3000               	movlw	0
 10498     09ED  3D57               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 10499     09EE  00CE               	movwf	(??_vfpfcnvrt+1)^(0+128)
 10500     09EF  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10501     09F0  0086               	movwf	6
 10502     09F1  0187               	clrf	7
 10503     09F2  084D               	movf	??_vfpfcnvrt^(0+128),w
 10504     09F3  3FC0               	movwi [0]fsr1
 10505     09F4  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10506     09F5  3FC1               	movwi [1]fsr1
 10507                           
 10508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10509     09F6  2A03               	goto	l4899
 10510     09F7                     l4893:
 10511                           
 10512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
 10513     09F7  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10514     09F8  00BD               	movwf	(utoa@fp+1)^(0+128)
 10515     09F9  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10516     09FA  00BC               	movwf	utoa@fp^(0+128)
 10517     09FB  0853               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 10518     09FC  00BF               	movwf	(utoa@d+1)^(0+128)
 10519     09FD  0852               	movf	vfpfcnvrt@convarg^(0+128),w
 10520     09FE  00BE               	movwf	utoa@d^(0+128)
 10521     09FF  3194  2499  3189   	fcall	_utoa
 10522     0A02  2A30               	goto	l1734
 10523     0A03                     l4899:
 10524     0A03  0856               	movf	vfpfcnvrt@cp^(0+128),w
 10525     0A04  0084               	movwf	4
 10526     0A05  0857               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10527     0A06  0085               	movwf	5
 10528     0A07  0800               	movf	0,w	;code access
 10529                           
 10530                           ; Switch size 1, requested type "simple"
 10531                           ; Number of cases is 1, Range of values is 117 to 117
 10532                           ; switch strategies available:
 10533                           ; Name         Instructions Cycles
 10534                           ; simple_byte            4     3 (average)
 10535                           ; direct_byte           11     9 (fixed)
 10536                           ; jumptable            263     9 (fixed)
 10537                           ;	Chosen strategy is simple_byte
 10538     0A08  3A75               	xorlw	117	; case 117
 10539     0A09  1903               	skipnz
 10540     0A0A  29F7               	goto	l4893
 10541     0A0B  2A0C               	goto	l4901
 10542     0A0C                     l4901:
 10543                           
 10544                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 10545     0A0C  0021               	movlb	1	; select bank1
 10546     0A0D  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10547     0A0E  0086               	movwf	6
 10548     0A0F  0187               	clrf	7
 10549     0A10  3001               	movlw	1
 10550     0A11  0781               	addwf	1,f
 10551     0A12  3141               	addfsr 1,1
 10552     0A13  1803               	skipnc
 10553     0A14  0A81               	incf	1,f
 10554     0A15  2A30               	goto	l1734
 10555     0A16                     l4905:
 10556                           
 10557                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 10558     0A16  084B               	movf	vfpfcnvrt@fmt^(0+128),w
 10559     0A17  0086               	movwf	6
 10560     0A18  0187               	clrf	7
 10561     0A19  3F40               	moviw [0]fsr1
 10562     0A1A  00CD               	movwf	??_vfpfcnvrt^(0+128)
 10563     0A1B  3F41               	moviw [1]fsr1
 10564     0A1C  00CE               	movwf	(??_vfpfcnvrt^(0+128)+1)
 10565     0A1D  084D               	movf	??_vfpfcnvrt^(0+128),w
 10566     0A1E  0084               	movwf	4
 10567     0A1F  084E               	movf	(??_vfpfcnvrt+1)^(0+128),w
 10568     0A20  0085               	movwf	5
 10569     0A21  0800               	movf	0,w	;code access
 10570     0A22  00CF               	movwf	(??_vfpfcnvrt+2)^(0+128)
 10571     0A23  01D0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 10572     0A24  084F               	movf	(??_vfpfcnvrt+2)^(0+128),w
 10573     0A25  00A3               	movwf	fputc@c^(0+128)
 10574     0A26  0850               	movf	(??_vfpfcnvrt+3)^(0+128),w
 10575     0A27  00A4               	movwf	(fputc@c+1)^(0+128)
 10576     0A28  084A               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 10577     0A29  00A6               	movwf	(fputc@fp+1)^(0+128)
 10578     0A2A  0849               	movf	vfpfcnvrt@fp^(0+128),w
 10579     0A2B  00A5               	movwf	fputc@fp^(0+128)
 10580     0A2C  3192  22ED  3189   	fcall	_fputc
 10581     0A2F  2A0C               	goto	l4901
 10582     0A30                     l1734:
 10583     0A30  0008               	return
 10584     0A31                     __end_of_vfpfcnvrt:
 10585                           
 10586                           	psect	text16
 10587     1499                     __ptext16:	
 10588 ;; *************** function _utoa *****************
 10589 ;; Defined at:
 10590 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 10593 ;;		 -> NULL(0), 
 10594 ;;  d               2   30[BANK1 ] unsigned int 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  i               2   36[BANK1 ] int 
 10597 ;;  w               2   34[BANK1 ] int 
 10598 ;;  p               1   33[BANK1 ] _Bool 
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10608 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10610 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;Total ram usage:       10 bytes
 10613 ;; Hardware stack levels used: 1
 10614 ;; Hardware stack levels required when called: 10
 10615 ;; This function calls:
 10616 ;;		___lwdiv
 10617 ;;		___lwmod
 10618 ;;		_pad
 10619 ;; This function is called by:
 10620 ;;		_vfpfcnvrt
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624     1499                     _utoa:	
 10625                           ;psect for function _utoa
 10626                           
 10627     1499                     l4381:	
 10628                           ;incstack = 0
 10629                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10630                           
 10631                           
 10632                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
 10633     1499  3001               	movlw	1
 10634     149A  0021               	movlb	1	; select bank1
 10635     149B  00C1               	movwf	utoa@p^(0+128)
 10636     149C                     l4383:
 10637                           
 10638                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10639     149C  0020               	movlb	0	; select bank0
 10640     149D  0856               	movf	_width+1,w
 10641     149E  0021               	movlb	1	; select bank1
 10642     149F  00C3               	movwf	(utoa@w+1)^(0+128)
 10643     14A0  0020               	movlb	0	; select bank0
 10644     14A1  0855               	movf	_width,w
 10645     14A2  0021               	movlb	1	; select bank1
 10646     14A3  00C2               	movwf	utoa@w^(0+128)
 10647                           
 10648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10649     14A4  301F               	movlw	31
 10650     14A5  00C4               	movwf	utoa@i^(0+128)
 10651     14A6  3000               	movlw	0
 10652     14A7  00C5               	movwf	(utoa@i^(0+128)+1)
 10653     14A8                     l4385:
 10654                           
 10655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10656     14A8  0023               	movlb	3	; select bank3
 10657     14A9  01BF               	clrf	(_dbuf^(0+384)+31)
 10658                           
 10659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10660     14AA  2CD9               	goto	l4397
 10661     14AB                     l4387:
 10662                           
 10663                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10664     14AB  30FF               	movlw	255
 10665     14AC  0021               	movlb	1	; select bank1
 10666     14AD  07C4               	addwf	utoa@i^(0+128),f
 10667     14AE  30FF               	movlw	255
 10668     14AF  3DC5               	addwfc	(utoa@i+1)^(0+128),f
 10669     14B0                     l4389:
 10670                           
 10671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10672     14B0  0844               	movf	utoa@i^(0+128),w
 10673     14B1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10674     14B2  0086               	movwf	6
 10675     14B3  3001               	movlw	1	; select bank3/4
 10676     14B4  0087               	movwf	7
 10677     14B5  300A               	movlw	10
 10678     14B6  00A0               	movwf	___lwmod@divisor^(0+128)
 10679     14B7  3000               	movlw	0
 10680     14B8  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
 10681     14B9  083F               	movf	(utoa@d+1)^(0+128),w
 10682     14BA  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
 10683     14BB  083E               	movf	utoa@d^(0+128),w
 10684     14BC  00A2               	movwf	___lwmod@dividend^(0+128)
 10685     14BD  319F  2789  3194   	fcall	___lwmod
 10686     14C0  0021               	movlb	1	; select bank1
 10687     14C1  0820               	movf	?___lwmod^(0+128),w
 10688     14C2  3E30               	addlw	48
 10689     14C3  0081               	movwf	1
 10690     14C4                     l4391:
 10691                           
 10692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
 10693     14C4  01C1               	clrf	utoa@p^(0+128)
 10694     14C5                     l4393:
 10695                           
 10696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10697     14C5  30FF               	movlw	255
 10698     14C6  07C2               	addwf	utoa@w^(0+128),f
 10699     14C7  30FF               	movlw	255
 10700     14C8  3DC3               	addwfc	(utoa@w+1)^(0+128),f
 10701     14C9                     l4395:
 10702                           
 10703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10704     14C9  300A               	movlw	10
 10705     14CA  00A0               	movwf	___lwdiv@divisor^(0+128)
 10706     14CB  3000               	movlw	0
 10707     14CC  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
 10708     14CD  083F               	movf	(utoa@d+1)^(0+128),w
 10709     14CE  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
 10710     14CF  083E               	movf	utoa@d^(0+128),w
 10711     14D0  00A2               	movwf	___lwdiv@dividend^(0+128)
 10712     14D1  3187  27C4  3194   	fcall	___lwdiv
 10713     14D4  0021               	movlb	1	; select bank1
 10714     14D5  0821               	movf	(?___lwdiv+1)^(0+128),w
 10715     14D6  00BF               	movwf	(utoa@d+1)^(0+128)
 10716     14D7  0820               	movf	?___lwdiv^(0+128),w
 10717     14D8  00BE               	movwf	utoa@d^(0+128)
 10718     14D9                     l4397:
 10719                           
 10720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10721     14D9  0021               	movlb	1	; select bank1
 10722     14DA  0844               	movf	utoa@i^(0+128),w
 10723     14DB  0445               	iorwf	(utoa@i+1)^(0+128),w
 10724     14DC  1903               	btfsc	3,2
 10725     14DD  2CDF               	goto	u4551
 10726     14DE  2CE0               	goto	u4550
 10727     14DF                     u4551:
 10728     14DF  2CFD               	goto	l4407
 10729     14E0                     u4550:
 10730     14E0                     l4399:
 10731     14E0  083E               	movf	utoa@d^(0+128),w
 10732     14E1  043F               	iorwf	(utoa@d+1)^(0+128),w
 10733     14E2  1D03               	btfss	3,2
 10734     14E3  2CE5               	goto	u4561
 10735     14E4  2CE6               	goto	u4560
 10736     14E5                     u4561:
 10737     14E5  2CAB               	goto	l4387
 10738     14E6                     u4560:
 10739     14E6                     l4401:
 10740     14E6  0841               	movf	utoa@p^(0+128),w
 10741     14E7  1D03               	btfss	3,2
 10742     14E8  2CEA               	goto	u4571
 10743     14E9  2CEB               	goto	u4570
 10744     14EA                     u4571:
 10745     14EA  2CAB               	goto	l4387
 10746     14EB                     u4570:
 10747     14EB                     l4403:
 10748     14EB  0843               	movf	(utoa@w+1)^(0+128),w
 10749     14EC  3A80               	xorlw	128
 10750     14ED  00C0               	movwf	??_utoa^(0+128)
 10751     14EE  3080               	movlw	128
 10752     14EF  0240               	subwf	??_utoa^(0+128),w
 10753     14F0  1D03               	skipz
 10754     14F1  2CF4               	goto	u4585
 10755     14F2  3001               	movlw	1
 10756     14F3  0242               	subwf	utoa@w^(0+128),w
 10757     14F4                     u4585:
 10758     14F4  1C03               	skipc
 10759     14F5  2CF7               	goto	u4581
 10760     14F6  2CF8               	goto	u4580
 10761     14F7                     u4581:
 10762     14F7  2CFD               	goto	l4407
 10763     14F8                     u4580:
 10764     14F8                     l4405:
 10765     14F8  0020               	movlb	0	; select bank0
 10766     14F9  18E3               	btfsc	_flags,1
 10767     14FA  2CFC               	goto	u4591
 10768     14FB  2CFD               	goto	u4590
 10769     14FC                     u4591:
 10770     14FC  2CAB               	goto	l4387
 10771     14FD                     u4590:
 10772     14FD                     l4407:
 10773                           
 10774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10775     14FD  0021               	movlb	1	; select bank1
 10776     14FE  083D               	movf	(utoa@fp+1)^(0+128),w
 10777     14FF  00B5               	movwf	(pad@fp+1)^(0+128)
 10778     1500  083C               	movf	utoa@fp^(0+128),w
 10779     1501  00B4               	movwf	pad@fp^(0+128)
 10780     1502  0844               	movf	utoa@i^(0+128),w
 10781     1503  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10782     1504  00B6               	movwf	pad@buf^(0+128)
 10783     1505  0843               	movf	(utoa@w+1)^(0+128),w
 10784     1506  00B8               	movwf	(pad@p+1)^(0+128)
 10785     1507  0842               	movf	utoa@w^(0+128),w
 10786     1508  00B7               	movwf	pad@p^(0+128)
 10787     1509  3190  203D  3194   	fcall	_pad
 10788     150C                     l1711:
 10789     150C  0008               	return
 10790     150D                     __end_of_utoa:
 10791                           
 10792                           	psect	text17
 10793     1F89                     __ptext17:	
 10794 ;; *************** function ___lwmod *****************
 10795 ;; Defined at:
 10796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  divisor         2    0[BANK1 ] unsigned int 
 10799 ;;  dividend        2    2[BANK1 ] unsigned int 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  counter         1    4[BANK1 ] unsigned char 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  2    0[BANK1 ] unsigned int 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2, status,0
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10811 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;Total ram usage:        5 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; Hardware stack levels required when called: 5
 10818 ;; This function calls:
 10819 ;;		Nothing
 10820 ;; This function is called by:
 10821 ;;		_utoa
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825     1F89                     ___lwmod:	
 10826                           ;psect for function ___lwmod
 10827                           
 10828     1F89                     l4275:	
 10829                           ;incstack = 0
 10830                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10831                           
 10832     1F89  0021               	movlb	1	; select bank1
 10833     1F8A  0820               	movf	___lwmod@divisor^(0+128),w
 10834     1F8B  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
 10835     1F8C  1903               	btfsc	3,2
 10836     1F8D  2F8F               	goto	u4311
 10837     1F8E  2F90               	goto	u4310
 10838     1F8F                     u4311:
 10839     1F8F  2FB7               	goto	l4293
 10840     1F90                     u4310:
 10841     1F90                     l4277:
 10842     1F90  3001               	movlw	1
 10843     1F91  00A4               	movwf	___lwmod@counter^(0+128)
 10844     1F92  2F9A               	goto	l4283
 10845     1F93                     l4279:
 10846     1F93  3001               	movlw	1
 10847     1F94                     u4325:
 10848     1F94  35A0               	lslf	___lwmod@divisor^(0+128),f
 10849     1F95  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
 10850     1F96  0B89               	decfsz	9,f
 10851     1F97  2F94               	goto	u4325
 10852     1F98                     l4281:
 10853     1F98  3001               	movlw	1
 10854     1F99  07A4               	addwf	___lwmod@counter^(0+128),f
 10855     1F9A                     l4283:
 10856     1F9A  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
 10857     1F9B  2F9D               	goto	u4331
 10858     1F9C  2F9E               	goto	u4330
 10859     1F9D                     u4331:
 10860     1F9D  2F93               	goto	l4279
 10861     1F9E                     u4330:
 10862     1F9E                     l4285:
 10863     1F9E  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10864     1F9F  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
 10865     1FA0  1D03               	skipz
 10866     1FA1  2FA4               	goto	u4345
 10867     1FA2  0820               	movf	___lwmod@divisor^(0+128),w
 10868     1FA3  0222               	subwf	___lwmod@dividend^(0+128),w
 10869     1FA4                     u4345:
 10870     1FA4  1C03               	skipc
 10871     1FA5  2FA7               	goto	u4341
 10872     1FA6  2FA8               	goto	u4340
 10873     1FA7                     u4341:
 10874     1FA7  2FAC               	goto	l4289
 10875     1FA8                     u4340:
 10876     1FA8                     l4287:
 10877     1FA8  0820               	movf	___lwmod@divisor^(0+128),w
 10878     1FA9  02A2               	subwf	___lwmod@dividend^(0+128),f
 10879     1FAA  0821               	movf	(___lwmod@divisor+1)^(0+128),w
 10880     1FAB  3BA3               	subwfb	(___lwmod@dividend+1)^(0+128),f
 10881     1FAC                     l4289:
 10882     1FAC  3001               	movlw	1
 10883     1FAD                     u4355:
 10884     1FAD  36A1               	lsrf	(___lwmod@divisor+1)^(0+128),f
 10885     1FAE  0CA0               	rrf	___lwmod@divisor^(0+128),f
 10886     1FAF  0B89               	decfsz	9,f
 10887     1FB0  2FAD               	goto	u4355
 10888     1FB1                     l4291:
 10889     1FB1  3001               	movlw	1
 10890     1FB2  02A4               	subwf	___lwmod@counter^(0+128),f
 10891     1FB3  1D03               	btfss	3,2
 10892     1FB4  2FB6               	goto	u4361
 10893     1FB5  2FB7               	goto	u4360
 10894     1FB6                     u4361:
 10895     1FB6  2F9E               	goto	l4285
 10896     1FB7                     u4360:
 10897     1FB7                     l4293:
 10898     1FB7  0823               	movf	(___lwmod@dividend+1)^(0+128),w
 10899     1FB8  00A1               	movwf	(?___lwmod+1)^(0+128)
 10900     1FB9  0822               	movf	___lwmod@dividend^(0+128),w
 10901     1FBA  00A0               	movwf	?___lwmod^(0+128)
 10902     1FBB                     l1471:
 10903     1FBB  0008               	return
 10904     1FBC                     __end_of___lwmod:
 10905                           
 10906                           	psect	text18
 10907     07C4                     __ptext18:	
 10908 ;; *************** function ___lwdiv *****************
 10909 ;; Defined at:
 10910 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  divisor         2    0[BANK1 ] unsigned int 
 10913 ;;  dividend        2    2[BANK1 ] unsigned int 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;  quotient        2    4[BANK1 ] unsigned int 
 10916 ;;  counter         1    6[BANK1 ] unsigned char 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  2    0[BANK1 ] unsigned int 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10926 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;Total ram usage:        7 bytes
 10931 ;; Hardware stack levels used: 1
 10932 ;; Hardware stack levels required when called: 5
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_utoa
 10937 ;;		_dutycycle_led_strip
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941     07C4                     ___lwdiv:	
 10942                           ;psect for function ___lwdiv
 10943                           
 10944     07C4                     l4249:	
 10945                           ;incstack = 0
 10946                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10947                           
 10948     07C4  0021               	movlb	1	; select bank1
 10949     07C5  01A4               	clrf	___lwdiv@quotient^(0+128)
 10950     07C6  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
 10951     07C7                     l4251:
 10952     07C7  0820               	movf	___lwdiv@divisor^(0+128),w
 10953     07C8  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
 10954     07C9  1903               	btfsc	3,2
 10955     07CA  2FCC               	goto	u4241
 10956     07CB  2FCD               	goto	u4240
 10957     07CC                     u4241:
 10958     07CC  2FFA               	goto	l4271
 10959     07CD                     u4240:
 10960     07CD                     l4253:
 10961     07CD  3001               	movlw	1
 10962     07CE  00A6               	movwf	___lwdiv@counter^(0+128)
 10963     07CF  2FD7               	goto	l4259
 10964     07D0                     l4255:
 10965     07D0  3001               	movlw	1
 10966     07D1                     u4255:
 10967     07D1  35A0               	lslf	___lwdiv@divisor^(0+128),f
 10968     07D2  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
 10969     07D3  0B89               	decfsz	9,f
 10970     07D4  2FD1               	goto	u4255
 10971     07D5                     l4257:
 10972     07D5  3001               	movlw	1
 10973     07D6  07A6               	addwf	___lwdiv@counter^(0+128),f
 10974     07D7                     l4259:
 10975     07D7  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
 10976     07D8  2FDA               	goto	u4261
 10977     07D9  2FDB               	goto	u4260
 10978     07DA                     u4261:
 10979     07DA  2FD0               	goto	l4255
 10980     07DB                     u4260:
 10981     07DB                     l4261:
 10982     07DB  3001               	movlw	1
 10983     07DC                     u4275:
 10984     07DC  35A4               	lslf	___lwdiv@quotient^(0+128),f
 10985     07DD  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
 10986     07DE  0B89               	decfsz	9,f
 10987     07DF  2FDC               	goto	u4275
 10988     07E0  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 10989     07E1  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
 10990     07E2  1D03               	skipz
 10991     07E3  2FE6               	goto	u4285
 10992     07E4  0820               	movf	___lwdiv@divisor^(0+128),w
 10993     07E5  0222               	subwf	___lwdiv@dividend^(0+128),w
 10994     07E6                     u4285:
 10995     07E6  1C03               	skipc
 10996     07E7  2FE9               	goto	u4281
 10997     07E8  2FEA               	goto	u4280
 10998     07E9                     u4281:
 10999     07E9  2FEF               	goto	l4267
 11000     07EA                     u4280:
 11001     07EA                     l4263:
 11002     07EA  0820               	movf	___lwdiv@divisor^(0+128),w
 11003     07EB  02A2               	subwf	___lwdiv@dividend^(0+128),f
 11004     07EC  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
 11005     07ED  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
 11006     07EE                     l4265:
 11007     07EE  1424               	bsf	___lwdiv@quotient^(0+128),0
 11008     07EF                     l4267:
 11009     07EF  3001               	movlw	1
 11010     07F0                     u4295:
 11011     07F0  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
 11012     07F1  0CA0               	rrf	___lwdiv@divisor^(0+128),f
 11013     07F2  0B89               	decfsz	9,f
 11014     07F3  2FF0               	goto	u4295
 11015     07F4                     l4269:
 11016     07F4  3001               	movlw	1
 11017     07F5  02A6               	subwf	___lwdiv@counter^(0+128),f
 11018     07F6  1D03               	btfss	3,2
 11019     07F7  2FF9               	goto	u4301
 11020     07F8  2FFA               	goto	u4300
 11021     07F9                     u4301:
 11022     07F9  2FDB               	goto	l4261
 11023     07FA                     u4300:
 11024     07FA                     l4271:
 11025     07FA  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
 11026     07FB  00A1               	movwf	(?___lwdiv+1)^(0+128)
 11027     07FC  0824               	movf	___lwdiv@quotient^(0+128),w
 11028     07FD  00A0               	movwf	?___lwdiv^(0+128)
 11029     07FE                     l1461:
 11030     07FE  0008               	return
 11031     07FF                     __end_of___lwdiv:
 11032                           
 11033                           	psect	text19
 11034     1291                     __ptext19:	
 11035 ;; *************** function _read_prec_or_width *****************
 11036 ;; Defined at:
 11037 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  fmt             1    6[BANK1 ] PTR PTR const unsigned c
 11040 ;;		 -> vfprintf@cfmt(2), 
 11041 ;;  ap              1    7[BANK1 ] PTR PTR void [1]
 11042 ;;		 -> printf@ap(1), 
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;  c               1   11[BANK1 ] unsigned char 
 11045 ;;  n               2   12[BANK1 ] int 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  2    6[BANK1 ] int 
 11048 ;; Registers used:
 11049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:        8 bytes
 11060 ;; Hardware stack levels used: 1
 11061 ;; Hardware stack levels required when called: 6
 11062 ;; This function calls:
 11063 ;;		___wmul
 11064 ;; This function is called by:
 11065 ;;		_vfpfcnvrt
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069     1291                     _read_prec_or_width:	
 11070                           ;psect for function _read_prec_or_width
 11071                           
 11072     1291                     l4411:	
 11073                           ;incstack = 0
 11074                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11075                           
 11076                           
 11077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11078     1291  0021               	movlb	1	; select bank1
 11079     1292  01AC               	clrf	read_prec_or_width@n^(0+128)
 11080     1293  01AD               	clrf	(read_prec_or_width@n+1)^(0+128)
 11081     1294                     l4413:
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11084     1294  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11085     1295  0086               	movwf	6
 11086     1296  0187               	clrf	7
 11087     1297  3F40               	moviw [0]fsr1
 11088     1298  00A8               	movwf	??_read_prec_or_width^(0+128)
 11089     1299  3F41               	moviw [1]fsr1
 11090     129A  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 11091     129B  0828               	movf	??_read_prec_or_width^(0+128),w
 11092     129C  0084               	movwf	4
 11093     129D  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 11094     129E  0085               	movwf	5
 11095     129F  0012               	moviw fsr0++
 11096     12A0  3A2A               	xorlw	42
 11097     12A1  1D03               	btfss	3,2
 11098     12A2  2AA4               	goto	u4601
 11099     12A3  2AA5               	goto	u4600
 11100     12A4                     u4601:
 11101     12A4  2AD4               	goto	l4423
 11102     12A5                     u4600:
 11103     12A5                     l4415:
 11104                           
 11105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11106     12A5  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11107     12A6  0086               	movwf	6
 11108     12A7  0187               	clrf	7
 11109     12A8  3001               	movlw	1
 11110     12A9  0781               	addwf	1,f
 11111     12AA  3141               	addfsr 1,1
 11112     12AB  1803               	skipnc
 11113     12AC  0A81               	incf	1,f
 11114     12AD                     l4417:
 11115                           
 11116                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11117     12AD  0827               	movf	read_prec_or_width@ap^(0+128),w
 11118     12AE  0086               	movwf	6
 11119     12AF  0187               	clrf	7
 11120     12B0  0801               	movf	1,w
 11121     12B1  0084               	movwf	4
 11122     12B2  0185               	clrf	5
 11123     12B3  3002               	movlw	2
 11124     12B4  0781               	addwf	1,f
 11125     12B5  3F00               	moviw [0]fsr0
 11126     12B6  00AC               	movwf	read_prec_or_width@n^(0+128)
 11127     12B7  3F01               	moviw [1]fsr0
 11128     12B8  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11131     12B9  2AE8               	goto	l4425
 11132     12BA                     l4419:
 11133                           
 11134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11135     12BA  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 11136     12BB  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 11137     12BC  082C               	movf	read_prec_or_width@n^(0+128),w
 11138     12BD  00A0               	movwf	___wmul@multiplier^(0+128)
 11139     12BE  300A               	movlw	10
 11140     12BF  00A2               	movwf	___wmul@multiplicand^(0+128)
 11141     12C0  3000               	movlw	0
 11142     12C1  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 11143     12C2  319E  2669  3192   	fcall	___wmul
 11144     12C5  0021               	movlb	1	; select bank1
 11145     12C6  082B               	movf	read_prec_or_width@c^(0+128),w
 11146     12C7  0720               	addwf	?___wmul^(0+128),w
 11147     12C8  00AC               	movwf	read_prec_or_width@n^(0+128)
 11148     12C9  3000               	movlw	0
 11149     12CA  3D21               	addwfc	(?___wmul+1)^(0+128),w
 11150     12CB  00AD               	movwf	(read_prec_or_width@n+1)^(0+128)
 11151     12CC                     l4421:
 11152                           
 11153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11154     12CC  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11155     12CD  0086               	movwf	6
 11156     12CE  0187               	clrf	7
 11157     12CF  3001               	movlw	1
 11158     12D0  0781               	addwf	1,f
 11159     12D1  3141               	addfsr 1,1
 11160     12D2  1803               	skipnc
 11161     12D3  0A81               	incf	1,f
 11162     12D4                     l4423:
 11163                           
 11164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11165     12D4  0826               	movf	read_prec_or_width@fmt^(0+128),w
 11166     12D5  0086               	movwf	6
 11167     12D6  0187               	clrf	7
 11168     12D7  3F40               	moviw [0]fsr1
 11169     12D8  00A8               	movwf	??_read_prec_or_width^(0+128)
 11170     12D9  3F41               	moviw [1]fsr1
 11171     12DA  00A9               	movwf	(??_read_prec_or_width^(0+128)+1)
 11172     12DB  0828               	movf	??_read_prec_or_width^(0+128),w
 11173     12DC  0084               	movwf	4
 11174     12DD  0829               	movf	(??_read_prec_or_width+1)^(0+128),w
 11175     12DE  0085               	movwf	5
 11176     12DF  0800               	movf	0,w	;code access
 11177     12E0  3ED0               	addlw	208
 11178     12E1  00AB               	movwf	read_prec_or_width@c^(0+128)
 11179     12E2  300A               	movlw	10
 11180     12E3  022B               	subwf	read_prec_or_width@c^(0+128),w
 11181     12E4  1C03               	skipc
 11182     12E5  2AE7               	goto	u4611
 11183     12E6  2AE8               	goto	u4610
 11184     12E7                     u4611:
 11185     12E7  2ABA               	goto	l4419
 11186     12E8                     u4610:
 11187     12E8                     l4425:
 11188                           
 11189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11190     12E8  082D               	movf	(read_prec_or_width@n+1)^(0+128),w
 11191     12E9  00A7               	movwf	(?_read_prec_or_width+1)^(0+128)
 11192     12EA  082C               	movf	read_prec_or_width@n^(0+128),w
 11193     12EB  00A6               	movwf	?_read_prec_or_width^(0+128)
 11194     12EC                     l1719:
 11195     12EC  0008               	return
 11196     12ED                     __end_of_read_prec_or_width:
 11197                           
 11198                           	psect	text20
 11199     0710                     __ptext20:	
 11200 ;; *************** function _dtoa *****************
 11201 ;; Defined at:
 11202 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
 11205 ;;		 -> NULL(0), 
 11206 ;;  d               2   30[BANK1 ] int 
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;  i               2   39[BANK1 ] int 
 11209 ;;  w               2   36[BANK1 ] int 
 11210 ;;  s               1   38[BANK1 ] unsigned char 
 11211 ;;  p               1   35[BANK1 ] _Bool 
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11221 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11222 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11223 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;Total ram usage:       13 bytes
 11226 ;; Hardware stack levels used: 1
 11227 ;; Hardware stack levels required when called: 10
 11228 ;; This function calls:
 11229 ;;		___awdiv
 11230 ;;		___awmod
 11231 ;;		_abs
 11232 ;;		_pad
 11233 ;; This function is called by:
 11234 ;;		_vfpfcnvrt
 11235 ;; This function uses a non-reentrant model
 11236 ;;
 11237                           
 11238     0710                     _dtoa:	
 11239                           ;psect for function _dtoa
 11240                           
 11241     0710                     l4335:	
 11242                           ;incstack = 0
 11243                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11244                           
 11245                           
 11246                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 11247     0710  3001               	movlw	1
 11248     0711  0021               	movlb	1	; select bank1
 11249     0712  00C3               	movwf	dtoa@p^(0+128)
 11250     0713                     l4337:
 11251                           
 11252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 11253     0713  1BBF               	btfsc	(dtoa@d+1)^(0+128),7
 11254     0714  2F16               	goto	u4451
 11255     0715  2F18               	goto	u4450
 11256     0716                     u4451:
 11257     0716  3001               	movlw	1
 11258     0717  2F19               	goto	u4460
 11259     0718                     u4450:
 11260     0718  3000               	movlw	0
 11261     0719                     u4460:
 11262     0719  00C6               	movwf	dtoa@s^(0+128)
 11263                           
 11264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 11265     071A  0020               	movlb	0	; select bank0
 11266     071B  0856               	movf	_width+1,w
 11267     071C  0021               	movlb	1	; select bank1
 11268     071D  00C5               	movwf	(dtoa@w+1)^(0+128)
 11269     071E  0020               	movlb	0	; select bank0
 11270     071F  0855               	movf	_width,w
 11271     0720  0021               	movlb	1	; select bank1
 11272     0721  00C4               	movwf	dtoa@w^(0+128)
 11273     0722                     l4339:
 11274                           
 11275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
 11276     0722  0846               	movf	dtoa@s^(0+128),w
 11277     0723  1903               	btfsc	3,2
 11278     0724  2F26               	goto	u4471
 11279     0725  2F27               	goto	u4470
 11280     0726                     u4471:
 11281     0726  2F3B               	goto	l1688
 11282     0727                     u4470:
 11283     0727                     l4341:
 11284                           
 11285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
 11286     0727  30FF               	movlw	255
 11287     0728  07C4               	addwf	dtoa@w^(0+128),f
 11288     0729  30FF               	movlw	255
 11289     072A  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 11290     072B                     l4343:
 11291                           
 11292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 11293     072B  0846               	movf	dtoa@s^(0+128),w
 11294     072C  1D03               	btfss	3,2
 11295     072D  2F2F               	goto	u4481
 11296     072E  2F30               	goto	u4480
 11297     072F                     u4481:
 11298     072F  2F35               	goto	l4347
 11299     0730                     u4480:
 11300     0730                     l4345:
 11301     0730  302B               	movlw	43
 11302     0731  00C1               	movwf	_dtoa$2128^(0+128)
 11303     0732  3000               	movlw	0
 11304     0733  00C2               	movwf	(_dtoa$2128^(0+128)+1)
 11305     0734  2F39               	goto	l1692
 11306     0735                     l4347:
 11307     0735  302D               	movlw	45
 11308     0736  00C1               	movwf	_dtoa$2128^(0+128)
 11309     0737  3000               	movlw	0
 11310     0738  00C2               	movwf	(_dtoa$2128^(0+128)+1)
 11311     0739                     l1692:
 11312     0739  0841               	movf	_dtoa$2128^(0+128),w
 11313     073A  00C6               	movwf	dtoa@s^(0+128)
 11314     073B                     l1688:	
 11315                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 543:     }
 11316                           
 11317                           
 11318                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 11319     073B  301F               	movlw	31
 11320     073C  00C7               	movwf	dtoa@i^(0+128)
 11321     073D  3000               	movlw	0
 11322     073E  00C8               	movwf	(dtoa@i^(0+128)+1)
 11323     073F                     l4349:
 11324                           
 11325                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 11326     073F  0023               	movlb	3	; select bank3
 11327     0740  01BF               	clrf	(_dbuf^(0+384)+31)
 11328                           
 11329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11330     0741  2F78               	goto	l4361
 11331     0742                     l4351:
 11332                           
 11333                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
 11334     0742  30FF               	movlw	255
 11335     0743  0021               	movlb	1	; select bank1
 11336     0744  07C7               	addwf	dtoa@i^(0+128),f
 11337     0745  30FF               	movlw	255
 11338     0746  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 11339     0747                     l4353:
 11340                           
 11341                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 11342     0747  0847               	movf	dtoa@i^(0+128),w
 11343     0748  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11344     0749  0086               	movwf	6
 11345     074A  3001               	movlw	1	; select bank3/4
 11346     074B  0087               	movwf	7
 11347     074C  300A               	movlw	10
 11348     074D  00A0               	movwf	___awmod@divisor^(0+128)
 11349     074E  3000               	movlw	0
 11350     074F  00A1               	movwf	(___awmod@divisor^(0+128)+1)
 11351     0750  083F               	movf	(dtoa@d+1)^(0+128),w
 11352     0751  00A3               	movwf	(___awmod@dividend+1)^(0+128)
 11353     0752  083E               	movf	dtoa@d^(0+128),w
 11354     0753  00A2               	movwf	___awmod@dividend^(0+128)
 11355     0754  3190  20D7  3187   	fcall	___awmod
 11356     0757  0021               	movlb	1	; select bank1
 11357     0758  0821               	movf	(?___awmod+1)^(0+128),w
 11358     0759  00A7               	movwf	(abs@a+1)^(0+128)
 11359     075A  0820               	movf	?___awmod^(0+128),w
 11360     075B  00A6               	movwf	abs@a^(0+128)
 11361     075C  319D  2576  3187   	fcall	_abs
 11362     075F  0021               	movlb	1	; select bank1
 11363     0760  0826               	movf	?_abs^(0+128),w
 11364     0761  3E30               	addlw	48
 11365     0762  0081               	movwf	1
 11366     0763                     l4355:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 11369     0763  01C3               	clrf	dtoa@p^(0+128)
 11370     0764                     l4357:
 11371                           
 11372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
 11373     0764  30FF               	movlw	255
 11374     0765  07C4               	addwf	dtoa@w^(0+128),f
 11375     0766  30FF               	movlw	255
 11376     0767  3DC5               	addwfc	(dtoa@w+1)^(0+128),f
 11377     0768                     l4359:
 11378                           
 11379                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 11380     0768  300A               	movlw	10
 11381     0769  00A0               	movwf	___awdiv@divisor^(0+128)
 11382     076A  3000               	movlw	0
 11383     076B  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
 11384     076C  083F               	movf	(dtoa@d+1)^(0+128),w
 11385     076D  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
 11386     076E  083E               	movf	dtoa@d^(0+128),w
 11387     076F  00A2               	movwf	___awdiv@dividend^(0+128)
 11388     0770  3192  2235  3187   	fcall	___awdiv
 11389     0773  0021               	movlb	1	; select bank1
 11390     0774  0821               	movf	(?___awdiv+1)^(0+128),w
 11391     0775  00BF               	movwf	(dtoa@d+1)^(0+128)
 11392     0776  0820               	movf	?___awdiv^(0+128),w
 11393     0777  00BE               	movwf	dtoa@d^(0+128)
 11394     0778                     l4361:
 11395                           
 11396                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11397     0778  0021               	movlb	1	; select bank1
 11398     0779  0848               	movf	(dtoa@i+1)^(0+128),w
 11399     077A  3A80               	xorlw	128
 11400     077B  00C0               	movwf	??_dtoa^(0+128)
 11401     077C  3080               	movlw	128
 11402     077D  0240               	subwf	??_dtoa^(0+128),w
 11403     077E  1D03               	skipz
 11404     077F  2F82               	goto	u4495
 11405     0780  3001               	movlw	1
 11406     0781  0247               	subwf	dtoa@i^(0+128),w
 11407     0782                     u4495:
 11408     0782  1C03               	skipc
 11409     0783  2F85               	goto	u4491
 11410     0784  2F86               	goto	u4490
 11411     0785                     u4491:
 11412     0785  2FA4               	goto	l4371
 11413     0786                     u4490:
 11414     0786                     l4363:
 11415     0786  0021               	movlb	1	; select bank1
 11416     0787  083E               	movf	dtoa@d^(0+128),w
 11417     0788  043F               	iorwf	(dtoa@d+1)^(0+128),w
 11418     0789  1D03               	btfss	3,2
 11419     078A  2F8C               	goto	u4501
 11420     078B  2F8D               	goto	u4500
 11421     078C                     u4501:
 11422     078C  2F42               	goto	l4351
 11423     078D                     u4500:
 11424     078D                     l4365:
 11425     078D  0843               	movf	dtoa@p^(0+128),w
 11426     078E  1D03               	btfss	3,2
 11427     078F  2F91               	goto	u4511
 11428     0790  2F92               	goto	u4510
 11429     0791                     u4511:
 11430     0791  2F42               	goto	l4351
 11431     0792                     u4510:
 11432     0792                     l4367:
 11433     0792  0845               	movf	(dtoa@w+1)^(0+128),w
 11434     0793  3A80               	xorlw	128
 11435     0794  00C0               	movwf	??_dtoa^(0+128)
 11436     0795  3080               	movlw	128
 11437     0796  0240               	subwf	??_dtoa^(0+128),w
 11438     0797  1D03               	skipz
 11439     0798  2F9B               	goto	u4525
 11440     0799  3001               	movlw	1
 11441     079A  0244               	subwf	dtoa@w^(0+128),w
 11442     079B                     u4525:
 11443     079B  1C03               	skipc
 11444     079C  2F9E               	goto	u4521
 11445     079D  2F9F               	goto	u4520
 11446     079E                     u4521:
 11447     079E  2FA4               	goto	l4371
 11448     079F                     u4520:
 11449     079F                     l4369:
 11450     079F  0020               	movlb	0	; select bank0
 11451     07A0  18E3               	btfsc	_flags,1
 11452     07A1  2FA3               	goto	u4531
 11453     07A2  2FA4               	goto	u4530
 11454     07A3                     u4531:
 11455     07A3  2F42               	goto	l4351
 11456     07A4                     u4530:
 11457     07A4                     l4371:
 11458                           
 11459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 11460     07A4  0021               	movlb	1	; select bank1
 11461     07A5  0846               	movf	dtoa@s^(0+128),w
 11462     07A6  1903               	btfsc	3,2
 11463     07A7  2FA9               	goto	u4541
 11464     07A8  2FAA               	goto	u4540
 11465     07A9                     u4541:
 11466     07A9  2FB5               	goto	l4377
 11467     07AA                     u4540:
 11468     07AA                     l4373:
 11469                           
 11470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
 11471     07AA  30FF               	movlw	255
 11472     07AB  07C7               	addwf	dtoa@i^(0+128),f
 11473     07AC  30FF               	movlw	255
 11474     07AD  3DC8               	addwfc	(dtoa@i+1)^(0+128),f
 11475     07AE                     l4375:
 11476                           
 11477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 11478     07AE  0847               	movf	dtoa@i^(0+128),w
 11479     07AF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11480     07B0  0086               	movwf	6
 11481     07B1  3001               	movlw	1	; select bank3/4
 11482     07B2  0087               	movwf	7
 11483     07B3  0846               	movf	dtoa@s^(0+128),w
 11484     07B4  0081               	movwf	1
 11485     07B5                     l4377:
 11486                           
 11487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11488     07B5  083D               	movf	(dtoa@fp+1)^(0+128),w
 11489     07B6  00B5               	movwf	(pad@fp+1)^(0+128)
 11490     07B7  083C               	movf	dtoa@fp^(0+128),w
 11491     07B8  00B4               	movwf	pad@fp^(0+128)
 11492     07B9  0847               	movf	dtoa@i^(0+128),w
 11493     07BA  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11494     07BB  00B6               	movwf	pad@buf^(0+128)
 11495     07BC  0845               	movf	(dtoa@w+1)^(0+128),w
 11496     07BD  00B8               	movwf	(pad@p+1)^(0+128)
 11497     07BE  0844               	movf	dtoa@w^(0+128),w
 11498     07BF  00B7               	movwf	pad@p^(0+128)
 11499     07C0  3190  203D  3187   	fcall	_pad
 11500     07C3                     l1701:
 11501     07C3  0008               	return
 11502     07C4                     __end_of_dtoa:
 11503                           
 11504                           	psect	text21
 11505     103D                     __ptext21:	
 11506 ;; *************** function _pad *****************
 11507 ;; Defined at:
 11508 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;  fp              2   20[BANK1 ] PTR struct _IO_FILE
 11511 ;;		 -> NULL(0), 
 11512 ;;  buf             1   22[BANK1 ] PTR unsigned char 
 11513 ;;		 -> dbuf(32), 
 11514 ;;  p               2   23[BANK1 ] int 
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;  i               2   26[BANK1 ] int 
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      void 
 11519 ;; Registers used:
 11520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11526 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11527 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11528 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;Total ram usage:        8 bytes
 11531 ;; Hardware stack levels used: 1
 11532 ;; Hardware stack levels required when called: 9
 11533 ;; This function calls:
 11534 ;;		_fputc
 11535 ;;		_fputs
 11536 ;; This function is called by:
 11537 ;;		_dtoa
 11538 ;;		_utoa
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542     103D                     _pad:	
 11543                           ;psect for function _pad
 11544                           
 11545     103D                     l4297:	
 11546                           ;incstack = 0
 11547                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11548                           
 11549                           
 11550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 11551     103D  0020               	movlb	0	; select bank0
 11552     103E  1C63               	btfss	_flags,0
 11553     103F  2841               	goto	u4371
 11554     1040  2842               	goto	u4370
 11555     1041                     u4371:
 11556     1041  284C               	goto	l4301
 11557     1042                     u4370:
 11558     1042                     l4299:
 11559                           
 11560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 11561     1042  0021               	movlb	1	; select bank1
 11562     1043  0836               	movf	pad@buf^(0+128),w
 11563     1044  00AC               	movwf	fputs@s^(0+128)
 11564     1045  0835               	movf	(pad@fp+1)^(0+128),w
 11565     1046  00AE               	movwf	(fputs@fp+1)^(0+128)
 11566     1047  0834               	movf	pad@fp^(0+128),w
 11567     1048  00AD               	movwf	fputs@fp^(0+128)
 11568     1049  319F  2710  3190   	fcall	_fputs
 11569     104C                     l4301:
 11570                           
 11571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 11572     104C  0021               	movlb	1	; select bank1
 11573     104D  1FB8               	btfss	(pad@p+1)^(0+128),7
 11574     104E  2850               	goto	u4381
 11575     104F  2851               	goto	u4380
 11576     1050                     u4381:
 11577     1050  2853               	goto	l1680
 11578     1051                     u4380:
 11579     1051                     l4303:
 11580                           
 11581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11582     1051  01B7               	clrf	pad@p^(0+128)
 11583     1052  01B8               	clrf	(pad@p+1)^(0+128)
 11584     1053                     l1680:	
 11585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
 11586                           
 11587                           
 11588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11589     1053  01BA               	clrf	pad@i^(0+128)
 11590     1054  01BB               	clrf	(pad@i+1)^(0+128)
 11591                           
 11592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11593     1055  2867               	goto	l4309
 11594     1056                     l4305:
 11595                           
 11596                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11597     1056  3020               	movlw	32
 11598     1057  0021               	movlb	1	; select bank1
 11599     1058  00A3               	movwf	fputc@c^(0+128)
 11600     1059  3000               	movlw	0
 11601     105A  00A4               	movwf	(fputc@c^(0+128)+1)
 11602     105B  0835               	movf	(pad@fp+1)^(0+128),w
 11603     105C  00A6               	movwf	(fputc@fp+1)^(0+128)
 11604     105D  0834               	movf	pad@fp^(0+128),w
 11605     105E  00A5               	movwf	fputc@fp^(0+128)
 11606     105F  3192  22ED  3190   	fcall	_fputc
 11607     1062                     l4307:
 11608                           
 11609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11610     1062  3001               	movlw	1
 11611     1063  0021               	movlb	1	; select bank1
 11612     1064  07BA               	addwf	pad@i^(0+128),f
 11613     1065  3000               	movlw	0
 11614     1066  3DBB               	addwfc	(pad@i+1)^(0+128),f
 11615     1067                     l4309:
 11616                           
 11617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11618     1067  083B               	movf	(pad@i+1)^(0+128),w
 11619     1068  3A80               	xorlw	128
 11620     1069  00B9               	movwf	??_pad^(0+128)
 11621     106A  0838               	movf	(pad@p+1)^(0+128),w
 11622     106B  3A80               	xorlw	128
 11623     106C  0239               	subwf	??_pad^(0+128),w
 11624     106D  1D03               	skipz
 11625     106E  2871               	goto	u4395
 11626     106F  0837               	movf	pad@p^(0+128),w
 11627     1070  023A               	subwf	pad@i^(0+128),w
 11628     1071                     u4395:
 11629     1071  1C03               	skipc
 11630     1072  2874               	goto	u4391
 11631     1073  2875               	goto	u4390
 11632     1074                     u4391:
 11633     1074  2856               	goto	l4305
 11634     1075                     u4390:
 11635     1075                     l1683:
 11636                           
 11637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 11638     1075  0020               	movlb	0	; select bank0
 11639     1076  1863               	btfsc	_flags,0
 11640     1077  2879               	goto	u4401
 11641     1078  287A               	goto	u4400
 11642     1079                     u4401:
 11643     1079  2884               	goto	l1685
 11644     107A                     u4400:
 11645     107A                     l4311:
 11646                           
 11647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11648     107A  0021               	movlb	1	; select bank1
 11649     107B  0836               	movf	pad@buf^(0+128),w
 11650     107C  00AC               	movwf	fputs@s^(0+128)
 11651     107D  0835               	movf	(pad@fp+1)^(0+128),w
 11652     107E  00AE               	movwf	(fputs@fp+1)^(0+128)
 11653     107F  0834               	movf	pad@fp^(0+128),w
 11654     1080  00AD               	movwf	fputs@fp^(0+128)
 11655     1081  319F  2710  3190   	fcall	_fputs
 11656     1084                     l1685:
 11657     1084  0008               	return
 11658     1085                     __end_of_pad:
 11659                           
 11660                           	psect	text22
 11661     1F10                     __ptext22:	
 11662 ;; *************** function _fputs *****************
 11663 ;; Defined at:
 11664 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  s               1   12[BANK1 ] PTR const unsigned char 
 11667 ;;		 -> dbuf(32), 
 11668 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 11669 ;;		 -> NULL(0), 
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;  i               2   18[BANK1 ] int 
 11672 ;;  c               1   17[BANK1 ] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  2   12[BANK1 ] int 
 11675 ;; Registers used:
 11676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11682 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;Total ram usage:        8 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 8
 11689 ;; This function calls:
 11690 ;;		_fputc
 11691 ;; This function is called by:
 11692 ;;		_pad
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696     1F10                     _fputs:	
 11697                           ;psect for function _fputs
 11698                           
 11699     1F10                     l4145:	
 11700                           ;incstack = 0
 11701                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11702                           
 11703     1F10  0021               	movlb	1	; select bank1
 11704     1F11  01B2               	clrf	fputs@i^(0+128)
 11705     1F12  01B3               	clrf	(fputs@i+1)^(0+128)
 11706     1F13  2F27               	goto	l4151
 11707     1F14                     l4147:
 11708     1F14  0831               	movf	fputs@c^(0+128),w
 11709     1F15  00AF               	movwf	??_fputs^(0+128)
 11710     1F16  01B0               	clrf	(??_fputs^(0+128)+1)
 11711     1F17  082F               	movf	??_fputs^(0+128),w
 11712     1F18  00A3               	movwf	fputc@c^(0+128)
 11713     1F19  0830               	movf	(??_fputs+1)^(0+128),w
 11714     1F1A  00A4               	movwf	(fputc@c+1)^(0+128)
 11715     1F1B  082E               	movf	(fputs@fp+1)^(0+128),w
 11716     1F1C  00A6               	movwf	(fputc@fp+1)^(0+128)
 11717     1F1D  082D               	movf	fputs@fp^(0+128),w
 11718     1F1E  00A5               	movwf	fputc@fp^(0+128)
 11719     1F1F  3192  22ED  319F   	fcall	_fputc
 11720     1F22                     l4149:
 11721     1F22  3001               	movlw	1
 11722     1F23  0021               	movlb	1	; select bank1
 11723     1F24  07B2               	addwf	fputs@i^(0+128),f
 11724     1F25  3000               	movlw	0
 11725     1F26  3DB3               	addwfc	(fputs@i+1)^(0+128),f
 11726     1F27                     l4151:
 11727     1F27  082C               	movf	fputs@s^(0+128),w
 11728     1F28  0732               	addwf	fputs@i^(0+128),w
 11729     1F29  0086               	movwf	6
 11730     1F2A  3001               	movlw	1	; select bank2/3
 11731     1F2B  0087               	movwf	7
 11732     1F2C  0801               	movf	1,w
 11733     1F2D  00B1               	movwf	fputs@c^(0+128)
 11734     1F2E  0831               	movf	fputs@c^(0+128),w
 11735     1F2F  1D03               	btfss	3,2
 11736     1F30  2F32               	goto	u4001
 11737     1F31  2F33               	goto	u4000
 11738     1F32                     u4001:
 11739     1F32  2F14               	goto	l4147
 11740     1F33                     u4000:
 11741     1F33                     l1773:
 11742     1F33  0008               	return
 11743     1F34                     __end_of_fputs:
 11744                           
 11745                           	psect	text23
 11746     12ED                     __ptext23:	
 11747 ;; *************** function _fputc *****************
 11748 ;; Defined at:
 11749 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;  c               2    3[BANK1 ] int 
 11752 ;;  fp              2    5[BANK1 ] PTR struct _IO_FILE
 11753 ;;		 -> NULL(0), 
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;		None
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  2    3[BANK1 ] int 
 11758 ;; Registers used:
 11759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11765 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;Total ram usage:        9 bytes
 11770 ;; Hardware stack levels used: 1
 11771 ;; Hardware stack levels required when called: 7
 11772 ;; This function calls:
 11773 ;;		_putch
 11774 ;; This function is called by:
 11775 ;;		_pad
 11776 ;;		_vfpfcnvrt
 11777 ;;		_fputs
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781     12ED                     _fputc:	
 11782                           ;psect for function _fputc
 11783                           
 11784     12ED                     l4129:	
 11785                           ;incstack = 0
 11786                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11787                           
 11788     12ED  0021               	movlb	1	; select bank1
 11789     12EE  0825               	movf	fputc@fp^(0+128),w
 11790     12EF  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11791     12F0  1903               	btfsc	3,2
 11792     12F1  2AF3               	goto	u3961
 11793     12F2  2AF4               	goto	u3960
 11794     12F3                     u3961:
 11795     12F3  2AFA               	goto	l4133
 11796     12F4                     u3960:
 11797     12F4                     l4131:
 11798     12F4  0825               	movf	fputc@fp^(0+128),w
 11799     12F5  0426               	iorwf	(fputc@fp+1)^(0+128),w
 11800     12F6  1D03               	btfss	3,2
 11801     12F7  2AF9               	goto	u3971
 11802     12F8  2AFA               	goto	u3970
 11803     12F9                     u3971:
 11804     12F9  2AFF               	goto	l4135
 11805     12FA                     u3970:
 11806     12FA                     l4133:
 11807     12FA  0823               	movf	fputc@c^(0+128),w
 11808     12FB  319D  2565  3192   	fcall	_putch
 11809     12FE  2B4A               	goto	l1765
 11810     12FF                     l4135:
 11811     12FF  0825               	movf	fputc@fp^(0+128),w
 11812     1300  0086               	movwf	6
 11813     1301  0826               	movf	(fputc@fp+1)^(0+128),w
 11814     1302  0087               	movwf	7
 11815     1303  3149               	addfsr 1,9
 11816     1304  0016               	moviw fsr1++
 11817     1305  0401               	iorwf	1,w
 11818     1306  1903               	btfsc	3,2
 11819     1307  2B09               	goto	u3981
 11820     1308  2B0A               	goto	u3980
 11821     1309                     u3981:
 11822     1309  2B2A               	goto	l4139
 11823     130A                     u3980:
 11824     130A                     l4137:
 11825     130A  0825               	movf	fputc@fp^(0+128),w
 11826     130B  0086               	movwf	6
 11827     130C  0826               	movf	(fputc@fp+1)^(0+128),w
 11828     130D  0087               	movwf	7
 11829     130E  3149               	addfsr 1,9
 11830     130F  3F40               	moviw [0]fsr1
 11831     1310  00A7               	movwf	??_fputc^(0+128)
 11832     1311  3F41               	moviw [1]fsr1
 11833     1312  00A8               	movwf	(??_fputc^(0+128)+1)
 11834     1313  0825               	movf	fputc@fp^(0+128),w
 11835     1314  0086               	movwf	6
 11836     1315  0826               	movf	(fputc@fp+1)^(0+128),w
 11837     1316  0087               	movwf	7
 11838     1317  3142               	addfsr 1,2
 11839     1318  3F40               	moviw [0]fsr1
 11840     1319  00A9               	movwf	(??_fputc+2)^(0+128)
 11841     131A  3F41               	moviw [1]fsr1
 11842     131B  00AA               	movwf	((??_fputc+2)^(0+128)+1)
 11843     131C  082A               	movf	(??_fputc+3)^(0+128),w
 11844     131D  3A80               	xorlw	128
 11845     131E  00AB               	movwf	(??_fputc+4)^(0+128)
 11846     131F  0828               	movf	(??_fputc+1)^(0+128),w
 11847     1320  3A80               	xorlw	128
 11848     1321  022B               	subwf	(??_fputc+4)^(0+128),w
 11849     1322  1D03               	skipz
 11850     1323  2B26               	goto	u3995
 11851     1324  0827               	movf	??_fputc^(0+128),w
 11852     1325  0229               	subwf	(??_fputc+2)^(0+128),w
 11853     1326                     u3995:
 11854     1326  1803               	skipnc
 11855     1327  2B29               	goto	u3991
 11856     1328  2B2A               	goto	u3990
 11857     1329                     u3991:
 11858     1329  2B4A               	goto	l1765
 11859     132A                     u3990:
 11860     132A                     l4139:
 11861     132A  0021               	movlb	1	; select bank1
 11862     132B  0825               	movf	fputc@fp^(0+128),w
 11863     132C  0086               	movwf	6
 11864     132D  0826               	movf	(fputc@fp+1)^(0+128),w
 11865     132E  0087               	movwf	7
 11866     132F  3142               	addfsr 1,2
 11867     1330  0825               	movf	fputc@fp^(0+128),w
 11868     1331  0084               	movwf	4
 11869     1332  0826               	movf	(fputc@fp+1)^(0+128),w
 11870     1333  0085               	movwf	5
 11871     1334  3F00               	moviw [0]fsr0
 11872     1335  00A7               	movwf	??_fputc^(0+128)
 11873     1336  3F01               	moviw [1]fsr0
 11874     1337  00A8               	movwf	(??_fputc^(0+128)+1)
 11875     1338  3F40               	moviw [0]fsr1
 11876     1339  0727               	addwf	??_fputc^(0+128),w
 11877     133A  0084               	movwf	4
 11878     133B  3F41               	moviw [1]fsr1
 11879     133C  3D28               	addwfc	(??_fputc+1)^(0+128),w
 11880     133D  0085               	movwf	5
 11881     133E  0823               	movf	fputc@c^(0+128),w
 11882     133F  0080               	movwf	0
 11883     1340                     l4141:
 11884     1340  0825               	movf	fputc@fp^(0+128),w
 11885     1341  0086               	movwf	6
 11886     1342  0826               	movf	(fputc@fp+1)^(0+128),w
 11887     1343  0087               	movwf	7
 11888     1344  3142               	addfsr 1,2
 11889     1345  3001               	movlw	1
 11890     1346  0781               	addwf	1,f
 11891     1347  3141               	addfsr 1,1
 11892     1348  1803               	skipnc
 11893     1349  0A81               	incf	1,f
 11894     134A                     l1765:
 11895     134A  0008               	return
 11896     134B                     __end_of_fputc:
 11897                           
 11898                           	psect	text24
 11899     1D65                     __ptext24:	
 11900 ;; *************** function _putch *****************
 11901 ;; Defined at:
 11902 ;;		line 409 in file "mcc_generated_files/uart/src/eusart.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;  txData          1    wreg     unsigned char 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;  txData          1    2[BANK1 ] unsigned char 
 11907 ;; Return value:  Size  Location     Type
 11908 ;;                  1    wreg      void 
 11909 ;; Registers used:
 11910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;Total ram usage:        1 bytes
 11921 ;; Hardware stack levels used: 1
 11922 ;; Hardware stack levels required when called: 6
 11923 ;; This function calls:
 11924 ;;		_EUSART_IsTxReady
 11925 ;;		_EUSART_Write
 11926 ;; This function is called by:
 11927 ;;		_fputc
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931     1D65                     _putch:	
 11932                           ;psect for function _putch
 11933                           
 11934                           
 11935                           ;incstack = 0
 11936                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11937                           ;putch@txData stored from wreg
 11938     1D65  0021               	movlb	1	; select bank1
 11939     1D66  00A2               	movwf	putch@txData^(0+128)
 11940     1D67                     l4121:
 11941     1D67                     l4123:	
 11942                           ;mcc_generated_files/uart/src/eusart.c: 409: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 410: {;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSAR
      +                          T_IsTxReady()))
 11943                           
 11944                           
 11945                           ;mcc_generated_files/uart/src/eusart.c: 411:     while(!(EUSART_IsTxReady()))
 11946     1D67  319C  2426  319D   	fcall	_EUSART_IsTxReady
 11947     1D6A  3A00               	xorlw	0
 11948     1D6B  1903               	skipnz
 11949     1D6C  2D6E               	goto	u3951
 11950     1D6D  2D6F               	goto	u3950
 11951     1D6E                     u3951:
 11952     1D6E  2D67               	goto	l4123
 11953     1D6F                     u3950:
 11954     1D6F                     l4125:
 11955                           
 11956                           ;mcc_generated_files/uart/src/eusart.c: 415:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
 11957     1D6F  0021               	movlb	1	; select bank1
 11958     1D70  0822               	movf	putch@txData^(0+128),w
 11959     1D71  00A0               	movwf	EUSART_Write@txData^(0+128)
 11960     1D72  319F  2734  319D   	fcall	_EUSART_Write
 11961     1D75                     l742:
 11962     1D75  0008               	return
 11963     1D76                     __end_of_putch:
 11964                           
 11965                           	psect	text25
 11966     1F34                     __ptext25:	
 11967 ;; *************** function _EUSART_Write *****************
 11968 ;; Defined at:
 11969 ;;		line 353 in file "mcc_generated_files/uart/src/eusart.c"
 11970 ;; Parameters:    Size  Location     Type
 11971 ;;  txData          1    0[BANK1 ] unsigned char 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;  tempTxHead      1    1[BANK1 ] unsigned char 
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      void 
 11976 ;; Registers used:
 11977 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11983 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;Total ram usage:        2 bytes
 11988 ;; Hardware stack levels used: 1
 11989 ;; Hardware stack levels required when called: 5
 11990 ;; This function calls:
 11991 ;;		Nothing
 11992 ;; This function is called by:
 11993 ;;		_putch
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997     1F34                     _EUSART_Write:	
 11998                           ;psect for function _EUSART_Write
 11999                           
 12000     1F34                     l4105:	
 12001                           ;incstack = 0
 12002                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12003                           
 12004                           
 12005                           ;mcc_generated_files/uart/src/eusart.c: 353: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 354: {;mcc_generated_files/uart/src/eusart.c: 355:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 357:     if(0 == PIE1bits.TXIE)
 12006     1F34  0021               	movlb	1	; select bank1
 12007     1F35  1A11               	btfsc	17,4	;volatile
 12008     1F36  2F38               	goto	u3931
 12009     1F37  2F39               	goto	u3930
 12010     1F38                     u3931:
 12011     1F38  2F3D               	goto	l4109
 12012     1F39                     u3930:
 12013     1F39                     l4107:
 12014                           
 12015                           ;mcc_generated_files/uart/src/eusart.c: 358:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 359:         TX1REG = txData;
 12016     1F39  0820               	movf	EUSART_Write@txData^(0+128),w
 12017     1F3A  0023               	movlb	3	; select bank3
 12018     1F3B  009A               	movwf	26	;volatile
 12019                           
 12020                           ;mcc_generated_files/uart/src/eusart.c: 360:     }
 12021     1F3C  2F59               	goto	l721
 12022     1F3D                     l4109:
 12023     1F3D  0020               	movlb	0	; select bank0
 12024     1F3E  0869               	movf	_eusartTxBufferRemaining,w	;volatile
 12025     1F3F  1903               	btfsc	3,2
 12026     1F40  2F42               	goto	u3941
 12027     1F41  2F43               	goto	u3940
 12028     1F42                     u3941:
 12029     1F42  2F59               	goto	l721
 12030     1F43                     u3940:
 12031     1F43                     l4111:
 12032                           
 12033                           ;mcc_generated_files/uart/src/eusart.c: 362:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 363:        eusartTxBuffer[eusartTxHead] = txData;
 12034     1F43  086B               	movf	_eusartTxHead,w
 12035     1F44  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12036     1F45  0086               	movwf	6
 12037     1F46  3001               	movlw	1	; select bank2/3
 12038     1F47  0087               	movwf	7
 12039     1F48  0021               	movlb	1	; select bank1
 12040     1F49  0820               	movf	EUSART_Write@txData^(0+128),w
 12041     1F4A  0081               	movwf	1
 12042     1F4B                     l4113:
 12043                           
 12044                           ;mcc_generated_files/uart/src/eusart.c: 364:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 12045     1F4B  0020               	movlb	0	; select bank0
 12046     1F4C  086B               	movf	_eusartTxHead,w	;volatile
 12047     1F4D  3E01               	addlw	1
 12048     1F4E  3907               	andlw	7
 12049     1F4F  0021               	movlb	1	; select bank1
 12050     1F50  00A1               	movwf	EUSART_Write@tempTxHead^(0+128)
 12051     1F51                     l4115:
 12052                           
 12053                           ;mcc_generated_files/uart/src/eusart.c: 366:        eusartTxHead = tempTxHead;
 12054     1F51  0821               	movf	EUSART_Write@tempTxHead^(0+128),w
 12055     1F52  0020               	movlb	0	; select bank0
 12056     1F53  00EB               	movwf	_eusartTxHead	;volatile
 12057     1F54                     l4117:
 12058                           
 12059                           ;mcc_generated_files/uart/src/eusart.c: 367:        PIE1bits.TXIE = 0;
 12060     1F54  0021               	movlb	1	; select bank1
 12061     1F55  1211               	bcf	17,4	;volatile
 12062     1F56                     l4119:
 12063                           
 12064                           ;mcc_generated_files/uart/src/eusart.c: 368:        eusartTxBufferRemaining--;
 12065     1F56  3001               	movlw	1
 12066     1F57  0020               	movlb	0	; select bank0
 12067     1F58  02E9               	subwf	_eusartTxBufferRemaining,f	;volatile
 12068     1F59                     l721:	
 12069                           ;mcc_generated_files/uart/src/eusart.c: 369:     }
 12070                           
 12071                           
 12072                           ;mcc_generated_files/uart/src/eusart.c: 374:     PIE1bits.TXIE = 1;
 12073     1F59  0021               	movlb	1	; select bank1
 12074     1F5A  1611               	bsf	17,4	;volatile
 12075     1F5B                     l724:
 12076     1F5B  0008               	return
 12077     1F5C                     __end_of_EUSART_Write:
 12078                           
 12079                           	psect	text26
 12080     1C26                     __ptext26:	
 12081 ;; *************** function _EUSART_IsTxReady *****************
 12082 ;; Defined at:
 12083 ;;		line 272 in file "mcc_generated_files/uart/src/eusart.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;		None
 12086 ;; Auto vars:     Size  Location     Type
 12087 ;;		None
 12088 ;; Return value:  Size  Location     Type
 12089 ;;                  1    wreg      _Bool 
 12090 ;; Registers used:
 12091 ;;		wreg, status,2, status,0
 12092 ;; Tracked objects:
 12093 ;;		On entry : 0/0
 12094 ;;		On exit  : 0/0
 12095 ;;		Unchanged: 0/0
 12096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;Total ram usage:        0 bytes
 12102 ;; Hardware stack levels used: 1
 12103 ;; Hardware stack levels required when called: 5
 12104 ;; This function calls:
 12105 ;;		Nothing
 12106 ;; This function is called by:
 12107 ;;		_putch
 12108 ;; This function uses a non-reentrant model
 12109 ;;
 12110                           
 12111     1C26                     _EUSART_IsTxReady:	
 12112                           ;psect for function _EUSART_IsTxReady
 12113                           
 12114     1C26                     l4101:	
 12115                           ;incstack = 0
 12116                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
 12117                           
 12118                           
 12119                           ;mcc_generated_files/uart/src/eusart.c: 274:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
 12120     1C26  0020               	movlb	0	; select bank0
 12121     1C27  0869               	movf	_eusartTxBufferRemaining,w	;volatile
 12122     1C28  1D03               	btfss	3,2
 12123     1C29  2C2B               	goto	u3911
 12124     1C2A  2C2D               	goto	u3910
 12125     1C2B                     u3911:
 12126     1C2B  3001               	movlw	1
 12127     1C2C  2C2E               	goto	u3920
 12128     1C2D                     u3910:
 12129     1C2D  3000               	movlw	0
 12130     1C2E                     u3920:
 12131     1C2E                     l697:
 12132     1C2E  0008               	return
 12133     1C2F                     __end_of_EUSART_IsTxReady:
 12134                           
 12135                           	psect	text27
 12136     1D76                     __ptext27:	
 12137 ;; *************** function _abs *****************
 12138 ;; Defined at:
 12139 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  a               2    6[BANK1 ] int 
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;		None
 12144 ;; Return value:  Size  Location     Type
 12145 ;;                  2    6[BANK1 ] int 
 12146 ;; Registers used:
 12147 ;;		wreg, status,2, status,0
 12148 ;; Tracked objects:
 12149 ;;		On entry : 0/0
 12150 ;;		On exit  : 0/0
 12151 ;;		Unchanged: 0/0
 12152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12153 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;Total ram usage:        4 bytes
 12158 ;; Hardware stack levels used: 1
 12159 ;; Hardware stack levels required when called: 5
 12160 ;; This function calls:
 12161 ;;		Nothing
 12162 ;; This function is called by:
 12163 ;;		_dtoa
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           
 12167     1D76                     _abs:	
 12168                           ;psect for function _abs
 12169                           
 12170     1D76                     l4313:	
 12171                           ;incstack = 0
 12172                           ; Regs used in _abs: [wreg+status,2+status,0]
 12173                           
 12174     1D76  0021               	movlb	1	; select bank1
 12175     1D77  1BA7               	btfsc	(abs@a+1)^(0+128),7
 12176     1D78  2D7A               	goto	u4411
 12177     1D79  2D7B               	goto	u4410
 12178     1D7A                     u4411:
 12179     1D7A  2D7C               	goto	l4317
 12180     1D7B                     u4410:
 12181     1D7B                     l4315:
 12182     1D7B  2D87               	goto	l1753
 12183     1D7C                     l4317:
 12184     1D7C  0926               	comf	abs@a^(0+128),w
 12185     1D7D  00A8               	movwf	??_abs^(0+128)
 12186     1D7E  0927               	comf	(abs@a+1)^(0+128),w
 12187     1D7F  00A9               	movwf	(??_abs^(0+128)+1)
 12188     1D80  0AA8               	incf	??_abs^(0+128),f
 12189     1D81  1903               	skipnz
 12190     1D82  0AA9               	incf	(??_abs^(0+128)+1),f
 12191     1D83  0828               	movf	??_abs^(0+128),w
 12192     1D84  00A6               	movwf	?_abs^(0+128)
 12193     1D85  0829               	movf	(??_abs+1)^(0+128),w
 12194     1D86  00A7               	movwf	(?_abs+1)^(0+128)
 12195     1D87                     l1753:
 12196     1D87  0008               	return
 12197     1D88                     __end_of_abs:
 12198                           
 12199                           	psect	text28
 12200     10D7                     __ptext28:	
 12201 ;; *************** function ___awmod *****************
 12202 ;; Defined at:
 12203 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  divisor         2    0[BANK1 ] int 
 12206 ;;  dividend        2    2[BANK1 ] int 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  sign            1    5[BANK1 ] unsigned char 
 12209 ;;  counter         1    4[BANK1 ] unsigned char 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  2    0[BANK1 ] int 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12219 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;Total ram usage:        6 bytes
 12224 ;; Hardware stack levels used: 1
 12225 ;; Hardware stack levels required when called: 5
 12226 ;; This function calls:
 12227 ;;		Nothing
 12228 ;; This function is called by:
 12229 ;;		_dtoa
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233     10D7                     ___awmod:	
 12234                           ;psect for function ___awmod
 12235                           
 12236     10D7                     l4211:	
 12237                           ;incstack = 0
 12238                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12239                           
 12240     10D7  0021               	movlb	1	; select bank1
 12241     10D8  01A5               	clrf	___awmod@sign^(0+128)
 12242     10D9                     l4213:
 12243     10D9  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
 12244     10DA  28DC               	goto	u4151
 12245     10DB  28DD               	goto	u4150
 12246     10DC                     u4151:
 12247     10DC  28E4               	goto	l4219
 12248     10DD                     u4150:
 12249     10DD                     l4215:
 12250     10DD  09A2               	comf	___awmod@dividend^(0+128),f
 12251     10DE  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 12252     10DF  0AA2               	incf	___awmod@dividend^(0+128),f
 12253     10E0  1903               	skipnz
 12254     10E1  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 12255     10E2                     l4217:
 12256     10E2  3001               	movlw	1
 12257     10E3  00A5               	movwf	___awmod@sign^(0+128)
 12258     10E4                     l4219:
 12259     10E4  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 12260     10E5  28E7               	goto	u4161
 12261     10E6  28E8               	goto	u4160
 12262     10E7                     u4161:
 12263     10E7  28ED               	goto	l4223
 12264     10E8                     u4160:
 12265     10E8                     l4221:
 12266     10E8  09A0               	comf	___awmod@divisor^(0+128),f
 12267     10E9  09A1               	comf	(___awmod@divisor+1)^(0+128),f
 12268     10EA  0AA0               	incf	___awmod@divisor^(0+128),f
 12269     10EB  1903               	skipnz
 12270     10EC  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
 12271     10ED                     l4223:
 12272     10ED  0820               	movf	___awmod@divisor^(0+128),w
 12273     10EE  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
 12274     10EF  1903               	btfsc	3,2
 12275     10F0  28F2               	goto	u4171
 12276     10F1  28F3               	goto	u4170
 12277     10F2                     u4171:
 12278     10F2  291A               	goto	l4241
 12279     10F3                     u4170:
 12280     10F3                     l4225:
 12281     10F3  3001               	movlw	1
 12282     10F4  00A4               	movwf	___awmod@counter^(0+128)
 12283     10F5  28FD               	goto	l4231
 12284     10F6                     l4227:
 12285     10F6  3001               	movlw	1
 12286     10F7                     u4185:
 12287     10F7  35A0               	lslf	___awmod@divisor^(0+128),f
 12288     10F8  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
 12289     10F9  0B89               	decfsz	9,f
 12290     10FA  28F7               	goto	u4185
 12291     10FB                     l4229:
 12292     10FB  3001               	movlw	1
 12293     10FC  07A4               	addwf	___awmod@counter^(0+128),f
 12294     10FD                     l4231:
 12295     10FD  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
 12296     10FE  2900               	goto	u4191
 12297     10FF  2901               	goto	u4190
 12298     1100                     u4191:
 12299     1100  28F6               	goto	l4227
 12300     1101                     u4190:
 12301     1101                     l4233:
 12302     1101  0821               	movf	(___awmod@divisor+1)^(0+128),w
 12303     1102  0223               	subwf	(___awmod@dividend+1)^(0+128),w
 12304     1103  1D03               	skipz
 12305     1104  2907               	goto	u4205
 12306     1105  0820               	movf	___awmod@divisor^(0+128),w
 12307     1106  0222               	subwf	___awmod@dividend^(0+128),w
 12308     1107                     u4205:
 12309     1107  1C03               	skipc
 12310     1108  290A               	goto	u4201
 12311     1109  290B               	goto	u4200
 12312     110A                     u4201:
 12313     110A  290F               	goto	l4237
 12314     110B                     u4200:
 12315     110B                     l4235:
 12316     110B  0820               	movf	___awmod@divisor^(0+128),w
 12317     110C  02A2               	subwf	___awmod@dividend^(0+128),f
 12318     110D  0821               	movf	(___awmod@divisor+1)^(0+128),w
 12319     110E  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
 12320     110F                     l4237:
 12321     110F  3001               	movlw	1
 12322     1110                     u4215:
 12323     1110  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
 12324     1111  0CA0               	rrf	___awmod@divisor^(0+128),f
 12325     1112  0B89               	decfsz	9,f
 12326     1113  2910               	goto	u4215
 12327     1114                     l4239:
 12328     1114  3001               	movlw	1
 12329     1115  02A4               	subwf	___awmod@counter^(0+128),f
 12330     1116  1D03               	btfss	3,2
 12331     1117  2919               	goto	u4221
 12332     1118  291A               	goto	u4220
 12333     1119                     u4221:
 12334     1119  2901               	goto	l4233
 12335     111A                     u4220:
 12336     111A                     l4241:
 12337     111A  0825               	movf	___awmod@sign^(0+128),w
 12338     111B  1903               	btfsc	3,2
 12339     111C  291E               	goto	u4231
 12340     111D  291F               	goto	u4230
 12341     111E                     u4231:
 12342     111E  2924               	goto	l4245
 12343     111F                     u4230:
 12344     111F                     l4243:
 12345     111F  09A2               	comf	___awmod@dividend^(0+128),f
 12346     1120  09A3               	comf	(___awmod@dividend+1)^(0+128),f
 12347     1121  0AA2               	incf	___awmod@dividend^(0+128),f
 12348     1122  1903               	skipnz
 12349     1123  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
 12350     1124                     l4245:
 12351     1124  0823               	movf	(___awmod@dividend+1)^(0+128),w
 12352     1125  00A1               	movwf	(?___awmod+1)^(0+128)
 12353     1126  0822               	movf	___awmod@dividend^(0+128),w
 12354     1127  00A0               	movwf	?___awmod^(0+128)
 12355     1128                     l1347:
 12356     1128  0008               	return
 12357     1129                     __end_of___awmod:
 12358                           
 12359                           	psect	text29
 12360     1235                     __ptext29:	
 12361 ;; *************** function ___awdiv *****************
 12362 ;; Defined at:
 12363 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  divisor         2    0[BANK1 ] int 
 12366 ;;  dividend        2    2[BANK1 ] int 
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;  quotient        2    6[BANK1 ] int 
 12369 ;;  sign            1    5[BANK1 ] unsigned char 
 12370 ;;  counter         1    4[BANK1 ] unsigned char 
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  2    0[BANK1 ] int 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12380 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;Total ram usage:        8 bytes
 12385 ;; Hardware stack levels used: 1
 12386 ;; Hardware stack levels required when called: 5
 12387 ;; This function calls:
 12388 ;;		Nothing
 12389 ;; This function is called by:
 12390 ;;		_dtoa
 12391 ;; This function uses a non-reentrant model
 12392 ;;
 12393                           
 12394     1235                     ___awdiv:	
 12395                           ;psect for function ___awdiv
 12396                           
 12397     1235                     l4167:	
 12398                           ;incstack = 0
 12399                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12400                           
 12401     1235  0021               	movlb	1	; select bank1
 12402     1236  01A5               	clrf	___awdiv@sign^(0+128)
 12403     1237                     l4169:
 12404     1237  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 12405     1238  2A3A               	goto	u4051
 12406     1239  2A3B               	goto	u4050
 12407     123A                     u4051:
 12408     123A  2A42               	goto	l4175
 12409     123B                     u4050:
 12410     123B                     l4171:
 12411     123B  09A0               	comf	___awdiv@divisor^(0+128),f
 12412     123C  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
 12413     123D  0AA0               	incf	___awdiv@divisor^(0+128),f
 12414     123E  1903               	skipnz
 12415     123F  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
 12416     1240                     l4173:
 12417     1240  3001               	movlw	1
 12418     1241  00A5               	movwf	___awdiv@sign^(0+128)
 12419     1242                     l4175:
 12420     1242  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
 12421     1243  2A45               	goto	u4061
 12422     1244  2A46               	goto	u4060
 12423     1245                     u4061:
 12424     1245  2A4D               	goto	l4181
 12425     1246                     u4060:
 12426     1246                     l4177:
 12427     1246  09A2               	comf	___awdiv@dividend^(0+128),f
 12428     1247  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
 12429     1248  0AA2               	incf	___awdiv@dividend^(0+128),f
 12430     1249  1903               	skipnz
 12431     124A  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
 12432     124B                     l4179:
 12433     124B  3001               	movlw	1
 12434     124C  06A5               	xorwf	___awdiv@sign^(0+128),f
 12435     124D                     l4181:
 12436     124D  01A6               	clrf	___awdiv@quotient^(0+128)
 12437     124E  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
 12438     124F                     l4183:
 12439     124F  0820               	movf	___awdiv@divisor^(0+128),w
 12440     1250  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
 12441     1251  1903               	btfsc	3,2
 12442     1252  2A54               	goto	u4071
 12443     1253  2A55               	goto	u4070
 12444     1254                     u4071:
 12445     1254  2A82               	goto	l4203
 12446     1255                     u4070:
 12447     1255                     l4185:
 12448     1255  3001               	movlw	1
 12449     1256  00A4               	movwf	___awdiv@counter^(0+128)
 12450     1257  2A5F               	goto	l4191
 12451     1258                     l4187:
 12452     1258  3001               	movlw	1
 12453     1259                     u4085:
 12454     1259  35A0               	lslf	___awdiv@divisor^(0+128),f
 12455     125A  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
 12456     125B  0B89               	decfsz	9,f
 12457     125C  2A59               	goto	u4085
 12458     125D                     l4189:
 12459     125D  3001               	movlw	1
 12460     125E  07A4               	addwf	___awdiv@counter^(0+128),f
 12461     125F                     l4191:
 12462     125F  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
 12463     1260  2A62               	goto	u4091
 12464     1261  2A63               	goto	u4090
 12465     1262                     u4091:
 12466     1262  2A58               	goto	l4187
 12467     1263                     u4090:
 12468     1263                     l4193:
 12469     1263  3001               	movlw	1
 12470     1264                     u4105:
 12471     1264  35A6               	lslf	___awdiv@quotient^(0+128),f
 12472     1265  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
 12473     1266  0B89               	decfsz	9,f
 12474     1267  2A64               	goto	u4105
 12475     1268  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 12476     1269  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
 12477     126A  1D03               	skipz
 12478     126B  2A6E               	goto	u4115
 12479     126C  0820               	movf	___awdiv@divisor^(0+128),w
 12480     126D  0222               	subwf	___awdiv@dividend^(0+128),w
 12481     126E                     u4115:
 12482     126E  1C03               	skipc
 12483     126F  2A71               	goto	u4111
 12484     1270  2A72               	goto	u4110
 12485     1271                     u4111:
 12486     1271  2A77               	goto	l4199
 12487     1272                     u4110:
 12488     1272                     l4195:
 12489     1272  0820               	movf	___awdiv@divisor^(0+128),w
 12490     1273  02A2               	subwf	___awdiv@dividend^(0+128),f
 12491     1274  0821               	movf	(___awdiv@divisor+1)^(0+128),w
 12492     1275  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
 12493     1276                     l4197:
 12494     1276  1426               	bsf	___awdiv@quotient^(0+128),0
 12495     1277                     l4199:
 12496     1277  3001               	movlw	1
 12497     1278                     u4125:
 12498     1278  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
 12499     1279  0CA0               	rrf	___awdiv@divisor^(0+128),f
 12500     127A  0B89               	decfsz	9,f
 12501     127B  2A78               	goto	u4125
 12502     127C                     l4201:
 12503     127C  3001               	movlw	1
 12504     127D  02A4               	subwf	___awdiv@counter^(0+128),f
 12505     127E  1D03               	btfss	3,2
 12506     127F  2A81               	goto	u4131
 12507     1280  2A82               	goto	u4130
 12508     1281                     u4131:
 12509     1281  2A63               	goto	l4193
 12510     1282                     u4130:
 12511     1282                     l4203:
 12512     1282  0825               	movf	___awdiv@sign^(0+128),w
 12513     1283  1903               	btfsc	3,2
 12514     1284  2A86               	goto	u4141
 12515     1285  2A87               	goto	u4140
 12516     1286                     u4141:
 12517     1286  2A8C               	goto	l4207
 12518     1287                     u4140:
 12519     1287                     l4205:
 12520     1287  09A6               	comf	___awdiv@quotient^(0+128),f
 12521     1288  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
 12522     1289  0AA6               	incf	___awdiv@quotient^(0+128),f
 12523     128A  1903               	skipnz
 12524     128B  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
 12525     128C                     l4207:
 12526     128C  0827               	movf	(___awdiv@quotient+1)^(0+128),w
 12527     128D  00A1               	movwf	(?___awdiv+1)^(0+128)
 12528     128E  0826               	movf	___awdiv@quotient^(0+128),w
 12529     128F  00A0               	movwf	?___awdiv^(0+128)
 12530     1290                     l1334:
 12531     1290  0008               	return
 12532     1291                     __end_of___awdiv:
 12533                           
 12534                           	psect	text30
 12535     1E89                     __ptext30:	
 12536 ;; *************** function ___flsub *****************
 12537 ;; Defined at:
 12538 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 12539 ;; Parameters:    Size  Location     Type
 12540 ;;  a               4   34[BANK1 ] int 
 12541 ;;  b               4   38[BANK1 ] int 
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  4   34[BANK1 ] int 
 12546 ;; Registers used:
 12547 ;;		wreg, status,2, status,0, pclath, cstack
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12553 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12556 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12557 ;;Total ram usage:        8 bytes
 12558 ;; Hardware stack levels used: 1
 12559 ;; Hardware stack levels required when called: 6
 12560 ;; This function calls:
 12561 ;;		___fladd
 12562 ;; This function is called by:
 12563 ;;		_printFloat
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567     1E89                     ___flsub:	
 12568                           ;psect for function ___flsub
 12569                           
 12570     1E89                     l5071:	
 12571                           ;incstack = 0
 12572                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12573                           
 12574     1E89  3080               	movlw	128
 12575     1E8A  0021               	movlb	1	; select bank1
 12576     1E8B  06C5               	xorwf	(___flsub@a+3)^(0+128),f
 12577     1E8C                     l5073:
 12578     1E8C  0849               	movf	(___flsub@b+3)^(0+128),w
 12579     1E8D  00B1               	movwf	(___fladd@b+3)^(0+128)
 12580     1E8E  0848               	movf	(___flsub@b+2)^(0+128),w
 12581     1E8F  00B0               	movwf	(___fladd@b+2)^(0+128)
 12582     1E90  0847               	movf	(___flsub@b+1)^(0+128),w
 12583     1E91  00AF               	movwf	(___fladd@b+1)^(0+128)
 12584     1E92  0846               	movf	___flsub@b^(0+128),w
 12585     1E93  00AE               	movwf	___fladd@b^(0+128)
 12586     1E94  0845               	movf	(___flsub@a+3)^(0+128),w
 12587     1E95  00B5               	movwf	(___fladd@a+3)^(0+128)
 12588     1E96  0844               	movf	(___flsub@a+2)^(0+128),w
 12589     1E97  00B4               	movwf	(___fladd@a+2)^(0+128)
 12590     1E98  0843               	movf	(___flsub@a+1)^(0+128),w
 12591     1E99  00B3               	movwf	(___fladd@a+1)^(0+128)
 12592     1E9A  0842               	movf	___flsub@a^(0+128),w
 12593     1E9B  00B2               	movwf	___fladd@a^(0+128)
 12594     1E9C  3185  2504  319E   	fcall	___fladd
 12595     1E9F  0021               	movlb	1	; select bank1
 12596     1EA0  0831               	movf	(?___fladd+3)^(0+128),w
 12597     1EA1  00C5               	movwf	(?___flsub+3)^(0+128)
 12598     1EA2  0830               	movf	(?___fladd+2)^(0+128),w
 12599     1EA3  00C4               	movwf	(?___flsub+2)^(0+128)
 12600     1EA4  082F               	movf	(?___fladd+1)^(0+128),w
 12601     1EA5  00C3               	movwf	(?___flsub+1)^(0+128)
 12602     1EA6  082E               	movf	?___fladd^(0+128),w
 12603     1EA7  00C2               	movwf	?___flsub^(0+128)
 12604     1EA8                     l1528:
 12605     1EA8  0008               	return
 12606     1EA9                     __end_of___flsub:
 12607                           
 12608                           	psect	text31
 12609     1D54                     __ptext31:	
 12610 ;; *************** function _getKp *****************
 12611 ;; Defined at:
 12612 ;;		line 41 in file "controller.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;		None
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  4    0[BANK1 ] float 
 12619 ;; Registers used:
 12620 ;;		wreg
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12626 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12629 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;Total ram usage:        4 bytes
 12631 ;; Hardware stack levels used: 1
 12632 ;; Hardware stack levels required when called: 5
 12633 ;; This function calls:
 12634 ;;		Nothing
 12635 ;; This function is called by:
 12636 ;;		_printLogs
 12637 ;; This function uses a non-reentrant model
 12638 ;;
 12639                           
 12640     1D54                     _getKp:	
 12641                           ;psect for function _getKp
 12642                           
 12643     1D54                     l5897:	
 12644                           ;incstack = 0
 12645                           ; Regs used in _getKp: [wreg]
 12646                           
 12647     1D54  0022               	movlb	2	; select bank2
 12648     1D55  086F               	movf	(_kp+3)^(0+256),w
 12649     1D56  0021               	movlb	1	; select bank1
 12650     1D57  00A3               	movwf	(?_getKp+3)^(0+128)
 12651     1D58  0022               	movlb	2	; select bank2
 12652     1D59  086E               	movf	(_kp+2)^(0+256),w
 12653     1D5A  0021               	movlb	1	; select bank1
 12654     1D5B  00A2               	movwf	(?_getKp+2)^(0+128)
 12655     1D5C  0022               	movlb	2	; select bank2
 12656     1D5D  086D               	movf	(_kp+1)^(0+256),w
 12657     1D5E  0021               	movlb	1	; select bank1
 12658     1D5F  00A1               	movwf	(?_getKp+1)^(0+128)
 12659     1D60  0022               	movlb	2	; select bank2
 12660     1D61  086C               	movf	_kp^(0+256),w
 12661     1D62  0021               	movlb	1	; select bank1
 12662     1D63  00A0               	movwf	?_getKp^(0+128)
 12663     1D64                     l953:
 12664     1D64  0008               	return
 12665     1D65                     __end_of_getKp:
 12666                           
 12667                           	psect	text32
 12668     1D43                     __ptext32:	
 12669 ;; *************** function _getKi *****************
 12670 ;; Defined at:
 12671 ;;		line 42 in file "controller.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;		None
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  4    0[BANK1 ] float 
 12678 ;; Registers used:
 12679 ;;		wreg
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12685 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12688 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12689 ;;Total ram usage:        4 bytes
 12690 ;; Hardware stack levels used: 1
 12691 ;; Hardware stack levels required when called: 5
 12692 ;; This function calls:
 12693 ;;		Nothing
 12694 ;; This function is called by:
 12695 ;;		_printLogs
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699     1D43                     _getKi:	
 12700                           ;psect for function _getKi
 12701                           
 12702     1D43                     l5901:	
 12703                           ;incstack = 0
 12704                           ; Regs used in _getKi: [wreg]
 12705                           
 12706     1D43  0022               	movlb	2	; select bank2
 12707     1D44  086B               	movf	(_ki+3)^(0+256),w
 12708     1D45  0021               	movlb	1	; select bank1
 12709     1D46  00A3               	movwf	(?_getKi+3)^(0+128)
 12710     1D47  0022               	movlb	2	; select bank2
 12711     1D48  086A               	movf	(_ki+2)^(0+256),w
 12712     1D49  0021               	movlb	1	; select bank1
 12713     1D4A  00A2               	movwf	(?_getKi+2)^(0+128)
 12714     1D4B  0022               	movlb	2	; select bank2
 12715     1D4C  0869               	movf	(_ki+1)^(0+256),w
 12716     1D4D  0021               	movlb	1	; select bank1
 12717     1D4E  00A1               	movwf	(?_getKi+1)^(0+128)
 12718     1D4F  0022               	movlb	2	; select bank2
 12719     1D50  0868               	movf	_ki^(0+256),w
 12720     1D51  0021               	movlb	1	; select bank1
 12721     1D52  00A0               	movwf	?_getKi^(0+128)
 12722     1D53                     l956:
 12723     1D53  0008               	return
 12724     1D54                     __end_of_getKi:
 12725                           
 12726                           	psect	text33
 12727     1C1D                     __ptext33:	
 12728 ;; *************** function _getDutycycle *****************
 12729 ;; Defined at:
 12730 ;;		line 40 in file "controller.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;		None
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  2    0[BANK1 ] unsigned short 
 12737 ;; Registers used:
 12738 ;;		wreg
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12744 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;Total ram usage:        2 bytes
 12749 ;; Hardware stack levels used: 1
 12750 ;; Hardware stack levels required when called: 5
 12751 ;; This function calls:
 12752 ;;		Nothing
 12753 ;; This function is called by:
 12754 ;;		_printLogs
 12755 ;;		_dutycycle_led_strip
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759     1C1D                     _getDutycycle:	
 12760                           ;psect for function _getDutycycle
 12761                           
 12762     1C1D                     l5893:	
 12763                           ;incstack = 0
 12764                           ; Regs used in _getDutycycle: [wreg]
 12765                           
 12766     1C1D  0020               	movlb	0	; select bank0
 12767     1C1E  0858               	movf	_dutycycle+1,w
 12768     1C1F  0021               	movlb	1	; select bank1
 12769     1C20  00A1               	movwf	(?_getDutycycle+1)^(0+128)
 12770     1C21  0020               	movlb	0	; select bank0
 12771     1C22  0857               	movf	_dutycycle,w
 12772     1C23  0021               	movlb	1	; select bank1
 12773     1C24  00A0               	movwf	?_getDutycycle^(0+128)
 12774     1C25                     l950:
 12775     1C25  0008               	return
 12776     1C26                     __end_of_getDutycycle:
 12777                           
 12778                           	psect	text34
 12779     1CA9                     __ptext34:	
 12780 ;; *************** function _initLedstrip *****************
 12781 ;; Defined at:
 12782 ;;		line 116 in file "ledstrip.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;		None
 12785 ;; Auto vars:     Size  Location     Type
 12786 ;;		None
 12787 ;; Return value:  Size  Location     Type
 12788 ;;                  1    wreg      void 
 12789 ;; Registers used:
 12790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12791 ;; Tracked objects:
 12792 ;;		On entry : 0/0
 12793 ;;		On exit  : 0/0
 12794 ;;		Unchanged: 0/0
 12795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12800 ;;Total ram usage:        0 bytes
 12801 ;; Hardware stack levels used: 1
 12802 ;; Hardware stack levels required when called: 7
 12803 ;; This function calls:
 12804 ;;		_SPI1_Open
 12805 ;;		_TMR6_PeriodMatchCallbackRegister
 12806 ;; This function is called by:
 12807 ;;		_main
 12808 ;; This function uses a non-reentrant model
 12809 ;;
 12810                           
 12811     1CA9                     _initLedstrip:	
 12812                           ;psect for function _initLedstrip
 12813                           
 12814     1CA9                     l6065:	
 12815                           ;incstack = 0
 12816                           ; Regs used in _initLedstrip: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12817                           
 12818                           
 12819                           ;ledstrip.c: 117:     SPI1_Open(HOST_CONFIG);
 12820     1CA9  0021               	movlb	1	; select bank1
 12821     1CAA  01A6               	clrf	SPI1_Open@spiConfigIndex^(0+128)
 12822     1CAB  3194  2429  319C   	fcall	_SPI1_Open
 12823     1CAE                     l6067:
 12824                           
 12825                           ;ledstrip.c: 118:     TMR6_PeriodMatchCallbackRegister(updateLedstripAnimation);
 12826     1CAE  30B7               	movlw	low _updateLedstripAnimation
 12827     1CAF  0021               	movlb	1	; select bank1
 12828     1CB0  00A0               	movwf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)
 12829     1CB1  301B               	movlw	high _updateLedstripAnimation
 12830     1CB2  00A1               	movwf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128)+1)
 12831     1CB3  319C  2414  319C   	fcall	_TMR6_PeriodMatchCallbackRegister
 12832     1CB6                     l1029:
 12833     1CB6  0008               	return
 12834     1CB7                     __end_of_initLedstrip:
 12835                           
 12836                           	psect	text35
 12837     1C14                     __ptext35:	
 12838 ;; *************** function _TMR6_PeriodMatchCallbackRegister *****************
 12839 ;; Defined at:
 12840 ;;		line 104 in file "mcc_generated_files/timer/src/tmr6.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 12843 ;;		 -> updateLedstripAnimation(1), 
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      void 
 12848 ;; Registers used:
 12849 ;;		wreg
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12855 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;Total ram usage:        2 bytes
 12860 ;; Hardware stack levels used: 1
 12861 ;; Hardware stack levels required when called: 5
 12862 ;; This function calls:
 12863 ;;		Nothing
 12864 ;; This function is called by:
 12865 ;;		_initLedstrip
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869     1C14                     _TMR6_PeriodMatchCallbackRegister:	
 12870                           ;psect for function _TMR6_PeriodMatchCallbackRegister
 12871                           
 12872     1C14                     l5789:	
 12873                           ;incstack = 0
 12874                           ; Regs used in _TMR6_PeriodMatchCallbackRegister: [wreg]
 12875                           
 12876                           
 12877                           ;mcc_generated_files/timer/src/tmr6.c: 104: void TMR6_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr6.c: 105: {;mcc_generated_fil
      +                          es/timer/src/tmr6.c: 106:    TMR6_PeriodMatchCallback = CallbackHandler;
 12878     1C14  0021               	movlb	1	; select bank1
 12879     1C15  0821               	movf	(TMR6_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 12880     1C16  0022               	movlb	2	; select bank2
 12881     1C17  00DF               	movwf	(_TMR6_PeriodMatchCallback+1)^(0+256)
 12882     1C18  0021               	movlb	1	; select bank1
 12883     1C19  0820               	movf	TMR6_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 12884     1C1A  0022               	movlb	2	; select bank2
 12885     1C1B  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 12886     1C1C                     l525:
 12887     1C1C  0008               	return
 12888     1C1D                     __end_of_TMR6_PeriodMatchCallbackRegister:
 12889                           
 12890                           	psect	text36
 12891     1429                     __ptext36:	
 12892 ;; *************** function _SPI1_Open *****************
 12893 ;; Defined at:
 12894 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  spiConfigInd    1    6[BANK1 ] unsigned char 
 12897 ;; Auto vars:     Size  Location     Type
 12898 ;;  returnValue     1    0        _Bool 
 12899 ;; Return value:  Size  Location     Type
 12900 ;;                  1    wreg      _Bool 
 12901 ;; Registers used:
 12902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12903 ;; Tracked objects:
 12904 ;;		On entry : 0/0
 12905 ;;		On exit  : 0/0
 12906 ;;		Unchanged: 0/0
 12907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12908 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12910 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;Total ram usage:        3 bytes
 12913 ;; Hardware stack levels used: 1
 12914 ;; Hardware stack levels required when called: 6
 12915 ;; This function calls:
 12916 ;;		___wmul
 12917 ;; This function is called by:
 12918 ;;		_initLedstrip
 12919 ;; This function uses a non-reentrant model
 12920 ;;
 12921                           
 12922     1429                     _SPI1_Open:	
 12923                           ;psect for function _SPI1_Open
 12924                           
 12925     1429                     l5659:	
 12926                           ;incstack = 0
 12927                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12928                           
 12929     1429                     l5661:
 12930                           
 12931                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
 12932     1429  0024               	movlb	4	; select bank4
 12933     142A  1A95               	btfsc	21,5	;volatile
 12934     142B  2C2D               	goto	u7151
 12935     142C  2C2E               	goto	u7150
 12936     142D                     u7151:
 12937     142D  2C98               	goto	l5669
 12938     142E                     u7150:
 12939     142E                     l5663:
 12940                           
 12941                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
 12942     142E  0021               	movlb	1	; select bank1
 12943     142F  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12944     1430  00A7               	movwf	??_SPI1_Open^(0+128)
 12945     1431  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12946     1432  0827               	movf	??_SPI1_Open^(0+128),w
 12947     1433  00A0               	movwf	___wmul@multiplier^(0+128)
 12948     1434  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12949     1435  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12950     1436  3005               	movlw	5
 12951     1437  00A2               	movwf	___wmul@multiplicand^(0+128)
 12952     1438  3000               	movlw	0
 12953     1439  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12954     143A  319E  2669  3194   	fcall	___wmul
 12955     143D  30E2               	movlw	low _spi1_configuration
 12956     143E  0021               	movlb	1	; select bank1
 12957     143F  0720               	addwf	?___wmul^(0+128),w
 12958     1440  0084               	movwf	4
 12959     1441  3018               	movlw	high _spi1_configuration
 12960     1442  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12961     1443  3880               	iorlw	128
 12962     1444  0085               	movwf	5
 12963     1445  0800               	movf	0,w	;code access
 12964     1446  0024               	movlb	4	; select bank4
 12965     1447  0094               	movwf	20	;volatile
 12966                           
 12967                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
 12968     1448  0021               	movlb	1	; select bank1
 12969     1449  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12970     144A  00A7               	movwf	??_SPI1_Open^(0+128)
 12971     144B  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12972     144C  0827               	movf	??_SPI1_Open^(0+128),w
 12973     144D  00A0               	movwf	___wmul@multiplier^(0+128)
 12974     144E  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 12975     144F  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 12976     1450  3005               	movlw	5
 12977     1451  00A2               	movwf	___wmul@multiplicand^(0+128)
 12978     1452  3000               	movlw	0
 12979     1453  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 12980     1454  319E  2669  3194   	fcall	___wmul
 12981     1457  30E3               	movlw	low (_spi1_configuration+1)
 12982     1458  0021               	movlb	1	; select bank1
 12983     1459  0720               	addwf	?___wmul^(0+128),w
 12984     145A  0084               	movwf	4
 12985     145B  3018               	movlw	high (_spi1_configuration+1)
 12986     145C  3D21               	addwfc	(?___wmul+1)^(0+128),w
 12987     145D  3880               	iorlw	128
 12988     145E  0085               	movwf	5
 12989     145F  0800               	movf	0,w	;code access
 12990     1460  0024               	movlb	4	; select bank4
 12991     1461  0095               	movwf	21	;volatile
 12992                           
 12993                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
 12994     1462  0021               	movlb	1	; select bank1
 12995     1463  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 12996     1464  00A7               	movwf	??_SPI1_Open^(0+128)
 12997     1465  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 12998     1466  0827               	movf	??_SPI1_Open^(0+128),w
 12999     1467  00A0               	movwf	___wmul@multiplier^(0+128)
 13000     1468  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13001     1469  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13002     146A  3005               	movlw	5
 13003     146B  00A2               	movwf	___wmul@multiplicand^(0+128)
 13004     146C  3000               	movlw	0
 13005     146D  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13006     146E  319E  2669  3194   	fcall	___wmul
 13007     1471  30E4               	movlw	low (_spi1_configuration+2)
 13008     1472  0021               	movlb	1	; select bank1
 13009     1473  0720               	addwf	?___wmul^(0+128),w
 13010     1474  0084               	movwf	4
 13011     1475  3018               	movlw	high (_spi1_configuration+2)
 13012     1476  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13013     1477  3880               	iorlw	128
 13014     1478  0085               	movwf	5
 13015     1479  0800               	movf	0,w	;code access
 13016     147A  0024               	movlb	4	; select bank4
 13017     147B  0097               	movwf	23	;volatile
 13018                           
 13019                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
 13020     147C  0021               	movlb	1	; select bank1
 13021     147D  0826               	movf	SPI1_Open@spiConfigIndex^(0+128),w
 13022     147E  00A7               	movwf	??_SPI1_Open^(0+128)
 13023     147F  01A8               	clrf	(??_SPI1_Open^(0+128)+1)
 13024     1480  0827               	movf	??_SPI1_Open^(0+128),w
 13025     1481  00A0               	movwf	___wmul@multiplier^(0+128)
 13026     1482  0828               	movf	(??_SPI1_Open+1)^(0+128),w
 13027     1483  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 13028     1484  3005               	movlw	5
 13029     1485  00A2               	movwf	___wmul@multiplicand^(0+128)
 13030     1486  3000               	movlw	0
 13031     1487  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 13032     1488  319E  2669  3194   	fcall	___wmul
 13033     148B  30E5               	movlw	low (_spi1_configuration+3)
 13034     148C  0021               	movlb	1	; select bank1
 13035     148D  0720               	addwf	?___wmul^(0+128),w
 13036     148E  0084               	movwf	4
 13037     148F  3018               	movlw	high (_spi1_configuration+3)
 13038     1490  3D21               	addwfc	(?___wmul+1)^(0+128),w
 13039     1491  3880               	iorlw	128
 13040     1492  0085               	movwf	5
 13041     1493  0800               	movf	0,w	;code access
 13042     1494  0024               	movlb	4	; select bank4
 13043     1495  0092               	movwf	18	;volatile
 13044     1496                     l5665:
 13045                           
 13046                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
 13047     1496  1695               	bsf	21,5	;volatile
 13048     1497                     l5667:
 13049                           
 13050                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
 13051     1497  2C98               	goto	l127
 13052     1498                     l5669:
 13053     1498                     l127:
 13054     1498  0008               	return
 13055     1499                     __end_of_SPI1_Open:
 13056                           
 13057                           	psect	text37
 13058     1E69                     __ptext37:	
 13059 ;; *************** function ___wmul *****************
 13060 ;; Defined at:
 13061 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  multiplier      2    0[BANK1 ] unsigned int 
 13064 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;  product         2    4[BANK1 ] unsigned int 
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  2    0[BANK1 ] unsigned int 
 13069 ;; Registers used:
 13070 ;;		wreg, status,2, status,0
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13076 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;Total ram usage:        6 bytes
 13081 ;; Hardware stack levels used: 1
 13082 ;; Hardware stack levels required when called: 5
 13083 ;; This function calls:
 13084 ;;		Nothing
 13085 ;; This function is called by:
 13086 ;;		_SPI1_Open
 13087 ;;		_atoi
 13088 ;;		_read_prec_or_width
 13089 ;;		_dutycycle_led_strip
 13090 ;; This function uses a non-reentrant model
 13091 ;;
 13092                           
 13093     1E69                     ___wmul:	
 13094                           ;psect for function ___wmul
 13095                           
 13096     1E69                     l4153:	
 13097                           ;incstack = 0
 13098                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13099                           
 13100     1E69  0021               	movlb	1	; select bank1
 13101     1E6A  01A4               	clrf	___wmul@product^(0+128)
 13102     1E6B  01A5               	clrf	(___wmul@product+1)^(0+128)
 13103     1E6C                     l4155:
 13104     1E6C  1C20               	btfss	___wmul@multiplier^(0+128),0
 13105     1E6D  2E6F               	goto	u4011
 13106     1E6E  2E70               	goto	u4010
 13107     1E6F                     u4011:
 13108     1E6F  2E74               	goto	l1181
 13109     1E70                     u4010:
 13110     1E70                     l4157:
 13111     1E70  0822               	movf	___wmul@multiplicand^(0+128),w
 13112     1E71  07A4               	addwf	___wmul@product^(0+128),f
 13113     1E72  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 13114     1E73  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 13115     1E74                     l1181:
 13116     1E74  3001               	movlw	1
 13117     1E75                     u4025:
 13118     1E75  35A2               	lslf	___wmul@multiplicand^(0+128),f
 13119     1E76  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 13120     1E77  0B89               	decfsz	9,f
 13121     1E78  2E75               	goto	u4025
 13122     1E79                     l4159:
 13123     1E79  3001               	movlw	1
 13124     1E7A                     u4035:
 13125     1E7A  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 13126     1E7B  0CA0               	rrf	___wmul@multiplier^(0+128),f
 13127     1E7C  0B89               	decfsz	9,f
 13128     1E7D  2E7A               	goto	u4035
 13129     1E7E                     l4161:
 13130     1E7E  0820               	movf	___wmul@multiplier^(0+128),w
 13131     1E7F  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 13132     1E80  1D03               	btfss	3,2
 13133     1E81  2E83               	goto	u4041
 13134     1E82  2E84               	goto	u4040
 13135     1E83                     u4041:
 13136     1E83  2E6C               	goto	l4155
 13137     1E84                     u4040:
 13138     1E84                     l4163:
 13139     1E84  0825               	movf	(___wmul@product+1)^(0+128),w
 13140     1E85  00A1               	movwf	(?___wmul+1)^(0+128)
 13141     1E86  0824               	movf	___wmul@product^(0+128),w
 13142     1E87  00A0               	movwf	?___wmul^(0+128)
 13143     1E88                     l1183:
 13144     1E88  0008               	return
 13145     1E89                     __end_of___wmul:
 13146                           
 13147                           	psect	text38
 13148     1C9C                     __ptext38:	
 13149 ;; *************** function _initAdcMultiplexer *****************
 13150 ;; Defined at:
 13151 ;;		line 24 in file "adcMeasurements.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;		None
 13154 ;; Auto vars:     Size  Location     Type
 13155 ;;		None
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  1    wreg      void 
 13158 ;; Registers used:
 13159 ;;		wreg, status,2, status,0, pclath, cstack
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/0
 13162 ;;		On exit  : 0/0
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13169 ;;Total ram usage:        0 bytes
 13170 ;; Hardware stack levels used: 1
 13171 ;; Hardware stack levels required when called: 6
 13172 ;; This function calls:
 13173 ;;		_ADC_SelectChannel
 13174 ;;		_ADC_SetInterruptHandler
 13175 ;; This function is called by:
 13176 ;;		_main
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180     1C9C                     _initAdcMultiplexer:	
 13181                           ;psect for function _initAdcMultiplexer
 13182                           
 13183     1C9C                     l6063:	
 13184                           ;incstack = 0
 13185                           ; Regs used in _initAdcMultiplexer: [wreg+status,2+status,0+pclath+cstack]
 13186                           
 13187                           
 13188                           ;adcMeasurements.c: 25:     ADC_SelectChannel(potentiometer);
 13189     1C9C  3010               	movlw	16
 13190     1C9D  319C  2483  319C   	fcall	_ADC_SelectChannel
 13191                           
 13192                           ;adcMeasurements.c: 26:     ADC_SetInterruptHandler(adcConversionDoneHandler);
 13193     1CA0  305C               	movlw	low _adcConversionDoneHandler
 13194     1CA1  0021               	movlb	1	; select bank1
 13195     1CA2  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 13196     1CA3  301F               	movlw	high _adcConversionDoneHandler
 13197     1CA4  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 13198     1CA5  319B  23D5  319C   	fcall	_ADC_SetInterruptHandler
 13199     1CA8                     l833:
 13200     1CA8  0008               	return
 13201     1CA9                     __end_of_initAdcMultiplexer:
 13202                           
 13203                           	psect	text39
 13204     1C83                     __ptext39:	
 13205 ;; *************** function _ADC_SelectChannel *****************
 13206 ;; Defined at:
 13207 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;  channel         1    wreg     enum E6663
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  channel         1    1[BANK1 ] enum E6663
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  1    wreg      void 
 13214 ;; Registers used:
 13215 ;;		wreg, status,2, status,0
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13224 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13225 ;;Total ram usage:        2 bytes
 13226 ;; Hardware stack levels used: 1
 13227 ;; Hardware stack levels required when called: 5
 13228 ;; This function calls:
 13229 ;;		Nothing
 13230 ;; This function is called by:
 13231 ;;		_initAdcMultiplexer
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235     1C83                     _ADC_SelectChannel:	
 13236                           ;psect for function _ADC_SelectChannel
 13237                           
 13238                           
 13239                           ;incstack = 0
 13240                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 13241                           ;ADC_SelectChannel@channel stored from wreg
 13242     1C83  0021               	movlb	1	; select bank1
 13243     1C84  00A1               	movwf	ADC_SelectChannel@channel^(0+128)
 13244     1C85                     l5649:
 13245                           
 13246                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 13247     1C85  0821               	movf	ADC_SelectChannel@channel^(0+128),w
 13248     1C86  00A0               	movwf	??_ADC_SelectChannel^(0+128)
 13249     1C87  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 13250     1C88  0DA0               	rlf	??_ADC_SelectChannel^(0+128),f
 13251     1C89  081D               	movf	29,w	;volatile
 13252     1C8A  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 13253     1C8B  3903               	andlw	-253
 13254     1C8C  0620               	xorwf	??_ADC_SelectChannel^(0+128),w
 13255     1C8D  009D               	movwf	29	;volatile
 13256     1C8E                     l30:
 13257     1C8E  0008               	return
 13258     1C8F                     __end_of_ADC_SelectChannel:
 13259                           
 13260                           	psect	text40
 13261     1C0B                     __ptext40:	
 13262 ;; *************** function _getPotentiometer *****************
 13263 ;; Defined at:
 13264 ;;		line 29 in file "adcMeasurements.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;		None
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;		None
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  2    0[BANK1 ] unsigned short 
 13271 ;; Registers used:
 13272 ;;		wreg
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13278 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;Total ram usage:        2 bytes
 13283 ;; Hardware stack levels used: 1
 13284 ;; Hardware stack levels required when called: 5
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_main
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292     1C0B                     _getPotentiometer:	
 13293                           ;psect for function _getPotentiometer
 13294                           
 13295     1C0B                     l6091:	
 13296                           ;incstack = 0
 13297                           ; Regs used in _getPotentiometer: [wreg]
 13298                           
 13299                           
 13300                           ;adcMeasurements.c: 30:     return ADC_potentiometer;
 13301     1C0B  0020               	movlb	0	; select bank0
 13302     1C0C  085C               	movf	_ADC_potentiometer+1,w	;volatile
 13303     1C0D  0021               	movlb	1	; select bank1
 13304     1C0E  00A1               	movwf	(?_getPotentiometer+1)^(0+128)
 13305     1C0F  0020               	movlb	0	; select bank0
 13306     1C10  085B               	movf	_ADC_potentiometer,w	;volatile
 13307     1C11  0021               	movlb	1	; select bank1
 13308     1C12  00A0               	movwf	?_getPotentiometer^(0+128)
 13309     1C13                     l836:
 13310     1C13  0008               	return
 13311     1C14                     __end_of_getPotentiometer:
 13312                           
 13313                           	psect	text41
 13314     1D88                     __ptext41:	
 13315 ;; *************** function _TMR6_Tasks *****************
 13316 ;; Defined at:
 13317 ;;		line 124 in file "mcc_generated_files/timer/src/tmr6.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;		None
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;		None
 13322 ;; Return value:  Size  Location     Type
 13323 ;;                  1    wreg      void 
 13324 ;; Registers used:
 13325 ;;		wreg, status,2, status,0, pclath, cstack
 13326 ;; Tracked objects:
 13327 ;;		On entry : 0/0
 13328 ;;		On exit  : 0/0
 13329 ;;		Unchanged: 0/0
 13330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13335 ;;Total ram usage:        0 bytes
 13336 ;; Hardware stack levels used: 1
 13337 ;; Hardware stack levels required when called: 10
 13338 ;; This function calls:
 13339 ;;		NULL
 13340 ;;		_TMR6_DefaultPeriodMatchCallback
 13341 ;;		_updateLedstripAnimation
 13342 ;; This function is called by:
 13343 ;;		_main
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           
 13347     1D88                     _TMR6_Tasks:	
 13348                           ;psect for function _TMR6_Tasks
 13349                           
 13350     1D88                     l6009:	
 13351                           ;incstack = 0
 13352                           ; Regs used in _TMR6_Tasks: [wreg+status,2+status,0+pclath+cstack]
 13353                           
 13354                           
 13355                           ;mcc_generated_files/timer/src/tmr6.c: 126:     if(1U == PIR2bits.TMR6IF)
 13356     1D88  0020               	movlb	0	; select bank0
 13357     1D89  1F92               	btfss	18,7	;volatile
 13358     1D8A  2D8C               	goto	u7391
 13359     1D8B  2D8D               	goto	u7390
 13360     1D8C                     u7391:
 13361     1D8C  2D9B               	goto	l539
 13362     1D8D                     u7390:
 13363     1D8D                     l6011:
 13364                           
 13365                           ;mcc_generated_files/timer/src/tmr6.c: 127:     {;mcc_generated_files/timer/src/tmr6.c: 
      +                          128:         if(((void*)0) != TMR6_PeriodMatchCallback)
 13366     1D8D  0022               	movlb	2	; select bank2
 13367     1D8E  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 13368     1D8F  045F               	iorwf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 13369     1D90  1903               	btfsc	3,2
 13370     1D91  2D93               	goto	u7401
 13371     1D92  2D94               	goto	u7400
 13372     1D93                     u7401:
 13373     1D93  2D99               	goto	l6015
 13374     1D94                     u7400:
 13375     1D94                     l6013:
 13376                           
 13377                           ;mcc_generated_files/timer/src/tmr6.c: 129:         {;mcc_generated_files/timer/src/tmr6
      +                          .c: 130:             TMR6_PeriodMatchCallback();
 13378     1D94  085F               	movf	(_TMR6_PeriodMatchCallback+1)^(0+256),w
 13379     1D95  008A               	movwf	10
 13380     1D96  085E               	movf	_TMR6_PeriodMatchCallback^(0+256),w
 13381     1D97  000A               	callw
 13382     1D98  319D               	pagesel	$
 13383     1D99                     l6015:
 13384                           
 13385                           ;mcc_generated_files/timer/src/tmr6.c: 132:         PIR2bits.TMR6IF = 0;
 13386     1D99  0020               	movlb	0	; select bank0
 13387     1D9A  1392               	bcf	18,7	;volatile
 13388     1D9B                     l539:
 13389     1D9B  0008               	return
 13390     1D9C                     __end_of_TMR6_Tasks:
 13391                           
 13392                           	psect	text42
 13393     07FF                     __ptext42:	
 13394 ;; *************** function _TMR6_DefaultPeriodMatchCallback *****************
 13395 ;; Defined at:
 13396 ;;		line 109 in file "mcc_generated_files/timer/src/tmr6.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;		None
 13399 ;; Auto vars:     Size  Location     Type
 13400 ;;		None
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  1    wreg      void 
 13403 ;; Registers used:
 13404 ;;		None
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;Total ram usage:        0 bytes
 13415 ;; Hardware stack levels used: 1
 13416 ;; Hardware stack levels required when called: 5
 13417 ;; This function calls:
 13418 ;;		Nothing
 13419 ;; This function is called by:
 13420 ;;		_TMR6_Initialize
 13421 ;;		_TMR6_Tasks
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425     07FF                     _TMR6_DefaultPeriodMatchCallback:	
 13426                           ;psect for function _TMR6_DefaultPeriodMatchCallback
 13427                           
 13428     07FF                     l528:	
 13429                           ;incstack = 0
 13430                           ; Regs used in _TMR6_DefaultPeriodMatchCallback: []
 13431                           
 13432     07FF  0008               	return
 13433     0800                     __end_of_TMR6_DefaultPeriodMatchCallback:
 13434                           
 13435                           	psect	text43
 13436     1BB7                     __ptext43:	
 13437 ;; *************** function _updateLedstripAnimation *****************
 13438 ;; Defined at:
 13439 ;;		line 112 in file "ledstrip.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;		None
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;		None
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  1    wreg      void 
 13446 ;; Registers used:
 13447 ;;		wreg, status,2, status,0, pclath, cstack
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/0
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13457 ;;Total ram usage:        0 bytes
 13458 ;; Hardware stack levels used: 1
 13459 ;; Hardware stack levels required when called: 9
 13460 ;; This function calls:
 13461 ;;		_position_led_strip
 13462 ;; This function is called by:
 13463 ;;		_initLedstrip
 13464 ;;		_TMR6_Tasks
 13465 ;; This function uses a non-reentrant model
 13466 ;;
 13467                           
 13468     1BB7                     _updateLedstripAnimation:	
 13469                           ;psect for function _updateLedstripAnimation
 13470                           
 13471     1BB7                     l5971:	
 13472                           ;incstack = 0
 13473                           ; Regs used in _updateLedstripAnimation: [wreg+status,2+status,0+pclath+cstack]
 13474                           
 13475                           
 13476                           ;ledstrip.c: 113:     position_led_strip();
 13477     1BB7  318B  2339  319B   	fcall	_position_led_strip
 13478     1BBA                     l1026:
 13479     1BBA  0008               	return
 13480     1BBB                     __end_of_updateLedstripAnimation:
 13481                           
 13482                           	psect	text44
 13483     0B39                     __ptext44:	
 13484 ;; *************** function _position_led_strip *****************
 13485 ;; Defined at:
 13486 ;;		line 60 in file "ledstrip.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;  led             1    9[BANK2 ] unsigned char 
 13491 ;;  led_on          2   10[BANK2 ] int 
 13492 ;;  target          2    7[BANK2 ] int 
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		wreg, status,2, status,0, pclath, cstack
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13503 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 13504 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;Total ram usage:        8 bytes
 13507 ;; Hardware stack levels used: 1
 13508 ;; Hardware stack levels required when called: 8
 13509 ;; This function calls:
 13510 ;;		_getHoogtesensor
 13511 ;;		_getLedNumber
 13512 ;;		_getSetpoint
 13513 ;;		_sendLedstripEndFrame
 13514 ;;		_sendLedstripFrame
 13515 ;;		_sendLedstripStartFrame
 13516 ;; This function is called by:
 13517 ;;		_updateLedstripAnimation
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521     0B39                     _position_led_strip:	
 13522                           ;psect for function _position_led_strip
 13523                           
 13524     0B39                     l5001:	
 13525                           ;incstack = 0
 13526                           ; Regs used in _position_led_strip: [wreg+status,2+status,0+pclath+cstack]
 13527                           
 13528                           
 13529                           ;ledstrip.c: 61:     int led_on = getLedNumber(getHoogtesensor());
 13530     0B39  319B  23F9  318B   	fcall	_getHoogtesensor
 13531     0B3C  0021               	movlb	1	; select bank1
 13532     0B3D  0821               	movf	(?_getHoogtesensor+1)^(0+128),w
 13533     0B3E  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 13534     0B3F  0820               	movf	?_getHoogtesensor^(0+128),w
 13535     0B40  00EE               	movwf	getLedNumber@height^(0+128)
 13536     0B41  3191  21DA  318B   	fcall	_getLedNumber
 13537     0B44  0021               	movlb	1	; select bank1
 13538     0B45  086F               	movf	(?_getLedNumber+1)^(0+128),w
 13539     0B46  0022               	movlb	2	; select bank2
 13540     0B47  00D9               	movwf	(position_led_strip@led_on+1)^(0+256)
 13541     0B48  0021               	movlb	1	; select bank1
 13542     0B49  086E               	movf	?_getLedNumber^(0+128),w
 13543     0B4A  0022               	movlb	2	; select bank2
 13544     0B4B  00D8               	movwf	position_led_strip@led_on^(0+256)
 13545     0B4C                     l5003:
 13546                           
 13547                           ;ledstrip.c: 62:     if (led_on < 0) {
 13548     0B4C  1FD9               	btfss	(position_led_strip@led_on+1)^(0+256),7
 13549     0B4D  2B4F               	goto	u5761
 13550     0B4E  2B50               	goto	u5760
 13551     0B4F                     u5761:
 13552     0B4F  2B53               	goto	l5007
 13553     0B50                     u5760:
 13554     0B50                     l5005:
 13555                           
 13556                           ;ledstrip.c: 63:         led_on = 0;
 13557     0B50  01D8               	clrf	position_led_strip@led_on^(0+256)
 13558     0B51  01D9               	clrf	(position_led_strip@led_on+1)^(0+256)
 13559                           
 13560                           ;ledstrip.c: 64:     } else if (led_on > 59) {
 13561     0B52  2B65               	goto	l5011
 13562     0B53                     l5007:
 13563     0B53  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 13564     0B54  3A80               	xorlw	128
 13565     0B55  00D2               	movwf	??_position_led_strip^(0+256)
 13566     0B56  3080               	movlw	128
 13567     0B57  0252               	subwf	??_position_led_strip^(0+256),w
 13568     0B58  1D03               	skipz
 13569     0B59  2B5C               	goto	u5775
 13570     0B5A  303C               	movlw	60
 13571     0B5B  0258               	subwf	position_led_strip@led_on^(0+256),w
 13572     0B5C                     u5775:
 13573     0B5C  1C03               	skipc
 13574     0B5D  2B5F               	goto	u5771
 13575     0B5E  2B60               	goto	u5770
 13576     0B5F                     u5771:
 13577     0B5F  2B65               	goto	l5011
 13578     0B60                     u5770:
 13579     0B60                     l5009:
 13580                           
 13581                           ;ledstrip.c: 65:         led_on = 59;
 13582     0B60  303B               	movlw	59
 13583     0B61  0022               	movlb	2	; select bank2
 13584     0B62  00D8               	movwf	position_led_strip@led_on^(0+256)
 13585     0B63  3000               	movlw	0
 13586     0B64  00D9               	movwf	(position_led_strip@led_on^(0+256)+1)
 13587     0B65                     l5011:
 13588                           
 13589                           ;ledstrip.c: 68:     int target = getLedNumber(getSetpoint());
 13590     0B65  319C  2402  318B   	fcall	_getSetpoint
 13591     0B68  0021               	movlb	1	; select bank1
 13592     0B69  0821               	movf	(?_getSetpoint+1)^(0+128),w
 13593     0B6A  00EF               	movwf	(getLedNumber@height+1)^(0+128)
 13594     0B6B  0820               	movf	?_getSetpoint^(0+128),w
 13595     0B6C  00EE               	movwf	getLedNumber@height^(0+128)
 13596     0B6D  3191  21DA  318B   	fcall	_getLedNumber
 13597     0B70  0021               	movlb	1	; select bank1
 13598     0B71  086F               	movf	(?_getLedNumber+1)^(0+128),w
 13599     0B72  0022               	movlb	2	; select bank2
 13600     0B73  00D6               	movwf	(position_led_strip@target+1)^(0+256)
 13601     0B74  0021               	movlb	1	; select bank1
 13602     0B75  086E               	movf	?_getLedNumber^(0+128),w
 13603     0B76  0022               	movlb	2	; select bank2
 13604     0B77  00D5               	movwf	position_led_strip@target^(0+256)
 13605     0B78                     l5013:
 13606                           
 13607                           ;ledstrip.c: 69:     if (target < 0) {
 13608     0B78  1FD6               	btfss	(position_led_strip@target+1)^(0+256),7
 13609     0B79  2B7B               	goto	u5781
 13610     0B7A  2B7C               	goto	u5780
 13611     0B7B                     u5781:
 13612     0B7B  2B7E               	goto	l5017
 13613     0B7C                     u5780:
 13614     0B7C                     l5015:
 13615                           
 13616                           ;ledstrip.c: 70:         target = 0;
 13617     0B7C  01D5               	clrf	position_led_strip@target^(0+256)
 13618     0B7D  01D6               	clrf	(position_led_strip@target+1)^(0+256)
 13619     0B7E                     l5017:
 13620                           
 13621                           ;ledstrip.c: 74:     sendLedstripStartFrame();
 13622     0B7E  319D  25B1  318B   	fcall	_sendLedstripStartFrame
 13623     0B81                     l5019:
 13624                           
 13625                           ;ledstrip.c: 75:     for (uint8_t led = 0; led < 59; led++) {
 13626     0B81  0022               	movlb	2	; select bank2
 13627     0B82  01D7               	clrf	position_led_strip@led^(0+256)
 13628     0B83                     l5025:
 13629                           
 13630                           ;ledstrip.c: 78:         if (led_on == target) {
 13631     0B83  0856               	movf	(position_led_strip@target+1)^(0+256),w
 13632     0B84  0659               	xorwf	(position_led_strip@led_on+1)^(0+256),w
 13633     0B85  1D03               	skipz
 13634     0B86  2B89               	goto	u5795
 13635     0B87  0855               	movf	position_led_strip@target^(0+256),w
 13636     0B88  0658               	xorwf	position_led_strip@led_on^(0+256),w
 13637     0B89                     u5795:
 13638     0B89  1D03               	skipz
 13639     0B8A  2B8C               	goto	u5791
 13640     0B8B  2B8D               	goto	u5790
 13641     0B8C                     u5791:
 13642     0B8C  2B90               	goto	l5029
 13643     0B8D                     u5790:
 13644     0B8D                     l5027:
 13645                           
 13646                           ;ledstrip.c: 79:             is_on_target = 1;
 13647     0B8D  3001               	movlw	1
 13648     0B8E  0020               	movlb	0	; select bank0
 13649     0B8F  00E4               	movwf	_is_on_target
 13650     0B90                     l5029:
 13651                           
 13652                           ;ledstrip.c: 81:         if (is_on_target){
 13653     0B90  0020               	movlb	0	; select bank0
 13654     0B91  0864               	movf	_is_on_target,w
 13655     0B92  1903               	btfsc	3,2
 13656     0B93  2B95               	goto	u5801
 13657     0B94  2B96               	goto	u5800
 13658     0B95                     u5801:
 13659     0B95  2C08               	goto	l5049
 13660     0B96                     u5800:
 13661     0B96                     l5031:
 13662                           
 13663                           ;ledstrip.c: 82:             if (led_on >= target - 1 && led_on <= target + 1) {
 13664     0B96  0022               	movlb	2	; select bank2
 13665     0B97  0855               	movf	position_led_strip@target^(0+256),w
 13666     0B98  3EFF               	addlw	255
 13667     0B99  00D2               	movwf	??_position_led_strip^(0+256)
 13668     0B9A  30FF               	movlw	255
 13669     0B9B  3D56               	addwfc	(position_led_strip@target+1)^(0+256),w
 13670     0B9C  00D3               	movwf	(??_position_led_strip+1)^(0+256)
 13671     0B9D  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 13672     0B9E  3A80               	xorlw	128
 13673     0B9F  00D4               	movwf	(??_position_led_strip+2)^(0+256)
 13674     0BA0  0853               	movf	(??_position_led_strip+1)^(0+256),w
 13675     0BA1  3A80               	xorlw	128
 13676     0BA2  0254               	subwf	(??_position_led_strip+2)^(0+256),w
 13677     0BA3  1D03               	skipz
 13678     0BA4  2BA7               	goto	u5815
 13679     0BA5  0852               	movf	??_position_led_strip^(0+256),w
 13680     0BA6  0258               	subwf	position_led_strip@led_on^(0+256),w
 13681     0BA7                     u5815:
 13682     0BA7  1C03               	skipc
 13683     0BA8  2BAA               	goto	u5811
 13684     0BA9  2BAB               	goto	u5810
 13685     0BAA                     u5811:
 13686     0BAA  2BCB               	goto	l5037
 13687     0BAB                     u5810:
 13688     0BAB                     l5033:
 13689     0BAB  0022               	movlb	2	; select bank2
 13690     0BAC  0855               	movf	position_led_strip@target^(0+256),w
 13691     0BAD  3E01               	addlw	1
 13692     0BAE  00D2               	movwf	??_position_led_strip^(0+256)
 13693     0BAF  3000               	movlw	0
 13694     0BB0  3D56               	addwfc	(position_led_strip@target+1)^(0+256),w
 13695     0BB1  00D3               	movwf	(??_position_led_strip+1)^(0+256)
 13696     0BB2  0853               	movf	(??_position_led_strip+1)^(0+256),w
 13697     0BB3  3A80               	xorlw	128
 13698     0BB4  00D4               	movwf	(??_position_led_strip+2)^(0+256)
 13699     0BB5  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 13700     0BB6  3A80               	xorlw	128
 13701     0BB7  0254               	subwf	(??_position_led_strip+2)^(0+256),w
 13702     0BB8  1D03               	skipz
 13703     0BB9  2BBC               	goto	u5825
 13704     0BBA  0858               	movf	position_led_strip@led_on^(0+256),w
 13705     0BBB  0252               	subwf	??_position_led_strip^(0+256),w
 13706     0BBC                     u5825:
 13707     0BBC  1C03               	skipc
 13708     0BBD  2BBF               	goto	u5821
 13709     0BBE  2BC0               	goto	u5820
 13710     0BBF                     u5821:
 13711     0BBF  2BCB               	goto	l5037
 13712     0BC0                     u5820:
 13713     0BC0                     l5035:
 13714                           
 13715                           ;ledstrip.c: 83:                 sendLedstripFrame(0x00, 0xFF, 0x00, 0x05);
 13716     0BC0  30FF               	movlw	255
 13717     0BC1  0021               	movlb	1	; select bank1
 13718     0BC2  00A1               	movwf	sendLedstripFrame@green^(0+128)
 13719     0BC3  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13720     0BC4  3005               	movlw	5
 13721     0BC5  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13722     0BC6  3000               	movlw	0
 13723     0BC7  319D  25F5  318B   	fcall	_sendLedstripFrame
 13724                           
 13725                           ;ledstrip.c: 84:             }
 13726     0BCA  2C43               	goto	l5065
 13727     0BCB                     l5037:
 13728                           
 13729                           ;ledstrip.c: 86:                 if (led == led_on) {
 13730     0BCB  0022               	movlb	2	; select bank2
 13731     0BCC  0857               	movf	position_led_strip@led^(0+256),w
 13732     0BCD  00D2               	movwf	??_position_led_strip^(0+256)
 13733     0BCE  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 13734     0BCF  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 13735     0BD0  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 13736     0BD1  1D03               	skipz
 13737     0BD2  2BD5               	goto	u5835
 13738     0BD3  0858               	movf	position_led_strip@led_on^(0+256),w
 13739     0BD4  0652               	xorwf	??_position_led_strip^(0+256),w
 13740     0BD5                     u5835:
 13741     0BD5  1D03               	skipz
 13742     0BD6  2BD8               	goto	u5831
 13743     0BD7  2BD9               	goto	u5830
 13744     0BD8                     u5831:
 13745     0BD8  2BE5               	goto	l5041
 13746     0BD9                     u5830:
 13747     0BD9                     l5039:
 13748                           
 13749                           ;ledstrip.c: 87:                     sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 13750     0BD9  3044               	movlw	68
 13751     0BDA  0021               	movlb	1	; select bank1
 13752     0BDB  00A1               	movwf	sendLedstripFrame@green^(0+128)
 13753     0BDC  3044               	movlw	68
 13754     0BDD  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 13755     0BDE  3005               	movlw	5
 13756     0BDF  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13757     0BE0  3044               	movlw	68
 13758     0BE1  319D  25F5  318B   	fcall	_sendLedstripFrame
 13759                           
 13760                           ;ledstrip.c: 88:         } else if (led == target) {
 13761     0BE4  2C05               	goto	l5047
 13762     0BE5                     l5041:
 13763     0BE5  0857               	movf	position_led_strip@led^(0+256),w
 13764     0BE6  00D2               	movwf	??_position_led_strip^(0+256)
 13765     0BE7  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 13766     0BE8  0856               	movf	(position_led_strip@target+1)^(0+256),w
 13767     0BE9  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 13768     0BEA  1D03               	skipz
 13769     0BEB  2BEE               	goto	u5845
 13770     0BEC  0855               	movf	position_led_strip@target^(0+256),w
 13771     0BED  0652               	xorwf	??_position_led_strip^(0+256),w
 13772     0BEE                     u5845:
 13773     0BEE  1D03               	skipz
 13774     0BEF  2BF1               	goto	u5841
 13775     0BF0  2BF2               	goto	u5840
 13776     0BF1                     u5841:
 13777     0BF1  2BFC               	goto	l5045
 13778     0BF2                     u5840:
 13779     0BF2                     l5043:
 13780                           
 13781                           ;ledstrip.c: 89:                     sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 13782     0BF2  0021               	movlb	1	; select bank1
 13783     0BF3  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13784     0BF4  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13785     0BF5  3005               	movlw	5
 13786     0BF6  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13787     0BF7  30FF               	movlw	255
 13788     0BF8  319D  25F5  318B   	fcall	_sendLedstripFrame
 13789                           
 13790                           ;ledstrip.c: 90:         } else {
 13791     0BFB  2C05               	goto	l5047
 13792     0BFC                     l5045:
 13793                           
 13794                           ;ledstrip.c: 91:                     sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 13795     0BFC  0021               	movlb	1	; select bank1
 13796     0BFD  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13797     0BFE  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13798     0BFF  3005               	movlw	5
 13799     0C00  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13800     0C01  3000               	movlw	0
 13801     0C02  319D  25F5  318B   	fcall	_sendLedstripFrame
 13802     0C05                     l5047:
 13803                           
 13804                           ;ledstrip.c: 93:                 is_on_target = 0;
 13805     0C05  0020               	movlb	0	; select bank0
 13806     0C06  01E4               	clrf	_is_on_target
 13807     0C07  2C43               	goto	l5065
 13808     0C08                     l5049:
 13809     0C08  0022               	movlb	2	; select bank2
 13810     0C09  0857               	movf	position_led_strip@led^(0+256),w
 13811     0C0A  00D2               	movwf	??_position_led_strip^(0+256)
 13812     0C0B  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 13813     0C0C  0859               	movf	(position_led_strip@led_on+1)^(0+256),w
 13814     0C0D  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 13815     0C0E  1D03               	skipz
 13816     0C0F  2C12               	goto	u5855
 13817     0C10  0858               	movf	position_led_strip@led_on^(0+256),w
 13818     0C11  0652               	xorwf	??_position_led_strip^(0+256),w
 13819     0C12                     u5855:
 13820     0C12  1D03               	skipz
 13821     0C13  2C15               	goto	u5851
 13822     0C14  2C16               	goto	u5850
 13823     0C15                     u5851:
 13824     0C15  2C22               	goto	l5055
 13825     0C16                     u5850:
 13826     0C16                     l5051:
 13827                           
 13828                           ;ledstrip.c: 97:             sendLedstripFrame(0x44, 0x44, 0x44, 0x05);
 13829     0C16  3044               	movlw	68
 13830     0C17  0021               	movlb	1	; select bank1
 13831     0C18  00A1               	movwf	sendLedstripFrame@green^(0+128)
 13832     0C19  3044               	movlw	68
 13833     0C1A  00A2               	movwf	sendLedstripFrame@blue^(0+128)
 13834     0C1B  3005               	movlw	5
 13835     0C1C  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13836     0C1D  3044               	movlw	68
 13837     0C1E  319D  25F5  318B   	fcall	_sendLedstripFrame
 13838     0C21  2C05               	goto	l5047
 13839     0C22                     l5055:
 13840     0C22  0857               	movf	position_led_strip@led^(0+256),w
 13841     0C23  00D2               	movwf	??_position_led_strip^(0+256)
 13842     0C24  01D3               	clrf	(??_position_led_strip^(0+256)+1)
 13843     0C25  0856               	movf	(position_led_strip@target+1)^(0+256),w
 13844     0C26  0653               	xorwf	(??_position_led_strip+1)^(0+256),w
 13845     0C27  1D03               	skipz
 13846     0C28  2C2B               	goto	u5865
 13847     0C29  0855               	movf	position_led_strip@target^(0+256),w
 13848     0C2A  0652               	xorwf	??_position_led_strip^(0+256),w
 13849     0C2B                     u5865:
 13850     0C2B  1D03               	skipz
 13851     0C2C  2C2E               	goto	u5861
 13852     0C2D  2C2F               	goto	u5860
 13853     0C2E                     u5861:
 13854     0C2E  2C39               	goto	l5061
 13855     0C2F                     u5860:
 13856     0C2F                     l5057:
 13857                           
 13858                           ;ledstrip.c: 100:             sendLedstripFrame(0xFF, 0x00, 0x00, 0x05);
 13859     0C2F  0021               	movlb	1	; select bank1
 13860     0C30  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13861     0C31  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13862     0C32  3005               	movlw	5
 13863     0C33  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13864     0C34  30FF               	movlw	255
 13865     0C35  319D  25F5  318B   	fcall	_sendLedstripFrame
 13866     0C38  2C05               	goto	l5047
 13867     0C39                     l5061:
 13868                           
 13869                           ;ledstrip.c: 103:             sendLedstripFrame(0x00, 0x00, 0x00, 0x05);
 13870     0C39  0021               	movlb	1	; select bank1
 13871     0C3A  01A1               	clrf	sendLedstripFrame@green^(0+128)
 13872     0C3B  01A2               	clrf	sendLedstripFrame@blue^(0+128)
 13873     0C3C  3005               	movlw	5
 13874     0C3D  00A3               	movwf	sendLedstripFrame@intensity^(0+128)
 13875     0C3E  3000               	movlw	0
 13876     0C3F  319D  25F5  318B   	fcall	_sendLedstripFrame
 13877     0C42  2C05               	goto	l5047
 13878     0C43                     l5065:
 13879                           
 13880                           ;ledstrip.c: 106:     }
 13881     0C43  3001               	movlw	1
 13882     0C44  0022               	movlb	2	; select bank2
 13883     0C45  07D7               	addwf	position_led_strip@led^(0+256),f
 13884     0C46                     l5067:
 13885     0C46  303B               	movlw	59
 13886     0C47  0257               	subwf	position_led_strip@led^(0+256),w
 13887     0C48  1C03               	skipc
 13888     0C49  2C4B               	goto	u5871
 13889     0C4A  2C4C               	goto	u5870
 13890     0C4B                     u5871:
 13891     0C4B  2B83               	goto	l5025
 13892     0C4C                     u5870:
 13893     0C4C                     l5069:
 13894                           
 13895                           ;ledstrip.c: 108:     sendLedstripEndFrame();
 13896     0C4C  319D  25DC  318B   	fcall	_sendLedstripEndFrame
 13897     0C4F                     l1023:
 13898     0C4F  0008               	return
 13899     0C50                     __end_of_position_led_strip:
 13900                           
 13901                           	psect	text45
 13902     1DB1                     __ptext45:	
 13903 ;; *************** function _sendLedstripStartFrame *****************
 13904 ;; Defined at:
 13905 ;;		line 6 in file "ledstrip.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;		None
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;		None
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  1    wreg      void 
 13912 ;; Registers used:
 13913 ;;		wreg, status,2, status,0, pclath, cstack
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;Total ram usage:        0 bytes
 13924 ;; Hardware stack levels used: 1
 13925 ;; Hardware stack levels required when called: 6
 13926 ;; This function calls:
 13927 ;;		_SPI1_ByteExchange
 13928 ;; This function is called by:
 13929 ;;		_position_led_strip
 13930 ;;		_dutycycle_led_strip
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934     1DB1                     _sendLedstripStartFrame:	
 13935                           ;psect for function _sendLedstripStartFrame
 13936                           
 13937     1DB1                     l4919:	
 13938                           ;incstack = 0
 13939                           ; Regs used in _sendLedstripStartFrame: [wreg+status,2+status,0+pclath+cstack]
 13940                           
 13941                           
 13942                           ;ledstrip.c: 8:     SPI1_ByteExchange(0x00);
 13943     1DB1  0021               	movlb	1	; select bank1
 13944     1DB2  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13945     1DB3  319C  248F  319D   	fcall	_SPI1_ByteExchange
 13946                           
 13947                           ;ledstrip.c: 9:     SPI1_ByteExchange(0x00);
 13948     1DB6  0021               	movlb	1	; select bank1
 13949     1DB7  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13950     1DB8  319C  248F  319D   	fcall	_SPI1_ByteExchange
 13951                           
 13952                           ;ledstrip.c: 10:     SPI1_ByteExchange(0x00);
 13953     1DBB  0021               	movlb	1	; select bank1
 13954     1DBC  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13955     1DBD  319C  248F  319D   	fcall	_SPI1_ByteExchange
 13956                           
 13957                           ;ledstrip.c: 11:     SPI1_ByteExchange(0x00);
 13958     1DC0  0021               	movlb	1	; select bank1
 13959     1DC1  01A0               	clrf	SPI1_ByteExchange@byteData^(0+128)
 13960     1DC2  319C  248F  319D   	fcall	_SPI1_ByteExchange
 13961     1DC5                     l983:
 13962     1DC5  0008               	return
 13963     1DC6                     __end_of_sendLedstripStartFrame:
 13964                           
 13965                           	psect	text46
 13966     1DF5                     __ptext46:	
 13967 ;; *************** function _sendLedstripFrame *****************
 13968 ;; Defined at:
 13969 ;;		line 22 in file "ledstrip.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  red             1    wreg     unsigned char 
 13972 ;;  green           1    1[BANK1 ] unsigned char 
 13973 ;;  blue            1    2[BANK1 ] unsigned char 
 13974 ;;  intensity       1    3[BANK1 ] unsigned char 
 13975 ;; Auto vars:     Size  Location     Type
 13976 ;;  red             1    4[BANK1 ] unsigned char 
 13977 ;; Return value:  Size  Location     Type
 13978 ;;                  1    wreg      void 
 13979 ;; Registers used:
 13980 ;;		wreg, status,2, status,0, pclath, cstack
 13981 ;; Tracked objects:
 13982 ;;		On entry : 0/0
 13983 ;;		On exit  : 0/0
 13984 ;;		Unchanged: 0/0
 13985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13986 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13989 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13990 ;;Total ram usage:        4 bytes
 13991 ;; Hardware stack levels used: 1
 13992 ;; Hardware stack levels required when called: 6
 13993 ;; This function calls:
 13994 ;;		_SPI1_ByteExchange
 13995 ;; This function is called by:
 13996 ;;		_position_led_strip
 13997 ;;		_dutycycle_led_strip
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001     1DF5                     _sendLedstripFrame:	
 14002                           ;psect for function _sendLedstripFrame
 14003                           
 14004                           
 14005                           ;incstack = 0
 14006                           ; Regs used in _sendLedstripFrame: [wreg+status,2+status,0+pclath+cstack]
 14007                           ;sendLedstripFrame@red stored from wreg
 14008     1DF5  0021               	movlb	1	; select bank1
 14009     1DF6  00A4               	movwf	sendLedstripFrame@red^(0+128)
 14010     1DF7                     l4923:
 14011                           
 14012                           ;ledstrip.c: 23:     SPI1_ByteExchange(0xE0 | intensity);
 14013     1DF7  0823               	movf	sendLedstripFrame@intensity^(0+128),w
 14014     1DF8  38E0               	iorlw	224
 14015     1DF9  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14016     1DFA  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14017                           
 14018                           ;ledstrip.c: 25:     SPI1_ByteExchange(blue);
 14019     1DFD  0021               	movlb	1	; select bank1
 14020     1DFE  0822               	movf	sendLedstripFrame@blue^(0+128),w
 14021     1DFF  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14022     1E00  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14023                           
 14024                           ;ledstrip.c: 26:     SPI1_ByteExchange(green);
 14025     1E03  0021               	movlb	1	; select bank1
 14026     1E04  0821               	movf	sendLedstripFrame@green^(0+128),w
 14027     1E05  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14028     1E06  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14029                           
 14030                           ;ledstrip.c: 27:     SPI1_ByteExchange(red);
 14031     1E09  0021               	movlb	1	; select bank1
 14032     1E0A  0824               	movf	sendLedstripFrame@red^(0+128),w
 14033     1E0B  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14034     1E0C  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14035     1E0F                     l989:
 14036     1E0F  0008               	return
 14037     1E10                     __end_of_sendLedstripFrame:
 14038                           
 14039                           	psect	text47
 14040     1DDC                     __ptext47:	
 14041 ;; *************** function _sendLedstripEndFrame *****************
 14042 ;; Defined at:
 14043 ;;		line 14 in file "ledstrip.c"
 14044 ;; Parameters:    Size  Location     Type
 14045 ;;		None
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;		None
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  1    wreg      void 
 14050 ;; Registers used:
 14051 ;;		wreg, status,2, status,0, pclath, cstack
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;Total ram usage:        0 bytes
 14062 ;; Hardware stack levels used: 1
 14063 ;; Hardware stack levels required when called: 6
 14064 ;; This function calls:
 14065 ;;		_SPI1_ByteExchange
 14066 ;; This function is called by:
 14067 ;;		_position_led_strip
 14068 ;;		_dutycycle_led_strip
 14069 ;; This function uses a non-reentrant model
 14070 ;;
 14071                           
 14072     1DDC                     _sendLedstripEndFrame:	
 14073                           ;psect for function _sendLedstripEndFrame
 14074                           
 14075     1DDC                     l4921:	
 14076                           ;incstack = 0
 14077                           ; Regs used in _sendLedstripEndFrame: [wreg+status,2+status,0+pclath+cstack]
 14078                           
 14079                           
 14080                           ;ledstrip.c: 16:     SPI1_ByteExchange(0xFF);
 14081     1DDC  30FF               	movlw	255
 14082     1DDD  0021               	movlb	1	; select bank1
 14083     1DDE  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14084     1DDF  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14085                           
 14086                           ;ledstrip.c: 17:     SPI1_ByteExchange(0xFF);
 14087     1DE2  30FF               	movlw	255
 14088     1DE3  0021               	movlb	1	; select bank1
 14089     1DE4  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14090     1DE5  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14091                           
 14092                           ;ledstrip.c: 18:     SPI1_ByteExchange(0xFF);
 14093     1DE8  30FF               	movlw	255
 14094     1DE9  0021               	movlb	1	; select bank1
 14095     1DEA  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14096     1DEB  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14097                           
 14098                           ;ledstrip.c: 19:     SPI1_ByteExchange(0xFF);
 14099     1DEE  30FF               	movlw	255
 14100     1DEF  0021               	movlb	1	; select bank1
 14101     1DF0  00A0               	movwf	SPI1_ByteExchange@byteData^(0+128)
 14102     1DF1  319C  248F  319D   	fcall	_SPI1_ByteExchange
 14103     1DF4                     l986:
 14104     1DF4  0008               	return
 14105     1DF5                     __end_of_sendLedstripEndFrame:
 14106                           
 14107                           	psect	text48
 14108     1C8F                     __ptext48:	
 14109 ;; *************** function _SPI1_ByteExchange *****************
 14110 ;; Defined at:
 14111 ;;		line 160 in file "mcc_generated_files/spi/src/mssp1.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  byteData        1    0[BANK1 ] unsigned char 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      unsigned char 
 14118 ;; Registers used:
 14119 ;;		wreg
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14125 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14128 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;Total ram usage:        1 bytes
 14130 ;; Hardware stack levels used: 1
 14131 ;; Hardware stack levels required when called: 5
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_sendLedstripStartFrame
 14136 ;;		_sendLedstripEndFrame
 14137 ;;		_sendLedstripFrame
 14138 ;; This function uses a non-reentrant model
 14139 ;;
 14140                           
 14141     1C8F                     _SPI1_ByteExchange:	
 14142                           ;psect for function _SPI1_ByteExchange
 14143                           
 14144     1C8F                     l4429:	
 14145                           ;incstack = 0
 14146                           ; Regs used in _SPI1_ByteExchange: [wreg]
 14147                           
 14148                           
 14149                           ;mcc_generated_files/spi/src/mssp1.c: 160: uint8_t SPI1_ByteExchange(uint8_t byteData);m
      +                          cc_generated_files/spi/src/mssp1.c: 161: {;mcc_generated_files/spi/src/mssp1.c: 162:    
      +                           SSP1BUF = byteData;
 14150     1C8F  0021               	movlb	1	; select bank1
 14151     1C90  0820               	movf	SPI1_ByteExchange@byteData^(0+128),w
 14152     1C91  0024               	movlb	4	; select bank4
 14153     1C92  0091               	movwf	17	;volatile
 14154     1C93                     l160:	
 14155                           ;mcc_generated_files/spi/src/mssp1.c: 164:     {;mcc_generated_files/spi/src/mssp1.c: 16
      +                          6:     }
 14156                           
 14157                           
 14158                           ;mcc_generated_files/spi/src/mssp1.c: 163:     while (!PIR1bits.SSP1IF)
 14159     1C93  0020               	movlb	0	; select bank0
 14160     1C94  1D91               	btfss	17,3	;volatile
 14161     1C95  2C97               	goto	u4621
 14162     1C96  2C98               	goto	u4620
 14163     1C97                     u4621:
 14164     1C97  2C93               	goto	l160
 14165     1C98                     u4620:
 14166     1C98                     l162:
 14167                           
 14168                           ;mcc_generated_files/spi/src/mssp1.c: 167:     PIR1bits.SSP1IF = 0;
 14169     1C98  1191               	bcf	17,3	;volatile
 14170     1C99                     l4431:
 14171                           
 14172                           ;mcc_generated_files/spi/src/mssp1.c: 168:     return SSP1BUF;;	Return value of _SPI1_By
      +                          teExchange is never used
 14173     1C99  0024               	movlb	4	; select bank4
 14174     1C9A  0811               	movf	17,w	;volatile
 14175     1C9B                     l163:
 14176     1C9B  0008               	return
 14177     1C9C                     __end_of_SPI1_ByteExchange:
 14178                           
 14179                           	psect	text49
 14180     1C02                     __ptext49:	
 14181 ;; *************** function _getSetpoint *****************
 14182 ;; Defined at:
 14183 ;;		line 39 in file "controller.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;		None
 14186 ;; Auto vars:     Size  Location     Type
 14187 ;;		None
 14188 ;; Return value:  Size  Location     Type
 14189 ;;                  2    0[BANK1 ] unsigned short 
 14190 ;; Registers used:
 14191 ;;		wreg
 14192 ;; Tracked objects:
 14193 ;;		On entry : 0/0
 14194 ;;		On exit  : 0/0
 14195 ;;		Unchanged: 0/0
 14196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14197 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14200 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14201 ;;Total ram usage:        2 bytes
 14202 ;; Hardware stack levels used: 1
 14203 ;; Hardware stack levels required when called: 5
 14204 ;; This function calls:
 14205 ;;		Nothing
 14206 ;; This function is called by:
 14207 ;;		_printLogs
 14208 ;;		_position_led_strip
 14209 ;; This function uses a non-reentrant model
 14210 ;;
 14211                           
 14212     1C02                     _getSetpoint:	
 14213                           ;psect for function _getSetpoint
 14214                           
 14215     1C02                     l4915:	
 14216                           ;incstack = 0
 14217                           ; Regs used in _getSetpoint: [wreg]
 14218                           
 14219     1C02  0020               	movlb	0	; select bank0
 14220     1C03  086D               	movf	_setpoint+1,w
 14221     1C04  0021               	movlb	1	; select bank1
 14222     1C05  00A1               	movwf	(?_getSetpoint+1)^(0+128)
 14223     1C06  0020               	movlb	0	; select bank0
 14224     1C07  086C               	movf	_setpoint,w
 14225     1C08  0021               	movlb	1	; select bank1
 14226     1C09  00A0               	movwf	?_getSetpoint^(0+128)
 14227     1C0A                     l947:
 14228     1C0A  0008               	return
 14229     1C0B                     __end_of_getSetpoint:
 14230                           
 14231                           	psect	text50
 14232     11DA                     __ptext50:	
 14233 ;; *************** function _getLedNumber *****************
 14234 ;; Defined at:
 14235 ;;		line 33 in file "ledstrip.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;  height          2   78[BANK1 ] unsigned short 
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;  result          4    0[BANK2 ] float 
 14240 ;; Return value:  Size  Location     Type
 14241 ;;                  2   78[BANK1 ] int 
 14242 ;; Registers used:
 14243 ;;		wreg, status,2, status,0, pclath, cstack
 14244 ;; Tracked objects:
 14245 ;;		On entry : 0/0
 14246 ;;		On exit  : 0/0
 14247 ;;		Unchanged: 0/0
 14248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14249 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14250 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 14251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14252 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0
 14253 ;;Total ram usage:        6 bytes
 14254 ;; Hardware stack levels used: 1
 14255 ;; Hardware stack levels required when called: 7
 14256 ;; This function calls:
 14257 ;;		___fladd
 14258 ;;		___flmul
 14259 ;;		___fltol
 14260 ;;		___xxtofl
 14261 ;; This function is called by:
 14262 ;;		_position_led_strip
 14263 ;; This function uses a non-reentrant model
 14264 ;;
 14265                           
 14266     11DA                     _getLedNumber:	
 14267                           ;psect for function _getLedNumber
 14268                           
 14269     11DA                     l4925:	
 14270                           ;incstack = 0
 14271                           ; Regs used in _getLedNumber: [wreg+status,2+status,0+pclath+cstack]
 14272                           
 14273                           
 14274                           ;ledstrip.c: 34:     float result = (0.068104825 * height - 5.4876957494);
 14275     11DA  30C0               	movlw	192
 14276     11DB  0021               	movlb	1	; select bank1
 14277     11DC  00B1               	movwf	(___fladd@b+3)^(0+128)
 14278     11DD  30AF               	movlw	175
 14279     11DE  00B0               	movwf	(___fladd@b+2)^(0+128)
 14280     11DF  309B               	movlw	155
 14281     11E0  00AF               	movwf	(___fladd@b+1)^(0+128)
 14282     11E1  3034               	movlw	52
 14283     11E2  00AE               	movwf	___fladd@b^(0+128)
 14284     11E3  303D               	movlw	61
 14285     11E4  00CD               	movwf	(___flmul@b+3)^(0+128)
 14286     11E5  308B               	movlw	139
 14287     11E6  00CC               	movwf	(___flmul@b+2)^(0+128)
 14288     11E7  307A               	movlw	122
 14289     11E8  00CB               	movwf	(___flmul@b+1)^(0+128)
 14290     11E9  308B               	movlw	139
 14291     11EA  00CA               	movwf	___flmul@b^(0+128)
 14292     11EB  086E               	movf	getLedNumber@height^(0+128),w
 14293     11EC  00A0               	movwf	___xxtofl@val^(0+128)
 14294     11ED  086F               	movf	(getLedNumber@height+1)^(0+128),w
 14295     11EE  00A1               	movwf	(___xxtofl@val^(0+128)+1)
 14296     11EF  01A2               	clrf	(___xxtofl@val^(0+128)+2)
 14297     11F0  01A3               	clrf	(___xxtofl@val^(0+128)+3)
 14298     11F1  3000               	movlw	0
 14299     11F2  3196  26B0  3191   	fcall	___xxtofl
 14300     11F5  0021               	movlb	1	; select bank1
 14301     11F6  0823               	movf	(?___xxtofl+3)^(0+128),w
 14302     11F7  00D1               	movwf	(___flmul@a+3)^(0+128)
 14303     11F8  0822               	movf	(?___xxtofl+2)^(0+128),w
 14304     11F9  00D0               	movwf	(___flmul@a+2)^(0+128)
 14305     11FA  0821               	movf	(?___xxtofl+1)^(0+128),w
 14306     11FB  00CF               	movwf	(___flmul@a+1)^(0+128)
 14307     11FC  0820               	movf	?___xxtofl^(0+128),w
 14308     11FD  00CE               	movwf	___flmul@a^(0+128)
 14309     11FE  3180  208E  3191   	fcall	___flmul
 14310     1201  0021               	movlb	1	; select bank1
 14311     1202  084D               	movf	(?___flmul+3)^(0+128),w
 14312     1203  00B5               	movwf	(___fladd@a+3)^(0+128)
 14313     1204  084C               	movf	(?___flmul+2)^(0+128),w
 14314     1205  00B4               	movwf	(___fladd@a+2)^(0+128)
 14315     1206  084B               	movf	(?___flmul+1)^(0+128),w
 14316     1207  00B3               	movwf	(___fladd@a+1)^(0+128)
 14317     1208  084A               	movf	?___flmul^(0+128),w
 14318     1209  00B2               	movwf	___fladd@a^(0+128)
 14319     120A  3185  2504  3191   	fcall	___fladd
 14320     120D  0021               	movlb	1	; select bank1
 14321     120E  0831               	movf	(?___fladd+3)^(0+128),w
 14322     120F  0022               	movlb	2	; select bank2
 14323     1210  00D1               	movwf	(getLedNumber@result+3)^(0+256)
 14324     1211  0021               	movlb	1	; select bank1
 14325     1212  0830               	movf	(?___fladd+2)^(0+128),w
 14326     1213  0022               	movlb	2	; select bank2
 14327     1214  00D0               	movwf	(getLedNumber@result+2)^(0+256)
 14328     1215  0021               	movlb	1	; select bank1
 14329     1216  082F               	movf	(?___fladd+1)^(0+128),w
 14330     1217  0022               	movlb	2	; select bank2
 14331     1218  00CF               	movwf	(getLedNumber@result+1)^(0+256)
 14332     1219  0021               	movlb	1	; select bank1
 14333     121A  082E               	movf	?___fladd^(0+128),w
 14334     121B  0022               	movlb	2	; select bank2
 14335     121C  00CE               	movwf	getLedNumber@result^(0+256)
 14336                           
 14337                           ;ledstrip.c: 35:     return result;
 14338     121D  0851               	movf	(getLedNumber@result+3)^(0+256),w
 14339     121E  0021               	movlb	1	; select bank1
 14340     121F  00E7               	movwf	(___fltol@f1+3)^(0+128)
 14341     1220  0022               	movlb	2	; select bank2
 14342     1221  0850               	movf	(getLedNumber@result+2)^(0+256),w
 14343     1222  0021               	movlb	1	; select bank1
 14344     1223  00E6               	movwf	(___fltol@f1+2)^(0+128)
 14345     1224  0022               	movlb	2	; select bank2
 14346     1225  084F               	movf	(getLedNumber@result+1)^(0+256),w
 14347     1226  0021               	movlb	1	; select bank1
 14348     1227  00E5               	movwf	(___fltol@f1+1)^(0+128)
 14349     1228  0022               	movlb	2	; select bank2
 14350     1229  084E               	movf	getLedNumber@result^(0+256),w
 14351     122A  0021               	movlb	1	; select bank1
 14352     122B  00E4               	movwf	___fltol@f1^(0+128)
 14353     122C  3193  23BA  3191   	fcall	___fltol
 14354     122F  0021               	movlb	1	; select bank1
 14355     1230  0865               	movf	(?___fltol+1)^(0+128),w
 14356     1231  00EF               	movwf	(?_getLedNumber+1)^(0+128)
 14357     1232  0864               	movf	?___fltol^(0+128),w
 14358     1233  00EE               	movwf	?_getLedNumber^(0+128)
 14359     1234                     l992:
 14360     1234  0008               	return
 14361     1235                     __end_of_getLedNumber:
 14362                           
 14363                           	psect	text51
 14364     16B0                     __ptext51:	
 14365 ;; *************** function ___xxtofl *****************
 14366 ;; Defined at:
 14367 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;  sign            1    wreg     unsigned char 
 14370 ;;  val             4    0[BANK1 ] long 
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;  sign            1    8[BANK1 ] unsigned char 
 14373 ;;  arg             4   10[BANK1 ] unsigned long 
 14374 ;;  exp             1    9[BANK1 ] unsigned char 
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  4    0[BANK1 ] unsigned char 
 14377 ;; Registers used:
 14378 ;;		wreg, status,2, status,0
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14384 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14387 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 14388 ;;Total ram usage:       14 bytes
 14389 ;; Hardware stack levels used: 1
 14390 ;; Hardware stack levels required when called: 5
 14391 ;; This function calls:
 14392 ;;		Nothing
 14393 ;; This function is called by:
 14394 ;;		_printFloat
 14395 ;;		_str2float
 14396 ;;		_getLedNumber
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400     16B0                     ___xxtofl:	
 14401                           ;psect for function ___xxtofl
 14402                           
 14403                           
 14404                           ;incstack = 0
 14405                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14406                           ;___xxtofl@sign stored from wreg
 14407     16B0  0021               	movlb	1	; select bank1
 14408     16B1  00A8               	movwf	___xxtofl@sign^(0+128)
 14409     16B2                     l4807:
 14410     16B2  0828               	movf	___xxtofl@sign^(0+128),w
 14411     16B3  1903               	btfsc	3,2
 14412     16B4  2EB6               	goto	u5461
 14413     16B5  2EB7               	goto	u5460
 14414     16B6                     u5461:
 14415     16B6  2ECB               	goto	l4813
 14416     16B7                     u5460:
 14417     16B7                     l4809:
 14418     16B7  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 14419     16B8  2EBA               	goto	u5471
 14420     16B9  2EBB               	goto	u5470
 14421     16BA                     u5471:
 14422     16BA  2ECB               	goto	l4813
 14423     16BB                     u5470:
 14424     16BB                     l4811:
 14425     16BB  0920               	comf	___xxtofl@val^(0+128),w
 14426     16BC  00AA               	movwf	___xxtofl@arg^(0+128)
 14427     16BD  0921               	comf	(___xxtofl@val^(0+128)+1),w
 14428     16BE  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 14429     16BF  0922               	comf	(___xxtofl@val^(0+128)+2),w
 14430     16C0  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 14431     16C1  0923               	comf	(___xxtofl@val^(0+128)+3),w
 14432     16C2  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 14433     16C3  0AAA               	incf	___xxtofl@arg^(0+128),f
 14434     16C4  1903               	skipnz
 14435     16C5  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
 14436     16C6  1903               	skipnz
 14437     16C7  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
 14438     16C8  1903               	skipnz
 14439     16C9  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
 14440     16CA  2ED3               	goto	l1622
 14441     16CB                     l4813:
 14442     16CB  0823               	movf	(___xxtofl@val+3)^(0+128),w
 14443     16CC  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
 14444     16CD  0822               	movf	(___xxtofl@val+2)^(0+128),w
 14445     16CE  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
 14446     16CF  0821               	movf	(___xxtofl@val+1)^(0+128),w
 14447     16D0  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
 14448     16D1  0820               	movf	___xxtofl@val^(0+128),w
 14449     16D2  00AA               	movwf	___xxtofl@arg^(0+128)
 14450     16D3                     l1622:
 14451     16D3  0823               	movf	(___xxtofl@val+3)^(0+128),w
 14452     16D4  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
 14453     16D5  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
 14454     16D6  0420               	iorwf	___xxtofl@val^(0+128),w
 14455     16D7  1D03               	skipz
 14456     16D8  2EDA               	goto	u5481
 14457     16D9  2EDB               	goto	u5480
 14458     16DA                     u5481:
 14459     16DA  2EE4               	goto	l1623
 14460     16DB                     u5480:
 14461     16DB                     l4815:
 14462     16DB  3000               	movlw	0
 14463     16DC  00A3               	movwf	(?___xxtofl+3)^(0+128)
 14464     16DD  3000               	movlw	0
 14465     16DE  00A2               	movwf	(?___xxtofl+2)^(0+128)
 14466     16DF  3000               	movlw	0
 14467     16E0  00A1               	movwf	(?___xxtofl+1)^(0+128)
 14468     16E1  3000               	movlw	0
 14469     16E2  00A0               	movwf	?___xxtofl^(0+128)
 14470     16E3  2F54               	goto	l1624
 14471     16E4                     l1623:
 14472     16E4  3096               	movlw	150
 14473     16E5  00A9               	movwf	___xxtofl@exp^(0+128)
 14474     16E6  2EF0               	goto	l4821
 14475     16E7                     l4819:
 14476     16E7  3001               	movlw	1
 14477     16E8  07A9               	addwf	___xxtofl@exp^(0+128),f
 14478     16E9  3001               	movlw	1
 14479     16EA                     u5495:
 14480     16EA  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 14481     16EB  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 14482     16EC  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 14483     16ED  0CAA               	rrf	___xxtofl@arg^(0+128),f
 14484     16EE  0B89               	decfsz	9,f
 14485     16EF  2EEA               	goto	u5495
 14486     16F0                     l4821:
 14487     16F0  30FE               	movlw	254
 14488     16F1  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 14489     16F2  1D03               	btfss	3,2
 14490     16F3  2EF5               	goto	u5501
 14491     16F4  2EF6               	goto	u5500
 14492     16F5                     u5501:
 14493     16F5  2EE7               	goto	l4819
 14494     16F6                     u5500:
 14495     16F6  2F06               	goto	l4825
 14496     16F7                     l4823:
 14497     16F7  3001               	movlw	1
 14498     16F8  07A9               	addwf	___xxtofl@exp^(0+128),f
 14499     16F9  3001               	movlw	1
 14500     16FA  07AA               	addwf	___xxtofl@arg^(0+128),f
 14501     16FB  3000               	movlw	0
 14502     16FC  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
 14503     16FD  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
 14504     16FE  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
 14505     16FF  3001               	movlw	1
 14506     1700                     u5515:
 14507     1700  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
 14508     1701  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
 14509     1702  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
 14510     1703  0CAA               	rrf	___xxtofl@arg^(0+128),f
 14511     1704  0B89               	decfsz	9,f
 14512     1705  2F00               	goto	u5515
 14513     1706                     l4825:
 14514     1706  30FF               	movlw	255
 14515     1707  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
 14516     1708  1D03               	btfss	3,2
 14517     1709  2F0B               	goto	u5521
 14518     170A  2F0C               	goto	u5520
 14519     170B                     u5521:
 14520     170B  2EF7               	goto	l4823
 14521     170C                     u5520:
 14522     170C  2F16               	goto	l4829
 14523     170D                     l4827:
 14524     170D  3001               	movlw	1
 14525     170E  02A9               	subwf	___xxtofl@exp^(0+128),f
 14526     170F  3001               	movlw	1
 14527     1710                     u5535:
 14528     1710  35AA               	lslf	___xxtofl@arg^(0+128),f
 14529     1711  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
 14530     1712  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
 14531     1713  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
 14532     1714  0B89               	decfsz	9,f
 14533     1715  2F10               	goto	u5535
 14534     1716                     l4829:
 14535     1716  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
 14536     1717  2F19               	goto	u5541
 14537     1718  2F1A               	goto	u5540
 14538     1719                     u5541:
 14539     1719  2F20               	goto	l1635
 14540     171A                     u5540:
 14541     171A                     l4831:
 14542     171A  3002               	movlw	2
 14543     171B  0229               	subwf	___xxtofl@exp^(0+128),w
 14544     171C  1803               	skipnc
 14545     171D  2F1F               	goto	u5551
 14546     171E  2F20               	goto	u5550
 14547     171F                     u5551:
 14548     171F  2F0D               	goto	l4827
 14549     1720                     u5550:
 14550     1720                     l1635:
 14551     1720  1829               	btfsc	___xxtofl@exp^(0+128),0
 14552     1721  2F23               	goto	u5561
 14553     1722  2F24               	goto	u5560
 14554     1723                     u5561:
 14555     1723  2F2C               	goto	l1636
 14556     1724                     u5560:
 14557     1724                     l4833:
 14558     1724  30FF               	movlw	255
 14559     1725  05AA               	andwf	___xxtofl@arg^(0+128),f
 14560     1726  30FF               	movlw	255
 14561     1727  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
 14562     1728  307F               	movlw	127
 14563     1729  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
 14564     172A  30FF               	movlw	255
 14565     172B  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
 14566     172C                     l1636:
 14567     172C  1003               	clrc
 14568     172D  0CA9               	rrf	___xxtofl@exp^(0+128),f
 14569     172E                     l4835:
 14570     172E  0829               	movf	___xxtofl@exp^(0+128),w
 14571     172F  00A4               	movwf	??___xxtofl^(0+128)
 14572     1730  01A5               	clrf	(??___xxtofl^(0+128)+1)
 14573     1731  01A6               	clrf	(??___xxtofl^(0+128)+2)
 14574     1732  01A7               	clrf	(??___xxtofl^(0+128)+3)
 14575     1733  3018               	movlw	24
 14576     1734                     u5575:
 14577     1734  35A4               	lslf	??___xxtofl^(0+128),f
 14578     1735  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
 14579     1736  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
 14580     1737  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
 14581     1738                     u5570:
 14582     1738  0B89               	decfsz	9,f
 14583     1739  2F34               	goto	u5575
 14584     173A  0824               	movf	??___xxtofl^(0+128),w
 14585     173B  04AA               	iorwf	___xxtofl@arg^(0+128),f
 14586     173C  0825               	movf	(??___xxtofl+1)^(0+128),w
 14587     173D  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
 14588     173E  0826               	movf	(??___xxtofl+2)^(0+128),w
 14589     173F  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
 14590     1740  0827               	movf	(??___xxtofl+3)^(0+128),w
 14591     1741  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
 14592     1742                     l4837:
 14593     1742  0828               	movf	___xxtofl@sign^(0+128),w
 14594     1743  1903               	btfsc	3,2
 14595     1744  2F46               	goto	u5581
 14596     1745  2F47               	goto	u5580
 14597     1746                     u5581:
 14598     1746  2F4C               	goto	l4843
 14599     1747                     u5580:
 14600     1747                     l4839:
 14601     1747  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
 14602     1748  2F4A               	goto	u5591
 14603     1749  2F4B               	goto	u5590
 14604     174A                     u5591:
 14605     174A  2F4C               	goto	l4843
 14606     174B                     u5590:
 14607     174B                     l4841:
 14608     174B  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
 14609     174C                     l4843:
 14610     174C  082D               	movf	(___xxtofl@arg+3)^(0+128),w
 14611     174D  00A3               	movwf	(?___xxtofl+3)^(0+128)
 14612     174E  082C               	movf	(___xxtofl@arg+2)^(0+128),w
 14613     174F  00A2               	movwf	(?___xxtofl+2)^(0+128)
 14614     1750  082B               	movf	(___xxtofl@arg+1)^(0+128),w
 14615     1751  00A1               	movwf	(?___xxtofl+1)^(0+128)
 14616     1752  082A               	movf	___xxtofl@arg^(0+128),w
 14617     1753  00A0               	movwf	?___xxtofl^(0+128)
 14618     1754                     l1624:
 14619     1754  0008               	return
 14620     1755                     __end_of___xxtofl:
 14621                           
 14622                           	psect	text52
 14623     13BA                     __ptext52:	
 14624 ;; *************** function ___fltol *****************
 14625 ;; Defined at:
 14626 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;  f1              4   68[BANK1 ] unsigned char 
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;  exp1            1   77[BANK1 ] unsigned char 
 14631 ;;  sign1           1   76[BANK1 ] unsigned char 
 14632 ;; Return value:  Size  Location     Type
 14633 ;;                  4   68[BANK1 ] long 
 14634 ;; Registers used:
 14635 ;;		wreg, status,2, status,0
 14636 ;; Tracked objects:
 14637 ;;		On entry : 0/0
 14638 ;;		On exit  : 0/0
 14639 ;;		Unchanged: 0/0
 14640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14641 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14642 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14643 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;Total ram usage:       10 bytes
 14646 ;; Hardware stack levels used: 1
 14647 ;; Hardware stack levels required when called: 5
 14648 ;; This function calls:
 14649 ;;		Nothing
 14650 ;; This function is called by:
 14651 ;;		_printFloat
 14652 ;;		_getLedNumber
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656     13BA                     ___fltol:	
 14657                           ;psect for function ___fltol
 14658                           
 14659     13BA                     l4435:	
 14660                           ;incstack = 0
 14661                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14662                           
 14663     13BA  1003               	clrc
 14664     13BB  0021               	movlb	1	; select bank1
 14665     13BC  0D66               	rlf	(___fltol@f1+2)^(0+128),w
 14666     13BD  0D67               	rlf	(___fltol@f1+3)^(0+128),w
 14667     13BE  00ED               	movwf	___fltol@exp1^(0+128)
 14668     13BF  086D               	movf	___fltol@exp1^(0+128),w
 14669     13C0  1D03               	btfss	3,2
 14670     13C1  2BC3               	goto	u4631
 14671     13C2  2BC4               	goto	u4630
 14672     13C3                     u4631:
 14673     13C3  2BCD               	goto	l4441
 14674     13C4                     u4630:
 14675     13C4                     l4437:
 14676     13C4  3000               	movlw	0
 14677     13C5  00E7               	movwf	(?___fltol+3)^(0+128)
 14678     13C6  3000               	movlw	0
 14679     13C7  00E6               	movwf	(?___fltol+2)^(0+128)
 14680     13C8  3000               	movlw	0
 14681     13C9  00E5               	movwf	(?___fltol+1)^(0+128)
 14682     13CA  3000               	movlw	0
 14683     13CB  00E4               	movwf	?___fltol^(0+128)
 14684     13CC  2C28               	goto	l1375
 14685     13CD                     l4441:
 14686     13CD  0864               	movf	___fltol@f1^(0+128),w
 14687     13CE  00E8               	movwf	??___fltol^(0+128)
 14688     13CF  0865               	movf	(___fltol@f1+1)^(0+128),w
 14689     13D0  00E9               	movwf	(??___fltol^(0+128)+1)
 14690     13D1  0866               	movf	(___fltol@f1+2)^(0+128),w
 14691     13D2  00EA               	movwf	(??___fltol^(0+128)+2)
 14692     13D3  0867               	movf	(___fltol@f1+3)^(0+128),w
 14693     13D4  00EB               	movwf	(??___fltol^(0+128)+3)
 14694     13D5  301F               	movlw	31
 14695     13D6                     u4645:
 14696     13D6  36EB               	lsrf	(??___fltol^(0+128)+3),f
 14697     13D7  0CEA               	rrf	(??___fltol^(0+128)+2),f
 14698     13D8  0CE9               	rrf	(??___fltol^(0+128)+1),f
 14699     13D9  0CE8               	rrf	??___fltol^(0+128),f
 14700     13DA                     u4640:
 14701     13DA  0B89               	decfsz	9,f
 14702     13DB  2BD6               	goto	u4645
 14703     13DC  0868               	movf	??___fltol^(0+128),w
 14704     13DD  00EC               	movwf	___fltol@sign1^(0+128)
 14705     13DE                     l4443:
 14706     13DE  17E6               	bsf	(___fltol@f1^(0+128)+2),7
 14707     13DF                     l4445:
 14708     13DF  30FF               	movlw	255
 14709     13E0  05E4               	andwf	___fltol@f1^(0+128),f
 14710     13E1  30FF               	movlw	255
 14711     13E2  05E5               	andwf	(___fltol@f1+1)^(0+128),f
 14712     13E3  30FF               	movlw	255
 14713     13E4  05E6               	andwf	(___fltol@f1+2)^(0+128),f
 14714     13E5  3000               	movlw	0
 14715     13E6  05E7               	andwf	(___fltol@f1+3)^(0+128),f
 14716     13E7                     l4447:
 14717     13E7  3096               	movlw	150
 14718     13E8  02ED               	subwf	___fltol@exp1^(0+128),f
 14719     13E9                     l4449:
 14720     13E9  1FED               	btfss	___fltol@exp1^(0+128),7
 14721     13EA  2BEC               	goto	u4651
 14722     13EB  2BED               	goto	u4650
 14723     13EC                     u4651:
 14724     13EC  2C03               	goto	l4459
 14725     13ED                     u4650:
 14726     13ED                     l4451:
 14727     13ED  086D               	movf	___fltol@exp1^(0+128),w
 14728     13EE  3A80               	xorlw	128
 14729     13EF  3E97               	addlw	151
 14730     13F0  1803               	skipnc
 14731     13F1  2BF3               	goto	u4661
 14732     13F2  2BF4               	goto	u4660
 14733     13F3                     u4661:
 14734     13F3  2BF5               	goto	l4457
 14735     13F4                     u4660:
 14736     13F4  2BC4               	goto	l4437
 14737     13F5                     l4457:
 14738     13F5  3001               	movlw	1
 14739     13F6                     u4675:
 14740     13F6  36E7               	lsrf	(___fltol@f1+3)^(0+128),f
 14741     13F7  0CE6               	rrf	(___fltol@f1+2)^(0+128),f
 14742     13F8  0CE5               	rrf	(___fltol@f1+1)^(0+128),f
 14743     13F9  0CE4               	rrf	___fltol@f1^(0+128),f
 14744     13FA  0B89               	decfsz	9,f
 14745     13FB  2BF6               	goto	u4675
 14746     13FC  3001               	movlw	1
 14747     13FD  07ED               	addwf	___fltol@exp1^(0+128),f
 14748     13FE  1D03               	btfss	3,2
 14749     13FF  2C01               	goto	u4681
 14750     1400  2C02               	goto	u4680
 14751     1401                     u4681:
 14752     1401  2BF5               	goto	l4457
 14753     1402                     u4680:
 14754     1402  2C18               	goto	l4467
 14755     1403                     l4459:
 14756     1403  3020               	movlw	32
 14757     1404  026D               	subwf	___fltol@exp1^(0+128),w
 14758     1405  1C03               	skipc
 14759     1406  2C08               	goto	u4691
 14760     1407  2C09               	goto	u4690
 14761     1408                     u4691:
 14762     1408  2C13               	goto	l1382
 14763     1409                     u4690:
 14764     1409  2BC4               	goto	l4437
 14765     140A                     l4465:
 14766     140A  3001               	movlw	1
 14767     140B                     u4705:
 14768     140B  35E4               	lslf	___fltol@f1^(0+128),f
 14769     140C  0DE5               	rlf	(___fltol@f1+1)^(0+128),f
 14770     140D  0DE6               	rlf	(___fltol@f1+2)^(0+128),f
 14771     140E  0DE7               	rlf	(___fltol@f1+3)^(0+128),f
 14772     140F  0B89               	decfsz	9,f
 14773     1410  2C0B               	goto	u4705
 14774     1411  3001               	movlw	1
 14775     1412  02ED               	subwf	___fltol@exp1^(0+128),f
 14776     1413                     l1382:
 14777     1413  086D               	movf	___fltol@exp1^(0+128),w
 14778     1414  1D03               	btfss	3,2
 14779     1415  2C17               	goto	u4711
 14780     1416  2C18               	goto	u4710
 14781     1417                     u4711:
 14782     1417  2C0A               	goto	l4465
 14783     1418                     u4710:
 14784     1418                     l4467:
 14785     1418  086C               	movf	___fltol@sign1^(0+128),w
 14786     1419  1903               	btfsc	3,2
 14787     141A  2C1C               	goto	u4721
 14788     141B  2C1D               	goto	u4720
 14789     141C                     u4721:
 14790     141C  2C28               	goto	l1385
 14791     141D                     u4720:
 14792     141D                     l4469:
 14793     141D  09E4               	comf	___fltol@f1^(0+128),f
 14794     141E  09E5               	comf	(___fltol@f1+1)^(0+128),f
 14795     141F  09E6               	comf	(___fltol@f1+2)^(0+128),f
 14796     1420  09E7               	comf	(___fltol@f1+3)^(0+128),f
 14797     1421  0AE4               	incf	___fltol@f1^(0+128),f
 14798     1422  1903               	skipnz
 14799     1423  0AE5               	incf	(___fltol@f1+1)^(0+128),f
 14800     1424  1903               	skipnz
 14801     1425  0AE6               	incf	(___fltol@f1+2)^(0+128),f
 14802     1426  1903               	skipnz
 14803     1427  0AE7               	incf	(___fltol@f1+3)^(0+128),f
 14804     1428                     l1385:
 14805     1428                     l1375:
 14806     1428  0008               	return
 14807     1429                     __end_of___fltol:
 14808                           
 14809                           	psect	text53
 14810     008E                     __ptext53:	
 14811 ;; *************** function ___flmul *****************
 14812 ;; Defined at:
 14813 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 14814 ;; Parameters:    Size  Location     Type
 14815 ;;  b               4   42[BANK1 ] long 
 14816 ;;  a               4   46[BANK1 ] long 
 14817 ;; Auto vars:     Size  Location     Type
 14818 ;;  prod            4   62[BANK1 ] struct .
 14819 ;;  grs             4   56[BANK1 ] unsigned long 
 14820 ;;  temp            2   66[BANK1 ] struct .
 14821 ;;  bexp            1   61[BANK1 ] unsigned char 
 14822 ;;  aexp            1   60[BANK1 ] unsigned char 
 14823 ;;  sign            1   55[BANK1 ] unsigned char 
 14824 ;; Return value:  Size  Location     Type
 14825 ;;                  4   42[BANK1 ] unsigned char 
 14826 ;; Registers used:
 14827 ;;		wreg, status,2, status,0, pclath, cstack
 14828 ;; Tracked objects:
 14829 ;;		On entry : 0/0
 14830 ;;		On exit  : 0/0
 14831 ;;		Unchanged: 0/0
 14832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14833 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14834 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 14835 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14836 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 14837 ;;Total ram usage:       26 bytes
 14838 ;; Hardware stack levels used: 1
 14839 ;; Hardware stack levels required when called: 6
 14840 ;; This function calls:
 14841 ;;		__Umul8_16
 14842 ;; This function is called by:
 14843 ;;		_printFloat
 14844 ;;		_str2float
 14845 ;;		_getLedNumber
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           
 14849     008E                     ___flmul:	
 14850                           ;psect for function ___flmul
 14851                           
 14852     008E                     l4667:	
 14853                           ;incstack = 0
 14854                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14855                           
 14856     008E  0021               	movlb	1	; select bank1
 14857     008F  084D               	movf	(___flmul@b^(0+128)+3),w
 14858     0090  3980               	andlw	128
 14859     0091  00D7               	movwf	___flmul@sign^(0+128)
 14860     0092                     l4669:
 14861     0092  354D               	lslf	(___flmul@b^(0+128)+3),w
 14862     0093  00DD               	movwf	___flmul@bexp^(0+128)
 14863     0094                     l4671:
 14864     0094  1FCC               	btfss	(___flmul@b^(0+128)+2),7
 14865     0095  2897               	goto	u5191
 14866     0096  2898               	goto	u5190
 14867     0097                     u5191:
 14868     0097  2899               	goto	l4675
 14869     0098                     u5190:
 14870     0098                     l4673:
 14871     0098  145D               	bsf	___flmul@bexp^(0+128),0
 14872     0099                     l4675:
 14873     0099  085D               	movf	___flmul@bexp^(0+128),w
 14874     009A  1903               	btfsc	3,2
 14875     009B  289D               	goto	u5201
 14876     009C  289E               	goto	u5200
 14877     009D                     u5201:
 14878     009D  28AD               	goto	l4683
 14879     009E                     u5200:
 14880     009E                     l4677:
 14881     009E  0A5D               	incf	___flmul@bexp^(0+128),w
 14882     009F  1D03               	btfss	3,2
 14883     00A0  28A2               	goto	u5211
 14884     00A1  28A3               	goto	u5210
 14885     00A2                     u5211:
 14886     00A2  28AB               	goto	l4681
 14887     00A3                     u5210:
 14888     00A3                     l4679:
 14889     00A3  3000               	movlw	0
 14890     00A4  00CD               	movwf	(___flmul@b+3)^(0+128)
 14891     00A5  3000               	movlw	0
 14892     00A6  00CC               	movwf	(___flmul@b+2)^(0+128)
 14893     00A7  3000               	movlw	0
 14894     00A8  00CB               	movwf	(___flmul@b+1)^(0+128)
 14895     00A9  3000               	movlw	0
 14896     00AA  00CA               	movwf	___flmul@b^(0+128)
 14897     00AB                     l4681:
 14898     00AB  17CC               	bsf	(___flmul@b^(0+128)+2),7
 14899     00AC  28B5               	goto	l4685
 14900     00AD                     l4683:
 14901     00AD  3000               	movlw	0
 14902     00AE  00CD               	movwf	(___flmul@b+3)^(0+128)
 14903     00AF  3000               	movlw	0
 14904     00B0  00CC               	movwf	(___flmul@b+2)^(0+128)
 14905     00B1  3000               	movlw	0
 14906     00B2  00CB               	movwf	(___flmul@b+1)^(0+128)
 14907     00B3  3000               	movlw	0
 14908     00B4  00CA               	movwf	___flmul@b^(0+128)
 14909     00B5                     l4685:
 14910     00B5  0851               	movf	(___flmul@a^(0+128)+3),w
 14911     00B6  3980               	andlw	128
 14912     00B7  06D7               	xorwf	___flmul@sign^(0+128),f
 14913     00B8                     l4687:
 14914     00B8  3551               	lslf	(___flmul@a^(0+128)+3),w
 14915     00B9  00DC               	movwf	___flmul@aexp^(0+128)
 14916     00BA                     l4689:
 14917     00BA  1FD0               	btfss	(___flmul@a^(0+128)+2),7
 14918     00BB  28BD               	goto	u5221
 14919     00BC  28BE               	goto	u5220
 14920     00BD                     u5221:
 14921     00BD  28BF               	goto	l4693
 14922     00BE                     u5220:
 14923     00BE                     l4691:
 14924     00BE  145C               	bsf	___flmul@aexp^(0+128),0
 14925     00BF                     l4693:
 14926     00BF  085C               	movf	___flmul@aexp^(0+128),w
 14927     00C0  1903               	btfsc	3,2
 14928     00C1  28C3               	goto	u5231
 14929     00C2  28C4               	goto	u5230
 14930     00C3                     u5231:
 14931     00C3  28D3               	goto	l4701
 14932     00C4                     u5230:
 14933     00C4                     l4695:
 14934     00C4  0A5C               	incf	___flmul@aexp^(0+128),w
 14935     00C5  1D03               	btfss	3,2
 14936     00C6  28C8               	goto	u5241
 14937     00C7  28C9               	goto	u5240
 14938     00C8                     u5241:
 14939     00C8  28D1               	goto	l4699
 14940     00C9                     u5240:
 14941     00C9                     l4697:
 14942     00C9  3000               	movlw	0
 14943     00CA  00D1               	movwf	(___flmul@a+3)^(0+128)
 14944     00CB  3000               	movlw	0
 14945     00CC  00D0               	movwf	(___flmul@a+2)^(0+128)
 14946     00CD  3000               	movlw	0
 14947     00CE  00CF               	movwf	(___flmul@a+1)^(0+128)
 14948     00CF  3000               	movlw	0
 14949     00D0  00CE               	movwf	___flmul@a^(0+128)
 14950     00D1                     l4699:
 14951     00D1  17D0               	bsf	(___flmul@a^(0+128)+2),7
 14952     00D2  28DB               	goto	l4703
 14953     00D3                     l4701:
 14954     00D3  3000               	movlw	0
 14955     00D4  00D1               	movwf	(___flmul@a+3)^(0+128)
 14956     00D5  3000               	movlw	0
 14957     00D6  00D0               	movwf	(___flmul@a+2)^(0+128)
 14958     00D7  3000               	movlw	0
 14959     00D8  00CF               	movwf	(___flmul@a+1)^(0+128)
 14960     00D9  3000               	movlw	0
 14961     00DA  00CE               	movwf	___flmul@a^(0+128)
 14962     00DB                     l4703:
 14963     00DB  085C               	movf	___flmul@aexp^(0+128),w
 14964     00DC  1903               	btfsc	3,2
 14965     00DD  28DF               	goto	u5251
 14966     00DE  28E0               	goto	u5250
 14967     00DF                     u5251:
 14968     00DF  28E5               	goto	l4707
 14969     00E0                     u5250:
 14970     00E0                     l4705:
 14971     00E0  085D               	movf	___flmul@bexp^(0+128),w
 14972     00E1  1D03               	btfss	3,2
 14973     00E2  28E4               	goto	u5261
 14974     00E3  28E5               	goto	u5260
 14975     00E4                     u5261:
 14976     00E4  28EE               	goto	l4711
 14977     00E5                     u5260:
 14978     00E5                     l4707:
 14979     00E5  3000               	movlw	0
 14980     00E6  00CD               	movwf	(?___flmul+3)^(0+128)
 14981     00E7  3000               	movlw	0
 14982     00E8  00CC               	movwf	(?___flmul+2)^(0+128)
 14983     00E9  3000               	movlw	0
 14984     00EA  00CB               	movwf	(?___flmul+1)^(0+128)
 14985     00EB  3000               	movlw	0
 14986     00EC  00CA               	movwf	?___flmul^(0+128)
 14987     00ED  2AC8               	goto	l1578
 14988     00EE                     l4711:
 14989     00EE  084A               	movf	___flmul@b^(0+128),w
 14990     00EF  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 14991     00F0  0850               	movf	(___flmul@a^(0+128)+2),w
 14992     00F1  319E  26EC  3180   	fcall	__Umul8_16
 14993     00F4  0021               	movlb	1	; select bank1
 14994     00F5  0821               	movf	(?__Umul8_16+1)^(0+128),w
 14995     00F6  00E3               	movwf	(___flmul@temp+1)^(0+128)
 14996     00F7  0820               	movf	?__Umul8_16^(0+128),w
 14997     00F8  00E2               	movwf	___flmul@temp^(0+128)
 14998     00F9                     l4713:
 14999     00F9  0862               	movf	___flmul@temp^(0+128),w
 15000     00FA  00D2               	movwf	??___flmul^(0+128)
 15001     00FB  01D3               	clrf	(??___flmul^(0+128)+1)
 15002     00FC  01D4               	clrf	(??___flmul^(0+128)+2)
 15003     00FD  01D5               	clrf	(??___flmul^(0+128)+3)
 15004     00FE  0855               	movf	(??___flmul+3)^(0+128),w
 15005     00FF  00DB               	movwf	(___flmul@grs+3)^(0+128)
 15006     0100  0854               	movf	(??___flmul+2)^(0+128),w
 15007     0101  00DA               	movwf	(___flmul@grs+2)^(0+128)
 15008     0102  0853               	movf	(??___flmul+1)^(0+128),w
 15009     0103  00D9               	movwf	(___flmul@grs+1)^(0+128)
 15010     0104  0852               	movf	??___flmul^(0+128),w
 15011     0105  00D8               	movwf	___flmul@grs^(0+128)
 15012     0106                     l4715:
 15013     0106  0863               	movf	(___flmul@temp^(0+128)+1),w
 15014     0107  00D2               	movwf	??___flmul^(0+128)
 15015     0108  01D3               	clrf	(??___flmul^(0+128)+1)
 15016     0109  01D4               	clrf	(??___flmul^(0+128)+2)
 15017     010A  01D5               	clrf	(??___flmul^(0+128)+3)
 15018     010B  0855               	movf	(??___flmul+3)^(0+128),w
 15019     010C  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15020     010D  0854               	movf	(??___flmul+2)^(0+128),w
 15021     010E  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15022     010F  0853               	movf	(??___flmul+1)^(0+128),w
 15023     0110  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15024     0111  0852               	movf	??___flmul^(0+128),w
 15025     0112  00DE               	movwf	___flmul@prod^(0+128)
 15026     0113  084B               	movf	(___flmul@b^(0+128)+1),w
 15027     0114  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15028     0115  084F               	movf	(___flmul@a^(0+128)+1),w
 15029     0116  319E  26EC  3180   	fcall	__Umul8_16
 15030     0119  0021               	movlb	1	; select bank1
 15031     011A  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15032     011B  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15033     011C  0820               	movf	?__Umul8_16^(0+128),w
 15034     011D  00E2               	movwf	___flmul@temp^(0+128)
 15035     011E                     l4717:
 15036     011E  0862               	movf	___flmul@temp^(0+128),w
 15037     011F  00D2               	movwf	??___flmul^(0+128)
 15038     0120  01D3               	clrf	(??___flmul^(0+128)+1)
 15039     0121  01D4               	clrf	(??___flmul^(0+128)+2)
 15040     0122  01D5               	clrf	(??___flmul^(0+128)+3)
 15041     0123  0852               	movf	??___flmul^(0+128),w
 15042     0124  07D8               	addwf	___flmul@grs^(0+128),f
 15043     0125  0853               	movf	(??___flmul+1)^(0+128),w
 15044     0126  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15045     0127  0854               	movf	(??___flmul+2)^(0+128),w
 15046     0128  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15047     0129  0855               	movf	(??___flmul+3)^(0+128),w
 15048     012A  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15049     012B                     l4719:
 15050     012B  0863               	movf	(___flmul@temp^(0+128)+1),w
 15051     012C  00D2               	movwf	??___flmul^(0+128)
 15052     012D  01D3               	clrf	(??___flmul^(0+128)+1)
 15053     012E  01D4               	clrf	(??___flmul^(0+128)+2)
 15054     012F  01D5               	clrf	(??___flmul^(0+128)+3)
 15055     0130  0852               	movf	??___flmul^(0+128),w
 15056     0131  07DE               	addwf	___flmul@prod^(0+128),f
 15057     0132  0853               	movf	(??___flmul+1)^(0+128),w
 15058     0133  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15059     0134  0854               	movf	(??___flmul+2)^(0+128),w
 15060     0135  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15061     0136  0855               	movf	(??___flmul+3)^(0+128),w
 15062     0137  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15063     0138  084C               	movf	(___flmul@b^(0+128)+2),w
 15064     0139  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15065     013A  084E               	movf	___flmul@a^(0+128),w
 15066     013B  319E  26EC  3180   	fcall	__Umul8_16
 15067     013E  0021               	movlb	1	; select bank1
 15068     013F  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15069     0140  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15070     0141  0820               	movf	?__Umul8_16^(0+128),w
 15071     0142  00E2               	movwf	___flmul@temp^(0+128)
 15072     0143                     l4721:
 15073     0143  0862               	movf	___flmul@temp^(0+128),w
 15074     0144  00D2               	movwf	??___flmul^(0+128)
 15075     0145  01D3               	clrf	(??___flmul^(0+128)+1)
 15076     0146  01D4               	clrf	(??___flmul^(0+128)+2)
 15077     0147  01D5               	clrf	(??___flmul^(0+128)+3)
 15078     0148  0852               	movf	??___flmul^(0+128),w
 15079     0149  07D8               	addwf	___flmul@grs^(0+128),f
 15080     014A  0853               	movf	(??___flmul+1)^(0+128),w
 15081     014B  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15082     014C  0854               	movf	(??___flmul+2)^(0+128),w
 15083     014D  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15084     014E  0855               	movf	(??___flmul+3)^(0+128),w
 15085     014F  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15086     0150                     l4723:
 15087     0150  0863               	movf	(___flmul@temp^(0+128)+1),w
 15088     0151  00D2               	movwf	??___flmul^(0+128)
 15089     0152  01D3               	clrf	(??___flmul^(0+128)+1)
 15090     0153  01D4               	clrf	(??___flmul^(0+128)+2)
 15091     0154  01D5               	clrf	(??___flmul^(0+128)+3)
 15092     0155  0852               	movf	??___flmul^(0+128),w
 15093     0156  07DE               	addwf	___flmul@prod^(0+128),f
 15094     0157  0853               	movf	(??___flmul+1)^(0+128),w
 15095     0158  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15096     0159  0854               	movf	(??___flmul+2)^(0+128),w
 15097     015A  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15098     015B  0855               	movf	(??___flmul+3)^(0+128),w
 15099     015C  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15100     015D                     l4725:
 15101     015D  3008               	movlw	8
 15102     015E                     u5275:
 15103     015E  35D8               	lslf	___flmul@grs^(0+128),f
 15104     015F  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15105     0160  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15106     0161  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15107     0162  0B89               	decfsz	9,f
 15108     0163  295E               	goto	u5275
 15109     0164                     l4727:
 15110     0164  084B               	movf	(___flmul@b^(0+128)+1),w
 15111     0165  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15112     0166  084E               	movf	___flmul@a^(0+128),w
 15113     0167  319E  26EC  3180   	fcall	__Umul8_16
 15114     016A  0021               	movlb	1	; select bank1
 15115     016B  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15116     016C  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15117     016D  0820               	movf	?__Umul8_16^(0+128),w
 15118     016E  00E2               	movwf	___flmul@temp^(0+128)
 15119     016F                     l4729:
 15120     016F  0862               	movf	___flmul@temp^(0+128),w
 15121     0170  07D8               	addwf	___flmul@grs^(0+128),f
 15122     0171  0863               	movf	(___flmul@temp+1)^(0+128),w
 15123     0172  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15124     0173  3000               	movlw	0
 15125     0174  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15126     0175  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15127     0176                     l4731:
 15128     0176  084A               	movf	___flmul@b^(0+128),w
 15129     0177  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15130     0178  084F               	movf	(___flmul@a^(0+128)+1),w
 15131     0179  319E  26EC  3180   	fcall	__Umul8_16
 15132     017C  0021               	movlb	1	; select bank1
 15133     017D  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15134     017E  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15135     017F  0820               	movf	?__Umul8_16^(0+128),w
 15136     0180  00E2               	movwf	___flmul@temp^(0+128)
 15137     0181                     l4733:
 15138     0181  0862               	movf	___flmul@temp^(0+128),w
 15139     0182  07D8               	addwf	___flmul@grs^(0+128),f
 15140     0183  0863               	movf	(___flmul@temp+1)^(0+128),w
 15141     0184  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15142     0185  3000               	movlw	0
 15143     0186  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15144     0187  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15145     0188                     l4735:
 15146     0188  3008               	movlw	8
 15147     0189                     u5285:
 15148     0189  35D8               	lslf	___flmul@grs^(0+128),f
 15149     018A  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15150     018B  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15151     018C  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15152     018D  0B89               	decfsz	9,f
 15153     018E  2989               	goto	u5285
 15154     018F  084A               	movf	___flmul@b^(0+128),w
 15155     0190  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15156     0191  084E               	movf	___flmul@a^(0+128),w
 15157     0192  319E  26EC  3180   	fcall	__Umul8_16
 15158     0195  0021               	movlb	1	; select bank1
 15159     0196  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15160     0197  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15161     0198  0820               	movf	?__Umul8_16^(0+128),w
 15162     0199  00E2               	movwf	___flmul@temp^(0+128)
 15163     019A                     l4737:
 15164     019A  0862               	movf	___flmul@temp^(0+128),w
 15165     019B  07D8               	addwf	___flmul@grs^(0+128),f
 15166     019C  0863               	movf	(___flmul@temp+1)^(0+128),w
 15167     019D  3DD9               	addwfc	(___flmul@grs+1)^(0+128),f
 15168     019E  3000               	movlw	0
 15169     019F  3DDA               	addwfc	(___flmul@grs+2)^(0+128),f
 15170     01A0  3DDB               	addwfc	(___flmul@grs+3)^(0+128),f
 15171     01A1                     l4739:
 15172     01A1  084B               	movf	(___flmul@b^(0+128)+1),w
 15173     01A2  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15174     01A3  0850               	movf	(___flmul@a^(0+128)+2),w
 15175     01A4  319E  26EC  3180   	fcall	__Umul8_16
 15176     01A7  0021               	movlb	1	; select bank1
 15177     01A8  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15178     01A9  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15179     01AA  0820               	movf	?__Umul8_16^(0+128),w
 15180     01AB  00E2               	movwf	___flmul@temp^(0+128)
 15181     01AC  0862               	movf	___flmul@temp^(0+128),w
 15182     01AD  07DE               	addwf	___flmul@prod^(0+128),f
 15183     01AE  0863               	movf	(___flmul@temp+1)^(0+128),w
 15184     01AF  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15185     01B0  3000               	movlw	0
 15186     01B1  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15187     01B2  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15188     01B3                     l4741:
 15189     01B3  084C               	movf	(___flmul@b^(0+128)+2),w
 15190     01B4  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15191     01B5  084F               	movf	(___flmul@a^(0+128)+1),w
 15192     01B6  319E  26EC  3180   	fcall	__Umul8_16
 15193     01B9  0021               	movlb	1	; select bank1
 15194     01BA  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15195     01BB  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15196     01BC  0820               	movf	?__Umul8_16^(0+128),w
 15197     01BD  00E2               	movwf	___flmul@temp^(0+128)
 15198     01BE                     l4743:
 15199     01BE  0862               	movf	___flmul@temp^(0+128),w
 15200     01BF  07DE               	addwf	___flmul@prod^(0+128),f
 15201     01C0  0863               	movf	(___flmul@temp+1)^(0+128),w
 15202     01C1  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15203     01C2  3000               	movlw	0
 15204     01C3  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15205     01C4  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15206     01C5  084C               	movf	(___flmul@b^(0+128)+2),w
 15207     01C6  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
 15208     01C7  0850               	movf	(___flmul@a^(0+128)+2),w
 15209     01C8  319E  26EC  3180   	fcall	__Umul8_16
 15210     01CB  0021               	movlb	1	; select bank1
 15211     01CC  0821               	movf	(?__Umul8_16+1)^(0+128),w
 15212     01CD  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15213     01CE  0820               	movf	?__Umul8_16^(0+128),w
 15214     01CF  00E2               	movwf	___flmul@temp^(0+128)
 15215     01D0                     l4745:
 15216     01D0  0862               	movf	___flmul@temp^(0+128),w
 15217     01D1  00D2               	movwf	??___flmul^(0+128)
 15218     01D2  0863               	movf	(___flmul@temp+1)^(0+128),w
 15219     01D3  00D3               	movwf	(??___flmul^(0+128)+1)
 15220     01D4  01D4               	clrf	(??___flmul^(0+128)+2)
 15221     01D5  01D5               	clrf	(??___flmul^(0+128)+3)
 15222     01D6  3008               	movlw	8
 15223     01D7                     u5295:
 15224     01D7  35D2               	lslf	??___flmul^(0+128),f
 15225     01D8  0DD3               	rlf	(??___flmul^(0+128)+1),f
 15226     01D9  0DD4               	rlf	(??___flmul^(0+128)+2),f
 15227     01DA  0DD5               	rlf	(??___flmul^(0+128)+3),f
 15228     01DB                     u5290:
 15229     01DB  0B89               	decfsz	9,f
 15230     01DC  29D7               	goto	u5295
 15231     01DD  0852               	movf	??___flmul^(0+128),w
 15232     01DE  07DE               	addwf	___flmul@prod^(0+128),f
 15233     01DF  0853               	movf	(??___flmul+1)^(0+128),w
 15234     01E0  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15235     01E1  0854               	movf	(??___flmul+2)^(0+128),w
 15236     01E2  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15237     01E3  0855               	movf	(??___flmul+3)^(0+128),w
 15238     01E4  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15239     01E5                     l4747:
 15240     01E5  0858               	movf	___flmul@grs^(0+128),w
 15241     01E6  00D2               	movwf	??___flmul^(0+128)
 15242     01E7  0859               	movf	(___flmul@grs+1)^(0+128),w
 15243     01E8  00D3               	movwf	(??___flmul^(0+128)+1)
 15244     01E9  085A               	movf	(___flmul@grs+2)^(0+128),w
 15245     01EA  00D4               	movwf	(??___flmul^(0+128)+2)
 15246     01EB  085B               	movf	(___flmul@grs+3)^(0+128),w
 15247     01EC  00D5               	movwf	(??___flmul^(0+128)+3)
 15248     01ED  3018               	movlw	24
 15249     01EE                     u5305:
 15250     01EE  36D5               	lsrf	(??___flmul^(0+128)+3),f
 15251     01EF  0CD4               	rrf	(??___flmul^(0+128)+2),f
 15252     01F0  0CD3               	rrf	(??___flmul^(0+128)+1),f
 15253     01F1  0CD2               	rrf	??___flmul^(0+128),f
 15254     01F2                     u5300:
 15255     01F2  0B89               	decfsz	9,f
 15256     01F3  29EE               	goto	u5305
 15257     01F4  0852               	movf	??___flmul^(0+128),w
 15258     01F5  07DE               	addwf	___flmul@prod^(0+128),f
 15259     01F6  0853               	movf	(??___flmul+1)^(0+128),w
 15260     01F7  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15261     01F8  0854               	movf	(??___flmul+2)^(0+128),w
 15262     01F9  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15263     01FA  0855               	movf	(??___flmul+3)^(0+128),w
 15264     01FB  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15265     01FC                     l4749:
 15266     01FC  3008               	movlw	8
 15267     01FD                     u5315:
 15268     01FD  35D8               	lslf	___flmul@grs^(0+128),f
 15269     01FE  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15270     01FF  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15271     0200  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15272     0201  0B89               	decfsz	9,f
 15273     0202  29FD               	goto	u5315
 15274     0203                     l4751:
 15275     0203  085D               	movf	___flmul@bexp^(0+128),w
 15276     0204  075C               	addwf	___flmul@aexp^(0+128),w
 15277     0205  00D2               	movwf	??___flmul^(0+128)
 15278     0206  01D3               	clrf	(??___flmul^(0+128)+1)
 15279     0207  0DD3               	rlf	(??___flmul+1)^(0+128),f
 15280     0208  0852               	movf	??___flmul^(0+128),w
 15281     0209  3E82               	addlw	130
 15282     020A  00E2               	movwf	___flmul@temp^(0+128)
 15283     020B  30FF               	movlw	255
 15284     020C  3D53               	addwfc	(??___flmul+1)^(0+128),w
 15285     020D  00E3               	movwf	(___flmul@temp+1)^(0+128)
 15286     020E  2A26               	goto	l4763
 15287     020F                     l4753:
 15288     020F  3001               	movlw	1
 15289     0210                     u5325:
 15290     0210  35DE               	lslf	___flmul@prod^(0+128),f
 15291     0211  0DDF               	rlf	(___flmul@prod+1)^(0+128),f
 15292     0212  0DE0               	rlf	(___flmul@prod+2)^(0+128),f
 15293     0213  0DE1               	rlf	(___flmul@prod+3)^(0+128),f
 15294     0214  0B89               	decfsz	9,f
 15295     0215  2A10               	goto	u5325
 15296     0216                     l4755:
 15297     0216  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 15298     0217  2A19               	goto	u5331
 15299     0218  2A1A               	goto	u5330
 15300     0219                     u5331:
 15301     0219  2A1B               	goto	l4759
 15302     021A                     u5330:
 15303     021A                     l4757:
 15304     021A  145E               	bsf	___flmul@prod^(0+128),0
 15305     021B                     l4759:
 15306     021B  3001               	movlw	1
 15307     021C                     u5345:
 15308     021C  35D8               	lslf	___flmul@grs^(0+128),f
 15309     021D  0DD9               	rlf	(___flmul@grs+1)^(0+128),f
 15310     021E  0DDA               	rlf	(___flmul@grs+2)^(0+128),f
 15311     021F  0DDB               	rlf	(___flmul@grs+3)^(0+128),f
 15312     0220  0B89               	decfsz	9,f
 15313     0221  2A1C               	goto	u5345
 15314     0222                     l4761:
 15315     0222  30FF               	movlw	255
 15316     0223  07E2               	addwf	___flmul@temp^(0+128),f
 15317     0224  30FF               	movlw	255
 15318     0225  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 15319     0226                     l4763:
 15320     0226  1FE0               	btfss	(___flmul@prod+2)^(0+128),7
 15321     0227  2A29               	goto	u5351
 15322     0228  2A2A               	goto	u5350
 15323     0229                     u5351:
 15324     0229  2A0F               	goto	l4753
 15325     022A                     u5350:
 15326     022A                     l4765:
 15327     022A  01DC               	clrf	___flmul@aexp^(0+128)
 15328     022B                     l4767:
 15329     022B  1FDB               	btfss	(___flmul@grs+3)^(0+128),7
 15330     022C  2A2E               	goto	u5361
 15331     022D  2A2F               	goto	u5360
 15332     022E                     u5361:
 15333     022E  2A4B               	goto	l4775
 15334     022F                     u5360:
 15335     022F                     l4769:
 15336     022F  30FF               	movlw	255
 15337     0230  0558               	andwf	___flmul@grs^(0+128),w
 15338     0231  00D2               	movwf	??___flmul^(0+128)
 15339     0232  30FF               	movlw	255
 15340     0233  0559               	andwf	(___flmul@grs+1)^(0+128),w
 15341     0234  00D3               	movwf	(??___flmul^(0+128)+1)
 15342     0235  30FF               	movlw	255
 15343     0236  055A               	andwf	(___flmul@grs+2)^(0+128),w
 15344     0237  00D4               	movwf	(??___flmul^(0+128)+2)
 15345     0238  307F               	movlw	127
 15346     0239  055B               	andwf	(___flmul@grs+3)^(0+128),w
 15347     023A  00D5               	movwf	(??___flmul^(0+128)+3)
 15348     023B  0855               	movf	(??___flmul+3)^(0+128),w
 15349     023C  0454               	iorwf	(??___flmul+2)^(0+128),w
 15350     023D  0453               	iorwf	(??___flmul+1)^(0+128),w
 15351     023E  0452               	iorwf	??___flmul^(0+128),w
 15352     023F  1903               	skipnz
 15353     0240  2A42               	goto	u5371
 15354     0241  2A43               	goto	u5370
 15355     0242                     u5371:
 15356     0242  2A46               	goto	l1584
 15357     0243                     u5370:
 15358     0243                     l4771:
 15359     0243  3001               	movlw	1
 15360     0244  00DC               	movwf	___flmul@aexp^(0+128)
 15361     0245  2A4B               	goto	l4775
 15362     0246                     l1584:
 15363     0246  1C5E               	btfss	___flmul@prod^(0+128),0
 15364     0247  2A49               	goto	u5381
 15365     0248  2A4A               	goto	u5380
 15366     0249                     u5381:
 15367     0249  2A4B               	goto	l4775
 15368     024A                     u5380:
 15369     024A  2A43               	goto	l4771
 15370     024B                     l4775:
 15371     024B  085C               	movf	___flmul@aexp^(0+128),w
 15372     024C  1903               	btfsc	3,2
 15373     024D  2A4F               	goto	u5391
 15374     024E  2A50               	goto	u5390
 15375     024F                     u5391:
 15376     024F  2A76               	goto	l4785
 15377     0250                     u5390:
 15378     0250                     l4777:
 15379     0250  3001               	movlw	1
 15380     0251  07DE               	addwf	___flmul@prod^(0+128),f
 15381     0252  3000               	movlw	0
 15382     0253  3DDF               	addwfc	(___flmul@prod+1)^(0+128),f
 15383     0254  3DE0               	addwfc	(___flmul@prod+2)^(0+128),f
 15384     0255  3DE1               	addwfc	(___flmul@prod+3)^(0+128),f
 15385     0256                     l4779:
 15386     0256  1C61               	btfss	(___flmul@prod+3)^(0+128),0
 15387     0257  2A59               	goto	u5401
 15388     0258  2A5A               	goto	u5400
 15389     0259                     u5401:
 15390     0259  2A76               	goto	l4785
 15391     025A                     u5400:
 15392     025A                     l4781:
 15393     025A  085E               	movf	___flmul@prod^(0+128),w
 15394     025B  00D2               	movwf	??___flmul^(0+128)
 15395     025C  085F               	movf	(___flmul@prod+1)^(0+128),w
 15396     025D  00D3               	movwf	(??___flmul^(0+128)+1)
 15397     025E  0860               	movf	(___flmul@prod+2)^(0+128),w
 15398     025F  00D4               	movwf	(??___flmul^(0+128)+2)
 15399     0260  0861               	movf	(___flmul@prod+3)^(0+128),w
 15400     0261  00D5               	movwf	(??___flmul^(0+128)+3)
 15401     0262  3001               	movlw	1
 15402     0263  00D6               	movwf	(??___flmul+4)^(0+128)
 15403     0264                     u5415:
 15404     0264  37D5               	asrf	(??___flmul^(0+128)+3),f
 15405     0265  0CD4               	rrf	(??___flmul^(0+128)+2),f
 15406     0266  0CD3               	rrf	(??___flmul^(0+128)+1),f
 15407     0267  0CD2               	rrf	??___flmul^(0+128),f
 15408     0268                     u5410:
 15409     0268  0BD6               	decfsz	(??___flmul+4)^(0+128),f
 15410     0269  2A64               	goto	u5415
 15411     026A  0855               	movf	(??___flmul+3)^(0+128),w
 15412     026B  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15413     026C  0854               	movf	(??___flmul+2)^(0+128),w
 15414     026D  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15415     026E  0853               	movf	(??___flmul+1)^(0+128),w
 15416     026F  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15417     0270  0852               	movf	??___flmul^(0+128),w
 15418     0271  00DE               	movwf	___flmul@prod^(0+128)
 15419     0272                     l4783:
 15420     0272  3001               	movlw	1
 15421     0273  07E2               	addwf	___flmul@temp^(0+128),f
 15422     0274  3000               	movlw	0
 15423     0275  3DE3               	addwfc	(___flmul@temp+1)^(0+128),f
 15424     0276                     l4785:
 15425     0276  0863               	movf	(___flmul@temp+1)^(0+128),w
 15426     0277  3A80               	xorlw	128
 15427     0278  00D2               	movwf	??___flmul^(0+128)
 15428     0279  3080               	movlw	128
 15429     027A  0252               	subwf	??___flmul^(0+128),w
 15430     027B  1D03               	skipz
 15431     027C  2A7F               	goto	u5425
 15432     027D  30FF               	movlw	255
 15433     027E  0262               	subwf	___flmul@temp^(0+128),w
 15434     027F                     u5425:
 15435     027F  1C03               	skipc
 15436     0280  2A82               	goto	u5421
 15437     0281  2A83               	goto	u5420
 15438     0282                     u5421:
 15439     0282  2A8D               	goto	l4789
 15440     0283                     u5420:
 15441     0283                     l4787:
 15442     0283  307F               	movlw	127
 15443     0284  0021               	movlb	1	; select bank1
 15444     0285  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15445     0286  3080               	movlw	128
 15446     0287  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15447     0288  3000               	movlw	0
 15448     0289  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15449     028A  3000               	movlw	0
 15450     028B  00DE               	movwf	___flmul@prod^(0+128)
 15451     028C  2ABE               	goto	l1590
 15452     028D                     l4789:
 15453     028D  0021               	movlb	1	; select bank1
 15454     028E  0863               	movf	(___flmul@temp+1)^(0+128),w
 15455     028F  3A80               	xorlw	128
 15456     0290  00D2               	movwf	??___flmul^(0+128)
 15457     0291  3080               	movlw	128
 15458     0292  0252               	subwf	??___flmul^(0+128),w
 15459     0293  1D03               	skipz
 15460     0294  2A97               	goto	u5435
 15461     0295  3001               	movlw	1
 15462     0296  0262               	subwf	___flmul@temp^(0+128),w
 15463     0297                     u5435:
 15464     0297  1803               	skipnc
 15465     0298  2A9A               	goto	u5431
 15466     0299  2A9B               	goto	u5430
 15467     029A                     u5431:
 15468     029A  2AA6               	goto	l4795
 15469     029B                     u5430:
 15470     029B                     l4791:
 15471     029B  3000               	movlw	0
 15472     029C  0021               	movlb	1	; select bank1
 15473     029D  00E1               	movwf	(___flmul@prod+3)^(0+128)
 15474     029E  3000               	movlw	0
 15475     029F  00E0               	movwf	(___flmul@prod+2)^(0+128)
 15476     02A0  3000               	movlw	0
 15477     02A1  00DF               	movwf	(___flmul@prod+1)^(0+128)
 15478     02A2  3000               	movlw	0
 15479     02A3  00DE               	movwf	___flmul@prod^(0+128)
 15480     02A4                     l4793:
 15481     02A4  01D7               	clrf	___flmul@sign^(0+128)
 15482     02A5  2ABE               	goto	l1590
 15483     02A6                     l4795:
 15484     02A6  0021               	movlb	1	; select bank1
 15485     02A7  0862               	movf	___flmul@temp^(0+128),w
 15486     02A8  00DD               	movwf	___flmul@bexp^(0+128)
 15487     02A9  30FF               	movlw	255
 15488     02AA  05DE               	andwf	___flmul@prod^(0+128),f
 15489     02AB  30FF               	movlw	255
 15490     02AC  05DF               	andwf	(___flmul@prod+1)^(0+128),f
 15491     02AD  307F               	movlw	127
 15492     02AE  05E0               	andwf	(___flmul@prod+2)^(0+128),f
 15493     02AF  3000               	movlw	0
 15494     02B0  05E1               	andwf	(___flmul@prod+3)^(0+128),f
 15495     02B1                     l4797:
 15496     02B1  1C5D               	btfss	___flmul@bexp^(0+128),0
 15497     02B2  2AB4               	goto	u5441
 15498     02B3  2AB5               	goto	u5440
 15499     02B4                     u5441:
 15500     02B4  2AB6               	goto	l4801
 15501     02B5                     u5440:
 15502     02B5                     l4799:
 15503     02B5  17E0               	bsf	(___flmul@prod^(0+128)+2),7
 15504     02B6                     l4801:
 15505     02B6  085D               	movf	___flmul@bexp^(0+128),w
 15506     02B7  00D2               	movwf	??___flmul^(0+128)
 15507     02B8  3001               	movlw	1
 15508     02B9                     u5455:
 15509     02B9  36D2               	lsrf	??___flmul^(0+128),f
 15510     02BA  0B89               	decfsz	9,f
 15511     02BB  2AB9               	goto	u5455
 15512     02BC  0852               	movf	??___flmul^(0+128),w
 15513     02BD  00E1               	movwf	(___flmul@prod^(0+128)+3)
 15514     02BE                     l1590:
 15515     02BE  0857               	movf	___flmul@sign^(0+128),w
 15516     02BF  04E1               	iorwf	(___flmul@prod^(0+128)+3),f
 15517     02C0                     l4803:
 15518     02C0  0861               	movf	(___flmul@prod+3)^(0+128),w
 15519     02C1  00CD               	movwf	(?___flmul+3)^(0+128)
 15520     02C2  0860               	movf	(___flmul@prod+2)^(0+128),w
 15521     02C3  00CC               	movwf	(?___flmul+2)^(0+128)
 15522     02C4  085F               	movf	(___flmul@prod+1)^(0+128),w
 15523     02C5  00CB               	movwf	(?___flmul+1)^(0+128)
 15524     02C6  085E               	movf	___flmul@prod^(0+128),w
 15525     02C7  00CA               	movwf	?___flmul^(0+128)
 15526     02C8                     l1578:
 15527     02C8  0008               	return
 15528     02C9                     __end_of___flmul:
 15529                           
 15530                           	psect	text54
 15531     1EEC                     __ptext54:	
 15532 ;; *************** function __Umul8_16 *****************
 15533 ;; Defined at:
 15534 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  multiplier      1    wreg     unsigned char 
 15537 ;;  multiplicand    1    0[BANK1 ] unsigned char 
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;  multiplier      1    8[BANK1 ] unsigned char 
 15540 ;;  word_mpld       2    6[BANK1 ] unsigned short 
 15541 ;;  product         2    4[BANK1 ] unsigned short 
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  2    0[BANK1 ] unsigned int 
 15544 ;; Registers used:
 15545 ;;		wreg, status,2, status,0
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15551 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;Total ram usage:        9 bytes
 15556 ;; Hardware stack levels used: 1
 15557 ;; Hardware stack levels required when called: 5
 15558 ;; This function calls:
 15559 ;;		Nothing
 15560 ;; This function is called by:
 15561 ;;		___flmul
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565     1EEC                     __Umul8_16:	
 15566                           ;psect for function __Umul8_16
 15567                           
 15568                           
 15569                           ;incstack = 0
 15570                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15571                           ;__Umul8_16@multiplier stored from wreg
 15572     1EEC  0021               	movlb	1	; select bank1
 15573     1EED  00A8               	movwf	__Umul8_16@multiplier^(0+128)
 15574     1EEE                     l4321:
 15575     1EEE  01A4               	clrf	__Umul8_16@product^(0+128)
 15576     1EEF  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
 15577     1EF0                     l4323:
 15578     1EF0  0820               	movf	__Umul8_16@multiplicand^(0+128),w
 15579     1EF1  00A2               	movwf	??__Umul8_16^(0+128)
 15580     1EF2  01A3               	clrf	(??__Umul8_16^(0+128)+1)
 15581     1EF3  0822               	movf	??__Umul8_16^(0+128),w
 15582     1EF4  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
 15583     1EF5  0823               	movf	(??__Umul8_16+1)^(0+128),w
 15584     1EF6  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
 15585     1EF7                     l4325:
 15586     1EF7  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
 15587     1EF8  2EFA               	goto	u4421
 15588     1EF9  2EFB               	goto	u4420
 15589     1EFA                     u4421:
 15590     1EFA  2EFF               	goto	l1597
 15591     1EFB                     u4420:
 15592     1EFB                     l4327:
 15593     1EFB  0826               	movf	__Umul8_16@word_mpld^(0+128),w
 15594     1EFC  07A4               	addwf	__Umul8_16@product^(0+128),f
 15595     1EFD  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
 15596     1EFE  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
 15597     1EFF                     l1597:
 15598     1EFF  3001               	movlw	1
 15599     1F00                     u4435:
 15600     1F00  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
 15601     1F01  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
 15602     1F02  0B89               	decfsz	9,f
 15603     1F03  2F00               	goto	u4435
 15604     1F04  1003               	clrc
 15605     1F05  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
 15606     1F06                     l4329:
 15607     1F06  0828               	movf	__Umul8_16@multiplier^(0+128),w
 15608     1F07  1D03               	btfss	3,2
 15609     1F08  2F0A               	goto	u4441
 15610     1F09  2F0B               	goto	u4440
 15611     1F0A                     u4441:
 15612     1F0A  2EF7               	goto	l4325
 15613     1F0B                     u4440:
 15614     1F0B                     l4331:
 15615     1F0B  0825               	movf	(__Umul8_16@product+1)^(0+128),w
 15616     1F0C  00A1               	movwf	(?__Umul8_16+1)^(0+128)
 15617     1F0D  0824               	movf	__Umul8_16@product^(0+128),w
 15618     1F0E  00A0               	movwf	?__Umul8_16^(0+128)
 15619     1F0F                     l1599:
 15620     1F0F  0008               	return
 15621     1F10                     __end_of__Umul8_16:
 15622                           
 15623                           	psect	text55
 15624     0504                     __ptext55:	
 15625 ;; *************** function ___fladd *****************
 15626 ;; Defined at:
 15627 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  b               4   14[BANK1 ] unsigned int 
 15630 ;;  a               4   18[BANK1 ] unsigned int 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;  grs             1   33[BANK1 ] unsigned char 
 15633 ;;  bexp            1   32[BANK1 ] unsigned char 
 15634 ;;  aexp            1   31[BANK1 ] unsigned char 
 15635 ;;  signs           1   30[BANK1 ] unsigned char 
 15636 ;; Return value:  Size  Location     Type
 15637 ;;                  4   14[BANK1 ] unsigned char 
 15638 ;; Registers used:
 15639 ;;		wreg, status,2, status,0
 15640 ;; Tracked objects:
 15641 ;;		On entry : 0/0
 15642 ;;		On exit  : 0/0
 15643 ;;		Unchanged: 0/0
 15644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15645 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15646 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15647 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15648 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 15649 ;;Total ram usage:       20 bytes
 15650 ;; Hardware stack levels used: 1
 15651 ;; Hardware stack levels required when called: 5
 15652 ;; This function calls:
 15653 ;;		Nothing
 15654 ;; This function is called by:
 15655 ;;		_str2float
 15656 ;;		_getLedNumber
 15657 ;;		___flsub
 15658 ;; This function uses a non-reentrant model
 15659 ;;
 15660                           
 15661     0504                     ___fladd:	
 15662                           ;psect for function ___fladd
 15663                           
 15664     0504                     l4471:	
 15665                           ;incstack = 0
 15666                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 15667                           
 15668     0504  0021               	movlb	1	; select bank1
 15669     0505  0831               	movf	(___fladd@b^(0+128)+3),w
 15670     0506  3980               	andlw	128
 15671     0507  00BE               	movwf	___fladd@signs^(0+128)
 15672     0508                     l4473:
 15673     0508  3531               	lslf	(___fladd@b^(0+128)+3),w
 15674     0509  00C0               	movwf	___fladd@bexp^(0+128)
 15675     050A                     l4475:
 15676     050A  1FB0               	btfss	(___fladd@b^(0+128)+2),7
 15677     050B  2D0D               	goto	u4731
 15678     050C  2D0E               	goto	u4730
 15679     050D                     u4731:
 15680     050D  2D0F               	goto	l4479
 15681     050E                     u4730:
 15682     050E                     l4477:
 15683     050E  1440               	bsf	___fladd@bexp^(0+128),0
 15684     050F                     l4479:
 15685     050F  0840               	movf	___fladd@bexp^(0+128),w
 15686     0510  1903               	btfsc	3,2
 15687     0511  2D13               	goto	u4741
 15688     0512  2D14               	goto	u4740
 15689     0513                     u4741:
 15690     0513  2D24               	goto	l4489
 15691     0514                     u4740:
 15692     0514                     l4481:
 15693     0514  0A40               	incf	___fladd@bexp^(0+128),w
 15694     0515  1D03               	btfss	3,2
 15695     0516  2D18               	goto	u4751
 15696     0517  2D19               	goto	u4750
 15697     0518                     u4751:
 15698     0518  2D21               	goto	l4485
 15699     0519                     u4750:
 15700     0519                     l4483:
 15701     0519  3000               	movlw	0
 15702     051A  00B1               	movwf	(___fladd@b+3)^(0+128)
 15703     051B  3000               	movlw	0
 15704     051C  00B0               	movwf	(___fladd@b+2)^(0+128)
 15705     051D  3000               	movlw	0
 15706     051E  00AF               	movwf	(___fladd@b+1)^(0+128)
 15707     051F  3000               	movlw	0
 15708     0520  00AE               	movwf	___fladd@b^(0+128)
 15709     0521                     l4485:
 15710     0521  17B0               	bsf	(___fladd@b^(0+128)+2),7
 15711     0522                     l4487:
 15712     0522  01B1               	clrf	(___fladd@b^(0+128)+3)
 15713     0523  2D2C               	goto	l4491
 15714     0524                     l4489:
 15715     0524  3000               	movlw	0
 15716     0525  00B1               	movwf	(___fladd@b+3)^(0+128)
 15717     0526  3000               	movlw	0
 15718     0527  00B0               	movwf	(___fladd@b+2)^(0+128)
 15719     0528  3000               	movlw	0
 15720     0529  00AF               	movwf	(___fladd@b+1)^(0+128)
 15721     052A  3000               	movlw	0
 15722     052B  00AE               	movwf	___fladd@b^(0+128)
 15723     052C                     l4491:
 15724     052C  0835               	movf	(___fladd@a^(0+128)+3),w
 15725     052D  3980               	andlw	128
 15726     052E  00BF               	movwf	___fladd@aexp^(0+128)
 15727     052F                     l4493:
 15728     052F  083F               	movf	___fladd@aexp^(0+128),w
 15729     0530  063E               	xorwf	___fladd@signs^(0+128),w
 15730     0531  1903               	skipnz
 15731     0532  2D34               	goto	u4761
 15732     0533  2D35               	goto	u4760
 15733     0534                     u4761:
 15734     0534  2D36               	goto	l4497
 15735     0535                     u4760:
 15736     0535                     l4495:
 15737     0535  173E               	bsf	___fladd@signs^(0+128),6
 15738     0536                     l4497:
 15739     0536  3535               	lslf	(___fladd@a^(0+128)+3),w
 15740     0537  00BF               	movwf	___fladd@aexp^(0+128)
 15741     0538                     l4499:
 15742     0538  1FB4               	btfss	(___fladd@a^(0+128)+2),7
 15743     0539  2D3B               	goto	u4771
 15744     053A  2D3C               	goto	u4770
 15745     053B                     u4771:
 15746     053B  2D3D               	goto	l4503
 15747     053C                     u4770:
 15748     053C                     l4501:
 15749     053C  143F               	bsf	___fladd@aexp^(0+128),0
 15750     053D                     l4503:
 15751     053D  083F               	movf	___fladd@aexp^(0+128),w
 15752     053E  1903               	btfsc	3,2
 15753     053F  2D41               	goto	u4781
 15754     0540  2D42               	goto	u4780
 15755     0541                     u4781:
 15756     0541  2D52               	goto	l4513
 15757     0542                     u4780:
 15758     0542                     l4505:
 15759     0542  0A3F               	incf	___fladd@aexp^(0+128),w
 15760     0543  1D03               	btfss	3,2
 15761     0544  2D46               	goto	u4791
 15762     0545  2D47               	goto	u4790
 15763     0546                     u4791:
 15764     0546  2D4F               	goto	l4509
 15765     0547                     u4790:
 15766     0547                     l4507:
 15767     0547  3000               	movlw	0
 15768     0548  00B5               	movwf	(___fladd@a+3)^(0+128)
 15769     0549  3000               	movlw	0
 15770     054A  00B4               	movwf	(___fladd@a+2)^(0+128)
 15771     054B  3000               	movlw	0
 15772     054C  00B3               	movwf	(___fladd@a+1)^(0+128)
 15773     054D  3000               	movlw	0
 15774     054E  00B2               	movwf	___fladd@a^(0+128)
 15775     054F                     l4509:
 15776     054F  17B4               	bsf	(___fladd@a^(0+128)+2),7
 15777     0550                     l4511:
 15778     0550  01B5               	clrf	(___fladd@a^(0+128)+3)
 15779     0551  2D5A               	goto	l1482
 15780     0552                     l4513:
 15781     0552  3000               	movlw	0
 15782     0553  00B5               	movwf	(___fladd@a+3)^(0+128)
 15783     0554  3000               	movlw	0
 15784     0555  00B4               	movwf	(___fladd@a+2)^(0+128)
 15785     0556  3000               	movlw	0
 15786     0557  00B3               	movwf	(___fladd@a+1)^(0+128)
 15787     0558  3000               	movlw	0
 15788     0559  00B2               	movwf	___fladd@a^(0+128)
 15789     055A                     l1482:
 15790     055A  0840               	movf	___fladd@bexp^(0+128),w
 15791     055B  023F               	subwf	___fladd@aexp^(0+128),w
 15792     055C  1803               	skipnc
 15793     055D  2D5F               	goto	u4801
 15794     055E  2D60               	goto	u4800
 15795     055F                     u4801:
 15796     055F  2D84               	goto	l4549
 15797     0560                     u4800:
 15798     0560                     l4515:
 15799     0560  1F3E               	btfss	___fladd@signs^(0+128),6
 15800     0561  2D63               	goto	u4811
 15801     0562  2D64               	goto	u4810
 15802     0563                     u4811:
 15803     0563  2D66               	goto	l4519
 15804     0564                     u4810:
 15805     0564                     l4517:
 15806     0564  3080               	movlw	128
 15807     0565  06BE               	xorwf	___fladd@signs^(0+128),f
 15808     0566                     l4519:
 15809     0566  0840               	movf	___fladd@bexp^(0+128),w
 15810     0567  00C1               	movwf	___fladd@grs^(0+128)
 15811     0568                     l4521:
 15812     0568  083F               	movf	___fladd@aexp^(0+128),w
 15813     0569  00C0               	movwf	___fladd@bexp^(0+128)
 15814     056A                     l4523:
 15815     056A  0841               	movf	___fladd@grs^(0+128),w
 15816     056B  00BF               	movwf	___fladd@aexp^(0+128)
 15817     056C                     l4525:
 15818     056C  082E               	movf	___fladd@b^(0+128),w
 15819     056D  00C1               	movwf	___fladd@grs^(0+128)
 15820     056E                     l4527:
 15821     056E  0832               	movf	___fladd@a^(0+128),w
 15822     056F  00AE               	movwf	___fladd@b^(0+128)
 15823     0570                     l4529:
 15824     0570  0841               	movf	___fladd@grs^(0+128),w
 15825     0571  00B2               	movwf	___fladd@a^(0+128)
 15826     0572                     l4531:
 15827     0572  082F               	movf	(___fladd@b^(0+128)+1),w
 15828     0573  00C1               	movwf	___fladd@grs^(0+128)
 15829     0574                     l4533:
 15830     0574  0833               	movf	(___fladd@a^(0+128)+1),w
 15831     0575  00AF               	movwf	(___fladd@b^(0+128)+1)
 15832     0576                     l4535:
 15833     0576  0841               	movf	___fladd@grs^(0+128),w
 15834     0577  00B3               	movwf	(___fladd@a^(0+128)+1)
 15835     0578                     l4537:
 15836     0578  0830               	movf	(___fladd@b^(0+128)+2),w
 15837     0579  00C1               	movwf	___fladd@grs^(0+128)
 15838     057A                     l4539:
 15839     057A  0834               	movf	(___fladd@a^(0+128)+2),w
 15840     057B  00B0               	movwf	(___fladd@b^(0+128)+2)
 15841     057C                     l4541:
 15842     057C  0841               	movf	___fladd@grs^(0+128),w
 15843     057D  00B4               	movwf	(___fladd@a^(0+128)+2)
 15844     057E                     l4543:
 15845     057E  0831               	movf	(___fladd@b^(0+128)+3),w
 15846     057F  00C1               	movwf	___fladd@grs^(0+128)
 15847     0580                     l4545:
 15848     0580  0835               	movf	(___fladd@a^(0+128)+3),w
 15849     0581  00B1               	movwf	(___fladd@b^(0+128)+3)
 15850     0582                     l4547:
 15851     0582  0841               	movf	___fladd@grs^(0+128),w
 15852     0583  00B5               	movwf	(___fladd@a^(0+128)+3)
 15853     0584                     l4549:
 15854     0584  01C1               	clrf	___fladd@grs^(0+128)
 15855     0585                     l4551:
 15856     0585  083F               	movf	___fladd@aexp^(0+128),w
 15857     0586  00B6               	movwf	??___fladd^(0+128)
 15858     0587  01B7               	clrf	(??___fladd^(0+128)+1)
 15859     0588  0837               	movf	(??___fladd+1)^(0+128),w
 15860     0589  00B9               	movwf	((??___fladd+2)^(0+128)+1)
 15861     058A  0840               	movf	___fladd@bexp^(0+128),w
 15862     058B  0236               	subwf	??___fladd^(0+128),w
 15863     058C  00B8               	movwf	(??___fladd+2)^(0+128)
 15864     058D  1C03               	skipc
 15865     058E  03B9               	decf	((??___fladd+2)^(0+128)+1),f
 15866     058F  0839               	movf	(??___fladd+3)^(0+128),w
 15867     0590  3A80               	xorlw	128
 15868     0591  00BA               	movwf	(??___fladd+4)^(0+128)
 15869     0592  3080               	movlw	128
 15870     0593  023A               	subwf	(??___fladd+4)^(0+128),w
 15871     0594  1D03               	skipz
 15872     0595  2D98               	goto	u4825
 15873     0596  301A               	movlw	26
 15874     0597  0238               	subwf	(??___fladd+2)^(0+128),w
 15875     0598                     u4825:
 15876     0598  1C03               	skipc
 15877     0599  2D9B               	goto	u4821
 15878     059A  2D9C               	goto	u4820
 15879     059B                     u4821:
 15880     059B  2DD2               	goto	l4567
 15881     059C                     u4820:
 15882     059C                     l4553:
 15883     059C  0021               	movlb	1	; select bank1
 15884     059D  0831               	movf	(___fladd@b+3)^(0+128),w
 15885     059E  0430               	iorwf	(___fladd@b+2)^(0+128),w
 15886     059F  042F               	iorwf	(___fladd@b+1)^(0+128),w
 15887     05A0  042E               	iorwf	___fladd@b^(0+128),w
 15888     05A1  1D03               	skipz
 15889     05A2  2DA4               	goto	u4831
 15890     05A3  2DA6               	goto	u4830
 15891     05A4                     u4831:
 15892     05A4  3001               	movlw	1
 15893     05A5  2DA7               	goto	u4840
 15894     05A6                     u4830:
 15895     05A6  3000               	movlw	0
 15896     05A7                     u4840:
 15897     05A7  00C1               	movwf	___fladd@grs^(0+128)
 15898     05A8  3000               	movlw	0
 15899     05A9  00B1               	movwf	(___fladd@b+3)^(0+128)
 15900     05AA  3000               	movlw	0
 15901     05AB  00B0               	movwf	(___fladd@b+2)^(0+128)
 15902     05AC  3000               	movlw	0
 15903     05AD  00AF               	movwf	(___fladd@b+1)^(0+128)
 15904     05AE  3000               	movlw	0
 15905     05AF  00AE               	movwf	___fladd@b^(0+128)
 15906     05B0  083F               	movf	___fladd@aexp^(0+128),w
 15907     05B1  00C0               	movwf	___fladd@bexp^(0+128)
 15908     05B2  2DD9               	goto	l1486
 15909     05B3                     l1488:
 15910     05B3  1C41               	btfss	___fladd@grs^(0+128),0
 15911     05B4  2DB6               	goto	u4851
 15912     05B5  2DB7               	goto	u4850
 15913     05B6                     u4851:
 15914     05B6  2DC1               	goto	l4557
 15915     05B7                     u4850:
 15916     05B7                     l4555:
 15917     05B7  0841               	movf	___fladd@grs^(0+128),w
 15918     05B8  00B6               	movwf	??___fladd^(0+128)
 15919     05B9  3001               	movlw	1
 15920     05BA                     u4865:
 15921     05BA  36B6               	lsrf	??___fladd^(0+128),f
 15922     05BB  0B89               	decfsz	9,f
 15923     05BC  2DBA               	goto	u4865
 15924     05BD  0836               	movf	??___fladd^(0+128),w
 15925     05BE  3801               	iorlw	1
 15926     05BF  00C1               	movwf	___fladd@grs^(0+128)
 15927     05C0  2DC3               	goto	l4559
 15928     05C1                     l4557:
 15929     05C1  1003               	clrc
 15930     05C2  0CC1               	rrf	___fladd@grs^(0+128),f
 15931     05C3                     l4559:
 15932     05C3  1C2E               	btfss	___fladd@b^(0+128),0
 15933     05C4  2DC6               	goto	u4871
 15934     05C5  2DC7               	goto	u4870
 15935     05C6                     u4871:
 15936     05C6  2DC8               	goto	l4563
 15937     05C7                     u4870:
 15938     05C7                     l4561:
 15939     05C7  17C1               	bsf	___fladd@grs^(0+128),7
 15940     05C8                     l4563:
 15941     05C8  3001               	movlw	1
 15942     05C9  00B6               	movwf	??___fladd^(0+128)
 15943     05CA                     u4885:
 15944     05CA  37B1               	asrf	(___fladd@b+3)^(0+128),f
 15945     05CB  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 15946     05CC  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 15947     05CD  0CAE               	rrf	___fladd@b^(0+128),f
 15948     05CE  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 15949     05CF  2DCA               	goto	u4885
 15950     05D0                     l4565:
 15951     05D0  3001               	movlw	1
 15952     05D1  07C0               	addwf	___fladd@bexp^(0+128),f
 15953     05D2                     l4567:
 15954     05D2  0021               	movlb	1	; select bank1
 15955     05D3  083F               	movf	___fladd@aexp^(0+128),w
 15956     05D4  0240               	subwf	___fladd@bexp^(0+128),w
 15957     05D5  1C03               	skipc
 15958     05D6  2DD8               	goto	u4891
 15959     05D7  2DD9               	goto	u4890
 15960     05D8                     u4891:
 15961     05D8  2DB3               	goto	l1488
 15962     05D9                     u4890:
 15963     05D9                     l1486:
 15964     05D9  1B3E               	btfsc	___fladd@signs^(0+128),6
 15965     05DA  2DDC               	goto	u4901
 15966     05DB  2DDD               	goto	u4900
 15967     05DC                     u4901:
 15968     05DC  2E17               	goto	l4593
 15969     05DD                     u4900:
 15970     05DD                     l4569:
 15971     05DD  0840               	movf	___fladd@bexp^(0+128),w
 15972     05DE  1D03               	btfss	3,2
 15973     05DF  2DE1               	goto	u4911
 15974     05E0  2DE2               	goto	u4910
 15975     05E1                     u4911:
 15976     05E1  2DEB               	goto	l4575
 15977     05E2                     u4910:
 15978     05E2                     l4571:
 15979     05E2  3000               	movlw	0
 15980     05E3  00B1               	movwf	(?___fladd+3)^(0+128)
 15981     05E4  3000               	movlw	0
 15982     05E5  00B0               	movwf	(?___fladd+2)^(0+128)
 15983     05E6  3000               	movlw	0
 15984     05E7  00AF               	movwf	(?___fladd+1)^(0+128)
 15985     05E8  3000               	movlw	0
 15986     05E9  00AE               	movwf	?___fladd^(0+128)
 15987     05EA  2F0F               	goto	l1495
 15988     05EB                     l4575:
 15989     05EB  0832               	movf	___fladd@a^(0+128),w
 15990     05EC  07AE               	addwf	___fladd@b^(0+128),f
 15991     05ED  0833               	movf	(___fladd@a+1)^(0+128),w
 15992     05EE  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 15993     05EF  0834               	movf	(___fladd@a+2)^(0+128),w
 15994     05F0  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 15995     05F1  0835               	movf	(___fladd@a+3)^(0+128),w
 15996     05F2  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 15997     05F3                     l4577:
 15998     05F3  1C31               	btfss	(___fladd@b+3)^(0+128),0
 15999     05F4  2DF6               	goto	u4921
 16000     05F5  2DF7               	goto	u4920
 16001     05F6                     u4921:
 16002     05F6  2EA1               	goto	l4629
 16003     05F7                     u4920:
 16004     05F7                     l4579:
 16005     05F7  1C41               	btfss	___fladd@grs^(0+128),0
 16006     05F8  2DFA               	goto	u4931
 16007     05F9  2DFB               	goto	u4930
 16008     05FA                     u4931:
 16009     05FA  2E05               	goto	l4583
 16010     05FB                     u4930:
 16011     05FB                     l4581:
 16012     05FB  0841               	movf	___fladd@grs^(0+128),w
 16013     05FC  00B6               	movwf	??___fladd^(0+128)
 16014     05FD  3001               	movlw	1
 16015     05FE                     u4945:
 16016     05FE  36B6               	lsrf	??___fladd^(0+128),f
 16017     05FF  0B89               	decfsz	9,f
 16018     0600  2DFE               	goto	u4945
 16019     0601  0836               	movf	??___fladd^(0+128),w
 16020     0602  3801               	iorlw	1
 16021     0603  00C1               	movwf	___fladd@grs^(0+128)
 16022     0604  2E07               	goto	l4585
 16023     0605                     l4583:
 16024     0605  1003               	clrc
 16025     0606  0CC1               	rrf	___fladd@grs^(0+128),f
 16026     0607                     l4585:
 16027     0607  1C2E               	btfss	___fladd@b^(0+128),0
 16028     0608  2E0A               	goto	u4951
 16029     0609  2E0B               	goto	u4950
 16030     060A                     u4951:
 16031     060A  2E0C               	goto	l4589
 16032     060B                     u4950:
 16033     060B                     l4587:
 16034     060B  17C1               	bsf	___fladd@grs^(0+128),7
 16035     060C                     l4589:
 16036     060C  3001               	movlw	1
 16037     060D  00B6               	movwf	??___fladd^(0+128)
 16038     060E                     u4965:
 16039     060E  37B1               	asrf	(___fladd@b+3)^(0+128),f
 16040     060F  0CB0               	rrf	(___fladd@b+2)^(0+128),f
 16041     0610  0CAF               	rrf	(___fladd@b+1)^(0+128),f
 16042     0611  0CAE               	rrf	___fladd@b^(0+128),f
 16043     0612  0BB6               	decfsz	(??___fladd^(0+128))& (0+127),f
 16044     0613  2E0E               	goto	u4965
 16045     0614                     l4591:
 16046     0614  3001               	movlw	1
 16047     0615  07C0               	addwf	___fladd@bexp^(0+128),f
 16048     0616  2EA1               	goto	l4629
 16049     0617                     l4593:
 16050     0617  0831               	movf	(___fladd@b+3)^(0+128),w
 16051     0618  3A80               	xorlw	128
 16052     0619  00B6               	movwf	??___fladd^(0+128)
 16053     061A  0835               	movf	(___fladd@a+3)^(0+128),w
 16054     061B  3A80               	xorlw	128
 16055     061C  0236               	subwf	??___fladd^(0+128),w
 16056     061D  1D03               	skipz
 16057     061E  2E29               	goto	u4973
 16058     061F  0834               	movf	(___fladd@a+2)^(0+128),w
 16059     0620  0230               	subwf	(___fladd@b+2)^(0+128),w
 16060     0621  1D03               	skipz
 16061     0622  2E29               	goto	u4973
 16062     0623  0833               	movf	(___fladd@a+1)^(0+128),w
 16063     0624  022F               	subwf	(___fladd@b+1)^(0+128),w
 16064     0625  1D03               	skipz
 16065     0626  2E29               	goto	u4973
 16066     0627  0832               	movf	___fladd@a^(0+128),w
 16067     0628  022E               	subwf	___fladd@b^(0+128),w
 16068     0629                     u4973:
 16069     0629  1803               	skipnc
 16070     062A  2E2C               	goto	u4971
 16071     062B  2E2D               	goto	u4970
 16072     062C                     u4971:
 16073     062C  2E62               	goto	l4605
 16074     062D                     u4970:
 16075     062D                     l4595:
 16076     062D  30FF               	movlw	255
 16077     062E  00B6               	movwf	??___fladd^(0+128)
 16078     062F  30FF               	movlw	255
 16079     0630  00B7               	movwf	(??___fladd^(0+128)+1)
 16080     0631  30FF               	movlw	255
 16081     0632  00B8               	movwf	(??___fladd^(0+128)+2)
 16082     0633  30FF               	movlw	255
 16083     0634  00B9               	movwf	(??___fladd^(0+128)+3)
 16084     0635  082E               	movf	___fladd@b^(0+128),w
 16085     0636  0232               	subwf	___fladd@a^(0+128),w
 16086     0637  00BA               	movwf	(??___fladd+4)^(0+128)
 16087     0638  082F               	movf	(___fladd@b+1)^(0+128),w
 16088     0639  3B33               	subwfb	(___fladd@a+1)^(0+128),w
 16089     063A  00BB               	movwf	((??___fladd+4)^(0+128)+1)
 16090     063B  0830               	movf	(___fladd@b+2)^(0+128),w
 16091     063C  3B34               	subwfb	(___fladd@a+2)^(0+128),w
 16092     063D  00BC               	movwf	((??___fladd+4)^(0+128)+2)
 16093     063E  0831               	movf	(___fladd@b+3)^(0+128),w
 16094     063F  3B35               	subwfb	(___fladd@a+3)^(0+128),w
 16095     0640  00BD               	movwf	((??___fladd+4)^(0+128)+3)
 16096     0641  083A               	movf	(??___fladd+4)^(0+128),w
 16097     0642  07B6               	addwf	??___fladd^(0+128),f
 16098     0643  083B               	movf	(??___fladd+5)^(0+128),w
 16099     0644  3DB7               	addwfc	(??___fladd^(0+128)+1),f
 16100     0645  083C               	movf	(??___fladd+6)^(0+128),w
 16101     0646  3DB8               	addwfc	(??___fladd^(0+128)+2),f
 16102     0647  083D               	movf	(??___fladd+7)^(0+128),w
 16103     0648  3DB9               	addwfc	(??___fladd^(0+128)+3),f
 16104     0649  0839               	movf	(??___fladd+3)^(0+128),w
 16105     064A  00B1               	movwf	(___fladd@b+3)^(0+128)
 16106     064B  0838               	movf	(??___fladd+2)^(0+128),w
 16107     064C  00B0               	movwf	(___fladd@b+2)^(0+128)
 16108     064D  0837               	movf	(??___fladd+1)^(0+128),w
 16109     064E  00AF               	movwf	(___fladd@b+1)^(0+128)
 16110     064F  0836               	movf	??___fladd^(0+128),w
 16111     0650  00AE               	movwf	___fladd@b^(0+128)
 16112     0651                     l4597:
 16113     0651  3080               	movlw	128
 16114     0652  06BE               	xorwf	___fladd@signs^(0+128),f
 16115     0653                     l4599:
 16116     0653  0341               	decf	___fladd@grs^(0+128),w
 16117     0654  3AFF               	xorlw	255
 16118     0655  00C1               	movwf	___fladd@grs^(0+128)
 16119     0656                     l4601:
 16120     0656  0841               	movf	___fladd@grs^(0+128),w
 16121     0657  1D03               	btfss	3,2
 16122     0658  2E5A               	goto	u4981
 16123     0659  2E5B               	goto	u4980
 16124     065A                     u4981:
 16125     065A  2E6A               	goto	l1503
 16126     065B                     u4980:
 16127     065B                     l4603:
 16128     065B  3001               	movlw	1
 16129     065C  07AE               	addwf	___fladd@b^(0+128),f
 16130     065D  3000               	movlw	0
 16131     065E  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 16132     065F  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 16133     0660  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 16134     0661  2E6A               	goto	l1503
 16135     0662                     l4605:
 16136     0662  0832               	movf	___fladd@a^(0+128),w
 16137     0663  02AE               	subwf	___fladd@b^(0+128),f
 16138     0664  0833               	movf	(___fladd@a+1)^(0+128),w
 16139     0665  3BAF               	subwfb	(___fladd@b+1)^(0+128),f
 16140     0666  0834               	movf	(___fladd@a+2)^(0+128),w
 16141     0667  3BB0               	subwfb	(___fladd@b+2)^(0+128),f
 16142     0668  0835               	movf	(___fladd@a+3)^(0+128),w
 16143     0669  3BB1               	subwfb	(___fladd@b+3)^(0+128),f
 16144     066A                     l1503:
 16145     066A  0831               	movf	(___fladd@b+3)^(0+128),w
 16146     066B  0430               	iorwf	(___fladd@b+2)^(0+128),w
 16147     066C  042F               	iorwf	(___fladd@b+1)^(0+128),w
 16148     066D  042E               	iorwf	___fladd@b^(0+128),w
 16149     066E  1D03               	skipz
 16150     066F  2E71               	goto	u4991
 16151     0670  2E72               	goto	u4990
 16152     0671                     u4991:
 16153     0671  2E9D               	goto	l4627
 16154     0672                     u4990:
 16155     0672                     l4607:
 16156     0672  0841               	movf	___fladd@grs^(0+128),w
 16157     0673  1D03               	btfss	3,2
 16158     0674  2E76               	goto	u5001
 16159     0675  2E77               	goto	u5000
 16160     0676                     u5001:
 16161     0676  2E9D               	goto	l4627
 16162     0677                     u5000:
 16163     0677                     l4609:
 16164     0677  3000               	movlw	0
 16165     0678  00B1               	movwf	(?___fladd+3)^(0+128)
 16166     0679  3000               	movlw	0
 16167     067A  00B0               	movwf	(?___fladd+2)^(0+128)
 16168     067B  3000               	movlw	0
 16169     067C  00AF               	movwf	(?___fladd+1)^(0+128)
 16170     067D  3000               	movlw	0
 16171     067E  00AE               	movwf	?___fladd^(0+128)
 16172     067F  2F0F               	goto	l1495
 16173     0680                     l4613:
 16174     0680  3001               	movlw	1
 16175     0681                     u5015:
 16176     0681  35AE               	lslf	___fladd@b^(0+128),f
 16177     0682  0DAF               	rlf	(___fladd@b+1)^(0+128),f
 16178     0683  0DB0               	rlf	(___fladd@b+2)^(0+128),f
 16179     0684  0DB1               	rlf	(___fladd@b+3)^(0+128),f
 16180     0685  0B89               	decfsz	9,f
 16181     0686  2E81               	goto	u5015
 16182     0687                     l4615:
 16183     0687  1FC1               	btfss	___fladd@grs^(0+128),7
 16184     0688  2E8A               	goto	u5021
 16185     0689  2E8B               	goto	u5020
 16186     068A                     u5021:
 16187     068A  2E8C               	goto	l1507
 16188     068B                     u5020:
 16189     068B                     l4617:
 16190     068B  142E               	bsf	___fladd@b^(0+128),0
 16191     068C                     l1507:
 16192     068C  1C41               	btfss	___fladd@grs^(0+128),0
 16193     068D  2E8F               	goto	u5031
 16194     068E  2E90               	goto	u5030
 16195     068F                     u5031:
 16196     068F  2E94               	goto	l4621
 16197     0690                     u5030:
 16198     0690                     l4619:
 16199     0690  1403               	setc
 16200     0691  0D41               	rlf	___fladd@grs^(0+128),w
 16201     0692  00C1               	movwf	___fladd@grs^(0+128)
 16202     0693  2E96               	goto	l4623
 16203     0694                     l4621:
 16204     0694  1003               	clrc
 16205     0695  0DC1               	rlf	___fladd@grs^(0+128),f
 16206     0696                     l4623:
 16207     0696  0840               	movf	___fladd@bexp^(0+128),w
 16208     0697  1903               	btfsc	3,2
 16209     0698  2E9A               	goto	u5041
 16210     0699  2E9B               	goto	u5040
 16211     069A                     u5041:
 16212     069A  2E9D               	goto	l4627
 16213     069B                     u5040:
 16214     069B                     l4625:
 16215     069B  3001               	movlw	1
 16216     069C  02C0               	subwf	___fladd@bexp^(0+128),f
 16217     069D                     l4627:
 16218     069D  1FB0               	btfss	(___fladd@b+2)^(0+128),7
 16219     069E  2EA0               	goto	u5051
 16220     069F  2EA1               	goto	u5050
 16221     06A0                     u5051:
 16222     06A0  2E80               	goto	l4613
 16223     06A1                     u5050:
 16224     06A1                     l4629:
 16225     06A1  01BF               	clrf	___fladd@aexp^(0+128)
 16226     06A2                     l4631:
 16227     06A2  1FC1               	btfss	___fladd@grs^(0+128),7
 16228     06A3  2EA5               	goto	u5061
 16229     06A4  2EA6               	goto	u5060
 16230     06A5                     u5061:
 16231     06A5  2EB4               	goto	l4639
 16232     06A6                     u5060:
 16233     06A6                     l4633:
 16234     06A6  0841               	movf	___fladd@grs^(0+128),w
 16235     06A7  397F               	andlw	127
 16236     06A8  1903               	btfsc	3,2
 16237     06A9  2EAB               	goto	u5071
 16238     06AA  2EAC               	goto	u5070
 16239     06AB                     u5071:
 16240     06AB  2EAF               	goto	l1513
 16241     06AC                     u5070:
 16242     06AC                     l4635:
 16243     06AC  3001               	movlw	1
 16244     06AD  00BF               	movwf	___fladd@aexp^(0+128)
 16245     06AE  2EB4               	goto	l4639
 16246     06AF                     l1513:
 16247     06AF  1C2E               	btfss	___fladd@b^(0+128),0
 16248     06B0  2EB2               	goto	u5081
 16249     06B1  2EB3               	goto	u5080
 16250     06B2                     u5081:
 16251     06B2  2EB4               	goto	l4639
 16252     06B3                     u5080:
 16253     06B3  2EAC               	goto	l4635
 16254     06B4                     l4639:
 16255     06B4  083F               	movf	___fladd@aexp^(0+128),w
 16256     06B5  1903               	btfsc	3,2
 16257     06B6  2EB8               	goto	u5091
 16258     06B7  2EB9               	goto	u5090
 16259     06B8                     u5091:
 16260     06B8  2EE2               	goto	l1516
 16261     06B9                     u5090:
 16262     06B9                     l4641:
 16263     06B9  3001               	movlw	1
 16264     06BA  07AE               	addwf	___fladd@b^(0+128),f
 16265     06BB  3000               	movlw	0
 16266     06BC  3DAF               	addwfc	(___fladd@b+1)^(0+128),f
 16267     06BD  3DB0               	addwfc	(___fladd@b+2)^(0+128),f
 16268     06BE  3DB1               	addwfc	(___fladd@b+3)^(0+128),f
 16269     06BF                     l4643:
 16270     06BF  1C31               	btfss	(___fladd@b+3)^(0+128),0
 16271     06C0  2EC2               	goto	u5101
 16272     06C1  2EC3               	goto	u5100
 16273     06C2                     u5101:
 16274     06C2  2EE2               	goto	l1516
 16275     06C3                     u5100:
 16276     06C3                     l4645:
 16277     06C3  082E               	movf	___fladd@b^(0+128),w
 16278     06C4  00B6               	movwf	??___fladd^(0+128)
 16279     06C5  082F               	movf	(___fladd@b+1)^(0+128),w
 16280     06C6  00B7               	movwf	(??___fladd^(0+128)+1)
 16281     06C7  0830               	movf	(___fladd@b+2)^(0+128),w
 16282     06C8  00B8               	movwf	(??___fladd^(0+128)+2)
 16283     06C9  0831               	movf	(___fladd@b+3)^(0+128),w
 16284     06CA  00B9               	movwf	(??___fladd^(0+128)+3)
 16285     06CB  3001               	movlw	1
 16286     06CC  00BA               	movwf	(??___fladd+4)^(0+128)
 16287     06CD                     u5115:
 16288     06CD  37B9               	asrf	(??___fladd^(0+128)+3),f
 16289     06CE  0CB8               	rrf	(??___fladd^(0+128)+2),f
 16290     06CF  0CB7               	rrf	(??___fladd^(0+128)+1),f
 16291     06D0  0CB6               	rrf	??___fladd^(0+128),f
 16292     06D1                     u5110:
 16293     06D1  0BBA               	decfsz	(??___fladd+4)^(0+128),f
 16294     06D2  2ECD               	goto	u5115
 16295     06D3  0839               	movf	(??___fladd+3)^(0+128),w
 16296     06D4  00B1               	movwf	(___fladd@b+3)^(0+128)
 16297     06D5  0838               	movf	(??___fladd+2)^(0+128),w
 16298     06D6  00B0               	movwf	(___fladd@b+2)^(0+128)
 16299     06D7  0837               	movf	(??___fladd+1)^(0+128),w
 16300     06D8  00AF               	movwf	(___fladd@b+1)^(0+128)
 16301     06D9  0836               	movf	??___fladd^(0+128),w
 16302     06DA  00AE               	movwf	___fladd@b^(0+128)
 16303     06DB  0A40               	incf	___fladd@bexp^(0+128),w
 16304     06DC  1903               	btfsc	3,2
 16305     06DD  2EDF               	goto	u5121
 16306     06DE  2EE0               	goto	u5120
 16307     06DF                     u5121:
 16308     06DF  2EE2               	goto	l1516
 16309     06E0                     u5120:
 16310     06E0                     l4647:
 16311     06E0  3001               	movlw	1
 16312     06E1  07C0               	addwf	___fladd@bexp^(0+128),f
 16313     06E2                     l1516:
 16314     06E2  0A40               	incf	___fladd@bexp^(0+128),w
 16315     06E3  1903               	btfsc	3,2
 16316     06E4  2EE6               	goto	u5131
 16317     06E5  2EE7               	goto	u5130
 16318     06E6                     u5131:
 16319     06E6  2EEC               	goto	l4651
 16320     06E7                     u5130:
 16321     06E7                     l4649:
 16322     06E7  0840               	movf	___fladd@bexp^(0+128),w
 16323     06E8  1D03               	btfss	3,2
 16324     06E9  2EEB               	goto	u5141
 16325     06EA  2EEC               	goto	u5140
 16326     06EB                     u5141:
 16327     06EB  2EFA               	goto	l4657
 16328     06EC                     u5140:
 16329     06EC                     l4651:
 16330     06EC  3000               	movlw	0
 16331     06ED  00B1               	movwf	(___fladd@b+3)^(0+128)
 16332     06EE  3000               	movlw	0
 16333     06EF  00B0               	movwf	(___fladd@b+2)^(0+128)
 16334     06F0  3000               	movlw	0
 16335     06F1  00AF               	movwf	(___fladd@b+1)^(0+128)
 16336     06F2  3000               	movlw	0
 16337     06F3  00AE               	movwf	___fladd@b^(0+128)
 16338     06F4                     l4653:
 16339     06F4  0840               	movf	___fladd@bexp^(0+128),w
 16340     06F5  1D03               	btfss	3,2
 16341     06F6  2EF8               	goto	u5151
 16342     06F7  2EF9               	goto	u5150
 16343     06F8                     u5151:
 16344     06F8  2EFA               	goto	l4657
 16345     06F9                     u5150:
 16346     06F9                     l4655:
 16347     06F9  01BE               	clrf	___fladd@signs^(0+128)
 16348     06FA                     l4657:
 16349     06FA  1C40               	btfss	___fladd@bexp^(0+128),0
 16350     06FB  2EFD               	goto	u5161
 16351     06FC  2EFE               	goto	u5160
 16352     06FD                     u5161:
 16353     06FD  2F00               	goto	l4661
 16354     06FE                     u5160:
 16355     06FE                     l4659:
 16356     06FE  17B0               	bsf	(___fladd@b^(0+128)+2),7
 16357     06FF  2F02               	goto	l1524
 16358     0700                     l4661:
 16359     0700  307F               	movlw	127
 16360     0701  05B0               	andwf	(___fladd@b^(0+128)+2),f
 16361     0702                     l1524:
 16362     0702  0840               	movf	___fladd@bexp^(0+128),w
 16363     0703  00B6               	movwf	??___fladd^(0+128)
 16364     0704  3001               	movlw	1
 16365     0705                     u5175:
 16366     0705  36B6               	lsrf	??___fladd^(0+128),f
 16367     0706  0B89               	decfsz	9,f
 16368     0707  2F05               	goto	u5175
 16369     0708  0836               	movf	??___fladd^(0+128),w
 16370     0709  00B1               	movwf	(___fladd@b^(0+128)+3)
 16371     070A                     l4663:
 16372     070A  1FBE               	btfss	___fladd@signs^(0+128),7
 16373     070B  2F0D               	goto	u5181
 16374     070C  2F0E               	goto	u5180
 16375     070D                     u5181:
 16376     070D  2F0F               	goto	l1525
 16377     070E                     u5180:
 16378     070E                     l4665:
 16379     070E  17B1               	bsf	(___fladd@b^(0+128)+3),7
 16380     070F                     l1525:
 16381     070F                     l1495:
 16382     070F  0008               	return
 16383     0710                     __end_of___fladd:
 16384                           
 16385                           	psect	text56
 16386     1BF9                     __ptext56:	
 16387 ;; *************** function _getHoogtesensor *****************
 16388 ;; Defined at:
 16389 ;;		line 33 in file "adcMeasurements.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;		None
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;		None
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  2    0[BANK1 ] unsigned short 
 16396 ;; Registers used:
 16397 ;;		wreg
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16403 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16406 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;Total ram usage:        2 bytes
 16408 ;; Hardware stack levels used: 1
 16409 ;; Hardware stack levels required when called: 5
 16410 ;; This function calls:
 16411 ;;		Nothing
 16412 ;; This function is called by:
 16413 ;;		_printLogs
 16414 ;;		_position_led_strip
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418     1BF9                     _getHoogtesensor:	
 16419                           ;psect for function _getHoogtesensor
 16420                           
 16421     1BF9                     l4911:	
 16422                           ;incstack = 0
 16423                           ; Regs used in _getHoogtesensor: [wreg]
 16424                           
 16425                           
 16426                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 16427     1BF9  0020               	movlb	0	; select bank0
 16428     1BFA  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 16429     1BFB  0021               	movlb	1	; select bank1
 16430     1BFC  00A1               	movwf	(?_getHoogtesensor+1)^(0+128)
 16431     1BFD  0020               	movlb	0	; select bank0
 16432     1BFE  0859               	movf	_ADC_hoogtesensor,w	;volatile
 16433     1BFF  0021               	movlb	1	; select bank1
 16434     1C00  00A0               	movwf	?_getHoogtesensor^(0+128)
 16435     1C01                     l839:
 16436     1C01  0008               	return
 16437     1C02                     __end_of_getHoogtesensor:
 16438                           
 16439                           	psect	text57
 16440     1BF0                     __ptext57:	
 16441 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 16442 ;; Defined at:
 16443 ;;		line 124 in file "mcc_generated_files/timer/src/tmr4.c"
 16444 ;; Parameters:    Size  Location     Type
 16445 ;;  CallbackHand    2    0[BANK1 ] PTR FTN()void 
 16446 ;;		 -> controller(1), 
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;		None
 16449 ;; Return value:  Size  Location     Type
 16450 ;;                  1    wreg      void 
 16451 ;; Registers used:
 16452 ;;		wreg
 16453 ;; Tracked objects:
 16454 ;;		On entry : 0/0
 16455 ;;		On exit  : 0/0
 16456 ;;		Unchanged: 0/0
 16457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16458 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16461 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16462 ;;Total ram usage:        2 bytes
 16463 ;; Hardware stack levels used: 1
 16464 ;; Hardware stack levels required when called: 5
 16465 ;; This function calls:
 16466 ;;		Nothing
 16467 ;; This function is called by:
 16468 ;;		_main
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           
 16472     1BF0                     _TMR4_PeriodMatchCallbackRegister:	
 16473                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 16474                           
 16475     1BF0                     l6007:	
 16476                           ;incstack = 0
 16477                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 16478                           
 16479                           
 16480                           ;mcc_generated_files/timer/src/tmr4.c: 124: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 125: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 126:    TMR4_PeriodMatchCallback = CallbackHandler;
 16481     1BF0  0021               	movlb	1	; select bank1
 16482     1BF1  0821               	movf	(TMR4_PeriodMatchCallbackRegister@CallbackHandler+1)^(0+128),w
 16483     1BF2  0022               	movlb	2	; select bank2
 16484     1BF3  00E1               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 16485     1BF4  0021               	movlb	1	; select bank1
 16486     1BF5  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler^(0+128),w
 16487     1BF6  0022               	movlb	2	; select bank2
 16488     1BF7  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16489     1BF8                     l476:
 16490     1BF8  0008               	return
 16491     1BF9                     __end_of_TMR4_PeriodMatchCallbackRegister:
 16492                           
 16493                           	psect	text58
 16494     1E4A                     __ptext58:	
 16495 ;; *************** function _SYSTEM_Initialize *****************
 16496 ;; Defined at:
 16497 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;		None
 16500 ;; Auto vars:     Size  Location     Type
 16501 ;;		None
 16502 ;; Return value:  Size  Location     Type
 16503 ;;                  1    wreg      void 
 16504 ;; Registers used:
 16505 ;;		wreg, status,2, status,0, pclath, cstack
 16506 ;; Tracked objects:
 16507 ;;		On entry : 0/0
 16508 ;;		On exit  : 0/0
 16509 ;;		Unchanged: 0/0
 16510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;Total ram usage:        0 bytes
 16516 ;; Hardware stack levels used: 1
 16517 ;; Hardware stack levels required when called: 7
 16518 ;; This function calls:
 16519 ;;		_ADC_Initialize
 16520 ;;		_CLOCK_Initialize
 16521 ;;		_EUSART_Initialize
 16522 ;;		_INTERRUPT_Initialize
 16523 ;;		_PIN_MANAGER_Initialize
 16524 ;;		_SPI1_Initialize
 16525 ;;		_TMR2_Initialize
 16526 ;;		_TMR4_Initialize
 16527 ;;		_TMR6_Initialize
 16528 ;;		_pwm_fan_Initialize
 16529 ;; This function is called by:
 16530 ;;		_main
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534     1E4A                     _SYSTEM_Initialize:	
 16535                           ;psect for function _SYSTEM_Initialize
 16536                           
 16537     1E4A                     l5991:	
 16538                           ;incstack = 0
 16539                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16540                           
 16541                           
 16542                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 16543     1E4A  319B  23DE  319E   	fcall	_CLOCK_Initialize
 16544                           
 16545                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 16546     1E4D  319F  27BC  319E   	fcall	_PIN_MANAGER_Initialize
 16547     1E50                     l5993:
 16548                           
 16549                           ;mcc_generated_files/system/src/system.c: 43:     TMR2_Initialize();
 16550     1E50  319D  2521  319E   	fcall	_TMR2_Initialize
 16551     1E53                     l5995:
 16552                           
 16553                           ;mcc_generated_files/system/src/system.c: 44:     TMR4_Initialize();
 16554     1E53  319D  2532  319E   	fcall	_TMR4_Initialize
 16555     1E56                     l5997:
 16556                           
 16557                           ;mcc_generated_files/system/src/system.c: 45:     TMR6_Initialize();
 16558     1E56  319D  2502  319E   	fcall	_TMR6_Initialize
 16559     1E59                     l5999:
 16560                           
 16561                           ;mcc_generated_files/system/src/system.c: 46:     ADC_Initialize();
 16562     1E59  319D  25C6  319E   	fcall	_ADC_Initialize
 16563     1E5C                     l6001:
 16564                           
 16565                           ;mcc_generated_files/system/src/system.c: 47:     EUSART_Initialize();
 16566     1E5C  3190  2006  319E   	fcall	_EUSART_Initialize
 16567     1E5F                     l6003:
 16568                           
 16569                           ;mcc_generated_files/system/src/system.c: 48:     pwm_fan_Initialize();
 16570     1E5F  319C  2477  319E   	fcall	_pwm_fan_Initialize
 16571                           
 16572                           ;mcc_generated_files/system/src/system.c: 49:     SPI1_Initialize();
 16573     1E62  319C  2441  319E   	fcall	_SPI1_Initialize
 16574     1E65                     l6005:
 16575                           
 16576                           ;mcc_generated_files/system/src/system.c: 50:     INTERRUPT_Initialize();
 16577     1E65  319C  246B  319E   	fcall	_INTERRUPT_Initialize
 16578     1E68                     l361:
 16579     1E68  0008               	return
 16580     1E69                     __end_of_SYSTEM_Initialize:
 16581                           
 16582                           	psect	text59
 16583     1C77                     __ptext59:	
 16584 ;; *************** function _pwm_fan_Initialize *****************
 16585 ;; Defined at:
 16586 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm5.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;		None
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;		None
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  1    wreg      void 
 16593 ;; Registers used:
 16594 ;;		wreg, status,2, status,0
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;Total ram usage:        0 bytes
 16605 ;; Hardware stack levels used: 1
 16606 ;; Hardware stack levels required when called: 5
 16607 ;; This function calls:
 16608 ;;		Nothing
 16609 ;; This function is called by:
 16610 ;;		_SYSTEM_Initialize
 16611 ;; This function uses a non-reentrant model
 16612 ;;
 16613                           
 16614     1C77                     _pwm_fan_Initialize:	
 16615                           ;psect for function _pwm_fan_Initialize
 16616                           
 16617     1C77                     l5651:	
 16618                           ;incstack = 0
 16619                           ; Regs used in _pwm_fan_Initialize: [wreg+status,2+status,0]
 16620                           
 16621                           
 16622                           ;mcc_generated_files/pwm/src/pwm5.c: 50:     PWM5CON = 0x80;
 16623     1C77  3080               	movlw	128
 16624     1C78  002C               	movlb	12	; select bank12
 16625     1C79  0099               	movwf	25	;volatile
 16626                           
 16627                           ;mcc_generated_files/pwm/src/pwm5.c: 53:     PWM5DCH = 0x7F;
 16628     1C7A  307F               	movlw	127
 16629     1C7B  0098               	movwf	24	;volatile
 16630                           
 16631                           ;mcc_generated_files/pwm/src/pwm5.c: 56:     PWM5DCL = 0xC0;
 16632     1C7C  30C0               	movlw	192
 16633     1C7D  0097               	movwf	23	;volatile
 16634     1C7E                     l5653:
 16635                           
 16636                           ;mcc_generated_files/pwm/src/pwm5.c: 60:     PWMTMRSbits.P5TSEL = 0x1;
 16637     1C7E  081F               	movf	31,w	;volatile
 16638     1C7F  39FC               	andlw	-4
 16639     1C80  3801               	iorlw	1
 16640     1C81  009F               	movwf	31	;volatile
 16641     1C82                     l69:
 16642     1C82  0008               	return
 16643     1C83                     __end_of_pwm_fan_Initialize:
 16644                           
 16645                           	psect	text60
 16646     1D02                     __ptext60:	
 16647 ;; *************** function _TMR6_Initialize *****************
 16648 ;; Defined at:
 16649 ;;		line 45 in file "mcc_generated_files/timer/src/tmr6.c"
 16650 ;; Parameters:    Size  Location     Type
 16651 ;;		None
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;		None
 16654 ;; Return value:  Size  Location     Type
 16655 ;;                  1    wreg      void 
 16656 ;; Registers used:
 16657 ;;		wreg, status,2
 16658 ;; Tracked objects:
 16659 ;;		On entry : 0/0
 16660 ;;		On exit  : 0/0
 16661 ;;		Unchanged: 0/0
 16662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;Total ram usage:        0 bytes
 16668 ;; Hardware stack levels used: 1
 16669 ;; Hardware stack levels required when called: 5
 16670 ;; This function calls:
 16671 ;;		Nothing
 16672 ;; This function is called by:
 16673 ;;		_SYSTEM_Initialize
 16674 ;; This function uses a non-reentrant model
 16675 ;;
 16676                           
 16677     1D02                     _TMR6_Initialize:	
 16678                           ;psect for function _TMR6_Initialize
 16679                           
 16680     1D02                     l5743:	
 16681                           ;incstack = 0
 16682                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
 16683                           
 16684                           
 16685                           ;mcc_generated_files/timer/src/tmr6.c: 48:     PR6 = 0xE;
 16686     1D02  300E               	movlw	14
 16687     1D03  0028               	movlb	8	; select bank8
 16688     1D04  009D               	movwf	29	;volatile
 16689     1D05                     l5745:
 16690                           
 16691                           ;mcc_generated_files/timer/src/tmr6.c: 49:     TMR6 = 0x0;
 16692     1D05  019C               	clrf	28	;volatile
 16693     1D06                     l5747:
 16694                           
 16695                           ;mcc_generated_files/timer/src/tmr6.c: 50:     TMR6_PeriodMatchCallback = TMR6_DefaultPe
      +                          riodMatchCallback;
 16696     1D06  30FF               	movlw	low _TMR6_DefaultPeriodMatchCallback
 16697     1D07  0022               	movlb	2	; select bank2
 16698     1D08  00DE               	movwf	_TMR6_PeriodMatchCallback^(0+256)
 16699     1D09  3007               	movlw	high _TMR6_DefaultPeriodMatchCallback
 16700     1D0A  00DF               	movwf	(_TMR6_PeriodMatchCallback^(0+256)+1)
 16701     1D0B                     l5749:
 16702                           
 16703                           ;mcc_generated_files/timer/src/tmr6.c: 52:     PIR2bits.TMR6IF = 0;
 16704     1D0B  0020               	movlb	0	; select bank0
 16705     1D0C  1392               	bcf	18,7	;volatile
 16706     1D0D                     l5751:
 16707                           
 16708                           ;mcc_generated_files/timer/src/tmr6.c: 53:     T6CON = (1 << 0x0)
 16709     1D0D  301D               	movlw	29
 16710     1D0E  0028               	movlb	8	; select bank8
 16711     1D0F  009E               	movwf	30	;volatile
 16712     1D10                     l498:
 16713     1D10  0008               	return
 16714     1D11                     __end_of_TMR6_Initialize:
 16715                           
 16716                           	psect	text61
 16717     1D32                     __ptext61:	
 16718 ;; *************** function _TMR4_Initialize *****************
 16719 ;; Defined at:
 16720 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 16721 ;; Parameters:    Size  Location     Type
 16722 ;;		None
 16723 ;; Auto vars:     Size  Location     Type
 16724 ;;		None
 16725 ;; Return value:  Size  Location     Type
 16726 ;;                  1    wreg      void 
 16727 ;; Registers used:
 16728 ;;		wreg, status,2
 16729 ;; Tracked objects:
 16730 ;;		On entry : 0/0
 16731 ;;		On exit  : 0/0
 16732 ;;		Unchanged: 0/0
 16733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;Total ram usage:        0 bytes
 16739 ;; Hardware stack levels used: 1
 16740 ;; Hardware stack levels required when called: 5
 16741 ;; This function calls:
 16742 ;;		Nothing
 16743 ;; This function is called by:
 16744 ;;		_SYSTEM_Initialize
 16745 ;; This function uses a non-reentrant model
 16746 ;;
 16747                           
 16748     1D32                     _TMR4_Initialize:	
 16749                           ;psect for function _TMR4_Initialize
 16750                           
 16751     1D32                     l5731:	
 16752                           ;incstack = 0
 16753                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 16754                           
 16755                           
 16756                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xFF;
 16757     1D32  30FF               	movlw	255
 16758     1D33  0028               	movlb	8	; select bank8
 16759     1D34  0096               	movwf	22	;volatile
 16760     1D35                     l5733:
 16761                           
 16762                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 16763     1D35  0195               	clrf	21	;volatile
 16764     1D36                     l5735:
 16765                           
 16766                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 16767     1D36  3003               	movlw	low _TMR4_DefaultPeriodMatchCallback
 16768     1D37  0022               	movlb	2	; select bank2
 16769     1D38  00E0               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 16770     1D39  3000               	movlw	high _TMR4_DefaultPeriodMatchCallback
 16771     1D3A  00E1               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 16772     1D3B                     l5737:
 16773                           
 16774                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 16775     1D3B  0020               	movlb	0	; select bank0
 16776     1D3C  1092               	bcf	18,1	;volatile
 16777     1D3D                     l5739:
 16778                           
 16779                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 16780     1D3D  0021               	movlb	1	; select bank1
 16781     1D3E  1492               	bsf	18,1	;volatile
 16782     1D3F                     l5741:
 16783                           
 16784                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (2 << 0x0)
 16785     1D3F  3076               	movlw	118
 16786     1D40  0028               	movlb	8	; select bank8
 16787     1D41  0097               	movwf	23	;volatile
 16788     1D42                     l439:
 16789     1D42  0008               	return
 16790     1D43                     __end_of_TMR4_Initialize:
 16791                           
 16792                           	psect	text62
 16793     1D21                     __ptext62:	
 16794 ;; *************** function _TMR2_Initialize *****************
 16795 ;; Defined at:
 16796 ;;		line 45 in file "mcc_generated_files/timer/src/tmr2.c"
 16797 ;; Parameters:    Size  Location     Type
 16798 ;;		None
 16799 ;; Auto vars:     Size  Location     Type
 16800 ;;		None
 16801 ;; Return value:  Size  Location     Type
 16802 ;;                  1    wreg      void 
 16803 ;; Registers used:
 16804 ;;		wreg, status,2
 16805 ;; Tracked objects:
 16806 ;;		On entry : 0/0
 16807 ;;		On exit  : 0/0
 16808 ;;		Unchanged: 0/0
 16809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16814 ;;Total ram usage:        0 bytes
 16815 ;; Hardware stack levels used: 1
 16816 ;; Hardware stack levels required when called: 5
 16817 ;; This function calls:
 16818 ;;		Nothing
 16819 ;; This function is called by:
 16820 ;;		_SYSTEM_Initialize
 16821 ;; This function uses a non-reentrant model
 16822 ;;
 16823                           
 16824     1D21                     _TMR2_Initialize:	
 16825                           ;psect for function _TMR2_Initialize
 16826                           
 16827     1D21                     l5719:	
 16828                           ;incstack = 0
 16829                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16830                           
 16831                           
 16832                           ;mcc_generated_files/timer/src/tmr2.c: 48:     PR2 = 0xFF;
 16833     1D21  30FF               	movlw	255
 16834     1D22  0020               	movlb	0	; select bank0
 16835     1D23  009E               	movwf	30	;volatile
 16836     1D24                     l5721:
 16837                           
 16838                           ;mcc_generated_files/timer/src/tmr2.c: 49:     TMR2 = 0x0;
 16839     1D24  019D               	clrf	29	;volatile
 16840     1D25                     l5723:
 16841                           
 16842                           ;mcc_generated_files/timer/src/tmr2.c: 50:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 16843     1D25  3002               	movlw	low _TMR2_DefaultPeriodMatchCallback
 16844     1D26  0022               	movlb	2	; select bank2
 16845     1D27  00E2               	movwf	_TMR2_PeriodMatchCallback^(0+256)
 16846     1D28  3000               	movlw	high _TMR2_DefaultPeriodMatchCallback
 16847     1D29  00E3               	movwf	(_TMR2_PeriodMatchCallback^(0+256)+1)
 16848     1D2A                     l5725:
 16849                           
 16850                           ;mcc_generated_files/timer/src/tmr2.c: 52:     PIR1bits.TMR2IF = 0;
 16851     1D2A  0020               	movlb	0	; select bank0
 16852     1D2B  1091               	bcf	17,1	;volatile
 16853     1D2C                     l5727:
 16854                           
 16855                           ;mcc_generated_files/timer/src/tmr2.c: 53:     PIE1bits.TMR2IE = 1;
 16856     1D2C  0021               	movlb	1	; select bank1
 16857     1D2D  1491               	bsf	17,1	;volatile
 16858     1D2E                     l5729:
 16859                           
 16860                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2CON = (1 << 0x0)
 16861     1D2E  301D               	movlw	29
 16862     1D2F  0020               	movlb	0	; select bank0
 16863     1D30  009F               	movwf	31	;volatile
 16864     1D31                     l380:
 16865     1D31  0008               	return
 16866     1D32                     __end_of_TMR2_Initialize:
 16867                           
 16868                           	psect	text63
 16869     1C41                     __ptext63:	
 16870 ;; *************** function _SPI1_Initialize *****************
 16871 ;; Defined at:
 16872 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
 16873 ;; Parameters:    Size  Location     Type
 16874 ;;		None
 16875 ;; Auto vars:     Size  Location     Type
 16876 ;;		None
 16877 ;; Return value:  Size  Location     Type
 16878 ;;                  1    wreg      void 
 16879 ;; Registers used:
 16880 ;;		status,2
 16881 ;; Tracked objects:
 16882 ;;		On entry : 0/0
 16883 ;;		On exit  : 0/0
 16884 ;;		Unchanged: 0/0
 16885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16890 ;;Total ram usage:        0 bytes
 16891 ;; Hardware stack levels used: 1
 16892 ;; Hardware stack levels required when called: 5
 16893 ;; This function calls:
 16894 ;;		Nothing
 16895 ;; This function is called by:
 16896 ;;		_SYSTEM_Initialize
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900     1C41                     _SPI1_Initialize:	
 16901                           ;psect for function _SPI1_Initialize
 16902                           
 16903     1C41                     l5655:	
 16904                           ;incstack = 0
 16905                           ; Regs used in _SPI1_Initialize: [status,2]
 16906                           
 16907                           
 16908                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
 16909     1C41  0021               	movlb	1	; select bank1
 16910     1C42  1191               	bcf	17,3	;volatile
 16911                           
 16912                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
 16913     1C43  0020               	movlb	0	; select bank0
 16914     1C44  1191               	bcf	17,3	;volatile
 16915     1C45                     l5657:
 16916                           
 16917                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
 16918     1C45  0024               	movlb	4	; select bank4
 16919     1C46  0194               	clrf	20	;volatile
 16920                           
 16921                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
 16922     1C47  0195               	clrf	21	;volatile
 16923                           
 16924                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
 16925     1C48  0197               	clrf	23	;volatile
 16926                           
 16927                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
 16928     1C49  0192               	clrf	18	;volatile
 16929     1C4A                     l119:
 16930     1C4A  0008               	return
 16931     1C4B                     __end_of_SPI1_Initialize:
 16932                           
 16933                           	psect	text64
 16934     1FBC                     __ptext64:	
 16935 ;; *************** function _PIN_MANAGER_Initialize *****************
 16936 ;; Defined at:
 16937 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 16938 ;; Parameters:    Size  Location     Type
 16939 ;;		None
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;		None
 16942 ;; Return value:  Size  Location     Type
 16943 ;;                  1    wreg      void 
 16944 ;; Registers used:
 16945 ;;		status,2
 16946 ;; Tracked objects:
 16947 ;;		On entry : 0/0
 16948 ;;		On exit  : 0/0
 16949 ;;		Unchanged: 0/0
 16950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16955 ;;Total ram usage:        0 bytes
 16956 ;; Hardware stack levels used: 1
 16957 ;; Hardware stack levels required when called: 5
 16958 ;; This function calls:
 16959 ;;		Nothing
 16960 ;; This function is called by:
 16961 ;;		_SYSTEM_Initialize
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965     1FBC                     _PIN_MANAGER_Initialize:	
 16966                           ;psect for function _PIN_MANAGER_Initialize
 16967                           
 16968     1FBC                     l5681:	
 16969                           ;incstack = 0
 16970                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 16971                           
 16972                           
 16973                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 16974     1FBC  0022               	movlb	2	; select bank2
 16975     1FBD  018C               	clrf	12	;volatile
 16976                           
 16977                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 16978     1FBE  018D               	clrf	13	;volatile
 16979                           
 16980                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 16981     1FBF  018E               	clrf	14	;volatile
 16982     1FC0                     l5683:
 16983                           
 16984                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
 16985     1FC0  3019               	movlw	25
 16986     1FC1  0021               	movlb	1	; select bank1
 16987     1FC2  008C               	movwf	12	;volatile
 16988     1FC3                     l5685:
 16989                           
 16990                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 16991     1FC3  3020               	movlw	32
 16992     1FC4  008D               	movwf	13	;volatile
 16993     1FC5                     l5687:
 16994                           
 16995                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xDF;
 16996     1FC5  30DF               	movlw	223
 16997     1FC6  008E               	movwf	14	;volatile
 16998     1FC7                     l5689:
 16999                           
 17000                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x10;
 17001     1FC7  3010               	movlw	16
 17002     1FC8  0023               	movlb	3	; select bank3
 17003     1FC9  008C               	movwf	12	;volatile
 17004     1FCA                     l5691:
 17005                           
 17006                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x80;
 17007     1FCA  3080               	movlw	128
 17008     1FCB  008D               	movwf	13	;volatile
 17009     1FCC                     l5693:
 17010                           
 17011                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xFF;
 17012     1FCC  30FF               	movlw	255
 17013     1FCD  008E               	movwf	14	;volatile
 17014                           
 17015                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 17016     1FCE  0024               	movlb	4	; select bank4
 17017     1FCF  018C               	clrf	12	;volatile
 17018                           
 17019                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 17020     1FD0  018D               	clrf	13	;volatile
 17021                           
 17022                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
 17023     1FD1  018E               	clrf	14	;volatile
 17024                           
 17025                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
 17026     1FD2  0025               	movlb	5	; select bank5
 17027     1FD3  018C               	clrf	12	;volatile
 17028                           
 17029                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
 17030     1FD4  018D               	clrf	13	;volatile
 17031                           
 17032                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
 17033     1FD5  018E               	clrf	14	;volatile
 17034     1FD6                     l5695:
 17035                           
 17036                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 17037     1FD6  3037               	movlw	55
 17038     1FD7  0026               	movlb	6	; select bank6
 17039     1FD8  008C               	movwf	12	;volatile
 17040     1FD9                     l5697:
 17041                           
 17042                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 17043     1FD9  30F0               	movlw	240
 17044     1FDA  008D               	movwf	13	;volatile
 17045     1FDB                     l5699:
 17046                           
 17047                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 17048     1FDB  30FF               	movlw	255
 17049     1FDC  008E               	movwf	14	;volatile
 17050     1FDD                     l5701:
 17051                           
 17052                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
 17053     1FDD  303F               	movlw	63
 17054     1FDE  0027               	movlb	7	; select bank7
 17055     1FDF  008C               	movwf	12	;volatile
 17056     1FE0                     l5703:
 17057                           
 17058                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
 17059     1FE0  30F0               	movlw	240
 17060     1FE1  008D               	movwf	13	;volatile
 17061     1FE2                     l5705:
 17062                           
 17063                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
 17064     1FE2  30FF               	movlw	255
 17065     1FE3  008E               	movwf	14	;volatile
 17066                           
 17067                           ;mcc_generated_files/system/src/pins.c: 91:     SSP1DATPPS = 0x0;
 17068     1FE4  003C               	movlb	28	; select bank28
 17069     1FE5  01A1               	clrf	33	;volatile
 17070     1FE6                     l5707:
 17071                           
 17072                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0xD;
 17073     1FE6  300D               	movlw	13
 17074     1FE7  00A4               	movwf	36	;volatile
 17075     1FE8                     l5709:
 17076                           
 17077                           ;mcc_generated_files/system/src/pins.c: 93:     RB4PPS = 25;
 17078     1FE8  3019               	movlw	25
 17079     1FE9  003D               	movlb	29	; select bank29
 17080     1FEA  009C               	movwf	28	;volatile
 17081     1FEB                     l5711:
 17082                           
 17083                           ;mcc_generated_files/system/src/pins.c: 94:     RC5PPS = 2;
 17084     1FEB  3002               	movlw	2
 17085     1FEC  00A5               	movwf	37	;volatile
 17086     1FED                     l5713:
 17087                           
 17088                           ;mcc_generated_files/system/src/pins.c: 95:     RB7PPS = 20;
 17089     1FED  3014               	movlw	20
 17090     1FEE  009F               	movwf	31	;volatile
 17091     1FEF                     l5715:
 17092                           
 17093                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xE;
 17094     1FEF  300E               	movlw	14
 17095     1FF0  003C               	movlb	28	; select bank28
 17096     1FF1  00A0               	movwf	32	;volatile
 17097     1FF2                     l5717:
 17098                           
 17099                           ;mcc_generated_files/system/src/pins.c: 97:     RB6PPS = 24;
 17100     1FF2  3018               	movlw	24
 17101     1FF3  003D               	movlb	29	; select bank29
 17102     1FF4  009E               	movwf	30	;volatile
 17103                           
 17104                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
 17105     1FF5  0027               	movlb	7	; select bank7
 17106     1FF6  0191               	clrf	17	;volatile
 17107                           
 17108                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
 17109     1FF7  0192               	clrf	18	;volatile
 17110                           
 17111                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
 17112     1FF8  0193               	clrf	19	;volatile
 17113                           
 17114                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
 17115     1FF9  0194               	clrf	20	;volatile
 17116                           
 17117                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
 17118     1FFA  0195               	clrf	21	;volatile
 17119                           
 17120                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
 17121     1FFB  0196               	clrf	22	;volatile
 17122                           
 17123                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
 17124     1FFC  0197               	clrf	23	;volatile
 17125                           
 17126                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
 17127     1FFD  0198               	clrf	24	;volatile
 17128                           
 17129                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
 17130     1FFE  0199               	clrf	25	;volatile
 17131     1FFF                     l335:
 17132     1FFF  0008               	return
 17133     2000                     __end_of_PIN_MANAGER_Initialize:
 17134                           
 17135                           	psect	text65
 17136     1C6B                     __ptext65:	
 17137 ;; *************** function _INTERRUPT_Initialize *****************
 17138 ;; Defined at:
 17139 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 17140 ;; Parameters:    Size  Location     Type
 17141 ;;		None
 17142 ;; Auto vars:     Size  Location     Type
 17143 ;;		None
 17144 ;; Return value:  Size  Location     Type
 17145 ;;                  1    wreg      void 
 17146 ;; Registers used:
 17147 ;;		wreg, status,2, status,0, pclath, cstack
 17148 ;; Tracked objects:
 17149 ;;		On entry : 0/0
 17150 ;;		On exit  : 0/0
 17151 ;;		Unchanged: 0/0
 17152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;Total ram usage:        0 bytes
 17158 ;; Hardware stack levels used: 1
 17159 ;; Hardware stack levels required when called: 6
 17160 ;; This function calls:
 17161 ;;		_INT_SetInterruptHandler
 17162 ;; This function is called by:
 17163 ;;		_SYSTEM_Initialize
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167     1C6B                     _INTERRUPT_Initialize:	
 17168                           ;psect for function _INTERRUPT_Initialize
 17169                           
 17170     1C6B                     l5673:	
 17171                           ;incstack = 0
 17172                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17173                           
 17174                           
 17175                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
 17176     1C6B  0020               	movlb	0	; select bank0
 17177     1C6C  1010               	bcf	16,0	;volatile
 17178                           
 17179                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
 17180     1C6D  140B               	bsf	11,0	;volatile
 17181     1C6E                     l5675:
 17182                           
 17183                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 17184     1C6E  3000               	movlw	0
 17185     1C6F  0021               	movlb	1	; select bank1
 17186     1C70  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 17187     1C71  3000               	movlw	0
 17188     1C72  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17189     1C73  319B  23E7  319C   	fcall	_INT_SetInterruptHandler
 17190     1C76                     l213:
 17191     1C76  0008               	return
 17192     1C77                     __end_of_INTERRUPT_Initialize:
 17193                           
 17194                           	psect	text66
 17195     1BE7                     __ptext66:	
 17196 ;; *************** function _INT_SetInterruptHandler *****************
 17197 ;; Defined at:
 17198 ;;		line 113 in file "mcc_generated_files/system/src/interrupt.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17201 ;;		 -> INT_DefaultInterruptHandler(1), 
 17202 ;; Auto vars:     Size  Location     Type
 17203 ;;		None
 17204 ;; Return value:  Size  Location     Type
 17205 ;;                  1    wreg      void 
 17206 ;; Registers used:
 17207 ;;		wreg
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17213 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17216 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;Total ram usage:        2 bytes
 17218 ;; Hardware stack levels used: 1
 17219 ;; Hardware stack levels required when called: 5
 17220 ;; This function calls:
 17221 ;;		Nothing
 17222 ;; This function is called by:
 17223 ;;		_INTERRUPT_Initialize
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227     1BE7                     _INT_SetInterruptHandler:	
 17228                           ;psect for function _INT_SetInterruptHandler
 17229                           
 17230     1BE7                     l4961:	
 17231                           ;incstack = 0
 17232                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 17233                           
 17234                           
 17235                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 17236     1BE7  0021               	movlb	1	; select bank1
 17237     1BE8  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17238     1BE9  0020               	movlb	0	; select bank0
 17239     1BEA  00E2               	movwf	_INT_InterruptHandler+1
 17240     1BEB  0021               	movlb	1	; select bank1
 17241     1BEC  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 17242     1BED  0020               	movlb	0	; select bank0
 17243     1BEE  00E1               	movwf	_INT_InterruptHandler
 17244     1BEF                     l240:
 17245     1BEF  0008               	return
 17246     1BF0                     __end_of_INT_SetInterruptHandler:
 17247                           
 17248                           	psect	text67
 17249     1006                     __ptext67:	
 17250 ;; *************** function _EUSART_Initialize *****************
 17251 ;; Defined at:
 17252 ;;		line 131 in file "mcc_generated_files/uart/src/eusart.c"
 17253 ;; Parameters:    Size  Location     Type
 17254 ;;		None
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;		None
 17257 ;; Return value:  Size  Location     Type
 17258 ;;                  1    wreg      void 
 17259 ;; Registers used:
 17260 ;;		wreg, status,2, status,0, pclath, cstack
 17261 ;; Tracked objects:
 17262 ;;		On entry : 0/0
 17263 ;;		On exit  : 0/0
 17264 ;;		Unchanged: 0/0
 17265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17270 ;;Total ram usage:        0 bytes
 17271 ;; Hardware stack levels used: 1
 17272 ;; Hardware stack levels required when called: 6
 17273 ;; This function calls:
 17274 ;;		_EUSART_FramingErrorCallbackRegister
 17275 ;;		_EUSART_OverrunErrorCallbackRegister
 17276 ;; This function is called by:
 17277 ;;		_SYSTEM_Initialize
 17278 ;; This function uses a non-reentrant model
 17279 ;;
 17280                           
 17281     1006                     _EUSART_Initialize:	
 17282                           ;psect for function _EUSART_Initialize
 17283                           
 17284     1006                     l5753:	
 17285                           ;incstack = 0
 17286                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17287                           
 17288                           
 17289                           ;mcc_generated_files/uart/src/eusart.c: 133:     PIE1bits.RCIE = 0;
 17290     1006  0021               	movlb	1	; select bank1
 17291     1007  1291               	bcf	17,5	;volatile
 17292     1008                     l5755:
 17293                           
 17294                           ;mcc_generated_files/uart/src/eusart.c: 134:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 17295     1008  3085               	movlw	low _EUSART_ReceiveISR
 17296     1009  0023               	movlb	3	; select bank3
 17297     100A  00D4               	movwf	_EUSART_RxInterruptHandler^(0+384)
 17298     100B  3010               	movlw	high _EUSART_ReceiveISR
 17299     100C  00D5               	movwf	(_EUSART_RxInterruptHandler^(0+384)+1)
 17300     100D                     l5757:
 17301                           
 17302                           ;mcc_generated_files/uart/src/eusart.c: 136:     PIE1bits.TXIE = 0;
 17303     100D  0021               	movlb	1	; select bank1
 17304     100E  1211               	bcf	17,4	;volatile
 17305                           
 17306                           ;mcc_generated_files/uart/src/eusart.c: 137:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 17307     100F  3010               	movlw	low _EUSART_TransmitISR
 17308     1010  0022               	movlb	2	; select bank2
 17309     1011  00E4               	movwf	_EUSART_TxInterruptHandler^(0+256)
 17310     1012  301E               	movlw	high _EUSART_TransmitISR
 17311     1013  00E5               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 17312     1014                     l5759:
 17313                           
 17314                           ;mcc_generated_files/uart/src/eusart.c: 142:     BAUD1CON = 0x48;
 17315     1014  3048               	movlw	72
 17316     1015  0023               	movlb	3	; select bank3
 17317     1016  009F               	movwf	31	;volatile
 17318     1017                     l5761:
 17319                           
 17320                           ;mcc_generated_files/uart/src/eusart.c: 144:     RC1STA = 0x90;
 17321     1017  3090               	movlw	144
 17322     1018  009D               	movwf	29	;volatile
 17323     1019                     l5763:
 17324                           
 17325                           ;mcc_generated_files/uart/src/eusart.c: 146:     TX1STA = 0x26;
 17326     1019  3026               	movlw	38
 17327     101A  009E               	movwf	30	;volatile
 17328     101B                     l5765:
 17329                           
 17330                           ;mcc_generated_files/uart/src/eusart.c: 148:     SP1BRGL = 0x40;
 17331     101B  3040               	movlw	64
 17332     101C  009B               	movwf	27	;volatile
 17333     101D                     l5767:
 17334                           
 17335                           ;mcc_generated_files/uart/src/eusart.c: 150:     SP1BRGH = 0x3;
 17336     101D  3003               	movlw	3
 17337     101E  009C               	movwf	28	;volatile
 17338     101F                     l5769:
 17339                           
 17340                           ;mcc_generated_files/uart/src/eusart.c: 152:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 17341     101F  3000               	movlw	low _EUSART_DefaultFramingErrorCallback
 17342     1020  0021               	movlb	1	; select bank1
 17343     1021  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)
 17344     1022  3008               	movlw	high _EUSART_DefaultFramingErrorCallback
 17345     1023  00A1               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
 17346     1024  319C  24E4  3190   	fcall	_EUSART_FramingErrorCallbackRegister
 17347     1027                     l5771:
 17348                           
 17349                           ;mcc_generated_files/uart/src/eusart.c: 153:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 17350     1027  30B3               	movlw	low _EUSART_DefaultOverrunErrorCallback
 17351     1028  0021               	movlb	1	; select bank1
 17352     1029  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)
 17353     102A  301B               	movlw	high _EUSART_DefaultOverrunErrorCallback
 17354     102B  00A1               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
 17355     102C  319C  24F3  3190   	fcall	_EUSART_OverrunErrorCallbackRegister
 17356     102F                     l5773:
 17357                           
 17358                           ;mcc_generated_files/uart/src/eusart.c: 154:     eusartRxLastError.status = 0;
 17359     102F  0022               	movlb	2	; select bank2
 17360     1030  01CC               	clrf	_eusartRxLastError^(0+256)	;volatile
 17361     1031  01CD               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 17362     1032                     l5775:
 17363                           
 17364                           ;mcc_generated_files/uart/src/eusart.c: 156:     eusartTxHead = 0;
 17365     1032  0020               	movlb	0	; select bank0
 17366     1033  01EB               	clrf	_eusartTxHead	;volatile
 17367     1034                     l5777:
 17368                           
 17369                           ;mcc_generated_files/uart/src/eusart.c: 157:     eusartTxTail = 0;
 17370     1034  01EA               	clrf	_eusartTxTail	;volatile
 17371     1035                     l5779:
 17372                           
 17373                           ;mcc_generated_files/uart/src/eusart.c: 158:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 17374     1035  3008               	movlw	8
 17375     1036  00E9               	movwf	_eusartTxBufferRemaining	;volatile
 17376     1037                     l5781:
 17377                           
 17378                           ;mcc_generated_files/uart/src/eusart.c: 160:     eusartRxHead = 0;
 17379     1037  01E8               	clrf	_eusartRxHead	;volatile
 17380     1038                     l5783:
 17381                           
 17382                           ;mcc_generated_files/uart/src/eusart.c: 161:     eusartRxTail = 0;
 17383     1038  01E7               	clrf	_eusartRxTail	;volatile
 17384     1039                     l5785:
 17385                           
 17386                           ;mcc_generated_files/uart/src/eusart.c: 162:     eusartRxCount = 0;
 17387     1039  01E6               	clrf	_eusartRxCount	;volatile
 17388     103A                     l5787:
 17389                           
 17390                           ;mcc_generated_files/uart/src/eusart.c: 164:     PIE1bits.RCIE = 1;
 17391     103A  0021               	movlb	1	; select bank1
 17392     103B  1691               	bsf	17,5	;volatile
 17393     103C                     l638:
 17394     103C  0008               	return
 17395     103D                     __end_of_EUSART_Initialize:
 17396                           
 17397                           	psect	text68
 17398     1CF3                     __ptext68:	
 17399 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 17400 ;; Defined at:
 17401 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17404 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 17405 ;; Auto vars:     Size  Location     Type
 17406 ;;		None
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  1    wreg      void 
 17409 ;; Registers used:
 17410 ;;		wreg, status,2, status,0
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/0
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17416 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17419 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17420 ;;Total ram usage:        2 bytes
 17421 ;; Hardware stack levels used: 1
 17422 ;; Hardware stack levels required when called: 5
 17423 ;; This function calls:
 17424 ;;		Nothing
 17425 ;; This function is called by:
 17426 ;;		_EUSART_Initialize
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430     1CF3                     _EUSART_OverrunErrorCallbackRegister:	
 17431                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 17432                           
 17433     1CF3                     l4967:	
 17434                           ;incstack = 0
 17435                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 17436                           
 17437                           
 17438                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 17439     1CF3  0021               	movlb	1	; select bank1
 17440     1CF4  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17441     1CF5  0421               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17442     1CF6  1903               	btfsc	3,2
 17443     1CF7  2CF9               	goto	u5721
 17444     1CF8  2CFA               	goto	u5720
 17445     1CF9                     u5721:
 17446     1CF9  2D01               	goto	l756
 17447     1CFA                     u5720:
 17448     1CFA                     l4969:
 17449                           
 17450                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:         EUSART_OverrunErrorHandler = callbackHandler;
 17451     1CFA  0821               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17452     1CFB  0020               	movlb	0	; select bank0
 17453     1CFC  00DE               	movwf	_EUSART_OverrunErrorHandler+1
 17454     1CFD  0021               	movlb	1	; select bank1
 17455     1CFE  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
 17456     1CFF  0020               	movlb	0	; select bank0
 17457     1D00  00DD               	movwf	_EUSART_OverrunErrorHandler
 17458     1D01                     l756:
 17459     1D01  0008               	return
 17460     1D02                     __end_of_EUSART_OverrunErrorCallbackRegister:
 17461                           
 17462                           	psect	text69
 17463     1CE4                     __ptext69:	
 17464 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 17465 ;; Defined at:
 17466 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
 17469 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 17470 ;; Auto vars:     Size  Location     Type
 17471 ;;		None
 17472 ;; Return value:  Size  Location     Type
 17473 ;;                  1    wreg      void 
 17474 ;; Registers used:
 17475 ;;		wreg, status,2, status,0
 17476 ;; Tracked objects:
 17477 ;;		On entry : 0/0
 17478 ;;		On exit  : 0/0
 17479 ;;		Unchanged: 0/0
 17480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17481 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17484 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17485 ;;Total ram usage:        2 bytes
 17486 ;; Hardware stack levels used: 1
 17487 ;; Hardware stack levels required when called: 5
 17488 ;; This function calls:
 17489 ;;		Nothing
 17490 ;; This function is called by:
 17491 ;;		_EUSART_Initialize
 17492 ;; This function uses a non-reentrant model
 17493 ;;
 17494                           
 17495     1CE4                     _EUSART_FramingErrorCallbackRegister:	
 17496                           ;psect for function _EUSART_FramingErrorCallbackRegister
 17497                           
 17498     1CE4                     l4963:	
 17499                           ;incstack = 0
 17500                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 17501                           
 17502                           
 17503                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 17504     1CE4  0021               	movlb	1	; select bank1
 17505     1CE5  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17506     1CE6  0421               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17507     1CE7  1903               	btfsc	3,2
 17508     1CE8  2CEA               	goto	u5711
 17509     1CE9  2CEB               	goto	u5710
 17510     1CEA                     u5711:
 17511     1CEA  2CF2               	goto	l752
 17512     1CEB                     u5710:
 17513     1CEB                     l4965:
 17514                           
 17515                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_FramingErrorHandler = callbackHandler;
 17516     1CEB  0821               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
 17517     1CEC  0020               	movlb	0	; select bank0
 17518     1CED  00E0               	movwf	_EUSART_FramingErrorHandler+1
 17519     1CEE  0021               	movlb	1	; select bank1
 17520     1CEF  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+128),w
 17521     1CF0  0020               	movlb	0	; select bank0
 17522     1CF1  00DF               	movwf	_EUSART_FramingErrorHandler
 17523     1CF2                     l752:
 17524     1CF2  0008               	return
 17525     1CF3                     __end_of_EUSART_FramingErrorCallbackRegister:
 17526                           
 17527                           	psect	text70
 17528     1BDE                     __ptext70:	
 17529 ;; *************** function _CLOCK_Initialize *****************
 17530 ;; Defined at:
 17531 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;		None
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;		None
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  1    wreg      void 
 17538 ;; Registers used:
 17539 ;;		status,2
 17540 ;; Tracked objects:
 17541 ;;		On entry : 0/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;Total ram usage:        0 bytes
 17550 ;; Hardware stack levels used: 1
 17551 ;; Hardware stack levels required when called: 5
 17552 ;; This function calls:
 17553 ;;		Nothing
 17554 ;; This function is called by:
 17555 ;;		_SYSTEM_Initialize
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559     1BDE                     _CLOCK_Initialize:	
 17560                           ;psect for function _CLOCK_Initialize
 17561                           
 17562     1BDE                     l5677:	
 17563                           ;incstack = 0
 17564                           ; Regs used in _CLOCK_Initialize: [status,2]
 17565                           
 17566                           
 17567                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 17568     1BDE  0032               	movlb	18	; select bank18
 17569     1BDF  0199               	clrf	25	;volatile
 17570                           
 17571                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 17572     1BE0  019B               	clrf	27	;volatile
 17573                           
 17574                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 17575     1BE1  019D               	clrf	29	;volatile
 17576     1BE2                     l5679:
 17577                           
 17578                           ;mcc_generated_files/system/src/clock.c: 51:     OSCFRQ = (6 << 0x0);
 17579     1BE2  3006               	movlw	6
 17580     1BE3  009F               	movwf	31	;volatile
 17581                           
 17582                           ;mcc_generated_files/system/src/clock.c: 52:     OSCSTAT1 =
 17583     1BE4  019E               	clrf	30	;volatile
 17584     1BE5  019C               	clrf	28	;volatile
 17585     1BE6                     l258:
 17586     1BE6  0008               	return
 17587     1BE7                     __end_of_CLOCK_Initialize:
 17588                           
 17589                           	psect	text71
 17590     1DC6                     __ptext71:	
 17591 ;; *************** function _ADC_Initialize *****************
 17592 ;; Defined at:
 17593 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;		None
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;		None
 17598 ;; Return value:  Size  Location     Type
 17599 ;;                  1    wreg      void 
 17600 ;; Registers used:
 17601 ;;		wreg, status,2, status,0, pclath, cstack
 17602 ;; Tracked objects:
 17603 ;;		On entry : 0/0
 17604 ;;		On exit  : 0/0
 17605 ;;		Unchanged: 0/0
 17606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;Total ram usage:        0 bytes
 17612 ;; Hardware stack levels used: 1
 17613 ;; Hardware stack levels required when called: 6
 17614 ;; This function calls:
 17615 ;;		_ADC_SetInterruptHandler
 17616 ;; This function is called by:
 17617 ;;		_SYSTEM_Initialize
 17618 ;; This function uses a non-reentrant model
 17619 ;;
 17620                           
 17621     1DC6                     _ADC_Initialize:	
 17622                           ;psect for function _ADC_Initialize
 17623                           
 17624     1DC6                     l5635:	
 17625                           ;incstack = 0
 17626                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17627                           
 17628                           
 17629                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0xA0;
 17630     1DC6  30A0               	movlw	160
 17631     1DC7  0021               	movlb	1	; select bank1
 17632     1DC8  009E               	movwf	30	;volatile
 17633     1DC9                     l5637:
 17634                           
 17635                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 17636     1DC9  019B               	clrf	27	;volatile
 17637                           
 17638                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 17639     1DCA  019C               	clrf	28	;volatile
 17640     1DCB                     l5639:
 17641                           
 17642                           ;mcc_generated_files/adc/src/adc.c: 67:     ADACT = 0x5;
 17643     1DCB  3005               	movlw	5
 17644     1DCC  009F               	movwf	31	;volatile
 17645     1DCD                     l5641:
 17646                           
 17647                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 17648     1DCD  3001               	movlw	1
 17649     1DCE  009D               	movwf	29	;volatile
 17650     1DCF                     l5643:
 17651                           
 17652                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 17653     1DCF  0020               	movlb	0	; select bank0
 17654     1DD0  1311               	bcf	17,6	;volatile
 17655     1DD1                     l5645:
 17656                           
 17657                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 17658     1DD1  30B2               	movlw	low _ADC_DefaultInterruptHandler
 17659     1DD2  0021               	movlb	1	; select bank1
 17660     1DD3  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler^(0+128)
 17661     1DD4  301B               	movlw	high _ADC_DefaultInterruptHandler
 17662     1DD5  00A1               	movwf	(ADC_SetInterruptHandler@InterruptHandler^(0+128)+1)
 17663     1DD6  319B  23D5  319D   	fcall	_ADC_SetInterruptHandler
 17664     1DD9                     l5647:
 17665                           
 17666                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 17667     1DD9  0021               	movlb	1	; select bank1
 17668     1DDA  1711               	bsf	17,6	;volatile
 17669     1DDB                     l27:
 17670     1DDB  0008               	return
 17671     1DDC                     __end_of_ADC_Initialize:
 17672                           
 17673                           	psect	text72
 17674     1BD5                     __ptext72:	
 17675 ;; *************** function _ADC_SetInterruptHandler *****************
 17676 ;; Defined at:
 17677 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 17678 ;; Parameters:    Size  Location     Type
 17679 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 17680 ;;		 -> adcConversionDoneHandler(1), ADC_DefaultInterruptHandler(1), 
 17681 ;; Auto vars:     Size  Location     Type
 17682 ;;		None
 17683 ;; Return value:  Size  Location     Type
 17684 ;;                  1    wreg      void 
 17685 ;; Registers used:
 17686 ;;		wreg
 17687 ;; Tracked objects:
 17688 ;;		On entry : 0/0
 17689 ;;		On exit  : 0/0
 17690 ;;		Unchanged: 0/0
 17691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17692 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;Total ram usage:        2 bytes
 17697 ;; Hardware stack levels used: 1
 17698 ;; Hardware stack levels required when called: 5
 17699 ;; This function calls:
 17700 ;;		Nothing
 17701 ;; This function is called by:
 17702 ;;		_ADC_Initialize
 17703 ;;		_initAdcMultiplexer
 17704 ;; This function uses a non-reentrant model
 17705 ;;
 17706                           
 17707     1BD5                     _ADC_SetInterruptHandler:	
 17708                           ;psect for function _ADC_SetInterruptHandler
 17709                           
 17710     1BD5                     l4953:	
 17711                           ;incstack = 0
 17712                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 17713                           
 17714                           
 17715                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 17716     1BD5  0021               	movlb	1	; select bank1
 17717     1BD6  0821               	movf	(ADC_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 17718     1BD7  0022               	movlb	2	; select bank2
 17719     1BD8  00E7               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 17720     1BD9  0021               	movlb	1	; select bank1
 17721     1BDA  0820               	movf	ADC_SetInterruptHandler@InterruptHandler^(0+128),w
 17722     1BDB  0022               	movlb	2	; select bank2
 17723     1BDC  00E6               	movwf	_ADC_InterruptHandler^(0+256)
 17724     1BDD                     l55:
 17725     1BDD  0008               	return
 17726     1BDE                     __end_of_ADC_SetInterruptHandler:
 17727                           
 17728                           	psect	intentry
 17729     0004                     __pintentry:	
 17730 ;; *************** function _INTERRUPT_InterruptManager *****************
 17731 ;; Defined at:
 17732 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 17733 ;; Parameters:    Size  Location     Type
 17734 ;;		None
 17735 ;; Auto vars:     Size  Location     Type
 17736 ;;		None
 17737 ;; Return value:  Size  Location     Type
 17738 ;;                  1    wreg      void 
 17739 ;; Registers used:
 17740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17741 ;; Tracked objects:
 17742 ;;		On entry : 0/0
 17743 ;;		On exit  : 0/0
 17744 ;;		Unchanged: 0/0
 17745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17750 ;;Total ram usage:        0 bytes
 17751 ;; Hardware stack levels used: 1
 17752 ;; Hardware stack levels required when called: 4
 17753 ;; This function calls:
 17754 ;;		NULL
 17755 ;;		_ADC_ISR
 17756 ;;		_EUSART_ReceiveISR
 17757 ;;		_EUSART_TransmitISR
 17758 ;;		_TMR2_ISR
 17759 ;;		_TMR4_ISR
 17760 ;; This function is called by:
 17761 ;;		Interrupt level 1
 17762 ;; This function uses a non-reentrant model
 17763 ;;
 17764                           
 17765     0004                     _INTERRUPT_InterruptManager:
 17766                           
 17767                           ;incstack = 0
 17768     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17769                           
 17770                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17771     0005  3180               	pagesel	$
 17772     0006                     i1l6099:
 17773                           
 17774                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 17775     0006  1F0B               	btfss	11,6	;volatile
 17776     0007  2809               	goto	u750_21
 17777     0008  280A               	goto	u750_20
 17778     0009                     u750_21:
 17779     0009  2856               	goto	i1l230
 17780     000A                     u750_20:
 17781     000A                     i1l6101:
 17782                           
 17783                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17784     000A  0021               	movlb	1	; select bank1
 17785     000B  1E11               	btfss	17,4	;volatile
 17786     000C  280E               	goto	u751_21
 17787     000D  280F               	goto	u751_20
 17788     000E                     u751_21:
 17789     000E  281B               	goto	i1l219
 17790     000F                     u751_20:
 17791     000F                     i1l6103:
 17792     000F  0020               	movlb	0	; select bank0
 17793     0010  1E11               	btfss	17,4	;volatile
 17794     0011  2813               	goto	u752_21
 17795     0012  2814               	goto	u752_20
 17796     0013                     u752_21:
 17797     0013  281B               	goto	i1l219
 17798     0014                     u752_20:
 17799     0014                     i1l6105:
 17800                           
 17801                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_TxInterruptHandler();
 17802     0014  0022               	movlb	2	; select bank2
 17803     0015  0865               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 17804     0016  008A               	movwf	10
 17805     0017  0864               	movf	_EUSART_TxInterruptHandler^(0+256),w
 17806     0018  000A               	callw
 17807     0019  3180               	pagesel	$
 17808                           
 17809                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 17810     001A  2856               	goto	i1l230
 17811     001B                     i1l219:	
 17812                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RCIE == 1 && P
      +                          IR1bits.RCIF == 1)
 17813                           
 17814     001B  0021               	movlb	1	; select bank1
 17815     001C  1E91               	btfss	17,5	;volatile
 17816     001D  281F               	goto	u753_21
 17817     001E  2820               	goto	u753_20
 17818     001F                     u753_21:
 17819     001F  282C               	goto	i1l221
 17820     0020                     u753_20:
 17821     0020                     i1l6107:
 17822     0020  0020               	movlb	0	; select bank0
 17823     0021  1E91               	btfss	17,5	;volatile
 17824     0022  2824               	goto	u754_21
 17825     0023  2825               	goto	u754_20
 17826     0024                     u754_21:
 17827     0024  282C               	goto	i1l221
 17828     0025                     u754_20:
 17829     0025                     i1l6109:
 17830                           
 17831                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 17832     0025  0023               	movlb	3	; select bank3
 17833     0026  0855               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 17834     0027  008A               	movwf	10
 17835     0028  0854               	movf	_EUSART_RxInterruptHandler^(0+384),w
 17836     0029  000A               	callw
 17837     002A  3180               	pagesel	$
 17838                           
 17839                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 17840     002B  2856               	goto	i1l230
 17841     002C                     i1l221:	
 17842                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 17843                           
 17844     002C  0021               	movlb	1	; select bank1
 17845     002D  1C92               	btfss	18,1	;volatile
 17846     002E  2830               	goto	u755_21
 17847     002F  2831               	goto	u755_20
 17848     0030                     u755_21:
 17849     0030  283A               	goto	i1l223
 17850     0031                     u755_20:
 17851     0031                     i1l6111:
 17852     0031  0020               	movlb	0	; select bank0
 17853     0032  1C92               	btfss	18,1	;volatile
 17854     0033  2835               	goto	u756_21
 17855     0034  2836               	goto	u756_20
 17856     0035                     u756_21:
 17857     0035  283A               	goto	i1l223
 17858     0036                     u756_20:
 17859     0036                     i1l6113:
 17860                           
 17861                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR4_ISR();
 17862     0036  319C  24D5  3180   	fcall	_TMR4_ISR
 17863                           
 17864                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 17865     0039  2856               	goto	i1l230
 17866     003A                     i1l223:	
 17867                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
 17868                           
 17869     003A  0021               	movlb	1	; select bank1
 17870     003B  1C91               	btfss	17,1	;volatile
 17871     003C  283E               	goto	u757_21
 17872     003D  283F               	goto	u757_20
 17873     003E                     u757_21:
 17874     003E  2848               	goto	i1l225
 17875     003F                     u757_20:
 17876     003F                     i1l6115:
 17877     003F  0020               	movlb	0	; select bank0
 17878     0040  1C91               	btfss	17,1	;volatile
 17879     0041  2843               	goto	u758_21
 17880     0042  2844               	goto	u758_20
 17881     0043                     u758_21:
 17882     0043  2848               	goto	i1l225
 17883     0044                     u758_20:
 17884     0044                     i1l6117:
 17885                           
 17886                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR2_ISR();
 17887     0044  319C  24C6  3180   	fcall	_TMR2_ISR
 17888                           
 17889                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 17890     0047  2856               	goto	i1l230
 17891     0048                     i1l225:	
 17892                           ;mcc_generated_files/system/src/interrupt.c: 80:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 17893                           
 17894     0048  0021               	movlb	1	; select bank1
 17895     0049  1F11               	btfss	17,6	;volatile
 17896     004A  284C               	goto	u759_21
 17897     004B  284D               	goto	u759_20
 17898     004C                     u759_21:
 17899     004C  2856               	goto	i1l224
 17900     004D                     u759_20:
 17901     004D                     i1l6119:
 17902     004D  0020               	movlb	0	; select bank0
 17903     004E  1F11               	btfss	17,6	;volatile
 17904     004F  2851               	goto	u760_21
 17905     0050  2852               	goto	u760_20
 17906     0051                     u760_21:
 17907     0051  2856               	goto	i1l224
 17908     0052                     u760_20:
 17909     0052                     i1l6121:
 17910                           
 17911                           ;mcc_generated_files/system/src/interrupt.c: 81:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 82:             ADC_ISR();
 17912     0052  319C  24B7  3180   	fcall	_ADC_ISR
 17913                           
 17914                           ;mcc_generated_files/system/src/interrupt.c: 83:         }
 17915     0055  2856               	goto	i1l230
 17916     0056                     i1l224:
 17917     0056                     i1l230:
 17918     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17919     0057  0009               	retfie
 17920     0058                     __end_of_INTERRUPT_InterruptManager:
 17921                           
 17922                           	psect	text74
 17923     1CD5                     __ptext74:	
 17924 ;; *************** function _TMR4_ISR *****************
 17925 ;; Defined at:
 17926 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;		None
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;		None
 17931 ;; Return value:  Size  Location     Type
 17932 ;;                  1    wreg      void 
 17933 ;; Registers used:
 17934 ;;		wreg, status,2, status,0, pclath, cstack
 17935 ;; Tracked objects:
 17936 ;;		On entry : 0/0
 17937 ;;		On exit  : 0/0
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17944 ;;Total ram usage:        0 bytes
 17945 ;; Hardware stack levels used: 1
 17946 ;; Hardware stack levels required when called: 3
 17947 ;; This function calls:
 17948 ;;		NULL
 17949 ;;		_TMR4_DefaultPeriodMatchCallback
 17950 ;;		_controller
 17951 ;; This function is called by:
 17952 ;;		_INTERRUPT_InterruptManager
 17953 ;; This function uses a non-reentrant model
 17954 ;;
 17955                           
 17956     1CD5                     _TMR4_ISR:	
 17957                           ;psect for function _TMR4_ISR
 17958                           
 17959     1CD5                     i1l5979:	
 17960                           ;incstack = 0
 17961                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 17962                           
 17963                           
 17964                           ;mcc_generated_files/timer/src/tmr4.c: 117:     if(((void*)0) != TMR4_PeriodMatchCallbac
      +                          k)
 17965     1CD5  0022               	movlb	2	; select bank2
 17966     1CD6  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 17967     1CD7  0461               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 17968     1CD8  1903               	btfsc	3,2
 17969     1CD9  2CDB               	goto	u737_21
 17970     1CDA  2CDC               	goto	u737_20
 17971     1CDB                     u737_21:
 17972     1CDB  2CE1               	goto	i1l5983
 17973     1CDC                     u737_20:
 17974     1CDC                     i1l5981:
 17975                           
 17976                           ;mcc_generated_files/timer/src/tmr4.c: 118:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          119:         TMR4_PeriodMatchCallback();
 17977     1CDC  0861               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 17978     1CDD  008A               	movwf	10
 17979     1CDE  0860               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 17980     1CDF  000A               	callw
 17981     1CE0  319C               	pagesel	$
 17982     1CE1                     i1l5983:
 17983                           
 17984                           ;mcc_generated_files/timer/src/tmr4.c: 121:     PIR2bits.TMR4IF = 0;
 17985     1CE1  0020               	movlb	0	; select bank0
 17986     1CE2  1092               	bcf	18,1	;volatile
 17987     1CE3                     i1l473:
 17988     1CE3  0008               	return
 17989     1CE4                     __end_of_TMR4_ISR:
 17990                           
 17991                           	psect	text75
 17992     0003                     __ptext75:	
 17993 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 17994 ;; Defined at:
 17995 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 17996 ;; Parameters:    Size  Location     Type
 17997 ;;		None
 17998 ;; Auto vars:     Size  Location     Type
 17999 ;;		None
 18000 ;; Return value:  Size  Location     Type
 18001 ;;                  1    wreg      void 
 18002 ;; Registers used:
 18003 ;;		None
 18004 ;; Tracked objects:
 18005 ;;		On entry : 0/0
 18006 ;;		On exit  : 0/0
 18007 ;;		Unchanged: 0/0
 18008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18013 ;;Total ram usage:        0 bytes
 18014 ;; Hardware stack levels used: 1
 18015 ;; This function calls:
 18016 ;;		Nothing
 18017 ;; This function is called by:
 18018 ;;		_TMR4_Initialize
 18019 ;;		_TMR4_ISR
 18020 ;; This function uses a non-reentrant model
 18021 ;;
 18022                           
 18023     0003                     _TMR4_DefaultPeriodMatchCallback:	
 18024                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 18025                           
 18026     0003                     i1l479:	
 18027                           ;incstack = 0
 18028                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 18029                           
 18030     0003  0008               	return
 18031     0004                     __end_of_TMR4_DefaultPeriodMatchCallback:
 18032                           
 18033                           	psect	text76
 18034     0A31                     __ptext76:	
 18035 ;; *************** function _controller *****************
 18036 ;; Defined at:
 18037 ;;		line 13 in file "controller.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;		None
 18040 ;; Auto vars:     Size  Location     Type
 18041 ;;  error           2   51[BANK0 ] short 
 18042 ;;  I               2   49[BANK0 ] short 
 18043 ;;  P               2   47[BANK0 ] short 
 18044 ;; Return value:  Size  Location     Type
 18045 ;;                  1    wreg      void 
 18046 ;; Registers used:
 18047 ;;		wreg, status,2, status,0, pclath, cstack
 18048 ;; Tracked objects:
 18049 ;;		On entry : 0/0
 18050 ;;		On exit  : 0/0
 18051 ;;		Unchanged: 0/0
 18052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18054 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18056 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18057 ;;Total ram usage:        7 bytes
 18058 ;; Hardware stack levels used: 1
 18059 ;; Hardware stack levels required when called: 2
 18060 ;; This function calls:
 18061 ;;		_pwm_fan_LoadDutyValue
 18062 ;;		i1___fladd
 18063 ;;		i1___flmul
 18064 ;;		i1___fltol
 18065 ;;		i1___xxtofl
 18066 ;;		i1_getHoogtesensor
 18067 ;; This function is called by:
 18068 ;;		_main
 18069 ;;		_TMR4_ISR
 18070 ;; This function uses a non-reentrant model
 18071 ;;
 18072                           
 18073     0A31                     _controller:	
 18074                           ;psect for function _controller
 18075                           
 18076     0A31                     i1l5943:	
 18077                           ;incstack = 0
 18078                           ; Regs used in _controller: [wreg+status,2+status,0+pclath+cstack]
 18079                           
 18080                           
 18081                           ;controller.c: 14:     hoogte_bal = getHoogtesensor();
 18082     0A31  319B  23C1  318A   	fcall	i1_getHoogtesensor
 18083     0A34  0871               	movf	?i1_getHoogtesensor+1,w
 18084     0A35  0022               	movlb	2	; select bank2
 18085     0A36  00C7               	movwf	(_hoogte_bal+1)^(0+256)
 18086     0A37  0870               	movf	?i1_getHoogtesensor,w
 18087     0A38  00C6               	movwf	_hoogte_bal^(0+256)
 18088     0A39                     i1l5945:
 18089                           
 18090                           ;controller.c: 18:     int16_t error = setpoint - hoogte_bal;
 18091     0A39  0846               	movf	_hoogte_bal^(0+256),w
 18092     0A3A  0020               	movlb	0	; select bank0
 18093     0A3B  026C               	subwf	_setpoint,w
 18094     0A3C  00D3               	movwf	controller@error
 18095     0A3D  0022               	movlb	2	; select bank2
 18096     0A3E  0847               	movf	(_hoogte_bal+1)^(0+256),w
 18097     0A3F  0020               	movlb	0	; select bank0
 18098     0A40  3B6D               	subwfb	_setpoint+1,w
 18099     0A41  00D4               	movwf	controller@error+1
 18100     0A42                     i1l5947:
 18101                           
 18102                           ;controller.c: 20:     integraal += error * 0.0005;
 18103     0A42  0853               	movf	controller@error,w
 18104     0A43  00F0               	movwf	i1___xxtofl@val
 18105     0A44  0854               	movf	controller@error+1,w
 18106     0A45  00F1               	movwf	i1___xxtofl@val+1
 18107     0A46  0D89               	rlf	9,f
 18108     0A47  3B89               	subwfb	9,f
 18109     0A48  0989               	comf	9,f
 18110     0A49  00F2               	movwf	i1___xxtofl@val+2
 18111     0A4A  00F3               	movwf	i1___xxtofl@val+3
 18112     0A4B  3001               	movlw	1
 18113     0A4C  3196  260C  318A   	fcall	i1___xxtofl
 18114     0A4F  0873               	movf	?i1___xxtofl+3,w
 18115     0A50  0020               	movlb	0	; select bank0
 18116     0A51  00A7               	movwf	i1___flmul@a+3
 18117     0A52  0872               	movf	?i1___xxtofl+2,w
 18118     0A53  00A6               	movwf	i1___flmul@a+2
 18119     0A54  0871               	movf	?i1___xxtofl+1,w
 18120     0A55  00A5               	movwf	i1___flmul@a+1
 18121     0A56  0870               	movf	?i1___xxtofl,w
 18122     0A57  00A4               	movwf	i1___flmul@a
 18123     0A58  303A               	movlw	58
 18124     0A59  00A3               	movwf	i1___flmul@b+3
 18125     0A5A  3003               	movlw	3
 18126     0A5B  00A2               	movwf	i1___flmul@b+2
 18127     0A5C  3012               	movlw	18
 18128     0A5D  00A1               	movwf	i1___flmul@b+1
 18129     0A5E  306F               	movlw	111
 18130     0A5F  00A0               	movwf	i1___flmul@b
 18131     0A60  3182  22C9  318A   	fcall	i1___flmul
 18132     0A63  0020               	movlb	0	; select bank0
 18133     0A64  0823               	movf	?i1___flmul+3,w
 18134     0A65  00BD               	movwf	i1___fladd@b+3
 18135     0A66  0822               	movf	?i1___flmul+2,w
 18136     0A67  00BC               	movwf	i1___fladd@b+2
 18137     0A68  0821               	movf	?i1___flmul+1,w
 18138     0A69  00BB               	movwf	i1___fladd@b+1
 18139     0A6A  0820               	movf	?i1___flmul,w
 18140     0A6B  00BA               	movwf	i1___fladd@b
 18141     0A6C  0022               	movlb	2	; select bank2
 18142     0A6D  0843               	movf	(_integraal+3)^(0+256),w
 18143     0A6E  0020               	movlb	0	; select bank0
 18144     0A6F  00C1               	movwf	i1___fladd@a+3
 18145     0A70  0022               	movlb	2	; select bank2
 18146     0A71  0842               	movf	(_integraal+2)^(0+256),w
 18147     0A72  0020               	movlb	0	; select bank0
 18148     0A73  00C0               	movwf	i1___fladd@a+2
 18149     0A74  0022               	movlb	2	; select bank2
 18150     0A75  0841               	movf	(_integraal+1)^(0+256),w
 18151     0A76  0020               	movlb	0	; select bank0
 18152     0A77  00BF               	movwf	i1___fladd@a+1
 18153     0A78  0022               	movlb	2	; select bank2
 18154     0A79  0840               	movf	_integraal^(0+256),w
 18155     0A7A  0020               	movlb	0	; select bank0
 18156     0A7B  00BE               	movwf	i1___fladd@a
 18157     0A7C  318D  25F4  318A   	fcall	i1___fladd
 18158     0A7F  0020               	movlb	0	; select bank0
 18159     0A80  083D               	movf	?i1___fladd+3,w
 18160     0A81  0022               	movlb	2	; select bank2
 18161     0A82  00C3               	movwf	(_integraal+3)^(0+256)
 18162     0A83  0020               	movlb	0	; select bank0
 18163     0A84  083C               	movf	?i1___fladd+2,w
 18164     0A85  0022               	movlb	2	; select bank2
 18165     0A86  00C2               	movwf	(_integraal+2)^(0+256)
 18166     0A87  0020               	movlb	0	; select bank0
 18167     0A88  083B               	movf	?i1___fladd+1,w
 18168     0A89  0022               	movlb	2	; select bank2
 18169     0A8A  00C1               	movwf	(_integraal+1)^(0+256)
 18170     0A8B  0020               	movlb	0	; select bank0
 18171     0A8C  083A               	movf	?i1___fladd,w
 18172     0A8D  0022               	movlb	2	; select bank2
 18173     0A8E  00C0               	movwf	_integraal^(0+256)
 18174     0A8F                     i1l5949:
 18175                           
 18176                           ;controller.c: 22:     int16_t P = kp * error;
 18177     0A8F  0020               	movlb	0	; select bank0
 18178     0A90  0853               	movf	controller@error,w
 18179     0A91  00F0               	movwf	i1___xxtofl@val
 18180     0A92  0854               	movf	controller@error+1,w
 18181     0A93  00F1               	movwf	i1___xxtofl@val+1
 18182     0A94  0D89               	rlf	9,f
 18183     0A95  3B89               	subwfb	9,f
 18184     0A96  0989               	comf	9,f
 18185     0A97  00F2               	movwf	i1___xxtofl@val+2
 18186     0A98  00F3               	movwf	i1___xxtofl@val+3
 18187     0A99  3001               	movlw	1
 18188     0A9A  3196  260C  318A   	fcall	i1___xxtofl
 18189     0A9D  0873               	movf	?i1___xxtofl+3,w
 18190     0A9E  0020               	movlb	0	; select bank0
 18191     0A9F  00A7               	movwf	i1___flmul@a+3
 18192     0AA0  0872               	movf	?i1___xxtofl+2,w
 18193     0AA1  00A6               	movwf	i1___flmul@a+2
 18194     0AA2  0871               	movf	?i1___xxtofl+1,w
 18195     0AA3  00A5               	movwf	i1___flmul@a+1
 18196     0AA4  0870               	movf	?i1___xxtofl,w
 18197     0AA5  00A4               	movwf	i1___flmul@a
 18198     0AA6  0022               	movlb	2	; select bank2
 18199     0AA7  086F               	movf	(_kp+3)^(0+256),w
 18200     0AA8  0020               	movlb	0	; select bank0
 18201     0AA9  00A3               	movwf	i1___flmul@b+3
 18202     0AAA  0022               	movlb	2	; select bank2
 18203     0AAB  086E               	movf	(_kp+2)^(0+256),w
 18204     0AAC  0020               	movlb	0	; select bank0
 18205     0AAD  00A2               	movwf	i1___flmul@b+2
 18206     0AAE  0022               	movlb	2	; select bank2
 18207     0AAF  086D               	movf	(_kp+1)^(0+256),w
 18208     0AB0  0020               	movlb	0	; select bank0
 18209     0AB1  00A1               	movwf	i1___flmul@b+1
 18210     0AB2  0022               	movlb	2	; select bank2
 18211     0AB3  086C               	movf	_kp^(0+256),w
 18212     0AB4  0020               	movlb	0	; select bank0
 18213     0AB5  00A0               	movwf	i1___flmul@b
 18214     0AB6  3182  22C9  318A   	fcall	i1___flmul
 18215     0AB9  0020               	movlb	0	; select bank0
 18216     0ABA  0823               	movf	?i1___flmul+3,w
 18217     0ABB  00BD               	movwf	i1___fltol@f1+3
 18218     0ABC  0822               	movf	?i1___flmul+2,w
 18219     0ABD  00BC               	movwf	i1___fltol@f1+2
 18220     0ABE  0821               	movf	?i1___flmul+1,w
 18221     0ABF  00BB               	movwf	i1___fltol@f1+1
 18222     0AC0  0820               	movf	?i1___flmul,w
 18223     0AC1  00BA               	movwf	i1___fltol@f1
 18224     0AC2  3193  234B  318A   	fcall	i1___fltol
 18225     0AC5  0020               	movlb	0	; select bank0
 18226     0AC6  083B               	movf	?i1___fltol+1,w
 18227     0AC7  00D0               	movwf	controller@P+1
 18228     0AC8  083A               	movf	?i1___fltol,w
 18229     0AC9  00CF               	movwf	controller@P
 18230     0ACA                     i1l5951:
 18231                           
 18232                           ;controller.c: 23:     int16_t I = ki * integraal;
 18233     0ACA  0022               	movlb	2	; select bank2
 18234     0ACB  086B               	movf	(_ki+3)^(0+256),w
 18235     0ACC  0020               	movlb	0	; select bank0
 18236     0ACD  00A7               	movwf	i1___flmul@a+3
 18237     0ACE  0022               	movlb	2	; select bank2
 18238     0ACF  086A               	movf	(_ki+2)^(0+256),w
 18239     0AD0  0020               	movlb	0	; select bank0
 18240     0AD1  00A6               	movwf	i1___flmul@a+2
 18241     0AD2  0022               	movlb	2	; select bank2
 18242     0AD3  0869               	movf	(_ki+1)^(0+256),w
 18243     0AD4  0020               	movlb	0	; select bank0
 18244     0AD5  00A5               	movwf	i1___flmul@a+1
 18245     0AD6  0022               	movlb	2	; select bank2
 18246     0AD7  0868               	movf	_ki^(0+256),w
 18247     0AD8  0020               	movlb	0	; select bank0
 18248     0AD9  00A4               	movwf	i1___flmul@a
 18249     0ADA  0022               	movlb	2	; select bank2
 18250     0ADB  0843               	movf	(_integraal+3)^(0+256),w
 18251     0ADC  0020               	movlb	0	; select bank0
 18252     0ADD  00A3               	movwf	i1___flmul@b+3
 18253     0ADE  0022               	movlb	2	; select bank2
 18254     0ADF  0842               	movf	(_integraal+2)^(0+256),w
 18255     0AE0  0020               	movlb	0	; select bank0
 18256     0AE1  00A2               	movwf	i1___flmul@b+2
 18257     0AE2  0022               	movlb	2	; select bank2
 18258     0AE3  0841               	movf	(_integraal+1)^(0+256),w
 18259     0AE4  0020               	movlb	0	; select bank0
 18260     0AE5  00A1               	movwf	i1___flmul@b+1
 18261     0AE6  0022               	movlb	2	; select bank2
 18262     0AE7  0840               	movf	_integraal^(0+256),w
 18263     0AE8  0020               	movlb	0	; select bank0
 18264     0AE9  00A0               	movwf	i1___flmul@b
 18265     0AEA  3182  22C9  318A   	fcall	i1___flmul
 18266     0AED  0020               	movlb	0	; select bank0
 18267     0AEE  0823               	movf	?i1___flmul+3,w
 18268     0AEF  00BD               	movwf	i1___fltol@f1+3
 18269     0AF0  0822               	movf	?i1___flmul+2,w
 18270     0AF1  00BC               	movwf	i1___fltol@f1+2
 18271     0AF2  0821               	movf	?i1___flmul+1,w
 18272     0AF3  00BB               	movwf	i1___fltol@f1+1
 18273     0AF4  0820               	movf	?i1___flmul,w
 18274     0AF5  00BA               	movwf	i1___fltol@f1
 18275     0AF6  3193  234B  318A   	fcall	i1___fltol
 18276     0AF9  0020               	movlb	0	; select bank0
 18277     0AFA  083B               	movf	?i1___fltol+1,w
 18278     0AFB  00D2               	movwf	controller@I+1
 18279     0AFC  083A               	movf	?i1___fltol,w
 18280     0AFD  00D1               	movwf	controller@I
 18281     0AFE                     i1l5953:
 18282                           
 18283                           ;controller.c: 25:     dutycycle = P + I;
 18284     0AFE  0851               	movf	controller@I,w
 18285     0AFF  074F               	addwf	controller@P,w
 18286     0B00  00D7               	movwf	_dutycycle
 18287     0B01  0852               	movf	controller@I+1,w
 18288     0B02  3D50               	addwfc	controller@P+1,w
 18289     0B03  00D8               	movwf	_dutycycle+1
 18290     0B04                     i1l5955:
 18291                           
 18292                           ;controller.c: 27:     if (dutycycle > 1023 && error > 0) {
 18293     0B04  3004               	movlw	4
 18294     0B05  0258               	subwf	_dutycycle+1,w
 18295     0B06  3000               	movlw	0
 18296     0B07  1903               	skipnz
 18297     0B08  0257               	subwf	_dutycycle,w
 18298     0B09  1C03               	skipc
 18299     0B0A  2B0C               	goto	u732_21
 18300     0B0B  2B0D               	goto	u732_20
 18301     0B0C                     u732_21:
 18302     0B0C  2B20               	goto	i1l5961
 18303     0B0D                     u732_20:
 18304     0B0D                     i1l5957:
 18305     0B0D  0854               	movf	controller@error+1,w
 18306     0B0E  3A80               	xorlw	128
 18307     0B0F  00CE               	movwf	??_controller
 18308     0B10  3080               	movlw	128
 18309     0B11  024E               	subwf	??_controller,w
 18310     0B12  1D03               	skipz
 18311     0B13  2B16               	goto	u733_25
 18312     0B14  3001               	movlw	1
 18313     0B15  0253               	subwf	controller@error,w
 18314     0B16                     u733_25:
 18315     0B16  1C03               	skipc
 18316     0B17  2B19               	goto	u733_21
 18317     0B18  2B1A               	goto	u733_20
 18318     0B19                     u733_21:
 18319     0B19  2B20               	goto	i1l5961
 18320     0B1A                     u733_20:
 18321     0B1A                     i1l5959:
 18322                           
 18323                           ;controller.c: 28:         dutycycle = 1023;
 18324     0B1A  30FF               	movlw	255
 18325     0B1B  0020               	movlb	0	; select bank0
 18326     0B1C  00D7               	movwf	_dutycycle
 18327     0B1D  3003               	movlw	3
 18328     0B1E  00D8               	movwf	_dutycycle+1
 18329                           
 18330                           ;controller.c: 29:     } else if (dutycycle > 1023 && error < 0) {
 18331     0B1F  2B31               	goto	i1l5969
 18332     0B20                     i1l5961:
 18333     0B20  3004               	movlw	4
 18334     0B21  0020               	movlb	0	; select bank0
 18335     0B22  0258               	subwf	_dutycycle+1,w
 18336     0B23  3000               	movlw	0
 18337     0B24  1903               	skipnz
 18338     0B25  0257               	subwf	_dutycycle,w
 18339     0B26  1C03               	skipc
 18340     0B27  2B29               	goto	u734_21
 18341     0B28  2B2A               	goto	u734_20
 18342     0B29                     u734_21:
 18343     0B29  2B31               	goto	i1l942
 18344     0B2A                     u734_20:
 18345     0B2A                     i1l5963:
 18346     0B2A  1FD4               	btfss	controller@error+1,7
 18347     0B2B  2B2D               	goto	u735_21
 18348     0B2C  2B2E               	goto	u735_20
 18349     0B2D                     u735_21:
 18350     0B2D  2B31               	goto	i1l942
 18351     0B2E                     u735_20:
 18352     0B2E                     i1l5965:
 18353                           
 18354                           ;controller.c: 30:         dutycycle = 0;
 18355     0B2E  01D7               	clrf	_dutycycle
 18356     0B2F  01D8               	clrf	_dutycycle+1
 18357                           
 18358                           ;controller.c: 31:     } else if (dutycycle < 0) {
 18359     0B30  2B31               	goto	i1l5969
 18360     0B31                     i1l942:
 18361     0B31                     i1l5969:
 18362                           
 18363                           ;controller.c: 35:     pwm_fan_LoadDutyValue(dutycycle);
 18364     0B31  0858               	movf	_dutycycle+1,w
 18365     0B32  00F1               	movwf	pwm_fan_LoadDutyValue@dutyValue+1
 18366     0B33  0857               	movf	_dutycycle,w
 18367     0B34  00F0               	movwf	pwm_fan_LoadDutyValue@dutyValue
 18368     0B35  319D  259C  318A   	fcall	_pwm_fan_LoadDutyValue
 18369     0B38                     i1l944:
 18370     0B38  0008               	return
 18371     0B39                     __end_of_controller:
 18372                           
 18373                           	psect	text77
 18374     1BC1                     __ptext77:	
 18375 ;; *************** function i1_getHoogtesensor *****************
 18376 ;; Defined at:
 18377 ;;		line 33 in file "adcMeasurements.c"
 18378 ;; Parameters:    Size  Location     Type
 18379 ;;		None
 18380 ;; Auto vars:     Size  Location     Type
 18381 ;;		None
 18382 ;; Return value:  Size  Location     Type
 18383 ;;                  2    0[COMMON] unsigned short 
 18384 ;; Registers used:
 18385 ;;		wreg
 18386 ;; Tracked objects:
 18387 ;;		On entry : 0/0
 18388 ;;		On exit  : 0/0
 18389 ;;		Unchanged: 0/0
 18390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18395 ;;Total ram usage:        2 bytes
 18396 ;; Hardware stack levels used: 1
 18397 ;; This function calls:
 18398 ;;		Nothing
 18399 ;; This function is called by:
 18400 ;;		_controller
 18401 ;; This function uses a non-reentrant model
 18402 ;;
 18403                           
 18404     1BC1                     i1_getHoogtesensor:	
 18405                           ;psect for function i1_getHoogtesensor
 18406                           
 18407     1BC1                     i1l5219:	
 18408                           ;incstack = 0
 18409                           ; Regs used in i1_getHoogtesensor: [wreg]
 18410                           
 18411                           
 18412                           ;adcMeasurements.c: 34:     return ADC_hoogtesensor;
 18413     1BC1  0020               	movlb	0	; select bank0
 18414     1BC2  085A               	movf	_ADC_hoogtesensor+1,w	;volatile
 18415     1BC3  00F1               	movwf	?i1_getHoogtesensor+1
 18416     1BC4  0859               	movf	_ADC_hoogtesensor,w	;volatile
 18417     1BC5  00F0               	movwf	?i1_getHoogtesensor
 18418     1BC6                     i1l839:
 18419     1BC6  0008               	return
 18420     1BC7                     __end_ofi1_getHoogtesensor:
 18421                           
 18422                           	psect	text78
 18423     160C                     __ptext78:	
 18424 ;; *************** function i1___xxtofl *****************
 18425 ;; Defined at:
 18426 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  sign            1    wreg     unsigned char 
 18429 ;;  val             4    0[COMMON] long 
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;  sign            1    8[COMMON] unsigned char 
 18432 ;;  arg             4   10[COMMON] unsigned long 
 18433 ;;  exp             1    9[COMMON] unsigned char 
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  4    0[COMMON] unsigned char 
 18436 ;; Registers used:
 18437 ;;		wreg, status,2, status,0
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18444 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18446 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;Total ram usage:       14 bytes
 18448 ;; Hardware stack levels used: 1
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		_controller
 18453 ;; This function uses a non-reentrant model
 18454 ;;
 18455                           
 18456     160C                     i1___xxtofl:	
 18457                           ;psect for function i1___xxtofl
 18458                           
 18459                           
 18460                           ;incstack = 0
 18461                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 18462                           ;i1___xxtofl@sign stored from wreg
 18463     160C  00F8               	movwf	i1___xxtofl@sign
 18464     160D                     i1l5595:
 18465     160D  0878               	movf	i1___xxtofl@sign,w
 18466     160E  1903               	btfsc	3,2
 18467     160F  2E11               	goto	u701_21
 18468     1610  2E12               	goto	u701_20
 18469     1611                     u701_21:
 18470     1611  2E26               	goto	i1l5601
 18471     1612                     u701_20:
 18472     1612                     i1l5597:
 18473     1612  1FF3               	btfss	i1___xxtofl@val+3,7
 18474     1613  2E15               	goto	u702_21
 18475     1614  2E16               	goto	u702_20
 18476     1615                     u702_21:
 18477     1615  2E26               	goto	i1l5601
 18478     1616                     u702_20:
 18479     1616                     i1l5599:
 18480     1616  0970               	comf	i1___xxtofl@val,w
 18481     1617  00FA               	movwf	i1___xxtofl@arg
 18482     1618  0971               	comf	i1___xxtofl@val+1,w
 18483     1619  00FB               	movwf	i1___xxtofl@arg+1
 18484     161A  0972               	comf	i1___xxtofl@val+2,w
 18485     161B  00FC               	movwf	i1___xxtofl@arg+2
 18486     161C  0973               	comf	i1___xxtofl@val+3,w
 18487     161D  00FD               	movwf	i1___xxtofl@arg+3
 18488     161E  0AFA               	incf	i1___xxtofl@arg,f
 18489     161F  1903               	skipnz
 18490     1620  0AFB               	incf	i1___xxtofl@arg+1,f
 18491     1621  1903               	skipnz
 18492     1622  0AFC               	incf	i1___xxtofl@arg+2,f
 18493     1623  1903               	skipnz
 18494     1624  0AFD               	incf	i1___xxtofl@arg+3,f
 18495     1625  2E2E               	goto	i1l1622
 18496     1626                     i1l5601:
 18497     1626  0873               	movf	i1___xxtofl@val+3,w
 18498     1627  00FD               	movwf	i1___xxtofl@arg+3
 18499     1628  0872               	movf	i1___xxtofl@val+2,w
 18500     1629  00FC               	movwf	i1___xxtofl@arg+2
 18501     162A  0871               	movf	i1___xxtofl@val+1,w
 18502     162B  00FB               	movwf	i1___xxtofl@arg+1
 18503     162C  0870               	movf	i1___xxtofl@val,w
 18504     162D  00FA               	movwf	i1___xxtofl@arg
 18505     162E                     i1l1622:
 18506     162E  0873               	movf	i1___xxtofl@val+3,w
 18507     162F  0472               	iorwf	i1___xxtofl@val+2,w
 18508     1630  0471               	iorwf	i1___xxtofl@val+1,w
 18509     1631  0470               	iorwf	i1___xxtofl@val,w
 18510     1632  1D03               	skipz
 18511     1633  2E35               	goto	u703_21
 18512     1634  2E36               	goto	u703_20
 18513     1635                     u703_21:
 18514     1635  2E3F               	goto	i1l1623
 18515     1636                     u703_20:
 18516     1636                     i1l5603:
 18517     1636  3000               	movlw	0
 18518     1637  00F3               	movwf	?i1___xxtofl+3
 18519     1638  3000               	movlw	0
 18520     1639  00F2               	movwf	?i1___xxtofl+2
 18521     163A  3000               	movlw	0
 18522     163B  00F1               	movwf	?i1___xxtofl+1
 18523     163C  3000               	movlw	0
 18524     163D  00F0               	movwf	?i1___xxtofl
 18525     163E  2EAF               	goto	i1l1624
 18526     163F                     i1l1623:
 18527     163F  3096               	movlw	150
 18528     1640  00F9               	movwf	i1___xxtofl@exp
 18529     1641  2E4B               	goto	i1l5609
 18530     1642                     i1l5607:
 18531     1642  3001               	movlw	1
 18532     1643  07F9               	addwf	i1___xxtofl@exp,f
 18533     1644  3001               	movlw	1
 18534     1645                     u704_25:
 18535     1645  36FD               	lsrf	i1___xxtofl@arg+3,f
 18536     1646  0CFC               	rrf	i1___xxtofl@arg+2,f
 18537     1647  0CFB               	rrf	i1___xxtofl@arg+1,f
 18538     1648  0CFA               	rrf	i1___xxtofl@arg,f
 18539     1649  0B89               	decfsz	9,f
 18540     164A  2E45               	goto	u704_25
 18541     164B                     i1l5609:
 18542     164B  30FE               	movlw	254
 18543     164C  057D               	andwf	i1___xxtofl@arg+3,w
 18544     164D  1D03               	btfss	3,2
 18545     164E  2E50               	goto	u705_21
 18546     164F  2E51               	goto	u705_20
 18547     1650                     u705_21:
 18548     1650  2E42               	goto	i1l5607
 18549     1651                     u705_20:
 18550     1651  2E61               	goto	i1l5613
 18551     1652                     i1l5611:
 18552     1652  3001               	movlw	1
 18553     1653  07F9               	addwf	i1___xxtofl@exp,f
 18554     1654  3001               	movlw	1
 18555     1655  07FA               	addwf	i1___xxtofl@arg,f
 18556     1656  3000               	movlw	0
 18557     1657  3DFB               	addwfc	i1___xxtofl@arg+1,f
 18558     1658  3DFC               	addwfc	i1___xxtofl@arg+2,f
 18559     1659  3DFD               	addwfc	i1___xxtofl@arg+3,f
 18560     165A  3001               	movlw	1
 18561     165B                     u706_25:
 18562     165B  36FD               	lsrf	i1___xxtofl@arg+3,f
 18563     165C  0CFC               	rrf	i1___xxtofl@arg+2,f
 18564     165D  0CFB               	rrf	i1___xxtofl@arg+1,f
 18565     165E  0CFA               	rrf	i1___xxtofl@arg,f
 18566     165F  0B89               	decfsz	9,f
 18567     1660  2E5B               	goto	u706_25
 18568     1661                     i1l5613:
 18569     1661  30FF               	movlw	255
 18570     1662  057D               	andwf	i1___xxtofl@arg+3,w
 18571     1663  1D03               	btfss	3,2
 18572     1664  2E66               	goto	u707_21
 18573     1665  2E67               	goto	u707_20
 18574     1666                     u707_21:
 18575     1666  2E52               	goto	i1l5611
 18576     1667                     u707_20:
 18577     1667  2E71               	goto	i1l5617
 18578     1668                     i1l5615:
 18579     1668  3001               	movlw	1
 18580     1669  02F9               	subwf	i1___xxtofl@exp,f
 18581     166A  3001               	movlw	1
 18582     166B                     u708_25:
 18583     166B  35FA               	lslf	i1___xxtofl@arg,f
 18584     166C  0DFB               	rlf	i1___xxtofl@arg+1,f
 18585     166D  0DFC               	rlf	i1___xxtofl@arg+2,f
 18586     166E  0DFD               	rlf	i1___xxtofl@arg+3,f
 18587     166F  0B89               	decfsz	9,f
 18588     1670  2E6B               	goto	u708_25
 18589     1671                     i1l5617:
 18590     1671  1BFC               	btfsc	i1___xxtofl@arg+2,7
 18591     1672  2E74               	goto	u709_21
 18592     1673  2E75               	goto	u709_20
 18593     1674                     u709_21:
 18594     1674  2E7B               	goto	i1l1635
 18595     1675                     u709_20:
 18596     1675                     i1l5619:
 18597     1675  3002               	movlw	2
 18598     1676  0279               	subwf	i1___xxtofl@exp,w
 18599     1677  1803               	skipnc
 18600     1678  2E7A               	goto	u710_21
 18601     1679  2E7B               	goto	u710_20
 18602     167A                     u710_21:
 18603     167A  2E68               	goto	i1l5615
 18604     167B                     u710_20:
 18605     167B                     i1l1635:
 18606     167B  1879               	btfsc	i1___xxtofl@exp,0
 18607     167C  2E7E               	goto	u711_21
 18608     167D  2E7F               	goto	u711_20
 18609     167E                     u711_21:
 18610     167E  2E87               	goto	i1l1636
 18611     167F                     u711_20:
 18612     167F                     i1l5621:
 18613     167F  30FF               	movlw	255
 18614     1680  05FA               	andwf	i1___xxtofl@arg,f
 18615     1681  30FF               	movlw	255
 18616     1682  05FB               	andwf	i1___xxtofl@arg+1,f
 18617     1683  307F               	movlw	127
 18618     1684  05FC               	andwf	i1___xxtofl@arg+2,f
 18619     1685  30FF               	movlw	255
 18620     1686  05FD               	andwf	i1___xxtofl@arg+3,f
 18621     1687                     i1l1636:
 18622     1687  1003               	clrc
 18623     1688  0CF9               	rrf	i1___xxtofl@exp,f
 18624     1689                     i1l5623:
 18625     1689  0879               	movf	i1___xxtofl@exp,w
 18626     168A  00F4               	movwf	??i1___xxtofl
 18627     168B  01F5               	clrf	??i1___xxtofl+1
 18628     168C  01F6               	clrf	??i1___xxtofl+2
 18629     168D  01F7               	clrf	??i1___xxtofl+3
 18630     168E  3018               	movlw	24
 18631     168F                     u712_25:
 18632     168F  35F4               	lslf	??i1___xxtofl,f
 18633     1690  0DF5               	rlf	??i1___xxtofl+1,f
 18634     1691  0DF6               	rlf	??i1___xxtofl+2,f
 18635     1692  0DF7               	rlf	??i1___xxtofl+3,f
 18636     1693                     u712_20:
 18637     1693  0B89               	decfsz	9,f
 18638     1694  2E8F               	goto	u712_25
 18639     1695  0874               	movf	??i1___xxtofl,w
 18640     1696  04FA               	iorwf	i1___xxtofl@arg,f
 18641     1697  0875               	movf	??i1___xxtofl+1,w
 18642     1698  04FB               	iorwf	i1___xxtofl@arg+1,f
 18643     1699  0876               	movf	??i1___xxtofl+2,w
 18644     169A  04FC               	iorwf	i1___xxtofl@arg+2,f
 18645     169B  0877               	movf	??i1___xxtofl+3,w
 18646     169C  04FD               	iorwf	i1___xxtofl@arg+3,f
 18647     169D                     i1l5625:
 18648     169D  0878               	movf	i1___xxtofl@sign,w
 18649     169E  1903               	btfsc	3,2
 18650     169F  2EA1               	goto	u713_21
 18651     16A0  2EA2               	goto	u713_20
 18652     16A1                     u713_21:
 18653     16A1  2EA7               	goto	i1l5631
 18654     16A2                     u713_20:
 18655     16A2                     i1l5627:
 18656     16A2  1FF3               	btfss	i1___xxtofl@val+3,7
 18657     16A3  2EA5               	goto	u714_21
 18658     16A4  2EA6               	goto	u714_20
 18659     16A5                     u714_21:
 18660     16A5  2EA7               	goto	i1l5631
 18661     16A6                     u714_20:
 18662     16A6                     i1l5629:
 18663     16A6  17FD               	bsf	i1___xxtofl@arg+3,7
 18664     16A7                     i1l5631:
 18665     16A7  087D               	movf	i1___xxtofl@arg+3,w
 18666     16A8  00F3               	movwf	?i1___xxtofl+3
 18667     16A9  087C               	movf	i1___xxtofl@arg+2,w
 18668     16AA  00F2               	movwf	?i1___xxtofl+2
 18669     16AB  087B               	movf	i1___xxtofl@arg+1,w
 18670     16AC  00F1               	movwf	?i1___xxtofl+1
 18671     16AD  087A               	movf	i1___xxtofl@arg,w
 18672     16AE  00F0               	movwf	?i1___xxtofl
 18673     16AF                     i1l1624:
 18674     16AF  0008               	return
 18675     16B0                     __end_ofi1___xxtofl:
 18676                           
 18677                           	psect	text79
 18678     134B                     __ptext79:	
 18679 ;; *************** function i1___fltol *****************
 18680 ;; Defined at:
 18681 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
 18682 ;; Parameters:    Size  Location     Type
 18683 ;;  f1              4   26[BANK0 ] unsigned char 
 18684 ;; Auto vars:     Size  Location     Type
 18685 ;;  exp1            1   35[BANK0 ] unsigned char 
 18686 ;;  sign1           1   34[BANK0 ] unsigned char 
 18687 ;; Return value:  Size  Location     Type
 18688 ;;                  4   26[BANK0 ] long 
 18689 ;; Registers used:
 18690 ;;		wreg, status,2, status,0
 18691 ;; Tracked objects:
 18692 ;;		On entry : 0/0
 18693 ;;		On exit  : 0/0
 18694 ;;		Unchanged: 0/0
 18695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18696 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18697 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18698 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18699 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18700 ;;Total ram usage:       10 bytes
 18701 ;; Hardware stack levels used: 1
 18702 ;; This function calls:
 18703 ;;		Nothing
 18704 ;; This function is called by:
 18705 ;;		_controller
 18706 ;; This function uses a non-reentrant model
 18707 ;;
 18708                           
 18709     134B                     i1___fltol:	
 18710                           ;psect for function i1___fltol
 18711                           
 18712     134B                     i1l5223:	
 18713                           ;incstack = 0
 18714                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 18715                           
 18716     134B  1003               	clrc
 18717     134C  0020               	movlb	0	; select bank0
 18718     134D  0D3C               	rlf	i1___fltol@f1+2,w
 18719     134E  0D3D               	rlf	i1___fltol@f1+3,w
 18720     134F  00C3               	movwf	i1___fltol@exp1
 18721     1350  0843               	movf	i1___fltol@exp1,w
 18722     1351  1D03               	btfss	3,2
 18723     1352  2B54               	goto	u618_21
 18724     1353  2B55               	goto	u618_20
 18725     1354                     u618_21:
 18726     1354  2B5E               	goto	i1l5229
 18727     1355                     u618_20:
 18728     1355                     i1l5225:
 18729     1355  3000               	movlw	0
 18730     1356  00BD               	movwf	?i1___fltol+3
 18731     1357  3000               	movlw	0
 18732     1358  00BC               	movwf	?i1___fltol+2
 18733     1359  3000               	movlw	0
 18734     135A  00BB               	movwf	?i1___fltol+1
 18735     135B  3000               	movlw	0
 18736     135C  00BA               	movwf	?i1___fltol
 18737     135D  2BB9               	goto	i1l1375
 18738     135E                     i1l5229:
 18739     135E  083A               	movf	i1___fltol@f1,w
 18740     135F  00BE               	movwf	??i1___fltol
 18741     1360  083B               	movf	i1___fltol@f1+1,w
 18742     1361  00BF               	movwf	??i1___fltol+1
 18743     1362  083C               	movf	i1___fltol@f1+2,w
 18744     1363  00C0               	movwf	??i1___fltol+2
 18745     1364  083D               	movf	i1___fltol@f1+3,w
 18746     1365  00C1               	movwf	??i1___fltol+3
 18747     1366  301F               	movlw	31
 18748     1367                     u619_25:
 18749     1367  36C1               	lsrf	??i1___fltol+3,f
 18750     1368  0CC0               	rrf	??i1___fltol+2,f
 18751     1369  0CBF               	rrf	??i1___fltol+1,f
 18752     136A  0CBE               	rrf	??i1___fltol,f
 18753     136B                     u619_20:
 18754     136B  0B89               	decfsz	9,f
 18755     136C  2B67               	goto	u619_25
 18756     136D  083E               	movf	??i1___fltol,w
 18757     136E  00C2               	movwf	i1___fltol@sign1
 18758     136F                     i1l5231:
 18759     136F  17BC               	bsf	i1___fltol@f1+2,7
 18760     1370                     i1l5233:
 18761     1370  30FF               	movlw	255
 18762     1371  05BA               	andwf	i1___fltol@f1,f
 18763     1372  30FF               	movlw	255
 18764     1373  05BB               	andwf	i1___fltol@f1+1,f
 18765     1374  30FF               	movlw	255
 18766     1375  05BC               	andwf	i1___fltol@f1+2,f
 18767     1376  3000               	movlw	0
 18768     1377  05BD               	andwf	i1___fltol@f1+3,f
 18769     1378                     i1l5235:
 18770     1378  3096               	movlw	150
 18771     1379  02C3               	subwf	i1___fltol@exp1,f
 18772     137A                     i1l5237:
 18773     137A  1FC3               	btfss	i1___fltol@exp1,7
 18774     137B  2B7D               	goto	u620_21
 18775     137C  2B7E               	goto	u620_20
 18776     137D                     u620_21:
 18777     137D  2B94               	goto	i1l5247
 18778     137E                     u620_20:
 18779     137E                     i1l5239:
 18780     137E  0843               	movf	i1___fltol@exp1,w
 18781     137F  3A80               	xorlw	128
 18782     1380  3E97               	addlw	151
 18783     1381  1803               	skipnc
 18784     1382  2B84               	goto	u621_21
 18785     1383  2B85               	goto	u621_20
 18786     1384                     u621_21:
 18787     1384  2B86               	goto	i1l5245
 18788     1385                     u621_20:
 18789     1385  2B55               	goto	i1l5225
 18790     1386                     i1l5245:
 18791     1386  3001               	movlw	1
 18792     1387                     u622_25:
 18793     1387  36BD               	lsrf	i1___fltol@f1+3,f
 18794     1388  0CBC               	rrf	i1___fltol@f1+2,f
 18795     1389  0CBB               	rrf	i1___fltol@f1+1,f
 18796     138A  0CBA               	rrf	i1___fltol@f1,f
 18797     138B  0B89               	decfsz	9,f
 18798     138C  2B87               	goto	u622_25
 18799     138D  3001               	movlw	1
 18800     138E  07C3               	addwf	i1___fltol@exp1,f
 18801     138F  1D03               	btfss	3,2
 18802     1390  2B92               	goto	u623_21
 18803     1391  2B93               	goto	u623_20
 18804     1392                     u623_21:
 18805     1392  2B86               	goto	i1l5245
 18806     1393                     u623_20:
 18807     1393  2BA9               	goto	i1l5255
 18808     1394                     i1l5247:
 18809     1394  3020               	movlw	32
 18810     1395  0243               	subwf	i1___fltol@exp1,w
 18811     1396  1C03               	skipc
 18812     1397  2B99               	goto	u624_21
 18813     1398  2B9A               	goto	u624_20
 18814     1399                     u624_21:
 18815     1399  2BA4               	goto	i1l1382
 18816     139A                     u624_20:
 18817     139A  2B55               	goto	i1l5225
 18818     139B                     i1l5253:
 18819     139B  3001               	movlw	1
 18820     139C                     u625_25:
 18821     139C  35BA               	lslf	i1___fltol@f1,f
 18822     139D  0DBB               	rlf	i1___fltol@f1+1,f
 18823     139E  0DBC               	rlf	i1___fltol@f1+2,f
 18824     139F  0DBD               	rlf	i1___fltol@f1+3,f
 18825     13A0  0B89               	decfsz	9,f
 18826     13A1  2B9C               	goto	u625_25
 18827     13A2  3001               	movlw	1
 18828     13A3  02C3               	subwf	i1___fltol@exp1,f
 18829     13A4                     i1l1382:
 18830     13A4  0843               	movf	i1___fltol@exp1,w
 18831     13A5  1D03               	btfss	3,2
 18832     13A6  2BA8               	goto	u626_21
 18833     13A7  2BA9               	goto	u626_20
 18834     13A8                     u626_21:
 18835     13A8  2B9B               	goto	i1l5253
 18836     13A9                     u626_20:
 18837     13A9                     i1l5255:
 18838     13A9  0842               	movf	i1___fltol@sign1,w
 18839     13AA  1903               	btfsc	3,2
 18840     13AB  2BAD               	goto	u627_21
 18841     13AC  2BAE               	goto	u627_20
 18842     13AD                     u627_21:
 18843     13AD  2BB9               	goto	i1l1385
 18844     13AE                     u627_20:
 18845     13AE                     i1l5257:
 18846     13AE  09BA               	comf	i1___fltol@f1,f
 18847     13AF  09BB               	comf	i1___fltol@f1+1,f
 18848     13B0  09BC               	comf	i1___fltol@f1+2,f
 18849     13B1  09BD               	comf	i1___fltol@f1+3,f
 18850     13B2  0ABA               	incf	i1___fltol@f1,f
 18851     13B3  1903               	skipnz
 18852     13B4  0ABB               	incf	i1___fltol@f1+1,f
 18853     13B5  1903               	skipnz
 18854     13B6  0ABC               	incf	i1___fltol@f1+2,f
 18855     13B7  1903               	skipnz
 18856     13B8  0ABD               	incf	i1___fltol@f1+3,f
 18857     13B9                     i1l1385:
 18858     13B9                     i1l1375:
 18859     13B9  0008               	return
 18860     13BA                     __end_ofi1___fltol:
 18861                           
 18862                           	psect	text80
 18863     02C9                     __ptext80:	
 18864 ;; *************** function i1___flmul *****************
 18865 ;; Defined at:
 18866 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 18867 ;; Parameters:    Size  Location     Type
 18868 ;;  b               4    0[BANK0 ] long 
 18869 ;;  a               4    4[BANK0 ] long 
 18870 ;; Auto vars:     Size  Location     Type
 18871 ;;  prod            4   20[BANK0 ] struct .
 18872 ;;  grs             4   14[BANK0 ] unsigned long 
 18873 ;;  temp            2   24[BANK0 ] struct .
 18874 ;;  bexp            1   19[BANK0 ] unsigned char 
 18875 ;;  aexp            1   18[BANK0 ] unsigned char 
 18876 ;;  sign            1   13[BANK0 ] unsigned char 
 18877 ;; Return value:  Size  Location     Type
 18878 ;;                  4    0[BANK0 ] unsigned char 
 18879 ;; Registers used:
 18880 ;;		wreg, status,2, status,0, pclath, cstack
 18881 ;; Tracked objects:
 18882 ;;		On entry : 0/0
 18883 ;;		On exit  : 0/0
 18884 ;;		Unchanged: 0/0
 18885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18886 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18887 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18888 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18889 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18890 ;;Total ram usage:       26 bytes
 18891 ;; Hardware stack levels used: 1
 18892 ;; Hardware stack levels required when called: 1
 18893 ;; This function calls:
 18894 ;;		i1__Umul8_16
 18895 ;; This function is called by:
 18896 ;;		_controller
 18897 ;; This function uses a non-reentrant model
 18898 ;;
 18899                           
 18900     02C9                     i1___flmul:	
 18901                           ;psect for function i1___flmul
 18902                           
 18903     02C9                     i1l5455:	
 18904                           ;incstack = 0
 18905                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
 18906                           
 18907     02C9  0020               	movlb	0	; select bank0
 18908     02CA  0823               	movf	i1___flmul@b+3,w
 18909     02CB  3980               	andlw	128
 18910     02CC  00AD               	movwf	i1___flmul@sign
 18911     02CD                     i1l5457:
 18912     02CD  3523               	lslf	i1___flmul@b+3,w
 18913     02CE  00B3               	movwf	i1___flmul@bexp
 18914     02CF                     i1l5459:
 18915     02CF  1FA2               	btfss	i1___flmul@b+2,7
 18916     02D0  2AD2               	goto	u674_21
 18917     02D1  2AD3               	goto	u674_20
 18918     02D2                     u674_21:
 18919     02D2  2AD4               	goto	i1l5463
 18920     02D3                     u674_20:
 18921     02D3                     i1l5461:
 18922     02D3  1433               	bsf	i1___flmul@bexp,0
 18923     02D4                     i1l5463:
 18924     02D4  0833               	movf	i1___flmul@bexp,w
 18925     02D5  1903               	btfsc	3,2
 18926     02D6  2AD8               	goto	u675_21
 18927     02D7  2AD9               	goto	u675_20
 18928     02D8                     u675_21:
 18929     02D8  2AE8               	goto	i1l5471
 18930     02D9                     u675_20:
 18931     02D9                     i1l5465:
 18932     02D9  0A33               	incf	i1___flmul@bexp,w
 18933     02DA  1D03               	btfss	3,2
 18934     02DB  2ADD               	goto	u676_21
 18935     02DC  2ADE               	goto	u676_20
 18936     02DD                     u676_21:
 18937     02DD  2AE6               	goto	i1l5469
 18938     02DE                     u676_20:
 18939     02DE                     i1l5467:
 18940     02DE  3000               	movlw	0
 18941     02DF  00A3               	movwf	i1___flmul@b+3
 18942     02E0  3000               	movlw	0
 18943     02E1  00A2               	movwf	i1___flmul@b+2
 18944     02E2  3000               	movlw	0
 18945     02E3  00A1               	movwf	i1___flmul@b+1
 18946     02E4  3000               	movlw	0
 18947     02E5  00A0               	movwf	i1___flmul@b
 18948     02E6                     i1l5469:
 18949     02E6  17A2               	bsf	i1___flmul@b+2,7
 18950     02E7  2AF0               	goto	i1l5473
 18951     02E8                     i1l5471:
 18952     02E8  3000               	movlw	0
 18953     02E9  00A3               	movwf	i1___flmul@b+3
 18954     02EA  3000               	movlw	0
 18955     02EB  00A2               	movwf	i1___flmul@b+2
 18956     02EC  3000               	movlw	0
 18957     02ED  00A1               	movwf	i1___flmul@b+1
 18958     02EE  3000               	movlw	0
 18959     02EF  00A0               	movwf	i1___flmul@b
 18960     02F0                     i1l5473:
 18961     02F0  0827               	movf	i1___flmul@a+3,w
 18962     02F1  3980               	andlw	128
 18963     02F2  06AD               	xorwf	i1___flmul@sign,f
 18964     02F3                     i1l5475:
 18965     02F3  3527               	lslf	i1___flmul@a+3,w
 18966     02F4  00B2               	movwf	i1___flmul@aexp
 18967     02F5                     i1l5477:
 18968     02F5  1FA6               	btfss	i1___flmul@a+2,7
 18969     02F6  2AF8               	goto	u677_21
 18970     02F7  2AF9               	goto	u677_20
 18971     02F8                     u677_21:
 18972     02F8  2AFA               	goto	i1l5481
 18973     02F9                     u677_20:
 18974     02F9                     i1l5479:
 18975     02F9  1432               	bsf	i1___flmul@aexp,0
 18976     02FA                     i1l5481:
 18977     02FA  0832               	movf	i1___flmul@aexp,w
 18978     02FB  1903               	btfsc	3,2
 18979     02FC  2AFE               	goto	u678_21
 18980     02FD  2AFF               	goto	u678_20
 18981     02FE                     u678_21:
 18982     02FE  2B0E               	goto	i1l5489
 18983     02FF                     u678_20:
 18984     02FF                     i1l5483:
 18985     02FF  0A32               	incf	i1___flmul@aexp,w
 18986     0300  1D03               	btfss	3,2
 18987     0301  2B03               	goto	u679_21
 18988     0302  2B04               	goto	u679_20
 18989     0303                     u679_21:
 18990     0303  2B0C               	goto	i1l5487
 18991     0304                     u679_20:
 18992     0304                     i1l5485:
 18993     0304  3000               	movlw	0
 18994     0305  00A7               	movwf	i1___flmul@a+3
 18995     0306  3000               	movlw	0
 18996     0307  00A6               	movwf	i1___flmul@a+2
 18997     0308  3000               	movlw	0
 18998     0309  00A5               	movwf	i1___flmul@a+1
 18999     030A  3000               	movlw	0
 19000     030B  00A4               	movwf	i1___flmul@a
 19001     030C                     i1l5487:
 19002     030C  17A6               	bsf	i1___flmul@a+2,7
 19003     030D  2B16               	goto	i1l5491
 19004     030E                     i1l5489:
 19005     030E  3000               	movlw	0
 19006     030F  00A7               	movwf	i1___flmul@a+3
 19007     0310  3000               	movlw	0
 19008     0311  00A6               	movwf	i1___flmul@a+2
 19009     0312  3000               	movlw	0
 19010     0313  00A5               	movwf	i1___flmul@a+1
 19011     0314  3000               	movlw	0
 19012     0315  00A4               	movwf	i1___flmul@a
 19013     0316                     i1l5491:
 19014     0316  0832               	movf	i1___flmul@aexp,w
 19015     0317  1903               	btfsc	3,2
 19016     0318  2B1A               	goto	u680_21
 19017     0319  2B1B               	goto	u680_20
 19018     031A                     u680_21:
 19019     031A  2B20               	goto	i1l5495
 19020     031B                     u680_20:
 19021     031B                     i1l5493:
 19022     031B  0833               	movf	i1___flmul@bexp,w
 19023     031C  1D03               	btfss	3,2
 19024     031D  2B1F               	goto	u681_21
 19025     031E  2B20               	goto	u681_20
 19026     031F                     u681_21:
 19027     031F  2B29               	goto	i1l5499
 19028     0320                     u681_20:
 19029     0320                     i1l5495:
 19030     0320  3000               	movlw	0
 19031     0321  00A3               	movwf	?i1___flmul+3
 19032     0322  3000               	movlw	0
 19033     0323  00A2               	movwf	?i1___flmul+2
 19034     0324  3000               	movlw	0
 19035     0325  00A1               	movwf	?i1___flmul+1
 19036     0326  3000               	movlw	0
 19037     0327  00A0               	movwf	?i1___flmul
 19038     0328  2D03               	goto	i1l1578
 19039     0329                     i1l5499:
 19040     0329  0820               	movf	i1___flmul@b,w
 19041     032A  00F0               	movwf	i1__Umul8_16@multiplicand
 19042     032B  0826               	movf	i1___flmul@a+2,w
 19043     032C  319E  26C9  3182   	fcall	i1__Umul8_16
 19044     032F  0871               	movf	?i1__Umul8_16+1,w
 19045     0330  0020               	movlb	0	; select bank0
 19046     0331  00B9               	movwf	i1___flmul@temp+1
 19047     0332  0870               	movf	?i1__Umul8_16,w
 19048     0333  00B8               	movwf	i1___flmul@temp
 19049     0334                     i1l5501:
 19050     0334  0838               	movf	i1___flmul@temp,w
 19051     0335  00A8               	movwf	??i1___flmul
 19052     0336  01A9               	clrf	??i1___flmul+1
 19053     0337  01AA               	clrf	??i1___flmul+2
 19054     0338  01AB               	clrf	??i1___flmul+3
 19055     0339  082B               	movf	??i1___flmul+3,w
 19056     033A  00B1               	movwf	i1___flmul@grs+3
 19057     033B  082A               	movf	??i1___flmul+2,w
 19058     033C  00B0               	movwf	i1___flmul@grs+2
 19059     033D  0829               	movf	??i1___flmul+1,w
 19060     033E  00AF               	movwf	i1___flmul@grs+1
 19061     033F  0828               	movf	??i1___flmul,w
 19062     0340  00AE               	movwf	i1___flmul@grs
 19063     0341                     i1l5503:
 19064     0341  0839               	movf	i1___flmul@temp+1,w
 19065     0342  00A8               	movwf	??i1___flmul
 19066     0343  01A9               	clrf	??i1___flmul+1
 19067     0344  01AA               	clrf	??i1___flmul+2
 19068     0345  01AB               	clrf	??i1___flmul+3
 19069     0346  082B               	movf	??i1___flmul+3,w
 19070     0347  00B7               	movwf	i1___flmul@prod+3
 19071     0348  082A               	movf	??i1___flmul+2,w
 19072     0349  00B6               	movwf	i1___flmul@prod+2
 19073     034A  0829               	movf	??i1___flmul+1,w
 19074     034B  00B5               	movwf	i1___flmul@prod+1
 19075     034C  0828               	movf	??i1___flmul,w
 19076     034D  00B4               	movwf	i1___flmul@prod
 19077     034E  0821               	movf	i1___flmul@b+1,w
 19078     034F  00F0               	movwf	i1__Umul8_16@multiplicand
 19079     0350  0825               	movf	i1___flmul@a+1,w
 19080     0351  319E  26C9  3182   	fcall	i1__Umul8_16
 19081     0354  0871               	movf	?i1__Umul8_16+1,w
 19082     0355  0020               	movlb	0	; select bank0
 19083     0356  00B9               	movwf	i1___flmul@temp+1
 19084     0357  0870               	movf	?i1__Umul8_16,w
 19085     0358  00B8               	movwf	i1___flmul@temp
 19086     0359                     i1l5505:
 19087     0359  0838               	movf	i1___flmul@temp,w
 19088     035A  00A8               	movwf	??i1___flmul
 19089     035B  01A9               	clrf	??i1___flmul+1
 19090     035C  01AA               	clrf	??i1___flmul+2
 19091     035D  01AB               	clrf	??i1___flmul+3
 19092     035E  0828               	movf	??i1___flmul,w
 19093     035F  07AE               	addwf	i1___flmul@grs,f
 19094     0360  0829               	movf	??i1___flmul+1,w
 19095     0361  3DAF               	addwfc	i1___flmul@grs+1,f
 19096     0362  082A               	movf	??i1___flmul+2,w
 19097     0363  3DB0               	addwfc	i1___flmul@grs+2,f
 19098     0364  082B               	movf	??i1___flmul+3,w
 19099     0365  3DB1               	addwfc	i1___flmul@grs+3,f
 19100     0366                     i1l5507:
 19101     0366  0839               	movf	i1___flmul@temp+1,w
 19102     0367  00A8               	movwf	??i1___flmul
 19103     0368  01A9               	clrf	??i1___flmul+1
 19104     0369  01AA               	clrf	??i1___flmul+2
 19105     036A  01AB               	clrf	??i1___flmul+3
 19106     036B  0828               	movf	??i1___flmul,w
 19107     036C  07B4               	addwf	i1___flmul@prod,f
 19108     036D  0829               	movf	??i1___flmul+1,w
 19109     036E  3DB5               	addwfc	i1___flmul@prod+1,f
 19110     036F  082A               	movf	??i1___flmul+2,w
 19111     0370  3DB6               	addwfc	i1___flmul@prod+2,f
 19112     0371  082B               	movf	??i1___flmul+3,w
 19113     0372  3DB7               	addwfc	i1___flmul@prod+3,f
 19114     0373  0822               	movf	i1___flmul@b+2,w
 19115     0374  00F0               	movwf	i1__Umul8_16@multiplicand
 19116     0375  0824               	movf	i1___flmul@a,w
 19117     0376  319E  26C9  3182   	fcall	i1__Umul8_16
 19118     0379  0871               	movf	?i1__Umul8_16+1,w
 19119     037A  0020               	movlb	0	; select bank0
 19120     037B  00B9               	movwf	i1___flmul@temp+1
 19121     037C  0870               	movf	?i1__Umul8_16,w
 19122     037D  00B8               	movwf	i1___flmul@temp
 19123     037E                     i1l5509:
 19124     037E  0838               	movf	i1___flmul@temp,w
 19125     037F  00A8               	movwf	??i1___flmul
 19126     0380  01A9               	clrf	??i1___flmul+1
 19127     0381  01AA               	clrf	??i1___flmul+2
 19128     0382  01AB               	clrf	??i1___flmul+3
 19129     0383  0828               	movf	??i1___flmul,w
 19130     0384  07AE               	addwf	i1___flmul@grs,f
 19131     0385  0829               	movf	??i1___flmul+1,w
 19132     0386  3DAF               	addwfc	i1___flmul@grs+1,f
 19133     0387  082A               	movf	??i1___flmul+2,w
 19134     0388  3DB0               	addwfc	i1___flmul@grs+2,f
 19135     0389  082B               	movf	??i1___flmul+3,w
 19136     038A  3DB1               	addwfc	i1___flmul@grs+3,f
 19137     038B                     i1l5511:
 19138     038B  0839               	movf	i1___flmul@temp+1,w
 19139     038C  00A8               	movwf	??i1___flmul
 19140     038D  01A9               	clrf	??i1___flmul+1
 19141     038E  01AA               	clrf	??i1___flmul+2
 19142     038F  01AB               	clrf	??i1___flmul+3
 19143     0390  0828               	movf	??i1___flmul,w
 19144     0391  07B4               	addwf	i1___flmul@prod,f
 19145     0392  0829               	movf	??i1___flmul+1,w
 19146     0393  3DB5               	addwfc	i1___flmul@prod+1,f
 19147     0394  082A               	movf	??i1___flmul+2,w
 19148     0395  3DB6               	addwfc	i1___flmul@prod+2,f
 19149     0396  082B               	movf	??i1___flmul+3,w
 19150     0397  3DB7               	addwfc	i1___flmul@prod+3,f
 19151     0398                     i1l5513:
 19152     0398  3008               	movlw	8
 19153     0399                     u682_25:
 19154     0399  35AE               	lslf	i1___flmul@grs,f
 19155     039A  0DAF               	rlf	i1___flmul@grs+1,f
 19156     039B  0DB0               	rlf	i1___flmul@grs+2,f
 19157     039C  0DB1               	rlf	i1___flmul@grs+3,f
 19158     039D  0B89               	decfsz	9,f
 19159     039E  2B99               	goto	u682_25
 19160     039F                     i1l5515:
 19161     039F  0821               	movf	i1___flmul@b+1,w
 19162     03A0  00F0               	movwf	i1__Umul8_16@multiplicand
 19163     03A1  0824               	movf	i1___flmul@a,w
 19164     03A2  319E  26C9  3182   	fcall	i1__Umul8_16
 19165     03A5  0871               	movf	?i1__Umul8_16+1,w
 19166     03A6  0020               	movlb	0	; select bank0
 19167     03A7  00B9               	movwf	i1___flmul@temp+1
 19168     03A8  0870               	movf	?i1__Umul8_16,w
 19169     03A9  00B8               	movwf	i1___flmul@temp
 19170     03AA                     i1l5517:
 19171     03AA  0838               	movf	i1___flmul@temp,w
 19172     03AB  07AE               	addwf	i1___flmul@grs,f
 19173     03AC  0839               	movf	i1___flmul@temp+1,w
 19174     03AD  3DAF               	addwfc	i1___flmul@grs+1,f
 19175     03AE  3000               	movlw	0
 19176     03AF  3DB0               	addwfc	i1___flmul@grs+2,f
 19177     03B0  3DB1               	addwfc	i1___flmul@grs+3,f
 19178     03B1                     i1l5519:
 19179     03B1  0820               	movf	i1___flmul@b,w
 19180     03B2  00F0               	movwf	i1__Umul8_16@multiplicand
 19181     03B3  0825               	movf	i1___flmul@a+1,w
 19182     03B4  319E  26C9  3182   	fcall	i1__Umul8_16
 19183     03B7  0871               	movf	?i1__Umul8_16+1,w
 19184     03B8  0020               	movlb	0	; select bank0
 19185     03B9  00B9               	movwf	i1___flmul@temp+1
 19186     03BA  0870               	movf	?i1__Umul8_16,w
 19187     03BB  00B8               	movwf	i1___flmul@temp
 19188     03BC                     i1l5521:
 19189     03BC  0838               	movf	i1___flmul@temp,w
 19190     03BD  07AE               	addwf	i1___flmul@grs,f
 19191     03BE  0839               	movf	i1___flmul@temp+1,w
 19192     03BF  3DAF               	addwfc	i1___flmul@grs+1,f
 19193     03C0  3000               	movlw	0
 19194     03C1  3DB0               	addwfc	i1___flmul@grs+2,f
 19195     03C2  3DB1               	addwfc	i1___flmul@grs+3,f
 19196     03C3                     i1l5523:
 19197     03C3  3008               	movlw	8
 19198     03C4                     u683_25:
 19199     03C4  35AE               	lslf	i1___flmul@grs,f
 19200     03C5  0DAF               	rlf	i1___flmul@grs+1,f
 19201     03C6  0DB0               	rlf	i1___flmul@grs+2,f
 19202     03C7  0DB1               	rlf	i1___flmul@grs+3,f
 19203     03C8  0B89               	decfsz	9,f
 19204     03C9  2BC4               	goto	u683_25
 19205     03CA  0820               	movf	i1___flmul@b,w
 19206     03CB  00F0               	movwf	i1__Umul8_16@multiplicand
 19207     03CC  0824               	movf	i1___flmul@a,w
 19208     03CD  319E  26C9  3182   	fcall	i1__Umul8_16
 19209     03D0  0871               	movf	?i1__Umul8_16+1,w
 19210     03D1  0020               	movlb	0	; select bank0
 19211     03D2  00B9               	movwf	i1___flmul@temp+1
 19212     03D3  0870               	movf	?i1__Umul8_16,w
 19213     03D4  00B8               	movwf	i1___flmul@temp
 19214     03D5                     i1l5525:
 19215     03D5  0838               	movf	i1___flmul@temp,w
 19216     03D6  07AE               	addwf	i1___flmul@grs,f
 19217     03D7  0839               	movf	i1___flmul@temp+1,w
 19218     03D8  3DAF               	addwfc	i1___flmul@grs+1,f
 19219     03D9  3000               	movlw	0
 19220     03DA  3DB0               	addwfc	i1___flmul@grs+2,f
 19221     03DB  3DB1               	addwfc	i1___flmul@grs+3,f
 19222     03DC                     i1l5527:
 19223     03DC  0821               	movf	i1___flmul@b+1,w
 19224     03DD  00F0               	movwf	i1__Umul8_16@multiplicand
 19225     03DE  0826               	movf	i1___flmul@a+2,w
 19226     03DF  319E  26C9  3182   	fcall	i1__Umul8_16
 19227     03E2  0871               	movf	?i1__Umul8_16+1,w
 19228     03E3  0020               	movlb	0	; select bank0
 19229     03E4  00B9               	movwf	i1___flmul@temp+1
 19230     03E5  0870               	movf	?i1__Umul8_16,w
 19231     03E6  00B8               	movwf	i1___flmul@temp
 19232     03E7  0838               	movf	i1___flmul@temp,w
 19233     03E8  07B4               	addwf	i1___flmul@prod,f
 19234     03E9  0839               	movf	i1___flmul@temp+1,w
 19235     03EA  3DB5               	addwfc	i1___flmul@prod+1,f
 19236     03EB  3000               	movlw	0
 19237     03EC  3DB6               	addwfc	i1___flmul@prod+2,f
 19238     03ED  3DB7               	addwfc	i1___flmul@prod+3,f
 19239     03EE                     i1l5529:
 19240     03EE  0822               	movf	i1___flmul@b+2,w
 19241     03EF  00F0               	movwf	i1__Umul8_16@multiplicand
 19242     03F0  0825               	movf	i1___flmul@a+1,w
 19243     03F1  319E  26C9  3182   	fcall	i1__Umul8_16
 19244     03F4  0871               	movf	?i1__Umul8_16+1,w
 19245     03F5  0020               	movlb	0	; select bank0
 19246     03F6  00B9               	movwf	i1___flmul@temp+1
 19247     03F7  0870               	movf	?i1__Umul8_16,w
 19248     03F8  00B8               	movwf	i1___flmul@temp
 19249     03F9                     i1l5531:
 19250     03F9  0838               	movf	i1___flmul@temp,w
 19251     03FA  07B4               	addwf	i1___flmul@prod,f
 19252     03FB  0839               	movf	i1___flmul@temp+1,w
 19253     03FC  3DB5               	addwfc	i1___flmul@prod+1,f
 19254     03FD  3000               	movlw	0
 19255     03FE  3DB6               	addwfc	i1___flmul@prod+2,f
 19256     03FF  3DB7               	addwfc	i1___flmul@prod+3,f
 19257     0400  0822               	movf	i1___flmul@b+2,w
 19258     0401  00F0               	movwf	i1__Umul8_16@multiplicand
 19259     0402  0826               	movf	i1___flmul@a+2,w
 19260     0403  319E  26C9  3182   	fcall	i1__Umul8_16
 19261     0406  0871               	movf	?i1__Umul8_16+1,w
 19262     0407  0020               	movlb	0	; select bank0
 19263     0408  00B9               	movwf	i1___flmul@temp+1
 19264     0409  0870               	movf	?i1__Umul8_16,w
 19265     040A  00B8               	movwf	i1___flmul@temp
 19266     040B                     i1l5533:
 19267     040B  0838               	movf	i1___flmul@temp,w
 19268     040C  00A8               	movwf	??i1___flmul
 19269     040D  0839               	movf	i1___flmul@temp+1,w
 19270     040E  00A9               	movwf	??i1___flmul+1
 19271     040F  01AA               	clrf	??i1___flmul+2
 19272     0410  01AB               	clrf	??i1___flmul+3
 19273     0411  3008               	movlw	8
 19274     0412                     u684_25:
 19275     0412  35A8               	lslf	??i1___flmul,f
 19276     0413  0DA9               	rlf	??i1___flmul+1,f
 19277     0414  0DAA               	rlf	??i1___flmul+2,f
 19278     0415  0DAB               	rlf	??i1___flmul+3,f
 19279     0416                     u684_20:
 19280     0416  0B89               	decfsz	9,f
 19281     0417  2C12               	goto	u684_25
 19282     0418  0828               	movf	??i1___flmul,w
 19283     0419  07B4               	addwf	i1___flmul@prod,f
 19284     041A  0829               	movf	??i1___flmul+1,w
 19285     041B  3DB5               	addwfc	i1___flmul@prod+1,f
 19286     041C  082A               	movf	??i1___flmul+2,w
 19287     041D  3DB6               	addwfc	i1___flmul@prod+2,f
 19288     041E  082B               	movf	??i1___flmul+3,w
 19289     041F  3DB7               	addwfc	i1___flmul@prod+3,f
 19290     0420                     i1l5535:
 19291     0420  082E               	movf	i1___flmul@grs,w
 19292     0421  00A8               	movwf	??i1___flmul
 19293     0422  082F               	movf	i1___flmul@grs+1,w
 19294     0423  00A9               	movwf	??i1___flmul+1
 19295     0424  0830               	movf	i1___flmul@grs+2,w
 19296     0425  00AA               	movwf	??i1___flmul+2
 19297     0426  0831               	movf	i1___flmul@grs+3,w
 19298     0427  00AB               	movwf	??i1___flmul+3
 19299     0428  3018               	movlw	24
 19300     0429                     u685_25:
 19301     0429  36AB               	lsrf	??i1___flmul+3,f
 19302     042A  0CAA               	rrf	??i1___flmul+2,f
 19303     042B  0CA9               	rrf	??i1___flmul+1,f
 19304     042C  0CA8               	rrf	??i1___flmul,f
 19305     042D                     u685_20:
 19306     042D  0B89               	decfsz	9,f
 19307     042E  2C29               	goto	u685_25
 19308     042F  0828               	movf	??i1___flmul,w
 19309     0430  07B4               	addwf	i1___flmul@prod,f
 19310     0431  0829               	movf	??i1___flmul+1,w
 19311     0432  3DB5               	addwfc	i1___flmul@prod+1,f
 19312     0433  082A               	movf	??i1___flmul+2,w
 19313     0434  3DB6               	addwfc	i1___flmul@prod+2,f
 19314     0435  082B               	movf	??i1___flmul+3,w
 19315     0436  3DB7               	addwfc	i1___flmul@prod+3,f
 19316     0437                     i1l5537:
 19317     0437  3008               	movlw	8
 19318     0438                     u686_25:
 19319     0438  35AE               	lslf	i1___flmul@grs,f
 19320     0439  0DAF               	rlf	i1___flmul@grs+1,f
 19321     043A  0DB0               	rlf	i1___flmul@grs+2,f
 19322     043B  0DB1               	rlf	i1___flmul@grs+3,f
 19323     043C  0B89               	decfsz	9,f
 19324     043D  2C38               	goto	u686_25
 19325     043E                     i1l5539:
 19326     043E  0833               	movf	i1___flmul@bexp,w
 19327     043F  0732               	addwf	i1___flmul@aexp,w
 19328     0440  00A8               	movwf	??i1___flmul
 19329     0441  01A9               	clrf	??i1___flmul+1
 19330     0442  0DA9               	rlf	??i1___flmul+1,f
 19331     0443  0828               	movf	??i1___flmul,w
 19332     0444  3E82               	addlw	130
 19333     0445  00B8               	movwf	i1___flmul@temp
 19334     0446  30FF               	movlw	255
 19335     0447  3D29               	addwfc	??i1___flmul+1,w
 19336     0448  00B9               	movwf	i1___flmul@temp+1
 19337     0449  2C61               	goto	i1l5551
 19338     044A                     i1l5541:
 19339     044A  3001               	movlw	1
 19340     044B                     u687_25:
 19341     044B  35B4               	lslf	i1___flmul@prod,f
 19342     044C  0DB5               	rlf	i1___flmul@prod+1,f
 19343     044D  0DB6               	rlf	i1___flmul@prod+2,f
 19344     044E  0DB7               	rlf	i1___flmul@prod+3,f
 19345     044F  0B89               	decfsz	9,f
 19346     0450  2C4B               	goto	u687_25
 19347     0451                     i1l5543:
 19348     0451  1FB1               	btfss	i1___flmul@grs+3,7
 19349     0452  2C54               	goto	u688_21
 19350     0453  2C55               	goto	u688_20
 19351     0454                     u688_21:
 19352     0454  2C56               	goto	i1l5547
 19353     0455                     u688_20:
 19354     0455                     i1l5545:
 19355     0455  1434               	bsf	i1___flmul@prod,0
 19356     0456                     i1l5547:
 19357     0456  3001               	movlw	1
 19358     0457                     u689_25:
 19359     0457  35AE               	lslf	i1___flmul@grs,f
 19360     0458  0DAF               	rlf	i1___flmul@grs+1,f
 19361     0459  0DB0               	rlf	i1___flmul@grs+2,f
 19362     045A  0DB1               	rlf	i1___flmul@grs+3,f
 19363     045B  0B89               	decfsz	9,f
 19364     045C  2C57               	goto	u689_25
 19365     045D                     i1l5549:
 19366     045D  30FF               	movlw	255
 19367     045E  07B8               	addwf	i1___flmul@temp,f
 19368     045F  30FF               	movlw	255
 19369     0460  3DB9               	addwfc	i1___flmul@temp+1,f
 19370     0461                     i1l5551:
 19371     0461  1FB6               	btfss	i1___flmul@prod+2,7
 19372     0462  2C64               	goto	u690_21
 19373     0463  2C65               	goto	u690_20
 19374     0464                     u690_21:
 19375     0464  2C4A               	goto	i1l5541
 19376     0465                     u690_20:
 19377     0465                     i1l5553:
 19378     0465  01B2               	clrf	i1___flmul@aexp
 19379     0466                     i1l5555:
 19380     0466  1FB1               	btfss	i1___flmul@grs+3,7
 19381     0467  2C69               	goto	u691_21
 19382     0468  2C6A               	goto	u691_20
 19383     0469                     u691_21:
 19384     0469  2C86               	goto	i1l5563
 19385     046A                     u691_20:
 19386     046A                     i1l5557:
 19387     046A  30FF               	movlw	255
 19388     046B  052E               	andwf	i1___flmul@grs,w
 19389     046C  00A8               	movwf	??i1___flmul
 19390     046D  30FF               	movlw	255
 19391     046E  052F               	andwf	i1___flmul@grs+1,w
 19392     046F  00A9               	movwf	??i1___flmul+1
 19393     0470  30FF               	movlw	255
 19394     0471  0530               	andwf	i1___flmul@grs+2,w
 19395     0472  00AA               	movwf	??i1___flmul+2
 19396     0473  307F               	movlw	127
 19397     0474  0531               	andwf	i1___flmul@grs+3,w
 19398     0475  00AB               	movwf	??i1___flmul+3
 19399     0476  082B               	movf	??i1___flmul+3,w
 19400     0477  042A               	iorwf	??i1___flmul+2,w
 19401     0478  0429               	iorwf	??i1___flmul+1,w
 19402     0479  0428               	iorwf	??i1___flmul,w
 19403     047A  1903               	skipnz
 19404     047B  2C7D               	goto	u692_21
 19405     047C  2C7E               	goto	u692_20
 19406     047D                     u692_21:
 19407     047D  2C81               	goto	i1l1584
 19408     047E                     u692_20:
 19409     047E                     i1l5559:
 19410     047E  3001               	movlw	1
 19411     047F  00B2               	movwf	i1___flmul@aexp
 19412     0480  2C86               	goto	i1l5563
 19413     0481                     i1l1584:
 19414     0481  1C34               	btfss	i1___flmul@prod,0
 19415     0482  2C84               	goto	u693_21
 19416     0483  2C85               	goto	u693_20
 19417     0484                     u693_21:
 19418     0484  2C86               	goto	i1l5563
 19419     0485                     u693_20:
 19420     0485  2C7E               	goto	i1l5559
 19421     0486                     i1l5563:
 19422     0486  0832               	movf	i1___flmul@aexp,w
 19423     0487  1903               	btfsc	3,2
 19424     0488  2C8A               	goto	u694_21
 19425     0489  2C8B               	goto	u694_20
 19426     048A                     u694_21:
 19427     048A  2CB1               	goto	i1l5573
 19428     048B                     u694_20:
 19429     048B                     i1l5565:
 19430     048B  3001               	movlw	1
 19431     048C  07B4               	addwf	i1___flmul@prod,f
 19432     048D  3000               	movlw	0
 19433     048E  3DB5               	addwfc	i1___flmul@prod+1,f
 19434     048F  3DB6               	addwfc	i1___flmul@prod+2,f
 19435     0490  3DB7               	addwfc	i1___flmul@prod+3,f
 19436     0491                     i1l5567:
 19437     0491  1C37               	btfss	i1___flmul@prod+3,0
 19438     0492  2C94               	goto	u695_21
 19439     0493  2C95               	goto	u695_20
 19440     0494                     u695_21:
 19441     0494  2CB1               	goto	i1l5573
 19442     0495                     u695_20:
 19443     0495                     i1l5569:
 19444     0495  0834               	movf	i1___flmul@prod,w
 19445     0496  00A8               	movwf	??i1___flmul
 19446     0497  0835               	movf	i1___flmul@prod+1,w
 19447     0498  00A9               	movwf	??i1___flmul+1
 19448     0499  0836               	movf	i1___flmul@prod+2,w
 19449     049A  00AA               	movwf	??i1___flmul+2
 19450     049B  0837               	movf	i1___flmul@prod+3,w
 19451     049C  00AB               	movwf	??i1___flmul+3
 19452     049D  3001               	movlw	1
 19453     049E  00AC               	movwf	??i1___flmul+4
 19454     049F                     u696_25:
 19455     049F  37AB               	asrf	??i1___flmul+3,f
 19456     04A0  0CAA               	rrf	??i1___flmul+2,f
 19457     04A1  0CA9               	rrf	??i1___flmul+1,f
 19458     04A2  0CA8               	rrf	??i1___flmul,f
 19459     04A3                     u696_20:
 19460     04A3  0BAC               	decfsz	??i1___flmul+4,f
 19461     04A4  2C9F               	goto	u696_25
 19462     04A5  082B               	movf	??i1___flmul+3,w
 19463     04A6  00B7               	movwf	i1___flmul@prod+3
 19464     04A7  082A               	movf	??i1___flmul+2,w
 19465     04A8  00B6               	movwf	i1___flmul@prod+2
 19466     04A9  0829               	movf	??i1___flmul+1,w
 19467     04AA  00B5               	movwf	i1___flmul@prod+1
 19468     04AB  0828               	movf	??i1___flmul,w
 19469     04AC  00B4               	movwf	i1___flmul@prod
 19470     04AD                     i1l5571:
 19471     04AD  3001               	movlw	1
 19472     04AE  07B8               	addwf	i1___flmul@temp,f
 19473     04AF  3000               	movlw	0
 19474     04B0  3DB9               	addwfc	i1___flmul@temp+1,f
 19475     04B1                     i1l5573:
 19476     04B1  0839               	movf	i1___flmul@temp+1,w
 19477     04B2  3A80               	xorlw	128
 19478     04B3  00A8               	movwf	??i1___flmul
 19479     04B4  3080               	movlw	128
 19480     04B5  0228               	subwf	??i1___flmul,w
 19481     04B6  1D03               	skipz
 19482     04B7  2CBA               	goto	u697_25
 19483     04B8  30FF               	movlw	255
 19484     04B9  0238               	subwf	i1___flmul@temp,w
 19485     04BA                     u697_25:
 19486     04BA  1C03               	skipc
 19487     04BB  2CBD               	goto	u697_21
 19488     04BC  2CBE               	goto	u697_20
 19489     04BD                     u697_21:
 19490     04BD  2CC8               	goto	i1l5577
 19491     04BE                     u697_20:
 19492     04BE                     i1l5575:
 19493     04BE  307F               	movlw	127
 19494     04BF  0020               	movlb	0	; select bank0
 19495     04C0  00B7               	movwf	i1___flmul@prod+3
 19496     04C1  3080               	movlw	128
 19497     04C2  00B6               	movwf	i1___flmul@prod+2
 19498     04C3  3000               	movlw	0
 19499     04C4  00B5               	movwf	i1___flmul@prod+1
 19500     04C5  3000               	movlw	0
 19501     04C6  00B4               	movwf	i1___flmul@prod
 19502     04C7  2CF9               	goto	i1l1590
 19503     04C8                     i1l5577:
 19504     04C8  0020               	movlb	0	; select bank0
 19505     04C9  0839               	movf	i1___flmul@temp+1,w
 19506     04CA  3A80               	xorlw	128
 19507     04CB  00A8               	movwf	??i1___flmul
 19508     04CC  3080               	movlw	128
 19509     04CD  0228               	subwf	??i1___flmul,w
 19510     04CE  1D03               	skipz
 19511     04CF  2CD2               	goto	u698_25
 19512     04D0  3001               	movlw	1
 19513     04D1  0238               	subwf	i1___flmul@temp,w
 19514     04D2                     u698_25:
 19515     04D2  1803               	skipnc
 19516     04D3  2CD5               	goto	u698_21
 19517     04D4  2CD6               	goto	u698_20
 19518     04D5                     u698_21:
 19519     04D5  2CE1               	goto	i1l5583
 19520     04D6                     u698_20:
 19521     04D6                     i1l5579:
 19522     04D6  3000               	movlw	0
 19523     04D7  0020               	movlb	0	; select bank0
 19524     04D8  00B7               	movwf	i1___flmul@prod+3
 19525     04D9  3000               	movlw	0
 19526     04DA  00B6               	movwf	i1___flmul@prod+2
 19527     04DB  3000               	movlw	0
 19528     04DC  00B5               	movwf	i1___flmul@prod+1
 19529     04DD  3000               	movlw	0
 19530     04DE  00B4               	movwf	i1___flmul@prod
 19531     04DF                     i1l5581:
 19532     04DF  01AD               	clrf	i1___flmul@sign
 19533     04E0  2CF9               	goto	i1l1590
 19534     04E1                     i1l5583:
 19535     04E1  0020               	movlb	0	; select bank0
 19536     04E2  0838               	movf	i1___flmul@temp,w
 19537     04E3  00B3               	movwf	i1___flmul@bexp
 19538     04E4  30FF               	movlw	255
 19539     04E5  05B4               	andwf	i1___flmul@prod,f
 19540     04E6  30FF               	movlw	255
 19541     04E7  05B5               	andwf	i1___flmul@prod+1,f
 19542     04E8  307F               	movlw	127
 19543     04E9  05B6               	andwf	i1___flmul@prod+2,f
 19544     04EA  3000               	movlw	0
 19545     04EB  05B7               	andwf	i1___flmul@prod+3,f
 19546     04EC                     i1l5585:
 19547     04EC  1C33               	btfss	i1___flmul@bexp,0
 19548     04ED  2CEF               	goto	u699_21
 19549     04EE  2CF0               	goto	u699_20
 19550     04EF                     u699_21:
 19551     04EF  2CF1               	goto	i1l5589
 19552     04F0                     u699_20:
 19553     04F0                     i1l5587:
 19554     04F0  17B6               	bsf	i1___flmul@prod+2,7
 19555     04F1                     i1l5589:
 19556     04F1  0833               	movf	i1___flmul@bexp,w
 19557     04F2  00A8               	movwf	??i1___flmul
 19558     04F3  3001               	movlw	1
 19559     04F4                     u700_25:
 19560     04F4  36A8               	lsrf	??i1___flmul,f
 19561     04F5  0B89               	decfsz	9,f
 19562     04F6  2CF4               	goto	u700_25
 19563     04F7  0828               	movf	??i1___flmul,w
 19564     04F8  00B7               	movwf	i1___flmul@prod+3
 19565     04F9                     i1l1590:
 19566     04F9  082D               	movf	i1___flmul@sign,w
 19567     04FA  04B7               	iorwf	i1___flmul@prod+3,f
 19568     04FB                     i1l5591:
 19569     04FB  0837               	movf	i1___flmul@prod+3,w
 19570     04FC  00A3               	movwf	?i1___flmul+3
 19571     04FD  0836               	movf	i1___flmul@prod+2,w
 19572     04FE  00A2               	movwf	?i1___flmul+2
 19573     04FF  0835               	movf	i1___flmul@prod+1,w
 19574     0500  00A1               	movwf	?i1___flmul+1
 19575     0501  0834               	movf	i1___flmul@prod,w
 19576     0502  00A0               	movwf	?i1___flmul
 19577     0503                     i1l1578:
 19578     0503  0008               	return
 19579     0504                     __end_ofi1___flmul:
 19580                           
 19581                           	psect	text81
 19582     1EC9                     __ptext81:	
 19583 ;; *************** function i1__Umul8_16 *****************
 19584 ;; Defined at:
 19585 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
 19586 ;; Parameters:    Size  Location     Type
 19587 ;;  multiplier      1    wreg     unsigned char 
 19588 ;;  multiplicand    1    0[COMMON] unsigned char 
 19589 ;; Auto vars:     Size  Location     Type
 19590 ;;  multiplier      1    8[COMMON] unsigned char 
 19591 ;;  word_mpld       2    6[COMMON] unsigned short 
 19592 ;;  product         2    4[COMMON] unsigned short 
 19593 ;; Return value:  Size  Location     Type
 19594 ;;                  2    0[COMMON] unsigned int 
 19595 ;; Registers used:
 19596 ;;		wreg, status,2, status,0
 19597 ;; Tracked objects:
 19598 ;;		On entry : 0/0
 19599 ;;		On exit  : 0/0
 19600 ;;		Unchanged: 0/0
 19601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19603 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19605 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19606 ;;Total ram usage:        9 bytes
 19607 ;; Hardware stack levels used: 1
 19608 ;; This function calls:
 19609 ;;		Nothing
 19610 ;; This function is called by:
 19611 ;;		i1___flmul
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615     1EC9                     i1__Umul8_16:	
 19616                           ;psect for function i1__Umul8_16
 19617                           
 19618                           
 19619                           ;incstack = 0
 19620                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 19621                           ;i1__Umul8_16@multiplier stored from wreg
 19622     1EC9  00F8               	movwf	i1__Umul8_16@multiplier
 19623     1ECA                     i1l4939:
 19624     1ECA  01F4               	clrf	i1__Umul8_16@product
 19625     1ECB  01F5               	clrf	i1__Umul8_16@product+1
 19626     1ECC                     i1l4941:
 19627     1ECC  0870               	movf	i1__Umul8_16@multiplicand,w
 19628     1ECD  00F2               	movwf	??i1__Umul8_16
 19629     1ECE  01F3               	clrf	??i1__Umul8_16+1
 19630     1ECF  0872               	movf	??i1__Umul8_16,w
 19631     1ED0  00F6               	movwf	i1__Umul8_16@word_mpld
 19632     1ED1  0873               	movf	??i1__Umul8_16+1,w
 19633     1ED2  00F7               	movwf	i1__Umul8_16@word_mpld+1
 19634     1ED3                     i1l4943:
 19635     1ED3  1C78               	btfss	i1__Umul8_16@multiplier,0
 19636     1ED4  2ED6               	goto	u567_21
 19637     1ED5  2ED7               	goto	u567_20
 19638     1ED6                     u567_21:
 19639     1ED6  2EDB               	goto	i1l1597
 19640     1ED7                     u567_20:
 19641     1ED7                     i1l4945:
 19642     1ED7  0876               	movf	i1__Umul8_16@word_mpld,w
 19643     1ED8  07F4               	addwf	i1__Umul8_16@product,f
 19644     1ED9  0877               	movf	i1__Umul8_16@word_mpld+1,w
 19645     1EDA  3DF5               	addwfc	i1__Umul8_16@product+1,f
 19646     1EDB                     i1l1597:
 19647     1EDB  3001               	movlw	1
 19648     1EDC                     u568_25:
 19649     1EDC  35F6               	lslf	i1__Umul8_16@word_mpld,f
 19650     1EDD  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 19651     1EDE  0B89               	decfsz	9,f
 19652     1EDF  2EDC               	goto	u568_25
 19653     1EE0  1003               	clrc
 19654     1EE1  0CF8               	rrf	i1__Umul8_16@multiplier,f
 19655     1EE2                     i1l4947:
 19656     1EE2  0878               	movf	i1__Umul8_16@multiplier,w
 19657     1EE3  1D03               	btfss	3,2
 19658     1EE4  2EE6               	goto	u569_21
 19659     1EE5  2EE7               	goto	u569_20
 19660     1EE6                     u569_21:
 19661     1EE6  2ED3               	goto	i1l4943
 19662     1EE7                     u569_20:
 19663     1EE7                     i1l4949:
 19664     1EE7  0875               	movf	i1__Umul8_16@product+1,w
 19665     1EE8  00F1               	movwf	?i1__Umul8_16+1
 19666     1EE9  0874               	movf	i1__Umul8_16@product,w
 19667     1EEA  00F0               	movwf	?i1__Umul8_16
 19668     1EEB                     i1l1599:
 19669     1EEB  0008               	return
 19670     1EEC                     __end_ofi1__Umul8_16:
 19671                           
 19672                           	psect	text82
 19673     0DF4                     __ptext82:	
 19674 ;; *************** function i1___fladd *****************
 19675 ;; Defined at:
 19676 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
 19677 ;; Parameters:    Size  Location     Type
 19678 ;;  b               4   26[BANK0 ] unsigned int 
 19679 ;;  a               4   30[BANK0 ] unsigned int 
 19680 ;; Auto vars:     Size  Location     Type
 19681 ;;  grs             1   45[BANK0 ] unsigned char 
 19682 ;;  bexp            1   44[BANK0 ] unsigned char 
 19683 ;;  aexp            1   43[BANK0 ] unsigned char 
 19684 ;;  signs           1   42[BANK0 ] unsigned char 
 19685 ;; Return value:  Size  Location     Type
 19686 ;;                  4   26[BANK0 ] unsigned char 
 19687 ;; Registers used:
 19688 ;;		wreg, status,2, status,0
 19689 ;; Tracked objects:
 19690 ;;		On entry : 0/0
 19691 ;;		On exit  : 0/0
 19692 ;;		Unchanged: 0/0
 19693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19694 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19695 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19696 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19697 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19698 ;;Total ram usage:       20 bytes
 19699 ;; Hardware stack levels used: 1
 19700 ;; This function calls:
 19701 ;;		Nothing
 19702 ;; This function is called by:
 19703 ;;		_controller
 19704 ;; This function uses a non-reentrant model
 19705 ;;
 19706                           
 19707     0DF4                     i1___fladd:	
 19708                           ;psect for function i1___fladd
 19709                           
 19710     0DF4                     i1l5259:	
 19711                           ;incstack = 0
 19712                           ; Regs used in i1___fladd: [wreg+status,2+status,0]
 19713                           
 19714     0DF4  0020               	movlb	0	; select bank0
 19715     0DF5  083D               	movf	i1___fladd@b+3,w
 19716     0DF6  3980               	andlw	128
 19717     0DF7  00CA               	movwf	i1___fladd@signs
 19718     0DF8                     i1l5261:
 19719     0DF8  353D               	lslf	i1___fladd@b+3,w
 19720     0DF9  00CC               	movwf	i1___fladd@bexp
 19721     0DFA                     i1l5263:
 19722     0DFA  1FBC               	btfss	i1___fladd@b+2,7
 19723     0DFB  2DFD               	goto	u628_21
 19724     0DFC  2DFE               	goto	u628_20
 19725     0DFD                     u628_21:
 19726     0DFD  2DFF               	goto	i1l5267
 19727     0DFE                     u628_20:
 19728     0DFE                     i1l5265:
 19729     0DFE  144C               	bsf	i1___fladd@bexp,0
 19730     0DFF                     i1l5267:
 19731     0DFF  084C               	movf	i1___fladd@bexp,w
 19732     0E00  1903               	btfsc	3,2
 19733     0E01  2E03               	goto	u629_21
 19734     0E02  2E04               	goto	u629_20
 19735     0E03                     u629_21:
 19736     0E03  2E14               	goto	i1l5277
 19737     0E04                     u629_20:
 19738     0E04                     i1l5269:
 19739     0E04  0A4C               	incf	i1___fladd@bexp,w
 19740     0E05  1D03               	btfss	3,2
 19741     0E06  2E08               	goto	u630_21
 19742     0E07  2E09               	goto	u630_20
 19743     0E08                     u630_21:
 19744     0E08  2E11               	goto	i1l5273
 19745     0E09                     u630_20:
 19746     0E09                     i1l5271:
 19747     0E09  3000               	movlw	0
 19748     0E0A  00BD               	movwf	i1___fladd@b+3
 19749     0E0B  3000               	movlw	0
 19750     0E0C  00BC               	movwf	i1___fladd@b+2
 19751     0E0D  3000               	movlw	0
 19752     0E0E  00BB               	movwf	i1___fladd@b+1
 19753     0E0F  3000               	movlw	0
 19754     0E10  00BA               	movwf	i1___fladd@b
 19755     0E11                     i1l5273:
 19756     0E11  17BC               	bsf	i1___fladd@b+2,7
 19757     0E12                     i1l5275:
 19758     0E12  01BD               	clrf	i1___fladd@b+3
 19759     0E13  2E1C               	goto	i1l5279
 19760     0E14                     i1l5277:
 19761     0E14  3000               	movlw	0
 19762     0E15  00BD               	movwf	i1___fladd@b+3
 19763     0E16  3000               	movlw	0
 19764     0E17  00BC               	movwf	i1___fladd@b+2
 19765     0E18  3000               	movlw	0
 19766     0E19  00BB               	movwf	i1___fladd@b+1
 19767     0E1A  3000               	movlw	0
 19768     0E1B  00BA               	movwf	i1___fladd@b
 19769     0E1C                     i1l5279:
 19770     0E1C  0841               	movf	i1___fladd@a+3,w
 19771     0E1D  3980               	andlw	128
 19772     0E1E  00CB               	movwf	i1___fladd@aexp
 19773     0E1F                     i1l5281:
 19774     0E1F  084B               	movf	i1___fladd@aexp,w
 19775     0E20  064A               	xorwf	i1___fladd@signs,w
 19776     0E21  1903               	skipnz
 19777     0E22  2E24               	goto	u631_21
 19778     0E23  2E25               	goto	u631_20
 19779     0E24                     u631_21:
 19780     0E24  2E26               	goto	i1l5285
 19781     0E25                     u631_20:
 19782     0E25                     i1l5283:
 19783     0E25  174A               	bsf	i1___fladd@signs,6
 19784     0E26                     i1l5285:
 19785     0E26  3541               	lslf	i1___fladd@a+3,w
 19786     0E27  00CB               	movwf	i1___fladd@aexp
 19787     0E28                     i1l5287:
 19788     0E28  1FC0               	btfss	i1___fladd@a+2,7
 19789     0E29  2E2B               	goto	u632_21
 19790     0E2A  2E2C               	goto	u632_20
 19791     0E2B                     u632_21:
 19792     0E2B  2E2D               	goto	i1l5291
 19793     0E2C                     u632_20:
 19794     0E2C                     i1l5289:
 19795     0E2C  144B               	bsf	i1___fladd@aexp,0
 19796     0E2D                     i1l5291:
 19797     0E2D  084B               	movf	i1___fladd@aexp,w
 19798     0E2E  1903               	btfsc	3,2
 19799     0E2F  2E31               	goto	u633_21
 19800     0E30  2E32               	goto	u633_20
 19801     0E31                     u633_21:
 19802     0E31  2E42               	goto	i1l5301
 19803     0E32                     u633_20:
 19804     0E32                     i1l5293:
 19805     0E32  0A4B               	incf	i1___fladd@aexp,w
 19806     0E33  1D03               	btfss	3,2
 19807     0E34  2E36               	goto	u634_21
 19808     0E35  2E37               	goto	u634_20
 19809     0E36                     u634_21:
 19810     0E36  2E3F               	goto	i1l5297
 19811     0E37                     u634_20:
 19812     0E37                     i1l5295:
 19813     0E37  3000               	movlw	0
 19814     0E38  00C1               	movwf	i1___fladd@a+3
 19815     0E39  3000               	movlw	0
 19816     0E3A  00C0               	movwf	i1___fladd@a+2
 19817     0E3B  3000               	movlw	0
 19818     0E3C  00BF               	movwf	i1___fladd@a+1
 19819     0E3D  3000               	movlw	0
 19820     0E3E  00BE               	movwf	i1___fladd@a
 19821     0E3F                     i1l5297:
 19822     0E3F  17C0               	bsf	i1___fladd@a+2,7
 19823     0E40                     i1l5299:
 19824     0E40  01C1               	clrf	i1___fladd@a+3
 19825     0E41  2E4A               	goto	i1l1482
 19826     0E42                     i1l5301:
 19827     0E42  3000               	movlw	0
 19828     0E43  00C1               	movwf	i1___fladd@a+3
 19829     0E44  3000               	movlw	0
 19830     0E45  00C0               	movwf	i1___fladd@a+2
 19831     0E46  3000               	movlw	0
 19832     0E47  00BF               	movwf	i1___fladd@a+1
 19833     0E48  3000               	movlw	0
 19834     0E49  00BE               	movwf	i1___fladd@a
 19835     0E4A                     i1l1482:
 19836     0E4A  084C               	movf	i1___fladd@bexp,w
 19837     0E4B  024B               	subwf	i1___fladd@aexp,w
 19838     0E4C  1803               	skipnc
 19839     0E4D  2E4F               	goto	u635_21
 19840     0E4E  2E50               	goto	u635_20
 19841     0E4F                     u635_21:
 19842     0E4F  2E74               	goto	i1l5337
 19843     0E50                     u635_20:
 19844     0E50                     i1l5303:
 19845     0E50  1F4A               	btfss	i1___fladd@signs,6
 19846     0E51  2E53               	goto	u636_21
 19847     0E52  2E54               	goto	u636_20
 19848     0E53                     u636_21:
 19849     0E53  2E56               	goto	i1l5307
 19850     0E54                     u636_20:
 19851     0E54                     i1l5305:
 19852     0E54  3080               	movlw	128
 19853     0E55  06CA               	xorwf	i1___fladd@signs,f
 19854     0E56                     i1l5307:
 19855     0E56  084C               	movf	i1___fladd@bexp,w
 19856     0E57  00CD               	movwf	i1___fladd@grs
 19857     0E58                     i1l5309:
 19858     0E58  084B               	movf	i1___fladd@aexp,w
 19859     0E59  00CC               	movwf	i1___fladd@bexp
 19860     0E5A                     i1l5311:
 19861     0E5A  084D               	movf	i1___fladd@grs,w
 19862     0E5B  00CB               	movwf	i1___fladd@aexp
 19863     0E5C                     i1l5313:
 19864     0E5C  083A               	movf	i1___fladd@b,w
 19865     0E5D  00CD               	movwf	i1___fladd@grs
 19866     0E5E                     i1l5315:
 19867     0E5E  083E               	movf	i1___fladd@a,w
 19868     0E5F  00BA               	movwf	i1___fladd@b
 19869     0E60                     i1l5317:
 19870     0E60  084D               	movf	i1___fladd@grs,w
 19871     0E61  00BE               	movwf	i1___fladd@a
 19872     0E62                     i1l5319:
 19873     0E62  083B               	movf	i1___fladd@b+1,w
 19874     0E63  00CD               	movwf	i1___fladd@grs
 19875     0E64                     i1l5321:
 19876     0E64  083F               	movf	i1___fladd@a+1,w
 19877     0E65  00BB               	movwf	i1___fladd@b+1
 19878     0E66                     i1l5323:
 19879     0E66  084D               	movf	i1___fladd@grs,w
 19880     0E67  00BF               	movwf	i1___fladd@a+1
 19881     0E68                     i1l5325:
 19882     0E68  083C               	movf	i1___fladd@b+2,w
 19883     0E69  00CD               	movwf	i1___fladd@grs
 19884     0E6A                     i1l5327:
 19885     0E6A  0840               	movf	i1___fladd@a+2,w
 19886     0E6B  00BC               	movwf	i1___fladd@b+2
 19887     0E6C                     i1l5329:
 19888     0E6C  084D               	movf	i1___fladd@grs,w
 19889     0E6D  00C0               	movwf	i1___fladd@a+2
 19890     0E6E                     i1l5331:
 19891     0E6E  083D               	movf	i1___fladd@b+3,w
 19892     0E6F  00CD               	movwf	i1___fladd@grs
 19893     0E70                     i1l5333:
 19894     0E70  0841               	movf	i1___fladd@a+3,w
 19895     0E71  00BD               	movwf	i1___fladd@b+3
 19896     0E72                     i1l5335:
 19897     0E72  084D               	movf	i1___fladd@grs,w
 19898     0E73  00C1               	movwf	i1___fladd@a+3
 19899     0E74                     i1l5337:
 19900     0E74  01CD               	clrf	i1___fladd@grs
 19901     0E75                     i1l5339:
 19902     0E75  084B               	movf	i1___fladd@aexp,w
 19903     0E76  00C2               	movwf	??i1___fladd
 19904     0E77  01C3               	clrf	??i1___fladd+1
 19905     0E78  0843               	movf	??i1___fladd+1,w
 19906     0E79  00C5               	movwf	??i1___fladd+3
 19907     0E7A  084C               	movf	i1___fladd@bexp,w
 19908     0E7B  0242               	subwf	??i1___fladd,w
 19909     0E7C  00C4               	movwf	??i1___fladd+2
 19910     0E7D  1C03               	skipc
 19911     0E7E  03C5               	decf	??i1___fladd+3,f
 19912     0E7F  0845               	movf	??i1___fladd+3,w
 19913     0E80  3A80               	xorlw	128
 19914     0E81  00C6               	movwf	??i1___fladd+4
 19915     0E82  3080               	movlw	128
 19916     0E83  0246               	subwf	??i1___fladd+4,w
 19917     0E84  1D03               	skipz
 19918     0E85  2E88               	goto	u637_25
 19919     0E86  301A               	movlw	26
 19920     0E87  0244               	subwf	??i1___fladd+2,w
 19921     0E88                     u637_25:
 19922     0E88  1C03               	skipc
 19923     0E89  2E8B               	goto	u637_21
 19924     0E8A  2E8C               	goto	u637_20
 19925     0E8B                     u637_21:
 19926     0E8B  2EC2               	goto	i1l5355
 19927     0E8C                     u637_20:
 19928     0E8C                     i1l5341:
 19929     0E8C  0020               	movlb	0	; select bank0
 19930     0E8D  083D               	movf	i1___fladd@b+3,w
 19931     0E8E  043C               	iorwf	i1___fladd@b+2,w
 19932     0E8F  043B               	iorwf	i1___fladd@b+1,w
 19933     0E90  043A               	iorwf	i1___fladd@b,w
 19934     0E91  1D03               	skipz
 19935     0E92  2E94               	goto	u638_21
 19936     0E93  2E96               	goto	u638_20
 19937     0E94                     u638_21:
 19938     0E94  3001               	movlw	1
 19939     0E95  2E97               	goto	u639_20
 19940     0E96                     u638_20:
 19941     0E96  3000               	movlw	0
 19942     0E97                     u639_20:
 19943     0E97  00CD               	movwf	i1___fladd@grs
 19944     0E98  3000               	movlw	0
 19945     0E99  00BD               	movwf	i1___fladd@b+3
 19946     0E9A  3000               	movlw	0
 19947     0E9B  00BC               	movwf	i1___fladd@b+2
 19948     0E9C  3000               	movlw	0
 19949     0E9D  00BB               	movwf	i1___fladd@b+1
 19950     0E9E  3000               	movlw	0
 19951     0E9F  00BA               	movwf	i1___fladd@b
 19952     0EA0  084B               	movf	i1___fladd@aexp,w
 19953     0EA1  00CC               	movwf	i1___fladd@bexp
 19954     0EA2  2EC9               	goto	i1l1486
 19955     0EA3                     i1l1488:
 19956     0EA3  1C4D               	btfss	i1___fladd@grs,0
 19957     0EA4  2EA6               	goto	u640_21
 19958     0EA5  2EA7               	goto	u640_20
 19959     0EA6                     u640_21:
 19960     0EA6  2EB1               	goto	i1l5345
 19961     0EA7                     u640_20:
 19962     0EA7                     i1l5343:
 19963     0EA7  084D               	movf	i1___fladd@grs,w
 19964     0EA8  00C2               	movwf	??i1___fladd
 19965     0EA9  3001               	movlw	1
 19966     0EAA                     u641_25:
 19967     0EAA  36C2               	lsrf	??i1___fladd,f
 19968     0EAB  0B89               	decfsz	9,f
 19969     0EAC  2EAA               	goto	u641_25
 19970     0EAD  0842               	movf	??i1___fladd,w
 19971     0EAE  3801               	iorlw	1
 19972     0EAF  00CD               	movwf	i1___fladd@grs
 19973     0EB0  2EB3               	goto	i1l5347
 19974     0EB1                     i1l5345:
 19975     0EB1  1003               	clrc
 19976     0EB2  0CCD               	rrf	i1___fladd@grs,f
 19977     0EB3                     i1l5347:
 19978     0EB3  1C3A               	btfss	i1___fladd@b,0
 19979     0EB4  2EB6               	goto	u642_21
 19980     0EB5  2EB7               	goto	u642_20
 19981     0EB6                     u642_21:
 19982     0EB6  2EB8               	goto	i1l5351
 19983     0EB7                     u642_20:
 19984     0EB7                     i1l5349:
 19985     0EB7  17CD               	bsf	i1___fladd@grs,7
 19986     0EB8                     i1l5351:
 19987     0EB8  3001               	movlw	1
 19988     0EB9  00C2               	movwf	??i1___fladd
 19989     0EBA                     u643_25:
 19990     0EBA  37BD               	asrf	i1___fladd@b+3,f
 19991     0EBB  0CBC               	rrf	i1___fladd@b+2,f
 19992     0EBC  0CBB               	rrf	i1___fladd@b+1,f
 19993     0EBD  0CBA               	rrf	i1___fladd@b,f
 19994     0EBE  0BC2               	decfsz	??i1___fladd& (0+127),f
 19995     0EBF  2EBA               	goto	u643_25
 19996     0EC0                     i1l5353:
 19997     0EC0  3001               	movlw	1
 19998     0EC1  07CC               	addwf	i1___fladd@bexp,f
 19999     0EC2                     i1l5355:
 20000     0EC2  0020               	movlb	0	; select bank0
 20001     0EC3  084B               	movf	i1___fladd@aexp,w
 20002     0EC4  024C               	subwf	i1___fladd@bexp,w
 20003     0EC5  1C03               	skipc
 20004     0EC6  2EC8               	goto	u644_21
 20005     0EC7  2EC9               	goto	u644_20
 20006     0EC8                     u644_21:
 20007     0EC8  2EA3               	goto	i1l1488
 20008     0EC9                     u644_20:
 20009     0EC9                     i1l1486:
 20010     0EC9  1B4A               	btfsc	i1___fladd@signs,6
 20011     0ECA  2ECC               	goto	u645_21
 20012     0ECB  2ECD               	goto	u645_20
 20013     0ECC                     u645_21:
 20014     0ECC  2F07               	goto	i1l5381
 20015     0ECD                     u645_20:
 20016     0ECD                     i1l5357:
 20017     0ECD  084C               	movf	i1___fladd@bexp,w
 20018     0ECE  1D03               	btfss	3,2
 20019     0ECF  2ED1               	goto	u646_21
 20020     0ED0  2ED2               	goto	u646_20
 20021     0ED1                     u646_21:
 20022     0ED1  2EDB               	goto	i1l5363
 20023     0ED2                     u646_20:
 20024     0ED2                     i1l5359:
 20025     0ED2  3000               	movlw	0
 20026     0ED3  00BD               	movwf	?i1___fladd+3
 20027     0ED4  3000               	movlw	0
 20028     0ED5  00BC               	movwf	?i1___fladd+2
 20029     0ED6  3000               	movlw	0
 20030     0ED7  00BB               	movwf	?i1___fladd+1
 20031     0ED8  3000               	movlw	0
 20032     0ED9  00BA               	movwf	?i1___fladd
 20033     0EDA  2FFF               	goto	i1l1495
 20034     0EDB                     i1l5363:
 20035     0EDB  083E               	movf	i1___fladd@a,w
 20036     0EDC  07BA               	addwf	i1___fladd@b,f
 20037     0EDD  083F               	movf	i1___fladd@a+1,w
 20038     0EDE  3DBB               	addwfc	i1___fladd@b+1,f
 20039     0EDF  0840               	movf	i1___fladd@a+2,w
 20040     0EE0  3DBC               	addwfc	i1___fladd@b+2,f
 20041     0EE1  0841               	movf	i1___fladd@a+3,w
 20042     0EE2  3DBD               	addwfc	i1___fladd@b+3,f
 20043     0EE3                     i1l5365:
 20044     0EE3  1C3D               	btfss	i1___fladd@b+3,0
 20045     0EE4  2EE6               	goto	u647_21
 20046     0EE5  2EE7               	goto	u647_20
 20047     0EE6                     u647_21:
 20048     0EE6  2F91               	goto	i1l5417
 20049     0EE7                     u647_20:
 20050     0EE7                     i1l5367:
 20051     0EE7  1C4D               	btfss	i1___fladd@grs,0
 20052     0EE8  2EEA               	goto	u648_21
 20053     0EE9  2EEB               	goto	u648_20
 20054     0EEA                     u648_21:
 20055     0EEA  2EF5               	goto	i1l5371
 20056     0EEB                     u648_20:
 20057     0EEB                     i1l5369:
 20058     0EEB  084D               	movf	i1___fladd@grs,w
 20059     0EEC  00C2               	movwf	??i1___fladd
 20060     0EED  3001               	movlw	1
 20061     0EEE                     u649_25:
 20062     0EEE  36C2               	lsrf	??i1___fladd,f
 20063     0EEF  0B89               	decfsz	9,f
 20064     0EF0  2EEE               	goto	u649_25
 20065     0EF1  0842               	movf	??i1___fladd,w
 20066     0EF2  3801               	iorlw	1
 20067     0EF3  00CD               	movwf	i1___fladd@grs
 20068     0EF4  2EF7               	goto	i1l5373
 20069     0EF5                     i1l5371:
 20070     0EF5  1003               	clrc
 20071     0EF6  0CCD               	rrf	i1___fladd@grs,f
 20072     0EF7                     i1l5373:
 20073     0EF7  1C3A               	btfss	i1___fladd@b,0
 20074     0EF8  2EFA               	goto	u650_21
 20075     0EF9  2EFB               	goto	u650_20
 20076     0EFA                     u650_21:
 20077     0EFA  2EFC               	goto	i1l5377
 20078     0EFB                     u650_20:
 20079     0EFB                     i1l5375:
 20080     0EFB  17CD               	bsf	i1___fladd@grs,7
 20081     0EFC                     i1l5377:
 20082     0EFC  3001               	movlw	1
 20083     0EFD  00C2               	movwf	??i1___fladd
 20084     0EFE                     u651_25:
 20085     0EFE  37BD               	asrf	i1___fladd@b+3,f
 20086     0EFF  0CBC               	rrf	i1___fladd@b+2,f
 20087     0F00  0CBB               	rrf	i1___fladd@b+1,f
 20088     0F01  0CBA               	rrf	i1___fladd@b,f
 20089     0F02  0BC2               	decfsz	??i1___fladd& (0+127),f
 20090     0F03  2EFE               	goto	u651_25
 20091     0F04                     i1l5379:
 20092     0F04  3001               	movlw	1
 20093     0F05  07CC               	addwf	i1___fladd@bexp,f
 20094     0F06  2F91               	goto	i1l5417
 20095     0F07                     i1l5381:
 20096     0F07  083D               	movf	i1___fladd@b+3,w
 20097     0F08  3A80               	xorlw	128
 20098     0F09  00C2               	movwf	??i1___fladd
 20099     0F0A  0841               	movf	i1___fladd@a+3,w
 20100     0F0B  3A80               	xorlw	128
 20101     0F0C  0242               	subwf	??i1___fladd,w
 20102     0F0D  1D03               	skipz
 20103     0F0E  2F19               	goto	u652_23
 20104     0F0F  0840               	movf	i1___fladd@a+2,w
 20105     0F10  023C               	subwf	i1___fladd@b+2,w
 20106     0F11  1D03               	skipz
 20107     0F12  2F19               	goto	u652_23
 20108     0F13  083F               	movf	i1___fladd@a+1,w
 20109     0F14  023B               	subwf	i1___fladd@b+1,w
 20110     0F15  1D03               	skipz
 20111     0F16  2F19               	goto	u652_23
 20112     0F17  083E               	movf	i1___fladd@a,w
 20113     0F18  023A               	subwf	i1___fladd@b,w
 20114     0F19                     u652_23:
 20115     0F19  1803               	skipnc
 20116     0F1A  2F1C               	goto	u652_21
 20117     0F1B  2F1D               	goto	u652_20
 20118     0F1C                     u652_21:
 20119     0F1C  2F52               	goto	i1l5393
 20120     0F1D                     u652_20:
 20121     0F1D                     i1l5383:
 20122     0F1D  30FF               	movlw	255
 20123     0F1E  00C2               	movwf	??i1___fladd
 20124     0F1F  30FF               	movlw	255
 20125     0F20  00C3               	movwf	??i1___fladd+1
 20126     0F21  30FF               	movlw	255
 20127     0F22  00C4               	movwf	??i1___fladd+2
 20128     0F23  30FF               	movlw	255
 20129     0F24  00C5               	movwf	??i1___fladd+3
 20130     0F25  083A               	movf	i1___fladd@b,w
 20131     0F26  023E               	subwf	i1___fladd@a,w
 20132     0F27  00C6               	movwf	??i1___fladd+4
 20133     0F28  083B               	movf	i1___fladd@b+1,w
 20134     0F29  3B3F               	subwfb	i1___fladd@a+1,w
 20135     0F2A  00C7               	movwf	??i1___fladd+5
 20136     0F2B  083C               	movf	i1___fladd@b+2,w
 20137     0F2C  3B40               	subwfb	i1___fladd@a+2,w
 20138     0F2D  00C8               	movwf	??i1___fladd+6
 20139     0F2E  083D               	movf	i1___fladd@b+3,w
 20140     0F2F  3B41               	subwfb	i1___fladd@a+3,w
 20141     0F30  00C9               	movwf	??i1___fladd+7
 20142     0F31  0846               	movf	??i1___fladd+4,w
 20143     0F32  07C2               	addwf	??i1___fladd,f
 20144     0F33  0847               	movf	??i1___fladd+5,w
 20145     0F34  3DC3               	addwfc	??i1___fladd+1,f
 20146     0F35  0848               	movf	??i1___fladd+6,w
 20147     0F36  3DC4               	addwfc	??i1___fladd+2,f
 20148     0F37  0849               	movf	??i1___fladd+7,w
 20149     0F38  3DC5               	addwfc	??i1___fladd+3,f
 20150     0F39  0845               	movf	??i1___fladd+3,w
 20151     0F3A  00BD               	movwf	i1___fladd@b+3
 20152     0F3B  0844               	movf	??i1___fladd+2,w
 20153     0F3C  00BC               	movwf	i1___fladd@b+2
 20154     0F3D  0843               	movf	??i1___fladd+1,w
 20155     0F3E  00BB               	movwf	i1___fladd@b+1
 20156     0F3F  0842               	movf	??i1___fladd,w
 20157     0F40  00BA               	movwf	i1___fladd@b
 20158     0F41                     i1l5385:
 20159     0F41  3080               	movlw	128
 20160     0F42  06CA               	xorwf	i1___fladd@signs,f
 20161     0F43                     i1l5387:
 20162     0F43  034D               	decf	i1___fladd@grs,w
 20163     0F44  3AFF               	xorlw	255
 20164     0F45  00CD               	movwf	i1___fladd@grs
 20165     0F46                     i1l5389:
 20166     0F46  084D               	movf	i1___fladd@grs,w
 20167     0F47  1D03               	btfss	3,2
 20168     0F48  2F4A               	goto	u653_21
 20169     0F49  2F4B               	goto	u653_20
 20170     0F4A                     u653_21:
 20171     0F4A  2F5A               	goto	i1l1503
 20172     0F4B                     u653_20:
 20173     0F4B                     i1l5391:
 20174     0F4B  3001               	movlw	1
 20175     0F4C  07BA               	addwf	i1___fladd@b,f
 20176     0F4D  3000               	movlw	0
 20177     0F4E  3DBB               	addwfc	i1___fladd@b+1,f
 20178     0F4F  3DBC               	addwfc	i1___fladd@b+2,f
 20179     0F50  3DBD               	addwfc	i1___fladd@b+3,f
 20180     0F51  2F5A               	goto	i1l1503
 20181     0F52                     i1l5393:
 20182     0F52  083E               	movf	i1___fladd@a,w
 20183     0F53  02BA               	subwf	i1___fladd@b,f
 20184     0F54  083F               	movf	i1___fladd@a+1,w
 20185     0F55  3BBB               	subwfb	i1___fladd@b+1,f
 20186     0F56  0840               	movf	i1___fladd@a+2,w
 20187     0F57  3BBC               	subwfb	i1___fladd@b+2,f
 20188     0F58  0841               	movf	i1___fladd@a+3,w
 20189     0F59  3BBD               	subwfb	i1___fladd@b+3,f
 20190     0F5A                     i1l1503:
 20191     0F5A  083D               	movf	i1___fladd@b+3,w
 20192     0F5B  043C               	iorwf	i1___fladd@b+2,w
 20193     0F5C  043B               	iorwf	i1___fladd@b+1,w
 20194     0F5D  043A               	iorwf	i1___fladd@b,w
 20195     0F5E  1D03               	skipz
 20196     0F5F  2F61               	goto	u654_21
 20197     0F60  2F62               	goto	u654_20
 20198     0F61                     u654_21:
 20199     0F61  2F8D               	goto	i1l5415
 20200     0F62                     u654_20:
 20201     0F62                     i1l5395:
 20202     0F62  084D               	movf	i1___fladd@grs,w
 20203     0F63  1D03               	btfss	3,2
 20204     0F64  2F66               	goto	u655_21
 20205     0F65  2F67               	goto	u655_20
 20206     0F66                     u655_21:
 20207     0F66  2F8D               	goto	i1l5415
 20208     0F67                     u655_20:
 20209     0F67                     i1l5397:
 20210     0F67  3000               	movlw	0
 20211     0F68  00BD               	movwf	?i1___fladd+3
 20212     0F69  3000               	movlw	0
 20213     0F6A  00BC               	movwf	?i1___fladd+2
 20214     0F6B  3000               	movlw	0
 20215     0F6C  00BB               	movwf	?i1___fladd+1
 20216     0F6D  3000               	movlw	0
 20217     0F6E  00BA               	movwf	?i1___fladd
 20218     0F6F  2FFF               	goto	i1l1495
 20219     0F70                     i1l5401:
 20220     0F70  3001               	movlw	1
 20221     0F71                     u656_25:
 20222     0F71  35BA               	lslf	i1___fladd@b,f
 20223     0F72  0DBB               	rlf	i1___fladd@b+1,f
 20224     0F73  0DBC               	rlf	i1___fladd@b+2,f
 20225     0F74  0DBD               	rlf	i1___fladd@b+3,f
 20226     0F75  0B89               	decfsz	9,f
 20227     0F76  2F71               	goto	u656_25
 20228     0F77                     i1l5403:
 20229     0F77  1FCD               	btfss	i1___fladd@grs,7
 20230     0F78  2F7A               	goto	u657_21
 20231     0F79  2F7B               	goto	u657_20
 20232     0F7A                     u657_21:
 20233     0F7A  2F7C               	goto	i1l1507
 20234     0F7B                     u657_20:
 20235     0F7B                     i1l5405:
 20236     0F7B  143A               	bsf	i1___fladd@b,0
 20237     0F7C                     i1l1507:
 20238     0F7C  1C4D               	btfss	i1___fladd@grs,0
 20239     0F7D  2F7F               	goto	u658_21
 20240     0F7E  2F80               	goto	u658_20
 20241     0F7F                     u658_21:
 20242     0F7F  2F84               	goto	i1l5409
 20243     0F80                     u658_20:
 20244     0F80                     i1l5407:
 20245     0F80  1403               	setc
 20246     0F81  0D4D               	rlf	i1___fladd@grs,w
 20247     0F82  00CD               	movwf	i1___fladd@grs
 20248     0F83  2F86               	goto	i1l5411
 20249     0F84                     i1l5409:
 20250     0F84  1003               	clrc
 20251     0F85  0DCD               	rlf	i1___fladd@grs,f
 20252     0F86                     i1l5411:
 20253     0F86  084C               	movf	i1___fladd@bexp,w
 20254     0F87  1903               	btfsc	3,2
 20255     0F88  2F8A               	goto	u659_21
 20256     0F89  2F8B               	goto	u659_20
 20257     0F8A                     u659_21:
 20258     0F8A  2F8D               	goto	i1l5415
 20259     0F8B                     u659_20:
 20260     0F8B                     i1l5413:
 20261     0F8B  3001               	movlw	1
 20262     0F8C  02CC               	subwf	i1___fladd@bexp,f
 20263     0F8D                     i1l5415:
 20264     0F8D  1FBC               	btfss	i1___fladd@b+2,7
 20265     0F8E  2F90               	goto	u660_21
 20266     0F8F  2F91               	goto	u660_20
 20267     0F90                     u660_21:
 20268     0F90  2F70               	goto	i1l5401
 20269     0F91                     u660_20:
 20270     0F91                     i1l5417:
 20271     0F91  01CB               	clrf	i1___fladd@aexp
 20272     0F92                     i1l5419:
 20273     0F92  1FCD               	btfss	i1___fladd@grs,7
 20274     0F93  2F95               	goto	u661_21
 20275     0F94  2F96               	goto	u661_20
 20276     0F95                     u661_21:
 20277     0F95  2FA4               	goto	i1l5427
 20278     0F96                     u661_20:
 20279     0F96                     i1l5421:
 20280     0F96  084D               	movf	i1___fladd@grs,w
 20281     0F97  397F               	andlw	127
 20282     0F98  1903               	btfsc	3,2
 20283     0F99  2F9B               	goto	u662_21
 20284     0F9A  2F9C               	goto	u662_20
 20285     0F9B                     u662_21:
 20286     0F9B  2F9F               	goto	i1l1513
 20287     0F9C                     u662_20:
 20288     0F9C                     i1l5423:
 20289     0F9C  3001               	movlw	1
 20290     0F9D  00CB               	movwf	i1___fladd@aexp
 20291     0F9E  2FA4               	goto	i1l5427
 20292     0F9F                     i1l1513:
 20293     0F9F  1C3A               	btfss	i1___fladd@b,0
 20294     0FA0  2FA2               	goto	u663_21
 20295     0FA1  2FA3               	goto	u663_20
 20296     0FA2                     u663_21:
 20297     0FA2  2FA4               	goto	i1l5427
 20298     0FA3                     u663_20:
 20299     0FA3  2F9C               	goto	i1l5423
 20300     0FA4                     i1l5427:
 20301     0FA4  084B               	movf	i1___fladd@aexp,w
 20302     0FA5  1903               	btfsc	3,2
 20303     0FA6  2FA8               	goto	u664_21
 20304     0FA7  2FA9               	goto	u664_20
 20305     0FA8                     u664_21:
 20306     0FA8  2FD2               	goto	i1l1516
 20307     0FA9                     u664_20:
 20308     0FA9                     i1l5429:
 20309     0FA9  3001               	movlw	1
 20310     0FAA  07BA               	addwf	i1___fladd@b,f
 20311     0FAB  3000               	movlw	0
 20312     0FAC  3DBB               	addwfc	i1___fladd@b+1,f
 20313     0FAD  3DBC               	addwfc	i1___fladd@b+2,f
 20314     0FAE  3DBD               	addwfc	i1___fladd@b+3,f
 20315     0FAF                     i1l5431:
 20316     0FAF  1C3D               	btfss	i1___fladd@b+3,0
 20317     0FB0  2FB2               	goto	u665_21
 20318     0FB1  2FB3               	goto	u665_20
 20319     0FB2                     u665_21:
 20320     0FB2  2FD2               	goto	i1l1516
 20321     0FB3                     u665_20:
 20322     0FB3                     i1l5433:
 20323     0FB3  083A               	movf	i1___fladd@b,w
 20324     0FB4  00C2               	movwf	??i1___fladd
 20325     0FB5  083B               	movf	i1___fladd@b+1,w
 20326     0FB6  00C3               	movwf	??i1___fladd+1
 20327     0FB7  083C               	movf	i1___fladd@b+2,w
 20328     0FB8  00C4               	movwf	??i1___fladd+2
 20329     0FB9  083D               	movf	i1___fladd@b+3,w
 20330     0FBA  00C5               	movwf	??i1___fladd+3
 20331     0FBB  3001               	movlw	1
 20332     0FBC  00C6               	movwf	??i1___fladd+4
 20333     0FBD                     u666_25:
 20334     0FBD  37C5               	asrf	??i1___fladd+3,f
 20335     0FBE  0CC4               	rrf	??i1___fladd+2,f
 20336     0FBF  0CC3               	rrf	??i1___fladd+1,f
 20337     0FC0  0CC2               	rrf	??i1___fladd,f
 20338     0FC1                     u666_20:
 20339     0FC1  0BC6               	decfsz	??i1___fladd+4,f
 20340     0FC2  2FBD               	goto	u666_25
 20341     0FC3  0845               	movf	??i1___fladd+3,w
 20342     0FC4  00BD               	movwf	i1___fladd@b+3
 20343     0FC5  0844               	movf	??i1___fladd+2,w
 20344     0FC6  00BC               	movwf	i1___fladd@b+2
 20345     0FC7  0843               	movf	??i1___fladd+1,w
 20346     0FC8  00BB               	movwf	i1___fladd@b+1
 20347     0FC9  0842               	movf	??i1___fladd,w
 20348     0FCA  00BA               	movwf	i1___fladd@b
 20349     0FCB  0A4C               	incf	i1___fladd@bexp,w
 20350     0FCC  1903               	btfsc	3,2
 20351     0FCD  2FCF               	goto	u667_21
 20352     0FCE  2FD0               	goto	u667_20
 20353     0FCF                     u667_21:
 20354     0FCF  2FD2               	goto	i1l1516
 20355     0FD0                     u667_20:
 20356     0FD0                     i1l5435:
 20357     0FD0  3001               	movlw	1
 20358     0FD1  07CC               	addwf	i1___fladd@bexp,f
 20359     0FD2                     i1l1516:
 20360     0FD2  0A4C               	incf	i1___fladd@bexp,w
 20361     0FD3  1903               	btfsc	3,2
 20362     0FD4  2FD6               	goto	u668_21
 20363     0FD5  2FD7               	goto	u668_20
 20364     0FD6                     u668_21:
 20365     0FD6  2FDC               	goto	i1l5439
 20366     0FD7                     u668_20:
 20367     0FD7                     i1l5437:
 20368     0FD7  084C               	movf	i1___fladd@bexp,w
 20369     0FD8  1D03               	btfss	3,2
 20370     0FD9  2FDB               	goto	u669_21
 20371     0FDA  2FDC               	goto	u669_20
 20372     0FDB                     u669_21:
 20373     0FDB  2FEA               	goto	i1l5445
 20374     0FDC                     u669_20:
 20375     0FDC                     i1l5439:
 20376     0FDC  3000               	movlw	0
 20377     0FDD  00BD               	movwf	i1___fladd@b+3
 20378     0FDE  3000               	movlw	0
 20379     0FDF  00BC               	movwf	i1___fladd@b+2
 20380     0FE0  3000               	movlw	0
 20381     0FE1  00BB               	movwf	i1___fladd@b+1
 20382     0FE2  3000               	movlw	0
 20383     0FE3  00BA               	movwf	i1___fladd@b
 20384     0FE4                     i1l5441:
 20385     0FE4  084C               	movf	i1___fladd@bexp,w
 20386     0FE5  1D03               	btfss	3,2
 20387     0FE6  2FE8               	goto	u670_21
 20388     0FE7  2FE9               	goto	u670_20
 20389     0FE8                     u670_21:
 20390     0FE8  2FEA               	goto	i1l5445
 20391     0FE9                     u670_20:
 20392     0FE9                     i1l5443:
 20393     0FE9  01CA               	clrf	i1___fladd@signs
 20394     0FEA                     i1l5445:
 20395     0FEA  1C4C               	btfss	i1___fladd@bexp,0
 20396     0FEB  2FED               	goto	u671_21
 20397     0FEC  2FEE               	goto	u671_20
 20398     0FED                     u671_21:
 20399     0FED  2FF0               	goto	i1l5449
 20400     0FEE                     u671_20:
 20401     0FEE                     i1l5447:
 20402     0FEE  17BC               	bsf	i1___fladd@b+2,7
 20403     0FEF  2FF2               	goto	i1l1524
 20404     0FF0                     i1l5449:
 20405     0FF0  307F               	movlw	127
 20406     0FF1  05BC               	andwf	i1___fladd@b+2,f
 20407     0FF2                     i1l1524:
 20408     0FF2  084C               	movf	i1___fladd@bexp,w
 20409     0FF3  00C2               	movwf	??i1___fladd
 20410     0FF4  3001               	movlw	1
 20411     0FF5                     u672_25:
 20412     0FF5  36C2               	lsrf	??i1___fladd,f
 20413     0FF6  0B89               	decfsz	9,f
 20414     0FF7  2FF5               	goto	u672_25
 20415     0FF8  0842               	movf	??i1___fladd,w
 20416     0FF9  00BD               	movwf	i1___fladd@b+3
 20417     0FFA                     i1l5451:
 20418     0FFA  1FCA               	btfss	i1___fladd@signs,7
 20419     0FFB  2FFD               	goto	u673_21
 20420     0FFC  2FFE               	goto	u673_20
 20421     0FFD                     u673_21:
 20422     0FFD  2FFF               	goto	i1l1525
 20423     0FFE                     u673_20:
 20424     0FFE                     i1l5453:
 20425     0FFE  17BD               	bsf	i1___fladd@b+3,7
 20426     0FFF                     i1l1525:
 20427     0FFF                     i1l1495:
 20428     0FFF  0008               	return
 20429     1000                     __end_ofi1___fladd:
 20430                           
 20431                           	psect	text83
 20432     1D9C                     __ptext83:	
 20433 ;; *************** function _pwm_fan_LoadDutyValue *****************
 20434 ;; Defined at:
 20435 ;;		line 63 in file "mcc_generated_files/pwm/src/pwm5.c"
 20436 ;; Parameters:    Size  Location     Type
 20437 ;;  dutyValue       2    0[COMMON] unsigned short 
 20438 ;; Auto vars:     Size  Location     Type
 20439 ;;		None
 20440 ;; Return value:  Size  Location     Type
 20441 ;;                  1    wreg      void 
 20442 ;; Registers used:
 20443 ;;		wreg, status,2, status,0
 20444 ;; Tracked objects:
 20445 ;;		On entry : 0/0
 20446 ;;		On exit  : 0/0
 20447 ;;		Unchanged: 0/0
 20448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20453 ;;Total ram usage:        4 bytes
 20454 ;; Hardware stack levels used: 1
 20455 ;; This function calls:
 20456 ;;		Nothing
 20457 ;; This function is called by:
 20458 ;;		_controller
 20459 ;; This function uses a non-reentrant model
 20460 ;;
 20461                           
 20462     1D9C                     _pwm_fan_LoadDutyValue:	
 20463                           ;psect for function _pwm_fan_LoadDutyValue
 20464                           
 20465     1D9C                     i1l4959:	
 20466                           ;incstack = 0
 20467                           ; Regs used in _pwm_fan_LoadDutyValue: [wreg+status,2+status,0]
 20468                           
 20469                           
 20470                           ;mcc_generated_files/pwm/src/pwm5.c: 63:  void pwm_fan_LoadDutyValue(uint16_t dutyValue)
      +                          ;mcc_generated_files/pwm/src/pwm5.c: 64:  {;mcc_generated_files/pwm/src/pwm5.c: 66:     
      +                           PWM5DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
 20471     1D9C  0871               	movf	pwm_fan_LoadDutyValue@dutyValue+1,w
 20472     1D9D  00F3               	movwf	??_pwm_fan_LoadDutyValue+1
 20473     1D9E  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20474     1D9F  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20475     1DA0  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20476     1DA1  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20477     1DA2  36F3               	lsrf	??_pwm_fan_LoadDutyValue+1,f
 20478     1DA3  0CF2               	rrf	??_pwm_fan_LoadDutyValue,f
 20479     1DA4  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20480     1DA5  002C               	movlb	12	; select bank12
 20481     1DA6  0098               	movwf	24	;volatile
 20482                           
 20483                           ;mcc_generated_files/pwm/src/pwm5.c: 69:      PWM5DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
 20484     1DA7  0870               	movf	pwm_fan_LoadDutyValue@dutyValue,w
 20485     1DA8  3903               	andlw	3
 20486     1DA9  00F2               	movwf	??_pwm_fan_LoadDutyValue
 20487     1DAA  3006               	movlw	6
 20488     1DAB                     u570_25:
 20489     1DAB  35F2               	lslf	??_pwm_fan_LoadDutyValue,f
 20490     1DAC  0B89               	decfsz	9,f
 20491     1DAD  2DAB               	goto	u570_25
 20492     1DAE  0872               	movf	??_pwm_fan_LoadDutyValue,w
 20493     1DAF  0097               	movwf	23	;volatile
 20494     1DB0                     i1l72:
 20495     1DB0  0008               	return
 20496     1DB1                     __end_of_pwm_fan_LoadDutyValue:
 20497                           
 20498                           	psect	text84
 20499     1CC6                     __ptext84:	
 20500 ;; *************** function _TMR2_ISR *****************
 20501 ;; Defined at:
 20502 ;;		line 114 in file "mcc_generated_files/timer/src/tmr2.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;		None
 20505 ;; Auto vars:     Size  Location     Type
 20506 ;;		None
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  1    wreg      void 
 20509 ;; Registers used:
 20510 ;;		wreg, status,2, status,0, pclath, cstack
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/0
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20520 ;;Total ram usage:        0 bytes
 20521 ;; Hardware stack levels used: 1
 20522 ;; Hardware stack levels required when called: 1
 20523 ;; This function calls:
 20524 ;;		NULL
 20525 ;;		_TMR2_DefaultPeriodMatchCallback
 20526 ;; This function is called by:
 20527 ;;		_INTERRUPT_InterruptManager
 20528 ;; This function uses a non-reentrant model
 20529 ;;
 20530                           
 20531     1CC6                     _TMR2_ISR:	
 20532                           ;psect for function _TMR2_ISR
 20533                           
 20534     1CC6                     i1l5985:	
 20535                           ;incstack = 0
 20536                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20537                           
 20538                           
 20539                           ;mcc_generated_files/timer/src/tmr2.c: 117:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
 20540     1CC6  0022               	movlb	2	; select bank2
 20541     1CC7  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20542     1CC8  0463               	iorwf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20543     1CC9  1903               	btfsc	3,2
 20544     1CCA  2CCC               	goto	u738_21
 20545     1CCB  2CCD               	goto	u738_20
 20546     1CCC                     u738_21:
 20547     1CCC  2CD2               	goto	i1l5989
 20548     1CCD                     u738_20:
 20549     1CCD                     i1l5987:
 20550                           
 20551                           ;mcc_generated_files/timer/src/tmr2.c: 118:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          119:         TMR2_PeriodMatchCallback();
 20552     1CCD  0863               	movf	(_TMR2_PeriodMatchCallback+1)^(0+256),w
 20553     1CCE  008A               	movwf	10
 20554     1CCF  0862               	movf	_TMR2_PeriodMatchCallback^(0+256),w
 20555     1CD0  000A               	callw
 20556     1CD1  319C               	pagesel	$
 20557     1CD2                     i1l5989:
 20558                           
 20559                           ;mcc_generated_files/timer/src/tmr2.c: 121:     PIR1bits.TMR2IF = 0;
 20560     1CD2  0020               	movlb	0	; select bank0
 20561     1CD3  1091               	bcf	17,1	;volatile
 20562     1CD4                     i1l414:
 20563     1CD4  0008               	return
 20564     1CD5                     __end_of_TMR2_ISR:
 20565                           
 20566                           	psect	text85
 20567     0002                     __ptext85:	
 20568 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
 20569 ;; Defined at:
 20570 ;;		line 129 in file "mcc_generated_files/timer/src/tmr2.c"
 20571 ;; Parameters:    Size  Location     Type
 20572 ;;		None
 20573 ;; Auto vars:     Size  Location     Type
 20574 ;;		None
 20575 ;; Return value:  Size  Location     Type
 20576 ;;                  1    wreg      void 
 20577 ;; Registers used:
 20578 ;;		None
 20579 ;; Tracked objects:
 20580 ;;		On entry : 0/0
 20581 ;;		On exit  : 0/0
 20582 ;;		Unchanged: 0/0
 20583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20588 ;;Total ram usage:        0 bytes
 20589 ;; Hardware stack levels used: 1
 20590 ;; This function calls:
 20591 ;;		Nothing
 20592 ;; This function is called by:
 20593 ;;		_TMR2_Initialize
 20594 ;;		_TMR2_ISR
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598     0002                     _TMR2_DefaultPeriodMatchCallback:	
 20599                           ;psect for function _TMR2_DefaultPeriodMatchCallback
 20600                           
 20601     0002                     i1l420:	
 20602                           ;incstack = 0
 20603                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
 20604                           
 20605     0002  0008               	return
 20606     0003                     __end_of_TMR2_DefaultPeriodMatchCallback:
 20607                           
 20608                           	psect	text86
 20609     1E10                     __ptext86:	
 20610 ;; *************** function _EUSART_TransmitISR *****************
 20611 ;; Defined at:
 20612 ;;		line 377 in file "mcc_generated_files/uart/src/eusart.c"
 20613 ;; Parameters:    Size  Location     Type
 20614 ;;		None
 20615 ;; Auto vars:     Size  Location     Type
 20616 ;;  tempTxTail      1    0[COMMON] unsigned char 
 20617 ;; Return value:  Size  Location     Type
 20618 ;;                  1    wreg      void 
 20619 ;; Registers used:
 20620 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20621 ;; Tracked objects:
 20622 ;;		On entry : 0/0
 20623 ;;		On exit  : 0/0
 20624 ;;		Unchanged: 0/0
 20625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20630 ;;Total ram usage:        1 bytes
 20631 ;; Hardware stack levels used: 1
 20632 ;; This function calls:
 20633 ;;		Nothing
 20634 ;; This function is called by:
 20635 ;;		_EUSART_Initialize
 20636 ;;		_INTERRUPT_InterruptManager
 20637 ;; This function uses a non-reentrant model
 20638 ;;
 20639                           
 20640     1E10                     _EUSART_TransmitISR:	
 20641                           ;psect for function _EUSART_TransmitISR
 20642                           
 20643     1E10                     i1l6051:	
 20644                           ;incstack = 0
 20645                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 20646                           
 20647                           
 20648                           ;mcc_generated_files/uart/src/eusart.c: 379:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 381:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 20649     1E10  3008               	movlw	8
 20650     1E11  0020               	movlb	0	; select bank0
 20651     1E12  0269               	subwf	_eusartTxBufferRemaining,w	;volatile
 20652     1E13  1803               	skipnc
 20653     1E14  2E16               	goto	u746_21
 20654     1E15  2E17               	goto	u746_20
 20655     1E16                     u746_21:
 20656     1E16  2E29               	goto	i1l727
 20657     1E17                     u746_20:
 20658     1E17                     i1l6053:
 20659                           
 20660                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:        TX1REG = eusartTxBuffer[eusartTxTail];
 20661     1E17  086A               	movf	_eusartTxTail,w
 20662     1E18  3E38               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 20663     1E19  0086               	movwf	6
 20664     1E1A  3001               	movlw	1	; select bank2/3
 20665     1E1B  0087               	movwf	7
 20666     1E1C  0801               	movf	1,w
 20667     1E1D  0023               	movlb	3	; select bank3
 20668     1E1E  009A               	movwf	26	;volatile
 20669     1E1F                     i1l6055:
 20670                           
 20671                           ;mcc_generated_files/uart/src/eusart.c: 384:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 20672     1E1F  0020               	movlb	0	; select bank0
 20673     1E20  086A               	movf	_eusartTxTail,w	;volatile
 20674     1E21  3E01               	addlw	1
 20675     1E22  3907               	andlw	7
 20676     1E23  00F0               	movwf	EUSART_TransmitISR@tempTxTail
 20677     1E24                     i1l6057:
 20678                           
 20679                           ;mcc_generated_files/uart/src/eusart.c: 386:        eusartTxTail = tempTxTail;
 20680     1E24  0870               	movf	EUSART_TransmitISR@tempTxTail,w
 20681     1E25  00EA               	movwf	_eusartTxTail	;volatile
 20682     1E26                     i1l6059:
 20683                           
 20684                           ;mcc_generated_files/uart/src/eusart.c: 387:        eusartTxBufferRemaining++;
 20685     1E26  3001               	movlw	1
 20686     1E27  07E9               	addwf	_eusartTxBufferRemaining,f	;volatile
 20687                           
 20688                           ;mcc_generated_files/uart/src/eusart.c: 388:     }
 20689     1E28  2E2B               	goto	i1l730
 20690     1E29                     i1l727:	
 20691                           ;mcc_generated_files/uart/src/eusart.c: 389:     else
 20692                           
 20693                           
 20694                           ;mcc_generated_files/uart/src/eusart.c: 390:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 391:         PIE1bits.TXIE = 0;
 20695     1E29  0021               	movlb	1	; select bank1
 20696     1E2A  1211               	bcf	17,4	;volatile
 20697     1E2B                     i1l730:
 20698     1E2B  0008               	return
 20699     1E2C                     __end_of_EUSART_TransmitISR:
 20700                           
 20701                           	psect	text87
 20702     1085                     __ptext87:	
 20703 ;; *************** function _EUSART_ReceiveISR *****************
 20704 ;; Defined at:
 20705 ;;		line 308 in file "mcc_generated_files/uart/src/eusart.c"
 20706 ;; Parameters:    Size  Location     Type
 20707 ;;		None
 20708 ;; Auto vars:     Size  Location     Type
 20709 ;;  tempRxHead      1    1[COMMON] unsigned char 
 20710 ;;  regValue        1    0[COMMON] unsigned char 
 20711 ;; Return value:  Size  Location     Type
 20712 ;;                  1    wreg      void 
 20713 ;; Registers used:
 20714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20715 ;; Tracked objects:
 20716 ;;		On entry : 0/0
 20717 ;;		On exit  : 0/0
 20718 ;;		Unchanged: 0/0
 20719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20724 ;;Total ram usage:        2 bytes
 20725 ;; Hardware stack levels used: 1
 20726 ;; Hardware stack levels required when called: 1
 20727 ;; This function calls:
 20728 ;;		NULL
 20729 ;;		_EUSART_DefaultFramingErrorCallback
 20730 ;;		_EUSART_DefaultOverrunErrorCallback
 20731 ;; This function is called by:
 20732 ;;		_EUSART_Initialize
 20733 ;;		_INTERRUPT_InterruptManager
 20734 ;; This function uses a non-reentrant model
 20735 ;;
 20736                           
 20737     1085                     _EUSART_ReceiveISR:	
 20738                           ;psect for function _EUSART_ReceiveISR
 20739                           
 20740     1085                     i1l6017:	
 20741                           ;incstack = 0
 20742                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20743                           
 20744                           
 20745                           ;mcc_generated_files/uart/src/eusart.c: 310:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 314: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 20746     1085  0020               	movlb	0	; select bank0
 20747     1086  3568               	lslf	_eusartRxHead,w	;volatile
 20748     1087  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20749     1088  0086               	movwf	6
 20750     1089  3001               	movlw	1	; select bank2/3
 20751     108A  0087               	movwf	7
 20752     108B  3000               	movlw	0
 20753     108C  3FC0               	movwi [0]fsr1
 20754     108D  3FC1               	movwi [1]fsr1
 20755     108E                     i1l6019:
 20756                           
 20757                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.OERR)
 20758     108E  0023               	movlb	3	; select bank3
 20759     108F  1C9D               	btfss	29,1	;volatile
 20760     1090  2892               	goto	u741_21
 20761     1091  2893               	goto	u741_20
 20762     1092                     u741_21:
 20763     1092  28A5               	goto	i1l6027
 20764     1093                     u741_20:
 20765     1093                     i1l6021:
 20766                           
 20767                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 20768     1093  0020               	movlb	0	; select bank0
 20769     1094  3568               	lslf	_eusartRxHead,w	;volatile
 20770     1095  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20771     1096  0086               	movwf	6
 20772     1097  3001               	movlw	1	; select bank2/3
 20773     1098  0087               	movwf	7
 20774     1099  1501               	bsf	1,2
 20775     109A                     i1l6023:
 20776                           
 20777                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 20778     109A  085D               	movf	_EUSART_OverrunErrorHandler,w
 20779     109B  045E               	iorwf	_EUSART_OverrunErrorHandler+1,w
 20780     109C  1903               	btfsc	3,2
 20781     109D  289F               	goto	u742_21
 20782     109E  28A0               	goto	u742_20
 20783     109F                     u742_21:
 20784     109F  28A5               	goto	i1l6027
 20785     10A0                     u742_20:
 20786     10A0                     i1l6025:
 20787                           
 20788                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_OverrunErrorHandler();
 20789     10A0  085E               	movf	_EUSART_OverrunErrorHandler+1,w
 20790     10A1  008A               	movwf	10
 20791     10A2  085D               	movf	_EUSART_OverrunErrorHandler,w
 20792     10A3  000A               	callw
 20793     10A4  3190               	pagesel	$
 20794     10A5                     i1l6027:
 20795                           
 20796                           ;mcc_generated_files/uart/src/eusart.c: 324:     if(1 == RC1STAbits.FERR)
 20797     10A5  0023               	movlb	3	; select bank3
 20798     10A6  1D1D               	btfss	29,2	;volatile
 20799     10A7  28A9               	goto	u743_21
 20800     10A8  28AA               	goto	u743_20
 20801     10A9                     u743_21:
 20802     10A9  28BC               	goto	i1l6035
 20803     10AA                     u743_20:
 20804     10AA                     i1l6029:
 20805                           
 20806                           ;mcc_generated_files/uart/src/eusart.c: 325:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 326:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 20807     10AA  0020               	movlb	0	; select bank0
 20808     10AB  3568               	lslf	_eusartRxHead,w	;volatile
 20809     10AC  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 20810     10AD  0086               	movwf	6
 20811     10AE  3001               	movlw	1	; select bank2/3
 20812     10AF  0087               	movwf	7
 20813     10B0  1481               	bsf	1,1
 20814     10B1                     i1l6031:
 20815                           
 20816                           ;mcc_generated_files/uart/src/eusart.c: 327:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 20817     10B1  085F               	movf	_EUSART_FramingErrorHandler,w
 20818     10B2  0460               	iorwf	_EUSART_FramingErrorHandler+1,w
 20819     10B3  1903               	btfsc	3,2
 20820     10B4  28B6               	goto	u744_21
 20821     10B5  28B7               	goto	u744_20
 20822     10B6                     u744_21:
 20823     10B6  28BC               	goto	i1l6035
 20824     10B7                     u744_20:
 20825     10B7                     i1l6033:
 20826                           
 20827                           ;mcc_generated_files/uart/src/eusart.c: 328:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 329:             EUSART_FramingErrorHandler();
 20828     10B7  0860               	movf	_EUSART_FramingErrorHandler+1,w
 20829     10B8  008A               	movwf	10
 20830     10B9  085F               	movf	_EUSART_FramingErrorHandler,w
 20831     10BA  000A               	callw
 20832     10BB  3190               	pagesel	$
 20833     10BC                     i1l6035:
 20834                           
 20835                           ;mcc_generated_files/uart/src/eusart.c: 333:     regValue = RC1REG;
 20836     10BC  0023               	movlb	3	; select bank3
 20837     10BD  0819               	movf	25,w	;volatile
 20838     10BE  00F0               	movwf	EUSART_ReceiveISR@regValue
 20839     10BF                     i1l6037:
 20840                           
 20841                           ;mcc_generated_files/uart/src/eusart.c: 335:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 20842     10BF  0020               	movlb	0	; select bank0
 20843     10C0  0868               	movf	_eusartRxHead,w	;volatile
 20844     10C1  3E01               	addlw	1
 20845     10C2  3907               	andlw	7
 20846     10C3  00F1               	movwf	EUSART_ReceiveISR@tempRxHead
 20847     10C4                     i1l6039:
 20848                           
 20849                           ;mcc_generated_files/uart/src/eusart.c: 336:     if (tempRxHead == eusartRxTail)
 20850     10C4  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20851     10C5  0667               	xorwf	_eusartRxTail,w	;volatile
 20852     10C6  1D03               	skipz
 20853     10C7  28C9               	goto	u745_21
 20854     10C8  28CA               	goto	u745_20
 20855     10C9                     u745_21:
 20856     10C9  28CB               	goto	i1l6043
 20857     10CA                     u745_20:
 20858     10CA  28D6               	goto	i1l717
 20859     10CB                     i1l6043:
 20860                           
 20861                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         eusartRxBuffer[eusartRxHead] = regValue;
 20862     10CB  0868               	movf	_eusartRxHead,w
 20863     10CC  3E30               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 20864     10CD  0086               	movwf	6
 20865     10CE  3001               	movlw	1	; select bank2/3
 20866     10CF  0087               	movwf	7
 20867     10D0  0870               	movf	EUSART_ReceiveISR@regValue,w
 20868     10D1  0081               	movwf	1
 20869     10D2                     i1l6045:
 20870                           
 20871                           ;mcc_generated_files/uart/src/eusart.c: 343:   eusartRxHead = tempRxHead;
 20872     10D2  0871               	movf	EUSART_ReceiveISR@tempRxHead,w
 20873     10D3  00E8               	movwf	_eusartRxHead	;volatile
 20874     10D4                     i1l6047:
 20875                           
 20876                           ;mcc_generated_files/uart/src/eusart.c: 344:   eusartRxCount++;
 20877     10D4  3001               	movlw	1
 20878     10D5  07E6               	addwf	_eusartRxCount,f	;volatile
 20879     10D6                     i1l717:
 20880     10D6  0008               	return
 20881     10D7                     __end_of_EUSART_ReceiveISR:
 20882                           
 20883                           	psect	text88
 20884     1BB3                     __ptext88:	
 20885 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 20886 ;; Defined at:
 20887 ;;		line 423 in file "mcc_generated_files/uart/src/eusart.c"
 20888 ;; Parameters:    Size  Location     Type
 20889 ;;		None
 20890 ;; Auto vars:     Size  Location     Type
 20891 ;;		None
 20892 ;; Return value:  Size  Location     Type
 20893 ;;                  1    wreg      void 
 20894 ;; Registers used:
 20895 ;;		None
 20896 ;; Tracked objects:
 20897 ;;		On entry : 0/0
 20898 ;;		On exit  : 0/0
 20899 ;;		Unchanged: 0/0
 20900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20905 ;;Total ram usage:        0 bytes
 20906 ;; Hardware stack levels used: 1
 20907 ;; This function calls:
 20908 ;;		Nothing
 20909 ;; This function is called by:
 20910 ;;		_EUSART_Initialize
 20911 ;;		_EUSART_ReceiveISR
 20912 ;; This function uses a non-reentrant model
 20913 ;;
 20914                           
 20915     1BB3                     _EUSART_DefaultOverrunErrorCallback:	
 20916                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 20917                           
 20918     1BB3                     i1l5791:	
 20919                           ;incstack = 0
 20920                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 20921                           
 20922                           
 20923                           ;mcc_generated_files/uart/src/eusart.c: 426:     RC1STAbits.CREN = 0;
 20924     1BB3  0023               	movlb	3	; select bank3
 20925     1BB4  121D               	bcf	29,4	;volatile
 20926                           
 20927                           ;mcc_generated_files/uart/src/eusart.c: 427:     RC1STAbits.CREN = 1;
 20928     1BB5  161D               	bsf	29,4	;volatile
 20929     1BB6                     i1l748:
 20930     1BB6  0008               	return
 20931     1BB7                     __end_of_EUSART_DefaultOverrunErrorCallback:
 20932                           
 20933                           	psect	text89
 20934     0800                     __ptext89:	
 20935 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 20936 ;; Defined at:
 20937 ;;		line 418 in file "mcc_generated_files/uart/src/eusart.c"
 20938 ;; Parameters:    Size  Location     Type
 20939 ;;		None
 20940 ;; Auto vars:     Size  Location     Type
 20941 ;;		None
 20942 ;; Return value:  Size  Location     Type
 20943 ;;                  1    wreg      void 
 20944 ;; Registers used:
 20945 ;;		None
 20946 ;; Tracked objects:
 20947 ;;		On entry : 0/0
 20948 ;;		On exit  : 0/0
 20949 ;;		Unchanged: 0/0
 20950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20955 ;;Total ram usage:        0 bytes
 20956 ;; Hardware stack levels used: 1
 20957 ;; This function calls:
 20958 ;;		Nothing
 20959 ;; This function is called by:
 20960 ;;		_EUSART_Initialize
 20961 ;;		_EUSART_ReceiveISR
 20962 ;; This function uses a non-reentrant model
 20963 ;;
 20964                           
 20965     0800                     _EUSART_DefaultFramingErrorCallback:	
 20966                           ;psect for function _EUSART_DefaultFramingErrorCallback
 20967                           
 20968     0800                     i1l745:	
 20969                           ;incstack = 0
 20970                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 20971                           
 20972     0800  0008               	return
 20973     0801                     __end_of_EUSART_DefaultFramingErrorCallback:
 20974                           
 20975                           	psect	text90
 20976     1CB7                     __ptext90:	
 20977 ;; *************** function _ADC_ISR *****************
 20978 ;; Defined at:
 20979 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 20980 ;; Parameters:    Size  Location     Type
 20981 ;;		None
 20982 ;; Auto vars:     Size  Location     Type
 20983 ;;		None
 20984 ;; Return value:  Size  Location     Type
 20985 ;;                  1    wreg      void 
 20986 ;; Registers used:
 20987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20988 ;; Tracked objects:
 20989 ;;		On entry : 0/0
 20990 ;;		On exit  : 0/0
 20991 ;;		Unchanged: 0/0
 20992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20997 ;;Total ram usage:        0 bytes
 20998 ;; Hardware stack levels used: 1
 20999 ;; Hardware stack levels required when called: 2
 21000 ;; This function calls:
 21001 ;;		NULL
 21002 ;;		_ADC_DefaultInterruptHandler
 21003 ;;		_adcConversionDoneHandler
 21004 ;; This function is called by:
 21005 ;;		_INTERRUPT_InterruptManager
 21006 ;; This function uses a non-reentrant model
 21007 ;;
 21008                           
 21009     1CB7                     _ADC_ISR:	
 21010                           ;psect for function _ADC_ISR
 21011                           
 21012     1CB7                     i1l5973:	
 21013                           ;incstack = 0
 21014                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21015                           
 21016                           
 21017                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 21018     1CB7  0020               	movlb	0	; select bank0
 21019     1CB8  1311               	bcf	17,6	;volatile
 21020     1CB9                     i1l5975:
 21021                           
 21022                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 21023     1CB9  0022               	movlb	2	; select bank2
 21024     1CBA  0866               	movf	_ADC_InterruptHandler^(0+256),w
 21025     1CBB  0467               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 21026     1CBC  1903               	btfsc	3,2
 21027     1CBD  2CBF               	goto	u736_21
 21028     1CBE  2CC0               	goto	u736_20
 21029     1CBF                     u736_21:
 21030     1CBF  2CC5               	goto	i1l52
 21031     1CC0                     u736_20:
 21032     1CC0                     i1l5977:
 21033                           
 21034                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 21035     1CC0  0867               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 21036     1CC1  008A               	movwf	10
 21037     1CC2  0866               	movf	_ADC_InterruptHandler^(0+256),w
 21038     1CC3  000A               	callw
 21039     1CC4  319C               	pagesel	$
 21040     1CC5                     i1l52:
 21041     1CC5  0008               	return
 21042     1CC6                     __end_of_ADC_ISR:
 21043                           
 21044                           	psect	text91
 21045     1BB2                     __ptext91:	
 21046 ;; *************** function _ADC_DefaultInterruptHandler *****************
 21047 ;; Defined at:
 21048 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 21049 ;; Parameters:    Size  Location     Type
 21050 ;;		None
 21051 ;; Auto vars:     Size  Location     Type
 21052 ;;		None
 21053 ;; Return value:  Size  Location     Type
 21054 ;;                  1    wreg      void 
 21055 ;; Registers used:
 21056 ;;		None
 21057 ;; Tracked objects:
 21058 ;;		On entry : 0/0
 21059 ;;		On exit  : 0/0
 21060 ;;		Unchanged: 0/0
 21061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21066 ;;Total ram usage:        0 bytes
 21067 ;; Hardware stack levels used: 1
 21068 ;; This function calls:
 21069 ;;		Nothing
 21070 ;; This function is called by:
 21071 ;;		_ADC_Initialize
 21072 ;;		_ADC_ISR
 21073 ;; This function uses a non-reentrant model
 21074 ;;
 21075                           
 21076     1BB2                     _ADC_DefaultInterruptHandler:	
 21077                           ;psect for function _ADC_DefaultInterruptHandler
 21078                           
 21079     1BB2                     i1l58:	
 21080                           ;incstack = 0
 21081                           ; Regs used in _ADC_DefaultInterruptHandler: []
 21082                           
 21083     1BB2  0008               	return
 21084     1BB3                     __end_of_ADC_DefaultInterruptHandler:
 21085                           
 21086                           	psect	text92
 21087     1F5C                     __ptext92:	
 21088 ;; *************** function _adcConversionDoneHandler *****************
 21089 ;; Defined at:
 21090 ;;		line 5 in file "adcMeasurements.c"
 21091 ;; Parameters:    Size  Location     Type
 21092 ;;		None
 21093 ;; Auto vars:     Size  Location     Type
 21094 ;;		None
 21095 ;; Return value:  Size  Location     Type
 21096 ;;                  1    wreg      void 
 21097 ;; Registers used:
 21098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21099 ;; Tracked objects:
 21100 ;;		On entry : 0/0
 21101 ;;		On exit  : 0/0
 21102 ;;		Unchanged: 0/0
 21103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21108 ;;Total ram usage:        2 bytes
 21109 ;; Hardware stack levels used: 1
 21110 ;; Hardware stack levels required when called: 1
 21111 ;; This function calls:
 21112 ;;		_ADC_GetConversionResult
 21113 ;;		i1_ADC_SelectChannel
 21114 ;; This function is called by:
 21115 ;;		_initAdcMultiplexer
 21116 ;;		_ADC_ISR
 21117 ;; This function uses a non-reentrant model
 21118 ;;
 21119                           
 21120     1F5C                     _adcConversionDoneHandler:	
 21121                           ;psect for function _adcConversionDoneHandler
 21122                           
 21123     1F5C                     i1l5793:	
 21124                           ;incstack = 0
 21125                           ; Regs used in _adcConversionDoneHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21126                           
 21127                           
 21128                           ;adcMeasurements.c: 10:     static adc_channel_t new_channel = potentiometer;;adcMeasure
      +                          ments.c: 11:     switch (new_channel) {
 21129     1F5C  2F73               	goto	i1l5805
 21130     1F5D                     i1l5795:
 21131                           
 21132                           ;adcMeasurements.c: 13:             ADC_potentiometer = ADC_GetConversionResult();
 21133     1F5D  319B  23BB  319F   	fcall	_ADC_GetConversionResult
 21134     1F60  0871               	movf	?_ADC_GetConversionResult+1,w
 21135     1F61  0020               	movlb	0	; select bank0
 21136     1F62  00DC               	movwf	_ADC_potentiometer+1	;volatile
 21137     1F63  0870               	movf	?_ADC_GetConversionResult,w
 21138     1F64  00DB               	movwf	_ADC_potentiometer	;volatile
 21139     1F65                     i1l5797:
 21140                           
 21141                           ;adcMeasurements.c: 14:             new_channel = hoogtesensor;
 21142     1F65  3012               	movlw	18
 21143     1F66  00EF               	movwf	adcConversionDoneHandler@new_channel
 21144                           
 21145                           ;adcMeasurements.c: 15:             break;
 21146     1F67  2F84               	goto	i1l5807
 21147     1F68                     i1l5799:
 21148                           
 21149                           ;adcMeasurements.c: 17:             ADC_hoogtesensor = ADC_GetConversionResult();
 21150     1F68  319B  23BB  319F   	fcall	_ADC_GetConversionResult
 21151     1F6B  0871               	movf	?_ADC_GetConversionResult+1,w
 21152     1F6C  0020               	movlb	0	; select bank0
 21153     1F6D  00DA               	movwf	_ADC_hoogtesensor+1	;volatile
 21154     1F6E  0870               	movf	?_ADC_GetConversionResult,w
 21155     1F6F  00D9               	movwf	_ADC_hoogtesensor	;volatile
 21156     1F70                     i1l5801:
 21157                           
 21158                           ;adcMeasurements.c: 18:             new_channel = potentiometer;
 21159     1F70  3010               	movlw	16
 21160     1F71  00EF               	movwf	adcConversionDoneHandler@new_channel
 21161                           
 21162                           ;adcMeasurements.c: 19:             break;
 21163     1F72  2F84               	goto	i1l5807
 21164     1F73                     i1l5805:
 21165     1F73  0020               	movlb	0	; select bank0
 21166     1F74  086F               	movf	adcConversionDoneHandler@new_channel,w
 21167     1F75  00F2               	movwf	??_adcConversionDoneHandler
 21168     1F76  01F3               	clrf	??_adcConversionDoneHandler+1
 21169                           
 21170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21171                           ; Switch size 1, requested type "simple"
 21172                           ; Number of cases is 1, Range of values is 0 to 0
 21173                           ; switch strategies available:
 21174                           ; Name         Instructions Cycles
 21175                           ; simple_byte            4     3 (average)
 21176                           ; direct_byte            8     6 (fixed)
 21177                           ; jumptable            260     6 (fixed)
 21178                           ;	Chosen strategy is simple_byte
 21179     1F77  0873               	movf	??_adcConversionDoneHandler+1,w
 21180     1F78  3A00               	xorlw	0	; case 0
 21181     1F79  1903               	skipnz
 21182     1F7A  2F7C               	goto	i1l6225
 21183     1F7B  2F84               	goto	i1l5807
 21184     1F7C                     i1l6225:
 21185                           
 21186                           ; Switch size 1, requested type "simple"
 21187                           ; Number of cases is 2, Range of values is 16 to 18
 21188                           ; switch strategies available:
 21189                           ; Name         Instructions Cycles
 21190                           ; simple_byte            7     4 (average)
 21191                           ; direct_byte           15     9 (fixed)
 21192                           ; jumptable            263     9 (fixed)
 21193                           ;	Chosen strategy is simple_byte
 21194     1F7C  0872               	movf	??_adcConversionDoneHandler,w
 21195     1F7D  3A10               	xorlw	16	; case 16
 21196     1F7E  1903               	skipnz
 21197     1F7F  2F5D               	goto	i1l5795
 21198     1F80  3A02               	xorlw	2	; case 18
 21199     1F81  1903               	skipnz
 21200     1F82  2F68               	goto	i1l5799
 21201     1F83  2F84               	goto	i1l5807
 21202     1F84                     i1l5807:
 21203                           
 21204                           ;adcMeasurements.c: 21:     ADC_SelectChannel(new_channel);
 21205     1F84  086F               	movf	adcConversionDoneHandler@new_channel,w
 21206     1F85  319C  245F  319F   	fcall	i1_ADC_SelectChannel
 21207     1F88                     i1l830:
 21208     1F88  0008               	return
 21209     1F89                     __end_of_adcConversionDoneHandler:
 21210                           
 21211                           	psect	text93
 21212     1C5F                     __ptext93:	
 21213 ;; *************** function i1_ADC_SelectChannel *****************
 21214 ;; Defined at:
 21215 ;;		line 82 in file "mcc_generated_files/adc/src/adc.c"
 21216 ;; Parameters:    Size  Location     Type
 21217 ;;  channel         1    wreg     enum E6663
 21218 ;; Auto vars:     Size  Location     Type
 21219 ;;  channel         1    1[COMMON] enum E6663
 21220 ;; Return value:  Size  Location     Type
 21221 ;;                  1    wreg      void 
 21222 ;; Registers used:
 21223 ;;		wreg, status,2, status,0
 21224 ;; Tracked objects:
 21225 ;;		On entry : 0/0
 21226 ;;		On exit  : 0/0
 21227 ;;		Unchanged: 0/0
 21228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21233 ;;Total ram usage:        2 bytes
 21234 ;; Hardware stack levels used: 1
 21235 ;; This function calls:
 21236 ;;		Nothing
 21237 ;; This function is called by:
 21238 ;;		_adcConversionDoneHandler
 21239 ;; This function uses a non-reentrant model
 21240 ;;
 21241                           
 21242     1C5F                     i1_ADC_SelectChannel:	
 21243                           ;psect for function i1_ADC_SelectChannel
 21244                           
 21245                           
 21246                           ;incstack = 0
 21247                           ; Regs used in i1_ADC_SelectChannel: [wreg+status,2+status,0]
 21248                           ;i1ADC_SelectChannel@channel stored from wreg
 21249     1C5F  00F1               	movwf	i1ADC_SelectChannel@channel
 21250     1C60                     i1l5217:
 21251                           
 21252                           ;mcc_generated_files/adc/src/adc.c: 82: void ADC_SelectChannel(adc_channel_t channel);mc
      +                          c_generated_files/adc/src/adc.c: 83: {;mcc_generated_files/adc/src/adc.c: 85:     ADCON0
      +                          bits.CHS = channel;
 21253     1C60  0871               	movf	i1ADC_SelectChannel@channel,w
 21254     1C61  00F0               	movwf	??i1_ADC_SelectChannel
 21255     1C62  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21256     1C63  0DF0               	rlf	??i1_ADC_SelectChannel,f
 21257     1C64  0021               	movlb	1	; select bank1
 21258     1C65  081D               	movf	29,w	;volatile
 21259     1C66  0670               	xorwf	??i1_ADC_SelectChannel,w
 21260     1C67  3903               	andlw	-253
 21261     1C68  0670               	xorwf	??i1_ADC_SelectChannel,w
 21262     1C69  009D               	movwf	29	;volatile
 21263     1C6A                     i1l30:
 21264     1C6A  0008               	return
 21265     1C6B                     __end_ofi1_ADC_SelectChannel:
 21266                           
 21267                           	psect	text94
 21268     1BBB                     __ptext94:	
 21269 ;; *************** function _ADC_GetConversionResult *****************
 21270 ;; Defined at:
 21271 ;;		line 100 in file "mcc_generated_files/adc/src/adc.c"
 21272 ;; Parameters:    Size  Location     Type
 21273 ;;		None
 21274 ;; Auto vars:     Size  Location     Type
 21275 ;;		None
 21276 ;; Return value:  Size  Location     Type
 21277 ;;                  2    0[COMMON] unsigned short 
 21278 ;; Registers used:
 21279 ;;		wreg
 21280 ;; Tracked objects:
 21281 ;;		On entry : 0/0
 21282 ;;		On exit  : 0/0
 21283 ;;		Unchanged: 0/0
 21284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21289 ;;Total ram usage:        2 bytes
 21290 ;; Hardware stack levels used: 1
 21291 ;; This function calls:
 21292 ;;		Nothing
 21293 ;; This function is called by:
 21294 ;;		_adcConversionDoneHandler
 21295 ;; This function uses a non-reentrant model
 21296 ;;
 21297                           
 21298     1BBB                     _ADC_GetConversionResult:	
 21299                           ;psect for function _ADC_GetConversionResult
 21300                           
 21301     1BBB                     i1l4955:	
 21302                           ;incstack = 0
 21303                           ; Regs used in _ADC_GetConversionResult: [wreg]
 21304                           
 21305                           
 21306                           ;mcc_generated_files/adc/src/adc.c: 103:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 21307     1BBB  0021               	movlb	1	; select bank1
 21308     1BBC  081C               	movf	28,w	;volatile
 21309     1BBD  00F1               	movwf	?_ADC_GetConversionResult+1
 21310     1BBE  081B               	movf	27,w	;volatile
 21311     1BBF  00F0               	movwf	?_ADC_GetConversionResult
 21312     1BC0                     i1l39:
 21313     1BC0  0008               	return
 21314     1BC1                     __end_of_ADC_GetConversionResult:
 21315     0002                     ___latbits      equ	2
 21316     007E                     btemp           set	126	;btemp
 21317     007E                     int$flags       set	126
 21318     007E                     wtemp0          set	126
 21319                           
 21320                           	psect	config
 21321                           
 21322                           ;Config register CONFIG1 @ 0x8007
 21323                           ;	FEXTOSC External Oscillator mode Selection bits
 21324                           ;	FEXTOSC = OFF, Oscillator not enabled
 21325                           ;	Power-up default value for COSC bits
 21326                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 21327                           ;	Clock Out Enable bit
 21328                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 21329                           ;	Clock Switch Enable bit
 21330                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21331                           ;	Fail-Safe Clock Monitor Enable
 21332                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 21333     8007                     	org	32775
 21334     8007  3F8C               	dw	16268
 21335                           
 21336                           ;Config register CONFIG2 @ 0x8008
 21337                           ;	Master Clear Enable bit
 21338                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 21339                           ;	Power-up Timer Enable bit
 21340                           ;	PWRTE = OFF, PWRT disabled
 21341                           ;	Watchdog Timer Enable bits
 21342                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 21343                           ;	Low-power BOR enable bit
 21344                           ;	LPBOREN = OFF, ULPBOR disabled
 21345                           ;	Brown-out Reset Enable bits
 21346                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 21347                           ;	Brown-out Reset Voltage selection bit
 21348                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 21349                           ;	PPSLOCK bit One-Way Set Enable bit
 21350                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 21351                           ;	Stack Overflow/Underflow Reset Enable bit
 21352                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 21353                           ;	Debugger enable bit
 21354                           ;	DEBUG = 0x1, unprogrammed default
 21355     8008                     	org	32776
 21356     8008  3FF3               	dw	16371
 21357                           
 21358                           ;Config register CONFIG3 @ 0x8009
 21359                           ;	User NVM self-write protection bits
 21360                           ;	WRT = OFF, Write protection off
 21361                           ;	Low Voltage Programming Enable bit
 21362                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 21363     8009                     	org	32777
 21364     8009  3FFF               	dw	16383
 21365                           
 21366                           ;Config register CONFIG4 @ 0x800A
 21367                           ;	User NVM Program Memory Code Protection bit
 21368                           ;	CP = OFF, User NVM code protection disabled
 21369                           ;	Data NVM Memory Code Protection bit
 21370                           ;	CPD = OFF, Data NVM code protection disabled
 21371     800A                     	org	32778
 21372     800A  3FFF               	dw	16383

Data Sizes:
    Strings     172
    Constant    86
    Data        12
    BSS         121
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      80
    BANK1            80     80      80
    BANK2            80     16      80
    BANK3            80      0      54
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), adcConversionDoneHandler(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    ledstrip$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    ledstrip$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    ledstrip$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    ledstrip$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    ledstrip$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    ledstrip$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    ledstrip$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    ledstrip$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    ledstrip$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    ledstrip$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    ledstrip$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    ledstrip$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    ledstrip$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    ledstrip$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S2063$buffer	PTR unsigned char  size(2) Largest target is 0

    S2063$source	PTR const unsigned char  size(2) Largest target is 0

    S223$4$0	PTR void  size(2) Largest target is 0

    S223$5$0	PTR void  size(2) Largest target is 0

    S223$6$0	PTR void  size(2) Largest target is 0

    S223SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S223SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S223SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S223SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S223SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S223SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S223SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S223SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S223SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S223SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S223SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S223SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S223SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S223SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$17$0	PTR FTN()void  size(2) Largest target is 0

    S975$18$0	PTR FTN()void  size(2) Largest target is 0

    S975$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S975$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S975$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S975$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S975$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S975$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S975$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S975$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S975$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S975$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S975$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S975$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S975$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S975$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S975$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S975$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S975$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S975$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S975$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S975$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S975$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__readLine	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    str2float@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> controller(), 

    TMR6_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultPeriodMatchCallback(), updateLedstripAnimation(), NULL(), 

    TMR6_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> updateLedstripAnimation(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uartHandler@str	PTR unsigned char  size(1) Largest target is 20
		 -> line(BANK3[20]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[8]), STR_10(CODE[13]), STR_11(CODE[13]), STR_12(CODE[15]), 
		 -> STR_13(CODE[17]), STR_2(CODE[24]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[7]), STR_7(CODE[7]), STR_8(CODE[3]), 
		 -> STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _controller->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___flmul->i1___xxtofl
    i1___fladd->i1___xxtofl
    _ADC_ISR->_adcConversionDoneHandler
    _adcConversionDoneHandler->_ADC_GetConversionResult
    _adcConversionDoneHandler->i1_ADC_SelectChannel

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_ISR->_controller
    _controller->i1___fladd
    i1___fltol->i1___flmul
    i1___fladd->i1___flmul

Critical Paths under _main in BANK1

    _uartHandler->_str2float
    _str2float->___flmul
    _setSetpoint->_atoi
    _setKp->_str2float
    _setKi->_str2float
    _readLine->_printf
    _atoi->___wmul
    _printLogs->_printFloat
    _printFloat->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    ___flsub->___fladd
    _initLedstrip->_SPI1_Open
    _SPI1_Open->___wmul
    _initAdcMultiplexer->_ADC_SelectChannel
    _initAdcMultiplexer->_ADC_SetInterruptHandler
    _position_led_strip->_getLedNumber
    _sendLedstripStartFrame->_SPI1_ByteExchange
    _sendLedstripFrame->_SPI1_ByteExchange
    _sendLedstripEndFrame->_SPI1_ByteExchange
    _getLedNumber->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    ___fladd->___xxtofl
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _uartHandler->_setKi
    _uartHandler->_setKp
    _printLogs->_printFloat
    _updateLedstripAnimation->_position_led_strip
    _position_led_strip->_getLedNumber

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   35426
                                             12 BANK2      4     4      0
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR6_Tasks
                   _getPotentiometer
                 _initAdcMultiplexer
                       _initLedstrip
                          _printLogs
                        _uartHandler
 ---------------------------------------------------------------------------------
 (1) _uartHandler                                          1     1      0   15822
                                              4 BANK2      1     1      0
                               _atoi
                             _printf
                           _readLine
                              _setKi
                              _setKp
                        _setSetpoint
                          _str2float
 ---------------------------------------------------------------------------------
 (2) _str2float                                           12     8      4    5363
                                             68 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1123
                                              0 BANK1     26    18      8
 ---------------------------------------------------------------------------------
 (2) _setSetpoint                                          2     0      2      23
                                             13 BANK1      2     0      2
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKp                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _setKi                                                4     0      4      23
                                              0 BANK2      4     0      4
                          _str2float (ARG)
 ---------------------------------------------------------------------------------
 (2) _readLine                                             3     1      2    4995
                                             71 BANK1      3     1      2
                   _EUSART_IsRxReady
                        _EUSART_Read
                             _printf
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      47
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 7     5      2     336
                                              6 BANK1      7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _printLogs                                            0     0      0   14229
                       _getDutycycle
                    _getHoogtesensor
                              _getKi
                              _getKp
                        _getSetpoint
                         _printFloat
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printFloat                                           9     5      4    9281
                                             78 BANK1      2     2      0
                                              0 BANK2      7     3      4
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _getKi (ARG)
                              _getKp (ARG)
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    4948
                                             64 BANK1      7     1      6
                               _atoi (ARG)
                       _getDutycycle (ARG)
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     3      5    4877
                                             56 BANK1      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    12      4    4741
                                             41 BANK1     15    11      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                10     6      4    1522
                                             28 BANK1     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     161
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     166
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   8     6      2     288
                                              6 BANK1      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    2022
                                             28 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5     944
                                             20 BANK1      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     5      3     430
                                             12 BANK1      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     329
                                              3 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      97
                                              2 BANK1      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (11) _EUSART_Write                                        2     1      1      68
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (11) _EUSART_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2037
                                             34 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getKp                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getKi                                                4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _getDutycycle                                         2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLedstrip                                         0     0      0     227
                          _SPI1_Open
   _TMR6_PeriodMatchCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR6_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     204
                                              6 BANK1      3     2      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     106
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initAdcMultiplexer                                   0     0      0      53
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      29
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _getPotentiometer                                     2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_Tasks                                           0     0      0    4868
                                NULL *
    _TMR6_DefaultPeriodMatchCallback *
            _updateLedstripAnimation *
 ---------------------------------------------------------------------------------
 (2) _updateLedstripAnimation                              0     0      0    4868
                 _position_led_strip
 ---------------------------------------------------------------------------------
 (3) _position_led_strip                                   8     8      0    4868
                                              4 BANK2      8     8      0
                    _getHoogtesensor
                       _getLedNumber
                        _getSetpoint
               _sendLedstripEndFrame
                  _sendLedstripFrame
             _sendLedstripStartFrame
 ---------------------------------------------------------------------------------
 (4) _sendLedstripStartFrame                               0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripFrame                                    4     1      3     156
                                              1 BANK1      4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _sendLedstripEndFrame                                 0     0      0      34
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    1     0      1      34
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _getSetpoint                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _getLedNumber                                         6     4      2    4219
                                             78 BANK1      2     0      2
                                              0 BANK2      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _getHoogtesensor (ARG)
                        _getSetpoint (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     339
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     232
                                             68 BANK1     10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    1611
                                             42 BANK1     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1990
                                             14 BANK1     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getHoogtesensor                                      2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR6_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     137
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                 _pwm_fan_Initialize
 ---------------------------------------------------------------------------------
 (2) _pwm_fan_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0      90
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      24
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADC_SetInterruptHandler                              2     0      2      24
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0    4466
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            0     0      0    4346
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                         _controller *
 ---------------------------------------------------------------------------------
 (14) _controller                                          7     7      0    4346
                                             46 BANK0      7     7      0
              _pwm_fan_LoadDutyValue
                          i1___fladd
                          i1___flmul
                          i1___fltol
                         i1___xxtofl
                  i1_getHoogtesensor
 ---------------------------------------------------------------------------------
 (15) i1_getHoogtesensor                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (15) i1___xxtofl                                         14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (15) i1___fltol                                          10     6      4     231
                                             26 BANK0     10     6      4
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          26    18      8    1611
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) i1__Umul8_16                                         9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) i1___fladd                                          20    12      8    1986
                                             26 BANK0     20    12      8
                          i1___flmul (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (15) _pwm_fan_LoadDutyValue                               4     2      2      45
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0      29
                                NULL *
        _ADC_DefaultInterruptHandler *
           _adcConversionDoneHandler *
 ---------------------------------------------------------------------------------
 (14) _adcConversionDoneHandler                            2     2      0      29
                                              2 COMMON     2     2      0
            _ADC_GetConversionResult
                i1_ADC_SelectChannel
 ---------------------------------------------------------------------------------
 (15) i1_ADC_SelectChannel                                 2     2      0      29
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _pwm_fan_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR6_Tasks
     NULL(Fake) *
     _TMR6_DefaultPeriodMatchCallback *
     _updateLedstripAnimation *
       _position_led_strip
         _getHoogtesensor
         _getLedNumber
           ___fladd
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
             ___flsub (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _getHoogtesensor (ARG)
           _getSetpoint (ARG)
         _getSetpoint
         _sendLedstripEndFrame
           _SPI1_ByteExchange
         _sendLedstripFrame
           _SPI1_ByteExchange
         _sendLedstripStartFrame
           _SPI1_ByteExchange
   _getPotentiometer
   _initAdcMultiplexer
     _ADC_SelectChannel
     _ADC_SetInterruptHandler
   _initLedstrip
     _SPI1_Open
       ___wmul
     _TMR6_PeriodMatchCallbackRegister
   _printLogs
     _getDutycycle
     _getHoogtesensor
     _getKi
     _getKp
     _getSetpoint
     _printFloat
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _getKi (ARG)
       _getKp (ARG)
       _printf (ARG)
         _atoi (ARG)
           ___wmul
         _getDutycycle (ARG)
         _getHoogtesensor (ARG)
         _getSetpoint (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART_IsTxReady
                     _EUSART_Write
                 _fputs
                   _fputc
             _fputc
             _read_prec_or_width
               ___wmul
             _utoa
               ___lwdiv
               ___lwmod
               _pad
     _printf
   _uartHandler
     _atoi
     _printf
     _readLine
       _EUSART_IsRxReady
       _EUSART_Read
       _printf
     _setKi
       _str2float (ARG)
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
     _setKp
       _str2float (ARG)
     _setSetpoint
       _atoi (ARG)
     _str2float

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _adcConversionDoneHandler *
       _ADC_GetConversionResult
       i1_ADC_SelectChannel
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
   _EUSART_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _controller *
       _pwm_fan_LoadDutyValue
       i1___fladd
         i1___flmul (ARG)
           i1__Umul8_16
           i1___xxtofl (ARG)
         i1___xxtofl (ARG)
       i1___flmul
       i1___fltol
         i1___flmul (ARG)
         i1___xxtofl (ARG)
       i1___xxtofl
       i1_getHoogtesensor

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     53      80    100.0%
BANK1               80     80      80    100.0%
BANK2               80     16      80    100.0%
BANK3               80      0      54     67.5%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     308      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Feb 19 14:22:49 2025

           __end_of_TMR4_DefaultPeriodMatchCallback 0004                   ??_TMR4_DefaultPeriodMatchCallback 0070  
                  ?_TMR4_DefaultPeriodMatchCallback 0070                     _TMR4_DefaultPeriodMatchCallback 0003  
                                 _SPI1_ByteExchange 1C8F                          __end_of_pwm_fan_Initialize 1C83  
                                      ___fldiv@aexp 00B9                                        ___fldiv@bexp 00B8  
                                       i1___fladd@a 003E                                         i1___fladd@b 003A  
                                      ___fldiv@sign 00B1                                                  l30 1C8E  
                                                l27 1DDB                                                  l55 1BDD  
                                                l69 1C82                                  ?_SPI1_ByteExchange 00A0  
                                      ___awdiv@sign 00A5         __end_of_EUSART_OverrunErrorCallbackRegister 1D02  
             ??_EUSART_OverrunErrorCallbackRegister 00A2                ?_EUSART_OverrunErrorCallbackRegister 00A0  
               _EUSART_OverrunErrorCallbackRegister 1CF3                                         i1___flmul@a 0024  
                                                _ki 0168                                         i1___flmul@b 0020  
                                                _kp 016C                                 ___wmul@multiplicand 00A2  
                               __Umul8_16@word_mpld 00A6                                          i1___xxtofl 160C  
                                               l213 1C76                                                 l119 1C4A  
                                               l127 1498                                                 l240 1BEF  
                                               l160 1C93                                                 l162 1C98  
                                               l163 1C9B                                                 l335 1FFF  
                                               l361 1E68                                                 l258 1BE6  
                                               l380 1D31                                                 l525 1C1C  
                                               l439 1D42                                                 l528 07FF  
                                               l721 1F59                                                 l801 1157  
                                               l539 1D9B                                                 l707 1EC8  
                                               l476 1BF8                                                 l724 1F5B  
                                               l804 1161                                                 l638 103C  
                                               l742 1D75                                                 l807 116B  
                                               l752 1CF2                                                 l920 092D  
                                               l833 1CA8                                                 l905 087F  
                                               l498 1D10                                                 l756 1D01  
                                               l836 1C13                                                 l950 1C25  
                                               l870 160B                                                 l694 1C37  
                                               l839 1C01                                                 l953 1D64  
                                               l697 1C2E                                                 l947 1C0A  
                                               l956 1D53                                                 l892 1181  
                                               l965 1C5E                                                 l894 11D9  
                                               l878 17C8                                                 l983 1DC5  
                                               l959 1C40                                                 l887 17FF  
                                               l992 1234                                                 l968 1C54  
                                               l986 1DF4                                                 l989 1E0F  
                                               _PR2 001E                                                 _PR4 0416  
                                               _PR6 041D                                                 _abs 1D76  
                                               _pad 103D                                     __end_of_ADC_ISR 1CC6  
                                      i1___fltol@f1 003A                     __end_of_ADC_SetInterruptHandler 1BDE  
                               ??_SPI1_ByteExchange 00A1                                        ___awmod@sign 00A5  
                                   _TMR2_Initialize 1D21                        __end_of_sendLedstripEndFrame 1DF5  
                                               wreg 0009                                       i1___fladd@grs 004D  
                                      ___flmul@aexp 00DC                                        ___flmul@bexp 00DD  
                      ?_ADC_DefaultInterruptHandler 0070                                        ___flmul@sign 00D7  
                                      ___flmul@temp 00E2                                        ___flmul@prod 00DE  
                               i1_ADC_SelectChannel 1C5F                                        ?_EUSART_Read 0070  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 00ED  
                                              l1023 0C4F                                                l1026 1BBA  
                                              ?_abs 00A6                                                l1029 1CB6  
                                              l1181 1E74                                                l1334 1290  
                                              l1503 066A                                                l1183 1E88  
                                              l1513 06AF                                                l1507 068C  
                                              l1347 1128                                                l1524 0702  
                                              l1516 06E2                                                l1540 0DF3  
                                              l1525 070F                                                l4101 1C26  
                                              l1701 07C3                                                l1461 07FE  
                                              l1382 1413                                                l1622 16D3  
                                              l1375 1428                                                l1623 16E4  
                                              l4111 1F43                                                l1471 1FBB  
                                              l1711 150C                                                l1624 1754  
                                              l1528 1EA8                                                l1560 0DDD  
                                              l1385 1428                                                l5001 0B39  
                                              l4201 127C                                                l4113 1F4B  
                                              l4105 1F34                                                l4121 1D67  
                                              l1482 055A                                                l1562 0DE8  
                                              l1554 0D79                                                l1538 0C9F  
                                              l1635 1720                                                l5011 0B65  
                                              l5003 0B4C                                                l4203 1282  
                                              l4211 10D7                                                l4115 1F51  
                                              l4107 1F39                                                l4123 1D67  
                                              l4131 12F4                                                l1636 172C  
                                              l1660 1D20                                                l5013 0B78  
                                              l5005 0B50                                                l4205 1287  
                                              l4221 10E8                                                l4213 10D9  
                                              l4117 1F54                                                l4109 1F3D  
                                              l4125 1D6F                                                l4141 1340  
                                              l4133 12FA                                                l4301 104C  
                                              l1653 1585                                                l5101 0C7D  
                                              l1486 05D9                                                l1590 02BE  
                                              l1734 0A30                                                l1726 0955  
                                              l1495 070F                                                l5031 0B96  
                                              l5015 0B7C                                                l5007 0B53  
                                              l4207 128C                                                l4231 10FD  
                                              l4223 10ED                                                l4215 10DD  
                                              l4119 1F56                                                l4135 12FF  
                                              l4151 1F27                                                l4311 107A  
                                              l4303 1051                                                l1719 12EC  
                                              l1559 0DC3                                                l5111 0C94  
                                              l5103 0C81                                                l1488 05B3  
                                              l1584 0246                                                l1680 1053  
                                              l1728 0961                                                l6001 1E5C  
                                              l4321 1EEE                                                l5041 0BE5  
                                              l5033 0BAB                                                l5025 0B83  
                                              l5017 0B7E                                                l5009 0B60  
                                              l4161 1E7E                                                l4153 1E69  
                                              l4233 1101                                                l4225 10F3  
                                              l4241 111A                                                l4217 10E2  
                                              l1753 1D87                                                l4313 1D76  
                                              l4137 130A                                                l4129 12ED  
                                              l4145 1F10                                                l4305 1056  
                                              l4401 14E6                                                l5201 0DD1  
                                              l5121 0CB5                                                l5113 0C95  
                                              l5105 0C82                                                l1578 02C8  
                                              l1746 1E49                                                l6003 1E5F  
                                              l4331 1F0B                                                l4323 1EF0  
                                              l5051 0C16                                                l5043 0BF2  
                                              l5035 0BC0                                                l5027 0B8D  
                                              l5019 0B81                                                l6011 1D8D  
                                              l4163 1E84                                                l4155 1E6C  
                                              l4171 123B                                                l4243 111F  
                                              l4235 110B                                                l4227 10F6  
                                              l4219 10E4                                                l4315 1D7B  
                                              l4139 132A                                                l4147 1F14  
                                              l1683 1075                                                l4307 1062  
                                              l4411 1291                                                l4251 07C7  
                                              l4403 14EB                                                l5211 0DE6  
                                              l5203 0DD4                                                l5131 0CCC  
                                              l5107 0C87                                                l5115 0C97  
                                              l1692 0739                                                l6005 1E65  
                                              l4501 053C                                                l1597 1EFF  
                                              l4325 1EF7                                                l5061 0C39  
                                              l5045 0BFC                                                l5037 0BCB  
                                              l5029 0B90                                                l6013 1D94  
                                              l4157 1E70                                                l4181 124D  
                                              l4173 1240                                                l4245 1124  
                                              l4237 110F                                                l4229 10FB  
                                              l4317 1D7C                                                l1765 134A  
                                              l1773 1F33                                                l4149 1F22  
                                              l1685 1084                                                l4309 1067  
                                              l4341 0727                                                l4421 12CC  
                                              l4413 1294                                                l4261 07DB  
                                              l4253 07CD                                                l4405 14F8  
                                              l5205 0DDC                                                l5141 0CF6  
                                              l5133 0CDC                                                l5117 0CA7  
                                              l5125 0CBE                                                l5109 0C8C  
                                              l6007 1BF0                                                l4511 0550  
                                              l4503 053D                                                l1599 1F0F  
                                              l4327 1EFB                                                l4431 1C99  
                                              l5055 0C22                                                l5047 0C05  
                                              l5039 0BD9                                                l6015 1D99  
                                              l4159 1E79                                                l5071 1E89  
                                              l4191 125F                                                l4183 124F  
                                              l4175 1242                                                l4167 1235  
                                              l4239 1114                                                l4351 0742  
                                              l4343 072B                                                l4335 0710  
                                              l4415 12A5                                                l4423 12D4  
                                              l4263 07EA                                                l4255 07D0  
                                              l4271 07FA                                                l4407 14FD  
                                              l5207 0DE0                                                l5143 0CFB  
                                              l5151 0D15                                                l5135 0CE4  
                                              l5127 0CC3                                                l5119 0CB3  
                                              l1688 073B                                                l4601 0656  
                                              l4521 0568                                                l4505 0542  
                                              l4513 0552                                                l4329 1F06  
                                              l4441 13CD                                                l5057 0C2F  
                                              l5065 0C43                                                l5049 0C08  
                                              l6009 1D88                                                l5073 1E8C  
                                              l4193 1263                                                l4185 1255  
                                              l4177 1246                                                l4169 1237  
                                              l4353 0747                                                l4361 0778  
                                              l4345 0730                                                l4337 0713  
                                              l4425 12E8                                                l4417 12AD  
                                              l4265 07EE                                                l4257 07D5  
                                              l4249 07C4                                                l4281 1F98  
                                              l5209 0DE4                                                l5161 0D38  
                                              l5153 0D27                                                l5145 0D09  
                                              l5137 0CEC                                                l5081 0C56  
                                              l4603 065B                                                l4531 0572  
                                              l4523 056A                                                l4515 0560  
                                              l4507 0547                                                l4451 13ED  
                                              l4443 13DE                                                l4435 13BA  
                                              l5067 0C46                                                l4195 1272  
                                              l4187 1258                                                l4179 124B  
                                              l4363 0786                                                l4371 07A4  
                                              l4355 0763                                                l4347 0735  
                                              l4339 0722                                                l4419 12BA  
                                              l4267 07EF                                                l4259 07D7  
                                              l4291 1FB1                                                l4283 1F9A  
                                              l4275 1F89                                                l5171 0D4E  
                                              l5163 0D40                                                l5155 0D28  
                                              l5147 0D0D                                                l5139 0CF4  
                                              l5091 0C6D                                                l5083 0C5A  
                                              l4621 0694                                                l4613 0680  
                                              l4605 0662                                                l4541 057C  
                                              l4533 0574                                                l4525 056C  
                                              l4517 0564                                                l4509 054F  
                                              l4701 00D3                                                l4445 13DF  
                                              l4437 13C4                                                l4429 1C8F  
                                              l5069 0C4C                                                l4197 1276  
                                              l4189 125D                                                l4373 07AA  
                                              l4365 078D                                                l4357 0764  
                                              l4349 073F                                                l4269 07F4  
                                              l4285 1F9E                                                l4277 1F90  
                                              l4293 1FB7                                                l4381 1499  
                                              l5181 0D62                                                l5173 0D55  
                                              l5165 0D42                                                l5157 0D30  
                                              l5149 0D0E                                                l5093 0C6E  
                                              l5085 0C5B                                                l5077 0C50  
                                              ?_pad 00B4                                                l4631 06A2  
                                              l4623 0696                                                l4615 0687  
                                              l4607 0672                                                l4551 0585  
                                              l4543 057E                                                l4535 0576  
                                              l4527 056E                                                l4519 0566  
                                              l4471 0504                                                l4711 00EE  
                                              l4703 00DB                                                l4447 13E7  
                                              l6063 1C9C                                                l4199 1277  
                                              l4375 07AE                                                l4367 0792  
                                              l4359 0768                                                l4287 1FA8  
                                              l4279 1F93                                                l4391 14C4  
                                              l4383 149C                                                l5191 0D89  
                                              l5183 0D76                                                l5167 0D49  
                                              l5175 0D59                                                l5159 0D32  
                                              l5087 0C60                                                l5095 0C70  
                                              l5079 0C54                                                l6071 0886  
                                              l4641 06B9                                                l4633 06A6  
                                              l4625 069B                                                l4617 068B  
                                              l4609 0677                                                l4561 05C7  
                                              l4553 059C                                                l4545 0580  
                                              l4537 0578                                                l4529 0570  
                                              l4481 0514                                                l4473 0508  
                                              l4801 02B6                                                l4721 0143  
                                              l4713 00F9                                                l4705 00E0  
                                              l4465 140A                                                l4457 13F5  
                                              l4449 13E9                                                l6065 1CA9  
                                              l4297 103D                                                l4377 07B5  
                                              l4369 079F                                                l4289 1FAC  
                                              l4393 14C5                                                l4385 14A8  
                                              l5193 0D8D                                                l5177 0D5D  
                                              l5169 0D4D                                                l5097 0C78  
                                              l5089 0C65                                                l6081 08E8  
                                              l6073 0895                                                l6161 113C  
                                              l6153 1129                                                l4651 06EC  
                                              l4643 06BF                                                l4635 06AC  
                                              l4619 0690                                                l4627 069D  
                                              l4571 05E2                                                l4563 05C8  
                                              l4555 05B7                                                l4547 0582  
                                              l4539 057A                                                l4491 052C  
                                              l4483 0519                                                l4475 050A  
                                              l4803 02C0                                                l4731 0176  
                                              l4723 0150                                                l4715 0106  
                                              l4707 00E5                                                l4467 1418  
                                              l4459 1403                                                l4811 16BB  
                                              l6091 1C0B                                                l6067 1CAE  
                                              l4299 1042                                                l4395 14C9  
                                              l4387 14AB                                                l5195 0DA5  
                                              l5187 0D7E                                                l5179 0D5E  
                                              l5099 0C7B                                                l6083 08F1  
                                              l6075 08AB                                                l6171 114E  
                                              l6163 113F                                                l6155 112C  
                                              l5701 1FDD                                                l4661 0700  
                                              l4653 06F4                                                l4645 06C3  
                                              l4581 05FB                                                l4629 06A1  
                                              l4565 05D0                                                l4557 05C1  
                                              l4549 0584                                                l4493 052F  
                                              l4485 0521                                                l4477 050E  
                                              l4741 01B3                                                l4733 0181  
                                              l4725 015D                                                l4717 011E  
                                              l4469 141D                                                l4821 16F0  
                                              l4813 16CB                                                l4389 14B0  
                                              l4397 14D9                                                l4901 0A0C  
                                              l5189 0D83                                                l5197 0DA9  
                                              l6085 08FA                                                l6077 08C5  
                                              l6069 0880                                                l6181 117B  
                                              l6173 1158                                                l6165 1141  
                                              l6157 112D                                                l5711 1FEB  
                                              l5703 1FE0                                                l4911 1BF9  
                                              l4663 070A                                                l4655 06F9  
                                              l4647 06E0                                                l4639 06B4  
                                              l4591 0614                                                l4583 0605  
                                              l4575 05EB                                                l4559 05C3  
                                              l4567 05D2                                                l4495 0535  
                                              l4487 0522                                                l4479 050F  
                                              l4751 0203                                                l4743 01BE  
                                              l4735 0188                                                l4727 0164  
                                              l4719 012B                                                l4671 0094  
                                              l4831 171A                                                l4823 16F7  
                                              l4815 16DB                                                l4807 16B2  
                                              l4399 14E0                                                l6095 0805  
                                              l5199 0DB6                                                l6087 0903  
                                              l6079 08CE                                                l6175 1162  
                                              l6167 1142                                                l6159 1139  
                                              l5641 1DCD                                                l5713 1FED  
                                              l5705 1FE2                                                l5721 1D24  
                                              l4665 070E                                                l4657 06FA  
                                              l4649 06E7                                                l4585 0607  
                                              l4577 05F3                                                l4569 05DD  
                                              l4593 0617                                                l4497 0536  
                                              l4489 0524                                                l4761 0222  
                                              l4753 020F                                                l4745 01D0  
                                              l4737 019A                                                l4729 016F  
                                              l4681 00AB                                                l4673 0098  
                                              l4841 174B                                                l4833 1724  
                                              l4825 1706                                                l4809 16B7  
                                              l4921 1DDC                                                l4905 0A16  
                                              l6097 080B                                                l6089 090C  
                                              l6177 116C                                                l6169 1143  
                                              l5643 1DCF                                                l5635 1DC6  
                                              l5715 1FEF                                                l5707 1FE6  
                                              l5723 1D25                                                l5731 1D32  
                                              l5651 1C77                                                l4659 06FE  
                                              l4595 062D                                                l4587 060B  
                                              l4579 05F7                                                l4499 0538  
                                              l4771 0243                                                l4755 0216  
                                              l4763 0226                                                l4747 01E5  
                                              l4739 01A1                                                l4691 00BE  
                                              l4683 00AD                                                l4675 0099  
                                              l4667 008E                                                l4843 174C  
                                              l4835 172E                                                l4827 170D  
                                              l4819 16E7                                                l4915 1C02  
                                              l4923 1DF7                                                l4851 0948  
                                              l4931 1E32                                                l6179 1178  
                                              l5645 1DD1                                                l5637 1DC9  
                                              l5717 1FF2                                                l5709 1FE8  
                                              l5725 1D2A                                                l5741 1D3F  
                                              l5733 1D35                                                l5653 1C7E  
                                              l4597 0651                                                l4589 060C  
                                              l4781 025A                                                l4765 022A  
                                              l4757 021A                                                l4749 01FC  
                                              l4693 00BF                                                l4685 00B5  
                                              l4677 009E                                                l4669 0092  
                                              l4837 1742                                                l4829 1716  
                                              l4925 11DA                                                l5661 1429  
                                              l5901 1D43                                                l4861 0964  
                                              l4853 094D                                                l4933 1E3D  
                                              l5813 1586                                                l5821 175F  
                                              l5647 1DD9                                                l5639 1DCB  
                                              l5655 1C41                                                l5727 1D2C  
                                              l5719 1D21                                                l5735 1D36  
                                              l5751 1D0D                                                l5743 1D02  
                                              l4599 0653                                                l4791 029B  
                                              l4783 0272                                                l4775 024B  
                                              l4767 022B                                                l4759 021B  
                                              l4695 00C4                                                l4687 00B8  
                                              l4679 00A3                                                l4839 1747  
                                              l4919 1DB1                                                l5663 142E  
                                              l4871 098D                                                l4863 0974  
                                              l4855 0952                                                l4847 092E  
                                              l4935 1E47                                                l5815 15F4  
                                              l5911 151E                                                l5831 17B9  
                                              l5823 1765                                                l4953 1BD5  
                                              l5761 1017                                                l5753 1006  
                                              l4961 1BE7                                                l5673 1C6B  
                                              l5681 1FBC                                                l5657 1C45  
                                              l5729 1D2E                                                l5737 1D3B  
                                              l5745 1D05                                                l4793 02A4  
                                              l4777 0250                                                l4785 0276  
                                              l4769 022F                                                l4697 00C9  
                                              l4689 00BA                                                l5649 1C85  
                                              l5665 1496                                                l4881 09BA  
                                              l4873 0992                                                l4865 0979  
                                              l4857 0957                                                l4849 0940  
                                              l4929 1E2C                                                l5913 152B  
                                              l5905 150D                                                l5841 17CE  
                                              l5833 17BC                                                l5825 1767  
                                              l5817 1755                                                l4963 1CE4  
                                              l5771 1027                                                l5763 1019  
                                              l5755 1008                                                l5675 1C6E  
                                              l5691 1FCA                                                l5683 1FC0  
                                              l5739 1D3D                                                l5747 1D06  
                                              l4795 02A6                                                l4787 0283  
                                              l4779 0256                                                l4699 00D1  
                                              l5667 1497                                                l5659 1429  
                                              l4891 09E9                                                l4883 09C7  
                                              l4875 099A                                                l4867 0988  
                                              l5931 1575                                                l5923 1545  
                                              l5915 1535                                                l5907 1512  
                                              l4971 1C2F                                                l5843 17EA  
                                              l5835 17C2                                                l5827 176D  
                                              l5819 175E                                                l5677 1BDE  
                                              l4965 1CEB                                                l5781 1037  
                                              l5773 102F                                                l5765 101B  
                                              l5757 100D                                                l5693 1FCC  
                                              l5685 1FC3                                                l5749 1D0B  
                                              l4797 02B1                                                l4789 028D  
                                              l5669 1498                                                l4893 09F7  
                                              l4877 09A4                                                l4869 098C  
                                              l5933 1581                                                l5917 1537  
                                              l5909 1514                                                l4981 1EB8  
                                              l5861 1193                                                l5853 1181  
                                              l5941 1C4B                                                l5845 17EC  
                                              l5837 17CA                                                l5829 1773  
                                              l5679 1BE2                                                l4967 1CF3  
                                              l5783 1038                                                l5775 1032  
                                              l5767 101D                                                l5759 1014  
                                              l5695 1FD6                                                l5687 1FC5  
                                              l4799 02B5                                                l4887 09D3  
                                              l4879 09AE                                                l5927 1563  
                                              l5919 153A                                                l4991 1EC7  
                                              l4983 1EBB                                                l4975 1EA9  
                                              l5871 11AE                                                l5855 1189  
                                              l5847 17F1                                                l5839 17CC  
                                              l4969 1CFA                                                l5785 1039  
                                              l5777 1034                                                l5769 101F  
                                              l5697 1FD9                                                l5689 1FC7  
                                              l4889 09DD                                                l5929 1570  
                                              l4985 1EBD                                                l4977 1EA9  
                                              l5881 11C2                                                l5873 11B0  
                                              l5865 119B                                                l5857 1190  
                                              l5937 1C38                                                l5849 17F7  
                                              l5787 103A                                                l5779 1035  
                                              l5699 1FDB                                                l5971 1BB7  
                                              l4899 0A03                                                l4995 1D11  
                                              l4987 1EC3                                                l4979 1EB2  
                                              l5883 11CE                                                l5891 11D6  
                                              l5875 11B2                                                l5867 119E  
                                              l5939 1C55                                                l5789 1C14  
                                              l5893 1C1D                                                l4997 1D14  
                                              l4989 1EC5                                                l5885 11D4  
                                              l5869 11A6                                                l5991 1E4A  
                                              l5879 11B4                                                l5993 1E50  
                                              l5897 1D54                                                l5995 1E53  
                                              l5997 1E56                                                l5999 1E59  
                                              STR_1 18EC                                                STR_2 1865  
                                              STR_3 18D7                                                STR_4 18AE  
                                              STR_5 188E                                                STR_6 18FB  
                                              STR_7 18F4                                                STR_8 18AB  
                                              STR_9 184C                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              u4000 1F33                                                u4001 1F32  
                                              u4010 1E70                                                u4011 1E6F  
                                              u4110 1272                                                u4111 1271  
                                              u5000 0677                                                u4040 1E84  
                                              u4200 110B                                                u5001 0676  
                                              u4041 1E83                                                u4025 1E75  
                                              u4105 1264                                                u4201 110A  
                                              u4130 1282                                                u4050 123B  
                                              u4035 1E7A                                                u4131 1281  
                                              u4115 126E                                                u4051 123A  
                                              u5100 06C3                                                u5020 068B  
                                              u4140 1287                                                u4060 1246  
                                              u4220 111A                                                u4300 07FA  
                                              u5101 06C2                                                u5021 068A  
                                              u4141 1286                                                u4125 1278  
                                              u4061 1245                                                u4221 1119  
                                              u4205 1107                                                u4301 07F9  
                                              u5110 06D1                                                u5030 0690  
                                              u4070 1255                                                u4230 111F  
                                              u4150 10DD                                                u4310 1F90  
                                              u5031 068F                                                u5015 0681  
                                              u4071 1254                                                u4231 111E  
                                              u4215 1110                                                u4151 10DC  
                                              u4311 1F8F                                                u5120 06E0  
                                              u5040 069B                                                u5200 009E  
                                              u4160 10E8                                                u4400 107A  
                                              u4240 07CD                                                u5121 06DF  
                                              u5041 069A                                                u5201 009D  
                                              u4161 10E7                                                u4401 1079  
                                              u4241 07CC                                                u5130 06E7  
                                              u5050 06A1                                                u5210 00A3  
                                              u4090 1263                                                u4170 10F3  
                                              u4410 1D7B                                                u4330 1F9E  
                                              u6010 0D27                                                u5131 06E6  
                                              u5115 06CD                                                u5051 06A0  
                                              u5211 00A2                                                u4091 1262  
                                              u4171 10F2                                                u4411 1D7A  
                                              u4331 1F9D                                                u6011 0D26  
                                              u5140 06EC                                                u5060 06A6  
                                              u4420 1EFB                                                u5300 01F2  
                                              u5220 00BE                                                u4500 078D  
                                              u4260 07DB                                                u4340 1FA8  
                                              u6100 0D7D                                                u6020 0D38  
                                              u5141 06EB                                                u5061 06A5  
                                              u4421 1EFA                                                u5221 00BD  
                                              u4085 1259                                                u4501 078C  
                                              u4261 07DA                                                u4341 1FA7  
                                              u4325 1F94                                                u6101 0D7C  
                                              u6021 0D37                                                u6005 0D0F  
                                              u5150 06F9                                                u5070 06AC  
                                              u5230 00C4                                                u4190 1101  
                                              u4510 0792                                                u6110 0D83  
                                              u6030 0D40                                                u5151 06F8  
                                              u5071 06AB                                                u5231 00C3  
                                              u4191 1100                                                u4511 0791  
                                              u4255 07D1                                                u6111 0D82  
                                              u6031 0D3F                                                u6015 0D23  
                                              u5160 06FE                                                u5080 06B3  
                                              u4440 1F0B                                                u5400 025A  
                                              u5240 00C9                                                u4520 079F  
                                              u4600 12A5                                                u4280 07EA  
                                              u4360 1FB7                                                u6120 0D8D  
                                              u5161 06FD                                                u5081 06B2  
                                              u4441 1F0A                                                u5401 0259  
                                              u5305 01EE                                                u5241 00C8  
                                              u4185 10F7                                                u4521 079E  
                                              u4601 12A4                                                u4281 07E9  
                                              u4361 1FB6                                                u4345 1FA4  
                                              u6121 0D8C                                                u5090 06B9  
                                              u5410 0268                                                u5330 021A  
                                              u5250 00E0                                                u4370 1042  
                                              u4530 07A4                                                u4450 0718  
                                              u4610 12E8                                                u6130 0D9B  
                                              u6050 0D4D                                                u5091 06B8  
                                              u4435 1F00                                                u5331 0219  
                                              u5315 01FD                                                u5251 00DF  
                                              u4371 1041                                                u4531 07A3  
                                              u4451 0716                                                u4611 12E7  
                                              u4275 07DC                                                u4355 1FAD  
                                              u6051 0D4C                                                u5180 070E  
                                              u5420 0283                                                u5260 00E5  
                                              u5500 16F6                                                u4620 1C98  
                                              u4380 1051                                                u4540 07AA  
                                              u4460 0719                                                u6140 0DB6  
                                              u5181 070D                                                u5421 0282  
                                              u5325 0210                                                u5261 00E4  
                                              u5501 16F5                                                u4621 1C97  
                                              u4381 1050                                                u4541 07A9  
                                              u4525 079B                                                u4285 07E6  
                                              u6141 0DB5                                                u6045 0D43  
                                              i1l30 1C6A                                                u5430 029B  
                                              u5350 022A                                                u5190 0098  
                                              u4710 1418                                                u4630 13C4  
                                              u3910 1C2D                                                u4390 1075  
                                              u4470 0727                                                u4550 14E0  
                                              u6150 0DD1                                                u6070 0D5D  
                                              u5175 0705                                                u5431 029A  
                                              u5415 0264                                                u5351 0229  
                                              u5191 0097                                                u4711 1417  
                                              u4631 13C3                                                u3911 1C2B  
                                              u4391 1074                                                u4471 0726  
                                              u4295 07F0                                                u4551 14DF  
                                              u6151 0DD0                                                u6135 0D97  
                                              u6071 0D5C                                                u4800 0560  
                                              u5440 02B5                                                u5360 022F  
                                              u4720 141D                                                u4640 13DA  
                                              u5520 170C                                                u3920 1C2E  
                                              u4480 0730                                                u4560 14E6  
                                              u5600 0940                                                u6160 0DE4  
                                              u6080 0D62                                                u7200 17F1  
                                              u4801 055F                                                u5441 02B4  
                                              u5425 027F                                                u5361 022E  
                                              u5345 021C                                                u4721 141C  
                                              u4705 140B                                                u5521 170B  
                                              u4481 072F                                                u4561 14E5  
                                              u5601 093F                                                u6161 0DE3  
                                              u6145 0DB2                                                u6081 0D61  
                                              u6065 0D4F                                                u7201 17F0  
                                              u4810 0564                                                u4730 050E  
                                              u5370 0243                                                u5290 01DB  
                                              u4650 13ED                                                u3930 1F39  
                                              u4490 0786                                                u4570 14EB  
                                              u5610 0979                                                u6090 0D76  
                                              u7210 17F7                                                u4811 0563  
                                              u4731 050D                                                u5435 0297  
                                              u5371 0242                                                u5275 015E  
                                              u4651 13EC                                                u5515 1700  
                                              u3931 1F38                                                u4395 1071  
                                              u4491 0785                                                u4571 14EA  
                                              u5611 0978                                                u6155 0DCD  
                                              u6091 0D75                                                u7211 17F6  
                                              i1l52 1CC5                                                u4900 05DD  
                                              u4820 059C                                                u4740 0514  
                                              u5380 024A                                                u4660 13F4  
                                              u5540 171A                                                u5460 16B7  
                                              u3940 1F43                                                u4580 14F8  
                                              u5620 098C                                                u7300 1570  
                                              u7220 1189                                                u4901 05DC  
                                              u4821 059B                                                u4741 0513  
                                              u5381 0249                                                u5285 0189  
                                              u4661 13F3                                                u4645 13D6  
                                              u5541 1719                                                u5461 16B6  
                                              u3941 1F42                                                u4581 14F7  
                                              u5621 098B                                                u7301 156F  
                                              u7221 1188                                                u5710 1CEB  
                                              u4910 05E2                                                u4830 05A6  
                                              u4750 0519                                                u5390 0250  
                                              u5550 1720                                                u5470 16BB  
                                              u7150 142E                                                u3950 1D6F  
                                              u4590 14FD                                                u5630 09A4  
                                              u7310 1575                                                u7230 119A  
                                              i1l39 1BC0                                                u5711 1CEA  
                                              u4911 05E1                                                u4831 05A4  
                                              u4751 0518                                                u5455 02B9  
                                              u5391 024F                                                u5295 01D7  
                                              u5551 171F                                                u5535 1710  
                                              u5471 16BA                                                u7151 142D  
                                              u3951 1D6E                                                u4495 0782  
                                              u4591 14FC                                                u5631 09A3  
                                              u7311 1574                                                u7231 1199  
                                              u6175 0DEB                                                i1l72 1DB0  
                                              u5720 1CFA                                                u4920 05F7  
                                              u4840 05A7                                                u4760 0535  
                                              u4680 1402                                                u5560 1724  
                                              u5480 16DB                                                u5800 0B96  
                                              u7400 1D94                                                u3960 12F4  
                                              u5640 09AE                                                u7240 11A6  
                                              u7160 176D                                                u5721 1CF9  
                                              u4921 05F6                                                u4825 0598  
                                              u4761 0534                                                u4681 1401  
                                              u5561 1723                                                u5481 16DA  
                                              u5801 0B95                                                u7401 1D93  
                                              u3961 12F3                                                u4585 14F4  
                                              u5641 09AD                                                u7241 11A5  
                                              u7161 176C                                                i1l58 1BB2  
                                              u4930 05FB                                                u4850 05B7  
                                              u4770 053C                                                u4690 1409  
                                              u5570 1738                                                u5810 0BAB  
                                              u3970 12FA                                                u5650 09DD  
                                              u5730 1C36                                                u7250 11CE  
                                              u7170 1773                                                u4931 05FA  
                                              u4851 05B6                                                u4771 053B  
                                              u4691 1408                                                u4675 13F6  
                                              u5811 0BAA                                                u3971 12F9  
                                              u5651 09DC                                                u5731 1C34  
                                              u7251 11CD                                                u7171 1772  
                                              u4780 0542                                                u5580 1747  
                                              u5820 0BC0                                                u3980 130A  
                                              u5660 1E47                                                u7260 151E  
                                              u5740 1C37                                                u5900 0C65  
                                              u7180 17C2                                                u4781 0541  
                                              u5581 1746                                                u5821 0BBF  
                                              u3981 1309                                                u5661 1E46  
                                              u7261 151D                                                u5901 0C64  
                                              u7181 17C1                                                u4950 060B  
                                              u4870 05C7                                                u4790 0547  
                                              u5590 174B                                                u5830 0BD9  
                                              u3990 132A                                                u7270 152B  
                                              u5750 1EC3                                                u5910 0C81  
                                              u7190 17C8                                                u4951 060A  
                                              u4871 05C6                                                u4791 0546  
                                              u5591 174A                                                u5575 1734  
                                              u5495 16EA                                                u5831 0BD8  
                                              u5815 0BA7                                                u3991 1329  
                                              u7271 152A                                                u5751 1EC2  
                                              u5911 0C80                                                u7191 17C7  
                                              u5840 0BF2                                                u5760 0B50  
                                              u7280 1535                                                u5920 0C87  
                                              u4945 05FE                                                u4865 05BA  
                                              u5841 0BF1                                                u5825 0BBC  
                                              u5761 0B4F                                                u7281 1534  
                                              u5921 0C86                                                u4970 062D  
                                              u4890 05D9                                                u5850 0C16  
                                              u5770 0B60                                                u7290 1544  
                                              u5930 0C8C                                                u4971 062C  
                                              u4891 05D8                                                u5851 0C15  
                                              u5835 0BD5                                                u5771 0B5F  
                                              u3995 1326                                                u7291 1543  
                                              u5931 0C8B                                                u4980 065B  
                                              u5860 0C2F                                                u5780 0B7C  
                                              u5940 0CA7                                                u4981 065A  
                                              u4973 0629                                                u4965 060E  
                                              u4885 05CA                                                u5861 0C2E  
                                              u5845 0BEE                                                u5781 0B7B  
                                              u5941 0CA6                                                u4990 0672  
                                              u5870 0C4C                                                u5790 0B8D  
                                              u7390 1D8D                                                u5950 0CC3  
                                              u7470 08F8                                                u4991 0671  
                                              u5871 0C4B                                                u5855 0C12  
                                              u5791 0B8C                                                u5775 0B5C  
                                              u7391 1D8C                                                u5951 0CC2  
                                              u7471 08F6                                                u5960 0CFB  
                                              u5880 0C5A                                                u7480 08F9  
                                              u5865 0C2B                                                u5961 0CFA  
                                              u5881 0C59                                                u7490 080B  
                                              u5890 0C60                                                u7650 1157  
                                              u5795 0B89                                                u7491 080A  
                                              u5891 0C5F                                                u7707 1172  
                                              u7651 1156                                                u7660 1161  
                                              u7661 1160                                                u5990 0D0D  
                                              u7670 116B                                                u5991 0D0C  
                                              u5975 0CFC                                                u7671 116A  
                                              u5985 0D03                                                _TMR2 001D  
                                              _TMR4 0415                                                _TMR6 041C  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 0070  
                                   _getHoogtesensor 1BF9                                                abs@a 00A6  
                                              _dbuf 01A0                                                _atoi 150D  
                                              _main 1129                                                _dtoa 0710  
                                              _line 01C0                                       i1___flmul@grs 002E  
                                              _prec 0144                                                pad@i 00BA  
                                              pad@p 00B7                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _utoa 1499                         _INT_DefaultInterruptHandler 0000  
                  __end_of_adcConversionDoneHandler 1F89                                      i1___fladd@aexp 004B  
                                    i1___fladd@bexp 004C                                                start 0058  
        __end_of_EUSART_DefaultOverrunErrorCallback 1BB7                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1BB3  
                                   ___fldiv@new_exp 00B2                           __end_of_SPI1_ByteExchange 1C9C  
                   __end_of_INT_SetInterruptHandler 1BF0                                ?i1_ADC_SelectChannel 0070  
                                             ??_abs 00A8                                               ??_pad 00B9  
                                     ?_EUSART_Write 00A0                                       ___fltol@sign1 00EC  
                                             _ADACT 009F                                               ?_atoi 00A6  
                                   __end_of___fladd 0710                                               ?_main 0070  
                                             ?_dtoa 00BC                                     __end_of___fldiv 0DF4  
                                   __end_of___awdiv 1291                                               STR_10 18CA  
                                             STR_11 18BD                                               STR_12 189F  
                                             STR_13 187D                                     __end_of___awmod 1129  
                                   __end_of___flmul 02C9                                     __end_of___flsub 1EA9  
                                   __end_of___fltol 1429                                               ?_utoa 00BC  
                                   ___awdiv@divisor 00A0                                               _T2CON 001F  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _T6CON 041E  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                     __end_of___lwdiv 07FF  
                                             i1l221 002C                                               i1l230 0056  
                                             i1l223 003A                                               i1l224 0056  
                                             i1l225 0048                                               i1l219 001B  
                                             i1l420 0002                                               i1l414 1CD4  
                                   __end_of___lwmod 1FBC                                               i1l473 1CE3  
                                             i1l730 1E2B                                               i1l717 10D6  
                                             i1l830 1F88                                               i1l727 1E29  
                                             i1l479 0003                                               i1l745 0800  
                                             i1l748 1BB6                                               i1l942 0B31  
                                             i1l839 1BC6                                               i1l944 0B38  
                                   ___awdiv@counter 00A4                                               _OSCEN 091D  
                                             _UART1 1800                                        vfpfcnvrt@fmt 00CB  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 1D32                                    __end_of_TMR2_ISR 1CD5  
                                  __end_of_TMR4_ISR 1CE4                                               _getKi 1D43  
                                             _getKp 1D54                                               _flags 0063  
                                _EUSART_TransmitISR 1E10                                      i1___flmul@aexp 0032  
                               read_prec_or_width@c 00AB                                      i1___flmul@bexp 0033  
                               read_prec_or_width@n 00AC                                               _fputc 12ED  
                                             _fputs 1F10                                               _setKi 1C4B  
                                             _setKp 1C55                                         ?_TMR6_Tasks 0070  
                                    i1___flmul@sign 002D                                      i1___flmul@temp 0038  
                                    i1___flmul@prod 0034                                               atoi@n 00AB  
                                             pad@fp 00B4                                               atoi@s 00A6  
                                             _width 0055                                               _putch 1D65  
                                             dtoa@d 00BE                                               dtoa@i 00C7  
                                             dtoa@p 00C3                                               dtoa@s 00C6  
                                             dtoa@w 00C4                                               pclath 000A  
                                    i1___fltol@exp1 0043                                __end_of_getLedNumber 1235  
                                             utoa@d 00BE                                               utoa@i 00C4  
                                             utoa@p 00C1                                               utoa@w 00C2  
                                             status 0003                                               wtemp0 007E  
                               ?_EUSART_TransmitISR 0070                                     i1___fladd@signs 004A  
                                       controller@I 0051                                         controller@P 004F  
                             ??i1_ADC_SelectChannel 0070                                     __initialization 005A  
                                      __end_of_atoi 1586                                        __end_of_main 1181  
                                      __end_of_dtoa 07C4                                        __end_of_utoa 150D  
                                     ?_initLedstrip 0070                                      ??_EUSART_Write 00A1  
                 _EUSART_TxCompleteInterruptHandler 014A                             __end_of_TMR2_Initialize 1D32  
                                         ??_ADC_ISR 0074                         ?_INTERRUPT_InterruptManager 0070  
                            printFloat@integer_part 0154                                              ??_atoi 00A8  
                              ??_EUSART_TransmitISR 0070                                              ??_main 015A  
                                            ??_dtoa 00C0                                         ?i1___xxtofl 0070  
                              __end_of_getDutycycle 1C26                                              ??_utoa 00C0  
                           setSetpoint@new_setpoint 00AD                          __end_of_read_prec_or_width 12ED  
                                   _TMR6_Initialize 1D02  EUSART_OverrunErrorCallbackRegister@callbackHandler 00A0  
EUSART_FramingErrorCallbackRegister@callbackHandler 00A0                             __end_of_getHoogtesensor 1C02  
                                            ?_getKi 00A0                                              ?_getKp 00A0  
                                            _ADCON0 009D                                              _ADCON1 009E  
                        _EUSART_OverrunErrorHandler 005D                                              ?_fputc 00A3  
                                            ?_fputs 00AC                                              _ADRESH 009C  
                                            _ADRESL 009B                                              ?_setKi 014E  
                                            ?_setKp 014E                          __end_of_position_led_strip 0C50  
                                  ___awdiv@dividend 00A2                                              _ANSELA 018C  
                                            ?_putch 0070                                              _ANSELB 018D  
                                            _ANSELC 018E                                        ?_setSetpoint 00AD  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RB4PPS 0E9C                                              _RB6PPS 0E9E  
                                            _RC5PPS 0EA5                                              _RB7PPS 0E9F  
                                            i1l1503 0F5A                                              i1l1513 0F9F  
                                            _ODCONA 028C                                              _ODCONB 028D  
                                            i1l1507 0F7C                                              _ODCONC 028E  
                                            i1l1524 0FF2                                              i1l1516 0FD2  
                                            i1l1525 0FFF                                              i1l1382 13A4  
                                            i1l1622 162E                                              i1l1375 13B9  
                                            i1l1623 163F                                              i1l1624 16AF  
                                            i1l1385 13B9                                              i1l1482 0E4A  
                                            i1l1635 167B                                              i1l1636 1687  
                                            i1l1486 0EC9                                              i1l1590 04F9  
                                            i1l1495 0FFF                                              i1l1488 0EA3  
                                            i1l1584 0481                                              i1l1578 0503  
                                            i1l6021 1093                                              i1l5301 0E42  
                                            i1l1597 1EDB                                              i1l6101 000A  
                                            i1l6031 10B1                                              i1l6023 109A  
                                            i1l5311 0E5A                                              i1l5303 0E50  
                                            i1l1599 1EEB                                              i1l5231 136F  
                                            i1l5223 134B                                              i1l6111 0031  
                                            i1l6103 000F                                              i1l5217 1C60  
                                            i1l6033 10B7                                              i1l6025 10A0  
                                            i1l6017 1085                                              i1l5401 0F70  
                                            i1l5321 0E64                                              i1l5313 0E5C  
                                            i1l5305 0E54                                              i1l5233 1370  
                                            i1l5225 1355                                              i1l6121 0052  
                                            i1l6113 0036                                              i1l6105 0014  
                                            i1l6043 10CB                                              i1l6035 10BC  
                                            i1l6027 10A5                                              i1l6019 108E  
                                            i1l6051 1E10                                              i1l5411 0F86  
                                            i1l5403 0F77                                              i1l5331 0E6E  
                                            i1l5323 0E66                                              i1l5315 0E5E  
                                            i1l5307 0E56                                              i1l5235 1378  
                                            i1l5219 1BC1                                              i1l6115 003F  
                                            i1l6107 0020                                              i1l6045 10D2  
                                            i1l6037 10BF                                              i1l6029 10AA  
                                            i1l6053 1E17                                              i1l5421 0F96  
                                            i1l5413 0F8B                                              i1l5405 0F7B  
                                            i1l5341 0E8C                                              i1l5333 0E70  
                                            i1l5325 0E68                                              i1l5317 0E60  
                                            i1l5309 0E58                                              i1l5261 0DF8  
                                            i1l5501 0334                                              i1l5253 139B  
                                            i1l5245 1386                                              i1l5237 137A  
                                            i1l5229 135E                                              i1l6117 0044  
                                            i1l6109 0025                                              i1l6047 10D4  
                                            i1l6039 10C4                                              i1l6055 1E1F  
                                            i1l5431 0FAF                                              i1l5423 0F9C  
                                            i1l5407 0F80                                              i1l5415 0F8D  
                                            i1l5351 0EB8                                              i1l5343 0EA7  
                                            i1l5335 0E72                                              i1l5327 0E6A  
                                            i1l5319 0E62                                              i1l5271 0E09  
                                            i1l5263 0DFA                                              i1l5511 038B  
                                            i1l5503 0341                                              i1l5255 13A9  
                                            i1l5239 137E                                              i1l5247 1394  
                                            i1l6119 004D                                              i1l6225 1F7C  
                                            i1l6057 1E24                                              i1l5441 0FE4  
                                            i1l5433 0FB3                                              i1l5409 0F84  
                                            i1l5417 0F91                                              i1l5353 0EC0  
                                            i1l5345 0EB1                                              i1l5329 0E6C  
                                            i1l5337 0E74                                              i1l5281 0E1F  
                                            i1l5273 0E11                                              i1l5265 0DFE  
                                            i1l5521 03BC                                              i1l5513 0398  
                                            i1l5505 0359                                              i1l5257 13AE  
                                            i1l5601 1626                                              i1l6059 1E26  
                                            i1l5451 0FFA                                              i1l5443 0FE9  
                                            i1l5435 0FD0                                              i1l5427 0FA4  
                                            i1l5419 0F92                                              i1l5371 0EF5  
                                            i1l5363 0EDB                                              i1l5347 0EB3  
                                            i1l5355 0EC2                                              i1l5339 0E75  
                                            i1l5291 0E2D                                              i1l5283 0E25  
                                            i1l5275 0E12                                              i1l5267 0DFF  
                                            i1l5259 0DF4                                              i1l5531 03F9  
                                            i1l5523 03C3                                              i1l5515 039F  
                                            i1l5507 0366                                              i1l5611 1652  
                                            i1l5603 1636                                              i1l5453 0FFE  
                                            i1l5445 0FEA                                              i1l5437 0FD7  
                                            i1l5429 0FA9                                              i1l5373 0EF7  
                                            i1l5365 0EE3                                              i1l5357 0ECD  
                                            i1l5381 0F07                                              i1l5349 0EB7  
                                            i1l5293 0E32                                              i1l5285 0E26  
                                            i1l5269 0E04                                              i1l5277 0E14  
                                            i1l5541 044A                                              i1l5533 040B  
                                            i1l5525 03D5                                              i1l5517 03AA  
                                            i1l5509 037E                                              i1l5461 02D3  
                                            i1l5621 167F                                              i1l5613 1661  
                                            i1l5447 0FEE                                              i1l5439 0FDC  
                                            i1l5391 0F4B                                              i1l5383 0F1D  
                                            i1l5375 0EFB                                              i1l5367 0EE7  
                                            i1l5359 0ED2                                              i1l5295 0E37  
                                            i1l5287 0E28                                              i1l5279 0E1C  
                                            i1l5543 0451                                              i1l5551 0461  
                                            i1l5535 0420                                              i1l5527 03DC  
                                            i1l5519 03B1                                              i1l5471 02E8  
                                            i1l5463 02D4                                              i1l5455 02C9  
                                            i1l5631 16A7                                              i1l5623 1689  
                                            i1l5615 1668                                              i1l5607 1642  
                                            i1l5801 1F70                                              i1l5449 0FF0  
                                            i1l5385 0F41                                              i1l5393 0F52  
                                            i1l5377 0EFC                                              i1l5369 0EEB  
                                            i1l5297 0E3F                                              i1l5289 0E2C  
                                            i1l5553 0465                                              i1l5545 0455  
                                            i1l5537 0437                                              i1l5529 03EE  
                                            i1l5481 02FA                                              i1l5473 02F0  
                                            i1l5465 02D9                                              i1l5457 02CD  
                                            i1l5625 169D                                              i1l5617 1671  
                                            i1l5609 164B                                              i1l5395 0F62  
                                            i1l5387 0F43                                              i1l5379 0F04  
                                            i1l5299 0E40                                              i1l5571 04AD  
                                            i1l5563 0486                                              i1l5555 0466  
                                            i1l5547 0456                                              i1l5539 043E  
                                            i1l5491 0316                                              i1l5483 02FF  
                                            i1l5475 02F3                                              i1l5467 02DE  
                                            i1l5459 02CF                                              i1l5627 16A2  
                                            i1l5619 1675                                              i1l6099 0006  
                                            i1l5805 1F73                                              i1l5397 0F67  
                                            i1l5389 0F46                                              i1l4941 1ECC  
                                            i1l5581 04DF                                              i1l5565 048B  
                                            i1l5573 04B1                                              i1l5557 046A  
                                            i1l5549 045D                                              i1l5493 031B  
                                            i1l5485 0304                                              i1l5477 02F5  
                                            i1l5469 02E6                                              i1l5629 16A6  
                                            i1l5807 1F84                                              i1l4943 1ED3  
                                            i1l5591 04FB                                              i1l5583 04E1  
                                            i1l5575 04BE                                              i1l5567 0491  
                                            i1l5559 047E                                              i1l5495 0320  
                                            i1l5487 030C                                              i1l5479 02F9  
                                            i1l4945 1ED7                                              i1l5585 04EC  
                                            i1l5577 04C8                                              i1l5569 0495  
                                            i1l5489 030E                                              i1l4955 1BBB  
                                            i1l4947 1EE2                                              i1l4939 1ECA  
                                            i1l5587 04F0                                              i1l5579 04D6  
                                            i1l5499 0329                                              i1l5595 160D  
                                            i1l4949 1EE7                                              i1l5589 04F1  
                                            i1l5597 1612                                              i1l5791 1BB3  
                                            i1l4959 1D9C                                              i1l5599 1616  
                                            i1l5951 0ACA                                              i1l5943 0A31  
                                            i1l5793 1F5C                                              i1l5961 0B20  
                                            i1l5953 0AFE                                              i1l5945 0A39  
                                            i1l5795 1F5D                                              i1l5963 0B2A  
                                            i1l5955 0B04                                              i1l5947 0A42  
                                            i1l5797 1F65                                              i1l5973 1CB7  
                                            i1l5965 0B2E                                              i1l5957 0B0D  
                                            i1l5949 0A8F                                              i1l5981 1CDC  
                                            i1l5799 1F68                                              i1l5975 1CB9  
                                            i1l5959 0B1A                                              i1l5983 1CE1  
                                            i1l5977 1CC0                                              i1l5985 1CC6  
                                            i1l5969 0B31                                              _INLVLA 038C  
                                            _INLVLB 038D                                              i1l5987 1CCD  
                                            i1l5979 1CD5                                              _INLVLC 038E  
                                            i1l5989 1CD2                                              u620_20 137E  
                                            u620_21 137D                                              u700_25 04F4  
                                            u621_20 1385                                              u701_20 1612  
                                            u621_21 1384                                              u701_21 1611  
                                            u630_20 0E09                                              u710_20 167B  
                                            u702_20 1616                                              u630_21 0E08  
                                            u710_21 167A                                              u702_21 1615  
                                            u622_25 1387                                              u631_20 0E25  
                                            u623_20 1393                                              u711_20 167F  
                                            u703_20 1636                                              u631_21 0E24  
                                            u623_21 1392                                              u711_21 167E  
                                            u703_21 1635                                              u640_20 0EA7  
                                            u632_20 0E2C                                              u624_20 139A  
                                            u712_20 1693                                              u640_21 0EA6  
                                            u632_21 0E2B                                              u624_21 1399  
                                            u712_25 168F                                              u704_25 1645  
                                            u633_20 0E32                                              u713_20 16A2  
                                            u705_20 1651                                              u633_21 0E31  
                                            u713_21 16A1                                              u705_21 1650  
                                            u641_25 0EAA                                              u625_25 139C  
                                            u650_20 0EFB                                              u642_20 0EB7  
                                            u634_20 0E37                                              u626_20 13A9  
                                            u618_20 1355                                              u714_20 16A6  
                                            u650_21 0EFA                                              u642_21 0EB6  
                                            u634_21 0E36                                              u626_21 13A8  
                                            u618_21 1354                                              u714_21 16A5  
                                            u570_25 1DAB                                              u706_25 165B  
                                            u635_20 0E50                                              u627_20 13AE  
                                            u619_20 136B                                              u707_20 1667  
                                            u635_21 0E4F                                              u627_21 13AD  
                                            u707_21 1666                                              u651_25 0EFE  
                                            u643_25 0EBA                                              u619_25 1367  
                                            u660_20 0F91                                              u652_20 0F1D  
                                            u644_20 0EC9                                              u636_20 0E54  
                                            u628_20 0DFE                                              u732_20 0B0D  
                                            u660_21 0F90                                              u652_21 0F1C  
                                            u644_21 0EC8                                              u636_21 0E53  
                                            u628_21 0DFD                                              u732_21 0B0C  
                                            u652_23 0F19                                              u708_25 166B  
                                            _OSCFRQ 091F                                              u741_20 1093  
                                            u661_20 0F96                                              u653_20 0F4B  
                                            u645_20 0ECD                                              u637_20 0E8C  
                                            u629_20 0E04                                              u709_20 1675  
                                            u733_20 0B1A                                              u741_21 1092  
                                            u661_21 0F95                                              u653_21 0F4A  
                                            u645_21 0ECC                                              u637_21 0E8B  
                                            u629_21 0E03                                              u709_21 1674  
                                            u733_21 0B19                                              u637_25 0E88  
                                            u733_25 0B16                                              u742_20 10A0  
                                            u670_20 0FE9                                              u662_20 0F9C  
                                            u654_20 0F62                                              u646_20 0ED2  
                                            u638_20 0E96                                              u734_20 0B2A  
                                            u750_20 000A                                              u742_21 109F  
                                            u670_21 0FE8                                              u662_21 0F9B  
                                            u654_21 0F61                                              u646_21 0ED1  
                                            u638_21 0E94                                              u734_21 0B29  
                                            u750_21 0009                                              u743_20 10AA  
                                            u671_20 0FEE                                              u663_20 0FA3  
                                            u655_20 0F67                                              u647_20 0EE7  
                                            u639_20 0E97                                              u567_20 1ED7  
                                            u735_20 0B2E                                              u751_20 000F  
                                            u743_21 10A9                                              u671_21 0FED  
                                            u663_21 0FA2                                              u655_21 0F66  
                                            u647_21 0EE6                                              u567_21 1ED6  
                                            u735_21 0B2D                                              u751_21 000E  
                                            u736_20 1CC0                                              u744_20 10B7  
                                            u664_20 0FA9                                              u648_20 0EEB  
                                            u680_20 031B                                              u760_20 0052  
                                            u752_20 0014                                              u736_21 1CBF  
                                            u744_21 10B6                                              u664_21 0FA8  
                                            u648_21 0EEA                                              u680_21 031A  
                                            u760_21 0051                                              u752_21 0013  
                                            u672_25 0FF5                                              u656_25 0F71  
                                            u568_25 1EDC                                       vfpfcnvrt@done 00D1  
                                            u745_20 10CA                                              u673_20 0FFE  
                                            u665_20 0FB3                                              u657_20 0F7B  
                                            u569_20 1EE7                                              u681_20 0320  
                                            u737_20 1CDC                                              u753_20 0020  
                                            u745_21 10C9                                              u673_21 0FFD  
                                            u665_21 0FB2                                              u657_21 0F7A  
                                            u569_21 1EE6                                              u681_21 031F  
                                            u737_21 1CDB                                              u753_21 001F  
                                            u649_25 0EEE                                              u746_20 1E17  
                                            u738_20 1CCD                                              u666_20 0FC1  
                                            u658_20 0F80                                              u690_20 0465  
                                            u674_20 02D3                                              u754_20 0025  
                                            u746_21 1E16                                              u738_21 1CCC  
                                            u658_21 0F7F                                              u690_21 0464  
                                            u674_21 02D2                                              u754_21 0024  
                                            u666_25 0FBD                                              u682_25 0399  
                                            u667_20 0FD0                                              u659_20 0F8B  
                                            u691_20 046A                                              u675_20 02D9  
                                            u755_20 0031                                              u667_21 0FCF  
                                            u659_21 0F8A                                              u691_21 0469  
                                            u675_21 02D8                                              u755_21 0030  
                                            u683_25 03C4                                              u668_20 0FD7  
                                            u692_20 047E                                              u684_20 0416  
                                            u676_20 02DE                                              u756_20 0036  
                                            u668_21 0FD6                                              u692_21 047D  
                                            u676_21 02DD                                              u756_21 0035  
                                            u684_25 0412                                              u669_20 0FDC  
                                            u693_20 0485                                              u685_20 042D  
                                            u677_20 02F9                                              u757_20 003F  
                                            u669_21 0FDB                                              u693_21 0484  
                                            u677_21 02F8                                              u757_21 003E  
                                            u685_25 0429                                              u694_20 048B  
                                            u678_20 02FF                                              u758_20 0044  
                                            u694_21 048A                                              u678_21 02FE  
                                            u758_21 0043                                              u686_25 0438  
                                            u695_20 0495                                              u679_20 0304  
                                            u759_20 004D                                              u695_21 0494  
                                            u679_21 0303                                              u759_21 004C  
                                            u687_25 044B                                              u696_20 04A3  
                                            u688_20 0455                                              u688_21 0454  
                                            u696_25 049F                                              u697_20 04BE  
                                            u697_21 04BD                                              u697_25 04BA  
                                            u689_25 0457                                              u698_20 04D6  
                                            u698_21 04D5                                              _TX1REG 019A  
                                            u698_25 04D2                                              u699_20 04F0  
                                            u699_21 04EF                                              _TX1STA 019E  
                                  __end_of___xxtofl 1755                                        ?_uartHandler 0070  
                                 __end_of_SPI1_Open 1499                                _sendLedstripEndFrame 1DDC  
                                 _ADC_potentiometer 005B                                        vfprintf@cfmt 00DE  
                                    ??_initLedstrip 00A9                                           ??___fladd 00B6  
                                            ___wmul 1E69                             _updateLedstripAnimation 1BB7  
                                         ??___fldiv 00A8                                           ??___awdiv 00A4  
                                         ??___awmod 00A4                                           ??___flmul 00D2  
                                         ??___flsub 00CA                                           ??___fltol 00E8  
                                         ??___lwdiv 00A4                                           ??___lwmod 00A4  
                                  __end_of_ledstrip 184C                                   ?_getPotentiometer 00A0  
                                  __end_of_readLine 11DA                                read_prec_or_width@ap 00A7  
                           __end_of_TMR4_Initialize 1D43                                    ___awdiv@quotient 00A6  
                                 ?_EUSART_IsRxReady 0070                                     ___awmod@divisor 00A0  
                                 ?_EUSART_IsTxReady 0070                                     ___awmod@counter 00A4  
                                            _printf 1D11                                              pad@buf 00B6  
                                ??_getPotentiometer 00A2                                   ?_CLOCK_Initialize 0070  
                                            dtoa@fp 00BC                                   __end_ofi1___fladd 1000  
                                ??_EUSART_IsRxReady 00A0                                   __end_ofi1___flmul 0504  
                                 __end_ofi1___fltol 13BA                                              fputc@c 00A3  
                                ??_EUSART_IsTxReady 00A0                                              fputs@c 00B1  
                                            fputs@i 00B2                                              fputs@s 00AC  
                         ?_adcConversionDoneHandler 0070                                  ??_CLOCK_Initialize 00A0  
                        str2float@decimal_separator 00E8                                     i1___fltol@sign1 0042  
                                     main@potwaarde 015C                             ?_sendLedstripStartFrame 0070  
                       EUSART_ReceiveISR@tempRxHead 0071                                    __end_of_vfprintf 1E4A  
                             _pwm_fan_LoadDutyValue 1D9C                                              utoa@fp 00BC  
           INT_SetInterruptHandler@InterruptHandler 00A0             ADC_SetInterruptHandler@InterruptHandler 00A0  
                                    _SPI1_IsRxReady 0000                                      _SPI1_IsTxReady 0000  
                                      ___xxtofl@arg 00AA                                        ___xxtofl@exp 00A9  
                                 _SYSTEM_Initialize 1E4A                                        ___xxtofl@val 00A0  
                           __end_of__initialization 008A                                      _SPI1_ByteWrite 0000  
                                  printFloat@number 014E                                  ?_SYSTEM_Initialize 0070  
                                        ___fltol@f1 00E4                                        ?i1__Umul8_16 0070  
                                     __end_of_UART1 1830                               ?_sendLedstripEndFrame 0070  
                                    __pcstackCOMMON 0070                                        __pidataBANK0 0801  
                                      __pidataBANK2 1BCD                                 ??_SYSTEM_Initialize 00A2  
                                         ?_TMR2_ISR 0070                                       __end_of_getKi 1D54  
                                     __end_of_getKp 1D65                                           ?_TMR4_ISR 0070  
                                     __end_of_fputc 134B                                       __end_of_fputs 1F34  
                                 ??_SPI1_Initialize 00A0                                       __end_of_setKi 1C55  
                                     __end_of_setKp 1C5F                                       __end_of_putch 1D76  
                                  ?_TMR2_Initialize 0070                             __end_of_TMR6_Initialize 1D11  
                           _ADC_GetConversionResult 1BBB                                  _spi1_configuration 18E2  
                    __end_of_sendLedstripStartFrame 1DC6                                _eusartRxStatusBuffer 0120  
                                  _ADC_hoogtesensor 0059                                  _pwm_fan_Initialize 1C77  
                                  ?_getHoogtesensor 00A0                                             ??_getKi 00A4  
                                           ??_getKp 00A4                                         setKi@new_ki 014E  
                                           ??_fputc 00A7                           __end_of_SYSTEM_Initialize 1E69  
                                           ??_fputs 00AF                                             ??_setKi 00F0  
                                           ??_setKp 00F0                                             ??_putch 00A2  
                                        __pbssBANK0 0055                                          __pbssBANK2 0120  
                                        __pbssBANK3 01A0                                 ?_pwm_fan_Initialize 0070  
                              __end_of_EUSART_Write 1F5C                                         setKp@new_kp 014E  
                                    i1___xxtofl@arg 007A                                      i1___xxtofl@exp 0079  
                                    i1___xxtofl@val 0070                           ??_updateLedstripAnimation 00F0  
                                 __end_of__Umul8_16 1F10                            _TMR6_PeriodMatchCallback 015E  
                                        __pmaintext 1129                                             ?___wmul 00A0  
                                        ??_TMR2_ISR 0070                                          ??_TMR4_ISR 007E  
                                        __pintentry 0004                                _EUSART_AutoBaudQuery 0000  
                              ??_pwm_fan_Initialize 00A0                                             _ADC_ISR 1CB7  
                                  ?_TMR4_Initialize 0070                                             ?_printf 00E0  
                                      _getLedNumber 11DA                                     _EUSART_IsTxDone 0000  
                                     _eusartRxCount 0066                   _EUSART_RxCompleteCallbackRegister 0000  
                                         ?___xxtofl 00A0                                     _EUSART_ErrorGet 0000  
                                           _SP1BRGH 019C                                             _SP1BRGL 019B  
                                           _OSCCON1 0919                                             _OSCCON3 091B  
                               i1__Umul8_16@product 0074                              ?_pwm_fan_LoadDutyValue 0070  
                                           _OSCTUNE 091E                                             _PWM5DCH 0618  
                                           _PWM5DCL 0617                                             _PWM5CON 0619  
                        sendLedstripFrame@intensity 00A3                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                             _SSP1BUF 0211  
                                      ??_TMR6_Tasks 00F0                                __end_of_initLedstrip 1CB7  
                                         ?_readLine 00E7                                        _getDutycycle 1C1D  
                                        _controller 0A31                               EUSART_Read@tempRxTail 00A0  
                            ??_sendLedstripEndFrame 00A1                                _ADC_InterruptHandler 0166  
                           _ADC_SetInterruptHandler 1BD5                                             ___fladd 0504  
                                           ___fldiv 0C50                                             ___awdiv 1235  
                                           ___awmod 10D7                                             ___flmul 008E  
                                           ___flsub 1E89                                             ___fltol 13BA  
               adcConversionDoneHandler@new_channel 006F                                      uartHandler@str 0152  
                                           ___lwdiv 07C4                                             ___lwmod 1F89  
                                         ?_vfprintf 00D8                           ??_ADC_GetConversionResult 0072  
                                        _hoogte_bal 0146                                    ?_TMR6_Initialize 0070  
                                __end_of_TMR6_Tasks 1D9C                                        ??i1___xxtofl 0074  
                                           __ptext1 0880                                             __ptext2 1755  
                                           __ptext3 0C50                                             __ptext4 1C38  
                                           __ptext5 1C55                                             __ptext6 1C4B  
                                           __ptext7 1181                                             __ptext8 1EA9  
                                           __ptext9 1C2F                                           _T2CONbits 001F  
                             read_prec_or_width@fmt 00A6                     __end_of_updateLedstripAnimation 1BBB  
                                        ??___xxtofl 00A4                                    ___awmod@dividend 00A2  
                                         _T4CONbits 0417                            ??_PIN_MANAGER_Initialize 00A0  
                           _INT_SetInterruptHandler 1BE7                                           _T6CONbits 041E  
                                           atoi@neg 00AA                           printFloat@fractional_part 0152  
                                           clrloop0 1BC8                                end_of_initialization 008A  
                                           fputc@fp 00A5                         __end_ofi1_ADC_SelectChannel 1C6B  
                                        ??_readLine 00E9                                             init_ram 1000  
                                           fputs@fp 00AD                                             initloop 1001  
                                _read_prec_or_width 1291                                   _EUSART_Initialize 1006  
                                 __end_of_str2float 1800                                  __end_ofi1___xxtofl 16B0  
                                 __end_of_printLogs 0880             __end_of_TMR6_DefaultPeriodMatchCallback 0800  
                  ?_TMR6_DefaultPeriodMatchCallback 0070                   ??_TMR6_DefaultPeriodMatchCallback 00A0  
                   _TMR6_DefaultPeriodMatchCallback 07FF                                  ?_EUSART_Initialize 0070  
                                _position_led_strip 0B39                                   __end_of_vfpfcnvrt 0A31  
                                   _SPI1_BufferRead 0000                                   _EUSART_ReceiveISR 1085  
                               ?_read_prec_or_width 00A6                                    vfpfcnvrt@convarg 00D2  
                                        ??_vfprintf 00DD                                  ?_EUSART_ReceiveISR 0070  
                                         _SPI1_Open 1429                                 ??_EUSART_Initialize 00A2  
                               ?_position_led_strip 0070                               i1__Umul8_16@word_mpld 0076  
                                        _printFloat 1586                                 _SPI1_BufferExchange 0000  
                                       ___fladd@grs 00C1                                 ??_EUSART_ReceiveISR 0070  
               __end_of_ADC_DefaultInterruptHandler 1BB3                         _ADC_DefaultInterruptHandler 1BB2  
                                     ___xxtofl@sign 00A8     TMR6_PeriodMatchCallbackRegister@CallbackHandler 00A0  
   TMR4_PeriodMatchCallbackRegister@CallbackHandler 00A0            __end_of_TMR6_PeriodMatchCallbackRegister 1C1D  
                ??_TMR6_PeriodMatchCallbackRegister 00A2                   ?_TMR6_PeriodMatchCallbackRegister 00A0  
                  _TMR6_PeriodMatchCallbackRegister 1C14                                           i1___fladd 0DF4  
                              ??_read_prec_or_width 00A8                                           i1___flmul 02C9  
                                       ___fldiv@grs 00B4                                           i1___fltol 134B  
                                       ___fldiv@rem 00AD                                 _EUSART_Deinitialize 0000  
                                     ??_getSetpoint 00A2                          __end_of_initAdcMultiplexer 1CA9  
                              ??_position_led_strip 0152                                         ___flmul@grs 00D8  
                         __end_of_EUSART_Initialize 103D                       ??_ADC_DefaultInterruptHandler 0070  
                         ??_ADC_SetInterruptHandler 00A2                                     _SPI1_Initialize 1C41  
                                       ?_controller 0070                           __end_of_EUSART_ReceiveISR 10D7  
           __end_of_TMR2_DefaultPeriodMatchCallback 0003                   ??_TMR2_DefaultPeriodMatchCallback 0070  
                  ?_TMR2_DefaultPeriodMatchCallback 0070                     _TMR2_DefaultPeriodMatchCallback 0002  
                      __end_of_INTERRUPT_Initialize 1C77                                          ?_SPI1_Open 00A6  
                                       vfpfcnvrt@ap 00CC                                         vfpfcnvrt@cp 00D6  
                                       vfpfcnvrt@fp 00C9                                      __end_of___wmul 1E89  
                               str2float@multiplier 00E9                                        _EUSART_Write 1F34  
                                    _ADC_Initialize 1DC6                           ??_INT_SetInterruptHandler 00A2  
                                    __end_of_printf 1D21                                 start_initialization 005A  
                                       __end_of_abs 1D88                                          ?i1___fladd 003A  
                                       __end_of_pad 1085                                          ?i1___flmul 0020  
                                     ??_EUSART_Read 00A0                                          ?i1___fltol 003A  
          __end_of_TMR4_PeriodMatchCallbackRegister 1BF9                  ??_TMR4_PeriodMatchCallbackRegister 00A2  
                 ?_TMR4_PeriodMatchCallbackRegister 00A0                    _TMR4_PeriodMatchCallbackRegister 1BF0  
                                       putch@txData 00A2                           _EUSART_RxInterruptHandler 01D4  
                               __end_of_getSetpoint 1C0B                                     str2float@number 00EB  
                                       vfprintf@fmt 00DA                          _EUSART_FramingErrorHandler 005F  
                                          ??___wmul 00A4                              __end_of_ADC_Initialize 1DDC  
                                         __Umul8_16 1EEC                                        _initLedstrip 1CA9  
                                       __pdataBANK0 006C                                         __pdataBANK2 0168  
                             position_led_strip@led 0157                                            ?_ADC_ISR 0070  
                          _adcConversionDoneHandler 1F5C                                            ??_printf 00E6  
                                       ?_printFloat 014E                             ??_pwm_fan_LoadDutyValue 0072  
                                         ___fladd@a 00B2                                           ___fladd@b 00AE  
                                     _SPI1_ByteRead 0000                                           ___fldiv@a 00A0  
                                         ___fldiv@b 00A4                                           ___flmul@a 00CE  
                                         ___flmul@b 00CA                                           ___flsub@a 00C2  
                                         ___flsub@b 00C6                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                                     __pcstackBANK2 014E                             __end_of_SPI1_Initialize 1C4B  
                                 i1_getHoogtesensor 1BC1                                     i1___xxtofl@sign 0078  
                                ?i1_getHoogtesensor 0070                                   _sendLedstripFrame 1DF5  
                               __end_of_EUSART_Read 1EC9                              EUSART_Write@tempTxHead 00A1  
                                      _is_on_target 0064                                           __pnvBANK2 015E  
                                         __pnvBANK3 01D4                                  ?_sendLedstripFrame 00A1  
                                  ___lwdiv@dividend 00A2                              _PIN_MANAGER_Initialize 1FBC  
                               ??i1_getHoogtesensor 0072                                           _dtoa$2128 00C1  
                          _TMR4_PeriodMatchCallback 0160                                EUSART_Read@readValue 00A1  
                                 _ADC_SelectChannel 1C83                            i1__Umul8_16@multiplicand 0070  
                                          ?___fladd 00AE                                            ?___fldiv 00A0  
                                          ?___awdiv 00A0                                            ?___awmod 00A0  
                                          ?___flmul 00CA                                            ?___flsub 00C2  
                                          ?___fltol 00E4                                 ??_sendLedstripFrame 00A4  
                                        ?__Umul8_16 00A0                                            ?___lwdiv 00A0  
                                       ??_SPI1_Open 00A7                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 0068  
                                ?_ADC_SelectChannel 0070                                        _eusartTxHead 006B  
                                      _eusartRxTail 0067                                        _eusartTxTail 006A  
                      ??_INTERRUPT_InterruptManager 007E                                  getLedNumber@height 00EE  
                      EUSART_TransmitISR@tempTxTail 0070                             _eusartTxBufferRemaining 0069  
                                          _BAUD1CON 019F                                  getLedNumber@result 014E  
                            _EUSART_TransmitDisable 0000                                 ??_ADC_SelectChannel 00A0  
                         __end_ofi1_getHoogtesensor 1BC7                                         ??i1___fladd 0042  
                                       ??i1___flmul 0028                                         ??i1___fltol 003E  
                                  ___lwdiv@quotient 00A4                                    _getPotentiometer 1C0B  
                                       _getSetpoint 1C02                                       ??_setSetpoint 00AF  
                         __end_of_sendLedstripFrame 1E10                                    _EUSART_IsRxReady 1C2F  
                              _INTERRUPT_Initialize 1C6B                                           _integraal 0140  
                                  _EUSART_IsTxReady 1C26                                      _eusartRxBuffer 0130  
                                  _CLOCK_Initialize 1BDE                                           _dutycycle 0057  
                          ?_updateLedstripAnimation 0070                                      _eusartTxBuffer 0138  
                                    ___wmul@product 00A4                                            _LATAbits 010C  
                                         clear_ram0 1BC7                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 014C                                       ??_uartHandler 00F0  
                         __end_of_ADC_SelectChannel 1C8F                                            _PIR0bits 0010  
                                          _PIR1bits 0011                                            _PIR2bits 0012  
                                          _OSCSTAT1 091C                                          str2float@i 00EA  
                                         _str2float 1755                                            _SSP1CON1 0215  
                                          _SSP1CON3 0217                                            _TMR2_ISR 1CC6  
                                          _TMR4_ISR 1CD5                                            _SSP1STAT 0214  
                                         _printLogs 0805                            ??_sendLedstripStartFrame 00A1  
                                         _vfpfcnvrt 092E                                          _ADCON0bits 009D  
                                 _SPI1_Deinitialize 0000                                   ___wmul@multiplier 00A0  
                          ADC_SelectChannel@channel 00A1                                       readLine@index 0065  
                                       _EUSART_Read 1EA9                                    ?_SPI1_Initialize 0070  
                             ?_INTERRUPT_Initialize 0070                   _EUSART_RxCompleteInterruptHandler 0148  
                                 ??_TMR2_Initialize 00A0                                        ??_controller 004E  
                                     ??i1__Umul8_16 0072                                 __end_of_setSetpoint 1C41  
                                    str2float@digit 00EF                                  _initAdcMultiplexer 1C9C  
                                        vfprintf@ap 00DC                                          vfprintf@fp 00D8  
                          ?_ADC_GetConversionResult 0070                                          ?_str2float 00E4  
                        i1ADC_SelectChannel@channel 0071                                   ??_getHoogtesensor 00A2  
                                       ??__Umul8_16 00A2                                          ?_printLogs 0070  
                               __end_of_uartHandler 092E                          __end_of_EUSART_TransmitISR 1E2C  
                               ?_initAdcMultiplexer 0070                                          ?_vfpfcnvrt 00C9  
                                          ___xxtofl 16B0                                  __end_of_controller 0B39  
                                   ___lwdiv@divisor 00A0                                  _EUSART_AutoBaudSet 0000  
                                   ___lwdiv@counter 00A6                                            __ptext10 150D  
                                          __ptext11 0805                                            __ptext20 0710  
                                          __ptext12 1586                                            __ptext21 103D  
                                          __ptext13 1D11                                            __ptext30 1E89  
                                          __ptext22 1F10                                            __ptext14 1E2C  
                                          __ptext31 1D54                                            __ptext23 12ED  
                                          __ptext15 092E                                            __ptext40 1C0B  
                                          __ptext32 1D43                                            __ptext24 1D65  
                                          __ptext16 1499                                            __ptext41 1D88  
                                          __ptext33 1C1D                                            __ptext25 1F34  
                                          __ptext17 1F89                                            __ptext50 11DA  
                                          __ptext42 07FF                                            __ptext34 1CA9  
                                          __ptext26 1C26                                            __ptext18 07C4  
                                          __ptext51 16B0                                            __ptext43 1BB7  
                                          __ptext35 1C14                                            __ptext27 1D76  
                                          __ptext19 1291                                            __ptext60 1D02  
                                          __ptext52 13BA                                            __ptext44 0B39  
                                          __ptext36 1429                                            __ptext28 10D7  
                                          __ptext61 1D32                                            __ptext53 008E  
                                          __ptext45 1DB1                                            __ptext37 1E69  
                                          __ptext29 1235                                            __ptext70 1BDE  
                                          __ptext62 1D21                                            __ptext54 1EEC  
                                          __ptext46 1DF5                                            __ptext38 1C9C  
                                          __ptext71 1DC6                                            __ptext63 1C41  
                                          __ptext55 0504                                            __ptext47 1DDC  
                                          __ptext39 1C83                                            __ptext80 02C9  
                                          __ptext72 1BD5                                            __ptext64 1FBC  
                                          __ptext56 1BF9                                            __ptext48 1C8F  
                                          __ptext81 1EC9                                            __ptext65 1C6B  
                                          __ptext57 1BF0                                            __ptext49 1C02  
                                          __ptext90 1CB7                                            __ptext82 0DF4  
                                          __ptext74 1CD5                                            __ptext66 1BE7  
                                          __ptext58 1E4A                                            __ptext91 1BB2  
                                          __ptext83 1D9C                                            __ptext75 0003  
                                          __ptext67 1006                                            __ptext59 1C77  
                                          __ptext92 1F5C                                            __ptext84 1CC6  
                                          __ptext76 0A31                                            __ptext68 1CF3  
                                          __ptext93 1C5F                                            __ptext85 0002  
                                          __ptext77 1BC1                                            __ptext69 1CE4  
                                          __ptext94 1BBB                                            __ptext86 1E10  
                                          __ptext78 160C                                            __ptext87 1085  
                                          __ptext79 134B                                            __ptext88 1BB3  
                                          __ptext89 0800                                        _SSP1CON1bits 0215  
                              ??_initAdcMultiplexer 00A2                               _EUSART_TransmitEnable 0000  
                                          _ledstrip 1830                                            _readLine 1181  
                                 ??_TMR4_Initialize 00A0                          ??_adcConversionDoneHandler 0072  
                                        _RC1STAbits 019D                                            _setpoint 006C  
                                          int$flags 007E                                 __end_ofi1__Umul8_16 1EEC  
                                          _vfprintf 1E2C                  __end_of_INTERRUPT_InterruptManager 0058  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 1CF3  
             ??_EUSART_FramingErrorCallbackRegister 00A2                ?_EUSART_FramingErrorCallbackRegister 00A0  
               _EUSART_FramingErrorCallbackRegister 1CE4                                           printf@fmt 00E0  
                                     ?_getLedNumber 00EE                                        ??_printFloat 00EE  
                    pwm_fan_LoadDutyValue@dutyValue 0070                                          _INTCONbits 000B  
                     __end_of_pwm_fan_LoadDutyValue 1DB1                                _INT_InterruptHandler 0061  
                                    __pstringtext10 18BD                                      __pstringtext11 18CA  
                                    __pstringtext12 18D7                                      __pstringtext13 18EC  
                                    __pstringtext14 18F4                                      __pstringtext15 18FB  
                                    __pstringtext16 0000                              ??_INTERRUPT_Initialize 00A2  
                          position_led_strip@led_on 0158                            ?_ADC_SetInterruptHandler 00A0  
                          position_led_strip@target 0155                                         _setSetpoint 1C38  
                                          intlevel1 0000                              i1__Umul8_16@multiplier 0078  
                                  ___lwmod@dividend 00A2                           _EUSART_TxInterruptHandler 0164  
                           ?_PIN_MANAGER_Initialize 0070                                       ?_getDutycycle 00A0  
                                 ??_TMR6_Initialize 00A0                           SPI1_ByteExchange@byteData 00A0  
        __end_of_EUSART_DefaultFramingErrorCallback 0801                ??_EUSART_DefaultFramingErrorCallback 0070  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 0800  
                   __end_of_ADC_GetConversionResult 1BC1                                  __end_of_printFloat 160C  
                                  ??_ADC_Initialize 00A2                                         _uartHandler 0880  
                                       ??_str2float 00E8                                       _mustPrintLogs 006E  
                                          printf@ap 00E6                                    _SPI1_BufferWrite 0000  
                          __end_of_getPotentiometer 1C14                                         ??_printLogs 00F0  
                          ?_INT_SetInterruptHandler 00A0                            __end_of_EUSART_IsRxReady 1C38  
                                    ??_getLedNumber 00F0                                         ??_vfpfcnvrt 00CD  
                          __end_of_EUSART_IsTxReady 1C2F                                        str2float@str 00E4  
                          __end_of_CLOCK_Initialize 1BE7                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 18E2  
                                     __pstringtext4 184C                                       __pstringtext5 1865  
                                     __pstringtext6 187D                                       __pstringtext7 188E  
                                     __pstringtext8 189F                                       __pstringtext9 18AE  
                                        _SPI1_Close 0000                              __Umul8_16@multiplicand 00A0  
                                        _SSP1DATPPS 0E21                                          _SSP1CLKPPS 0E20  
                                   ___lwmod@divisor 00A0                                     ___lwmod@counter 00A4  
                                        _TX1STAbits 019E                                        ?_getSetpoint 00A0  
                            sendLedstripFrame@green 00A1                                       ___fladd@signs 00BE  
                                   controller@error 0053                                          _TMR6_Tasks 1D88  
                                EUSART_Write@txData 00A0                              _sendLedstripStartFrame 1DB1  
                    __end_of_PIN_MANAGER_Initialize 2000                                      ??_getDutycycle 00A2  
                                       _PWMTMRSbits 061F                                        ___fladd@aexp 00BF  
                                      ___fladd@bexp 00C0                               sendLedstripFrame@blue 00A2  
                              __Umul8_16@multiplier 00A8                             SPI1_Open@spiConfigIndex 00A6  
                              sendLedstripFrame@red 00A4                                         i1__Umul8_16 1EC9  
                          _TMR2_PeriodMatchCallback 0162                          __end_of_spi1_configuration 18EC  
                                 __Umul8_16@product 00A4  
